MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.40 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.40 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3DWEC62 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3DWEC62 new;
MPRINT(EM_DIAGRAM):   run;
2430250    filename emflow
2430250  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring AUTONEURAL9_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430251    *------------------------------------------------------------*;
2430252    * Ensmbl45: Scoring AUTONEURAL9_TRAIN data;
2430253    *------------------------------------------------------------*;
2430254    data EMWS8.Ensmbl45_TRAIN
2430255    / view=EMWS8.Ensmbl45_TRAIN
2430256    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl45_TRAIN / view=EMWS8.Ensmbl45_TRAIN ;
2430257    set EMWS8.AutoNeural9_TRAIN
2430258    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_TRAIN ;
2430259    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\EMFLOWSCORE.sas.
2430260   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430261   +* Ensmbl45: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Combine model for DepVar;
2430262   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430263   +* Ensmbl45: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 1 of 5;
2430264   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430265   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430266   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2430267   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2430268   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2430269   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430270   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430271   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2430272   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2430273   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2430274   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430275   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430276   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2430277   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2430278   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2430279   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430280   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430281   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2430282   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2430283   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2430284   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430285   +
2430286   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2430287   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2430287  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2430288   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2430289   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2430290   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2430291   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2430292   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2430293   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430294   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2430295   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2430296   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2430297   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430298   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430299   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2430300   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430301   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2430302   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2430303   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2430304   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430305   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2430306   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2430307   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2430308   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430309   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430310   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2430311   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2430312   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2430313   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430314   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430315   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2430316   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2430317   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2430318   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430319   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2430320   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2430321   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2430322   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2430323   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2430324   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2430325   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2430326   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2430327   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2430328   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2430329   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2430330   +LENGTH _WARN_ $4
2430331   +      F_DepVar  $ 12
2430332   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2430333   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2430334   +
2430335   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2430336   +
2430337   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2430338   +
2430339   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2430340   +
2430341   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2430342   +
2430343   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2430344   +
2430345   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2430346   +
2430347   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2430348   +
2430349   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2430350   +
2430351   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2430352   +
2430353   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2430354   +
2430355   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2430356   +
2430357   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2430358   +
2430359   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2430360   +
2430361   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2430362   +
2430363   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2430364   +
2430365   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2430366   +
2430367   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2430368   +
2430369   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2430370   +
2430371   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2430372   +
2430373   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2430374   +
2430375   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2430376   +
2430377   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2430378   +
2430379   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2430380   +
2430381   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2430382   +
2430383   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2430384   +
2430385   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2430386   +
2430387   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2430388   +
2430389   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2430390   +
2430391   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2430392   +
2430393   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2430394   +
2430395   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2430396   +
2430397   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2430398   +
2430399   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2430400   +
2430401   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2430402   +
2430403   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2430404   +
2430405   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2430406   +
2430407   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2430408   +
2430409   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2430410   +
2430411   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2430412   +
2430413   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2430414   +
2430415   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2430416   +
2430417   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2430418   +
2430419   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2430420   +
2430421   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2430422   +
2430423   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2430424   +
2430425   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2430426   +
2430427   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2430428   +
2430429   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2430430   +
2430431   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2430432   +
2430433   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2430434   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2430435   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2430436   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2430437   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2430438   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430439   +end;
MPRINT(EM_DIAGRAM):   end;
2430440   +else do;
MPRINT(EM_DIAGRAM):   else do;
2430441   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2430442   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2430443   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2430444   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2430445   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2430446   +   end;
MPRINT(EM_DIAGRAM):   end;
2430447   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2430448   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2430449   +   end;
MPRINT(EM_DIAGRAM):   end;
2430450   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2430451   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2430452   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2430453   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430454   +   end;
MPRINT(EM_DIAGRAM):   end;
2430455   +end;
MPRINT(EM_DIAGRAM):   end;
2430456   +
2430457   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2430458   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2430459   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2430460   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2430461   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2430462   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430463   +end;
MPRINT(EM_DIAGRAM):   end;
2430464   +else do;
MPRINT(EM_DIAGRAM):   else do;
2430465   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2430466   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2430467   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2430468   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2430469   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2430470   +   end;
MPRINT(EM_DIAGRAM):   end;
2430471   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2430472   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2430473   +   end;
MPRINT(EM_DIAGRAM):   end;
2430474   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2430475   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2430476   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2430477   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430478   +   end;
MPRINT(EM_DIAGRAM):   end;
2430479   +end;
MPRINT(EM_DIAGRAM):   end;
2430480   +
2430481   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2430482   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2430483   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2430484   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2430485   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2430486   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430487   +end;
MPRINT(EM_DIAGRAM):   end;
2430488   +else do;
MPRINT(EM_DIAGRAM):   else do;
2430489   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2430490   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2430491   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2430492   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2430493   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2430494   +   end;
MPRINT(EM_DIAGRAM):   end;
2430495   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2430496   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2430497   +   end;
MPRINT(EM_DIAGRAM):   end;
2430498   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2430499   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2430500   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2430501   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430502   +   end;
MPRINT(EM_DIAGRAM):   end;
2430503   +end;
MPRINT(EM_DIAGRAM):   end;
2430504   +
2430505   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2430506   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2430507   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2430508   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2430509   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2430510   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430511   +end;
MPRINT(EM_DIAGRAM):   end;
2430512   +else do;
MPRINT(EM_DIAGRAM):   else do;
2430513   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2430514   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2430515   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2430516   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2430517   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2430518   +   end;
MPRINT(EM_DIAGRAM):   end;
2430519   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2430520   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2430521   +   end;
MPRINT(EM_DIAGRAM):   end;
2430522   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2430523   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2430524   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2430525   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430526   +   end;
MPRINT(EM_DIAGRAM):   end;
2430527   +end;
MPRINT(EM_DIAGRAM):   end;
2430528   +
2430529   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2430530   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2430531   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2430532   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2430533   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2430534   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430535   +end;
MPRINT(EM_DIAGRAM):   end;
2430536   +else do;
MPRINT(EM_DIAGRAM):   else do;
2430537   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2430538   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2430539   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2430540   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2430541   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2430542   +   end;
MPRINT(EM_DIAGRAM):   end;
2430543   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2430544   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2430545   +   end;
MPRINT(EM_DIAGRAM):   end;
2430546   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2430547   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2430548   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2430549   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430550   +   end;
MPRINT(EM_DIAGRAM):   end;
2430551   +end;
MPRINT(EM_DIAGRAM):   end;
2430552   +
2430553   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2430554   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2430555   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2430556   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2430557   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2430558   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430559   +end;
MPRINT(EM_DIAGRAM):   end;
2430560   +else do;
MPRINT(EM_DIAGRAM):   else do;
2430561   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2430562   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2430563   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2430564   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2430565   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2430566   +   end;
MPRINT(EM_DIAGRAM):   end;
2430567   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2430568   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2430569   +   end;
MPRINT(EM_DIAGRAM):   end;
2430570   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2430571   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2430572   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2430573   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430574   +   end;
MPRINT(EM_DIAGRAM):   end;
2430575   +end;
MPRINT(EM_DIAGRAM):   end;
2430576   +
2430577   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2430578   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2430579   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2430580   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2430581   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2430582   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430583   +end;
MPRINT(EM_DIAGRAM):   end;
2430584   +else do;
MPRINT(EM_DIAGRAM):   else do;
2430585   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2430586   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2430587   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2430588   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2430589   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2430590   +   end;
MPRINT(EM_DIAGRAM):   end;
2430591   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2430592   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2430593   +   end;
MPRINT(EM_DIAGRAM):   end;
2430594   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2430595   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2430596   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2430597   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430598   +   end;
MPRINT(EM_DIAGRAM):   end;
2430599   +end;
MPRINT(EM_DIAGRAM):   end;
2430600   +
2430601   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2430602   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2430603   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2430604   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2430605   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2430606   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2430607   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2430608   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2430609   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2430610   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2430611   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2430612   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2430613   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2430614   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430615   +end;
MPRINT(EM_DIAGRAM):   end;
2430616   +else do;
MPRINT(EM_DIAGRAM):   else do;
2430617   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2430618   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2430619   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2430620   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2430621   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2430622   +   end;
MPRINT(EM_DIAGRAM):   end;
2430623   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2430624   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2430625   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2430626   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2430627   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2430628   +   end;
MPRINT(EM_DIAGRAM):   end;
2430629   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2430630   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2430631   +   end;
MPRINT(EM_DIAGRAM):   end;
2430632   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2430633   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2430634   +   end;
MPRINT(EM_DIAGRAM):   end;
2430635   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2430636   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2430637   +   end;
MPRINT(EM_DIAGRAM):   end;
2430638   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2430639   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2430640   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2430641   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2430642   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2430643   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2430644   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430645   +   end;
MPRINT(EM_DIAGRAM):   end;
2430646   +end;
MPRINT(EM_DIAGRAM):   end;
2430647   +
2430648   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2430649   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2430650   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2430651   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2430652   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2430653   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2430654   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2430655   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2430656   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2430657   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2430658   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2430659   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2430660   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2430661   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2430662   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430663   +end;
MPRINT(EM_DIAGRAM):   end;
2430664   +else do;
MPRINT(EM_DIAGRAM):   else do;
2430665   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2430666   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2430667   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2430668   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2430669   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2430670   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2430671   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2430672   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2430673   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2430674   +         end;
MPRINT(EM_DIAGRAM):   end;
2430675   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2430676   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2430677   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2430678   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2430679   +            end;
MPRINT(EM_DIAGRAM):   end;
2430680   +         end;
MPRINT(EM_DIAGRAM):   end;
2430681   +      end;
MPRINT(EM_DIAGRAM):   end;
2430682   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2430683   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2430684   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2430685   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2430686   +         end;
MPRINT(EM_DIAGRAM):   end;
2430687   +      end;
MPRINT(EM_DIAGRAM):   end;
2430688   +   end;
MPRINT(EM_DIAGRAM):   end;
2430689   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2430690   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2430691   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2430692   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2430693   +      end;
MPRINT(EM_DIAGRAM):   end;
2430694   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2430695   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2430696   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2430697   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2430698   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2430699   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2430700   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2430701   +         end;
MPRINT(EM_DIAGRAM):   end;
2430702   +      end;
MPRINT(EM_DIAGRAM):   end;
2430703   +   end;
MPRINT(EM_DIAGRAM):   end;
2430704   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2430705   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2430706   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2430707   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2430708   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2430709   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2430710   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430711   +   end;
MPRINT(EM_DIAGRAM):   end;
2430712   +end;
MPRINT(EM_DIAGRAM):   end;
2430713   +
2430714   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430715   +*** Checking missing input Interval
2430716   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2430717   +
2430718   +IF NMISS(
2430719   +   AcceptedCmpTotal ,
2430720   +   Age ,
2430721   +   Frq ,
2430722   +   Income ,
2430723   +   Kidhome ,
2430724   +   Mnt ,
2430725   +   MntFishProducts ,
2430726   +   MntFruits ,
2430727   +   MntGoldProds ,
2430728   +   MntMeatProducts ,
2430729   +   MntSweetProducts ,
2430730   +   MntWines ,
2430731   +   MonthsAsCustomer ,
2430732   +   NumCatalogPurchases ,
2430733   +   NumDealsPurchases ,
2430734   +   NumDistPurchases ,
2430735   +   NumStorePurchases ,
2430736   +   NumWebPurchases ,
2430737   +   NumWebVisitsMonth ,
2430738   +   RFMstat ,
2430739   +   RMntFrq ,
2430740   +   Recency ,
2430741   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2430742   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2430743   +
2430744   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430745   +END;
MPRINT(EM_DIAGRAM):   END;
2430746   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430747   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2430748   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430749   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2430750   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2430751   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2430752   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2430753   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2430754   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2430755   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2430756   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2430757   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2430758   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2430759   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2430760   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2430761   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2430762   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2430763   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2430764   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2430765   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2430766   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2430767   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2430768   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2430769   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2430770   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2430771   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2430772   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2430773   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2430774   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2430775   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2430776   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2430777   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2430778   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2430779   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2430780   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2430781   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2430782   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2430783   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2430784   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2430785   +END;
MPRINT(EM_DIAGRAM):   END;
2430786   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2430787   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2430788   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2430789   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2430790   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2430791   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2430792   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2430793   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2430794   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2430795   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2430796   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2430797   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2430798   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2430799   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2430800   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2430801   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2430802   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2430803   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2430804   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2430805   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2430806   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2430807   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2430808   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2430809   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2430810   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2430811   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2430812   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2430813   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2430814   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2430815   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2430816   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2430817   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2430818   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2430819   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2430820   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2430821   +   ELSE S_NumCatalogPurchases
2430822   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2430823   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2430824   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2430825   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2430826   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2430827   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2430828   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2430829   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2430830   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2430831   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2430832   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2430833   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2430834   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2430835   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2430836   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2430837   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2430838   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2430839   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2430840   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2430841   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2430842   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2430843   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2430844   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2430845   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2430846   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2430847   +END;
MPRINT(EM_DIAGRAM):   END;
2430848   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430849   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2430850   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430851   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430852   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2430853   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430855   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2430856   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430857   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2430858   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2430859   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2430860   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2430861   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2430862   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2430863   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2430864   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2430865   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2430866   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2430867   +          +    -1.09856598010056 * S_NumDealsPurchases
2430868   +          +    -0.10571850472514 * S_NumDistPurchases
2430869   +          +     0.11898210654227 * S_NumStorePurchases
2430870   +          +      0.5984912060231 * S_NumWebPurchases
2430871   +          +     0.78592531126942 * S_NumWebVisitsMonth
2430872   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2430873   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2430874   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 * 
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 * 
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts + 
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 * 
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines + 
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases + 
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases + 
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases + 
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 * 
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2430875   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2430876   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2430877   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2430878   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2430879   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2430880   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2430881   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2430882   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2430883   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2430884   +          +    -0.84042044250624 * S_NumDealsPurchases
2430885   +          +    -0.10246261015488 * S_NumDistPurchases
2430886   +          +     0.06886149708824 * S_NumStorePurchases
2430887   +          +     0.63156910388199 * S_NumWebPurchases
2430888   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2430889   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2430890   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2430891   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 * 
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 * 
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776 
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts + 
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 * 
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 * 
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 * 
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 * 
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq + 
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2430892   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2430893   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2430894   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2430895   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2430896   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2430897   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2430898   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2430899   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2430900   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2430901   +          +     0.45393712455366 * S_NumDealsPurchases
2430902   +          +    -0.25292198053552 * S_NumDistPurchases
2430903   +          +    -1.35582215064749 * S_NumStorePurchases
2430904   +          +    -0.83132202302639 * S_NumWebPurchases
2430905   +          +     1.87116225272678 * S_NumWebVisitsMonth
2430906   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2430907   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2430908   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 * 
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 * 
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts + 
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 * 
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines + 
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases + 
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases + 
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases + 
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 * 
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2430909   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2430910   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2430911   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2430912   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2430913   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 * 
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 + 
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 * 
HigherEducationBinary0 ;
2430914   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2430915   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2430916   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2430917   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2430918   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061 
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 + 
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 * 
HigherEducationBinary0 ;
2430919   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2430920   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2430921   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2430922   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2430923   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317 
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 + 
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 * 
HigherEducationBinary0 ;
2430924   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2430925   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2430926   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2430927   +          +      0.4695898100094 * Marital_StatusDivorced
2430928   +          +    -0.52137742289262 * Marital_StatusMarried
2430929   +          +    -0.32382086914936 * Marital_StatusSingle
2430930   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle + 
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation + 
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced + 
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle + 
-0.66163012672344 * Marital_StatusTogether ;
2430931   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2430932   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2430933   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2430934   +          +    -1.04858218653238 * Marital_StatusDivorced
2430935   +          +     2.41098335093061 * Marital_StatusMarried
2430936   +          +    -1.94696044861334 * Marital_StatusSingle
2430937   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle + 
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059 
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 * 
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 * 
Marital_StatusTogether ;
2430938   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2430939   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2430940   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2430941   +          +     0.42964114177062 * Marital_StatusDivorced
2430942   +          +    -0.38607635605816 * Marital_StatusMarried
2430943   +          +    -0.02157405407852 * Marital_StatusSingle
2430944   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle + 
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation + 
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced + 
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle + 
-0.59995619744527 * Marital_StatusTogether ;
2430945   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2430946   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2430947   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2430948   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2430949   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2430950   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2430951   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2430952   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2430953   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2430954   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2430955   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2430956   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2430957   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2430958   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2430959   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2430960   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2430961   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2430962   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2430963   +END;
MPRINT(EM_DIAGRAM):   END;
2430964   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2430965   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2430966   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2430967   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2430968   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2430969   +END;
MPRINT(EM_DIAGRAM):   END;
2430970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430971   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2430972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430973   +
2430974   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2430975   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2430976   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2430977   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2430978   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2430979   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2430980   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2430981   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2430982   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2430983   +end;
MPRINT(EM_DIAGRAM):   end;
2430984   +else do;
MPRINT(EM_DIAGRAM):   else do;
2430985   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2430986   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2430987   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2430988   +   end;
MPRINT(EM_DIAGRAM):   end;
2430989   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2430990   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2430991   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2430992   +   end;
MPRINT(EM_DIAGRAM):   end;
2430993   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2430994   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2430995   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2430996   +   end;
MPRINT(EM_DIAGRAM):   end;
2430997   +end;
MPRINT(EM_DIAGRAM):   end;
2430998   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2430999   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2431000   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 + 
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2431001   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2431002   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2431003   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2431004   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2431005   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2431006   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2431007   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2431008   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2431009   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2431010   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2431011   +END;
MPRINT(EM_DIAGRAM):   END;
2431012   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2431013   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2431014   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2431015   +END;
MPRINT(EM_DIAGRAM):   END;
2431016   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2431017   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2431018   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2431019   +END;
MPRINT(EM_DIAGRAM):   END;
2431020   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2431021   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2431022   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2431023   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2431024   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2431025   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2431026   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2431027   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431028   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2431029   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431030   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2431031   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2431032   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2431033   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2431034   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2431035   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2431036   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2431037   +END;
MPRINT(EM_DIAGRAM):   END;
2431038   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2431039   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2431040   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2431041   +drop
2431042   +H1x1_1
2431043   +H1x1_2
2431044   +H1x1_3
2431045   +H1x1_4
2431046   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2431047   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2431048   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2431049   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2431050   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2431051   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2431052   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2431053   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2431054   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2431055   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2431056   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2431057   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2431058   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2431059   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2431060   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2431061   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2431062   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2431063   +* Ensmbl45: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 2 of 5;
2431064   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2431065   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2431066   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2431067   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2431068   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2431069   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2431070   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2431071   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2431072   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2431073   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2431074   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2431075   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2431076   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2431077   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2431078   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2431079   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2431080   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2431081   +LENGTH _WARN_ $4
2431082   +      F_DepVar  $ 12
2431083   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2431084   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2431085   +
2431086   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2431087   +
2431088   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2431089   +
2431090   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2431091   +
2431092   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2431093   +
2431094   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2431095   +
2431096   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2431097   +
2431098   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2431099   +
2431100   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2431101   +
2431102   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2431103   +
2431104   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2431105   +
2431106   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2431107   +
2431108   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2431109   +
2431110   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2431111   +
2431112   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2431113   +
2431114   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2431115   +
2431116   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2431117   +
2431118   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2431119   +
2431120   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2431121   +
2431122   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2431123   +
2431124   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2431125   +
2431126   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2431127   +
2431128   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2431129   +
2431130   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2431131   +
2431132   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2431133   +
2431134   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2431135   +
2431136   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2431137   +
2431138   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2431139   +
2431140   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2431141   +
2431142   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2431143   +
2431144   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2431145   +
2431146   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2431147   +
2431148   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2431149   +
2431150   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2431151   +
2431152   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2431153   +
2431154   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2431155   +
2431156   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2431157   +
2431158   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2431159   +
2431160   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2431161   +
2431162   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2431163   +
2431164   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2431165   +
2431166   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2431167   +
2431168   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2431169   +
2431170   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2431171   +
2431172   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2431173   +
2431174   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2431175   +
2431176   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2431177   +
2431178   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2431179   +
2431180   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2431181   +
2431182   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2431183   +
2431184   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2431185   +
2431186   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2431187   +
2431188   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2431189   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2431190   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2431191   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2431192   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2431193   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431194   +end;
MPRINT(EM_DIAGRAM):   end;
2431195   +else do;
MPRINT(EM_DIAGRAM):   else do;
2431196   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2431197   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2431198   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2431199   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2431200   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2431201   +   end;
MPRINT(EM_DIAGRAM):   end;
2431202   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2431203   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2431204   +   end;
MPRINT(EM_DIAGRAM):   end;
2431205   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2431206   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2431207   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2431208   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431209   +   end;
MPRINT(EM_DIAGRAM):   end;
2431210   +end;
MPRINT(EM_DIAGRAM):   end;
2431211   +
2431212   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2431213   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2431214   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2431215   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2431216   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2431217   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431218   +end;
MPRINT(EM_DIAGRAM):   end;
2431219   +else do;
MPRINT(EM_DIAGRAM):   else do;
2431220   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2431221   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2431222   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2431223   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2431224   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2431225   +   end;
MPRINT(EM_DIAGRAM):   end;
2431226   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2431227   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2431228   +   end;
MPRINT(EM_DIAGRAM):   end;
2431229   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2431230   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2431231   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2431232   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431233   +   end;
MPRINT(EM_DIAGRAM):   end;
2431234   +end;
MPRINT(EM_DIAGRAM):   end;
2431235   +
2431236   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2431237   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2431238   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2431239   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2431240   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2431241   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431242   +end;
MPRINT(EM_DIAGRAM):   end;
2431243   +else do;
MPRINT(EM_DIAGRAM):   else do;
2431244   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2431245   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2431246   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2431247   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2431248   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2431249   +   end;
MPRINT(EM_DIAGRAM):   end;
2431250   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2431251   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2431252   +   end;
MPRINT(EM_DIAGRAM):   end;
2431253   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2431254   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2431255   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2431256   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431257   +   end;
MPRINT(EM_DIAGRAM):   end;
2431258   +end;
MPRINT(EM_DIAGRAM):   end;
2431259   +
2431260   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2431261   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2431262   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2431263   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2431264   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2431265   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431266   +end;
MPRINT(EM_DIAGRAM):   end;
2431267   +else do;
MPRINT(EM_DIAGRAM):   else do;
2431268   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2431269   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2431270   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2431271   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2431272   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2431273   +   end;
MPRINT(EM_DIAGRAM):   end;
2431274   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2431275   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2431276   +   end;
MPRINT(EM_DIAGRAM):   end;
2431277   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2431278   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2431279   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2431280   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431281   +   end;
MPRINT(EM_DIAGRAM):   end;
2431282   +end;
MPRINT(EM_DIAGRAM):   end;
2431283   +
2431284   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2431285   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2431286   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2431287   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2431288   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2431289   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431290   +end;
MPRINT(EM_DIAGRAM):   end;
2431291   +else do;
MPRINT(EM_DIAGRAM):   else do;
2431292   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2431293   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2431294   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2431295   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2431296   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2431297   +   end;
MPRINT(EM_DIAGRAM):   end;
2431298   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2431299   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2431300   +   end;
MPRINT(EM_DIAGRAM):   end;
2431301   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2431302   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2431303   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2431304   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431305   +   end;
MPRINT(EM_DIAGRAM):   end;
2431306   +end;
MPRINT(EM_DIAGRAM):   end;
2431307   +
2431308   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2431309   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2431310   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2431311   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2431312   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2431313   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431314   +end;
MPRINT(EM_DIAGRAM):   end;
2431315   +else do;
MPRINT(EM_DIAGRAM):   else do;
2431316   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2431317   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2431318   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2431319   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2431320   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2431321   +   end;
MPRINT(EM_DIAGRAM):   end;
2431322   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2431323   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2431324   +   end;
MPRINT(EM_DIAGRAM):   end;
2431325   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2431326   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2431327   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2431328   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431329   +   end;
MPRINT(EM_DIAGRAM):   end;
2431330   +end;
MPRINT(EM_DIAGRAM):   end;
2431331   +
2431332   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2431333   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2431334   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2431335   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2431336   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2431337   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431338   +end;
MPRINT(EM_DIAGRAM):   end;
2431339   +else do;
MPRINT(EM_DIAGRAM):   else do;
2431340   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2431341   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2431342   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2431343   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2431344   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2431345   +   end;
MPRINT(EM_DIAGRAM):   end;
2431346   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2431347   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2431348   +   end;
MPRINT(EM_DIAGRAM):   end;
2431349   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2431350   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2431351   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2431352   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431353   +   end;
MPRINT(EM_DIAGRAM):   end;
2431354   +end;
MPRINT(EM_DIAGRAM):   end;
2431355   +
2431356   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2431357   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2431358   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2431359   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2431360   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2431361   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2431362   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2431363   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2431364   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2431365   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2431366   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2431367   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2431368   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2431369   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431370   +end;
MPRINT(EM_DIAGRAM):   end;
2431371   +else do;
MPRINT(EM_DIAGRAM):   else do;
2431372   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2431373   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2431374   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2431375   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2431376   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2431377   +   end;
MPRINT(EM_DIAGRAM):   end;
2431378   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2431379   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2431380   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2431381   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2431382   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2431383   +   end;
MPRINT(EM_DIAGRAM):   end;
2431384   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2431385   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2431386   +   end;
MPRINT(EM_DIAGRAM):   end;
2431387   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2431388   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2431389   +   end;
MPRINT(EM_DIAGRAM):   end;
2431390   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2431391   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2431392   +   end;
MPRINT(EM_DIAGRAM):   end;
2431393   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2431394   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2431395   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2431396   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2431397   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2431398   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2431399   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431400   +   end;
MPRINT(EM_DIAGRAM):   end;
2431401   +end;
MPRINT(EM_DIAGRAM):   end;
2431402   +
2431403   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2431404   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2431405   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2431406   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2431407   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2431408   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2431409   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2431410   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2431411   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2431412   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2431413   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2431414   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2431415   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2431416   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2431417   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431418   +end;
MPRINT(EM_DIAGRAM):   end;
2431419   +else do;
MPRINT(EM_DIAGRAM):   else do;
2431420   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2431421   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2431422   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2431423   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2431424   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2431425   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2431426   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2431427   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2431428   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2431429   +         end;
MPRINT(EM_DIAGRAM):   end;
2431430   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2431431   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2431432   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2431433   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2431434   +            end;
MPRINT(EM_DIAGRAM):   end;
2431435   +         end;
MPRINT(EM_DIAGRAM):   end;
2431436   +      end;
MPRINT(EM_DIAGRAM):   end;
2431437   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2431438   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2431439   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2431440   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2431441   +         end;
MPRINT(EM_DIAGRAM):   end;
2431442   +      end;
MPRINT(EM_DIAGRAM):   end;
2431443   +   end;
MPRINT(EM_DIAGRAM):   end;
2431444   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2431445   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2431446   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2431447   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2431448   +      end;
MPRINT(EM_DIAGRAM):   end;
2431449   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2431450   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2431451   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2431452   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2431453   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2431454   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2431455   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2431456   +         end;
MPRINT(EM_DIAGRAM):   end;
2431457   +      end;
MPRINT(EM_DIAGRAM):   end;
2431458   +   end;
MPRINT(EM_DIAGRAM):   end;
2431459   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2431460   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2431461   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2431462   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2431463   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2431464   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2431465   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431466   +   end;
MPRINT(EM_DIAGRAM):   end;
2431467   +end;
MPRINT(EM_DIAGRAM):   end;
2431468   +
2431469   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431470   +*** Checking missing input Interval
2431471   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2431472   +
2431473   +IF NMISS(
2431474   +   AcceptedCmpTotal ,
2431475   +   Age ,
2431476   +   Frq ,
2431477   +   Income ,
2431478   +   Kidhome ,
2431479   +   Mnt ,
2431480   +   MntFishProducts ,
2431481   +   MntFruits ,
2431482   +   MntGoldProds ,
2431483   +   MntMeatProducts ,
2431484   +   MntSweetProducts ,
2431485   +   MntWines ,
2431486   +   MonthsAsCustomer ,
2431487   +   NumCatalogPurchases ,
2431488   +   NumDealsPurchases ,
2431489   +   NumDistPurchases ,
2431490   +   NumStorePurchases ,
2431491   +   NumWebPurchases ,
2431492   +   NumWebVisitsMonth ,
2431493   +   RFMstat ,
2431494   +   RMntFrq ,
2431495   +   Recency ,
2431496   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2431497   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2431498   +
2431499   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431500   +END;
MPRINT(EM_DIAGRAM):   END;
2431501   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431502   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2431503   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431504   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2431505   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2431506   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2431507   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2431508   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2431509   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2431510   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2431511   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2431512   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2431513   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2431514   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2431515   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2431516   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2431517   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2431518   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2431519   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2431520   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2431521   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2431522   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2431523   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2431524   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2431525   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2431526   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2431527   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2431528   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2431529   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2431530   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2431531   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2431532   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2431533   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2431534   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2431535   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2431536   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2431537   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2431538   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2431539   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2431540   +END;
MPRINT(EM_DIAGRAM):   END;
2431541   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2431542   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2431543   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2431544   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2431545   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2431546   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2431547   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2431548   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2431549   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2431550   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2431551   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2431552   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2431553   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2431554   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2431555   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2431556   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2431557   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2431558   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2431559   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2431560   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2431561   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2431562   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2431563   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2431564   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2431565   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2431566   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2431567   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2431568   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2431569   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2431570   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2431571   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2431572   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2431573   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2431574   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2431575   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2431576   +   ELSE S_NumCatalogPurchases
2431577   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2431578   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2431579   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2431580   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2431581   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2431582   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2431583   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2431584   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2431585   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2431586   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2431587   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2431588   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2431589   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2431590   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2431591   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2431592   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2431593   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2431594   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2431595   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2431596   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2431597   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2431598   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2431599   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2431600   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2431601   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2431602   +END;
MPRINT(EM_DIAGRAM):   END;
2431603   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431604   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2431605   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431606   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431607   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2431608   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431609   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431610   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2431611   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431612   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2431613   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2431614   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2431615   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2431616   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2431617   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2431618   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2431619   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2431620   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2431621   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2431622   +          +     0.19770934886328 * S_NumDealsPurchases
2431623   +          +      0.0515215988111 * S_NumDistPurchases
2431624   +          +    -0.34569346346089 * S_NumStorePurchases
2431625   +          +    -0.27122293596124 * S_NumWebPurchases
2431626   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2431627   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2431628   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2431629   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 * 
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome 
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 * 
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts + 
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 * 
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 * 
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 * 
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 * 
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq + 
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2431630   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2431631   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2431632   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2431633   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2431634   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2431635   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2431636   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2431637   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2431638   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2431639   +          +     0.54308887602031 * S_NumDealsPurchases
2431640   +          +    -0.22507315320192 * S_NumDistPurchases
2431641   +          +    -0.79861387328361 * S_NumStorePurchases
2431642   +          +    -0.45467494002747 * S_NumWebPurchases
2431643   +          +      0.2119048824613 * S_NumWebVisitsMonth
2431644   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2431645   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2431646   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 * 
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome 
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 * 
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts + 
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 * 
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 * 
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 * 
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 * 
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq + 
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2431647   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2431648   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2431649   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2431650   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2431651   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2431652   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2431653   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2431654   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2431655   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2431656   +          +     -0.0771083149302 * S_NumDealsPurchases
2431657   +          +     0.03403621221162 * S_NumDistPurchases
2431658   +          +     0.61303946422025 * S_NumStorePurchases
2431659   +          +     0.27126793634053 * S_NumWebPurchases
2431660   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2431661   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2431662   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2431663   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 * 
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 * 
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994 
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts + 
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 * 
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 * 
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 * 
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 * 
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq + 
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2431664   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2431665   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2431666   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2431667   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2431668   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2431669   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2431670   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2431671   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2431672   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2431673   +          +     0.29894603062327 * S_NumDealsPurchases
2431674   +          +     0.07614620530875 * S_NumDistPurchases
2431675   +          +     0.15402335009896 * S_NumStorePurchases
2431676   +          +     0.10615749096863 * S_NumWebPurchases
2431677   +          +     0.41962286816879 * S_NumWebVisitsMonth
2431678   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2431679   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2431680   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age 
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome + 
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 * 
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts + 
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 * 
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 * 
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 * 
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 * 
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq + 
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2431681   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2431682   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2431683   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2431684   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2431685   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2431686   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2431687   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2431688   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2431689   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2431690   +          +     0.14392502416642 * S_NumDealsPurchases
2431691   +          +    -0.10026304978633 * S_NumDistPurchases
2431692   +          +     -0.0588453022746 * S_NumStorePurchases
2431693   +          +     0.24799398610395 * S_NumWebPurchases
2431694   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2431695   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2431696   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2431697   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 * 
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 * 
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts + 
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 * 
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines + 
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases + 
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases + 
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases + 
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 * 
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2431698   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2431699   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2431700   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2431701   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2431702   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2431703   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2431704   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2431705   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2431706   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2431707   +          +     0.08149600854964 * S_NumDealsPurchases
2431708   +          +     0.16873541613513 * S_NumDistPurchases
2431709   +          +    -0.20437343413446 * S_NumStorePurchases
2431710   +          +     -0.1671107527288 * S_NumWebPurchases
2431711   +          +     0.03677043100993 * S_NumWebVisitsMonth
2431712   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2431713   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2431714   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 * 
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome 
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 * 
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts + 
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 * 
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 * 
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 * 
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 * 
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq + 
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2431715   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2431716   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2431717   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2431718   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2431719   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 * 
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 + 
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 * 
HigherEducationBinary0 ;
2431720   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2431721   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2431722   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2431723   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2431724   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 * 
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 + 
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 * 
HigherEducationBinary0 ;
2431725   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2431726   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2431727   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2431728   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2431729   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 * 
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 + 
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 * 
HigherEducationBinary0 ;
2431730   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2431731   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2431732   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2431733   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2431734   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911 
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 + 
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 * 
HigherEducationBinary0 ;
2431735   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2431736   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2431737   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2431738   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2431739   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357 
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 + 
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 * 
HigherEducationBinary0 ;
2431740   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2431741   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2431742   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2431743   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2431744   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 * 
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 + 
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 * 
HigherEducationBinary0 ;
2431745   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2431746   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2431747   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2431748   +          +    -0.31045295887604 * Marital_StatusDivorced
2431749   +          +    -0.01109401001539 * Marital_StatusMarried
2431750   +          +     0.01325135981025 * Marital_StatusSingle
2431751   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996 
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster 
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried + 
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2431752   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2431753   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2431754   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2431755   +          +     0.02275101861599 * Marital_StatusDivorced
2431756   +          +     0.20271548664903 * Marital_StatusMarried
2431757   +          +    -0.12132069210718 * Marital_StatusSingle
2431758   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle + 
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108 
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 * 
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 * 
Marital_StatusTogether ;
2431759   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2431760   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2431761   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2431762   +          +     -0.4992959703281 * Marital_StatusDivorced
2431763   +          +     0.62071659624138 * Marital_StatusMarried
2431764   +          +    -0.21776202274494 * Marital_StatusSingle
2431765   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle + 
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308 
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 * 
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 * 
Marital_StatusTogether ;
2431766   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2431767   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2431768   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2431769   +          +     0.05626212670587 * Marital_StatusDivorced
2431770   +          +     0.14353891364597 * Marital_StatusMarried
2431771   +          +    -0.29006765622997 * Marital_StatusSingle
2431772   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle + 
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation + 
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced + 
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle + 
0.05503638282535 * Marital_StatusTogether ;
2431773   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2431774   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2431775   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2431776   +          +    -0.21206913700604 * Marital_StatusDivorced
2431777   +          +     0.58790643614629 * Marital_StatusMarried
2431778   +          +    -0.65995982578062 * Marital_StatusSingle
2431779   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle + 
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation + 
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced + 
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle + 
0.49642503732428 * Marital_StatusTogether ;
2431780   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2431781   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2431782   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2431783   +          +    -0.05047370516008 * Marital_StatusDivorced
2431784   +          +    -0.23139090963669 * Marital_StatusMarried
2431785   +          +     0.04816197463249 * Marital_StatusSingle
2431786   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle + 
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation + 
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced + 
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle + 
0.04977890114896 * Marital_StatusTogether ;
2431787   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2431788   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2431789   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2431790   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2431791   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2431792   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2431793   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2431794   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2431795   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2431796   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2431797   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2431798   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2431799   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2431800   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2431801   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2431802   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2431803   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2431804   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2431805   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2431806   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2431807   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2431808   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2431809   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2431810   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2431811   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2431812   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2431813   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2431814   +END;
MPRINT(EM_DIAGRAM):   END;
2431815   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2431816   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2431817   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2431818   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2431819   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2431820   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2431821   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2431822   +END;
MPRINT(EM_DIAGRAM):   END;
2431823   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431824   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2431825   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431826   +
2431827   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2431828   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2431829   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2431830   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2431831   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2431832   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2431833   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2431834   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2431835   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2431836   +end;
MPRINT(EM_DIAGRAM):   end;
2431837   +else do;
MPRINT(EM_DIAGRAM):   else do;
2431838   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2431839   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2431840   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2431841   +   end;
MPRINT(EM_DIAGRAM):   end;
2431842   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2431843   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2431844   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2431845   +   end;
MPRINT(EM_DIAGRAM):   end;
2431846   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2431847   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2431848   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2431849   +   end;
MPRINT(EM_DIAGRAM):   end;
2431850   +end;
MPRINT(EM_DIAGRAM):   end;
2431851   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2431852   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2431853   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2431854   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 + 
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 + 
-0.0100306049679 * H1x1_6 ;
2431855   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2431856   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2431857   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2431858   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2431859   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2431860   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2431861   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2431862   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2431863   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2431864   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2431865   +END;
MPRINT(EM_DIAGRAM):   END;
2431866   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2431867   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2431868   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2431869   +END;
MPRINT(EM_DIAGRAM):   END;
2431870   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2431871   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2431872   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2431873   +END;
MPRINT(EM_DIAGRAM):   END;
2431874   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2431875   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2431876   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2431877   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2431878   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2431879   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2431880   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2431881   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431882   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2431883   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431884   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2431885   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2431886   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2431887   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2431888   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2431889   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2431890   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2431891   +END;
MPRINT(EM_DIAGRAM):   END;
2431892   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2431893   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2431894   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2431895   +drop
2431896   +H1x1_1
2431897   +H1x1_2
2431898   +H1x1_3
2431899   +H1x1_4
2431900   +H1x1_5
2431901   +H1x1_6
2431902   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2431903   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2431904   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2431905   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2431906   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2431907   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2431908   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2431909   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2431910   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2431911   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2431912   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2431913   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2431914   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2431915   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2431916   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2431917   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2431918   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2431919   +* Ensmbl45: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 3 of 5;
2431920   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2431921   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2431922   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2431923   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2431924   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2431925   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2431926   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2431927   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2431928   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2431929   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2431930   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2431931   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2431932   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2431933   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2431934   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2431935   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2431936   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2431937   +LENGTH _WARN_ $4
2431938   +      F_DepVar  $ 12
2431939   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2431940   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2431941   +
2431942   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2431943   +
2431944   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2431945   +
2431946   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2431947   +
2431948   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2431949   +
2431950   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2431951   +
2431952   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2431953   +
2431954   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2431955   +
2431956   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2431957   +
2431958   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2431959   +
2431960   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2431961   +
2431962   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2431963   +
2431964   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2431965   +
2431966   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2431967   +
2431968   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2431969   +
2431970   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2431971   +
2431972   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2431973   +
2431974   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2431975   +
2431976   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2431977   +
2431978   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2431979   +
2431980   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2431981   +
2431982   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2431983   +
2431984   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2431985   +
2431986   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2431987   +
2431988   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2431989   +
2431990   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2431991   +
2431992   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2431993   +
2431994   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2431995   +
2431996   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2431997   +
2431998   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2431999   +
2432000   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2432001   +
2432002   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2432003   +
2432004   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2432005   +
2432006   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2432007   +
2432008   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2432009   +
2432010   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2432011   +
2432012   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2432013   +
2432014   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2432015   +
2432016   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2432017   +
2432018   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2432019   +
2432020   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2432021   +
2432022   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2432023   +
2432024   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2432025   +
2432026   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2432027   +
2432028   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2432029   +
2432030   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2432031   +
2432032   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2432033   +
2432034   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2432035   +
2432036   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2432037   +
2432038   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2432039   +
2432040   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2432041   +
2432042   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2432043   +
2432044   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2432045   +
2432046   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2432047   +
2432048   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2432049   +
2432050   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2432051   +
2432052   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2432053   +
2432054   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2432055   +
2432056   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2432057   +
2432058   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2432059   +
2432060   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2432061   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2432062   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2432063   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2432064   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2432065   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432066   +end;
MPRINT(EM_DIAGRAM):   end;
2432067   +else do;
MPRINT(EM_DIAGRAM):   else do;
2432068   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2432069   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2432070   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2432071   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2432072   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2432073   +   end;
MPRINT(EM_DIAGRAM):   end;
2432074   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2432075   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2432076   +   end;
MPRINT(EM_DIAGRAM):   end;
2432077   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2432078   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2432079   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2432080   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432081   +   end;
MPRINT(EM_DIAGRAM):   end;
2432082   +end;
MPRINT(EM_DIAGRAM):   end;
2432083   +
2432084   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2432085   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2432086   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2432087   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2432088   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2432089   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432090   +end;
MPRINT(EM_DIAGRAM):   end;
2432091   +else do;
MPRINT(EM_DIAGRAM):   else do;
2432092   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2432093   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2432094   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2432095   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2432096   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2432097   +   end;
MPRINT(EM_DIAGRAM):   end;
2432098   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2432099   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2432100   +   end;
MPRINT(EM_DIAGRAM):   end;
2432101   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2432102   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2432103   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2432104   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432105   +   end;
MPRINT(EM_DIAGRAM):   end;
2432106   +end;
MPRINT(EM_DIAGRAM):   end;
2432107   +
2432108   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2432109   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2432110   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2432111   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2432112   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2432113   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432114   +end;
MPRINT(EM_DIAGRAM):   end;
2432115   +else do;
MPRINT(EM_DIAGRAM):   else do;
2432116   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2432117   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2432118   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2432119   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2432120   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2432121   +   end;
MPRINT(EM_DIAGRAM):   end;
2432122   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2432123   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2432124   +   end;
MPRINT(EM_DIAGRAM):   end;
2432125   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2432126   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2432127   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2432128   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432129   +   end;
MPRINT(EM_DIAGRAM):   end;
2432130   +end;
MPRINT(EM_DIAGRAM):   end;
2432131   +
2432132   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2432133   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2432134   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2432135   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2432136   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2432137   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432138   +end;
MPRINT(EM_DIAGRAM):   end;
2432139   +else do;
MPRINT(EM_DIAGRAM):   else do;
2432140   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2432141   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2432142   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2432143   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2432144   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2432145   +   end;
MPRINT(EM_DIAGRAM):   end;
2432146   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2432147   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2432148   +   end;
MPRINT(EM_DIAGRAM):   end;
2432149   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2432150   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2432151   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2432152   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432153   +   end;
MPRINT(EM_DIAGRAM):   end;
2432154   +end;
MPRINT(EM_DIAGRAM):   end;
2432155   +
2432156   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2432157   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2432158   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2432159   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2432160   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2432161   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432162   +end;
MPRINT(EM_DIAGRAM):   end;
2432163   +else do;
MPRINT(EM_DIAGRAM):   else do;
2432164   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2432165   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2432166   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2432167   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2432168   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2432169   +   end;
MPRINT(EM_DIAGRAM):   end;
2432170   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2432171   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2432172   +   end;
MPRINT(EM_DIAGRAM):   end;
2432173   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2432174   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2432175   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2432176   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432177   +   end;
MPRINT(EM_DIAGRAM):   end;
2432178   +end;
MPRINT(EM_DIAGRAM):   end;
2432179   +
2432180   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2432181   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2432182   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2432183   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2432184   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2432185   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432186   +end;
MPRINT(EM_DIAGRAM):   end;
2432187   +else do;
MPRINT(EM_DIAGRAM):   else do;
2432188   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2432189   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2432190   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2432191   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2432192   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2432193   +   end;
MPRINT(EM_DIAGRAM):   end;
2432194   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2432195   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2432196   +   end;
MPRINT(EM_DIAGRAM):   end;
2432197   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2432198   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2432199   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2432200   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432201   +   end;
MPRINT(EM_DIAGRAM):   end;
2432202   +end;
MPRINT(EM_DIAGRAM):   end;
2432203   +
2432204   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2432205   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2432206   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2432207   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2432208   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2432209   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432210   +end;
MPRINT(EM_DIAGRAM):   end;
2432211   +else do;
MPRINT(EM_DIAGRAM):   else do;
2432212   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2432213   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2432214   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2432215   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2432216   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2432217   +   end;
MPRINT(EM_DIAGRAM):   end;
2432218   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2432219   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2432220   +   end;
MPRINT(EM_DIAGRAM):   end;
2432221   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2432222   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2432223   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2432224   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432225   +   end;
MPRINT(EM_DIAGRAM):   end;
2432226   +end;
MPRINT(EM_DIAGRAM):   end;
2432227   +
2432228   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2432229   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2432230   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2432231   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2432232   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2432233   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2432234   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2432235   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2432236   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2432237   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2432238   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2432239   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2432240   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2432241   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432242   +end;
MPRINT(EM_DIAGRAM):   end;
2432243   +else do;
MPRINT(EM_DIAGRAM):   else do;
2432244   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2432245   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2432246   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2432247   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2432248   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2432249   +   end;
MPRINT(EM_DIAGRAM):   end;
2432250   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2432251   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2432252   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2432253   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2432254   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2432255   +   end;
MPRINT(EM_DIAGRAM):   end;
2432256   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2432257   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2432258   +   end;
MPRINT(EM_DIAGRAM):   end;
2432259   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2432260   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2432261   +   end;
MPRINT(EM_DIAGRAM):   end;
2432262   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2432263   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2432264   +   end;
MPRINT(EM_DIAGRAM):   end;
2432265   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2432266   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2432267   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2432268   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2432269   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2432270   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2432271   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432272   +   end;
MPRINT(EM_DIAGRAM):   end;
2432273   +end;
MPRINT(EM_DIAGRAM):   end;
2432274   +
2432275   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2432276   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2432277   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2432278   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2432279   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2432280   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2432281   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2432282   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2432283   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2432284   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2432285   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2432286   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2432287   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2432288   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2432289   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432290   +end;
MPRINT(EM_DIAGRAM):   end;
2432291   +else do;
MPRINT(EM_DIAGRAM):   else do;
2432292   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2432293   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2432294   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2432295   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2432296   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2432297   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2432298   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2432299   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2432300   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2432301   +         end;
MPRINT(EM_DIAGRAM):   end;
2432302   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2432303   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2432304   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2432305   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2432306   +            end;
MPRINT(EM_DIAGRAM):   end;
2432307   +         end;
MPRINT(EM_DIAGRAM):   end;
2432308   +      end;
MPRINT(EM_DIAGRAM):   end;
2432309   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2432310   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2432311   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2432312   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2432313   +         end;
MPRINT(EM_DIAGRAM):   end;
2432314   +      end;
MPRINT(EM_DIAGRAM):   end;
2432315   +   end;
MPRINT(EM_DIAGRAM):   end;
2432316   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2432317   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2432318   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2432319   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2432320   +      end;
MPRINT(EM_DIAGRAM):   end;
2432321   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2432322   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2432323   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2432324   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2432325   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2432326   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2432327   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2432328   +         end;
MPRINT(EM_DIAGRAM):   end;
2432329   +      end;
MPRINT(EM_DIAGRAM):   end;
2432330   +   end;
MPRINT(EM_DIAGRAM):   end;
2432331   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2432332   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2432333   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2432334   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2432335   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2432336   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2432337   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432338   +   end;
MPRINT(EM_DIAGRAM):   end;
2432339   +end;
MPRINT(EM_DIAGRAM):   end;
2432340   +
2432341   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432342   +*** Checking missing input Interval
2432343   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2432344   +
2432345   +IF NMISS(
2432346   +   AcceptedCmpTotal ,
2432347   +   Age ,
2432348   +   Frq ,
2432349   +   Income ,
2432350   +   Kidhome ,
2432351   +   Mnt ,
2432352   +   MntFishProducts ,
2432353   +   MntFruits ,
2432354   +   MntGoldProds ,
2432355   +   MntMeatProducts ,
2432356   +   MntSweetProducts ,
2432357   +   MntWines ,
2432358   +   MonthsAsCustomer ,
2432359   +   NumCatalogPurchases ,
2432360   +   NumDealsPurchases ,
2432361   +   NumDistPurchases ,
2432362   +   NumStorePurchases ,
2432363   +   NumWebPurchases ,
2432364   +   NumWebVisitsMonth ,
2432365   +   RFMstat ,
2432366   +   RMntFrq ,
2432367   +   Recency ,
2432368   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2432369   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2432370   +
2432371   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432372   +END;
MPRINT(EM_DIAGRAM):   END;
2432373   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432374   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2432375   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432376   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2432377   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2432378   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2432379   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2432380   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2432381   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2432382   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2432383   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2432384   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2432385   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2432386   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2432387   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2432388   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2432389   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2432390   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2432391   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2432392   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2432393   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2432394   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2432395   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2432396   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2432397   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2432398   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2432399   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2432400   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2432401   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2432402   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2432403   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2432404   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2432405   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2432406   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2432407   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2432408   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2432409   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2432410   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2432411   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2432412   +END;
MPRINT(EM_DIAGRAM):   END;
2432413   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2432414   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2432415   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2432416   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2432417   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2432418   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2432419   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2432420   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2432421   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2432422   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2432423   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2432424   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2432425   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2432426   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2432427   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2432428   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2432429   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2432430   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2432431   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2432432   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2432433   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2432434   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2432435   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2432436   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2432437   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2432438   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2432439   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2432440   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2432441   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2432442   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2432443   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2432444   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2432445   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2432446   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2432447   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2432448   +   ELSE S_NumCatalogPurchases
2432449   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2432450   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2432451   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2432452   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2432453   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2432454   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2432455   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2432456   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2432457   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2432458   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2432459   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2432460   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2432461   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2432462   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2432463   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2432464   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2432465   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2432466   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2432467   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2432468   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2432469   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2432470   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2432471   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2432472   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2432473   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2432474   +END;
MPRINT(EM_DIAGRAM):   END;
2432475   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432476   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2432477   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432478   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432479   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2432480   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432481   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432482   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2432483   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432484   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2432485   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2432486   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2432487   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2432488   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2432489   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2432490   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2432491   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2432492   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2432493   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2432494   +          +      0.1112677116841 * S_NumDealsPurchases
2432495   +          +     0.01563584187072 * S_NumDistPurchases
2432496   +          +     0.19193969522995 * S_NumStorePurchases
2432497   +          +      0.3133556199984 * S_NumWebPurchases
2432498   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2432499   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2432500   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2432501   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 * 
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome 
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 * 
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts + 
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 * 
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 * 
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 * 
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 * 
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq + 
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2432502   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2432503   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2432504   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2432505   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2432506   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2432507   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2432508   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2432509   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2432510   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2432511   +          +     0.30225032753275 * S_NumDealsPurchases
2432512   +          +     0.33833359923595 * S_NumDistPurchases
2432513   +          +    -0.20255599575849 * S_NumStorePurchases
2432514   +          +    -0.12040071168942 * S_NumWebPurchases
2432515   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2432516   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2432517   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2432518   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 * 
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome 
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 * 
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts + 
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 * 
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 * 
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 * 
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 * 
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq + 
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2432519   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2432520   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2432521   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2432522   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2432523   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2432524   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2432525   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2432526   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2432527   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2432528   +          +     0.16792903091627 * S_NumDealsPurchases
2432529   +          +    -0.37408945626745 * S_NumDistPurchases
2432530   +          +    -0.18067262995566 * S_NumStorePurchases
2432531   +          +     0.21192146789881 * S_NumWebPurchases
2432532   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2432533   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2432534   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2432535   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 * 
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 * 
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts + 
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 * 
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines + 
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases + 
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases + 
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases + 
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 * 
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2432536   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2432537   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2432538   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2432539   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2432540   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2432541   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2432542   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2432543   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2432544   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2432545   +          +     0.29407429399136 * S_NumDealsPurchases
2432546   +          +     0.01610745252195 * S_NumDistPurchases
2432547   +          +    -0.17767939085628 * S_NumStorePurchases
2432548   +          +    -0.15168958538637 * S_NumWebPurchases
2432549   +          +     0.17433622143988 * S_NumWebVisitsMonth
2432550   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2432551   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2432552   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 * 
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 * 
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts + 
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 * 
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines + 
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases + 
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases + 
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases + 
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 * 
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2432553   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2432554   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2432555   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2432556   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2432557   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2432558   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2432559   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2432560   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2432561   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2432562   +          +    -0.37976451362108 * S_NumDealsPurchases
2432563   +          +    -0.17027731520801 * S_NumDistPurchases
2432564   +          +     0.59849493667087 * S_NumStorePurchases
2432565   +          +     0.65481480560301 * S_NumWebPurchases
2432566   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2432567   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2432568   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2432569   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 * 
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 * 
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts + 
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 * 
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines + 
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases + 
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases + 
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases + 
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 * 
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2432570   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2432571   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2432572   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2432573   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2432574   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2432575   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2432576   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2432577   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2432578   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2432579   +          +    -0.07686699131623 * S_NumDealsPurchases
2432580   +          +    -0.07220460738926 * S_NumDistPurchases
2432581   +          +    -0.06554027468389 * S_NumStorePurchases
2432582   +          +     0.10422838158001 * S_NumWebPurchases
2432583   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2432584   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2432585   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2432586   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 * 
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome 
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 * 
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts + 
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 * 
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 * 
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 * 
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 * 
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq + 
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2432587   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2432588   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2432589   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2432590   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2432591   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2432592   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2432593   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2432594   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2432595   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2432596   +          +    -0.07920122387563 * S_NumDealsPurchases
2432597   +          +      0.3649244061347 * S_NumDistPurchases
2432598   +          +     0.36475853688403 * S_NumStorePurchases
2432599   +          +     0.02153991404063 * S_NumWebPurchases
2432600   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2432601   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2432602   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2432603   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 * 
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome 
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 * 
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts + 
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 * 
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 * 
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 * 
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 * 
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq + 
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2432604   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2432605   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2432606   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2432607   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2432608   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 * 
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 + 
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 * 
HigherEducationBinary0 ;
2432609   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2432610   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2432611   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2432612   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2432613   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176 
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 + 
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 * 
HigherEducationBinary0 ;
2432614   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2432615   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2432616   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2432617   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2432618   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 * 
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 + 
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 * 
HigherEducationBinary0 ;
2432619   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2432620   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2432621   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2432622   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2432623   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073 
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 + 
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 * 
HigherEducationBinary0 ;
2432624   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2432625   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2432626   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2432627   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2432628   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265 
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 + 
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 * 
HigherEducationBinary0 ;
2432629   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2432630   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2432631   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2432632   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2432633   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 * 
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 + 
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 * 
HigherEducationBinary0 ;
2432634   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2432635   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2432636   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2432637   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2432638   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 * 
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 + 
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 * 
HigherEducationBinary0 ;
2432639   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2432640   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2432641   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2432642   +          +     0.07744097241553 * Marital_StatusDivorced
2432643   +          +     -0.0247463100385 * Marital_StatusMarried
2432644   +          +     0.05804915234573 * Marital_StatusSingle
2432645   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle + 
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation + 
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced + 
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle + 
-0.08320125047871 * Marital_StatusTogether ;
2432646   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2432647   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2432648   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2432649   +          +     0.01390668926269 * Marital_StatusDivorced
2432650   +          +     0.01136282152074 * Marital_StatusMarried
2432651   +          +     0.12450246418789 * Marital_StatusSingle
2432652   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle + 
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694 
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 * 
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 * 
Marital_StatusTogether ;
2432653   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2432654   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2432655   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2432656   +          +    -0.19133456931879 * Marital_StatusDivorced
2432657   +          +     0.56263566654996 * Marital_StatusMarried
2432658   +          +    -0.42172822038882 * Marital_StatusSingle
2432659   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle + 
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145 
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 * 
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 * 
Marital_StatusTogether ;
2432660   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2432661   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2432662   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2432663   +          +    -0.19871205065609 * Marital_StatusDivorced
2432664   +          +    -0.14730795681603 * Marital_StatusMarried
2432665   +          +     0.05055432510362 * Marital_StatusSingle
2432666   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle + 
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation + 
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced + 
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle + 
0.06558965292395 * Marital_StatusTogether ;
2432667   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2432668   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2432669   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2432670   +          +    -0.35623807358995 * Marital_StatusDivorced
2432671   +          +     0.30324726283965 * Marital_StatusMarried
2432672   +          +    -0.18561093467927 * Marital_StatusSingle
2432673   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle + 
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation + 
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced + 
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle + 
0.395424582152 * Marital_StatusTogether ;
2432674   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2432675   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2432676   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2432677   +          +     0.11581014663368 * Marital_StatusDivorced
2432678   +          +    -0.31070638037659 * Marital_StatusMarried
2432679   +          +     0.17131747253949 * Marital_StatusSingle
2432680   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle + 
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541 
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 * 
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 * 
Marital_StatusTogether ;
2432681   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2432682   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2432683   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2432684   +          +    -0.42450599871892 * Marital_StatusDivorced
2432685   +          +     0.48162905075885 * Marital_StatusMarried
2432686   +          +    -0.26618507749283 * Marital_StatusSingle
2432687   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle + 
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922 
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 * 
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 * 
Marital_StatusTogether ;
2432688   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2432689   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2432690   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2432691   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2432692   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2432693   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2432694   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2432695   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2432696   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2432697   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2432698   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2432699   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2432700   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2432701   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2432702   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2432703   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2432704   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2432705   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2432706   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2432707   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2432708   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2432709   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2432710   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2432711   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2432712   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2432713   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2432714   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2432715   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2432716   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2432717   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 * 
H1x1_7 ;
2432718   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2432719   +END;
MPRINT(EM_DIAGRAM):   END;
2432720   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2432721   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2432722   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2432723   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2432724   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2432725   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2432726   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2432727   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2432728   +END;
MPRINT(EM_DIAGRAM):   END;
2432729   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432730   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
The SAS System

2432731   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432732   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2432733   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2432734   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2432735   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2432736   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2432737   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2432738   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2432739   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2432740   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2432741   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2432742   +          +     1.96719021971894 * S_NumDealsPurchases
2432743   +          +    -0.44535354794671 * S_NumDistPurchases
2432744   +          +    -0.54827762736866 * S_NumStorePurchases
2432745   +          +     1.02703310241897 * S_NumWebPurchases
2432746   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2432747   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2432748   +        S_RMntFrq  +       0.651688575044 * S_Recency
2432749   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 * 
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome 
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 * 
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts + 
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 * 
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 * 
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 * 
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 * 
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq + 
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2432750   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2432751   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2432752   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2432753   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2432754   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2432755   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2432756   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2432757   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2432758   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2432759   +          +     1.34659447971131 * S_NumDealsPurchases
2432760   +          +    -0.51624251310423 * S_NumDistPurchases
2432761   +          +      -1.283121574848 * S_NumStorePurchases
2432762   +          +    -1.83517806228926 * S_NumWebPurchases
2432763   +          +     0.51321339475285 * S_NumWebVisitsMonth
2432764   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2432765   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2432766   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 * 
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 * 
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts + 
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 * 
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines + 
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases + 
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases + 
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases + 
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 * 
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2432767   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2432768   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2432769   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2432770   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2432771   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2432772   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2432773   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2432774   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2432775   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2432776   +          +     0.67492297345004 * S_NumDealsPurchases
2432777   +          +    -0.40437875375926 * S_NumDistPurchases
2432778   +          +     0.36322603681545 * S_NumStorePurchases
2432779   +          +    -1.15315070635524 * S_NumWebPurchases
2432780   +          +     1.20707272201156 * S_NumWebVisitsMonth
2432781   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2432782   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2432783   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 * 
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome 
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 * 
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts + 
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 * 
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 * 
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 * 
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 * 
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq + 
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2432784   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2432785   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2432786   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2432787   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2432788   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2432789   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2432790   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2432791   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2432792   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2432793   +          +    -0.41427983342148 * S_NumDealsPurchases
2432794   +          +    -0.22714305629205 * S_NumDistPurchases
2432795   +          +    -0.78763182048862 * S_NumStorePurchases
2432796   +          +    -0.26669253451501 * S_NumWebPurchases
2432797   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2432798   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2432799   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2432800   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 * 
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 * 
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts + 
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 * 
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines + 
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases + 
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases + 
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases + 
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 * 
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2432801   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2432802   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2432803   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2432804   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2432805   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2432806   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2432807   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2432808   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2432809   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2432810   +          +      0.7697882092212 * S_NumDealsPurchases
2432811   +          +     0.51864835453056 * S_NumDistPurchases
2432812   +          +    -1.18320366630444 * S_NumStorePurchases
2432813   +          +     -0.6608394639529 * S_NumWebPurchases
2432814   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2432815   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2432816   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2432817   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 * 
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome 
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 * 
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts + 
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 * 
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 * 
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 * 
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 * 
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq + 
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2432818   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2432819   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2432820   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2432821   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2432822   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2432823   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2432824   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2432825   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2432826   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2432827   +          +     1.45707983202269 * S_NumDealsPurchases
2432828   +          +     0.83341887728641 * S_NumDistPurchases
2432829   +          +    -0.36664450469423 * S_NumStorePurchases
2432830   +          +     0.63911579043339 * S_NumWebPurchases
2432831   +          +     0.67144790303554 * S_NumWebVisitsMonth
2432832   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2432833   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2432834   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 * 
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 * 
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts + 
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 * 
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines + 
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases + 
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases + 
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases + 
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 * 
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2432835   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2432836   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2432837   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2432838   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2432839   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2432840   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2432841   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2432842   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2432843   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2432844   +          +     0.68491896063662 * S_NumDealsPurchases
2432845   +          +      0.5386312048592 * S_NumDistPurchases
2432846   +          +     1.28108942503912 * S_NumStorePurchases
2432847   +          +    -0.88282270505969 * S_NumWebPurchases
2432848   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2432849   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2432850   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2432851   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age 
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome + 
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 * 
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts + 
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 * 
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 * 
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 * 
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 * 
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq + 
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2432852   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2432853   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2432854   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2432855   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2432856   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 * 
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 + 
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 * 
HigherEducationBinary0 ;
2432857   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2432858   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2432859   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2432860   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2432861   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992 
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 + 
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 * 
HigherEducationBinary0 ;
2432862   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2432863   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2432864   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2432865   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2432866   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477 
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 + 
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 * 
HigherEducationBinary0 ;
2432867   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2432868   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2432869   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2432870   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2432871   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 * 
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 + 
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 * 
HigherEducationBinary0 ;
2432872   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2432873   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2432874   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2432875   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2432876   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392 
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 + 
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 * 
HigherEducationBinary0 ;
2432877   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2432878   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2432879   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2432880   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2432881   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 * 
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 + 
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 * 
HigherEducationBinary0 ;
2432882   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2432883   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2432884   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2432885   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2432886   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 * 
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 + 
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 * 
HigherEducationBinary0 ;
2432887   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2432888   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2432889   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2432890   +          +    -3.97961426831865 * Marital_StatusDivorced
2432891   +          +     0.00932639813867 * Marital_StatusMarried
2432892   +          +     1.29310186574718 * Marital_StatusSingle
2432893   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle + 
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation + 
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced + 
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle + 
1.60940802221114 * Marital_StatusTogether ;
2432894   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2432895   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2432896   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2432897   +          +    -0.30358516578188 * Marital_StatusDivorced
2432898   +          +    -0.96176709360703 * Marital_StatusMarried
2432899   +          +     1.26977690921649 * Marital_StatusSingle
2432900   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle + 
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001 
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 * 
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 * 
Marital_StatusTogether ;
2432901   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2432902   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2432903   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2432904   +          +     0.55272671490757 * Marital_StatusDivorced
2432905   +          +      0.1499239288334 * Marital_StatusMarried
2432906   +          +    -0.46840941760604 * Marital_StatusSingle
2432907   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle + 
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843 
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 * 
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 * 
Marital_StatusTogether ;
2432908   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2432909   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2432910   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2432911   +          +      -1.240735370138 * Marital_StatusDivorced
2432912   +          +    -1.20089294883599 * Marital_StatusMarried
2432913   +          +     0.57492674426149 * Marital_StatusSingle
2432914   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle + 
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation + 
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced + 
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle + 
1.44189292990255 * Marital_StatusTogether ;
2432915   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2432916   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2432917   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2432918   +          +     1.05435442049802 * Marital_StatusDivorced
2432919   +          +      0.3571256349717 * Marital_StatusMarried
2432920   +          +    -0.44741267266578 * Marital_StatusSingle
2432921   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle + 
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation + 
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced + 
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle + 
0.02948931507994 * Marital_StatusTogether ;
2432922   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2432923   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2432924   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2432925   +          +     2.06026721980778 * Marital_StatusDivorced
2432926   +          +    -0.49583258645166 * Marital_StatusMarried
2432927   +          +    -1.14824900824474 * Marital_StatusSingle
2432928   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle + 
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation + 
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced + 
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle + 
0.57690093967839 * Marital_StatusTogether ;
2432929   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2432930   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2432931   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2432932   +          +     -1.1890908607447 * Marital_StatusDivorced
2432933   +          +    -0.46668809907123 * Marital_StatusMarried
2432934   +          +     1.20342564763422 * Marital_StatusSingle
2432935   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle + 
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation + 
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced + 
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle + 
-1.75740662969578 * Marital_StatusTogether ;
2432936   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2432937   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2432938   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2432939   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2432940   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2432941   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2432942   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2432943   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2432944   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2432945   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2432946   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2432947   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2432948   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2432949   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2432950   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2432951   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2432952   +END;
MPRINT(EM_DIAGRAM):   END;
2432953   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2432954   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2432955   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2432956   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2432957   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2432958   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2432959   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2432960   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2432961   +END;
MPRINT(EM_DIAGRAM):   END;
2432962   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432963   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2432964   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432965   +
2432966   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2432967   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2432968   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2432969   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2432970   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2432971   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2432972   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2432973   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2432974   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2432975   +end;
MPRINT(EM_DIAGRAM):   end;
2432976   +else do;
MPRINT(EM_DIAGRAM):   else do;
2432977   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2432978   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2432979   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2432980   +   end;
MPRINT(EM_DIAGRAM):   end;
2432981   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2432982   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2432983   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2432984   +   end;
MPRINT(EM_DIAGRAM):   end;
2432985   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2432986   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2432987   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2432988   +   end;
MPRINT(EM_DIAGRAM):   end;
2432989   +end;
MPRINT(EM_DIAGRAM):   end;
2432990   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2432991   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2432992   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2432993   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2432994   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 + 
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 + 
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2432995   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2432996   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2432997   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2432998   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 + 
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 + 
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2432999   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2433000   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2433001   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2433002   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2433003   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2433004   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2433005   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2433006   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2433007   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2433008   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2433009   +END;
MPRINT(EM_DIAGRAM):   END;
2433010   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2433011   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2433012   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2433013   +END;
MPRINT(EM_DIAGRAM):   END;
2433014   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2433015   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2433016   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2433017   +END;
MPRINT(EM_DIAGRAM):   END;
2433018   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2433019   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2433020   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2433021   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2433022   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2433023   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2433024   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2433025   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433026   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2433027   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433028   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2433029   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2433030   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2433031   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2433032   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2433033   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2433034   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2433035   +END;
MPRINT(EM_DIAGRAM):   END;
2433036   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2433037   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2433038   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2433039   +drop
2433040   +H1x1_1
2433041   +H1x1_2
2433042   +H1x1_3
2433043   +H1x1_4
2433044   +H1x1_5
2433045   +H1x1_6
2433046   +H1x1_7
2433047   +H1x2_1
2433048   +H1x2_2
2433049   +H1x2_3
2433050   +H1x2_4
2433051   +H1x2_5
2433052   +H1x2_6
2433053   +H1x2_7
2433054   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2 
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2433055   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2433056   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2433057   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433058   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2433059   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433060   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2433061   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2433062   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2433063   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2433064   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433065   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2433066   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433067   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2433068   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2433069   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2433070   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433071   +* Ensmbl45: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 4 of 5;
2433072   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433073   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433074   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2433075   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2433076   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2433077   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433078   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2433079   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2433080   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2433081   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2433082   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2433083   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2433084   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2433085   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2433086   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2433087   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2433088   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2433089   +LENGTH _WARN_ $4
2433090   +      F_DepVar  $ 12
2433091   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2433092   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2433093   +
2433094   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2433095   +
2433096   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2433097   +
2433098   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2433099   +
2433100   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2433101   +
2433102   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2433103   +
2433104   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2433105   +
2433106   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2433107   +
2433108   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2433109   +
2433110   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2433111   +
2433112   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2433113   +
2433114   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2433115   +
2433116   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2433117   +
2433118   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2433119   +
2433120   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2433121   +
2433122   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2433123   +
2433124   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2433125   +
2433126   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2433127   +
2433128   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2433129   +
2433130   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2433131   +
2433132   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2433133   +
2433134   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2433135   +
2433136   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2433137   +
2433138   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2433139   +
2433140   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2433141   +
2433142   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2433143   +
2433144   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2433145   +
2433146   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2433147   +
2433148   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2433149   +
2433150   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2433151   +
2433152   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2433153   +
2433154   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2433155   +
2433156   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2433157   +
2433158   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2433159   +
2433160   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2433161   +
2433162   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2433163   +
2433164   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2433165   +
2433166   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2433167   +
2433168   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2433169   +
2433170   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2433171   +
2433172   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2433173   +
2433174   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2433175   +
2433176   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2433177   +
2433178   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2433179   +
2433180   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2433181   +
2433182   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2433183   +
2433184   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2433185   +
2433186   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2433187   +
2433188   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2433189   +
2433190   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2433191   +
2433192   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2433193   +
2433194   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2433195   +
2433196   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2433197   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2433198   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2433199   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2433200   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2433201   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433202   +end;
MPRINT(EM_DIAGRAM):   end;
2433203   +else do;
MPRINT(EM_DIAGRAM):   else do;
2433204   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2433205   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2433206   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2433207   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2433208   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2433209   +   end;
MPRINT(EM_DIAGRAM):   end;
2433210   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2433211   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2433212   +   end;
MPRINT(EM_DIAGRAM):   end;
2433213   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2433214   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2433215   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2433216   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433217   +   end;
MPRINT(EM_DIAGRAM):   end;
2433218   +end;
MPRINT(EM_DIAGRAM):   end;
2433219   +
2433220   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2433221   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2433222   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2433223   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2433224   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2433225   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433226   +end;
MPRINT(EM_DIAGRAM):   end;
2433227   +else do;
MPRINT(EM_DIAGRAM):   else do;
2433228   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2433229   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2433230   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2433231   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2433232   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2433233   +   end;
MPRINT(EM_DIAGRAM):   end;
2433234   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2433235   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2433236   +   end;
MPRINT(EM_DIAGRAM):   end;
2433237   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2433238   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2433239   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2433240   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433241   +   end;
MPRINT(EM_DIAGRAM):   end;
2433242   +end;
MPRINT(EM_DIAGRAM):   end;
2433243   +
2433244   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2433245   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2433246   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2433247   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2433248   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2433249   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433250   +end;
MPRINT(EM_DIAGRAM):   end;
2433251   +else do;
MPRINT(EM_DIAGRAM):   else do;
2433252   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2433253   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2433254   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2433255   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2433256   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2433257   +   end;
MPRINT(EM_DIAGRAM):   end;
2433258   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2433259   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2433260   +   end;
MPRINT(EM_DIAGRAM):   end;
2433261   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2433262   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2433263   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2433264   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433265   +   end;
MPRINT(EM_DIAGRAM):   end;
2433266   +end;
MPRINT(EM_DIAGRAM):   end;
2433267   +
2433268   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2433269   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2433270   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2433271   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2433272   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2433273   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433274   +end;
MPRINT(EM_DIAGRAM):   end;
2433275   +else do;
MPRINT(EM_DIAGRAM):   else do;
2433276   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2433277   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2433278   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2433279   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2433280   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2433281   +   end;
MPRINT(EM_DIAGRAM):   end;
2433282   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2433283   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2433284   +   end;
MPRINT(EM_DIAGRAM):   end;
2433285   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2433286   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2433287   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2433288   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433289   +   end;
MPRINT(EM_DIAGRAM):   end;
2433290   +end;
MPRINT(EM_DIAGRAM):   end;
2433291   +
2433292   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2433293   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2433294   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2433295   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2433296   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2433297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433298   +end;
MPRINT(EM_DIAGRAM):   end;
2433299   +else do;
MPRINT(EM_DIAGRAM):   else do;
2433300   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2433301   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2433302   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2433303   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2433304   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2433305   +   end;
MPRINT(EM_DIAGRAM):   end;
2433306   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2433307   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2433308   +   end;
MPRINT(EM_DIAGRAM):   end;
2433309   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2433310   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2433311   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2433312   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433313   +   end;
MPRINT(EM_DIAGRAM):   end;
2433314   +end;
MPRINT(EM_DIAGRAM):   end;
2433315   +
2433316   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2433317   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2433318   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2433319   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2433320   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2433321   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433322   +end;
MPRINT(EM_DIAGRAM):   end;
2433323   +else do;
MPRINT(EM_DIAGRAM):   else do;
2433324   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2433325   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2433326   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2433327   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2433328   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2433329   +   end;
MPRINT(EM_DIAGRAM):   end;
2433330   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2433331   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2433332   +   end;
MPRINT(EM_DIAGRAM):   end;
2433333   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2433334   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2433335   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2433336   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433337   +   end;
MPRINT(EM_DIAGRAM):   end;
2433338   +end;
MPRINT(EM_DIAGRAM):   end;
2433339   +
2433340   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2433341   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2433342   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2433343   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2433344   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2433345   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433346   +end;
MPRINT(EM_DIAGRAM):   end;
2433347   +else do;
MPRINT(EM_DIAGRAM):   else do;
2433348   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2433349   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2433350   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2433351   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2433352   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2433353   +   end;
MPRINT(EM_DIAGRAM):   end;
2433354   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2433355   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2433356   +   end;
MPRINT(EM_DIAGRAM):   end;
2433357   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2433358   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2433359   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2433360   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433361   +   end;
MPRINT(EM_DIAGRAM):   end;
2433362   +end;
MPRINT(EM_DIAGRAM):   end;
2433363   +
2433364   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2433365   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2433366   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2433367   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2433368   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2433369   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2433370   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2433371   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2433372   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2433373   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2433374   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2433375   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2433376   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2433377   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433378   +end;
MPRINT(EM_DIAGRAM):   end;
2433379   +else do;
MPRINT(EM_DIAGRAM):   else do;
2433380   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2433381   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2433382   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2433383   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2433384   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2433385   +   end;
MPRINT(EM_DIAGRAM):   end;
2433386   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2433387   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2433388   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2433389   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2433390   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2433391   +   end;
MPRINT(EM_DIAGRAM):   end;
2433392   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2433393   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2433394   +   end;
MPRINT(EM_DIAGRAM):   end;
2433395   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2433396   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2433397   +   end;
MPRINT(EM_DIAGRAM):   end;
2433398   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2433399   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2433400   +   end;
MPRINT(EM_DIAGRAM):   end;
2433401   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2433402   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2433403   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2433404   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2433405   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2433406   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2433407   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433408   +   end;
MPRINT(EM_DIAGRAM):   end;
2433409   +end;
MPRINT(EM_DIAGRAM):   end;
2433410   +
2433411   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2433412   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2433413   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2433414   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2433415   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2433416   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2433417   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2433418   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2433419   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2433420   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2433421   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2433422   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2433423   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2433424   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2433425   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433426   +end;
MPRINT(EM_DIAGRAM):   end;
2433427   +else do;
MPRINT(EM_DIAGRAM):   else do;
2433428   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2433429   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2433430   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2433431   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2433432   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2433433   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2433434   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2433435   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2433436   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2433437   +         end;
MPRINT(EM_DIAGRAM):   end;
2433438   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2433439   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2433440   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2433441   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2433442   +            end;
MPRINT(EM_DIAGRAM):   end;
2433443   +         end;
MPRINT(EM_DIAGRAM):   end;
2433444   +      end;
MPRINT(EM_DIAGRAM):   end;
2433445   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2433446   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2433447   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2433448   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2433449   +         end;
MPRINT(EM_DIAGRAM):   end;
2433450   +      end;
MPRINT(EM_DIAGRAM):   end;
2433451   +   end;
MPRINT(EM_DIAGRAM):   end;
2433452   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2433453   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2433454   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2433455   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2433456   +      end;
MPRINT(EM_DIAGRAM):   end;
2433457   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2433458   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2433459   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2433460   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2433461   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2433462   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2433463   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2433464   +         end;
MPRINT(EM_DIAGRAM):   end;
2433465   +      end;
MPRINT(EM_DIAGRAM):   end;
2433466   +   end;
MPRINT(EM_DIAGRAM):   end;
2433467   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2433468   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2433469   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2433470   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2433471   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2433472   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2433473   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433474   +   end;
MPRINT(EM_DIAGRAM):   end;
2433475   +end;
MPRINT(EM_DIAGRAM):   end;
2433476   +
2433477   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433478   +*** Checking missing input Interval
2433479   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2433480   +
2433481   +IF NMISS(
2433482   +   AcceptedCmpTotal ,
2433483   +   Age ,
2433484   +   Frq ,
2433485   +   Income ,
2433486   +   Kidhome ,
2433487   +   Mnt ,
2433488   +   MntFishProducts ,
2433489   +   MntFruits ,
2433490   +   MntGoldProds ,
2433491   +   MntMeatProducts ,
2433492   +   MntSweetProducts ,
2433493   +   MntWines ,
2433494   +   MonthsAsCustomer ,
2433495   +   NumCatalogPurchases ,
2433496   +   NumDealsPurchases ,
2433497   +   NumDistPurchases ,
2433498   +   NumStorePurchases ,
2433499   +   NumWebPurchases ,
2433500   +   NumWebVisitsMonth ,
2433501   +   RFMstat ,
2433502   +   RMntFrq ,
2433503   +   Recency ,
2433504   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2433505   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2433506   +
2433507   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433508   +END;
MPRINT(EM_DIAGRAM):   END;
2433509   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433510   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2433511   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433512   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2433513   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2433514   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2433515   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2433516   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2433517   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2433518   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2433519   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2433520   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2433521   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2433522   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2433523   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2433524   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2433525   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2433526   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2433527   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2433528   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2433529   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2433530   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2433531   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2433532   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2433533   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2433534   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2433535   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2433536   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2433537   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2433538   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2433539   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2433540   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2433541   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2433542   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2433543   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2433544   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2433545   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2433546   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2433547   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2433548   +END;
MPRINT(EM_DIAGRAM):   END;
2433549   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2433550   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2433551   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2433552   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2433553   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2433554   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2433555   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2433556   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2433557   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2433558   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2433559   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2433560   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2433561   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2433562   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2433563   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2433564   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2433565   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2433566   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2433567   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2433568   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2433569   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2433570   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2433571   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2433572   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2433573   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2433574   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2433575   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2433576   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2433577   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2433578   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2433579   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2433580   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2433581   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2433582   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2433583   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2433584   +   ELSE S_NumCatalogPurchases
2433585   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2433586   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2433587   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2433588   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2433589   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2433590   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2433591   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2433592   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2433593   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2433594   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2433595   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2433596   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2433597   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2433598   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2433599   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2433600   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2433601   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2433602   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2433603   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2433604   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2433605   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2433606   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2433607   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2433608   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2433609   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2433610   +END;
MPRINT(EM_DIAGRAM):   END;
2433611   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433612   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2433613   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433614   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433615   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2433616   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433617   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433618   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2433619   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433620   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2433621   +   H1x1_1  =     0.26454269681311 * S_AcceptedCmpTotal
2433622   +          +    -0.01281904987956 * S_Age  +    -0.19309516267581 * S_Frq
2433623   +          +    -0.19077579202378 * S_Income  +      0.1806651018562 *
2433624   +        S_Kidhome  +    -0.31002612826472 * S_Mnt  +    -0.05901796512011 *
2433625   +        S_MntFishProducts  +    -0.03760930101165 * S_MntFruits
2433626   +          +     0.01720900715043 * S_MntGoldProds  +     0.21472292961422 *
2433627   +        S_MntMeatProducts  +    -0.02880706568684 * S_MntSweetProducts
2433628   +          +    -0.37993583170844 * S_MntWines  +    -0.00848444156361 *
2433629   +        S_MonthsAsCustomer  +     0.15939611818942 * S_NumCatalogPurchases
2433630   +          +     0.08390531145773 * S_NumDealsPurchases
2433631   +          +    -0.29505970645775 * S_NumDistPurchases
2433632   +          +    -0.13820571170194 * S_NumStorePurchases
2433633   +          +     0.11468011313368 * S_NumWebPurchases
2433634   +          +    -0.18421241371843 * S_NumWebVisitsMonth
2433635   +          +     0.11564064971509 * S_RFMstat  +    -0.02223928001432 *
2433636   +        S_RMntFrq  +     0.18022777532589 * S_Recency
2433637   +          +     0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 * 
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome 
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 * 
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts + 
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 * 
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 * 
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 * 
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 * 
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq + 
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
2433638   +   H1x1_2  =     0.27055972468014 * S_AcceptedCmpTotal
2433639   +          +      0.0025862891193 * S_Age  +    -0.07147307366817 * S_Frq
2433640   +          +      0.1883776136263 * S_Income  +    -0.12712510891181 *
2433641   +        S_Kidhome  +    -0.42099927948686 * S_Mnt  +    -0.07047631817862 *
2433642   +        S_MntFishProducts  +    -0.06658475152878 * S_MntFruits
2433643   +          +     0.01943025682869 * S_MntGoldProds  +     0.29481794109465 *
2433644   +        S_MntMeatProducts  +    -0.06573502094591 * S_MntSweetProducts
2433645   +          +    -0.46266722725002 * S_MntWines  +    -0.00472333181469 *
2433646   +        S_MonthsAsCustomer  +     0.35081452017576 * S_NumCatalogPurchases
2433647   +          +     0.18009076035363 * S_NumDealsPurchases
2433648   +          +     0.03853861006587 * S_NumDistPurchases
2433649   +          +    -0.05118063952874 * S_NumStorePurchases
2433650   +          +    -0.03282286120473 * S_NumWebPurchases
2433651   +          +     0.31160900419026 * S_NumWebVisitsMonth
2433652   +          +     0.08027884378429 * S_RFMstat  +     0.39057239541393 *
2433653   +        S_RMntFrq  +    -0.34796767111274 * S_Recency
2433654   +          +    -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age 
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome + 
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 * 
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts + 
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 * 
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 * 
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 * 
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 * 
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq + 
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
2433655   +   H1x1_1  = H1x1_1  +     0.12539246465239 * AcceptedCmp10
2433656   +          +     0.38473652869745 * AcceptedCmp20  +     0.29820983391886 *
2433657   +        AcceptedCmp30  +     0.29085092779792 * AcceptedCmp40
2433658   +          +     0.18918195914981 * AcceptedCmp50  +    -0.26812516781697 *
2433659   +        Complain0  +    -0.08804110897148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 * 
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 + 
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 * 
HigherEducationBinary0 ;
2433660   +   H1x1_2  = H1x1_2  +    -0.02312897825565 * AcceptedCmp10
2433661   +          +     0.03909481703523 * AcceptedCmp20  +     0.02531081539721 *
2433662   +        AcceptedCmp30  +     0.03109641300151 * AcceptedCmp40
2433663   +          +     0.01985718189621 * AcceptedCmp50  +     0.13425456375085 *
2433664   +        Complain0  +    -0.08222486590117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 * 
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 + 
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 * 
HigherEducationBinary0 ;
2433665   +   H1x1_1  = H1x1_1  +    -0.01975862863669 * Education2n_Cycle
2433666   +          +     0.14654730697956 * EducationBasic  +    -0.00459515646452 *
2433667   +        EducationGraduation  +     0.01586948449127 * EducationMaster
2433668   +          +    -0.04750981393889 * Marital_StatusDivorced
2433669   +          +     0.28216925676677 * Marital_StatusMarried
2433670   +          +    -0.20757827413964 * Marital_StatusSingle
2433671   +          +     0.22622509024122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle + 
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127 
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 * 
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 * 
Marital_StatusTogether ;
2433672   +   H1x1_2  = H1x1_2  +     0.12009608969049 * Education2n_Cycle
2433673   +          +     0.01793460710056 * EducationBasic  +    -0.04257710051346 *
2433674   +        EducationGraduation  +    -0.06975725710115 * EducationMaster
2433675   +          +     0.05981919620577 * Marital_StatusDivorced
2433676   +          +    -0.17161573846062 * Marital_StatusMarried
2433677   +          +     0.15869440681091 * Marital_StatusSingle
2433678   +          +    -0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle + 
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation + 
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced + 
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle + 
-0.13282372850158 * Marital_StatusTogether ;
2433679   +   H1x1_1  =     0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
2433680   +   H1x1_2  =    -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
2433681   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2433682   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2433683   +END;
MPRINT(EM_DIAGRAM):   END;
2433684   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2433685   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2433686   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2433687   +END;
MPRINT(EM_DIAGRAM):   END;
2433688   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433689   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2433690   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433691   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2433692   +   H1x2_1  =      0.1719390672121 * S_AcceptedCmpTotal
2433693   +          +     0.23586839288361 * S_Age  +    -1.85384134180372 * S_Frq
2433694   +          +    -0.43561758063577 * S_Income  +     -2.5581498901473 *
2433695   +        S_Kidhome  +      1.7031888248428 * S_Mnt  +     0.84982621124736 *
2433696   +        S_MntFishProducts  +     0.25990173458485 * S_MntFruits
2433697   +          +    -2.80730469703961 * S_MntGoldProds  +     0.64923500711702 *
2433698   +        S_MntMeatProducts  +     0.27458645458502 * S_MntSweetProducts
2433699   +          +    -0.47723589182372 * S_MntWines  +    -0.66777488145507 *
2433700   +        S_MonthsAsCustomer  +    -0.46364414558282 * S_NumCatalogPurchases
2433701   +          +     0.00741910846933 * S_NumDealsPurchases
2433702   +          +       1.334289252268 * S_NumDistPurchases
2433703   +          +    -0.29851567180932 * S_NumStorePurchases
2433704   +          +    -0.52115313259666 * S_NumWebPurchases
2433705   +          +     0.93907168501909 * S_NumWebVisitsMonth
2433706   +          +    -0.26126881318451 * S_RFMstat  +     -1.3003763542929 *
2433707   +        S_RMntFrq  +    -0.12807368149309 * S_Recency
2433708   +          +    -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age 
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome + 
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 * 
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts + 
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 * 
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 * 
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 * 
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 * 
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq + 
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
2433709   +   H1x2_2  =     0.30897763700303 * S_AcceptedCmpTotal
2433710   +          +    -0.77727886396317 * S_Age  +    -0.79298582494973 * S_Frq
2433711   +          +    -1.73199353738093 * S_Income  +     1.12984956989288 *
2433712   +        S_Kidhome  +    -1.36701096993984 * S_Mnt  +    -0.21063950702424 *
2433713   +        S_MntFishProducts  +    -0.20027336686257 * S_MntFruits
2433714   +          +    -0.06955810418489 * S_MntGoldProds  +     0.16672767423533 *
2433715   +        S_MntMeatProducts  +    -1.56675269740541 * S_MntSweetProducts
2433716   +          +     1.85366479127485 * S_MntWines  +    -0.58178621903094 *
2433717   +        S_MonthsAsCustomer  +     1.31024619253935 * S_NumCatalogPurchases
2433718   +          +     1.60427001186844 * S_NumDealsPurchases
2433719   +          +    -0.18447618033353 * S_NumDistPurchases
2433720   +          +    -1.29966073003539 * S_NumStorePurchases
2433721   +          +    -1.12373457341536 * S_NumWebPurchases
2433722   +          +     1.46099221440494 * S_NumWebVisitsMonth
2433723   +          +     0.17795038564406 * S_RFMstat  +    -0.82372068140832 *
2433724   +        S_RMntFrq  +      0.4480370534729 * S_Recency
2433725   +          +     0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 * 
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 * 
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts + 
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 * 
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines + 
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases + 
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases + 
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases + 
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 * 
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
2433726   +   H1x2_1  = H1x2_1  +     -0.6569942252053 * AcceptedCmp10
2433727   +          +    -0.89152555599538 * AcceptedCmp20  +     1.00488730476017 *
2433728   +        AcceptedCmp30  +     0.34286042692068 * AcceptedCmp40
2433729   +          +    -1.19198820362508 * AcceptedCmp50  +    -0.86571531914686 *
2433730   +        Complain0  +     0.14303136037365 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 * 
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 + 
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 * 
HigherEducationBinary0 ;
2433731   +   H1x2_2  = H1x2_2  +     1.79481763784518 * AcceptedCmp10
2433732   +          +    -2.85912280013336 * AcceptedCmp20  +     0.16890012708431 *
2433733   +        AcceptedCmp30  +     0.94639083182751 * AcceptedCmp40
2433734   +          +    -0.62141828005946 * AcceptedCmp50  +    -0.39098882491277 *
2433735   +        Complain0  +     0.85700787946581 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 * 
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 + 
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 * 
HigherEducationBinary0 ;
2433736   +   H1x2_1  = H1x2_1  +      0.0737054452993 * Education2n_Cycle
2433737   +          +       0.362372261752 * EducationBasic  +      -1.485941295677 *
2433738   +        EducationGraduation  +    -0.81257694655594 * EducationMaster
2433739   +          +     0.59819559998538 * Marital_StatusDivorced
2433740   +          +     0.92957772553633 * Marital_StatusMarried
2433741   +          +    -1.11796266958894 * Marital_StatusSingle
2433742   +          +     -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 * 
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster + 
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried + 
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
2433743   +   H1x2_2  = H1x2_2  +    -1.10016528859962 * Education2n_Cycle
2433744   +          +    -1.46816646165468 * EducationBasic  +    -0.11241499152788 *
2433745   +        EducationGraduation  +    -0.65110715251273 * EducationMaster
2433746   +          +      1.0870909562212 * Marital_StatusDivorced
2433747   +          +     1.50333961797515 * Marital_StatusMarried
2433748   +          +    -1.41407780765932 * Marital_StatusSingle
2433749   +          +    -0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle + 
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation + 
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced + 
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle + 
-0.52528072358697 * Marital_StatusTogether ;
2433750   +   H1x2_1  =     1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
2433751   +   H1x2_2  =    -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
2433752   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2433753   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2433754   +   H1x2_1  = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
2433755   +   H1x2_2  = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
2433756   +END;
MPRINT(EM_DIAGRAM):   END;
2433757   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2433758   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2433759   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2433760   +END;
MPRINT(EM_DIAGRAM):   END;
2433761   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433762   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2433763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433764   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2433765   +   H1x3_1  =     0.29299707972123 * S_AcceptedCmpTotal
2433766   +          +     1.39797329466471 * S_Age  +    -2.02673480388837 * S_Frq
2433767   +          +    -1.09682777516542 * S_Income  +    -1.22241109888643 *
2433768   +        S_Kidhome  +    -1.35766076466324 * S_Mnt  +    -2.90812690982576 *
2433769   +        S_MntFishProducts  +    -0.48174923069843 * S_MntFruits
2433770   +          +     1.57335575145195 * S_MntGoldProds  +    -0.55248873552176 *
2433771   +        S_MntMeatProducts  +     0.54536808091745 * S_MntSweetProducts
2433772   +          +    -0.41516162035296 * S_MntWines  +     0.07715050596116 *
2433773   +        S_MonthsAsCustomer  +    -2.18785324142159 * S_NumCatalogPurchases
2433774   +          +     -1.1174504455343 * S_NumDealsPurchases
2433775   +          +    -0.18561253113498 * S_NumDistPurchases
2433776   +          +    -0.35231054612792 * S_NumStorePurchases
2433777   +          +      0.9249490354172 * S_NumWebPurchases
2433778   +          +    -0.79868535147175 * S_NumWebVisitsMonth
2433779   +          +    -0.17158151681124 * S_RFMstat  +     -0.9870286843901 *
2433780   +        S_RMntFrq  +     0.62439123699986 * S_Recency
2433781   +          +    -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 * 
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 * 
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts + 
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 * 
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines + 
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases + 
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases + 
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases + 
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 * 
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
2433782   +   H1x3_2  =    -1.07483179793421 * S_AcceptedCmpTotal
2433783   +          +     1.03558600048684 * S_Age  +     1.11497695424161 * S_Frq
2433784   +          +     0.27297296926116 * S_Income  +     0.77036019999023 *
2433785   +        S_Kidhome  +     0.02567848304605 * S_Mnt  +     0.38661977628442 *
2433786   +        S_MntFishProducts  +    -0.36751750771945 * S_MntFruits
2433787   +          +     0.93924107558212 * S_MntGoldProds  +     0.93046859422523 *
2433788   +        S_MntMeatProducts  +    -0.46124679979068 * S_MntSweetProducts
2433789   +          +    -0.45348234529786 * S_MntWines  +     1.60057890623864 *
2433790   +        S_MonthsAsCustomer  +    -1.74657448073162 * S_NumCatalogPurchases
2433791   +          +     1.05434863590054 * S_NumDealsPurchases
2433792   +          +    -0.73255174632068 * S_NumDistPurchases
2433793   +          +     0.53949953455044 * S_NumStorePurchases
2433794   +          +    -0.61709467816649 * S_NumWebPurchases
2433795   +          +     1.36235282484348 * S_NumWebVisitsMonth
2433796   +          +     -0.0352720913953 * S_RFMstat  +     0.14001475375682 *
2433797   +        S_RMntFrq  +    -0.24276831608869 * S_Recency
2433798   +          +     0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 * 
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome 
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 * 
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts + 
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 * 
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 * 
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 * 
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 * 
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq + 
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
2433799   +   H1x3_1  = H1x3_1  +    -0.94208577947628 * AcceptedCmp10
2433800   +          +     -0.5233017415423 * AcceptedCmp20  +    -0.76900164563331 *
2433801   +        AcceptedCmp30  +    -0.79512141055877 * AcceptedCmp40
2433802   +          +     0.20126599116957 * AcceptedCmp50  +    -0.43046555689873 *
2433803   +        Complain0  +     0.31565229685815 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 * 
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 + 
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 * 
HigherEducationBinary0 ;
2433804   +   H1x3_2  = H1x3_2  +    -1.24961064002454 * AcceptedCmp10
2433805   +          +    -0.89859693224833 * AcceptedCmp20  +     1.15884958881232 *
2433806   +        AcceptedCmp30  +     0.38250389164472 * AcceptedCmp40
2433807   +          +     0.47123004358879 * AcceptedCmp50  +     -2.1232679844098 *
2433808   +        Complain0  +     0.97226091069674 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833 
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 + 
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 * 
HigherEducationBinary0 ;
2433809   +   H1x3_1  = H1x3_1  +    -0.07500306665919 * Education2n_Cycle
2433810   +          +     0.04122924311058 * EducationBasic  +    -0.49410102102951 *
2433811   +        EducationGraduation  +    -0.45477734340809 * EducationMaster
2433812   +          +     0.22253248036322 * Marital_StatusDivorced
2433813   +          +    -1.72455332745001 * Marital_StatusMarried
2433814   +          +     0.57787272107232 * Marital_StatusSingle
2433815   +          +     0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle + 
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation + 
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced + 
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle + 
0.16267074825086 * Marital_StatusTogether ;
2433816   +   H1x3_2  = H1x3_2  +    -0.21560233542581 * Education2n_Cycle
2433817   +          +    -0.36476815429069 * EducationBasic  +     1.63334881201349 *
2433818   +        EducationGraduation  +    -1.12620982139344 * EducationMaster
2433819   +          +     0.14637124403046 * Marital_StatusDivorced
2433820   +          +     0.18905186437528 * Marital_StatusMarried
2433821   +          +     0.00511958458521 * Marital_StatusSingle
2433822   +          +      -0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle + 
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation + 
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced + 
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle + 
-0.915980703129 * Marital_StatusTogether ;
2433823   +   H1x3_1  =     0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
2433824   +   H1x3_2  =     1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
2433825   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2433826   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2433827   +   H1x3_1  = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
2433828   +   H1x3_2  = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
2433829   +END;
MPRINT(EM_DIAGRAM):   END;
2433830   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2433831   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2433832   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2433833   +END;
MPRINT(EM_DIAGRAM):   END;
2433834   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433835   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2433836   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433837   +
2433838   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2433839   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2433840   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2433841   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2433842   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2433843   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2433844   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2433845   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2433846   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2433847   +end;
MPRINT(EM_DIAGRAM):   end;
2433848   +else do;
MPRINT(EM_DIAGRAM):   else do;
2433849   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2433850   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2433851   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2433852   +   end;
MPRINT(EM_DIAGRAM):   end;
2433853   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2433854   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2433855   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2433856   +   end;
MPRINT(EM_DIAGRAM):   end;
2433857   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2433858   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2433859   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2433860   +   end;
MPRINT(EM_DIAGRAM):   end;
2433861   +end;
MPRINT(EM_DIAGRAM):   end;
2433862   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2433863   +   P_DepVar1  =    -10.6892993503201 * H1x1_1  +     16.2938756734008 * H1x1_2
2433864   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
2433865   +   P_DepVar1  = P_DepVar1  +      1.2332183930826 * H1x2_1
2433866   +          +    -0.85206858106106 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 * 
H1x2_2 ;
2433867   +   P_DepVar1  = P_DepVar1  +    -0.00087126688031 * H1x3_1
2433868   +          +    -0.00025812675645 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 * 
H1x3_2 ;
2433869   +   P_DepVar1  =     2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
2433870   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2433871   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2433872   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2433873   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2433874   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2433875   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2433876   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2433877   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2433878   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2433879   +END;
MPRINT(EM_DIAGRAM):   END;
2433880   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2433881   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2433882   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2433883   +END;
MPRINT(EM_DIAGRAM):   END;
2433884   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2433885   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2433886   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2433887   +END;
MPRINT(EM_DIAGRAM):   END;
2433888   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2433889   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2433890   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2433891   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2433892   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2433893   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2433894   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2433895   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433896   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2433897   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433898   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2433899   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2433900   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2433901   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2433902   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2433903   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2433904   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2433905   +END;
MPRINT(EM_DIAGRAM):   END;
2433906   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2433907   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2433908   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2433909   +drop
2433910   +H1x1_1
2433911   +H1x1_2
2433912   +H1x2_1
2433913   +H1x2_2
2433914   +H1x3_1
2433915   +H1x3_2
2433916   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
2433917   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2433918   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2433919   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433920   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2433921   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433922   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2433923   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2433924   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2433925   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2433926   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433927   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2433928   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433929   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2433930   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2433931   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2433932   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433933   +* Ensmbl45: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 5 of 5;
2433934   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433935   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433936   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2433937   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2433938   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2433939   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433940   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2433941   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2433942   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2433943   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2433944   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2433945   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2433946   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2433947   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2433948   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2433949   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2433950   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2433951   +LENGTH _WARN_ $4
2433952   +      F_DepVar  $ 12
2433953   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2433954   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2433955   +
2433956   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2433957   +
2433958   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2433959   +
2433960   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2433961   +
2433962   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2433963   +
2433964   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2433965   +
2433966   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2433967   +
2433968   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2433969   +
2433970   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2433971   +
2433972   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2433973   +
2433974   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2433975   +
2433976   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2433977   +
2433978   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2433979   +
2433980   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2433981   +
2433982   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2433983   +
2433984   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2433985   +
2433986   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2433987   +
2433988   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2433989   +
2433990   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2433991   +
2433992   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2433993   +
2433994   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2433995   +
2433996   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2433997   +
2433998   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2433999   +
2434000   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2434001   +
2434002   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2434003   +
2434004   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2434005   +
2434006   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2434007   +
2434008   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2434009   +
2434010   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2434011   +
2434012   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2434013   +
2434014   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2434015   +
2434016   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2434017   +
2434018   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2434019   +
2434020   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2434021   +
2434022   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2434023   +
2434024   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2434025   +
2434026   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2434027   +
2434028   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2434029   +
2434030   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2434031   +
2434032   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2434033   +
2434034   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2434035   +
2434036   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2434037   +
2434038   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2434039   +
2434040   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2434041   +
2434042   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2434043   +
2434044   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2434045   +
2434046   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2434047   +
2434048   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2434049   +
2434050   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2434051   +
2434052   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2434053   +
2434054   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2434055   +
2434056   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2434057   +
2434058   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2434059   +
2434060   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2434061   +
2434062   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2434063   +
2434064   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2434065   +
2434066   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2434067   +
2434068   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2434069   +
2434070   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2434071   +
2434072   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2434073   +
2434074   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2434075   +
2434076   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2434077   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2434078   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2434079   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2434080   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2434081   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434082   +end;
MPRINT(EM_DIAGRAM):   end;
2434083   +else do;
MPRINT(EM_DIAGRAM):   else do;
2434084   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2434085   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2434086   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2434087   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2434088   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2434089   +   end;
MPRINT(EM_DIAGRAM):   end;
2434090   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2434091   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2434092   +   end;
MPRINT(EM_DIAGRAM):   end;
2434093   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2434094   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2434095   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2434096   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434097   +   end;
MPRINT(EM_DIAGRAM):   end;
2434098   +end;
MPRINT(EM_DIAGRAM):   end;
2434099   +
2434100   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2434101   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2434102   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2434103   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2434104   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2434105   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434106   +end;
MPRINT(EM_DIAGRAM):   end;
2434107   +else do;
MPRINT(EM_DIAGRAM):   else do;
2434108   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2434109   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2434110   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2434111   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2434112   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2434113   +   end;
MPRINT(EM_DIAGRAM):   end;
2434114   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2434115   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2434116   +   end;
MPRINT(EM_DIAGRAM):   end;
2434117   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2434118   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2434119   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2434120   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434121   +   end;
MPRINT(EM_DIAGRAM):   end;
2434122   +end;
MPRINT(EM_DIAGRAM):   end;
2434123   +
2434124   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2434125   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2434126   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2434127   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2434128   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2434129   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434130   +end;
MPRINT(EM_DIAGRAM):   end;
2434131   +else do;
MPRINT(EM_DIAGRAM):   else do;
2434132   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2434133   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2434134   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2434135   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2434136   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2434137   +   end;
MPRINT(EM_DIAGRAM):   end;
2434138   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2434139   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2434140   +   end;
MPRINT(EM_DIAGRAM):   end;
2434141   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2434142   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2434143   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2434144   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434145   +   end;
MPRINT(EM_DIAGRAM):   end;
2434146   +end;
MPRINT(EM_DIAGRAM):   end;
2434147   +
2434148   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2434149   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2434150   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2434151   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2434152   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2434153   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434154   +end;
MPRINT(EM_DIAGRAM):   end;
2434155   +else do;
MPRINT(EM_DIAGRAM):   else do;
2434156   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2434157   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2434158   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2434159   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2434160   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2434161   +   end;
MPRINT(EM_DIAGRAM):   end;
2434162   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2434163   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2434164   +   end;
MPRINT(EM_DIAGRAM):   end;
2434165   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2434166   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2434167   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2434168   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434169   +   end;
MPRINT(EM_DIAGRAM):   end;
2434170   +end;
MPRINT(EM_DIAGRAM):   end;
2434171   +
2434172   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2434173   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2434174   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2434175   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2434176   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2434177   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434178   +end;
MPRINT(EM_DIAGRAM):   end;
2434179   +else do;
MPRINT(EM_DIAGRAM):   else do;
2434180   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2434181   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2434182   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2434183   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2434184   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2434185   +   end;
MPRINT(EM_DIAGRAM):   end;
2434186   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2434187   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2434188   +   end;
MPRINT(EM_DIAGRAM):   end;
2434189   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2434190   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2434191   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2434192   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434193   +   end;
MPRINT(EM_DIAGRAM):   end;
2434194   +end;
MPRINT(EM_DIAGRAM):   end;
2434195   +
2434196   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2434197   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2434198   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2434199   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2434200   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2434201   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434202   +end;
MPRINT(EM_DIAGRAM):   end;
2434203   +else do;
MPRINT(EM_DIAGRAM):   else do;
2434204   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2434205   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2434206   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2434207   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2434208   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2434209   +   end;
MPRINT(EM_DIAGRAM):   end;
2434210   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2434211   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2434212   +   end;
MPRINT(EM_DIAGRAM):   end;
2434213   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2434214   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2434215   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2434216   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434217   +   end;
MPRINT(EM_DIAGRAM):   end;
2434218   +end;
MPRINT(EM_DIAGRAM):   end;
2434219   +
2434220   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2434221   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2434222   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2434223   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2434224   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2434225   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434226   +end;
MPRINT(EM_DIAGRAM):   end;
2434227   +else do;
MPRINT(EM_DIAGRAM):   else do;
2434228   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2434229   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2434230   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2434231   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2434232   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2434233   +   end;
MPRINT(EM_DIAGRAM):   end;
2434234   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2434235   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2434236   +   end;
MPRINT(EM_DIAGRAM):   end;
2434237   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2434238   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2434239   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2434240   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434241   +   end;
MPRINT(EM_DIAGRAM):   end;
2434242   +end;
MPRINT(EM_DIAGRAM):   end;
2434243   +
2434244   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2434245   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2434246   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2434247   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2434248   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2434249   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2434250   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2434251   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2434252   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2434253   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2434254   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2434255   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2434256   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2434257   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434258   +end;
MPRINT(EM_DIAGRAM):   end;
2434259   +else do;
MPRINT(EM_DIAGRAM):   else do;
2434260   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2434261   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2434262   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2434263   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2434264   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2434265   +   end;
MPRINT(EM_DIAGRAM):   end;
2434266   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2434267   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2434268   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2434269   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2434270   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2434271   +   end;
MPRINT(EM_DIAGRAM):   end;
2434272   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2434273   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2434274   +   end;
MPRINT(EM_DIAGRAM):   end;
2434275   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2434276   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2434277   +   end;
MPRINT(EM_DIAGRAM):   end;
2434278   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2434279   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2434280   +   end;
MPRINT(EM_DIAGRAM):   end;
2434281   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2434282   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2434283   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2434284   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2434285   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2434286   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2434287   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434288   +   end;
MPRINT(EM_DIAGRAM):   end;
2434289   +end;
MPRINT(EM_DIAGRAM):   end;
2434290   +
2434291   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2434292   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2434293   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2434294   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2434295   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2434296   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2434297   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2434298   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2434299   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2434300   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2434301   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2434302   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2434303   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2434304   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2434305   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434306   +end;
MPRINT(EM_DIAGRAM):   end;
2434307   +else do;
MPRINT(EM_DIAGRAM):   else do;
2434308   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2434309   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2434310   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2434311   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2434312   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2434313   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2434314   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2434315   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2434316   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2434317   +         end;
MPRINT(EM_DIAGRAM):   end;
2434318   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2434319   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2434320   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2434321   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2434322   +            end;
MPRINT(EM_DIAGRAM):   end;
2434323   +         end;
MPRINT(EM_DIAGRAM):   end;
2434324   +      end;
MPRINT(EM_DIAGRAM):   end;
2434325   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2434326   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2434327   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2434328   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2434329   +         end;
MPRINT(EM_DIAGRAM):   end;
2434330   +      end;
MPRINT(EM_DIAGRAM):   end;
2434331   +   end;
MPRINT(EM_DIAGRAM):   end;
2434332   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2434333   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2434334   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2434335   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2434336   +      end;
MPRINT(EM_DIAGRAM):   end;
2434337   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2434338   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2434339   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2434340   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2434341   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2434342   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2434343   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2434344   +         end;
MPRINT(EM_DIAGRAM):   end;
2434345   +      end;
MPRINT(EM_DIAGRAM):   end;
2434346   +   end;
MPRINT(EM_DIAGRAM):   end;
2434347   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2434348   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2434349   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2434350   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2434351   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2434352   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2434353   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434354   +   end;
MPRINT(EM_DIAGRAM):   end;
2434355   +end;
MPRINT(EM_DIAGRAM):   end;
2434356   +
2434357   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434358   +*** Checking missing input Interval
2434359   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2434360   +
2434361   +IF NMISS(
2434362   +   AcceptedCmpTotal ,
2434363   +   Age ,
2434364   +   Frq ,
2434365   +   Income ,
2434366   +   Kidhome ,
2434367   +   Mnt ,
2434368   +   MntFishProducts ,
2434369   +   MntFruits ,
2434370   +   MntGoldProds ,
2434371   +   MntMeatProducts ,
2434372   +   MntSweetProducts ,
2434373   +   MntWines ,
2434374   +   MonthsAsCustomer ,
2434375   +   NumCatalogPurchases ,
2434376   +   NumDealsPurchases ,
2434377   +   NumDistPurchases ,
2434378   +   NumStorePurchases ,
2434379   +   NumWebPurchases ,
2434380   +   NumWebVisitsMonth ,
2434381   +   RFMstat ,
2434382   +   RMntFrq ,
2434383   +   Recency ,
2434384   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2434385   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2434386   +
2434387   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434388   +END;
MPRINT(EM_DIAGRAM):   END;
2434389   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434390   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2434391   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434392   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2434393   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2434394   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2434395   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2434396   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2434397   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2434398   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2434399   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2434400   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2434401   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2434402   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2434403   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2434404   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2434405   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2434406   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2434407   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2434408   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2434409   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2434410   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2434411   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2434412   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2434413   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2434414   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2434415   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2434416   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2434417   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2434418   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2434419   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2434420   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2434421   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2434422   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2434423   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2434424   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2434425   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2434426   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2434427   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2434428   +END;
MPRINT(EM_DIAGRAM):   END;
2434429   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2434430   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2434431   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2434432   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2434433   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2434434   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2434435   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2434436   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2434437   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2434438   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2434439   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2434440   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2434441   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2434442   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2434443   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2434444   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2434445   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2434446   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2434447   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2434448   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2434449   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2434450   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2434451   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2434452   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2434453   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2434454   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2434455   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2434456   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2434457   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2434458   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2434459   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2434460   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2434461   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2434462   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2434463   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2434464   +   ELSE S_NumCatalogPurchases
2434465   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2434466   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2434467   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2434468   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2434469   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2434470   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2434471   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2434472   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2434473   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2434474   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2434475   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2434476   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2434477   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2434478   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2434479   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2434480   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2434481   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2434482   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2434483   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2434484   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2434485   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2434486   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2434487   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2434488   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2434489   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2434490   +END;
MPRINT(EM_DIAGRAM):   END;
2434491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434492   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2434493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434494   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434495   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2434496   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434497   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434498   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2434499   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434500   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2434501   +   H1x1_1  =     -1.5235159368138 * S_AcceptedCmpTotal
2434502   +          +     0.13941271308016 * S_Age  +    -0.84765157270503 * S_Frq
2434503   +          +    -0.89386555046676 * S_Income  +     1.62709236629244 *
2434504   +        S_Kidhome  +    -1.21416429819342 * S_Mnt  +    -1.95640488965637 *
2434505   +        S_MntFishProducts  +    -0.08621024993404 * S_MntFruits
2434506   +          +    -0.38536990009586 * S_MntGoldProds  +     3.12553097304637 *
2434507   +        S_MntMeatProducts  +    -2.50680711036653 * S_MntSweetProducts
2434508   +          +    -3.77770073626477 * S_MntWines  +     0.39118206604766 *
2434509   +        S_MonthsAsCustomer  +     1.80485993754239 * S_NumCatalogPurchases
2434510   +          +     3.21215425524619 * S_NumDealsPurchases
2434511   +          +     0.08695198777156 * S_NumDistPurchases
2434512   +          +    -2.58697971128295 * S_NumStorePurchases
2434513   +          +    -0.44431924796059 * S_NumWebPurchases
2434514   +          +     -1.4492698984921 * S_NumWebVisitsMonth
2434515   +          +     2.16652214648037 * S_RFMstat  +    -0.48027961131639 *
2434516   +        S_RMntFrq  +    -0.27206877070748 * S_Recency
2434517   +          +    -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 * 
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 * 
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts + 
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 * 
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines + 
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases + 
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases + 
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases + 
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 * 
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
2434518   +   H1x1_2  =     -0.5665707820209 * S_AcceptedCmpTotal
2434519   +          +    -1.33582859121223 * S_Age  +     0.90483024742522 * S_Frq
2434520   +          +    -2.00588558815165 * S_Income  +      3.0373198083895 *
2434521   +        S_Kidhome  +      0.4356905004225 * S_Mnt  +     0.19619626354366 *
2434522   +        S_MntFishProducts  +    -1.09111340184132 * S_MntFruits
2434523   +          +     0.36844676336289 * S_MntGoldProds  +    -2.23832561375429 *
2434524   +        S_MntMeatProducts  +    -0.18280081530069 * S_MntSweetProducts
2434525   +          +     2.11599309139107 * S_MntWines  +     0.68147940490709 *
2434526   +        S_MonthsAsCustomer  +    -0.73940648599397 * S_NumCatalogPurchases
2434527   +          +    -0.83844506398484 * S_NumDealsPurchases
2434528   +          +     0.60831936516804 * S_NumDistPurchases
2434529   +          +     1.79084087761626 * S_NumStorePurchases
2434530   +          +     1.17119196356453 * S_NumWebPurchases
2434531   +          +    -3.63586683518718 * S_NumWebVisitsMonth
2434532   +          +     0.60521990735996 * S_RFMstat  +     0.56036381019221 *
2434533   +        S_RMntFrq  +     3.84599118896159 * S_Recency
2434534   +          +     2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 * 
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome 
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 * 
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts + 
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 * 
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 * 
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 * 
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 * 
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq + 
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
2434535   +   H1x1_3  =    -2.34864034635966 * S_AcceptedCmpTotal
2434536   +          +     0.38417502023066 * S_Age  +     0.18241442054661 * S_Frq
2434537   +          +    -0.36643054878492 * S_Income  +    -0.01464967964014 *
2434538   +        S_Kidhome  +     0.13084033882631 * S_Mnt  +     1.43066752801424 *
2434539   +        S_MntFishProducts  +     0.30678881611098 * S_MntFruits
2434540   +          +    -0.35038082288662 * S_MntGoldProds  +    -6.79650673935808 *
2434541   +        S_MntMeatProducts  +    -0.35154740308081 * S_MntSweetProducts
2434542   +          +     4.53406963590593 * S_MntWines  +     0.35082802515055 *
2434543   +        S_MonthsAsCustomer  +    -1.62489937965567 * S_NumCatalogPurchases
2434544   +          +    -0.31484031572628 * S_NumDealsPurchases
2434545   +          +    -0.18273941035679 * S_NumDistPurchases
2434546   +          +     0.99501789733882 * S_NumStorePurchases
2434547   +          +     1.32014078829379 * S_NumWebPurchases
2434548   +          +    -1.34393498450215 * S_NumWebVisitsMonth
2434549   +          +    -0.93549119966022 * S_RFMstat  +    -1.74825390192193 *
2434550   +        S_RMntFrq  +     0.84406941726743 * S_Recency
2434551   +          +     -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 * 
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 * 
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098 
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts + 
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 * 
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 * 
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 * 
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 * 
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq + 
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
2434552   +   H1x1_4  =     0.46772023050431 * S_AcceptedCmpTotal
2434553   +          +    -0.64609651992636 * S_Age  +     0.65433283816167 * S_Frq
2434554   +          +     0.97922442633265 * S_Income  +    -0.37705204232056 *
2434555   +        S_Kidhome  +     0.00937752600299 * S_Mnt  +     -0.6082843846013 *
2434556   +        S_MntFishProducts  +     -0.6227107898918 * S_MntFruits
2434557   +          +      0.0291421224006 * S_MntGoldProds  +     1.09748402313736 *
2434558   +        S_MntMeatProducts  +     0.00604619863622 * S_MntSweetProducts
2434559   +          +    -0.74684537570529 * S_MntWines  +    -0.00266569003481 *
2434560   +        S_MonthsAsCustomer  +     2.01081657735872 * S_NumCatalogPurchases
2434561   +          +     1.19658719134196 * S_NumDealsPurchases
2434562   +          +     0.87478204472986 * S_NumDistPurchases
2434563   +          +    -0.20635856288784 * S_NumStorePurchases
2434564   +          +    -0.89927356974242 * S_NumWebPurchases
2434565   +          +     2.92285244132576 * S_NumWebVisitsMonth
2434566   +          +    -0.10913907245142 * S_RFMstat  +     1.64233441899256 *
2434567   +        S_RMntFrq  +    -3.64945971202322 * S_Recency
2434568   +          +    -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 * 
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome 
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 * 
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts + 
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 * 
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 * 
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 * 
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 * 
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq + 
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
2434569   +   H1x1_5  =    -1.22491918863941 * S_AcceptedCmpTotal
2434570   +          +     0.16201659993217 * S_Age  +     0.17189537824457 * S_Frq
2434571   +          +    -0.87922900323563 * S_Income  +    -0.79268410231108 *
2434572   +        S_Kidhome  +     0.62793961676074 * S_Mnt  +     0.20877761882787 *
2434573   +        S_MntFishProducts  +     0.99367872286661 * S_MntFruits
2434574   +          +     -0.4347564565882 * S_MntGoldProds  +    -0.16203279329295 *
2434575   +        S_MntMeatProducts  +     0.81409215344356 * S_MntSweetProducts
2434576   +          +     1.33482971563984 * S_MntWines  +    -1.17441882196058 *
2434577   +        S_MonthsAsCustomer  +    -1.72330829533107 * S_NumCatalogPurchases
2434578   +          +       -2.32617124568 * S_NumDealsPurchases
2434579   +          +    -0.56589187730672 * S_NumDistPurchases
2434580   +          +     1.07062299863482 * S_NumStorePurchases
2434581   +          +     0.30077273739578 * S_NumWebPurchases
2434582   +          +    -1.67745421915317 * S_NumWebVisitsMonth
2434583   +          +      0.0530074713265 * S_RFMstat  +    -0.55969729655382 *
2434584   +        S_RMntFrq  +     1.32196704233234 * S_Recency
2434585   +          +     1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 * 
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 * 
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661 
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts + 
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 * 
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 * 
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 * 
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 * 
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq + 
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
2434586   +   H1x1_1  = H1x1_1  +     0.19875423759582 * AcceptedCmp10
2434587   +          +    -1.84163905120352 * AcceptedCmp20  +    -1.63149345314696 *
2434588   +        AcceptedCmp30  +    -1.52652349127913 * AcceptedCmp40
2434589   +          +    -0.97663634905647 * AcceptedCmp50  +    -0.94352222509088 *
2434590   +        Complain0  +    -0.63297203617355 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 * 
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 + 
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 * 
HigherEducationBinary0 ;
2434591   +   H1x1_2  = H1x1_2  +      0.0505791781839 * AcceptedCmp10
2434592   +          +    -0.19407965320143 * AcceptedCmp20  +     0.35537657271506 *
2434593   +        AcceptedCmp30  +    -0.84577216347728 * AcceptedCmp40
2434594   +          +     1.73085566880686 * AcceptedCmp50  +     0.05800586053869 *
2434595   +        Complain0  +    -0.62505561129469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 * 
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 + 
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 * 
HigherEducationBinary0 ;
2434596   +   H1x1_3  = H1x1_3  +     0.54825581966403 * AcceptedCmp10
2434597   +          +     -0.0966204838125 * AcceptedCmp20  +    -1.31707923763053 *
2434598   +        AcceptedCmp30  +    -1.21021077486757 * AcceptedCmp40
2434599   +          +     3.29102250037389 * AcceptedCmp50  +    -0.16383687725206 *
2434600   +        Complain0  +     0.00651446514934 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 * 
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 + 
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 * 
HigherEducationBinary0 ;
2434601   +   H1x1_4  = H1x1_4  +    -1.18573650260336 * AcceptedCmp10
2434602   +          +    -1.73968979068234 * AcceptedCmp20  +    -1.31277698137778 *
2434603   +        AcceptedCmp30  +    -1.74346538593922 * AcceptedCmp40
2434604   +          +    -0.72543919818299 * AcceptedCmp50  +    -0.06328353200384 *
2434605   +        Complain0  +     0.74828735398796 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234 
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 + 
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 * 
HigherEducationBinary0 ;
2434606   +   H1x1_5  = H1x1_5  +    -0.19622185523754 * AcceptedCmp10
2434607   +          +     -0.4643498903813 * AcceptedCmp20  +     0.69293644934542 *
2434608   +        AcceptedCmp30  +     0.23077838801355 * AcceptedCmp40
2434609   +          +     0.53061813608476 * AcceptedCmp50  +    -0.56870999936869 *
2434610   +        Complain0  +      0.5917990310858 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 * 
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 + 
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 * 
HigherEducationBinary0 ;
2434611   +   H1x1_1  = H1x1_1  +     1.01422000032629 * Education2n_Cycle
2434612   +          +    -0.77619298826287 * EducationBasic  +     0.35633748974614 *
2434613   +        EducationGraduation  +     0.98491516107588 * EducationMaster
2434614   +          +    -0.27797737429678 * Marital_StatusDivorced
2434615   +          +    -0.08137635862327 * Marital_StatusMarried
2434616   +          +     0.06275411820495 * Marital_StatusSingle
2434617   +          +    -0.19979743343415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle + 
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588 
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 * 
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 * 
Marital_StatusTogether ;
2434618   +   H1x1_2  = H1x1_2  +    -0.66224206017124 * Education2n_Cycle
2434619   +          +     0.80729589186486 * EducationBasic  +     0.75931615755998 *
2434620   +        EducationGraduation  +    -0.05470462753112 * EducationMaster
2434621   +          +     0.05151426841441 * Marital_StatusDivorced
2434622   +          +     1.19165082030442 * Marital_StatusMarried
2434623   +          +    -1.08257080662611 * Marital_StatusSingle
2434624   +          +     0.13534863375625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle + 
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112 
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 * 
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 * 
Marital_StatusTogether ;
2434625   +   H1x1_3  = H1x1_3  +     0.20065577451105 * Education2n_Cycle
2434626   +          +    -0.14205714608311 * EducationBasic  +    -0.07077711368393 *
2434627   +        EducationGraduation  +     0.40262329710793 * EducationMaster
2434628   +          +      0.0238206459022 * Marital_StatusDivorced
2434629   +          +     -0.4653244204261 * Marital_StatusMarried
2434630   +          +     0.13051613619882 * Marital_StatusSingle
2434631   +          +    -0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle + 
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation + 
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced + 
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle + 
-0.35951366919755 * Marital_StatusTogether ;
2434632   +   H1x1_4  = H1x1_4  +     -0.8555672630555 * Education2n_Cycle
2434633   +          +     0.58439980233621 * EducationBasic  +     0.04784356342853 *
2434634   +        EducationGraduation  +    -0.79764992264249 * EducationMaster
2434635   +          +     -0.7449356409222 * Marital_StatusDivorced
2434636   +          +    -1.46604673521535 * Marital_StatusMarried
2434637   +          +     0.74484771688818 * Marital_StatusSingle
2434638   +          +    -1.91273009779071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle + 
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249 
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 * 
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 * 
Marital_StatusTogether ;
2434639   +   H1x1_5  = H1x1_5  +    -0.45561096683674 * Education2n_Cycle
2434640   +          +    -0.08389156101858 * EducationBasic  +    -1.24281299616343 *
2434641   +        EducationGraduation  +    -0.00999807517226 * EducationMaster
2434642   +          +    -3.68044980584423 * Marital_StatusDivorced
2434643   +          +     3.14587407902338 * Marital_StatusMarried
2434644   +          +    -2.66118132753024 * Marital_StatusSingle
2434645   +          +     3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle + 
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation + 
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced + 
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle + 
3.50991640149914 * Marital_StatusTogether ;
2434646   +   H1x1_1  =    -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
2434647   +   H1x1_2  =     0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
2434648   +   H1x1_3  =    -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
2434649   +   H1x1_4  =    -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
2434650   +   H1x1_5  =    -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
2434651   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2434652   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2434653   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2434654   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2434655   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2434656   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2434657   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2434658   +END;
MPRINT(EM_DIAGRAM):   END;
2434659   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2434660   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2434661   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2434662   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2434663   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2434664   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2434665   +END;
MPRINT(EM_DIAGRAM):   END;
2434666   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434667   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2434668   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434669   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2434670   +   H1x2_1  =     0.02206354442682 * S_AcceptedCmpTotal
2434671   +          +    -1.34753268833642 * S_Age  +    -2.08377331969695 * S_Frq
2434672   +          +    -1.39854535380539 * S_Income  +     2.13620611759545 *
2434673   +        S_Kidhome  +    -1.50515365217324 * S_Mnt  +     0.85499321862984 *
2434674   +        S_MntFishProducts  +    -1.17732452790345 * S_MntFruits
2434675   +          +     1.52355640622249 * S_MntGoldProds  +     1.31854239360457 *
2434676   +        S_MntMeatProducts  +    -0.03265851293389 * S_MntSweetProducts
2434677   +          +     2.18666242847435 * S_MntWines  +     0.08246249957908 *
2434678   +        S_MonthsAsCustomer  +    -1.06901902236609 * S_NumCatalogPurchases
2434679   +          +     0.89261880438741 * S_NumDealsPurchases
2434680   +          +    -1.61647413199892 * S_NumDistPurchases
2434681   +          +    -0.56304669045195 * S_NumStorePurchases
2434682   +          +      0.7766837080945 * S_NumWebPurchases
2434683   +          +     -2.2953497398902 * S_NumWebVisitsMonth
2434684   +          +    -3.34547809243199 * S_RFMstat  +     0.07311937799261 *
2434685   +        S_RMntFrq  +     -0.5786489917247 * S_Recency
2434686   +          +    -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 * 
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 * 
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts + 
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 * 
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines + 
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases + 
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases + 
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases + 
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 * 
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
2434687   +   H1x2_2  =      0.0341880757331 * S_AcceptedCmpTotal
2434688   +          +     0.72034771315738 * S_Age  +     0.64155966340389 * S_Frq
2434689   +          +    -1.06570008729492 * S_Income  +    -1.84532938869849 *
2434690   +        S_Kidhome  +     0.94433555965982 * S_Mnt  +     1.23831916074831 *
2434691   +        S_MntFishProducts  +     1.33415870886475 * S_MntFruits
2434692   +          +    -0.51253922893993 * S_MntGoldProds  +     0.02241594009025 *
2434693   +        S_MntMeatProducts  +     -1.2811169586741 * S_MntSweetProducts
2434694   +          +     1.96686773881953 * S_MntWines  +     1.44655944802715 *
2434695   +        S_MonthsAsCustomer  +    -1.18627316384798 * S_NumCatalogPurchases
2434696   +          +     1.02431289724643 * S_NumDealsPurchases
2434697   +          +    -0.90960173637405 * S_NumDistPurchases
2434698   +          +     1.24283490404772 * S_NumStorePurchases
2434699   +          +     1.23072413154592 * S_NumWebPurchases
2434700   +          +    -0.21533378473931 * S_NumWebVisitsMonth
2434701   +          +     1.26438704884008 * S_RFMstat  +      0.0014042871018 *
2434702   +        S_RMntFrq  +     0.32357651423135 * S_Recency
2434703   +          +    -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age 
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome + 
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 * 
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts + 
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 * 
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 * 
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 * 
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 * 
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq + 
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
2434704   +   H1x2_3  =    -0.57066024275015 * S_AcceptedCmpTotal
2434705   +          +     0.16615358153136 * S_Age  +    -0.60017461612499 * S_Frq
2434706   +          +    -0.21195793925019 * S_Income  +    -0.36049126996499 *
2434707   +        S_Kidhome  +     0.97458542661118 * S_Mnt  +     0.62279162661518 *
2434708   +        S_MntFishProducts  +    -0.44715765367363 * S_MntFruits
2434709   +          +     0.91519163455361 * S_MntGoldProds  +     1.07312113398768 *
2434710   +        S_MntMeatProducts  +    -1.61967017526055 * S_MntSweetProducts
2434711   +          +    -1.88327677412185 * S_MntWines  +    -1.67067768979245 *
2434712   +        S_MonthsAsCustomer  +    -0.64725516463464 * S_NumCatalogPurchases
2434713   +          +    -0.26249596122198 * S_NumDealsPurchases
2434714   +          +    -0.63328519804758 * S_NumDistPurchases
2434715   +          +    -0.88467503575886 * S_NumStorePurchases
2434716   +          +    -0.83120537310738 * S_NumWebPurchases
2434717   +          +     1.40072282351719 * S_NumWebVisitsMonth
2434718   +          +     1.42591300760984 * S_RFMstat  +     1.93593865100837 *
2434719   +        S_RMntFrq  +     -1.2794275536508 * S_Recency
2434720   +          +    -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 * 
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 * 
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts + 
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 * 
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines + 
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases + 
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases + 
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases + 
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 * 
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
2434721   +   H1x2_4  =     0.70159995537759 * S_AcceptedCmpTotal
2434722   +          +    -0.70199351793792 * S_Age  +     1.63573967285806 * S_Frq
2434723   +          +     -0.1930098634567 * S_Income  +    -0.43173926207337 *
2434724   +        S_Kidhome  +    -0.45239271926178 * S_Mnt  +    -0.14139816383874 *
2434725   +        S_MntFishProducts  +    -0.70568635660703 * S_MntFruits
2434726   +          +     1.68796268038024 * S_MntGoldProds  +     0.80481626355934 *
2434727   +        S_MntMeatProducts  +     0.29831384975096 * S_MntSweetProducts
2434728   +          +    -0.50792336172825 * S_MntWines  +     0.80425149159678 *
2434729   +        S_MonthsAsCustomer  +    -2.26171302044375 * S_NumCatalogPurchases
2434730   +          +     1.30167361451945 * S_NumDealsPurchases
2434731   +          +     1.45457613716235 * S_NumDistPurchases
2434732   +          +    -0.40226463685252 * S_NumStorePurchases
2434733   +          +     0.36369161683572 * S_NumWebPurchases
2434734   +          +    -2.65684851610403 * S_NumWebVisitsMonth
2434735   +          +    -1.14810413235545 * S_RFMstat  +       1.291857215261 *
2434736   +        S_RMntFrq  +     1.36572595403825 * S_Recency
2434737   +          +    -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 * 
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome 
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 * 
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts + 
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 * 
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 * 
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 * 
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 * 
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq + 
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
2434738   +   H1x2_5  =    -1.00456225444665 * S_AcceptedCmpTotal
2434739   +          +     0.19033874303798 * S_Age  +    -0.62578451616415 * S_Frq
2434740   +          +    -0.96647190269426 * S_Income  +     1.77002676974464 *
2434741   +        S_Kidhome  +    -0.53816249322166 * S_Mnt  +     0.21322270253871 *
2434742   +        S_MntFishProducts  +     0.84210241961105 * S_MntFruits
2434743   +          +     0.44153678515007 * S_MntGoldProds  +    -0.23120999196747 *
2434744   +        S_MntMeatProducts  +     0.62950730283125 * S_MntSweetProducts
2434745   +          +    -0.64043011108056 * S_MntWines  +    -2.74922907599662 *
2434746   +        S_MonthsAsCustomer  +     0.67939322758717 * S_NumCatalogPurchases
2434747   +          +    -0.54572162665338 * S_NumDealsPurchases
2434748   +          +      0.9607390449318 * S_NumDistPurchases
2434749   +          +    -0.03259470545754 * S_NumStorePurchases
2434750   +          +     0.19202241423412 * S_NumWebPurchases
2434751   +          +     0.61085831658456 * S_NumWebVisitsMonth
2434752   +          +    -0.08582160429243 * S_RFMstat  +     1.73862452808565 *
2434753   +        S_RMntFrq  +    -0.01216476188714 * S_Recency
2434754   +          +     -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 * 
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 * 
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts + 
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 * 
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines + 
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases + 
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases + 
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases + 
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 * 
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
2434755   +   H1x2_1  = H1x2_1  +     0.83453601566539 * AcceptedCmp10
2434756   +          +     0.59109136511077 * AcceptedCmp20  +     -0.9669340701943 *
2434757   +        AcceptedCmp30  +    -2.31468262956126 * AcceptedCmp40
2434758   +          +    -0.76277791850069 * AcceptedCmp50  +     0.30895289981412 *
2434759   +        Complain0  +       0.147233855837 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 * 
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 + 
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 * 
HigherEducationBinary0 ;
2434760   +   H1x2_2  = H1x2_2  +     0.42789425545567 * AcceptedCmp10
2434761   +          +     0.08505833889085 * AcceptedCmp20  +    -1.15112188313855 *
2434762   +        AcceptedCmp30  +    -1.24362486486214 * AcceptedCmp40
2434763   +          +     0.04131419116048 * AcceptedCmp50  +    -0.45255799355317 *
2434764   +        Complain0  +    -0.32616423192953 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 * 
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 + 
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 * 
HigherEducationBinary0 ;
2434765   +   H1x2_3  = H1x2_3  +    -0.03136360497649 * AcceptedCmp10
2434766   +          +     0.33867713207886 * AcceptedCmp20  +     0.05809342990544 *
2434767   +        AcceptedCmp30  +    -0.06416815079894 * AcceptedCmp40
2434768   +          +     1.14617960682421 * AcceptedCmp50  +    -0.82461320336041 *
2434769   +        Complain0  +     0.58944444655621 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 * 
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 + 
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 * 
HigherEducationBinary0 ;
2434770   +   H1x2_4  = H1x2_4  +    -1.12705500616438 * AcceptedCmp10
2434771   +          +      0.0487863004734 * AcceptedCmp20  +     1.30229008593765 *
2434772   +        AcceptedCmp30  +      0.1726718549662 * AcceptedCmp40
2434773   +          +     0.68443569845295 * AcceptedCmp50  +     2.39733248962228 *
2434774   +        Complain0  +      -0.620937291929 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 * 
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 + 
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 * 
HigherEducationBinary0 ;
2434775   +   H1x2_5  = H1x2_5  +     1.42400460803453 * AcceptedCmp10
2434776   +          +    -1.22361480936625 * AcceptedCmp20  +     1.31090186367202 *
2434777   +        AcceptedCmp30  +    -1.40343404818254 * AcceptedCmp40
2434778   +          +    -0.57377230862494 * AcceptedCmp50  +     0.58622740778295 *
2434779   +        Complain0  +    -0.83222074319962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 * 
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 + 
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 * 
HigherEducationBinary0 ;
2434780   +   H1x2_1  = H1x2_1  +     1.56508379719546 * Education2n_Cycle
2434781   +          +     0.52302987210661 * EducationBasic  +     -0.0570045326497 *
2434782   +        EducationGraduation  +    -0.01838790774804 * EducationMaster
2434783   +          +    -2.32430245081383 * Marital_StatusDivorced
2434784   +          +    -0.09815511356796 * Marital_StatusMarried
2434785   +          +     0.13075504294551 * Marital_StatusSingle
2434786   +          +     -0.0278875765201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle + 
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804 
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 * 
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 * 
Marital_StatusTogether ;
2434787   +   H1x2_2  = H1x2_2  +    -0.85592920992847 * Education2n_Cycle
2434788   +          +     0.93272618259957 * EducationBasic  +     0.48987674771079 *
2434789   +        EducationGraduation  +    -1.12454002820451 * EducationMaster
2434790   +          +    -0.65574603869224 * Marital_StatusDivorced
2434791   +          +     1.54672472575294 * Marital_StatusMarried
2434792   +          +    -1.59817602340208 * Marital_StatusSingle
2434793   +          +     1.94381954546813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle + 
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451 
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 * 
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 * 
Marital_StatusTogether ;
2434794   +   H1x2_3  = H1x2_3  +     0.37093371596523 * Education2n_Cycle
2434795   +          +    -2.05531065359129 * EducationBasic  +     1.16090743585078 *
2434796   +        EducationGraduation  +     0.87547303889444 * EducationMaster
2434797   +          +    -0.50911604604781 * Marital_StatusDivorced
2434798   +          +     0.30403066135719 * Marital_StatusMarried
2434799   +          +      0.1026950879545 * Marital_StatusSingle
2434800   +          +     0.01000166524405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle + 
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444 
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 * 
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 * 
Marital_StatusTogether ;
2434801   +   H1x2_4  = H1x2_4  +     1.28509086202466 * Education2n_Cycle
2434802   +          +     0.07860157688162 * EducationBasic  +     0.24607672351689 *
2434803   +        EducationGraduation  +    -0.06009602645566 * EducationMaster
2434804   +          +     1.07371507133318 * Marital_StatusDivorced
2434805   +          +    -0.07097334129051 * Marital_StatusMarried
2434806   +          +    -0.48339718568621 * Marital_StatusSingle
2434807   +          +    -0.08900780355835 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle + 
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566 
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 * 
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 * 
Marital_StatusTogether ;
2434808   +   H1x2_5  = H1x2_5  +    -1.08109633810919 * Education2n_Cycle
2434809   +          +    -0.54966585100103 * EducationBasic  +      0.5388683065169 *
2434810   +        EducationGraduation  +     0.46960055830119 * EducationMaster
2434811   +          +     1.04342893515504 * Marital_StatusDivorced
2434812   +          +     1.16171312085032 * Marital_StatusMarried
2434813   +          +    -0.30201646939913 * Marital_StatusSingle
2434814   +          +     1.84122645884771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle + 
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119 
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 * 
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 * 
Marital_StatusTogether ;
2434815   +   H1x2_1  =     1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
2434816   +   H1x2_2  =    -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
2434817   +   H1x2_3  =    -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
2434818   +   H1x2_4  =     0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
2434819   +   H1x2_5  =     -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
2434820   +END;
MPRINT(EM_DIAGRAM):   END;
2434821   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2434822   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2434823   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2434824   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2434825   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2434826   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2434827   +END;
MPRINT(EM_DIAGRAM):   END;
2434828   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434829   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2434830   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434831   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2434832   +   H1x3_1  =     0.04411772880581 * S_AcceptedCmpTotal
2434833   +          +    -1.62725197326682 * S_Age  +    -1.99668213406033 * S_Frq
2434834   +          +     -1.2265241921112 * S_Income  +     1.99702869958035 *
2434835   +        S_Kidhome  +    -1.46762539068512 * S_Mnt  +     0.97784534044189 *
2434836   +        S_MntFishProducts  +    -1.07945265688497 * S_MntFruits
2434837   +          +     2.09306294956674 * S_MntGoldProds  +     1.46219664114361 *
2434838   +        S_MntMeatProducts  +     0.10961158671991 * S_MntSweetProducts
2434839   +          +     2.03040669273977 * S_MntWines  +     0.16536646017211 *
2434840   +        S_MonthsAsCustomer  +    -0.88077951545076 * S_NumCatalogPurchases
2434841   +          +     1.32256781010645 * S_NumDealsPurchases
2434842   +          +    -1.43015438973619 * S_NumDistPurchases
2434843   +          +    -0.63489289584421 * S_NumStorePurchases
2434844   +          +     0.90508699686841 * S_NumWebPurchases
2434845   +          +    -2.24234858061014 * S_NumWebVisitsMonth
2434846   +          +     -2.9988027991146 * S_RFMstat  +     0.35987461993699 *
2434847   +        S_RMntFrq  +    -1.09317668626142 * S_Recency
2434848   +          +    -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 * 
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome 
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 * 
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts + 
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 * 
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 * 
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 * 
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 * 
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq + 
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
2434849   +   H1x3_2  =     0.10522923391314 * S_AcceptedCmpTotal
2434850   +          +     0.68417479453112 * S_Age  +     0.46966162186743 * S_Frq
2434851   +          +    -1.21537535753115 * S_Income  +    -1.87423294109672 *
2434852   +        S_Kidhome  +     0.76913864731495 * S_Mnt  +     1.08535778796502 *
2434853   +        S_MntFishProducts  +     1.27743864099826 * S_MntFruits
2434854   +          +     -0.3186089651882 * S_MntGoldProds  +    -0.00224333051647 *
2434855   +        S_MntMeatProducts  +    -1.28169616734092 * S_MntSweetProducts
2434856   +          +     1.67350500234032 * S_MntWines  +     1.09584504562467 *
2434857   +        S_MonthsAsCustomer  +    -1.45467876727494 * S_NumCatalogPurchases
2434858   +          +     0.85965187264096 * S_NumDealsPurchases
2434859   +          +    -1.15239933286756 * S_NumDistPurchases
2434860   +          +     1.20800889102387 * S_NumStorePurchases
2434861   +          +     1.08790389130242 * S_NumWebPurchases
2434862   +          +    -0.13665551161149 * S_NumWebVisitsMonth
2434863   +          +     1.02103499612659 * S_RFMstat  +    -0.12980097143044 *
2434864   +        S_RMntFrq  +     0.65854311654256 * S_Recency
2434865   +          +    -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 * 
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 * 
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826 
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts + 
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 * 
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 * 
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 * 
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 * 
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq + 
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
2434866   +   H1x3_3  =    -0.72575004293074 * S_AcceptedCmpTotal
2434867   +          +     0.34932839743259 * S_Age  +     -0.2673460618328 * S_Frq
2434868   +          +     0.25743187687481 * S_Income  +    -0.02172890929346 *
2434869   +        S_Kidhome  +     1.21785656626837 * S_Mnt  +     0.37454359336223 *
2434870   +        S_MntFishProducts  +    -0.32600053706408 * S_MntFruits
2434871   +          +     0.57807148940534 * S_MntGoldProds  +     1.14736546512366 *
2434872   +        S_MntMeatProducts  +    -1.41517082393978 * S_MntSweetProducts
2434873   +          +    -1.44899595080061 * S_MntWines  +    -1.45520867126531 *
2434874   +        S_MonthsAsCustomer  +    -0.33372174099196 * S_NumCatalogPurchases
2434875   +          +     -0.5767607129654 * S_NumDealsPurchases
2434876   +          +     -0.2643921429796 * S_NumDistPurchases
2434877   +          +    -0.67417489911206 * S_NumStorePurchases
2434878   +          +    -0.51423877684891 * S_NumWebPurchases
2434879   +          +     1.40328299605176 * S_NumWebVisitsMonth
2434880   +          +     1.35588787174957 * S_RFMstat  +     1.98416436137119 *
2434881   +        S_RMntFrq  +     -0.8447362450681 * S_Recency
2434882   +          +    -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 * 
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome 
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 * 
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts + 
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 * 
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 * 
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 * 
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 * 
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq + 
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
2434883   +   H1x3_4  =     0.05745684959388 * S_AcceptedCmpTotal
2434884   +          +    -0.71077680161454 * S_Age  +      1.4854566142375 * S_Frq
2434885   +          +    -0.32870416928843 * S_Income  +    -0.24944295149087 *
2434886   +        S_Kidhome  +     -0.8312409740431 * S_Mnt  +    -0.09638646505384 *
2434887   +        S_MntFishProducts  +    -0.86550491354678 * S_MntFruits
2434888   +          +     1.46902858697296 * S_MntGoldProds  +      0.3661164136841 *
2434889   +        S_MntMeatProducts  +     0.43108270077708 * S_MntSweetProducts
2434890   +          +    -0.87140466249616 * S_MntWines  +     0.17511224898094 *
2434891   +        S_MonthsAsCustomer  +    -2.66256923117027 * S_NumCatalogPurchases
2434892   +          +      1.2821617657076 * S_NumDealsPurchases
2434893   +          +     1.26584115202735 * S_NumDistPurchases
2434894   +          +    -0.46597664211833 * S_NumStorePurchases
2434895   +          +     0.45652363472866 * S_NumWebPurchases
2434896   +          +    -2.66296112021252 * S_NumWebVisitsMonth
2434897   +          +    -0.86670667018974 * S_RFMstat  +     0.60866041131732 *
2434898   +        S_RMntFrq  +     1.31886754707923 * S_Recency
2434899   +          +    -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 * 
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome 
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 * 
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts + 
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 * 
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 * 
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 * 
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 * 
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq + 
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
2434900   +   H1x3_5  =    -0.66850525418144 * S_AcceptedCmpTotal
2434901   +          +     0.14331320698516 * S_Age  +    -0.82708146094779 * S_Frq
2434902   +          +    -0.95718847240937 * S_Income  +     1.37375648833049 *
2434903   +        S_Kidhome  +    -0.48314397401233 * S_Mnt  +     0.07047324834759 *
2434904   +        S_MntFishProducts  +     0.86114312801139 * S_MntFruits
2434905   +          +     0.54573348379533 * S_MntGoldProds  +    -0.05966372249273 *
2434906   +        S_MntMeatProducts  +     0.47275063848217 * S_MntSweetProducts
2434907   +          +    -0.62962007155261 * S_MntWines  +    -2.38081462831488 *
2434908   +        S_MonthsAsCustomer  +     0.56594272689824 * S_NumCatalogPurchases
2434909   +          +    -0.85162564171681 * S_NumDealsPurchases
2434910   +          +     0.64631099667221 * S_NumDistPurchases
2434911   +          +    -0.03081963858636 * S_NumStorePurchases
2434912   +          +    -0.24124717624664 * S_NumWebPurchases
2434913   +          +     0.56425980772372 * S_NumWebVisitsMonth
2434914   +          +    -0.32254616624678 * S_RFMstat  +     1.84875225899832 *
2434915   +        S_RMntFrq  +     0.08133312388911 * S_Recency
2434916   +          +    -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 * 
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 * 
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts + 
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 * 
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines + 
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases + 
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases + 
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases + 
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 * 
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
2434917   +   H1x3_1  = H1x3_1  +     1.03487942320068 * AcceptedCmp10
2434918   +          +     0.77723443135875 * AcceptedCmp20  +    -1.04686858569959 *
2434919   +        AcceptedCmp30  +    -1.87852311800194 * AcceptedCmp40
2434920   +          +    -0.69838759011672 * AcceptedCmp50  +     0.50242045854463 *
2434921   +        Complain0  +    -0.13339808164255 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 * 
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 + 
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 * 
HigherEducationBinary0 ;
2434922   +   H1x3_2  = H1x3_2  +     0.39887299789564 * AcceptedCmp10
2434923   +          +     0.12293700562648 * AcceptedCmp20  +    -1.41656670681309 *
2434924   +        AcceptedCmp30  +    -1.04607557362847 * AcceptedCmp40
2434925   +          +     0.02824649030864 * AcceptedCmp50  +    -0.46581865837196 *
2434926   +        Complain0  +    -0.45913631308543 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 * 
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 + 
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 * 
HigherEducationBinary0 ;
2434927   +   H1x3_3  = H1x3_3  +     0.20672868292414 * AcceptedCmp10
2434928   +          +     0.52082182457868 * AcceptedCmp20  +     0.54911826263592 *
2434929   +        AcceptedCmp30  +    -0.02400616289922 * AcceptedCmp40
2434930   +          +     1.22209744911863 * AcceptedCmp50  +    -0.68243413694538 *
2434931   +        Complain0  +     0.15620895311704 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 * 
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 + 
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 * 
HigherEducationBinary0 ;
2434932   +   H1x3_4  = H1x3_4  +    -0.88269820758187 * AcceptedCmp10
2434933   +          +    -0.19276892535938 * AcceptedCmp20  +     1.26789056018511 *
2434934   +        AcceptedCmp30  +     0.04396979158385 * AcceptedCmp40
2434935   +          +     0.54194186871284 * AcceptedCmp50  +     2.07766091697967 *
2434936   +        Complain0  +    -0.43514178858246 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938 
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 + 
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 * 
HigherEducationBinary0 ;
2434937   +   H1x3_5  = H1x3_5  +     1.04303179873707 * AcceptedCmp10
2434938   +          +    -1.29742389809739 * AcceptedCmp20  +     1.21708533617895 *
2434939   +        AcceptedCmp30  +    -1.47807634614974 * AcceptedCmp40
2434940   +          +     -0.7694244559597 * AcceptedCmp50  +     0.51798162453723 *
2434941   +        Complain0  +    -0.95513113905832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 * 
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 + 
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 * 
HigherEducationBinary0 ;
2434942   +   H1x3_1  = H1x3_1  +     1.27822716215014 * Education2n_Cycle
2434943   +          +     0.45900505383383 * EducationBasic  +    -0.35822992758656 *
2434944   +        EducationGraduation  +     0.05949934527868 * EducationMaster
2434945   +          +    -2.49973437075558 * Marital_StatusDivorced
2434946   +          +    -0.18076948182574 * Marital_StatusMarried
2434947   +          +     0.13498525495231 * Marital_StatusSingle
2434948   +          +    -0.02365465636052 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle + 
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868 
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 * 
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 * 
Marital_StatusTogether ;
2434949   +   H1x3_2  = H1x3_2  +    -1.14981446246051 * Education2n_Cycle
2434950   +          +     0.68006996858541 * EducationBasic  +    -0.06493857044709 *
2434951   +        EducationGraduation  +    -1.22462805502453 * EducationMaster
2434952   +          +       -0.59463732835 * Marital_StatusDivorced
2434953   +          +     1.37741332427598 * Marital_StatusMarried
2434954   +          +     -1.5833455713231 * Marital_StatusSingle
2434955   +          +     1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle + 
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation + 
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced + 
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle + 
1.79205360628448 * Marital_StatusTogether ;
2434956   +   H1x3_3  = H1x3_3  +     0.17779609626753 * Education2n_Cycle
2434957   +          +    -2.22704675950779 * EducationBasic  +     1.30292325944162 *
2434958   +        EducationGraduation  +     0.68083131423474 * EducationMaster
2434959   +          +    -0.44569556289443 * Marital_StatusDivorced
2434960   +          +     0.29918053103557 * Marital_StatusMarried
2434961   +          +    -0.10337314064224 * Marital_StatusSingle
2434962   +          +     0.04054221993299 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle + 
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474 
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 * 
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 * 
Marital_StatusTogether ;
2434963   +   H1x3_4  = H1x3_4  +     1.16412985277542 * Education2n_Cycle
2434964   +          +     0.18806330813344 * EducationBasic  +     0.00212145829045 *
2434965   +        EducationGraduation  +     0.00087354662697 * EducationMaster
2434966   +          +     1.13881957277462 * Marital_StatusDivorced
2434967   +          +    -0.35849807146313 * Marital_StatusMarried
2434968   +          +    -0.22168731316885 * Marital_StatusSingle
2434969   +          +    -0.22672306263461 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle + 
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697 
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 * 
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 * 
Marital_StatusTogether ;
2434970   +   H1x3_5  = H1x3_5  +    -1.25195599938207 * Education2n_Cycle
2434971   +          +    -0.60946428681789 * EducationBasic  +     0.39993500009227 *
2434972   +        EducationGraduation  +     0.43730905987249 * EducationMaster
2434973   +          +     1.10774969923269 * Marital_StatusDivorced
2434974   +          +     1.08409594073043 * Marital_StatusMarried
2434975   +          +    -0.33145048007894 * Marital_StatusSingle
2434976   +          +     1.68703837664761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle + 
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249 
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 * 
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 * 
Marital_StatusTogether ;
2434977   +   H1x3_1  =     1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
2434978   +   H1x3_2  =    -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
2434979   +   H1x3_3  =    -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
2434980   +   H1x3_4  =     0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
2434981   +   H1x3_5  =    -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
2434982   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2434983   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2434984   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2434985   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2434986   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 * 
H1x3_1 ;
2434987   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2434988   +   IF H1x3_2  < _REC_EPS AND H1x3_2  > - _REC_EPS THEN
2434989   +   H1x3_2  = H1x3_2  * H1x3_2 ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 * 
H1x3_2 ;
2434990   +   ELSE H1x3_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
2434991   +   IF H1x3_3  < _REC_EPS AND H1x3_3  > - _REC_EPS THEN
2434992   +   H1x3_3  = H1x3_3  * H1x3_3 ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 * 
H1x3_3 ;
2434993   +   ELSE H1x3_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
2434994   +   IF H1x3_4  < _REC_EPS AND H1x3_4  > - _REC_EPS THEN
2434995   +   H1x3_4  = H1x3_4  * H1x3_4 ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 * 
H1x3_4 ;
2434996   +   ELSE H1x3_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
2434997   +   IF H1x3_5  < _REC_EPS AND H1x3_5  > - _REC_EPS THEN
2434998   +   H1x3_5  = H1x3_5  * H1x3_5 ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 * 
H1x3_5 ;
2434999   +   ELSE H1x3_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
2435000   +END;
MPRINT(EM_DIAGRAM):   END;
2435001   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2435002   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2435003   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2435004   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2435005   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2435006   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2435007   +END;
MPRINT(EM_DIAGRAM):   END;
2435008   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435009   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2435010   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435011   +
2435012   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2435013   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2435014   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2435015   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2435016   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2435017   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2435018   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2435019   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2435020   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2435021   +end;
MPRINT(EM_DIAGRAM):   end;
2435022   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435023   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2435024   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2435025   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2435026   +   end;
MPRINT(EM_DIAGRAM):   end;
2435027   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2435028   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2435029   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2435030   +   end;
MPRINT(EM_DIAGRAM):   end;
2435031   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2435032   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2435033   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2435034   +   end;
MPRINT(EM_DIAGRAM):   end;
2435035   +end;
MPRINT(EM_DIAGRAM):   end;
2435036   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2435037   +   P_DepVar1  =     12.3694111963696 * H1x1_1  +     -9.1014019341077 * H1x1_2
2435038   +          +    -14.9093780045901 * H1x1_3  +     25.4505756686259 * H1x1_4
2435039   +          +    -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 + 
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
2435040   +   P_DepVar1  = P_DepVar1  +     -0.2373753683635 * H1x2_1
2435041   +          +    -0.03661175538589 * H1x2_2  +     0.29534813812803 * H1x2_3
2435042   +          +     0.11908166898588 * H1x2_4  +      -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 * 
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
2435043   +   P_DepVar1  = P_DepVar1  +    -0.00276620815201 * H1x3_1
2435044   +          +     0.00487849269566 * H1x3_2  +     0.01323887261394 * H1x3_3
2435045   +          +     -0.0271389925801 * H1x3_4  +     0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 * 
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
2435046   +   P_DepVar1  =      4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
2435047   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2435048   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2435049   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2435050   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2435051   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2435052   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2435053   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2435054   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2435055   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2435056   +END;
MPRINT(EM_DIAGRAM):   END;
2435057   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2435058   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2435059   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2435060   +END;
MPRINT(EM_DIAGRAM):   END;
2435061   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2435062   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2435063   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2435064   +END;
MPRINT(EM_DIAGRAM):   END;
2435065   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2435066   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2435067   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2435068   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2435069   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2435070   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2435071   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2435072   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435073   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2435074   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435075   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2435076   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2435077   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2435078   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2435079   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2435080   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2435081   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2435082   +END;
MPRINT(EM_DIAGRAM):   END;
2435083   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2435084   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2435085   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2435086   +drop
2435087   +H1x1_1
2435088   +H1x1_2
2435089   +H1x1_3
2435090   +H1x1_4
2435091   +H1x1_5
2435092   +H1x2_1
2435093   +H1x2_2
2435094   +H1x2_3
2435095   +H1x2_4
2435096   +H1x2_5
2435097   +H1x3_1
2435098   +H1x3_2
2435099   +H1x3_3
2435100   +H1x3_4
2435101   +H1x3_5
2435102   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4 
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
2435103   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2435104   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2435105   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435106   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2435107   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435108   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2435109   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2435110   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2435111   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2435112   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435113   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2435114   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435115   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2435116   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2435117   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2435118   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435119   +* Ensmbl45: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Average Posteriors of 5 models;
2435120   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435121   +P_DepVar1 = (
2435122   +AutoNeural9_P_DepVar1 +
2435123   +AutoNeural11_P_DepVar1 +
2435124   +AutoNeural12_P_DepVar1 +
2435125   +AutoNeural7_P_DepVar1 +
2435126   +AutoNeural10_P_DepVar1
2435127   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural9_P_DepVar1 + AutoNeural11_P_DepVar1 + 
AutoNeural12_P_DepVar1 + AutoNeural7_P_DepVar1 + AutoNeural10_P_DepVar1 )/5;
2435128   +P_DepVar0 = (
2435129   +AutoNeural9_P_DepVar0 +
2435130   +AutoNeural11_P_DepVar0 +
2435131   +AutoNeural12_P_DepVar0 +
2435132   +AutoNeural7_P_DepVar0 +
2435133   +AutoNeural10_P_DepVar0
2435134   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural9_P_DepVar0 + AutoNeural11_P_DepVar0 + 
AutoNeural12_P_DepVar0 + AutoNeural7_P_DepVar0 + AutoNeural10_P_DepVar0 )/5;
2435135   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435136   +* Ensmbl45: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Computing Classification Vars;
2435137   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435138   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2435139   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2435140   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2435141   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2435142   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2435143   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2435144   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2435145   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2435146   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2435147   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2435148   +end;
MPRINT(EM_DIAGRAM):   end;
2435149   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2435150   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2435151   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2435152   +end;
MPRINT(EM_DIAGRAM):   end;
2435153   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2435154   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435155   +* Ensmbl45: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Producing Unformatted variable;
2435156   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435157   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2435158   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2435159   +else
2435160   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2435161   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435162   +* Ensmbl45: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Computing _WARN_ Variable;
2435163   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435164   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2435165   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2435166   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2435167   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2435167  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2435168   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2435168  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2435169   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2435169  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2435170   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2435170  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2435171   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2435171  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2435172   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2435172  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2435173   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2435173  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2435174   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2435174  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2435175   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2435175  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2435176   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2435176  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2435177   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2435177  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2435178   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2435178  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2435179   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2435179  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2435180   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2435180  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2435181   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2435181  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2435182   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2435182  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2435183   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2435183  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2435184   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2435184  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2435185   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2435185  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2435186   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2435186  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2435187   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435188   +* Ensmbl45: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Computing Residual Vars;
2435189   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435190   +if
2435191   +F_DepVar NE '1'
2435192   +AND F_DepVar NE '0'
2435193   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2435194   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2435195   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2435196   +end;
MPRINT(EM_DIAGRAM):   end;
2435197   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435198   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2435199   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2435200   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2435201   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2435202   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2435203   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2435204   +END;
MPRINT(EM_DIAGRAM):   END;
2435205   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2435206    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL45_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.18 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2435207    quit;
2435208    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2435209    filename emflow
2435209  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring AUTONEURAL9_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435210    *------------------------------------------------------------*;
2435211    * Ensmbl45: Scoring AUTONEURAL9_VALIDATE data;
2435212    *------------------------------------------------------------*;
2435213    data EMWS8.Ensmbl45_VALIDATE
2435214    / view=EMWS8.Ensmbl45_VALIDATE
2435215    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl45_VALIDATE / view=EMWS8.Ensmbl45_VALIDATE ;
2435216    set EMWS8.AutoNeural9_VALIDATE
2435217    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_VALIDATE ;
2435218    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\EMFLOWSCORE.sas.
2435219   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435220   +* Ensmbl45: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Combine model for DepVar;
2435221   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435222   +* Ensmbl45: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 1 of 5;
2435223   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435224   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435225   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2435226   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2435227   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2435228   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435229   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435230   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2435231   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2435232   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2435233   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435234   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435235   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2435236   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2435237   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2435238   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435239   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435240   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2435241   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2435242   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2435243   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435244   +
2435245   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2435246   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2435246  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2435247   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2435248   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2435249   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2435250   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2435251   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2435252   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435253   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2435254   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2435255   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2435256   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435257   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435258   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2435259   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435260   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2435261   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2435262   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2435263   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435264   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2435265   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2435266   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2435267   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435268   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435269   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2435270   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2435271   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2435272   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435273   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435274   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2435275   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2435276   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2435277   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435278   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2435279   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2435280   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2435281   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2435282   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2435283   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2435284   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2435285   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2435286   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2435287   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2435288   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2435289   +LENGTH _WARN_ $4
2435290   +      F_DepVar  $ 12
2435291   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2435292   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2435293   +
2435294   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2435295   +
2435296   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2435297   +
2435298   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2435299   +
2435300   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2435301   +
2435302   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2435303   +
2435304   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2435305   +
2435306   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2435307   +
2435308   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2435309   +
2435310   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2435311   +
2435312   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2435313   +
2435314   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2435315   +
2435316   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2435317   +
2435318   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2435319   +
2435320   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2435321   +
2435322   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2435323   +
2435324   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2435325   +
2435326   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2435327   +
2435328   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2435329   +
2435330   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2435331   +
2435332   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2435333   +
2435334   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2435335   +
2435336   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2435337   +
2435338   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2435339   +
2435340   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2435341   +
2435342   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2435343   +
2435344   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2435345   +
2435346   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2435347   +
2435348   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2435349   +
2435350   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2435351   +
2435352   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2435353   +
2435354   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2435355   +
2435356   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2435357   +
2435358   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2435359   +
2435360   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2435361   +
2435362   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2435363   +
2435364   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2435365   +
2435366   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2435367   +
2435368   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2435369   +
2435370   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2435371   +
2435372   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2435373   +
2435374   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2435375   +
2435376   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2435377   +
2435378   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2435379   +
2435380   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2435381   +
2435382   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2435383   +
2435384   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2435385   +
2435386   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2435387   +
2435388   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2435389   +
2435390   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2435391   +
2435392   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2435393   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2435394   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2435395   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2435396   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2435397   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435398   +end;
MPRINT(EM_DIAGRAM):   end;
2435399   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435400   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2435401   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2435402   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2435403   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2435404   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2435405   +   end;
MPRINT(EM_DIAGRAM):   end;
2435406   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2435407   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2435408   +   end;
MPRINT(EM_DIAGRAM):   end;
2435409   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2435410   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2435411   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2435412   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435413   +   end;
MPRINT(EM_DIAGRAM):   end;
2435414   +end;
MPRINT(EM_DIAGRAM):   end;
2435415   +
2435416   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2435417   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2435418   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2435419   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2435420   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2435421   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435422   +end;
MPRINT(EM_DIAGRAM):   end;
2435423   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435424   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2435425   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2435426   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2435427   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2435428   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2435429   +   end;
MPRINT(EM_DIAGRAM):   end;
2435430   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2435431   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2435432   +   end;
MPRINT(EM_DIAGRAM):   end;
2435433   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2435434   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2435435   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2435436   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435437   +   end;
MPRINT(EM_DIAGRAM):   end;
2435438   +end;
MPRINT(EM_DIAGRAM):   end;
2435439   +
2435440   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2435441   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2435442   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2435443   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2435444   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2435445   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435446   +end;
MPRINT(EM_DIAGRAM):   end;
2435447   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435448   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2435449   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2435450   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2435451   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2435452   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2435453   +   end;
MPRINT(EM_DIAGRAM):   end;
2435454   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2435455   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2435456   +   end;
MPRINT(EM_DIAGRAM):   end;
2435457   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2435458   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2435459   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2435460   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435461   +   end;
MPRINT(EM_DIAGRAM):   end;
2435462   +end;
MPRINT(EM_DIAGRAM):   end;
2435463   +
2435464   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2435465   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2435466   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2435467   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2435468   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2435469   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435470   +end;
MPRINT(EM_DIAGRAM):   end;
2435471   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435472   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2435473   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2435474   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2435475   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2435476   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2435477   +   end;
MPRINT(EM_DIAGRAM):   end;
2435478   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2435479   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2435480   +   end;
MPRINT(EM_DIAGRAM):   end;
2435481   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2435482   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2435483   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2435484   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435485   +   end;
MPRINT(EM_DIAGRAM):   end;
2435486   +end;
MPRINT(EM_DIAGRAM):   end;
2435487   +
2435488   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2435489   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2435490   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2435491   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2435492   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2435493   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435494   +end;
MPRINT(EM_DIAGRAM):   end;
2435495   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435496   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2435497   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2435498   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2435499   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2435500   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2435501   +   end;
MPRINT(EM_DIAGRAM):   end;
2435502   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2435503   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2435504   +   end;
MPRINT(EM_DIAGRAM):   end;
2435505   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2435506   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2435507   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2435508   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435509   +   end;
MPRINT(EM_DIAGRAM):   end;
2435510   +end;
MPRINT(EM_DIAGRAM):   end;
2435511   +
2435512   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2435513   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2435514   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2435515   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2435516   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2435517   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435518   +end;
MPRINT(EM_DIAGRAM):   end;
2435519   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435520   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2435521   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2435522   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2435523   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2435524   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2435525   +   end;
MPRINT(EM_DIAGRAM):   end;
2435526   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2435527   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2435528   +   end;
MPRINT(EM_DIAGRAM):   end;
2435529   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2435530   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2435531   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2435532   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435533   +   end;
MPRINT(EM_DIAGRAM):   end;
2435534   +end;
MPRINT(EM_DIAGRAM):   end;
2435535   +
2435536   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2435537   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2435538   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2435539   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2435540   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2435541   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435542   +end;
MPRINT(EM_DIAGRAM):   end;
2435543   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435544   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2435545   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2435546   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2435547   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2435548   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2435549   +   end;
MPRINT(EM_DIAGRAM):   end;
2435550   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2435551   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2435552   +   end;
MPRINT(EM_DIAGRAM):   end;
2435553   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2435554   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2435555   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2435556   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435557   +   end;
MPRINT(EM_DIAGRAM):   end;
2435558   +end;
MPRINT(EM_DIAGRAM):   end;
2435559   +
2435560   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2435561   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2435562   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2435563   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2435564   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2435565   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2435566   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2435567   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2435568   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2435569   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2435570   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2435571   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2435572   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2435573   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435574   +end;
MPRINT(EM_DIAGRAM):   end;
2435575   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435576   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2435577   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2435578   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2435579   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2435580   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2435581   +   end;
MPRINT(EM_DIAGRAM):   end;
2435582   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2435583   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2435584   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2435585   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2435586   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2435587   +   end;
MPRINT(EM_DIAGRAM):   end;
2435588   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2435589   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2435590   +   end;
MPRINT(EM_DIAGRAM):   end;
2435591   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2435592   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2435593   +   end;
MPRINT(EM_DIAGRAM):   end;
2435594   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2435595   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2435596   +   end;
MPRINT(EM_DIAGRAM):   end;
2435597   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2435598   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2435599   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2435600   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2435601   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2435602   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2435603   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435604   +   end;
MPRINT(EM_DIAGRAM):   end;
2435605   +end;
MPRINT(EM_DIAGRAM):   end;
2435606   +
2435607   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2435608   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2435609   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2435610   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2435611   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2435612   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2435613   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2435614   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2435615   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2435616   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2435617   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2435618   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2435619   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2435620   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2435621   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435622   +end;
MPRINT(EM_DIAGRAM):   end;
2435623   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435624   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2435625   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2435626   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2435627   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2435628   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2435629   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2435630   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2435631   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2435632   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2435633   +         end;
MPRINT(EM_DIAGRAM):   end;
2435634   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2435635   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2435636   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2435637   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2435638   +            end;
MPRINT(EM_DIAGRAM):   end;
2435639   +         end;
MPRINT(EM_DIAGRAM):   end;
2435640   +      end;
MPRINT(EM_DIAGRAM):   end;
2435641   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2435642   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2435643   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2435644   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2435645   +         end;
MPRINT(EM_DIAGRAM):   end;
2435646   +      end;
MPRINT(EM_DIAGRAM):   end;
2435647   +   end;
MPRINT(EM_DIAGRAM):   end;
2435648   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2435649   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2435650   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2435651   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2435652   +      end;
MPRINT(EM_DIAGRAM):   end;
2435653   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2435654   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2435655   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2435656   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2435657   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2435658   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2435659   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2435660   +         end;
MPRINT(EM_DIAGRAM):   end;
2435661   +      end;
MPRINT(EM_DIAGRAM):   end;
2435662   +   end;
MPRINT(EM_DIAGRAM):   end;
2435663   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2435664   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2435665   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2435666   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2435667   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2435668   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2435669   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435670   +   end;
MPRINT(EM_DIAGRAM):   end;
2435671   +end;
MPRINT(EM_DIAGRAM):   end;
2435672   +
2435673   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435674   +*** Checking missing input Interval
2435675   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2435676   +
2435677   +IF NMISS(
2435678   +   AcceptedCmpTotal ,
2435679   +   Age ,
2435680   +   Frq ,
2435681   +   Income ,
2435682   +   Kidhome ,
2435683   +   Mnt ,
2435684   +   MntFishProducts ,
2435685   +   MntFruits ,
2435686   +   MntGoldProds ,
2435687   +   MntMeatProducts ,
2435688   +   MntSweetProducts ,
2435689   +   MntWines ,
2435690   +   MonthsAsCustomer ,
2435691   +   NumCatalogPurchases ,
2435692   +   NumDealsPurchases ,
2435693   +   NumDistPurchases ,
2435694   +   NumStorePurchases ,
2435695   +   NumWebPurchases ,
2435696   +   NumWebVisitsMonth ,
2435697   +   RFMstat ,
2435698   +   RMntFrq ,
2435699   +   Recency ,
2435700   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2435701   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2435702   +
2435703   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435704   +END;
MPRINT(EM_DIAGRAM):   END;
2435705   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435706   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2435707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435708   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2435709   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2435710   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2435711   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2435712   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2435713   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2435714   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2435715   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2435716   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2435717   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2435718   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2435719   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2435720   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2435721   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2435722   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2435723   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2435724   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2435725   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2435726   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2435727   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2435728   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2435729   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2435730   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2435731   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2435732   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2435733   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2435734   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2435735   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2435736   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2435737   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2435738   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2435739   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2435740   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2435741   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2435742   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2435743   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2435744   +END;
MPRINT(EM_DIAGRAM):   END;
2435745   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2435746   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2435747   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2435748   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2435749   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2435750   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2435751   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2435752   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2435753   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2435754   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2435755   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2435756   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2435757   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2435758   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2435759   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2435760   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2435761   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2435762   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2435763   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2435764   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2435765   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2435766   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2435767   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2435768   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2435769   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2435770   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2435771   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2435772   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2435773   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2435774   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2435775   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2435776   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2435777   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2435778   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2435779   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2435780   +   ELSE S_NumCatalogPurchases
2435781   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2435782   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2435783   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2435784   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2435785   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2435786   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2435787   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2435788   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2435789   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2435790   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2435791   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2435792   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2435793   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2435794   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2435795   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2435796   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2435797   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2435798   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2435799   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2435800   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2435801   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2435802   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2435803   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2435804   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2435805   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2435806   +END;
MPRINT(EM_DIAGRAM):   END;
2435807   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435808   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2435809   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435810   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435811   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2435812   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435813   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435814   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2435815   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435816   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2435817   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2435818   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2435819   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2435820   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2435821   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2435822   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2435823   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2435824   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2435825   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2435826   +          +    -1.09856598010056 * S_NumDealsPurchases
2435827   +          +    -0.10571850472514 * S_NumDistPurchases
2435828   +          +     0.11898210654227 * S_NumStorePurchases
2435829   +          +      0.5984912060231 * S_NumWebPurchases
2435830   +          +     0.78592531126942 * S_NumWebVisitsMonth
2435831   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2435832   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2435833   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 * 
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 * 
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts + 
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 * 
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines + 
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases + 
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases + 
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases + 
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 * 
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2435834   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2435835   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2435836   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2435837   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2435838   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2435839   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2435840   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2435841   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2435842   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2435843   +          +    -0.84042044250624 * S_NumDealsPurchases
2435844   +          +    -0.10246261015488 * S_NumDistPurchases
2435845   +          +     0.06886149708824 * S_NumStorePurchases
2435846   +          +     0.63156910388199 * S_NumWebPurchases
2435847   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2435848   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2435849   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2435850   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 * 
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 * 
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776 
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts + 
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 * 
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 * 
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 * 
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 * 
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq + 
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2435851   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2435852   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2435853   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2435854   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2435855   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2435856   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2435857   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2435858   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2435859   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2435860   +          +     0.45393712455366 * S_NumDealsPurchases
2435861   +          +    -0.25292198053552 * S_NumDistPurchases
2435862   +          +    -1.35582215064749 * S_NumStorePurchases
2435863   +          +    -0.83132202302639 * S_NumWebPurchases
2435864   +          +     1.87116225272678 * S_NumWebVisitsMonth
2435865   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2435866   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2435867   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 * 
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 * 
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts + 
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 * 
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines + 
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases + 
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases + 
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases + 
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 * 
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2435868   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2435869   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2435870   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2435871   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2435872   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 * 
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 + 
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 * 
HigherEducationBinary0 ;
2435873   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2435874   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2435875   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2435876   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2435877   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061 
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 + 
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 * 
HigherEducationBinary0 ;
2435878   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2435879   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2435880   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2435881   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2435882   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317 
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 + 
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 * 
HigherEducationBinary0 ;
2435883   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2435884   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2435885   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2435886   +          +      0.4695898100094 * Marital_StatusDivorced
2435887   +          +    -0.52137742289262 * Marital_StatusMarried
2435888   +          +    -0.32382086914936 * Marital_StatusSingle
2435889   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle + 
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation + 
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced + 
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle + 
-0.66163012672344 * Marital_StatusTogether ;
2435890   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2435891   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2435892   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2435893   +          +    -1.04858218653238 * Marital_StatusDivorced
2435894   +          +     2.41098335093061 * Marital_StatusMarried
2435895   +          +    -1.94696044861334 * Marital_StatusSingle
2435896   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle + 
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059 
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 * 
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 * 
Marital_StatusTogether ;
2435897   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2435898   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2435899   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2435900   +          +     0.42964114177062 * Marital_StatusDivorced
2435901   +          +    -0.38607635605816 * Marital_StatusMarried
2435902   +          +    -0.02157405407852 * Marital_StatusSingle
2435903   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle + 
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation + 
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced + 
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle + 
-0.59995619744527 * Marital_StatusTogether ;
2435904   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2435905   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2435906   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2435907   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2435908   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2435909   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2435910   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2435911   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2435912   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2435913   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2435914   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2435915   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2435916   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2435917   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2435918   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2435919   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2435920   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2435921   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2435922   +END;
MPRINT(EM_DIAGRAM):   END;
2435923   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2435924   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2435925   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2435926   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2435927   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2435928   +END;
MPRINT(EM_DIAGRAM):   END;
2435929   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435930   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2435931   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435932   +
2435933   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2435934   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2435935   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2435936   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2435937   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2435938   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2435939   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2435940   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2435941   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2435942   +end;
MPRINT(EM_DIAGRAM):   end;
2435943   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435944   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2435945   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2435946   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2435947   +   end;
MPRINT(EM_DIAGRAM):   end;
2435948   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2435949   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2435950   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2435951   +   end;
MPRINT(EM_DIAGRAM):   end;
2435952   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2435953   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2435954   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2435955   +   end;
MPRINT(EM_DIAGRAM):   end;
2435956   +end;
MPRINT(EM_DIAGRAM):   end;
2435957   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2435958   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2435959   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 + 
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2435960   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2435961   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2435962   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2435963   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2435964   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2435965   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2435966   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2435967   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2435968   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2435969   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2435970   +END;
MPRINT(EM_DIAGRAM):   END;
2435971   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2435972   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2435973   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2435974   +END;
MPRINT(EM_DIAGRAM):   END;
2435975   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2435976   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2435977   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2435978   +END;
MPRINT(EM_DIAGRAM):   END;
2435979   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2435980   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2435981   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2435982   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2435983   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2435984   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2435985   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2435986   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435987   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2435988   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435989   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2435990   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2435991   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2435992   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2435993   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2435994   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2435995   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2435996   +END;
MPRINT(EM_DIAGRAM):   END;
2435997   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2435998   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2435999   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2436000   +drop
2436001   +H1x1_1
2436002   +H1x1_2
2436003   +H1x1_3
2436004   +H1x1_4
2436005   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2436006   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2436007   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2436008   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2436009   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2436010   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2436011   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2436012   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2436013   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2436014   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2436015   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2436016   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2436017   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2436018   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2436019   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2436020   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2436021   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2436022   +* Ensmbl45: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 2 of 5;
2436023   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2436024   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2436025   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2436026   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2436027   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2436028   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2436029   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2436030   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2436031   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2436032   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2436033   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2436034   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2436035   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2436036   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2436037   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2436038   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2436039   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2436040   +LENGTH _WARN_ $4
2436041   +      F_DepVar  $ 12
2436042   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2436043   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2436044   +
2436045   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2436046   +
2436047   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2436048   +
2436049   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2436050   +
2436051   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2436052   +
2436053   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2436054   +
2436055   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2436056   +
2436057   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2436058   +
2436059   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2436060   +
2436061   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2436062   +
2436063   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2436064   +
2436065   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2436066   +
2436067   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2436068   +
2436069   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2436070   +
2436071   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2436072   +
2436073   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2436074   +
2436075   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2436076   +
2436077   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2436078   +
2436079   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2436080   +
2436081   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2436082   +
2436083   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2436084   +
2436085   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2436086   +
2436087   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2436088   +
2436089   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2436090   +
2436091   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2436092   +
2436093   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2436094   +
2436095   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2436096   +
2436097   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2436098   +
2436099   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2436100   +
2436101   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2436102   +
2436103   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2436104   +
2436105   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2436106   +
2436107   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2436108   +
2436109   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2436110   +
2436111   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2436112   +
2436113   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2436114   +
2436115   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2436116   +
2436117   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2436118   +
2436119   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2436120   +
2436121   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2436122   +
2436123   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2436124   +
2436125   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2436126   +
2436127   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2436128   +
2436129   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2436130   +
2436131   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2436132   +
2436133   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2436134   +
2436135   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2436136   +
2436137   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2436138   +
2436139   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2436140   +
2436141   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2436142   +
2436143   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2436144   +
2436145   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2436146   +
2436147   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2436148   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2436149   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2436150   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2436151   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2436152   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436153   +end;
MPRINT(EM_DIAGRAM):   end;
2436154   +else do;
MPRINT(EM_DIAGRAM):   else do;
2436155   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2436156   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2436157   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2436158   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2436159   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2436160   +   end;
MPRINT(EM_DIAGRAM):   end;
2436161   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2436162   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2436163   +   end;
MPRINT(EM_DIAGRAM):   end;
2436164   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2436165   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2436166   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2436167   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436168   +   end;
MPRINT(EM_DIAGRAM):   end;
2436169   +end;
MPRINT(EM_DIAGRAM):   end;
2436170   +
2436171   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2436172   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2436173   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2436174   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2436175   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2436176   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436177   +end;
MPRINT(EM_DIAGRAM):   end;
2436178   +else do;
MPRINT(EM_DIAGRAM):   else do;
2436179   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2436180   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2436181   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2436182   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2436183   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2436184   +   end;
MPRINT(EM_DIAGRAM):   end;
2436185   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2436186   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2436187   +   end;
MPRINT(EM_DIAGRAM):   end;
2436188   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2436189   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2436190   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2436191   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436192   +   end;
MPRINT(EM_DIAGRAM):   end;
2436193   +end;
MPRINT(EM_DIAGRAM):   end;
2436194   +
2436195   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2436196   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2436197   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2436198   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2436199   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2436200   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436201   +end;
MPRINT(EM_DIAGRAM):   end;
2436202   +else do;
MPRINT(EM_DIAGRAM):   else do;
2436203   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2436204   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2436205   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2436206   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2436207   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2436208   +   end;
MPRINT(EM_DIAGRAM):   end;
2436209   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2436210   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2436211   +   end;
MPRINT(EM_DIAGRAM):   end;
2436212   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2436213   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2436214   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2436215   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436216   +   end;
MPRINT(EM_DIAGRAM):   end;
2436217   +end;
MPRINT(EM_DIAGRAM):   end;
2436218   +
2436219   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2436220   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2436221   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2436222   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2436223   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2436224   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436225   +end;
MPRINT(EM_DIAGRAM):   end;
2436226   +else do;
MPRINT(EM_DIAGRAM):   else do;
2436227   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2436228   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2436229   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2436230   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2436231   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2436232   +   end;
MPRINT(EM_DIAGRAM):   end;
2436233   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2436234   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2436235   +   end;
MPRINT(EM_DIAGRAM):   end;
2436236   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2436237   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2436238   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2436239   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436240   +   end;
MPRINT(EM_DIAGRAM):   end;
2436241   +end;
MPRINT(EM_DIAGRAM):   end;
2436242   +
2436243   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2436244   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2436245   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2436246   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2436247   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2436248   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436249   +end;
MPRINT(EM_DIAGRAM):   end;
2436250   +else do;
MPRINT(EM_DIAGRAM):   else do;
2436251   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2436252   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2436253   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2436254   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2436255   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2436256   +   end;
MPRINT(EM_DIAGRAM):   end;
2436257   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2436258   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2436259   +   end;
MPRINT(EM_DIAGRAM):   end;
2436260   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2436261   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2436262   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2436263   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436264   +   end;
MPRINT(EM_DIAGRAM):   end;
2436265   +end;
MPRINT(EM_DIAGRAM):   end;
2436266   +
2436267   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2436268   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2436269   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2436270   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2436271   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2436272   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436273   +end;
MPRINT(EM_DIAGRAM):   end;
2436274   +else do;
MPRINT(EM_DIAGRAM):   else do;
2436275   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2436276   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2436277   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2436278   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2436279   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2436280   +   end;
MPRINT(EM_DIAGRAM):   end;
2436281   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2436282   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2436283   +   end;
MPRINT(EM_DIAGRAM):   end;
2436284   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2436285   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2436286   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2436287   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436288   +   end;
MPRINT(EM_DIAGRAM):   end;
2436289   +end;
MPRINT(EM_DIAGRAM):   end;
2436290   +
2436291   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2436292   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2436293   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2436294   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2436295   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2436296   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436297   +end;
MPRINT(EM_DIAGRAM):   end;
2436298   +else do;
MPRINT(EM_DIAGRAM):   else do;
2436299   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2436300   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2436301   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2436302   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2436303   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2436304   +   end;
MPRINT(EM_DIAGRAM):   end;
2436305   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2436306   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2436307   +   end;
MPRINT(EM_DIAGRAM):   end;
2436308   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2436309   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2436310   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2436311   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436312   +   end;
MPRINT(EM_DIAGRAM):   end;
2436313   +end;
MPRINT(EM_DIAGRAM):   end;
2436314   +
2436315   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2436316   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2436317   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2436318   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2436319   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2436320   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2436321   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2436322   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2436323   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2436324   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2436325   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2436326   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2436327   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2436328   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436329   +end;
MPRINT(EM_DIAGRAM):   end;
2436330   +else do;
MPRINT(EM_DIAGRAM):   else do;
2436331   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2436332   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2436333   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2436334   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2436335   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2436336   +   end;
MPRINT(EM_DIAGRAM):   end;
2436337   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2436338   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2436339   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2436340   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2436341   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2436342   +   end;
MPRINT(EM_DIAGRAM):   end;
2436343   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2436344   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2436345   +   end;
MPRINT(EM_DIAGRAM):   end;
2436346   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2436347   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2436348   +   end;
MPRINT(EM_DIAGRAM):   end;
2436349   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2436350   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2436351   +   end;
MPRINT(EM_DIAGRAM):   end;
2436352   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2436353   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2436354   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2436355   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2436356   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2436357   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2436358   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436359   +   end;
MPRINT(EM_DIAGRAM):   end;
2436360   +end;
MPRINT(EM_DIAGRAM):   end;
2436361   +
2436362   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2436363   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2436364   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2436365   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2436366   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2436367   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2436368   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2436369   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2436370   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2436371   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2436372   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2436373   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2436374   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2436375   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2436376   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436377   +end;
MPRINT(EM_DIAGRAM):   end;
2436378   +else do;
MPRINT(EM_DIAGRAM):   else do;
2436379   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2436380   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2436381   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2436382   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2436383   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2436384   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2436385   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2436386   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2436387   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2436388   +         end;
MPRINT(EM_DIAGRAM):   end;
2436389   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2436390   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2436391   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2436392   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2436393   +            end;
MPRINT(EM_DIAGRAM):   end;
2436394   +         end;
MPRINT(EM_DIAGRAM):   end;
2436395   +      end;
MPRINT(EM_DIAGRAM):   end;
2436396   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2436397   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2436398   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2436399   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2436400   +         end;
MPRINT(EM_DIAGRAM):   end;
2436401   +      end;
MPRINT(EM_DIAGRAM):   end;
2436402   +   end;
MPRINT(EM_DIAGRAM):   end;
2436403   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2436404   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2436405   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2436406   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2436407   +      end;
MPRINT(EM_DIAGRAM):   end;
2436408   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2436409   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2436410   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2436411   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2436412   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2436413   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2436414   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2436415   +         end;
MPRINT(EM_DIAGRAM):   end;
2436416   +      end;
MPRINT(EM_DIAGRAM):   end;
2436417   +   end;
MPRINT(EM_DIAGRAM):   end;
2436418   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2436419   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2436420   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2436421   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2436422   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2436423   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2436424   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436425   +   end;
MPRINT(EM_DIAGRAM):   end;
2436426   +end;
MPRINT(EM_DIAGRAM):   end;
2436427   +
2436428   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436429   +*** Checking missing input Interval
2436430   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2436431   +
2436432   +IF NMISS(
2436433   +   AcceptedCmpTotal ,
2436434   +   Age ,
2436435   +   Frq ,
2436436   +   Income ,
2436437   +   Kidhome ,
2436438   +   Mnt ,
2436439   +   MntFishProducts ,
2436440   +   MntFruits ,
2436441   +   MntGoldProds ,
2436442   +   MntMeatProducts ,
2436443   +   MntSweetProducts ,
2436444   +   MntWines ,
2436445   +   MonthsAsCustomer ,
2436446   +   NumCatalogPurchases ,
2436447   +   NumDealsPurchases ,
2436448   +   NumDistPurchases ,
2436449   +   NumStorePurchases ,
2436450   +   NumWebPurchases ,
2436451   +   NumWebVisitsMonth ,
2436452   +   RFMstat ,
2436453   +   RMntFrq ,
2436454   +   Recency ,
2436455   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2436456   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2436457   +
2436458   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436459   +END;
MPRINT(EM_DIAGRAM):   END;
2436460   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436461   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2436462   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436463   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2436464   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2436465   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2436466   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2436467   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2436468   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2436469   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2436470   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2436471   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2436472   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2436473   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2436474   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2436475   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2436476   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2436477   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2436478   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2436479   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2436480   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2436481   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2436482   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2436483   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2436484   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2436485   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2436486   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2436487   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2436488   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2436489   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2436490   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2436491   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2436492   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2436493   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2436494   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2436495   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2436496   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2436497   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2436498   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2436499   +END;
MPRINT(EM_DIAGRAM):   END;
2436500   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2436501   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2436502   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2436503   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2436504   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2436505   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2436506   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2436507   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2436508   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2436509   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2436510   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2436511   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2436512   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2436513   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2436514   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2436515   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2436516   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2436517   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2436518   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2436519   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2436520   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2436521   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2436522   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2436523   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2436524   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2436525   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2436526   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2436527   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2436528   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2436529   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2436530   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2436531   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2436532   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2436533   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2436534   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2436535   +   ELSE S_NumCatalogPurchases
2436536   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2436537   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2436538   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2436539   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2436540   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2436541   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2436542   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2436543   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2436544   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2436545   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2436546   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2436547   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2436548   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2436549   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2436550   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2436551   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2436552   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2436553   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2436554   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2436555   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2436556   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2436557   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2436558   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2436559   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2436560   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2436561   +END;
MPRINT(EM_DIAGRAM):   END;
2436562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436563   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2436564   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436565   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436566   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2436567   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436568   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436569   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2436570   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436571   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2436572   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2436573   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2436574   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2436575   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2436576   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2436577   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2436578   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2436579   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2436580   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2436581   +          +     0.19770934886328 * S_NumDealsPurchases
2436582   +          +      0.0515215988111 * S_NumDistPurchases
2436583   +          +    -0.34569346346089 * S_NumStorePurchases
2436584   +          +    -0.27122293596124 * S_NumWebPurchases
2436585   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2436586   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2436587   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2436588   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 * 
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome 
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 * 
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts + 
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 * 
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 * 
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 * 
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 * 
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq + 
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2436589   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2436590   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2436591   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2436592   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2436593   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2436594   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2436595   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2436596   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2436597   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2436598   +          +     0.54308887602031 * S_NumDealsPurchases
2436599   +          +    -0.22507315320192 * S_NumDistPurchases
2436600   +          +    -0.79861387328361 * S_NumStorePurchases
2436601   +          +    -0.45467494002747 * S_NumWebPurchases
2436602   +          +      0.2119048824613 * S_NumWebVisitsMonth
2436603   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2436604   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2436605   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 * 
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome 
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 * 
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts + 
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 * 
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 * 
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 * 
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 * 
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq + 
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2436606   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2436607   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2436608   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2436609   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2436610   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2436611   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2436612   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2436613   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2436614   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2436615   +          +     -0.0771083149302 * S_NumDealsPurchases
2436616   +          +     0.03403621221162 * S_NumDistPurchases
2436617   +          +     0.61303946422025 * S_NumStorePurchases
2436618   +          +     0.27126793634053 * S_NumWebPurchases
2436619   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2436620   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2436621   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2436622   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 * 
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 * 
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994 
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts + 
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 * 
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 * 
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 * 
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 * 
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq + 
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2436623   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2436624   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2436625   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2436626   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2436627   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2436628   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2436629   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2436630   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2436631   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2436632   +          +     0.29894603062327 * S_NumDealsPurchases
2436633   +          +     0.07614620530875 * S_NumDistPurchases
2436634   +          +     0.15402335009896 * S_NumStorePurchases
2436635   +          +     0.10615749096863 * S_NumWebPurchases
2436636   +          +     0.41962286816879 * S_NumWebVisitsMonth
2436637   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2436638   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2436639   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age 
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome + 
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 * 
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts + 
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 * 
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 * 
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 * 
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 * 
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq + 
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2436640   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2436641   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2436642   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2436643   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2436644   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2436645   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2436646   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2436647   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2436648   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2436649   +          +     0.14392502416642 * S_NumDealsPurchases
2436650   +          +    -0.10026304978633 * S_NumDistPurchases
2436651   +          +     -0.0588453022746 * S_NumStorePurchases
2436652   +          +     0.24799398610395 * S_NumWebPurchases
2436653   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2436654   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2436655   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2436656   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 * 
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 * 
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts + 
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 * 
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines + 
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases + 
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases + 
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases + 
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 * 
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2436657   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2436658   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2436659   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2436660   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2436661   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2436662   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2436663   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2436664   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2436665   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2436666   +          +     0.08149600854964 * S_NumDealsPurchases
2436667   +          +     0.16873541613513 * S_NumDistPurchases
2436668   +          +    -0.20437343413446 * S_NumStorePurchases
2436669   +          +     -0.1671107527288 * S_NumWebPurchases
2436670   +          +     0.03677043100993 * S_NumWebVisitsMonth
2436671   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2436672   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2436673   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 * 
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome 
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 * 
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts + 
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 * 
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 * 
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 * 
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 * 
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq + 
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2436674   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2436675   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2436676   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2436677   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2436678   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 * 
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 + 
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 * 
HigherEducationBinary0 ;
2436679   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2436680   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2436681   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2436682   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2436683   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 * 
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 + 
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 * 
HigherEducationBinary0 ;
2436684   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2436685   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2436686   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2436687   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2436688   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 * 
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 + 
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 * 
HigherEducationBinary0 ;
2436689   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2436690   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2436691   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2436692   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2436693   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911 
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 + 
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 * 
HigherEducationBinary0 ;
2436694   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2436695   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2436696   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2436697   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2436698   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357 
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 + 
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 * 
HigherEducationBinary0 ;
2436699   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2436700   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2436701   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2436702   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2436703   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 * 
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 + 
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 * 
HigherEducationBinary0 ;
2436704   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2436705   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2436706   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2436707   +          +    -0.31045295887604 * Marital_StatusDivorced
2436708   +          +    -0.01109401001539 * Marital_StatusMarried
2436709   +          +     0.01325135981025 * Marital_StatusSingle
2436710   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996 
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster 
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried + 
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2436711   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2436712   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2436713   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2436714   +          +     0.02275101861599 * Marital_StatusDivorced
2436715   +          +     0.20271548664903 * Marital_StatusMarried
2436716   +          +    -0.12132069210718 * Marital_StatusSingle
2436717   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle + 
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108 
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 * 
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 * 
Marital_StatusTogether ;
2436718   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2436719   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2436720   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2436721   +          +     -0.4992959703281 * Marital_StatusDivorced
2436722   +          +     0.62071659624138 * Marital_StatusMarried
2436723   +          +    -0.21776202274494 * Marital_StatusSingle
2436724   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle + 
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308 
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 * 
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 * 
Marital_StatusTogether ;
2436725   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2436726   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2436727   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2436728   +          +     0.05626212670587 * Marital_StatusDivorced
2436729   +          +     0.14353891364597 * Marital_StatusMarried
2436730   +          +    -0.29006765622997 * Marital_StatusSingle
2436731   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle + 
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation + 
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced + 
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle + 
0.05503638282535 * Marital_StatusTogether ;
2436732   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2436733   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2436734   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2436735   +          +    -0.21206913700604 * Marital_StatusDivorced
2436736   +          +     0.58790643614629 * Marital_StatusMarried
2436737   +          +    -0.65995982578062 * Marital_StatusSingle
2436738   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle + 
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation + 
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced + 
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle + 
0.49642503732428 * Marital_StatusTogether ;
2436739   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2436740   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2436741   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2436742   +          +    -0.05047370516008 * Marital_StatusDivorced
2436743   +          +    -0.23139090963669 * Marital_StatusMarried
2436744   +          +     0.04816197463249 * Marital_StatusSingle
2436745   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle + 
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation + 
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced + 
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle + 
0.04977890114896 * Marital_StatusTogether ;
2436746   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2436747   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2436748   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2436749   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2436750   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2436751   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2436752   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2436753   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2436754   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2436755   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2436756   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2436757   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2436758   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2436759   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2436760   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2436761   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2436762   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2436763   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2436764   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2436765   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2436766   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2436767   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2436768   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2436769   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2436770   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2436771   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2436772   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2436773   +END;
MPRINT(EM_DIAGRAM):   END;
2436774   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2436775   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2436776   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2436777   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2436778   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2436779   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2436780   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2436781   +END;
MPRINT(EM_DIAGRAM):   END;
2436782   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436783   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2436784   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436785   +
2436786   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2436787   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2436788   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2436789   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2436790   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2436791   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2436792   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2436793   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2436794   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2436795   +end;
MPRINT(EM_DIAGRAM):   end;
2436796   +else do;
MPRINT(EM_DIAGRAM):   else do;
2436797   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2436798   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2436799   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2436800   +   end;
MPRINT(EM_DIAGRAM):   end;
2436801   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2436802   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2436803   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2436804   +   end;
MPRINT(EM_DIAGRAM):   end;
2436805   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2436806   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2436807   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2436808   +   end;
MPRINT(EM_DIAGRAM):   end;
2436809   +end;
MPRINT(EM_DIAGRAM):   end;
2436810   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2436811   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2436812   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2436813   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 + 
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 + 
-0.0100306049679 * H1x1_6 ;
2436814   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2436815   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2436816   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2436817   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2436818   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2436819   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2436820   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2436821   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2436822   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2436823   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2436824   +END;
MPRINT(EM_DIAGRAM):   END;
2436825   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2436826   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2436827   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2436828   +END;
MPRINT(EM_DIAGRAM):   END;
2436829   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2436830   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2436831   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2436832   +END;
MPRINT(EM_DIAGRAM):   END;
2436833   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2436834   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2436835   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2436836   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2436837   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2436838   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2436839   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2436840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436841   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2436842   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436843   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2436844   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2436845   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2436846   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2436847   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2436848   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2436849   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2436850   +END;
MPRINT(EM_DIAGRAM):   END;
2436851   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2436852   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2436853   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2436854   +drop
2436855   +H1x1_1
2436856   +H1x1_2
2436857   +H1x1_3
2436858   +H1x1_4
2436859   +H1x1_5
2436860   +H1x1_6
2436861   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2436862   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2436863   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2436864   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2436865   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2436866   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2436867   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2436868   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2436869   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2436870   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2436871   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2436872   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2436873   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2436874   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2436875   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2436876   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2436877   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2436878   +* Ensmbl45: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 3 of 5;
2436879   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2436880   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2436881   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2436882   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2436883   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2436884   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2436885   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2436886   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2436887   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2436888   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2436889   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2436890   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2436891   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2436892   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2436893   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2436894   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2436895   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2436896   +LENGTH _WARN_ $4
2436897   +      F_DepVar  $ 12
2436898   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2436899   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2436900   +
2436901   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2436902   +
2436903   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2436904   +
2436905   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2436906   +
2436907   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2436908   +
2436909   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2436910   +
2436911   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2436912   +
2436913   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2436914   +
2436915   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2436916   +
2436917   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2436918   +
2436919   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2436920   +
2436921   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2436922   +
2436923   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2436924   +
2436925   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2436926   +
2436927   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2436928   +
2436929   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2436930   +
2436931   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2436932   +
2436933   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2436934   +
2436935   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2436936   +
2436937   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2436938   +
2436939   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2436940   +
2436941   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2436942   +
2436943   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2436944   +
2436945   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2436946   +
2436947   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2436948   +
2436949   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2436950   +
2436951   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2436952   +
2436953   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2436954   +
2436955   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2436956   +
2436957   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2436958   +
2436959   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2436960   +
2436961   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2436962   +
2436963   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2436964   +
2436965   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2436966   +
2436967   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2436968   +
2436969   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2436970   +
2436971   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2436972   +
2436973   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2436974   +
2436975   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2436976   +
2436977   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2436978   +
2436979   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2436980   +
2436981   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2436982   +
2436983   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2436984   +
2436985   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2436986   +
2436987   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2436988   +
2436989   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2436990   +
2436991   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2436992   +
2436993   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2436994   +
2436995   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2436996   +
2436997   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2436998   +
2436999   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2437000   +
2437001   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2437002   +
2437003   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2437004   +
2437005   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2437006   +
2437007   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2437008   +
2437009   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2437010   +
2437011   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2437012   +
2437013   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2437014   +
2437015   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2437016   +
2437017   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2437018   +
2437019   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2437020   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2437021   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2437022   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2437023   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2437024   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437025   +end;
MPRINT(EM_DIAGRAM):   end;
2437026   +else do;
MPRINT(EM_DIAGRAM):   else do;
2437027   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2437028   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2437029   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2437030   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2437031   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2437032   +   end;
MPRINT(EM_DIAGRAM):   end;
2437033   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2437034   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2437035   +   end;
MPRINT(EM_DIAGRAM):   end;
2437036   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2437037   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2437038   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2437039   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437040   +   end;
MPRINT(EM_DIAGRAM):   end;
2437041   +end;
MPRINT(EM_DIAGRAM):   end;
2437042   +
2437043   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2437044   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2437045   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2437046   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2437047   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2437048   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437049   +end;
MPRINT(EM_DIAGRAM):   end;
2437050   +else do;
MPRINT(EM_DIAGRAM):   else do;
2437051   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2437052   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2437053   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2437054   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2437055   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2437056   +   end;
MPRINT(EM_DIAGRAM):   end;
2437057   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2437058   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2437059   +   end;
MPRINT(EM_DIAGRAM):   end;
2437060   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2437061   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2437062   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2437063   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437064   +   end;
MPRINT(EM_DIAGRAM):   end;
2437065   +end;
MPRINT(EM_DIAGRAM):   end;
2437066   +
2437067   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2437068   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2437069   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2437070   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2437071   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2437072   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437073   +end;
MPRINT(EM_DIAGRAM):   end;
2437074   +else do;
MPRINT(EM_DIAGRAM):   else do;
2437075   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2437076   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2437077   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2437078   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2437079   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2437080   +   end;
MPRINT(EM_DIAGRAM):   end;
2437081   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2437082   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2437083   +   end;
MPRINT(EM_DIAGRAM):   end;
2437084   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2437085   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2437086   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2437087   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437088   +   end;
MPRINT(EM_DIAGRAM):   end;
2437089   +end;
MPRINT(EM_DIAGRAM):   end;
2437090   +
2437091   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2437092   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2437093   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2437094   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2437095   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2437096   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437097   +end;
MPRINT(EM_DIAGRAM):   end;
2437098   +else do;
MPRINT(EM_DIAGRAM):   else do;
2437099   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2437100   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2437101   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2437102   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2437103   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2437104   +   end;
MPRINT(EM_DIAGRAM):   end;
2437105   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2437106   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2437107   +   end;
MPRINT(EM_DIAGRAM):   end;
2437108   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2437109   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2437110   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2437111   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437112   +   end;
MPRINT(EM_DIAGRAM):   end;
2437113   +end;
MPRINT(EM_DIAGRAM):   end;
2437114   +
2437115   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2437116   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2437117   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2437118   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2437119   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2437120   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437121   +end;
MPRINT(EM_DIAGRAM):   end;
2437122   +else do;
MPRINT(EM_DIAGRAM):   else do;
2437123   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2437124   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2437125   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2437126   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2437127   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2437128   +   end;
MPRINT(EM_DIAGRAM):   end;
2437129   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2437130   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2437131   +   end;
MPRINT(EM_DIAGRAM):   end;
2437132   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2437133   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2437134   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2437135   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437136   +   end;
MPRINT(EM_DIAGRAM):   end;
2437137   +end;
MPRINT(EM_DIAGRAM):   end;
2437138   +
2437139   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2437140   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2437141   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2437142   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2437143   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2437144   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437145   +end;
MPRINT(EM_DIAGRAM):   end;
2437146   +else do;
MPRINT(EM_DIAGRAM):   else do;
2437147   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2437148   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2437149   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2437150   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2437151   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2437152   +   end;
MPRINT(EM_DIAGRAM):   end;
2437153   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2437154   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2437155   +   end;
MPRINT(EM_DIAGRAM):   end;
2437156   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2437157   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2437158   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2437159   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437160   +   end;
MPRINT(EM_DIAGRAM):   end;
2437161   +end;
MPRINT(EM_DIAGRAM):   end;
2437162   +
2437163   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2437164   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2437165   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2437166   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2437167   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2437168   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437169   +end;
MPRINT(EM_DIAGRAM):   end;
2437170   +else do;
MPRINT(EM_DIAGRAM):   else do;
2437171   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2437172   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2437173   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2437174   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2437175   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2437176   +   end;
MPRINT(EM_DIAGRAM):   end;
2437177   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2437178   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2437179   +   end;
MPRINT(EM_DIAGRAM):   end;
2437180   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2437181   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2437182   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2437183   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437184   +   end;
MPRINT(EM_DIAGRAM):   end;
2437185   +end;
MPRINT(EM_DIAGRAM):   end;
2437186   +
2437187   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2437188   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2437189   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2437190   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2437191   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2437192   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2437193   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2437194   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2437195   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2437196   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2437197   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2437198   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2437199   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2437200   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437201   +end;
MPRINT(EM_DIAGRAM):   end;
2437202   +else do;
MPRINT(EM_DIAGRAM):   else do;
2437203   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2437204   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2437205   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2437206   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2437207   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2437208   +   end;
MPRINT(EM_DIAGRAM):   end;
2437209   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2437210   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2437211   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2437212   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2437213   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2437214   +   end;
MPRINT(EM_DIAGRAM):   end;
2437215   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2437216   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2437217   +   end;
MPRINT(EM_DIAGRAM):   end;
2437218   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2437219   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2437220   +   end;
MPRINT(EM_DIAGRAM):   end;
2437221   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2437222   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2437223   +   end;
MPRINT(EM_DIAGRAM):   end;
2437224   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2437225   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2437226   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2437227   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2437228   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2437229   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2437230   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437231   +   end;
MPRINT(EM_DIAGRAM):   end;
2437232   +end;
MPRINT(EM_DIAGRAM):   end;
2437233   +
2437234   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2437235   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2437236   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2437237   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2437238   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2437239   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2437240   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2437241   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2437242   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2437243   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2437244   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2437245   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2437246   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2437247   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2437248   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437249   +end;
MPRINT(EM_DIAGRAM):   end;
2437250   +else do;
MPRINT(EM_DIAGRAM):   else do;
2437251   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2437252   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2437253   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2437254   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2437255   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2437256   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2437257   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2437258   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2437259   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2437260   +         end;
MPRINT(EM_DIAGRAM):   end;
2437261   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2437262   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2437263   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2437264   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2437265   +            end;
MPRINT(EM_DIAGRAM):   end;
2437266   +         end;
MPRINT(EM_DIAGRAM):   end;
2437267   +      end;
MPRINT(EM_DIAGRAM):   end;
2437268   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2437269   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2437270   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2437271   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2437272   +         end;
MPRINT(EM_DIAGRAM):   end;
2437273   +      end;
MPRINT(EM_DIAGRAM):   end;
2437274   +   end;
MPRINT(EM_DIAGRAM):   end;
2437275   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2437276   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2437277   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2437278   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2437279   +      end;
MPRINT(EM_DIAGRAM):   end;
2437280   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2437281   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2437282   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2437283   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2437284   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2437285   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2437286   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2437287   +         end;
MPRINT(EM_DIAGRAM):   end;
2437288   +      end;
MPRINT(EM_DIAGRAM):   end;
2437289   +   end;
MPRINT(EM_DIAGRAM):   end;
2437290   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2437291   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2437292   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2437293   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2437294   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2437295   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2437296   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437297   +   end;
MPRINT(EM_DIAGRAM):   end;
2437298   +end;
MPRINT(EM_DIAGRAM):   end;
2437299   +
2437300   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437301   +*** Checking missing input Interval
2437302   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2437303   +
2437304   +IF NMISS(
2437305   +   AcceptedCmpTotal ,
2437306   +   Age ,
2437307   +   Frq ,
2437308   +   Income ,
2437309   +   Kidhome ,
2437310   +   Mnt ,
2437311   +   MntFishProducts ,
2437312   +   MntFruits ,
2437313   +   MntGoldProds ,
2437314   +   MntMeatProducts ,
2437315   +   MntSweetProducts ,
2437316   +   MntWines ,
2437317   +   MonthsAsCustomer ,
2437318   +   NumCatalogPurchases ,
2437319   +   NumDealsPurchases ,
2437320   +   NumDistPurchases ,
2437321   +   NumStorePurchases ,
2437322   +   NumWebPurchases ,
2437323   +   NumWebVisitsMonth ,
2437324   +   RFMstat ,
2437325   +   RMntFrq ,
2437326   +   Recency ,
2437327   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2437328   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2437329   +
2437330   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437331   +END;
MPRINT(EM_DIAGRAM):   END;
2437332   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437333   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2437334   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437335   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2437336   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2437337   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2437338   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2437339   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2437340   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2437341   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2437342   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2437343   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2437344   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2437345   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2437346   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2437347   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2437348   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2437349   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2437350   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2437351   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2437352   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2437353   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2437354   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2437355   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2437356   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2437357   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2437358   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2437359   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2437360   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2437361   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2437362   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2437363   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2437364   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2437365   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2437366   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2437367   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2437368   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2437369   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2437370   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2437371   +END;
MPRINT(EM_DIAGRAM):   END;
2437372   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2437373   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2437374   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2437375   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2437376   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2437377   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2437378   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2437379   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2437380   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2437381   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2437382   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2437383   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2437384   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2437385   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2437386   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2437387   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2437388   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2437389   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2437390   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2437391   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2437392   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2437393   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2437394   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2437395   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2437396   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2437397   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2437398   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2437399   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2437400   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2437401   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2437402   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2437403   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2437404   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2437405   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2437406   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2437407   +   ELSE S_NumCatalogPurchases
2437408   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2437409   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2437410   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2437411   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2437412   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2437413   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2437414   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2437415   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2437416   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2437417   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2437418   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2437419   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2437420   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2437421   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2437422   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2437423   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2437424   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2437425   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2437426   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2437427   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2437428   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2437429   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2437430   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2437431   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2437432   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2437433   +END;
MPRINT(EM_DIAGRAM):   END;
2437434   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437435   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2437436   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437437   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437438   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2437439   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437440   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437441   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2437442   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437443   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2437444   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2437445   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2437446   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2437447   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2437448   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2437449   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2437450   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2437451   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2437452   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2437453   +          +      0.1112677116841 * S_NumDealsPurchases
2437454   +          +     0.01563584187072 * S_NumDistPurchases
2437455   +          +     0.19193969522995 * S_NumStorePurchases
2437456   +          +      0.3133556199984 * S_NumWebPurchases
2437457   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2437458   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2437459   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2437460   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 * 
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome 
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 * 
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts + 
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 * 
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 * 
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 * 
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 * 
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq + 
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2437461   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2437462   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2437463   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2437464   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2437465   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2437466   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2437467   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2437468   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2437469   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2437470   +          +     0.30225032753275 * S_NumDealsPurchases
2437471   +          +     0.33833359923595 * S_NumDistPurchases
2437472   +          +    -0.20255599575849 * S_NumStorePurchases
2437473   +          +    -0.12040071168942 * S_NumWebPurchases
2437474   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2437475   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2437476   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2437477   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 * 
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome 
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 * 
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts + 
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 * 
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 * 
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 * 
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 * 
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq + 
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2437478   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2437479   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2437480   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2437481   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2437482   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2437483   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2437484   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2437485   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2437486   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2437487   +          +     0.16792903091627 * S_NumDealsPurchases
2437488   +          +    -0.37408945626745 * S_NumDistPurchases
2437489   +          +    -0.18067262995566 * S_NumStorePurchases
2437490   +          +     0.21192146789881 * S_NumWebPurchases
2437491   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2437492   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2437493   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2437494   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 * 
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 * 
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts + 
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 * 
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines + 
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases + 
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases + 
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases + 
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 * 
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2437495   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2437496   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2437497   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2437498   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2437499   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2437500   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2437501   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2437502   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2437503   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2437504   +          +     0.29407429399136 * S_NumDealsPurchases
2437505   +          +     0.01610745252195 * S_NumDistPurchases
2437506   +          +    -0.17767939085628 * S_NumStorePurchases
2437507   +          +    -0.15168958538637 * S_NumWebPurchases
2437508   +          +     0.17433622143988 * S_NumWebVisitsMonth
2437509   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2437510   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2437511   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 * 
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 * 
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts + 
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 * 
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines + 
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases + 
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases + 
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases + 
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 * 
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2437512   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2437513   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2437514   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2437515   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2437516   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2437517   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2437518   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2437519   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2437520   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2437521   +          +    -0.37976451362108 * S_NumDealsPurchases
2437522   +          +    -0.17027731520801 * S_NumDistPurchases
2437523   +          +     0.59849493667087 * S_NumStorePurchases
2437524   +          +     0.65481480560301 * S_NumWebPurchases
2437525   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2437526   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2437527   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2437528   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 * 
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 * 
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts + 
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 * 
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines + 
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases + 
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases + 
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases + 
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 * 
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2437529   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2437530   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2437531   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2437532   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2437533   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2437534   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2437535   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2437536   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2437537   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2437538   +          +    -0.07686699131623 * S_NumDealsPurchases
2437539   +          +    -0.07220460738926 * S_NumDistPurchases
2437540   +          +    -0.06554027468389 * S_NumStorePurchases
2437541   +          +     0.10422838158001 * S_NumWebPurchases
2437542   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2437543   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2437544   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2437545   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 * 
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome 
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 * 
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts + 
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 * 
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 * 
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 * 
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 * 
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq + 
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2437546   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2437547   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2437548   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2437549   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2437550   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2437551   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2437552   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2437553   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2437554   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2437555   +          +    -0.07920122387563 * S_NumDealsPurchases
2437556   +          +      0.3649244061347 * S_NumDistPurchases
2437557   +          +     0.36475853688403 * S_NumStorePurchases
2437558   +          +     0.02153991404063 * S_NumWebPurchases
2437559   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2437560   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2437561   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2437562   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 * 
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome 
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 * 
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts + 
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 * 
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 * 
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 * 
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 * 
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq + 
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2437563   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2437564   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2437565   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2437566   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2437567   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 * 
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 + 
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 * 
HigherEducationBinary0 ;
2437568   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2437569   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2437570   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2437571   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2437572   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176 
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 + 
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 * 
HigherEducationBinary0 ;
2437573   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2437574   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2437575   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2437576   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2437577   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 * 
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 + 
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 * 
HigherEducationBinary0 ;
2437578   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2437579   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2437580   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2437581   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2437582   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073 
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 + 
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 * 
HigherEducationBinary0 ;
2437583   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2437584   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2437585   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2437586   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2437587   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265 
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 + 
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 * 
HigherEducationBinary0 ;
2437588   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2437589   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2437590   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2437591   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2437592   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 * 
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 + 
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 * 
HigherEducationBinary0 ;
2437593   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2437594   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2437595   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2437596   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2437597   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 * 
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 + 
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 * 
HigherEducationBinary0 ;
2437598   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2437599   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2437600   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2437601   +          +     0.07744097241553 * Marital_StatusDivorced
2437602   +          +     -0.0247463100385 * Marital_StatusMarried
2437603   +          +     0.05804915234573 * Marital_StatusSingle
2437604   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle + 
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation + 
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced + 
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle + 
-0.08320125047871 * Marital_StatusTogether ;
2437605   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2437606   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2437607   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2437608   +          +     0.01390668926269 * Marital_StatusDivorced
2437609   +          +     0.01136282152074 * Marital_StatusMarried
2437610   +          +     0.12450246418789 * Marital_StatusSingle
2437611   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle + 
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694 
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 * 
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 * 
Marital_StatusTogether ;
2437612   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2437613   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2437614   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2437615   +          +    -0.19133456931879 * Marital_StatusDivorced
2437616   +          +     0.56263566654996 * Marital_StatusMarried
2437617   +          +    -0.42172822038882 * Marital_StatusSingle
2437618   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle + 
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145 
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 * 
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 * 
Marital_StatusTogether ;
2437619   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2437620   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2437621   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2437622   +          +    -0.19871205065609 * Marital_StatusDivorced
2437623   +          +    -0.14730795681603 * Marital_StatusMarried
2437624   +          +     0.05055432510362 * Marital_StatusSingle
2437625   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle + 
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation + 
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced + 
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle + 
0.06558965292395 * Marital_StatusTogether ;
2437626   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2437627   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2437628   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2437629   +          +    -0.35623807358995 * Marital_StatusDivorced
2437630   +          +     0.30324726283965 * Marital_StatusMarried
2437631   +          +    -0.18561093467927 * Marital_StatusSingle
2437632   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle + 
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation + 
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced + 
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle + 
0.395424582152 * Marital_StatusTogether ;
2437633   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2437634   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2437635   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2437636   +          +     0.11581014663368 * Marital_StatusDivorced
2437637   +          +    -0.31070638037659 * Marital_StatusMarried
2437638   +          +     0.17131747253949 * Marital_StatusSingle
2437639   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle + 
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541 
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 * 
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 * 
Marital_StatusTogether ;
2437640   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2437641   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2437642   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2437643   +          +    -0.42450599871892 * Marital_StatusDivorced
2437644   +          +     0.48162905075885 * Marital_StatusMarried
2437645   +          +    -0.26618507749283 * Marital_StatusSingle
2437646   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle + 
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922 
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 * 
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 * 
Marital_StatusTogether ;
2437647   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2437648   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2437649   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2437650   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2437651   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2437652   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2437653   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2437654   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2437655   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2437656   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2437657   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2437658   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2437659   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2437660   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2437661   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2437662   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2437663   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2437664   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2437665   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2437666   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2437667   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2437668   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2437669   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2437670   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2437671   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2437672   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2437673   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2437674   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2437675   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2437676   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 * 
H1x1_7 ;
2437677   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2437678   +END;
MPRINT(EM_DIAGRAM):   END;
2437679   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2437680   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2437681   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2437682   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2437683   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2437684   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2437685   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2437686   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2437687   +END;
MPRINT(EM_DIAGRAM):   END;
2437688   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437689   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2437690   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437691   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2437692   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2437693   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2437694   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2437695   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2437696   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2437697   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2437698   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2437699   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2437700   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2437701   +          +     1.96719021971894 * S_NumDealsPurchases
2437702   +          +    -0.44535354794671 * S_NumDistPurchases
2437703   +          +    -0.54827762736866 * S_NumStorePurchases
2437704   +          +     1.02703310241897 * S_NumWebPurchases
2437705   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2437706   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2437707   +        S_RMntFrq  +       0.651688575044 * S_Recency
2437708   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 * 
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome 
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 * 
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts + 
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 * 
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 * 
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 * 
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 * 
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq + 
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2437709   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2437710   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2437711   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2437712   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2437713   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2437714   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2437715   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2437716   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2437717   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2437718   +          +     1.34659447971131 * S_NumDealsPurchases
2437719   +          +    -0.51624251310423 * S_NumDistPurchases
2437720   +          +      -1.283121574848 * S_NumStorePurchases
2437721   +          +    -1.83517806228926 * S_NumWebPurchases
2437722   +          +     0.51321339475285 * S_NumWebVisitsMonth
2437723   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2437724   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2437725   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 * 
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 * 
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts + 
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 * 
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines + 
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases + 
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases + 
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases + 
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 * 
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2437726   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2437727   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2437728   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2437729   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2437730   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2437731   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2437732   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2437733   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2437734   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2437735   +          +     0.67492297345004 * S_NumDealsPurchases
2437736   +          +    -0.40437875375926 * S_NumDistPurchases
2437737   +          +     0.36322603681545 * S_NumStorePurchases
2437738   +          +    -1.15315070635524 * S_NumWebPurchases
2437739   +          +     1.20707272201156 * S_NumWebVisitsMonth
2437740   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2437741   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2437742   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 * 
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome 
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 * 
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts + 
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 * 
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 * 
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 * 
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 * 
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq + 
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2437743   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2437744   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2437745   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2437746   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2437747   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2437748   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2437749   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2437750   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2437751   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2437752   +          +    -0.41427983342148 * S_NumDealsPurchases
2437753   +          +    -0.22714305629205 * S_NumDistPurchases
2437754   +          +    -0.78763182048862 * S_NumStorePurchases
2437755   +          +    -0.26669253451501 * S_NumWebPurchases
2437756   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2437757   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2437758   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2437759   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 * 
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 * 
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts + 
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 * 
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines + 
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases + 
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases + 
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases + 
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 * 
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2437760   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2437761   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2437762   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2437763   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2437764   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2437765   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2437766   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2437767   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2437768   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2437769   +          +      0.7697882092212 * S_NumDealsPurchases
2437770   +          +     0.51864835453056 * S_NumDistPurchases
2437771   +          +    -1.18320366630444 * S_NumStorePurchases
2437772   +          +     -0.6608394639529 * S_NumWebPurchases
2437773   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2437774   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2437775   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2437776   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 * 
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome 
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 * 
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts + 
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 * 
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 * 
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 * 
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 * 
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq + 
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2437777   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2437778   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2437779   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2437780   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2437781   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2437782   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2437783   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2437784   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2437785   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2437786   +          +     1.45707983202269 * S_NumDealsPurchases
2437787   +          +     0.83341887728641 * S_NumDistPurchases
2437788   +          +    -0.36664450469423 * S_NumStorePurchases
2437789   +          +     0.63911579043339 * S_NumWebPurchases
2437790   +          +     0.67144790303554 * S_NumWebVisitsMonth
2437791   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2437792   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2437793   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 * 
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 * 
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts + 
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 * 
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines + 
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases + 
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases + 
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases + 
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 * 
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2437794   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2437795   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2437796   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2437797   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2437798   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2437799   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2437800   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2437801   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2437802   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2437803   +          +     0.68491896063662 * S_NumDealsPurchases
2437804   +          +      0.5386312048592 * S_NumDistPurchases
2437805   +          +     1.28108942503912 * S_NumStorePurchases
2437806   +          +    -0.88282270505969 * S_NumWebPurchases
2437807   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2437808   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2437809   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2437810   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age 
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome + 
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 * 
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts + 
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 * 
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 * 
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 * 
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 * 
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq + 
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2437811   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2437812   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2437813   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2437814   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2437815   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 * 
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 + 
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 * 
HigherEducationBinary0 ;
2437816   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2437817   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2437818   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2437819   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2437820   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992 
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 + 
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 * 
HigherEducationBinary0 ;
2437821   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2437822   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2437823   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2437824   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2437825   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477 
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 + 
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 * 
HigherEducationBinary0 ;
2437826   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2437827   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2437828   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2437829   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2437830   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 * 
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 + 
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 * 
HigherEducationBinary0 ;
2437831   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2437832   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2437833   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2437834   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2437835   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392 
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 + 
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 * 
HigherEducationBinary0 ;
2437836   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2437837   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2437838   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2437839   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2437840   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 * 
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 + 
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 * 
HigherEducationBinary0 ;
2437841   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2437842   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2437843   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2437844   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2437845   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 * 
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 + 
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 * 
HigherEducationBinary0 ;
2437846   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2437847   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2437848   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2437849   +          +    -3.97961426831865 * Marital_StatusDivorced
2437850   +          +     0.00932639813867 * Marital_StatusMarried
2437851   +          +     1.29310186574718 * Marital_StatusSingle
2437852   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle + 
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation + 
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced + 
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle + 
1.60940802221114 * Marital_StatusTogether ;
2437853   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2437854   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2437855   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2437856   +          +    -0.30358516578188 * Marital_StatusDivorced
2437857   +          +    -0.96176709360703 * Marital_StatusMarried
2437858   +          +     1.26977690921649 * Marital_StatusSingle
2437859   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle + 
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001 
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 * 
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 * 
Marital_StatusTogether ;
2437860   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2437861   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2437862   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2437863   +          +     0.55272671490757 * Marital_StatusDivorced
2437864   +          +      0.1499239288334 * Marital_StatusMarried
2437865   +          +    -0.46840941760604 * Marital_StatusSingle
2437866   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle + 
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843 
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 * 
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 * 
Marital_StatusTogether ;
2437867   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2437868   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2437869   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2437870   +          +      -1.240735370138 * Marital_StatusDivorced
2437871   +          +    -1.20089294883599 * Marital_StatusMarried
2437872   +          +     0.57492674426149 * Marital_StatusSingle
2437873   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle + 
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation + 
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced + 
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle + 
1.44189292990255 * Marital_StatusTogether ;
2437874   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2437875   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2437876   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2437877   +          +     1.05435442049802 * Marital_StatusDivorced
2437878   +          +      0.3571256349717 * Marital_StatusMarried
2437879   +          +    -0.44741267266578 * Marital_StatusSingle
2437880   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle + 
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation + 
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced + 
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle + 
0.02948931507994 * Marital_StatusTogether ;
2437881   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2437882   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2437883   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2437884   +          +     2.06026721980778 * Marital_StatusDivorced
2437885   +          +    -0.49583258645166 * Marital_StatusMarried
2437886   +          +    -1.14824900824474 * Marital_StatusSingle
2437887   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle + 
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation + 
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced + 
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle + 
0.57690093967839 * Marital_StatusTogether ;
2437888   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2437889   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2437890   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2437891   +          +     -1.1890908607447 * Marital_StatusDivorced
2437892   +          +    -0.46668809907123 * Marital_StatusMarried
2437893   +          +     1.20342564763422 * Marital_StatusSingle
2437894   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle + 
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation + 
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced + 
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle + 
-1.75740662969578 * Marital_StatusTogether ;
2437895   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2437896   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2437897   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2437898   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2437899   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2437900   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2437901   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2437902   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2437903   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2437904   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2437905   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2437906   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2437907   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2437908   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2437909   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2437910   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2437911   +END;
MPRINT(EM_DIAGRAM):   END;
2437912   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2437913   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2437914   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2437915   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2437916   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2437917   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2437918   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2437919   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2437920   +END;
MPRINT(EM_DIAGRAM):   END;
2437921   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437922   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2437923   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437924   +
2437925   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2437926   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2437927   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2437928   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2437929   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2437930   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2437931   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2437932   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2437933   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2437934   +end;
MPRINT(EM_DIAGRAM):   end;
2437935   +else do;
MPRINT(EM_DIAGRAM):   else do;
2437936   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2437937   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2437938   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2437939   +   end;
MPRINT(EM_DIAGRAM):   end;
2437940   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2437941   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2437942   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2437943   +   end;
MPRINT(EM_DIAGRAM):   end;
2437944   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2437945   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2437946   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2437947   +   end;
MPRINT(EM_DIAGRAM):   end;
2437948   +end;
MPRINT(EM_DIAGRAM):   end;
2437949   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2437950   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2437951   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2437952   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2437953   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 + 
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 + 
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2437954   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2437955   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2437956   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2437957   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 + 
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 + 
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2437958   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2437959   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2437960   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2437961   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2437962   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2437963   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2437964   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2437965   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2437966   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2437967   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2437968   +END;
MPRINT(EM_DIAGRAM):   END;
2437969   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2437970   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2437971   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2437972   +END;
MPRINT(EM_DIAGRAM):   END;
2437973   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2437974   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2437975   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2437976   +END;
MPRINT(EM_DIAGRAM):   END;
2437977   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2437978   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2437979   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2437980   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2437981   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2437982   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2437983   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2437984   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437985   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2437986   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437987   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2437988   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2437989   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2437990   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2437991   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2437992   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2437993   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2437994   +END;
MPRINT(EM_DIAGRAM):   END;
2437995   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2437996   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2437997   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2437998   +drop
2437999   +H1x1_1
2438000   +H1x1_2
2438001   +H1x1_3
2438002   +H1x1_4
2438003   +H1x1_5
2438004   +H1x1_6
2438005   +H1x1_7
2438006   +H1x2_1
2438007   +H1x2_2
2438008   +H1x2_3
2438009   +H1x2_4
2438010   +H1x2_5
2438011   +H1x2_6
2438012   +H1x2_7
2438013   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2 
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2438014   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2438015   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2438016   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2438017   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2438018   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2438019   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2438020   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2438021   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2438022   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2438023   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2438024   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2438025   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2438026   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2438027   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2438028   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2438029   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2438030   +* Ensmbl45: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 4 of 5;
2438031   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2438032   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2438033   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2438034   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2438035   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2438036   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2438037   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2438038   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2438039   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2438040   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2438041   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2438042   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2438043   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2438044   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2438045   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2438046   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2438047   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2438048   +LENGTH _WARN_ $4
2438049   +      F_DepVar  $ 12
2438050   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2438051   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2438052   +
2438053   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2438054   +
2438055   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2438056   +
2438057   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2438058   +
2438059   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2438060   +
2438061   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2438062   +
2438063   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2438064   +
2438065   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2438066   +
2438067   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2438068   +
2438069   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2438070   +
2438071   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2438072   +
2438073   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2438074   +
2438075   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2438076   +
2438077   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2438078   +
2438079   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2438080   +
2438081   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2438082   +
2438083   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2438084   +
2438085   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2438086   +
2438087   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2438088   +
2438089   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2438090   +
2438091   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2438092   +
2438093   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2438094   +
2438095   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2438096   +
2438097   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2438098   +
2438099   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2438100   +
2438101   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2438102   +
2438103   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2438104   +
2438105   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2438106   +
2438107   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2438108   +
2438109   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2438110   +
2438111   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2438112   +
2438113   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2438114   +
2438115   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2438116   +
2438117   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2438118   +
2438119   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2438120   +
2438121   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2438122   +
2438123   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2438124   +
2438125   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2438126   +
2438127   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2438128   +
2438129   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2438130   +
2438131   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2438132   +
2438133   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2438134   +
2438135   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2438136   +
2438137   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2438138   +
2438139   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2438140   +
2438141   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2438142   +
2438143   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2438144   +
2438145   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2438146   +
2438147   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2438148   +
2438149   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2438150   +
2438151   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2438152   +
2438153   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2438154   +
2438155   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2438156   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2438157   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2438158   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2438159   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2438160   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438161   +end;
MPRINT(EM_DIAGRAM):   end;
2438162   +else do;
MPRINT(EM_DIAGRAM):   else do;
2438163   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2438164   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2438165   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2438166   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2438167   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2438168   +   end;
MPRINT(EM_DIAGRAM):   end;
2438169   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2438170   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2438171   +   end;
MPRINT(EM_DIAGRAM):   end;
2438172   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2438173   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2438174   +      substr(_warn_,2,1) = 'U';
The SAS System

MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2438175   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438176   +   end;
MPRINT(EM_DIAGRAM):   end;
2438177   +end;
MPRINT(EM_DIAGRAM):   end;
2438178   +
2438179   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2438180   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2438181   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2438182   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2438183   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2438184   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438185   +end;
MPRINT(EM_DIAGRAM):   end;
2438186   +else do;
MPRINT(EM_DIAGRAM):   else do;
2438187   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2438188   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2438189   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2438190   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2438191   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2438192   +   end;
MPRINT(EM_DIAGRAM):   end;
2438193   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2438194   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2438195   +   end;
MPRINT(EM_DIAGRAM):   end;
2438196   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2438197   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2438198   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2438199   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438200   +   end;
MPRINT(EM_DIAGRAM):   end;
2438201   +end;
MPRINT(EM_DIAGRAM):   end;
2438202   +
2438203   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2438204   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2438205   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2438206   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2438207   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2438208   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438209   +end;
MPRINT(EM_DIAGRAM):   end;
2438210   +else do;
MPRINT(EM_DIAGRAM):   else do;
2438211   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2438212   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2438213   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2438214   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2438215   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2438216   +   end;
MPRINT(EM_DIAGRAM):   end;
2438217   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2438218   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2438219   +   end;
MPRINT(EM_DIAGRAM):   end;
2438220   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2438221   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2438222   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2438223   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438224   +   end;
MPRINT(EM_DIAGRAM):   end;
2438225   +end;
MPRINT(EM_DIAGRAM):   end;
2438226   +
2438227   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2438228   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2438229   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2438230   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2438231   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2438232   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438233   +end;
MPRINT(EM_DIAGRAM):   end;
2438234   +else do;
MPRINT(EM_DIAGRAM):   else do;
2438235   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2438236   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2438237   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2438238   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2438239   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2438240   +   end;
MPRINT(EM_DIAGRAM):   end;
2438241   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2438242   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2438243   +   end;
MPRINT(EM_DIAGRAM):   end;
2438244   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2438245   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2438246   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2438247   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438248   +   end;
MPRINT(EM_DIAGRAM):   end;
2438249   +end;
MPRINT(EM_DIAGRAM):   end;
2438250   +
2438251   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2438252   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2438253   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2438254   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2438255   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2438256   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438257   +end;
MPRINT(EM_DIAGRAM):   end;
2438258   +else do;
MPRINT(EM_DIAGRAM):   else do;
2438259   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2438260   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2438261   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2438262   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2438263   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2438264   +   end;
MPRINT(EM_DIAGRAM):   end;
2438265   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2438266   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2438267   +   end;
MPRINT(EM_DIAGRAM):   end;
2438268   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2438269   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2438270   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2438271   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438272   +   end;
MPRINT(EM_DIAGRAM):   end;
2438273   +end;
MPRINT(EM_DIAGRAM):   end;
2438274   +
2438275   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2438276   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2438277   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2438278   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2438279   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2438280   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438281   +end;
MPRINT(EM_DIAGRAM):   end;
2438282   +else do;
MPRINT(EM_DIAGRAM):   else do;
2438283   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2438284   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2438285   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2438286   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2438287   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2438288   +   end;
MPRINT(EM_DIAGRAM):   end;
2438289   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2438290   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2438291   +   end;
MPRINT(EM_DIAGRAM):   end;
2438292   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2438293   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2438294   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2438295   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438296   +   end;
MPRINT(EM_DIAGRAM):   end;
2438297   +end;
MPRINT(EM_DIAGRAM):   end;
2438298   +
2438299   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2438300   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2438301   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2438302   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2438303   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2438304   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438305   +end;
MPRINT(EM_DIAGRAM):   end;
2438306   +else do;
MPRINT(EM_DIAGRAM):   else do;
2438307   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2438308   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2438309   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2438310   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2438311   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2438312   +   end;
MPRINT(EM_DIAGRAM):   end;
2438313   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2438314   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2438315   +   end;
MPRINT(EM_DIAGRAM):   end;
2438316   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2438317   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2438318   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2438319   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438320   +   end;
MPRINT(EM_DIAGRAM):   end;
2438321   +end;
MPRINT(EM_DIAGRAM):   end;
2438322   +
2438323   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2438324   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2438325   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2438326   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2438327   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2438328   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2438329   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2438330   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2438331   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2438332   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2438333   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2438334   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2438335   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2438336   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438337   +end;
MPRINT(EM_DIAGRAM):   end;
2438338   +else do;
MPRINT(EM_DIAGRAM):   else do;
2438339   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2438340   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2438341   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2438342   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2438343   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2438344   +   end;
MPRINT(EM_DIAGRAM):   end;
2438345   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2438346   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2438347   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2438348   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2438349   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2438350   +   end;
MPRINT(EM_DIAGRAM):   end;
2438351   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2438352   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2438353   +   end;
MPRINT(EM_DIAGRAM):   end;
2438354   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2438355   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2438356   +   end;
MPRINT(EM_DIAGRAM):   end;
2438357   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2438358   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2438359   +   end;
MPRINT(EM_DIAGRAM):   end;
2438360   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2438361   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2438362   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2438363   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2438364   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2438365   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2438366   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438367   +   end;
MPRINT(EM_DIAGRAM):   end;
2438368   +end;
MPRINT(EM_DIAGRAM):   end;
2438369   +
2438370   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2438371   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2438372   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2438373   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2438374   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2438375   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2438376   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2438377   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2438378   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2438379   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2438380   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2438381   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2438382   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2438383   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2438384   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438385   +end;
MPRINT(EM_DIAGRAM):   end;
2438386   +else do;
MPRINT(EM_DIAGRAM):   else do;
2438387   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2438388   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2438389   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2438390   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2438391   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2438392   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2438393   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2438394   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2438395   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2438396   +         end;
MPRINT(EM_DIAGRAM):   end;
2438397   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2438398   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2438399   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2438400   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2438401   +            end;
MPRINT(EM_DIAGRAM):   end;
2438402   +         end;
MPRINT(EM_DIAGRAM):   end;
2438403   +      end;
MPRINT(EM_DIAGRAM):   end;
2438404   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2438405   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2438406   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2438407   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2438408   +         end;
MPRINT(EM_DIAGRAM):   end;
2438409   +      end;
MPRINT(EM_DIAGRAM):   end;
2438410   +   end;
MPRINT(EM_DIAGRAM):   end;
2438411   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2438412   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2438413   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2438414   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2438415   +      end;
MPRINT(EM_DIAGRAM):   end;
2438416   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2438417   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2438418   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2438419   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2438420   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2438421   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2438422   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2438423   +         end;
MPRINT(EM_DIAGRAM):   end;
2438424   +      end;
MPRINT(EM_DIAGRAM):   end;
2438425   +   end;
MPRINT(EM_DIAGRAM):   end;
2438426   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2438427   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2438428   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2438429   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2438430   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2438431   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2438432   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438433   +   end;
MPRINT(EM_DIAGRAM):   end;
2438434   +end;
MPRINT(EM_DIAGRAM):   end;
2438435   +
2438436   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438437   +*** Checking missing input Interval
2438438   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2438439   +
2438440   +IF NMISS(
2438441   +   AcceptedCmpTotal ,
2438442   +   Age ,
2438443   +   Frq ,
2438444   +   Income ,
2438445   +   Kidhome ,
2438446   +   Mnt ,
2438447   +   MntFishProducts ,
2438448   +   MntFruits ,
2438449   +   MntGoldProds ,
2438450   +   MntMeatProducts ,
2438451   +   MntSweetProducts ,
2438452   +   MntWines ,
2438453   +   MonthsAsCustomer ,
2438454   +   NumCatalogPurchases ,
2438455   +   NumDealsPurchases ,
2438456   +   NumDistPurchases ,
2438457   +   NumStorePurchases ,
2438458   +   NumWebPurchases ,
2438459   +   NumWebVisitsMonth ,
2438460   +   RFMstat ,
2438461   +   RMntFrq ,
2438462   +   Recency ,
2438463   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2438464   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2438465   +
2438466   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438467   +END;
MPRINT(EM_DIAGRAM):   END;
2438468   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438469   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2438470   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438471   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2438472   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2438473   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2438474   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2438475   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2438476   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2438477   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2438478   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2438479   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2438480   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2438481   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2438482   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2438483   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2438484   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2438485   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2438486   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2438487   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2438488   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2438489   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2438490   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2438491   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2438492   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2438493   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2438494   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2438495   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2438496   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2438497   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2438498   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2438499   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2438500   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2438501   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2438502   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2438503   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2438504   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2438505   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2438506   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2438507   +END;
MPRINT(EM_DIAGRAM):   END;
2438508   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2438509   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2438510   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2438511   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2438512   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2438513   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2438514   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2438515   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2438516   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2438517   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2438518   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2438519   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2438520   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2438521   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2438522   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2438523   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2438524   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2438525   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2438526   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2438527   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2438528   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2438529   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2438530   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2438531   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2438532   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2438533   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2438534   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2438535   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2438536   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2438537   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2438538   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2438539   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2438540   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2438541   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2438542   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2438543   +   ELSE S_NumCatalogPurchases
2438544   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2438545   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2438546   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2438547   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2438548   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2438549   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2438550   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2438551   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2438552   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2438553   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2438554   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2438555   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2438556   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2438557   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2438558   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2438559   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2438560   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2438561   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2438562   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2438563   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2438564   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2438565   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2438566   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2438567   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2438568   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2438569   +END;
MPRINT(EM_DIAGRAM):   END;
2438570   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438571   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2438572   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438573   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438574   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2438575   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438576   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438577   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2438578   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438579   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2438580   +   H1x1_1  =     0.26454269681311 * S_AcceptedCmpTotal
2438581   +          +    -0.01281904987956 * S_Age  +    -0.19309516267581 * S_Frq
2438582   +          +    -0.19077579202378 * S_Income  +      0.1806651018562 *
2438583   +        S_Kidhome  +    -0.31002612826472 * S_Mnt  +    -0.05901796512011 *
2438584   +        S_MntFishProducts  +    -0.03760930101165 * S_MntFruits
2438585   +          +     0.01720900715043 * S_MntGoldProds  +     0.21472292961422 *
2438586   +        S_MntMeatProducts  +    -0.02880706568684 * S_MntSweetProducts
2438587   +          +    -0.37993583170844 * S_MntWines  +    -0.00848444156361 *
2438588   +        S_MonthsAsCustomer  +     0.15939611818942 * S_NumCatalogPurchases
2438589   +          +     0.08390531145773 * S_NumDealsPurchases
2438590   +          +    -0.29505970645775 * S_NumDistPurchases
2438591   +          +    -0.13820571170194 * S_NumStorePurchases
2438592   +          +     0.11468011313368 * S_NumWebPurchases
2438593   +          +    -0.18421241371843 * S_NumWebVisitsMonth
2438594   +          +     0.11564064971509 * S_RFMstat  +    -0.02223928001432 *
2438595   +        S_RMntFrq  +     0.18022777532589 * S_Recency
2438596   +          +     0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 * 
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome 
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 * 
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts + 
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 * 
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 * 
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 * 
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 * 
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq + 
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
2438597   +   H1x1_2  =     0.27055972468014 * S_AcceptedCmpTotal
2438598   +          +      0.0025862891193 * S_Age  +    -0.07147307366817 * S_Frq
2438599   +          +      0.1883776136263 * S_Income  +    -0.12712510891181 *
2438600   +        S_Kidhome  +    -0.42099927948686 * S_Mnt  +    -0.07047631817862 *
2438601   +        S_MntFishProducts  +    -0.06658475152878 * S_MntFruits
2438602   +          +     0.01943025682869 * S_MntGoldProds  +     0.29481794109465 *
2438603   +        S_MntMeatProducts  +    -0.06573502094591 * S_MntSweetProducts
2438604   +          +    -0.46266722725002 * S_MntWines  +    -0.00472333181469 *
2438605   +        S_MonthsAsCustomer  +     0.35081452017576 * S_NumCatalogPurchases
2438606   +          +     0.18009076035363 * S_NumDealsPurchases
2438607   +          +     0.03853861006587 * S_NumDistPurchases
2438608   +          +    -0.05118063952874 * S_NumStorePurchases
2438609   +          +    -0.03282286120473 * S_NumWebPurchases
2438610   +          +     0.31160900419026 * S_NumWebVisitsMonth
2438611   +          +     0.08027884378429 * S_RFMstat  +     0.39057239541393 *
2438612   +        S_RMntFrq  +    -0.34796767111274 * S_Recency
2438613   +          +    -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age 
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome + 
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 * 
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts + 
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 * 
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 * 
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 * 
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 * 
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq + 
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
2438614   +   H1x1_1  = H1x1_1  +     0.12539246465239 * AcceptedCmp10
2438615   +          +     0.38473652869745 * AcceptedCmp20  +     0.29820983391886 *
2438616   +        AcceptedCmp30  +     0.29085092779792 * AcceptedCmp40
2438617   +          +     0.18918195914981 * AcceptedCmp50  +    -0.26812516781697 *
2438618   +        Complain0  +    -0.08804110897148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 * 
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 + 
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 * 
HigherEducationBinary0 ;
2438619   +   H1x1_2  = H1x1_2  +    -0.02312897825565 * AcceptedCmp10
2438620   +          +     0.03909481703523 * AcceptedCmp20  +     0.02531081539721 *
2438621   +        AcceptedCmp30  +     0.03109641300151 * AcceptedCmp40
2438622   +          +     0.01985718189621 * AcceptedCmp50  +     0.13425456375085 *
2438623   +        Complain0  +    -0.08222486590117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 * 
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 + 
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 * 
HigherEducationBinary0 ;
2438624   +   H1x1_1  = H1x1_1  +    -0.01975862863669 * Education2n_Cycle
2438625   +          +     0.14654730697956 * EducationBasic  +    -0.00459515646452 *
2438626   +        EducationGraduation  +     0.01586948449127 * EducationMaster
2438627   +          +    -0.04750981393889 * Marital_StatusDivorced
2438628   +          +     0.28216925676677 * Marital_StatusMarried
2438629   +          +    -0.20757827413964 * Marital_StatusSingle
2438630   +          +     0.22622509024122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle + 
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127 
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 * 
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 * 
Marital_StatusTogether ;
2438631   +   H1x1_2  = H1x1_2  +     0.12009608969049 * Education2n_Cycle
2438632   +          +     0.01793460710056 * EducationBasic  +    -0.04257710051346 *
2438633   +        EducationGraduation  +    -0.06975725710115 * EducationMaster
2438634   +          +     0.05981919620577 * Marital_StatusDivorced
2438635   +          +    -0.17161573846062 * Marital_StatusMarried
2438636   +          +     0.15869440681091 * Marital_StatusSingle
2438637   +          +    -0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle + 
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation + 
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced + 
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle + 
-0.13282372850158 * Marital_StatusTogether ;
2438638   +   H1x1_1  =     0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
2438639   +   H1x1_2  =    -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
2438640   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2438641   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2438642   +END;
MPRINT(EM_DIAGRAM):   END;
2438643   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2438644   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2438645   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2438646   +END;
MPRINT(EM_DIAGRAM):   END;
2438647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438648   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2438649   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438650   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2438651   +   H1x2_1  =      0.1719390672121 * S_AcceptedCmpTotal
2438652   +          +     0.23586839288361 * S_Age  +    -1.85384134180372 * S_Frq
2438653   +          +    -0.43561758063577 * S_Income  +     -2.5581498901473 *
2438654   +        S_Kidhome  +      1.7031888248428 * S_Mnt  +     0.84982621124736 *
2438655   +        S_MntFishProducts  +     0.25990173458485 * S_MntFruits
2438656   +          +    -2.80730469703961 * S_MntGoldProds  +     0.64923500711702 *
2438657   +        S_MntMeatProducts  +     0.27458645458502 * S_MntSweetProducts
2438658   +          +    -0.47723589182372 * S_MntWines  +    -0.66777488145507 *
2438659   +        S_MonthsAsCustomer  +    -0.46364414558282 * S_NumCatalogPurchases
2438660   +          +     0.00741910846933 * S_NumDealsPurchases
2438661   +          +       1.334289252268 * S_NumDistPurchases
2438662   +          +    -0.29851567180932 * S_NumStorePurchases
2438663   +          +    -0.52115313259666 * S_NumWebPurchases
2438664   +          +     0.93907168501909 * S_NumWebVisitsMonth
2438665   +          +    -0.26126881318451 * S_RFMstat  +     -1.3003763542929 *
2438666   +        S_RMntFrq  +    -0.12807368149309 * S_Recency
2438667   +          +    -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age 
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome + 
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 * 
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts + 
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 * 
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 * 
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 * 
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 * 
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq + 
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
2438668   +   H1x2_2  =     0.30897763700303 * S_AcceptedCmpTotal
2438669   +          +    -0.77727886396317 * S_Age  +    -0.79298582494973 * S_Frq
2438670   +          +    -1.73199353738093 * S_Income  +     1.12984956989288 *
2438671   +        S_Kidhome  +    -1.36701096993984 * S_Mnt  +    -0.21063950702424 *
2438672   +        S_MntFishProducts  +    -0.20027336686257 * S_MntFruits
2438673   +          +    -0.06955810418489 * S_MntGoldProds  +     0.16672767423533 *
2438674   +        S_MntMeatProducts  +    -1.56675269740541 * S_MntSweetProducts
2438675   +          +     1.85366479127485 * S_MntWines  +    -0.58178621903094 *
2438676   +        S_MonthsAsCustomer  +     1.31024619253935 * S_NumCatalogPurchases
2438677   +          +     1.60427001186844 * S_NumDealsPurchases
2438678   +          +    -0.18447618033353 * S_NumDistPurchases
2438679   +          +    -1.29966073003539 * S_NumStorePurchases
2438680   +          +    -1.12373457341536 * S_NumWebPurchases
2438681   +          +     1.46099221440494 * S_NumWebVisitsMonth
2438682   +          +     0.17795038564406 * S_RFMstat  +    -0.82372068140832 *
2438683   +        S_RMntFrq  +      0.4480370534729 * S_Recency
2438684   +          +     0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 * 
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 * 
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts + 
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 * 
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines + 
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases + 
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases + 
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases + 
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 * 
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
2438685   +   H1x2_1  = H1x2_1  +     -0.6569942252053 * AcceptedCmp10
2438686   +          +    -0.89152555599538 * AcceptedCmp20  +     1.00488730476017 *
2438687   +        AcceptedCmp30  +     0.34286042692068 * AcceptedCmp40
2438688   +          +    -1.19198820362508 * AcceptedCmp50  +    -0.86571531914686 *
2438689   +        Complain0  +     0.14303136037365 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 * 
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 + 
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 * 
HigherEducationBinary0 ;
2438690   +   H1x2_2  = H1x2_2  +     1.79481763784518 * AcceptedCmp10
2438691   +          +    -2.85912280013336 * AcceptedCmp20  +     0.16890012708431 *
2438692   +        AcceptedCmp30  +     0.94639083182751 * AcceptedCmp40
2438693   +          +    -0.62141828005946 * AcceptedCmp50  +    -0.39098882491277 *
2438694   +        Complain0  +     0.85700787946581 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 * 
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 + 
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 * 
HigherEducationBinary0 ;
2438695   +   H1x2_1  = H1x2_1  +      0.0737054452993 * Education2n_Cycle
2438696   +          +       0.362372261752 * EducationBasic  +      -1.485941295677 *
2438697   +        EducationGraduation  +    -0.81257694655594 * EducationMaster
2438698   +          +     0.59819559998538 * Marital_StatusDivorced
2438699   +          +     0.92957772553633 * Marital_StatusMarried
2438700   +          +    -1.11796266958894 * Marital_StatusSingle
2438701   +          +     -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 * 
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster + 
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried + 
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
2438702   +   H1x2_2  = H1x2_2  +    -1.10016528859962 * Education2n_Cycle
2438703   +          +    -1.46816646165468 * EducationBasic  +    -0.11241499152788 *
2438704   +        EducationGraduation  +    -0.65110715251273 * EducationMaster
2438705   +          +      1.0870909562212 * Marital_StatusDivorced
2438706   +          +     1.50333961797515 * Marital_StatusMarried
2438707   +          +    -1.41407780765932 * Marital_StatusSingle
2438708   +          +    -0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle + 
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation + 
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced + 
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle + 
-0.52528072358697 * Marital_StatusTogether ;
2438709   +   H1x2_1  =     1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
2438710   +   H1x2_2  =    -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
2438711   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2438712   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2438713   +   H1x2_1  = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
2438714   +   H1x2_2  = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
2438715   +END;
MPRINT(EM_DIAGRAM):   END;
2438716   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2438717   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2438718   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2438719   +END;
MPRINT(EM_DIAGRAM):   END;
2438720   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438721   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2438722   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438723   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2438724   +   H1x3_1  =     0.29299707972123 * S_AcceptedCmpTotal
2438725   +          +     1.39797329466471 * S_Age  +    -2.02673480388837 * S_Frq
2438726   +          +    -1.09682777516542 * S_Income  +    -1.22241109888643 *
2438727   +        S_Kidhome  +    -1.35766076466324 * S_Mnt  +    -2.90812690982576 *
2438728   +        S_MntFishProducts  +    -0.48174923069843 * S_MntFruits
2438729   +          +     1.57335575145195 * S_MntGoldProds  +    -0.55248873552176 *
2438730   +        S_MntMeatProducts  +     0.54536808091745 * S_MntSweetProducts
2438731   +          +    -0.41516162035296 * S_MntWines  +     0.07715050596116 *
2438732   +        S_MonthsAsCustomer  +    -2.18785324142159 * S_NumCatalogPurchases
2438733   +          +     -1.1174504455343 * S_NumDealsPurchases
2438734   +          +    -0.18561253113498 * S_NumDistPurchases
2438735   +          +    -0.35231054612792 * S_NumStorePurchases
2438736   +          +      0.9249490354172 * S_NumWebPurchases
2438737   +          +    -0.79868535147175 * S_NumWebVisitsMonth
2438738   +          +    -0.17158151681124 * S_RFMstat  +     -0.9870286843901 *
2438739   +        S_RMntFrq  +     0.62439123699986 * S_Recency
2438740   +          +    -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 * 
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 * 
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts + 
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 * 
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines + 
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases + 
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases + 
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases + 
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 * 
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
2438741   +   H1x3_2  =    -1.07483179793421 * S_AcceptedCmpTotal
2438742   +          +     1.03558600048684 * S_Age  +     1.11497695424161 * S_Frq
2438743   +          +     0.27297296926116 * S_Income  +     0.77036019999023 *
2438744   +        S_Kidhome  +     0.02567848304605 * S_Mnt  +     0.38661977628442 *
2438745   +        S_MntFishProducts  +    -0.36751750771945 * S_MntFruits
2438746   +          +     0.93924107558212 * S_MntGoldProds  +     0.93046859422523 *
2438747   +        S_MntMeatProducts  +    -0.46124679979068 * S_MntSweetProducts
2438748   +          +    -0.45348234529786 * S_MntWines  +     1.60057890623864 *
2438749   +        S_MonthsAsCustomer  +    -1.74657448073162 * S_NumCatalogPurchases
2438750   +          +     1.05434863590054 * S_NumDealsPurchases
2438751   +          +    -0.73255174632068 * S_NumDistPurchases
2438752   +          +     0.53949953455044 * S_NumStorePurchases
2438753   +          +    -0.61709467816649 * S_NumWebPurchases
2438754   +          +     1.36235282484348 * S_NumWebVisitsMonth
2438755   +          +     -0.0352720913953 * S_RFMstat  +     0.14001475375682 *
2438756   +        S_RMntFrq  +    -0.24276831608869 * S_Recency
2438757   +          +     0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 * 
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome 
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 * 
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts + 
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 * 
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 * 
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 * 
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 * 
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq + 
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
2438758   +   H1x3_1  = H1x3_1  +    -0.94208577947628 * AcceptedCmp10
2438759   +          +     -0.5233017415423 * AcceptedCmp20  +    -0.76900164563331 *
2438760   +        AcceptedCmp30  +    -0.79512141055877 * AcceptedCmp40
2438761   +          +     0.20126599116957 * AcceptedCmp50  +    -0.43046555689873 *
2438762   +        Complain0  +     0.31565229685815 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 * 
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 + 
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 * 
HigherEducationBinary0 ;
2438763   +   H1x3_2  = H1x3_2  +    -1.24961064002454 * AcceptedCmp10
2438764   +          +    -0.89859693224833 * AcceptedCmp20  +     1.15884958881232 *
2438765   +        AcceptedCmp30  +     0.38250389164472 * AcceptedCmp40
2438766   +          +     0.47123004358879 * AcceptedCmp50  +     -2.1232679844098 *
2438767   +        Complain0  +     0.97226091069674 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833 
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 + 
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 * 
HigherEducationBinary0 ;
2438768   +   H1x3_1  = H1x3_1  +    -0.07500306665919 * Education2n_Cycle
2438769   +          +     0.04122924311058 * EducationBasic  +    -0.49410102102951 *
2438770   +        EducationGraduation  +    -0.45477734340809 * EducationMaster
2438771   +          +     0.22253248036322 * Marital_StatusDivorced
2438772   +          +    -1.72455332745001 * Marital_StatusMarried
2438773   +          +     0.57787272107232 * Marital_StatusSingle
2438774   +          +     0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle + 
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation + 
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced + 
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle + 
0.16267074825086 * Marital_StatusTogether ;
2438775   +   H1x3_2  = H1x3_2  +    -0.21560233542581 * Education2n_Cycle
2438776   +          +    -0.36476815429069 * EducationBasic  +     1.63334881201349 *
2438777   +        EducationGraduation  +    -1.12620982139344 * EducationMaster
2438778   +          +     0.14637124403046 * Marital_StatusDivorced
2438779   +          +     0.18905186437528 * Marital_StatusMarried
2438780   +          +     0.00511958458521 * Marital_StatusSingle
2438781   +          +      -0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle + 
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation + 
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced + 
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle + 
-0.915980703129 * Marital_StatusTogether ;
2438782   +   H1x3_1  =     0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
2438783   +   H1x3_2  =     1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
2438784   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2438785   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2438786   +   H1x3_1  = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
2438787   +   H1x3_2  = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
2438788   +END;
MPRINT(EM_DIAGRAM):   END;
2438789   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2438790   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2438791   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2438792   +END;
MPRINT(EM_DIAGRAM):   END;
2438793   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438794   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2438795   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438796   +
2438797   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2438798   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2438799   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2438800   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2438801   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2438802   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2438803   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2438804   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2438805   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2438806   +end;
MPRINT(EM_DIAGRAM):   end;
2438807   +else do;
MPRINT(EM_DIAGRAM):   else do;
2438808   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2438809   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2438810   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2438811   +   end;
MPRINT(EM_DIAGRAM):   end;
2438812   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2438813   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2438814   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2438815   +   end;
MPRINT(EM_DIAGRAM):   end;
2438816   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2438817   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2438818   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2438819   +   end;
MPRINT(EM_DIAGRAM):   end;
2438820   +end;
MPRINT(EM_DIAGRAM):   end;
2438821   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2438822   +   P_DepVar1  =    -10.6892993503201 * H1x1_1  +     16.2938756734008 * H1x1_2
2438823   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
2438824   +   P_DepVar1  = P_DepVar1  +      1.2332183930826 * H1x2_1
2438825   +          +    -0.85206858106106 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 * 
H1x2_2 ;
2438826   +   P_DepVar1  = P_DepVar1  +    -0.00087126688031 * H1x3_1
2438827   +          +    -0.00025812675645 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 * 
H1x3_2 ;
2438828   +   P_DepVar1  =     2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
2438829   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2438830   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2438831   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2438832   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2438833   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2438834   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2438835   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2438836   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2438837   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2438838   +END;
MPRINT(EM_DIAGRAM):   END;
2438839   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2438840   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2438841   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2438842   +END;
MPRINT(EM_DIAGRAM):   END;
2438843   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2438844   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2438845   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2438846   +END;
MPRINT(EM_DIAGRAM):   END;
2438847   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2438848   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2438849   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2438850   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2438851   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2438852   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2438853   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2438854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438855   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2438856   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438857   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2438858   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2438859   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2438860   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2438861   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2438862   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2438863   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2438864   +END;
MPRINT(EM_DIAGRAM):   END;
2438865   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2438866   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2438867   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2438868   +drop
2438869   +H1x1_1
2438870   +H1x1_2
2438871   +H1x2_1
2438872   +H1x2_2
2438873   +H1x3_1
2438874   +H1x3_2
2438875   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
2438876   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2438877   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2438878   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2438879   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2438880   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2438881   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2438882   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2438883   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2438884   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2438885   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2438886   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2438887   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2438888   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2438889   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2438890   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2438891   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2438892   +* Ensmbl45: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 5 of 5;
2438893   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2438894   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2438895   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2438896   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2438897   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2438898   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2438899   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2438900   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2438901   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2438902   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2438903   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2438904   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2438905   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2438906   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2438907   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2438908   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2438909   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2438910   +LENGTH _WARN_ $4
2438911   +      F_DepVar  $ 12
2438912   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2438913   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2438914   +
2438915   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2438916   +
2438917   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2438918   +
2438919   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2438920   +
2438921   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2438922   +
2438923   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2438924   +
2438925   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2438926   +
2438927   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2438928   +
2438929   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2438930   +
2438931   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2438932   +
2438933   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2438934   +
2438935   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2438936   +
2438937   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2438938   +
2438939   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2438940   +
2438941   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2438942   +
2438943   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2438944   +
2438945   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2438946   +
2438947   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2438948   +
2438949   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2438950   +
2438951   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2438952   +
2438953   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2438954   +
2438955   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2438956   +
2438957   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2438958   +
2438959   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2438960   +
2438961   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2438962   +
2438963   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2438964   +
2438965   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2438966   +
2438967   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2438968   +
2438969   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2438970   +
2438971   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2438972   +
2438973   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2438974   +
2438975   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2438976   +
2438977   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2438978   +
2438979   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2438980   +
2438981   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2438982   +
2438983   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2438984   +
2438985   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2438986   +
2438987   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2438988   +
2438989   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2438990   +
2438991   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2438992   +
2438993   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2438994   +
2438995   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2438996   +
2438997   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2438998   +
2438999   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2439000   +
2439001   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2439002   +
2439003   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2439004   +
2439005   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2439006   +
2439007   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2439008   +
2439009   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2439010   +
2439011   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2439012   +
2439013   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2439014   +
2439015   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2439016   +
2439017   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2439018   +
2439019   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2439020   +
2439021   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2439022   +
2439023   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2439024   +
2439025   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2439026   +
2439027   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2439028   +
2439029   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2439030   +
2439031   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2439032   +
2439033   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2439034   +
2439035   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2439036   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2439037   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2439038   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2439039   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2439040   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2439041   +end;
MPRINT(EM_DIAGRAM):   end;
2439042   +else do;
MPRINT(EM_DIAGRAM):   else do;
2439043   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2439044   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2439045   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2439046   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2439047   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2439048   +   end;
MPRINT(EM_DIAGRAM):   end;
2439049   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2439050   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2439051   +   end;
MPRINT(EM_DIAGRAM):   end;
2439052   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2439053   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2439054   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2439055   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2439056   +   end;
MPRINT(EM_DIAGRAM):   end;
2439057   +end;
MPRINT(EM_DIAGRAM):   end;
2439058   +
2439059   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2439060   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2439061   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2439062   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2439063   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2439064   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2439065   +end;
MPRINT(EM_DIAGRAM):   end;
2439066   +else do;
MPRINT(EM_DIAGRAM):   else do;
2439067   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2439068   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2439069   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2439070   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2439071   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2439072   +   end;
MPRINT(EM_DIAGRAM):   end;
2439073   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2439074   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2439075   +   end;
MPRINT(EM_DIAGRAM):   end;
2439076   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2439077   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2439078   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2439079   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2439080   +   end;
MPRINT(EM_DIAGRAM):   end;
2439081   +end;
MPRINT(EM_DIAGRAM):   end;
2439082   +
2439083   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2439084   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2439085   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2439086   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2439087   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2439088   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2439089   +end;
MPRINT(EM_DIAGRAM):   end;
2439090   +else do;
MPRINT(EM_DIAGRAM):   else do;
2439091   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2439092   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2439093   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2439094   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2439095   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2439096   +   end;
MPRINT(EM_DIAGRAM):   end;
2439097   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2439098   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2439099   +   end;
MPRINT(EM_DIAGRAM):   end;
2439100   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2439101   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2439102   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2439103   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2439104   +   end;
MPRINT(EM_DIAGRAM):   end;
2439105   +end;
MPRINT(EM_DIAGRAM):   end;
2439106   +
2439107   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2439108   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2439109   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2439110   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2439111   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2439112   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2439113   +end;
MPRINT(EM_DIAGRAM):   end;
2439114   +else do;
MPRINT(EM_DIAGRAM):   else do;
2439115   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2439116   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2439117   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2439118   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2439119   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2439120   +   end;
MPRINT(EM_DIAGRAM):   end;
2439121   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2439122   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2439123   +   end;
MPRINT(EM_DIAGRAM):   end;
2439124   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2439125   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2439126   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2439127   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2439128   +   end;
MPRINT(EM_DIAGRAM):   end;
2439129   +end;
MPRINT(EM_DIAGRAM):   end;
2439130   +
2439131   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2439132   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2439133   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2439134   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2439135   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2439136   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2439137   +end;
MPRINT(EM_DIAGRAM):   end;
2439138   +else do;
MPRINT(EM_DIAGRAM):   else do;
2439139   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2439140   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2439141   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2439142   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2439143   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2439144   +   end;
MPRINT(EM_DIAGRAM):   end;
2439145   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2439146   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2439147   +   end;
MPRINT(EM_DIAGRAM):   end;
2439148   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2439149   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2439150   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2439151   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2439152   +   end;
MPRINT(EM_DIAGRAM):   end;
2439153   +end;
MPRINT(EM_DIAGRAM):   end;
2439154   +
2439155   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2439156   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2439157   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2439158   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2439159   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2439160   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2439161   +end;
MPRINT(EM_DIAGRAM):   end;
2439162   +else do;
MPRINT(EM_DIAGRAM):   else do;
2439163   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2439164   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2439165   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2439166   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2439167   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2439168   +   end;
MPRINT(EM_DIAGRAM):   end;
2439169   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2439170   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2439171   +   end;
MPRINT(EM_DIAGRAM):   end;
2439172   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2439173   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2439174   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2439175   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2439176   +   end;
MPRINT(EM_DIAGRAM):   end;
2439177   +end;
MPRINT(EM_DIAGRAM):   end;
2439178   +
2439179   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2439180   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2439181   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2439182   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2439183   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2439184   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2439185   +end;
MPRINT(EM_DIAGRAM):   end;
2439186   +else do;
MPRINT(EM_DIAGRAM):   else do;
2439187   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2439188   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2439189   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2439190   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2439191   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2439192   +   end;
MPRINT(EM_DIAGRAM):   end;
2439193   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2439194   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2439195   +   end;
MPRINT(EM_DIAGRAM):   end;
2439196   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2439197   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2439198   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2439199   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2439200   +   end;
MPRINT(EM_DIAGRAM):   end;
2439201   +end;
MPRINT(EM_DIAGRAM):   end;
2439202   +
2439203   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2439204   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2439205   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2439206   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2439207   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2439208   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2439209   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2439210   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2439211   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2439212   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2439213   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2439214   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2439215   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2439216   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2439217   +end;
MPRINT(EM_DIAGRAM):   end;
2439218   +else do;
MPRINT(EM_DIAGRAM):   else do;
2439219   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2439220   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2439221   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2439222   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2439223   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2439224   +   end;
MPRINT(EM_DIAGRAM):   end;
2439225   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2439226   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2439227   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2439228   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2439229   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2439230   +   end;
MPRINT(EM_DIAGRAM):   end;
2439231   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2439232   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2439233   +   end;
MPRINT(EM_DIAGRAM):   end;
2439234   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2439235   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2439236   +   end;
MPRINT(EM_DIAGRAM):   end;
2439237   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2439238   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2439239   +   end;
MPRINT(EM_DIAGRAM):   end;
2439240   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2439241   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2439242   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2439243   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2439244   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2439245   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2439246   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2439247   +   end;
MPRINT(EM_DIAGRAM):   end;
2439248   +end;
MPRINT(EM_DIAGRAM):   end;
2439249   +
2439250   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2439251   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2439252   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2439253   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2439254   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2439255   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2439256   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2439257   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2439258   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2439259   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2439260   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2439261   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2439262   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2439263   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2439264   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2439265   +end;
MPRINT(EM_DIAGRAM):   end;
2439266   +else do;
MPRINT(EM_DIAGRAM):   else do;
2439267   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2439268   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2439269   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2439270   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2439271   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2439272   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2439273   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2439274   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2439275   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2439276   +         end;
MPRINT(EM_DIAGRAM):   end;
2439277   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2439278   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2439279   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2439280   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2439281   +            end;
MPRINT(EM_DIAGRAM):   end;
2439282   +         end;
MPRINT(EM_DIAGRAM):   end;
2439283   +      end;
MPRINT(EM_DIAGRAM):   end;
2439284   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2439285   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2439286   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2439287   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2439288   +         end;
MPRINT(EM_DIAGRAM):   end;
2439289   +      end;
MPRINT(EM_DIAGRAM):   end;
2439290   +   end;
MPRINT(EM_DIAGRAM):   end;
2439291   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2439292   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2439293   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2439294   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2439295   +      end;
MPRINT(EM_DIAGRAM):   end;
2439296   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2439297   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2439298   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2439299   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2439300   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2439301   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2439302   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2439303   +         end;
MPRINT(EM_DIAGRAM):   end;
2439304   +      end;
MPRINT(EM_DIAGRAM):   end;
2439305   +   end;
MPRINT(EM_DIAGRAM):   end;
2439306   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2439307   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2439308   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2439309   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2439310   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2439311   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2439312   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2439313   +   end;
MPRINT(EM_DIAGRAM):   end;
2439314   +end;
MPRINT(EM_DIAGRAM):   end;
2439315   +
2439316   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439317   +*** Checking missing input Interval
2439318   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2439319   +
2439320   +IF NMISS(
2439321   +   AcceptedCmpTotal ,
2439322   +   Age ,
2439323   +   Frq ,
2439324   +   Income ,
2439325   +   Kidhome ,
2439326   +   Mnt ,
2439327   +   MntFishProducts ,
2439328   +   MntFruits ,
2439329   +   MntGoldProds ,
2439330   +   MntMeatProducts ,
2439331   +   MntSweetProducts ,
2439332   +   MntWines ,
2439333   +   MonthsAsCustomer ,
2439334   +   NumCatalogPurchases ,
2439335   +   NumDealsPurchases ,
2439336   +   NumDistPurchases ,
2439337   +   NumStorePurchases ,
2439338   +   NumWebPurchases ,
2439339   +   NumWebVisitsMonth ,
2439340   +   RFMstat ,
2439341   +   RMntFrq ,
2439342   +   Recency ,
2439343   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2439344   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2439345   +
2439346   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2439347   +END;
MPRINT(EM_DIAGRAM):   END;
2439348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439349   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2439350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439351   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2439352   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2439353   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2439354   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2439355   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2439356   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2439357   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2439358   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2439359   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2439360   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2439361   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2439362   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2439363   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2439364   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2439365   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2439366   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2439367   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2439368   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2439369   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2439370   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2439371   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2439372   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2439373   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2439374   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2439375   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2439376   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2439377   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2439378   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2439379   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2439380   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2439381   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2439382   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2439383   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2439384   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2439385   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2439386   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2439387   +END;
MPRINT(EM_DIAGRAM):   END;
2439388   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2439389   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2439390   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2439391   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2439392   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2439393   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2439394   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2439395   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2439396   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2439397   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2439398   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2439399   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2439400   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2439401   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2439402   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2439403   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2439404   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2439405   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2439406   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2439407   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2439408   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2439409   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2439410   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2439411   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2439412   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2439413   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2439414   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2439415   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2439416   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2439417   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2439418   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2439419   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2439420   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2439421   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2439422   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2439423   +   ELSE S_NumCatalogPurchases
2439424   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2439425   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2439426   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2439427   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2439428   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2439429   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2439430   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2439431   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2439432   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2439433   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2439434   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2439435   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2439436   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2439437   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2439438   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2439439   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2439440   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2439441   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2439442   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2439443   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2439444   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2439445   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2439446   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2439447   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2439448   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2439449   +END;
MPRINT(EM_DIAGRAM):   END;
2439450   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439451   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2439452   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439453   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439454   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2439455   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439456   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439457   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2439458   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439459   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2439460   +   H1x1_1  =     -1.5235159368138 * S_AcceptedCmpTotal
2439461   +          +     0.13941271308016 * S_Age  +    -0.84765157270503 * S_Frq
2439462   +          +    -0.89386555046676 * S_Income  +     1.62709236629244 *
2439463   +        S_Kidhome  +    -1.21416429819342 * S_Mnt  +    -1.95640488965637 *
2439464   +        S_MntFishProducts  +    -0.08621024993404 * S_MntFruits
2439465   +          +    -0.38536990009586 * S_MntGoldProds  +     3.12553097304637 *
2439466   +        S_MntMeatProducts  +    -2.50680711036653 * S_MntSweetProducts
2439467   +          +    -3.77770073626477 * S_MntWines  +     0.39118206604766 *
2439468   +        S_MonthsAsCustomer  +     1.80485993754239 * S_NumCatalogPurchases
2439469   +          +     3.21215425524619 * S_NumDealsPurchases
2439470   +          +     0.08695198777156 * S_NumDistPurchases
2439471   +          +    -2.58697971128295 * S_NumStorePurchases
2439472   +          +    -0.44431924796059 * S_NumWebPurchases
2439473   +          +     -1.4492698984921 * S_NumWebVisitsMonth
2439474   +          +     2.16652214648037 * S_RFMstat  +    -0.48027961131639 *
2439475   +        S_RMntFrq  +    -0.27206877070748 * S_Recency
2439476   +          +    -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 * 
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 * 
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts + 
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 * 
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines + 
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases + 
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases + 
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases + 
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 * 
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
2439477   +   H1x1_2  =     -0.5665707820209 * S_AcceptedCmpTotal
2439478   +          +    -1.33582859121223 * S_Age  +     0.90483024742522 * S_Frq
2439479   +          +    -2.00588558815165 * S_Income  +      3.0373198083895 *
2439480   +        S_Kidhome  +      0.4356905004225 * S_Mnt  +     0.19619626354366 *
2439481   +        S_MntFishProducts  +    -1.09111340184132 * S_MntFruits
2439482   +          +     0.36844676336289 * S_MntGoldProds  +    -2.23832561375429 *
2439483   +        S_MntMeatProducts  +    -0.18280081530069 * S_MntSweetProducts
2439484   +          +     2.11599309139107 * S_MntWines  +     0.68147940490709 *
2439485   +        S_MonthsAsCustomer  +    -0.73940648599397 * S_NumCatalogPurchases
2439486   +          +    -0.83844506398484 * S_NumDealsPurchases
2439487   +          +     0.60831936516804 * S_NumDistPurchases
2439488   +          +     1.79084087761626 * S_NumStorePurchases
2439489   +          +     1.17119196356453 * S_NumWebPurchases
2439490   +          +    -3.63586683518718 * S_NumWebVisitsMonth
2439491   +          +     0.60521990735996 * S_RFMstat  +     0.56036381019221 *
2439492   +        S_RMntFrq  +     3.84599118896159 * S_Recency
2439493   +          +     2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 * 
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome 
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 * 
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts + 
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 * 
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 * 
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 * 
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 * 
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq + 
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
2439494   +   H1x1_3  =    -2.34864034635966 * S_AcceptedCmpTotal
2439495   +          +     0.38417502023066 * S_Age  +     0.18241442054661 * S_Frq
2439496   +          +    -0.36643054878492 * S_Income  +    -0.01464967964014 *
2439497   +        S_Kidhome  +     0.13084033882631 * S_Mnt  +     1.43066752801424 *
2439498   +        S_MntFishProducts  +     0.30678881611098 * S_MntFruits
2439499   +          +    -0.35038082288662 * S_MntGoldProds  +    -6.79650673935808 *
2439500   +        S_MntMeatProducts  +    -0.35154740308081 * S_MntSweetProducts
2439501   +          +     4.53406963590593 * S_MntWines  +     0.35082802515055 *
2439502   +        S_MonthsAsCustomer  +    -1.62489937965567 * S_NumCatalogPurchases
2439503   +          +    -0.31484031572628 * S_NumDealsPurchases
2439504   +          +    -0.18273941035679 * S_NumDistPurchases
2439505   +          +     0.99501789733882 * S_NumStorePurchases
2439506   +          +     1.32014078829379 * S_NumWebPurchases
2439507   +          +    -1.34393498450215 * S_NumWebVisitsMonth
2439508   +          +    -0.93549119966022 * S_RFMstat  +    -1.74825390192193 *
2439509   +        S_RMntFrq  +     0.84406941726743 * S_Recency
2439510   +          +     -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 * 
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 * 
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098 
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts + 
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 * 
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 * 
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 * 
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 * 
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq + 
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
2439511   +   H1x1_4  =     0.46772023050431 * S_AcceptedCmpTotal
2439512   +          +    -0.64609651992636 * S_Age  +     0.65433283816167 * S_Frq
2439513   +          +     0.97922442633265 * S_Income  +    -0.37705204232056 *
2439514   +        S_Kidhome  +     0.00937752600299 * S_Mnt  +     -0.6082843846013 *
2439515   +        S_MntFishProducts  +     -0.6227107898918 * S_MntFruits
2439516   +          +      0.0291421224006 * S_MntGoldProds  +     1.09748402313736 *
2439517   +        S_MntMeatProducts  +     0.00604619863622 * S_MntSweetProducts
2439518   +          +    -0.74684537570529 * S_MntWines  +    -0.00266569003481 *
2439519   +        S_MonthsAsCustomer  +     2.01081657735872 * S_NumCatalogPurchases
2439520   +          +     1.19658719134196 * S_NumDealsPurchases
2439521   +          +     0.87478204472986 * S_NumDistPurchases
2439522   +          +    -0.20635856288784 * S_NumStorePurchases
2439523   +          +    -0.89927356974242 * S_NumWebPurchases
2439524   +          +     2.92285244132576 * S_NumWebVisitsMonth
2439525   +          +    -0.10913907245142 * S_RFMstat  +     1.64233441899256 *
2439526   +        S_RMntFrq  +    -3.64945971202322 * S_Recency
2439527   +          +    -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 * 
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome 
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 * 
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts + 
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 * 
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 * 
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 * 
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 * 
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq + 
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
2439528   +   H1x1_5  =    -1.22491918863941 * S_AcceptedCmpTotal
2439529   +          +     0.16201659993217 * S_Age  +     0.17189537824457 * S_Frq
2439530   +          +    -0.87922900323563 * S_Income  +    -0.79268410231108 *
2439531   +        S_Kidhome  +     0.62793961676074 * S_Mnt  +     0.20877761882787 *
2439532   +        S_MntFishProducts  +     0.99367872286661 * S_MntFruits
2439533   +          +     -0.4347564565882 * S_MntGoldProds  +    -0.16203279329295 *
2439534   +        S_MntMeatProducts  +     0.81409215344356 * S_MntSweetProducts
2439535   +          +     1.33482971563984 * S_MntWines  +    -1.17441882196058 *
2439536   +        S_MonthsAsCustomer  +    -1.72330829533107 * S_NumCatalogPurchases
2439537   +          +       -2.32617124568 * S_NumDealsPurchases
2439538   +          +    -0.56589187730672 * S_NumDistPurchases
2439539   +          +     1.07062299863482 * S_NumStorePurchases
2439540   +          +     0.30077273739578 * S_NumWebPurchases
2439541   +          +    -1.67745421915317 * S_NumWebVisitsMonth
2439542   +          +      0.0530074713265 * S_RFMstat  +    -0.55969729655382 *
2439543   +        S_RMntFrq  +     1.32196704233234 * S_Recency
2439544   +          +     1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 * 
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 * 
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661 
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts + 
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 * 
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 * 
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 * 
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 * 
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq + 
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
2439545   +   H1x1_1  = H1x1_1  +     0.19875423759582 * AcceptedCmp10
2439546   +          +    -1.84163905120352 * AcceptedCmp20  +    -1.63149345314696 *
2439547   +        AcceptedCmp30  +    -1.52652349127913 * AcceptedCmp40
2439548   +          +    -0.97663634905647 * AcceptedCmp50  +    -0.94352222509088 *
2439549   +        Complain0  +    -0.63297203617355 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 * 
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 + 
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 * 
HigherEducationBinary0 ;
2439550   +   H1x1_2  = H1x1_2  +      0.0505791781839 * AcceptedCmp10
2439551   +          +    -0.19407965320143 * AcceptedCmp20  +     0.35537657271506 *
2439552   +        AcceptedCmp30  +    -0.84577216347728 * AcceptedCmp40
2439553   +          +     1.73085566880686 * AcceptedCmp50  +     0.05800586053869 *
2439554   +        Complain0  +    -0.62505561129469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 * 
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 + 
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 * 
HigherEducationBinary0 ;
2439555   +   H1x1_3  = H1x1_3  +     0.54825581966403 * AcceptedCmp10
2439556   +          +     -0.0966204838125 * AcceptedCmp20  +    -1.31707923763053 *
2439557   +        AcceptedCmp30  +    -1.21021077486757 * AcceptedCmp40
2439558   +          +     3.29102250037389 * AcceptedCmp50  +    -0.16383687725206 *
2439559   +        Complain0  +     0.00651446514934 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 * 
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 + 
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 * 
HigherEducationBinary0 ;
2439560   +   H1x1_4  = H1x1_4  +    -1.18573650260336 * AcceptedCmp10
2439561   +          +    -1.73968979068234 * AcceptedCmp20  +    -1.31277698137778 *
2439562   +        AcceptedCmp30  +    -1.74346538593922 * AcceptedCmp40
2439563   +          +    -0.72543919818299 * AcceptedCmp50  +    -0.06328353200384 *
2439564   +        Complain0  +     0.74828735398796 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234 
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 + 
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 * 
HigherEducationBinary0 ;
2439565   +   H1x1_5  = H1x1_5  +    -0.19622185523754 * AcceptedCmp10
2439566   +          +     -0.4643498903813 * AcceptedCmp20  +     0.69293644934542 *
2439567   +        AcceptedCmp30  +     0.23077838801355 * AcceptedCmp40
2439568   +          +     0.53061813608476 * AcceptedCmp50  +    -0.56870999936869 *
2439569   +        Complain0  +      0.5917990310858 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 * 
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 + 
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 * 
HigherEducationBinary0 ;
2439570   +   H1x1_1  = H1x1_1  +     1.01422000032629 * Education2n_Cycle
2439571   +          +    -0.77619298826287 * EducationBasic  +     0.35633748974614 *
2439572   +        EducationGraduation  +     0.98491516107588 * EducationMaster
2439573   +          +    -0.27797737429678 * Marital_StatusDivorced
2439574   +          +    -0.08137635862327 * Marital_StatusMarried
2439575   +          +     0.06275411820495 * Marital_StatusSingle
2439576   +          +    -0.19979743343415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle + 
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588 
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 * 
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 * 
Marital_StatusTogether ;
2439577   +   H1x1_2  = H1x1_2  +    -0.66224206017124 * Education2n_Cycle
2439578   +          +     0.80729589186486 * EducationBasic  +     0.75931615755998 *
2439579   +        EducationGraduation  +    -0.05470462753112 * EducationMaster
2439580   +          +     0.05151426841441 * Marital_StatusDivorced
2439581   +          +     1.19165082030442 * Marital_StatusMarried
2439582   +          +    -1.08257080662611 * Marital_StatusSingle
2439583   +          +     0.13534863375625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle + 
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112 
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 * 
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 * 
Marital_StatusTogether ;
2439584   +   H1x1_3  = H1x1_3  +     0.20065577451105 * Education2n_Cycle
2439585   +          +    -0.14205714608311 * EducationBasic  +    -0.07077711368393 *
2439586   +        EducationGraduation  +     0.40262329710793 * EducationMaster
2439587   +          +      0.0238206459022 * Marital_StatusDivorced
2439588   +          +     -0.4653244204261 * Marital_StatusMarried
2439589   +          +     0.13051613619882 * Marital_StatusSingle
2439590   +          +    -0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle + 
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation + 
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced + 
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle + 
-0.35951366919755 * Marital_StatusTogether ;
2439591   +   H1x1_4  = H1x1_4  +     -0.8555672630555 * Education2n_Cycle
2439592   +          +     0.58439980233621 * EducationBasic  +     0.04784356342853 *
2439593   +        EducationGraduation  +    -0.79764992264249 * EducationMaster
2439594   +          +     -0.7449356409222 * Marital_StatusDivorced
2439595   +          +    -1.46604673521535 * Marital_StatusMarried
2439596   +          +     0.74484771688818 * Marital_StatusSingle
2439597   +          +    -1.91273009779071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle + 
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249 
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 * 
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 * 
Marital_StatusTogether ;
2439598   +   H1x1_5  = H1x1_5  +    -0.45561096683674 * Education2n_Cycle
2439599   +          +    -0.08389156101858 * EducationBasic  +    -1.24281299616343 *
2439600   +        EducationGraduation  +    -0.00999807517226 * EducationMaster
2439601   +          +    -3.68044980584423 * Marital_StatusDivorced
2439602   +          +     3.14587407902338 * Marital_StatusMarried
2439603   +          +    -2.66118132753024 * Marital_StatusSingle
2439604   +          +     3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle + 
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation + 
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced + 
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle + 
3.50991640149914 * Marital_StatusTogether ;
2439605   +   H1x1_1  =    -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
2439606   +   H1x1_2  =     0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
2439607   +   H1x1_3  =    -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
2439608   +   H1x1_4  =    -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
2439609   +   H1x1_5  =    -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
2439610   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2439611   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2439612   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2439613   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2439614   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2439615   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2439616   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2439617   +END;
MPRINT(EM_DIAGRAM):   END;
2439618   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2439619   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2439620   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2439621   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2439622   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2439623   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2439624   +END;
MPRINT(EM_DIAGRAM):   END;
2439625   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439626   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2439627   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439628   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2439629   +   H1x2_1  =     0.02206354442682 * S_AcceptedCmpTotal
2439630   +          +    -1.34753268833642 * S_Age  +    -2.08377331969695 * S_Frq
2439631   +          +    -1.39854535380539 * S_Income  +     2.13620611759545 *
2439632   +        S_Kidhome  +    -1.50515365217324 * S_Mnt  +     0.85499321862984 *
2439633   +        S_MntFishProducts  +    -1.17732452790345 * S_MntFruits
2439634   +          +     1.52355640622249 * S_MntGoldProds  +     1.31854239360457 *
2439635   +        S_MntMeatProducts  +    -0.03265851293389 * S_MntSweetProducts
2439636   +          +     2.18666242847435 * S_MntWines  +     0.08246249957908 *
2439637   +        S_MonthsAsCustomer  +    -1.06901902236609 * S_NumCatalogPurchases
2439638   +          +     0.89261880438741 * S_NumDealsPurchases
2439639   +          +    -1.61647413199892 * S_NumDistPurchases
2439640   +          +    -0.56304669045195 * S_NumStorePurchases
2439641   +          +      0.7766837080945 * S_NumWebPurchases
2439642   +          +     -2.2953497398902 * S_NumWebVisitsMonth
2439643   +          +    -3.34547809243199 * S_RFMstat  +     0.07311937799261 *
2439644   +        S_RMntFrq  +     -0.5786489917247 * S_Recency
2439645   +          +    -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 * 
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 * 
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts + 
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 * 
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines + 
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases + 
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases + 
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases + 
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 * 
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
2439646   +   H1x2_2  =      0.0341880757331 * S_AcceptedCmpTotal
2439647   +          +     0.72034771315738 * S_Age  +     0.64155966340389 * S_Frq
2439648   +          +    -1.06570008729492 * S_Income  +    -1.84532938869849 *
2439649   +        S_Kidhome  +     0.94433555965982 * S_Mnt  +     1.23831916074831 *
2439650   +        S_MntFishProducts  +     1.33415870886475 * S_MntFruits
2439651   +          +    -0.51253922893993 * S_MntGoldProds  +     0.02241594009025 *
2439652   +        S_MntMeatProducts  +     -1.2811169586741 * S_MntSweetProducts
2439653   +          +     1.96686773881953 * S_MntWines  +     1.44655944802715 *
2439654   +        S_MonthsAsCustomer  +    -1.18627316384798 * S_NumCatalogPurchases
2439655   +          +     1.02431289724643 * S_NumDealsPurchases
2439656   +          +    -0.90960173637405 * S_NumDistPurchases
2439657   +          +     1.24283490404772 * S_NumStorePurchases
2439658   +          +     1.23072413154592 * S_NumWebPurchases
2439659   +          +    -0.21533378473931 * S_NumWebVisitsMonth
2439660   +          +     1.26438704884008 * S_RFMstat  +      0.0014042871018 *
2439661   +        S_RMntFrq  +     0.32357651423135 * S_Recency
2439662   +          +    -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age 
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome + 
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 * 
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts + 
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 * 
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 * 
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 * 
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 * 
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq + 
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
2439663   +   H1x2_3  =    -0.57066024275015 * S_AcceptedCmpTotal
2439664   +          +     0.16615358153136 * S_Age  +    -0.60017461612499 * S_Frq
2439665   +          +    -0.21195793925019 * S_Income  +    -0.36049126996499 *
2439666   +        S_Kidhome  +     0.97458542661118 * S_Mnt  +     0.62279162661518 *
2439667   +        S_MntFishProducts  +    -0.44715765367363 * S_MntFruits
2439668   +          +     0.91519163455361 * S_MntGoldProds  +     1.07312113398768 *
2439669   +        S_MntMeatProducts  +    -1.61967017526055 * S_MntSweetProducts
2439670   +          +    -1.88327677412185 * S_MntWines  +    -1.67067768979245 *
2439671   +        S_MonthsAsCustomer  +    -0.64725516463464 * S_NumCatalogPurchases
2439672   +          +    -0.26249596122198 * S_NumDealsPurchases
2439673   +          +    -0.63328519804758 * S_NumDistPurchases
2439674   +          +    -0.88467503575886 * S_NumStorePurchases
2439675   +          +    -0.83120537310738 * S_NumWebPurchases
2439676   +          +     1.40072282351719 * S_NumWebVisitsMonth
2439677   +          +     1.42591300760984 * S_RFMstat  +     1.93593865100837 *
2439678   +        S_RMntFrq  +     -1.2794275536508 * S_Recency
2439679   +          +    -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 * 
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 * 
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts + 
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 * 
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines + 
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases + 
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases + 
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases + 
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 * 
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
2439680   +   H1x2_4  =     0.70159995537759 * S_AcceptedCmpTotal
2439681   +          +    -0.70199351793792 * S_Age  +     1.63573967285806 * S_Frq
2439682   +          +     -0.1930098634567 * S_Income  +    -0.43173926207337 *
2439683   +        S_Kidhome  +    -0.45239271926178 * S_Mnt  +    -0.14139816383874 *
2439684   +        S_MntFishProducts  +    -0.70568635660703 * S_MntFruits
2439685   +          +     1.68796268038024 * S_MntGoldProds  +     0.80481626355934 *
2439686   +        S_MntMeatProducts  +     0.29831384975096 * S_MntSweetProducts
2439687   +          +    -0.50792336172825 * S_MntWines  +     0.80425149159678 *
2439688   +        S_MonthsAsCustomer  +    -2.26171302044375 * S_NumCatalogPurchases
2439689   +          +     1.30167361451945 * S_NumDealsPurchases
2439690   +          +     1.45457613716235 * S_NumDistPurchases
2439691   +          +    -0.40226463685252 * S_NumStorePurchases
2439692   +          +     0.36369161683572 * S_NumWebPurchases
2439693   +          +    -2.65684851610403 * S_NumWebVisitsMonth
2439694   +          +    -1.14810413235545 * S_RFMstat  +       1.291857215261 *
2439695   +        S_RMntFrq  +     1.36572595403825 * S_Recency
2439696   +          +    -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 * 
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome 
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 * 
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts + 
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 * 
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 * 
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 * 
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 * 
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq + 
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
2439697   +   H1x2_5  =    -1.00456225444665 * S_AcceptedCmpTotal
2439698   +          +     0.19033874303798 * S_Age  +    -0.62578451616415 * S_Frq
2439699   +          +    -0.96647190269426 * S_Income  +     1.77002676974464 *
2439700   +        S_Kidhome  +    -0.53816249322166 * S_Mnt  +     0.21322270253871 *
2439701   +        S_MntFishProducts  +     0.84210241961105 * S_MntFruits
2439702   +          +     0.44153678515007 * S_MntGoldProds  +    -0.23120999196747 *
2439703   +        S_MntMeatProducts  +     0.62950730283125 * S_MntSweetProducts
2439704   +          +    -0.64043011108056 * S_MntWines  +    -2.74922907599662 *
2439705   +        S_MonthsAsCustomer  +     0.67939322758717 * S_NumCatalogPurchases
2439706   +          +    -0.54572162665338 * S_NumDealsPurchases
2439707   +          +      0.9607390449318 * S_NumDistPurchases
2439708   +          +    -0.03259470545754 * S_NumStorePurchases
2439709   +          +     0.19202241423412 * S_NumWebPurchases
2439710   +          +     0.61085831658456 * S_NumWebVisitsMonth
2439711   +          +    -0.08582160429243 * S_RFMstat  +     1.73862452808565 *
2439712   +        S_RMntFrq  +    -0.01216476188714 * S_Recency
2439713   +          +     -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 * 
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 * 
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts + 
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 * 
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines + 
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases + 
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases + 
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases + 
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 * 
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
2439714   +   H1x2_1  = H1x2_1  +     0.83453601566539 * AcceptedCmp10
2439715   +          +     0.59109136511077 * AcceptedCmp20  +     -0.9669340701943 *
2439716   +        AcceptedCmp30  +    -2.31468262956126 * AcceptedCmp40
2439717   +          +    -0.76277791850069 * AcceptedCmp50  +     0.30895289981412 *
2439718   +        Complain0  +       0.147233855837 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 * 
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 + 
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 * 
HigherEducationBinary0 ;
2439719   +   H1x2_2  = H1x2_2  +     0.42789425545567 * AcceptedCmp10
2439720   +          +     0.08505833889085 * AcceptedCmp20  +    -1.15112188313855 *
2439721   +        AcceptedCmp30  +    -1.24362486486214 * AcceptedCmp40
2439722   +          +     0.04131419116048 * AcceptedCmp50  +    -0.45255799355317 *
2439723   +        Complain0  +    -0.32616423192953 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 * 
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 + 
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 * 
HigherEducationBinary0 ;
2439724   +   H1x2_3  = H1x2_3  +    -0.03136360497649 * AcceptedCmp10
2439725   +          +     0.33867713207886 * AcceptedCmp20  +     0.05809342990544 *
2439726   +        AcceptedCmp30  +    -0.06416815079894 * AcceptedCmp40
2439727   +          +     1.14617960682421 * AcceptedCmp50  +    -0.82461320336041 *
2439728   +        Complain0  +     0.58944444655621 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 * 
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 + 
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 * 
HigherEducationBinary0 ;
2439729   +   H1x2_4  = H1x2_4  +    -1.12705500616438 * AcceptedCmp10
2439730   +          +      0.0487863004734 * AcceptedCmp20  +     1.30229008593765 *
2439731   +        AcceptedCmp30  +      0.1726718549662 * AcceptedCmp40
2439732   +          +     0.68443569845295 * AcceptedCmp50  +     2.39733248962228 *
2439733   +        Complain0  +      -0.620937291929 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 * 
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 + 
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 * 
HigherEducationBinary0 ;
2439734   +   H1x2_5  = H1x2_5  +     1.42400460803453 * AcceptedCmp10
2439735   +          +    -1.22361480936625 * AcceptedCmp20  +     1.31090186367202 *
2439736   +        AcceptedCmp30  +    -1.40343404818254 * AcceptedCmp40
2439737   +          +    -0.57377230862494 * AcceptedCmp50  +     0.58622740778295 *
2439738   +        Complain0  +    -0.83222074319962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 * 
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 + 
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 * 
HigherEducationBinary0 ;
2439739   +   H1x2_1  = H1x2_1  +     1.56508379719546 * Education2n_Cycle
2439740   +          +     0.52302987210661 * EducationBasic  +     -0.0570045326497 *
2439741   +        EducationGraduation  +    -0.01838790774804 * EducationMaster
2439742   +          +    -2.32430245081383 * Marital_StatusDivorced
2439743   +          +    -0.09815511356796 * Marital_StatusMarried
2439744   +          +     0.13075504294551 * Marital_StatusSingle
2439745   +          +     -0.0278875765201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle + 
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804 
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 * 
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 * 
Marital_StatusTogether ;
2439746   +   H1x2_2  = H1x2_2  +    -0.85592920992847 * Education2n_Cycle
2439747   +          +     0.93272618259957 * EducationBasic  +     0.48987674771079 *
2439748   +        EducationGraduation  +    -1.12454002820451 * EducationMaster
2439749   +          +    -0.65574603869224 * Marital_StatusDivorced
2439750   +          +     1.54672472575294 * Marital_StatusMarried
2439751   +          +    -1.59817602340208 * Marital_StatusSingle
2439752   +          +     1.94381954546813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle + 
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451 
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 * 
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 * 
Marital_StatusTogether ;
2439753   +   H1x2_3  = H1x2_3  +     0.37093371596523 * Education2n_Cycle
2439754   +          +    -2.05531065359129 * EducationBasic  +     1.16090743585078 *
2439755   +        EducationGraduation  +     0.87547303889444 * EducationMaster
2439756   +          +    -0.50911604604781 * Marital_StatusDivorced
2439757   +          +     0.30403066135719 * Marital_StatusMarried
2439758   +          +      0.1026950879545 * Marital_StatusSingle
2439759   +          +     0.01000166524405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle + 
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444 
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 * 
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 * 
Marital_StatusTogether ;
2439760   +   H1x2_4  = H1x2_4  +     1.28509086202466 * Education2n_Cycle
2439761   +          +     0.07860157688162 * EducationBasic  +     0.24607672351689 *
2439762   +        EducationGraduation  +    -0.06009602645566 * EducationMaster
2439763   +          +     1.07371507133318 * Marital_StatusDivorced
2439764   +          +    -0.07097334129051 * Marital_StatusMarried
2439765   +          +    -0.48339718568621 * Marital_StatusSingle
2439766   +          +    -0.08900780355835 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle + 
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566 
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 * 
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 * 
Marital_StatusTogether ;
2439767   +   H1x2_5  = H1x2_5  +    -1.08109633810919 * Education2n_Cycle
2439768   +          +    -0.54966585100103 * EducationBasic  +      0.5388683065169 *
2439769   +        EducationGraduation  +     0.46960055830119 * EducationMaster
2439770   +          +     1.04342893515504 * Marital_StatusDivorced
2439771   +          +     1.16171312085032 * Marital_StatusMarried
2439772   +          +    -0.30201646939913 * Marital_StatusSingle
2439773   +          +     1.84122645884771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle + 
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119 
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 * 
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 * 
Marital_StatusTogether ;
2439774   +   H1x2_1  =     1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
2439775   +   H1x2_2  =    -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
2439776   +   H1x2_3  =    -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
2439777   +   H1x2_4  =     0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
2439778   +   H1x2_5  =     -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
2439779   +END;
MPRINT(EM_DIAGRAM):   END;
2439780   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2439781   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2439782   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2439783   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2439784   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2439785   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2439786   +END;
MPRINT(EM_DIAGRAM):   END;
2439787   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439788   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2439789   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439790   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2439791   +   H1x3_1  =     0.04411772880581 * S_AcceptedCmpTotal
2439792   +          +    -1.62725197326682 * S_Age  +    -1.99668213406033 * S_Frq
2439793   +          +     -1.2265241921112 * S_Income  +     1.99702869958035 *
2439794   +        S_Kidhome  +    -1.46762539068512 * S_Mnt  +     0.97784534044189 *
2439795   +        S_MntFishProducts  +    -1.07945265688497 * S_MntFruits
2439796   +          +     2.09306294956674 * S_MntGoldProds  +     1.46219664114361 *
2439797   +        S_MntMeatProducts  +     0.10961158671991 * S_MntSweetProducts
2439798   +          +     2.03040669273977 * S_MntWines  +     0.16536646017211 *
2439799   +        S_MonthsAsCustomer  +    -0.88077951545076 * S_NumCatalogPurchases
2439800   +          +     1.32256781010645 * S_NumDealsPurchases
2439801   +          +    -1.43015438973619 * S_NumDistPurchases
2439802   +          +    -0.63489289584421 * S_NumStorePurchases
2439803   +          +     0.90508699686841 * S_NumWebPurchases
2439804   +          +    -2.24234858061014 * S_NumWebVisitsMonth
2439805   +          +     -2.9988027991146 * S_RFMstat  +     0.35987461993699 *
2439806   +        S_RMntFrq  +    -1.09317668626142 * S_Recency
2439807   +          +    -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 * 
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome 
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 * 
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts + 
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 * 
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 * 
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 * 
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 * 
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq + 
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
2439808   +   H1x3_2  =     0.10522923391314 * S_AcceptedCmpTotal
2439809   +          +     0.68417479453112 * S_Age  +     0.46966162186743 * S_Frq
2439810   +          +    -1.21537535753115 * S_Income  +    -1.87423294109672 *
2439811   +        S_Kidhome  +     0.76913864731495 * S_Mnt  +     1.08535778796502 *
2439812   +        S_MntFishProducts  +     1.27743864099826 * S_MntFruits
2439813   +          +     -0.3186089651882 * S_MntGoldProds  +    -0.00224333051647 *
2439814   +        S_MntMeatProducts  +    -1.28169616734092 * S_MntSweetProducts
2439815   +          +     1.67350500234032 * S_MntWines  +     1.09584504562467 *
2439816   +        S_MonthsAsCustomer  +    -1.45467876727494 * S_NumCatalogPurchases
2439817   +          +     0.85965187264096 * S_NumDealsPurchases
2439818   +          +    -1.15239933286756 * S_NumDistPurchases
2439819   +          +     1.20800889102387 * S_NumStorePurchases
2439820   +          +     1.08790389130242 * S_NumWebPurchases
2439821   +          +    -0.13665551161149 * S_NumWebVisitsMonth
2439822   +          +     1.02103499612659 * S_RFMstat  +    -0.12980097143044 *
2439823   +        S_RMntFrq  +     0.65854311654256 * S_Recency
2439824   +          +    -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 * 
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 * 
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826 
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts + 
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 * 
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 * 
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 * 
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 * 
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq + 
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
2439825   +   H1x3_3  =    -0.72575004293074 * S_AcceptedCmpTotal
2439826   +          +     0.34932839743259 * S_Age  +     -0.2673460618328 * S_Frq
2439827   +          +     0.25743187687481 * S_Income  +    -0.02172890929346 *
2439828   +        S_Kidhome  +     1.21785656626837 * S_Mnt  +     0.37454359336223 *
2439829   +        S_MntFishProducts  +    -0.32600053706408 * S_MntFruits
2439830   +          +     0.57807148940534 * S_MntGoldProds  +     1.14736546512366 *
2439831   +        S_MntMeatProducts  +    -1.41517082393978 * S_MntSweetProducts
2439832   +          +    -1.44899595080061 * S_MntWines  +    -1.45520867126531 *
2439833   +        S_MonthsAsCustomer  +    -0.33372174099196 * S_NumCatalogPurchases
2439834   +          +     -0.5767607129654 * S_NumDealsPurchases
2439835   +          +     -0.2643921429796 * S_NumDistPurchases
2439836   +          +    -0.67417489911206 * S_NumStorePurchases
2439837   +          +    -0.51423877684891 * S_NumWebPurchases
2439838   +          +     1.40328299605176 * S_NumWebVisitsMonth
2439839   +          +     1.35588787174957 * S_RFMstat  +     1.98416436137119 *
2439840   +        S_RMntFrq  +     -0.8447362450681 * S_Recency
2439841   +          +    -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 * 
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome 
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 * 
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts + 
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 * 
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 * 
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 * 
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 * 
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq + 
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
2439842   +   H1x3_4  =     0.05745684959388 * S_AcceptedCmpTotal
2439843   +          +    -0.71077680161454 * S_Age  +      1.4854566142375 * S_Frq
2439844   +          +    -0.32870416928843 * S_Income  +    -0.24944295149087 *
2439845   +        S_Kidhome  +     -0.8312409740431 * S_Mnt  +    -0.09638646505384 *
2439846   +        S_MntFishProducts  +    -0.86550491354678 * S_MntFruits
2439847   +          +     1.46902858697296 * S_MntGoldProds  +      0.3661164136841 *
2439848   +        S_MntMeatProducts  +     0.43108270077708 * S_MntSweetProducts
2439849   +          +    -0.87140466249616 * S_MntWines  +     0.17511224898094 *
2439850   +        S_MonthsAsCustomer  +    -2.66256923117027 * S_NumCatalogPurchases
2439851   +          +      1.2821617657076 * S_NumDealsPurchases
2439852   +          +     1.26584115202735 * S_NumDistPurchases
2439853   +          +    -0.46597664211833 * S_NumStorePurchases
2439854   +          +     0.45652363472866 * S_NumWebPurchases
2439855   +          +    -2.66296112021252 * S_NumWebVisitsMonth
2439856   +          +    -0.86670667018974 * S_RFMstat  +     0.60866041131732 *
2439857   +        S_RMntFrq  +     1.31886754707923 * S_Recency
2439858   +          +    -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 * 
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome 
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 * 
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts + 
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 * 
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 * 
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 * 
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 * 
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq + 
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
2439859   +   H1x3_5  =    -0.66850525418144 * S_AcceptedCmpTotal
2439860   +          +     0.14331320698516 * S_Age  +    -0.82708146094779 * S_Frq
2439861   +          +    -0.95718847240937 * S_Income  +     1.37375648833049 *
2439862   +        S_Kidhome  +    -0.48314397401233 * S_Mnt  +     0.07047324834759 *
2439863   +        S_MntFishProducts  +     0.86114312801139 * S_MntFruits
2439864   +          +     0.54573348379533 * S_MntGoldProds  +    -0.05966372249273 *
2439865   +        S_MntMeatProducts  +     0.47275063848217 * S_MntSweetProducts
2439866   +          +    -0.62962007155261 * S_MntWines  +    -2.38081462831488 *
2439867   +        S_MonthsAsCustomer  +     0.56594272689824 * S_NumCatalogPurchases
2439868   +          +    -0.85162564171681 * S_NumDealsPurchases
2439869   +          +     0.64631099667221 * S_NumDistPurchases
2439870   +          +    -0.03081963858636 * S_NumStorePurchases
2439871   +          +    -0.24124717624664 * S_NumWebPurchases
2439872   +          +     0.56425980772372 * S_NumWebVisitsMonth
2439873   +          +    -0.32254616624678 * S_RFMstat  +     1.84875225899832 *
2439874   +        S_RMntFrq  +     0.08133312388911 * S_Recency
2439875   +          +    -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 * 
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 * 
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts + 
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 * 
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines + 
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases + 
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases + 
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases + 
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 * 
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
2439876   +   H1x3_1  = H1x3_1  +     1.03487942320068 * AcceptedCmp10
2439877   +          +     0.77723443135875 * AcceptedCmp20  +    -1.04686858569959 *
2439878   +        AcceptedCmp30  +    -1.87852311800194 * AcceptedCmp40
2439879   +          +    -0.69838759011672 * AcceptedCmp50  +     0.50242045854463 *
2439880   +        Complain0  +    -0.13339808164255 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 * 
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 + 
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 * 
HigherEducationBinary0 ;
2439881   +   H1x3_2  = H1x3_2  +     0.39887299789564 * AcceptedCmp10
2439882   +          +     0.12293700562648 * AcceptedCmp20  +    -1.41656670681309 *
2439883   +        AcceptedCmp30  +    -1.04607557362847 * AcceptedCmp40
2439884   +          +     0.02824649030864 * AcceptedCmp50  +    -0.46581865837196 *
2439885   +        Complain0  +    -0.45913631308543 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 * 
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 + 
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 * 
HigherEducationBinary0 ;
2439886   +   H1x3_3  = H1x3_3  +     0.20672868292414 * AcceptedCmp10
2439887   +          +     0.52082182457868 * AcceptedCmp20  +     0.54911826263592 *
2439888   +        AcceptedCmp30  +    -0.02400616289922 * AcceptedCmp40
2439889   +          +     1.22209744911863 * AcceptedCmp50  +    -0.68243413694538 *
2439890   +        Complain0  +     0.15620895311704 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 * 
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 + 
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 * 
HigherEducationBinary0 ;
2439891   +   H1x3_4  = H1x3_4  +    -0.88269820758187 * AcceptedCmp10
2439892   +          +    -0.19276892535938 * AcceptedCmp20  +     1.26789056018511 *
2439893   +        AcceptedCmp30  +     0.04396979158385 * AcceptedCmp40
2439894   +          +     0.54194186871284 * AcceptedCmp50  +     2.07766091697967 *
2439895   +        Complain0  +    -0.43514178858246 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938 
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 + 
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 * 
HigherEducationBinary0 ;
2439896   +   H1x3_5  = H1x3_5  +     1.04303179873707 * AcceptedCmp10
2439897   +          +    -1.29742389809739 * AcceptedCmp20  +     1.21708533617895 *
2439898   +        AcceptedCmp30  +    -1.47807634614974 * AcceptedCmp40
2439899   +          +     -0.7694244559597 * AcceptedCmp50  +     0.51798162453723 *
2439900   +        Complain0  +    -0.95513113905832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 * 
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 + 
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 * 
HigherEducationBinary0 ;
2439901   +   H1x3_1  = H1x3_1  +     1.27822716215014 * Education2n_Cycle
2439902   +          +     0.45900505383383 * EducationBasic  +    -0.35822992758656 *
2439903   +        EducationGraduation  +     0.05949934527868 * EducationMaster
2439904   +          +    -2.49973437075558 * Marital_StatusDivorced
2439905   +          +    -0.18076948182574 * Marital_StatusMarried
2439906   +          +     0.13498525495231 * Marital_StatusSingle
2439907   +          +    -0.02365465636052 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle + 
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868 
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 * 
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 * 
Marital_StatusTogether ;
2439908   +   H1x3_2  = H1x3_2  +    -1.14981446246051 * Education2n_Cycle
2439909   +          +     0.68006996858541 * EducationBasic  +    -0.06493857044709 *
2439910   +        EducationGraduation  +    -1.22462805502453 * EducationMaster
2439911   +          +       -0.59463732835 * Marital_StatusDivorced
2439912   +          +     1.37741332427598 * Marital_StatusMarried
2439913   +          +     -1.5833455713231 * Marital_StatusSingle
2439914   +          +     1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle + 
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation + 
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced + 
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle + 
1.79205360628448 * Marital_StatusTogether ;
2439915   +   H1x3_3  = H1x3_3  +     0.17779609626753 * Education2n_Cycle
2439916   +          +    -2.22704675950779 * EducationBasic  +     1.30292325944162 *
2439917   +        EducationGraduation  +     0.68083131423474 * EducationMaster
2439918   +          +    -0.44569556289443 * Marital_StatusDivorced
2439919   +          +     0.29918053103557 * Marital_StatusMarried
2439920   +          +    -0.10337314064224 * Marital_StatusSingle
2439921   +          +     0.04054221993299 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle + 
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474 
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 * 
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 * 
Marital_StatusTogether ;
2439922   +   H1x3_4  = H1x3_4  +     1.16412985277542 * Education2n_Cycle
2439923   +          +     0.18806330813344 * EducationBasic  +     0.00212145829045 *
2439924   +        EducationGraduation  +     0.00087354662697 * EducationMaster
2439925   +          +     1.13881957277462 * Marital_StatusDivorced
2439926   +          +    -0.35849807146313 * Marital_StatusMarried
2439927   +          +    -0.22168731316885 * Marital_StatusSingle
2439928   +          +    -0.22672306263461 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle + 
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697 
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 * 
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 * 
Marital_StatusTogether ;
2439929   +   H1x3_5  = H1x3_5  +    -1.25195599938207 * Education2n_Cycle
2439930   +          +    -0.60946428681789 * EducationBasic  +     0.39993500009227 *
2439931   +        EducationGraduation  +     0.43730905987249 * EducationMaster
2439932   +          +     1.10774969923269 * Marital_StatusDivorced
2439933   +          +     1.08409594073043 * Marital_StatusMarried
2439934   +          +    -0.33145048007894 * Marital_StatusSingle
2439935   +          +     1.68703837664761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle + 
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249 
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 * 
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 * 
Marital_StatusTogether ;
2439936   +   H1x3_1  =     1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
2439937   +   H1x3_2  =    -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
2439938   +   H1x3_3  =    -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
2439939   +   H1x3_4  =     0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
2439940   +   H1x3_5  =    -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
2439941   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2439942   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2439943   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2439944   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2439945   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 * 
H1x3_1 ;
2439946   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2439947   +   IF H1x3_2  < _REC_EPS AND H1x3_2  > - _REC_EPS THEN
2439948   +   H1x3_2  = H1x3_2  * H1x3_2 ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 * 
H1x3_2 ;
2439949   +   ELSE H1x3_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
2439950   +   IF H1x3_3  < _REC_EPS AND H1x3_3  > - _REC_EPS THEN
2439951   +   H1x3_3  = H1x3_3  * H1x3_3 ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 * 
H1x3_3 ;
2439952   +   ELSE H1x3_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
2439953   +   IF H1x3_4  < _REC_EPS AND H1x3_4  > - _REC_EPS THEN
2439954   +   H1x3_4  = H1x3_4  * H1x3_4 ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 * 
H1x3_4 ;
2439955   +   ELSE H1x3_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
2439956   +   IF H1x3_5  < _REC_EPS AND H1x3_5  > - _REC_EPS THEN
2439957   +   H1x3_5  = H1x3_5  * H1x3_5 ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 * 
H1x3_5 ;
2439958   +   ELSE H1x3_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
2439959   +END;
MPRINT(EM_DIAGRAM):   END;
2439960   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2439961   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2439962   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2439963   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2439964   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2439965   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2439966   +END;
MPRINT(EM_DIAGRAM):   END;
2439967   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439968   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2439969   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439970   +
2439971   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2439972   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2439973   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2439974   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2439975   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2439976   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2439977   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2439978   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2439979   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2439980   +end;
MPRINT(EM_DIAGRAM):   end;
2439981   +else do;
MPRINT(EM_DIAGRAM):   else do;
2439982   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2439983   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2439984   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2439985   +   end;
MPRINT(EM_DIAGRAM):   end;
2439986   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2439987   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2439988   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2439989   +   end;
MPRINT(EM_DIAGRAM):   end;
2439990   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2439991   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2439992   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2439993   +   end;
MPRINT(EM_DIAGRAM):   end;
2439994   +end;
MPRINT(EM_DIAGRAM):   end;
2439995   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2439996   +   P_DepVar1  =     12.3694111963696 * H1x1_1  +     -9.1014019341077 * H1x1_2
2439997   +          +    -14.9093780045901 * H1x1_3  +     25.4505756686259 * H1x1_4
2439998   +          +    -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 + 
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
2439999   +   P_DepVar1  = P_DepVar1  +     -0.2373753683635 * H1x2_1
2440000   +          +    -0.03661175538589 * H1x2_2  +     0.29534813812803 * H1x2_3
2440001   +          +     0.11908166898588 * H1x2_4  +      -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 * 
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
2440002   +   P_DepVar1  = P_DepVar1  +    -0.00276620815201 * H1x3_1
2440003   +          +     0.00487849269566 * H1x3_2  +     0.01323887261394 * H1x3_3
2440004   +          +     -0.0271389925801 * H1x3_4  +     0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 * 
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
2440005   +   P_DepVar1  =      4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
2440006   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2440007   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2440008   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2440009   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2440010   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2440011   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2440012   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2440013   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2440014   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2440015   +END;
MPRINT(EM_DIAGRAM):   END;
2440016   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2440017   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2440018   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2440019   +END;
MPRINT(EM_DIAGRAM):   END;
2440020   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2440021   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2440022   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2440023   +END;
MPRINT(EM_DIAGRAM):   END;
2440024   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2440025   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2440026   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2440027   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2440028   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2440029   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2440030   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2440031   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440032   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2440033   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440034   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2440035   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2440036   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2440037   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2440038   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2440039   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2440040   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2440041   +END;
MPRINT(EM_DIAGRAM):   END;
2440042   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2440043   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2440044   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2440045   +drop
2440046   +H1x1_1
2440047   +H1x1_2
2440048   +H1x1_3
2440049   +H1x1_4
2440050   +H1x1_5
2440051   +H1x2_1
2440052   +H1x2_2
2440053   +H1x2_3
2440054   +H1x2_4
2440055   +H1x2_5
2440056   +H1x3_1
2440057   +H1x3_2
2440058   +H1x3_3
2440059   +H1x3_4
2440060   +H1x3_5
2440061   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4 
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
2440062   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2440063   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2440064   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2440065   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2440066   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2440067   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2440068   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2440069   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2440070   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2440071   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2440072   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2440073   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2440074   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2440075   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2440076   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2440077   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2440078   +* Ensmbl45: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Average Posteriors of 5 models;
2440079   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2440080   +P_DepVar1 = (
2440081   +AutoNeural9_P_DepVar1 +
2440082   +AutoNeural11_P_DepVar1 +
2440083   +AutoNeural12_P_DepVar1 +
2440084   +AutoNeural7_P_DepVar1 +
2440085   +AutoNeural10_P_DepVar1
2440086   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural9_P_DepVar1 + AutoNeural11_P_DepVar1 + 
AutoNeural12_P_DepVar1 + AutoNeural7_P_DepVar1 + AutoNeural10_P_DepVar1 )/5;
2440087   +P_DepVar0 = (
2440088   +AutoNeural9_P_DepVar0 +
2440089   +AutoNeural11_P_DepVar0 +
2440090   +AutoNeural12_P_DepVar0 +
2440091   +AutoNeural7_P_DepVar0 +
2440092   +AutoNeural10_P_DepVar0
2440093   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural9_P_DepVar0 + AutoNeural11_P_DepVar0 + 
AutoNeural12_P_DepVar0 + AutoNeural7_P_DepVar0 + AutoNeural10_P_DepVar0 )/5;
2440094   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2440095   +* Ensmbl45: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Computing Classification Vars;
2440096   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2440097   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2440098   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2440099   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2440100   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2440101   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2440102   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2440103   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2440104   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2440105   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2440106   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2440107   +end;
MPRINT(EM_DIAGRAM):   end;
2440108   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2440109   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2440110   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2440111   +end;
MPRINT(EM_DIAGRAM):   end;
2440112   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2440113   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2440114   +* Ensmbl45: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Producing Unformatted variable;
2440115   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2440116   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2440117   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2440118   +else
2440119   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2440120   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2440121   +* Ensmbl45: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Computing _WARN_ Variable;
2440122   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2440123   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2440124   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2440125   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2440126   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2440126  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2440127   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2440127  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2440128   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2440128  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2440129   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2440129  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2440130   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2440130  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2440131   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2440131  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2440132   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2440132  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2440133   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2440133  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2440134   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2440134  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2440135   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2440135  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2440136   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2440136  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2440137   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2440137  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2440138   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2440138  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2440139   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2440139  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2440140   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2440140  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2440141   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2440141  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2440142   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2440142  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2440143   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2440143  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2440144   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2440144  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2440145   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2440145  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2440146   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2440147   +* Ensmbl45: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Computing Residual Vars;
2440148   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2440149   +if
2440150   +F_DepVar NE '1'
2440151   +AND F_DepVar NE '0'
2440152   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2440153   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2440154   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2440155   +end;
MPRINT(EM_DIAGRAM):   end;
2440156   +else do;
MPRINT(EM_DIAGRAM):   else do;
2440157   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2440158   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2440159   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2440160   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2440161   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2440162   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2440163   +END;
MPRINT(EM_DIAGRAM):   END;
2440164   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2440165    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL45_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL9_VALIDATE.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2440166    quit;
2440167    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl45_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl45_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl45_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl45_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl45_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
2440227    filename _pref
2440227  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
2440228    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2440229    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
2440230   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2440231   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2440232   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2440233   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2440234   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2440235   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2440236   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2440237   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2440238   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2440239   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2440240   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2440241   +LENGTH _WARN_ $4
2440242   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2440243   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2440244   +
2440245   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2440246   +
2440247   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2440248   +
2440249   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2440250   +
2440251   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2440252   +
2440253   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2440254   +
2440255   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2440256   +
2440257   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2440258   +
2440259   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2440260   +
2440261   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2440262   +
2440263   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2440264   +
2440265   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2440266   +
2440267   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2440268   +
2440269   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2440270   +
2440271   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2440272   +
2440273   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2440274   +
2440275   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2440276   +
2440277   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2440278   +
2440279   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2440280   +
2440281   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2440282   +
2440283   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2440284   +
2440285   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2440286   +
2440287   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2440288   +
2440289   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2440290   +
2440291   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2440292   +
2440293   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2440294   +
2440295   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2440296   +
2440297   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2440298   +
2440299   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2440300   +
2440301   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2440302   +
2440303   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2440304   +
2440305   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2440306   +
2440307   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2440308   +
2440309   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2440310   +
2440311   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2440312   +
2440313   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2440314   +
2440315   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2440316   +
2440317   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2440318   +
2440319   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2440320   +
2440321   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2440322   +
2440323   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2440324   +
2440325   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2440326   +
2440327   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2440328   +
2440329   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2440330   +
2440331   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2440332   +
2440333   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2440334   +
2440335   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2440336   +
2440337   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2440338   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2440339   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2440340   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2440341   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2440342   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440343   +end;
MPRINT(EM_DIAGRAM):   end;
2440344   +else do;
MPRINT(EM_DIAGRAM):   else do;
2440345   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2440346   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2440347   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2440348   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2440349   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2440350   +   end;
MPRINT(EM_DIAGRAM):   end;
2440351   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2440352   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2440353   +   end;
MPRINT(EM_DIAGRAM):   end;
2440354   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2440355   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2440356   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2440357   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440358   +   end;
MPRINT(EM_DIAGRAM):   end;
2440359   +end;
MPRINT(EM_DIAGRAM):   end;
2440360   +
2440361   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2440362   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2440363   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2440364   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2440365   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2440366   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440367   +end;
MPRINT(EM_DIAGRAM):   end;
2440368   +else do;
MPRINT(EM_DIAGRAM):   else do;
2440369   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2440370   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2440371   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2440372   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2440373   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2440374   +   end;
MPRINT(EM_DIAGRAM):   end;
2440375   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2440376   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2440377   +   end;
MPRINT(EM_DIAGRAM):   end;
2440378   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2440379   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2440380   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2440381   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440382   +   end;
MPRINT(EM_DIAGRAM):   end;
2440383   +end;
MPRINT(EM_DIAGRAM):   end;
2440384   +
2440385   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2440386   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2440387   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2440388   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2440389   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2440390   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440391   +end;
MPRINT(EM_DIAGRAM):   end;
2440392   +else do;
MPRINT(EM_DIAGRAM):   else do;
2440393   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2440394   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2440395   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2440396   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2440397   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2440398   +   end;
MPRINT(EM_DIAGRAM):   end;
2440399   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2440400   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2440401   +   end;
MPRINT(EM_DIAGRAM):   end;
2440402   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2440403   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2440404   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2440405   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440406   +   end;
MPRINT(EM_DIAGRAM):   end;
2440407   +end;
MPRINT(EM_DIAGRAM):   end;
2440408   +
2440409   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2440410   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2440411   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2440412   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2440413   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2440414   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440415   +end;
MPRINT(EM_DIAGRAM):   end;
2440416   +else do;
MPRINT(EM_DIAGRAM):   else do;
2440417   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2440418   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2440419   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2440420   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2440421   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2440422   +   end;
MPRINT(EM_DIAGRAM):   end;
2440423   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2440424   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2440425   +   end;
MPRINT(EM_DIAGRAM):   end;
2440426   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2440427   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2440428   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2440429   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440430   +   end;
MPRINT(EM_DIAGRAM):   end;
2440431   +end;
MPRINT(EM_DIAGRAM):   end;
2440432   +
2440433   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2440434   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2440435   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2440436   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2440437   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2440438   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440439   +end;
MPRINT(EM_DIAGRAM):   end;
2440440   +else do;
MPRINT(EM_DIAGRAM):   else do;
2440441   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2440442   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2440443   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2440444   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2440445   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2440446   +   end;
MPRINT(EM_DIAGRAM):   end;
2440447   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2440448   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2440449   +   end;
MPRINT(EM_DIAGRAM):   end;
2440450   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2440451   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2440452   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2440453   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440454   +   end;
MPRINT(EM_DIAGRAM):   end;
2440455   +end;
MPRINT(EM_DIAGRAM):   end;
2440456   +
2440457   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2440458   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2440459   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2440460   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2440461   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2440462   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440463   +end;
MPRINT(EM_DIAGRAM):   end;
2440464   +else do;
MPRINT(EM_DIAGRAM):   else do;
2440465   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2440466   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2440467   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2440468   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2440469   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2440470   +   end;
MPRINT(EM_DIAGRAM):   end;
2440471   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2440472   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2440473   +   end;
MPRINT(EM_DIAGRAM):   end;
2440474   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2440475   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2440476   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2440477   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440478   +   end;
MPRINT(EM_DIAGRAM):   end;
2440479   +end;
MPRINT(EM_DIAGRAM):   end;
2440480   +
2440481   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2440482   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2440483   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2440484   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2440485   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2440486   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440487   +end;
MPRINT(EM_DIAGRAM):   end;
2440488   +else do;
MPRINT(EM_DIAGRAM):   else do;
2440489   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2440490   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2440491   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2440492   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2440493   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2440494   +   end;
MPRINT(EM_DIAGRAM):   end;
2440495   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2440496   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2440497   +   end;
MPRINT(EM_DIAGRAM):   end;
2440498   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2440499   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2440500   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2440501   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440502   +   end;
MPRINT(EM_DIAGRAM):   end;
2440503   +end;
MPRINT(EM_DIAGRAM):   end;
2440504   +
2440505   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2440506   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2440507   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2440508   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2440509   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2440510   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2440511   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2440512   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2440513   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2440514   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2440515   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2440516   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2440517   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2440518   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440519   +end;
MPRINT(EM_DIAGRAM):   end;
2440520   +else do;
MPRINT(EM_DIAGRAM):   else do;
2440521   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2440522   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2440523   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2440524   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2440525   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2440526   +   end;
MPRINT(EM_DIAGRAM):   end;
2440527   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2440528   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2440529   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2440530   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2440531   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2440532   +   end;
MPRINT(EM_DIAGRAM):   end;
2440533   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2440534   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2440535   +   end;
MPRINT(EM_DIAGRAM):   end;
2440536   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2440537   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2440538   +   end;
MPRINT(EM_DIAGRAM):   end;
2440539   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2440540   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2440541   +   end;
MPRINT(EM_DIAGRAM):   end;
2440542   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2440543   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2440544   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2440545   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2440546   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2440547   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2440548   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440549   +   end;
MPRINT(EM_DIAGRAM):   end;
2440550   +end;
MPRINT(EM_DIAGRAM):   end;
2440551   +
2440552   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2440553   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2440554   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2440555   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2440556   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2440557   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2440558   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2440559   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2440560   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2440561   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2440562   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2440563   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2440564   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2440565   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2440566   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440567   +end;
MPRINT(EM_DIAGRAM):   end;
2440568   +else do;
MPRINT(EM_DIAGRAM):   else do;
2440569   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2440570   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2440571   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2440572   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2440573   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2440574   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2440575   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2440576   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2440577   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2440578   +         end;
MPRINT(EM_DIAGRAM):   end;
2440579   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2440580   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2440581   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2440582   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2440583   +            end;
MPRINT(EM_DIAGRAM):   end;
2440584   +         end;
MPRINT(EM_DIAGRAM):   end;
2440585   +      end;
MPRINT(EM_DIAGRAM):   end;
2440586   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2440587   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2440588   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2440589   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2440590   +         end;
MPRINT(EM_DIAGRAM):   end;
2440591   +      end;
MPRINT(EM_DIAGRAM):   end;
2440592   +   end;
MPRINT(EM_DIAGRAM):   end;
2440593   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2440594   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2440595   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2440596   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2440597   +      end;
MPRINT(EM_DIAGRAM):   end;
2440598   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2440599   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2440600   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2440601   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2440602   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2440603   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2440604   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2440605   +         end;
MPRINT(EM_DIAGRAM):   end;
2440606   +      end;
MPRINT(EM_DIAGRAM):   end;
2440607   +   end;
MPRINT(EM_DIAGRAM):   end;
2440608   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2440609   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2440610   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2440611   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2440612   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2440613   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2440614   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440615   +   end;
MPRINT(EM_DIAGRAM):   end;
2440616   +end;
MPRINT(EM_DIAGRAM):   end;
2440617   +
2440618   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440619   +*** Checking missing input Interval
2440620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2440621   +
2440622   +IF NMISS(
2440623   +   AcceptedCmpTotal ,
2440624   +   Age ,
2440625   +   Frq ,
2440626   +   Income ,
2440627   +   Kidhome ,
2440628   +   Mnt ,
2440629   +   MntFishProducts ,
2440630   +   MntFruits ,
2440631   +   MntGoldProds ,
2440632   +   MntMeatProducts ,
2440633   +   MntSweetProducts ,
2440634   +   MntWines ,
2440635   +   MonthsAsCustomer ,
2440636   +   NumCatalogPurchases ,
2440637   +   NumDealsPurchases ,
2440638   +   NumDistPurchases ,
2440639   +   NumStorePurchases ,
2440640   +   NumWebPurchases ,
2440641   +   NumWebVisitsMonth ,
2440642   +   RFMstat ,
2440643   +   RMntFrq ,
2440644   +   Recency ,
2440645   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2440646   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2440647   +
2440648   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440649   +END;
MPRINT(EM_DIAGRAM):   END;
2440650   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440651   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2440652   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440653   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2440654   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2440655   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2440656   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2440657   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2440658   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2440659   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2440660   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2440661   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2440662   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2440663   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2440664   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2440665   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2440666   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2440667   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2440668   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2440669   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2440670   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2440671   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2440672   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2440673   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2440674   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2440675   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2440676   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2440677   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2440678   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2440679   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2440680   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2440681   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2440682   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2440683   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2440684   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2440685   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2440686   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2440687   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2440688   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2440689   +END;
MPRINT(EM_DIAGRAM):   END;
2440690   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2440691   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2440692   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2440693   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2440694   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2440695   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2440696   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2440697   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2440698   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2440699   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2440700   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2440701   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2440702   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2440703   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2440704   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2440705   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2440706   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2440707   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2440708   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2440709   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2440710   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2440711   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2440712   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2440713   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2440714   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2440715   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2440716   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2440717   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2440718   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2440719   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2440720   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2440721   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2440722   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2440723   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2440724   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2440725   +   ELSE S_NumCatalogPurchases
2440726   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2440727   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2440728   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2440729   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2440730   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2440731   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2440732   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2440733   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2440734   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2440735   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2440736   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2440737   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2440738   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2440739   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2440740   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2440741   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2440742   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2440743   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2440744   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2440745   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2440746   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2440747   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2440748   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2440749   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2440750   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2440751   +END;
MPRINT(EM_DIAGRAM):   END;
2440752   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440753   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2440754   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440755   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440756   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2440757   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440758   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440759   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2440760   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440761   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2440762   +   H1x1_1  =     -0.7790327388408 * S_AcceptedCmpTotal
2440763   +          +     0.32193739579856 * S_Age  +    -0.43875684835169 * S_Frq
2440764   +          +     0.13013240455049 * S_Income  +    -0.74127716462976 *
2440765   +        S_Kidhome  +    -0.86416600561474 * S_Mnt  +     0.94819226754442 *
2440766   +        S_MntFishProducts  +     0.15895119408799 * S_MntFruits
2440767   +          +     0.03658391935071 * S_MntGoldProds  +    -3.75052142292398 *
2440768   +        S_MntMeatProducts  +    -0.22192220883538 * S_MntSweetProducts
2440769   +          +     0.80534656860633 * S_MntWines  +     0.16144794241259 *
2440770   +        S_MonthsAsCustomer  +    -1.53040364803625 * S_NumCatalogPurchases
2440771   +          +    -1.09856598010056 * S_NumDealsPurchases
2440772   +          +    -0.10571850472514 * S_NumDistPurchases
2440773   +          +     0.11898210654227 * S_NumStorePurchases
2440774   +          +      0.5984912060231 * S_NumWebPurchases
2440775   +          +     0.78592531126942 * S_NumWebVisitsMonth
2440776   +          +    -0.50004686386273 * S_RFMstat  +     0.40804018151571 *
2440777   +        S_RMntFrq  +    -0.94753260620308 * S_Recency
2440778   +          +    -0.49604118088328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.7790327388408 * S_AcceptedCmpTotal + 0.32193739579856 * 
S_Age + -0.43875684835169 * S_Frq + 0.13013240455049 * S_Income + -0.74127716462976 * 
S_Kidhome + -0.86416600561474 * S_Mnt + 0.94819226754442 * S_MntFishProducts + 
0.15895119408799 * S_MntFruits + 0.03658391935071 * S_MntGoldProds + -3.75052142292398 * 
S_MntMeatProducts + -0.22192220883538 * S_MntSweetProducts + 0.80534656860633 * S_MntWines + 
0.16144794241259 * S_MonthsAsCustomer + -1.53040364803625 * S_NumCatalogPurchases + 
-1.09856598010056 * S_NumDealsPurchases + -0.10571850472514 * S_NumDistPurchases + 
0.11898210654227 * S_NumStorePurchases + 0.5984912060231 * S_NumWebPurchases + 
0.78592531126942 * S_NumWebVisitsMonth + -0.50004686386273 * S_RFMstat + 0.40804018151571 * 
S_RMntFrq + -0.94753260620308 * S_Recency + -0.49604118088328 * S_Teenhome ;
2440779   +   H1x1_2  =    -0.22226926295489 * S_AcceptedCmpTotal
2440780   +          +     0.08523894206962 * S_Age  +    -0.13010378102207 * S_Frq
2440781   +          +    -0.61810906923536 * S_Income  +     0.26583917928045 *
2440782   +        S_Kidhome  +     0.57213479787981 * S_Mnt  +    -0.58077613046442 *
2440783   +        S_MntFishProducts  +      0.1530301493776 * S_MntFruits
2440784   +          +      0.4586167382631 * S_MntGoldProds  +     1.40179051129147 *
2440785   +        S_MntMeatProducts  +      0.0231413770297 * S_MntSweetProducts
2440786   +          +    -0.08483682112771 * S_MntWines  +     0.22891006905064 *
2440787   +        S_MonthsAsCustomer  +    -1.21866617917435 * S_NumCatalogPurchases
2440788   +          +    -0.84042044250624 * S_NumDealsPurchases
2440789   +          +    -0.10246261015488 * S_NumDistPurchases
2440790   +          +     0.06886149708824 * S_NumStorePurchases
2440791   +          +     0.63156910388199 * S_NumWebPurchases
2440792   +          +    -1.33032061845311 * S_NumWebVisitsMonth
2440793   +          +     0.51240040684649 * S_RFMstat  +     0.77604047421115 *
2440794   +        S_RMntFrq  +     1.27964260226958 * S_Recency
2440795   +          +     0.12022076571016 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22226926295489 * S_AcceptedCmpTotal + 0.08523894206962 * 
S_Age + -0.13010378102207 * S_Frq + -0.61810906923536 * S_Income + 0.26583917928045 * 
S_Kidhome + 0.57213479787981 * S_Mnt + -0.58077613046442 * S_MntFishProducts + 0.1530301493776 
* S_MntFruits + 0.4586167382631 * S_MntGoldProds + 1.40179051129147 * S_MntMeatProducts + 
0.0231413770297 * S_MntSweetProducts + -0.08483682112771 * S_MntWines + 0.22891006905064 * 
S_MonthsAsCustomer + -1.21866617917435 * S_NumCatalogPurchases + -0.84042044250624 * 
S_NumDealsPurchases + -0.10246261015488 * S_NumDistPurchases + 0.06886149708824 * 
S_NumStorePurchases + 0.63156910388199 * S_NumWebPurchases + -1.33032061845311 * 
S_NumWebVisitsMonth + 0.51240040684649 * S_RFMstat + 0.77604047421115 * S_RMntFrq + 
1.27964260226958 * S_Recency + 0.12022076571016 * S_Teenhome ;
2440796   +   H1x1_3  =     1.19879097976404 * S_AcceptedCmpTotal
2440797   +          +     0.14973951999399 * S_Age  +    -0.90630756390399 * S_Frq
2440798   +          +     0.64934241358682 * S_Income  +    -0.66249532206724 *
2440799   +        S_Kidhome  +     0.54195490560813 * S_Mnt  +    -0.58497380565417 *
2440800   +        S_MntFishProducts  +     0.12409202833851 * S_MntFruits
2440801   +          +     0.44480061346561 * S_MntGoldProds  +     3.27513201048136 *
2440802   +        S_MntMeatProducts  +     -0.1256493054184 * S_MntSweetProducts
2440803   +          +    -0.56080685022301 * S_MntWines  +     0.08633469383177 *
2440804   +        S_MonthsAsCustomer  +     0.45482673505107 * S_NumCatalogPurchases
2440805   +          +     0.45393712455366 * S_NumDealsPurchases
2440806   +          +    -0.25292198053552 * S_NumDistPurchases
2440807   +          +    -1.35582215064749 * S_NumStorePurchases
2440808   +          +    -0.83132202302639 * S_NumWebPurchases
2440809   +          +     1.87116225272678 * S_NumWebVisitsMonth
2440810   +          +     0.39564162951481 * S_RFMstat  +    -1.08810221295144 *
2440811   +        S_RMntFrq  +    -2.07407859514648 * S_Recency
2440812   +          +     -0.6849099475723 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.19879097976404 * S_AcceptedCmpTotal + 0.14973951999399 * 
S_Age + -0.90630756390399 * S_Frq + 0.64934241358682 * S_Income + -0.66249532206724 * 
S_Kidhome + 0.54195490560813 * S_Mnt + -0.58497380565417 * S_MntFishProducts + 
0.12409202833851 * S_MntFruits + 0.44480061346561 * S_MntGoldProds + 3.27513201048136 * 
S_MntMeatProducts + -0.1256493054184 * S_MntSweetProducts + -0.56080685022301 * S_MntWines + 
0.08633469383177 * S_MonthsAsCustomer + 0.45482673505107 * S_NumCatalogPurchases + 
0.45393712455366 * S_NumDealsPurchases + -0.25292198053552 * S_NumDistPurchases + 
-1.35582215064749 * S_NumStorePurchases + -0.83132202302639 * S_NumWebPurchases + 
1.87116225272678 * S_NumWebVisitsMonth + 0.39564162951481 * S_RFMstat + -1.08810221295144 * 
S_RMntFrq + -2.07407859514648 * S_Recency + -0.6849099475723 * S_Teenhome ;
2440813   +   H1x1_1  = H1x1_1  +     0.81075414854045 * AcceptedCmp10
2440814   +          +    -0.33403710427327 * AcceptedCmp20  +    -0.62242387435975 *
2440815   +        AcceptedCmp30  +    -0.89439410552439 * AcceptedCmp40
2440816   +          +     0.77335976756467 * AcceptedCmp50  +    -0.08825784612626 *
2440817   +        Complain0  +      0.3404395194267 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.81075414854045 * AcceptedCmp10 + -0.33403710427327 * 
AcceptedCmp20 + -0.62242387435975 * AcceptedCmp30 + -0.89439410552439 * AcceptedCmp40 + 
0.77335976756467 * AcceptedCmp50 + -0.08825784612626 * Complain0 + 0.3404395194267 * 
HigherEducationBinary0 ;
2440818   +   H1x1_2  = H1x1_2  +    -0.16741179709566 * AcceptedCmp10
2440819   +          +    -0.53751033948061 * AcceptedCmp20  +     0.80285496945068 *
2440820   +        AcceptedCmp30  +     0.39379279966091 * AcceptedCmp40
2440821   +          +    -1.40366799083237 * AcceptedCmp50  +     -0.4265482924132 *
2440822   +        Complain0  +     0.37272103593422 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.16741179709566 * AcceptedCmp10 + -0.53751033948061 
* AcceptedCmp20 + 0.80285496945068 * AcceptedCmp30 + 0.39379279966091 * AcceptedCmp40 + 
-1.40366799083237 * AcceptedCmp50 + -0.4265482924132 * Complain0 + 0.37272103593422 * 
HigherEducationBinary0 ;
2440823   +   H1x1_3  = H1x1_3  +    -0.19417657656326 * AcceptedCmp10
2440824   +          +    -0.06547746897317 * AcceptedCmp20  +     0.21980739904513 *
2440825   +        AcceptedCmp30  +    -0.19452210052301 * AcceptedCmp40
2440826   +          +    -2.02403282278574 * AcceptedCmp50  +    -0.18250261144524 *
2440827   +        Complain0  +     0.34168103813312 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.19417657656326 * AcceptedCmp10 + -0.06547746897317 
* AcceptedCmp20 + 0.21980739904513 * AcceptedCmp30 + -0.19452210052301 * AcceptedCmp40 + 
-2.02403282278574 * AcceptedCmp50 + -0.18250261144524 * Complain0 + 0.34168103813312 * 
HigherEducationBinary0 ;
2440828   +   H1x1_1  = H1x1_1  +    -0.03956789621002 * Education2n_Cycle
2440829   +          +    -0.38372374638888 * EducationBasic  +     -0.4178927802606 *
2440830   +        EducationGraduation  +    -0.61278625923288 * EducationMaster
2440831   +          +      0.4695898100094 * Marital_StatusDivorced
2440832   +          +    -0.52137742289262 * Marital_StatusMarried
2440833   +          +    -0.32382086914936 * Marital_StatusSingle
2440834   +          +    -0.66163012672344 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03956789621002 * Education2n_Cycle + 
-0.38372374638888 * EducationBasic + -0.4178927802606 * EducationGraduation + 
-0.61278625923288 * EducationMaster + 0.4695898100094 * Marital_StatusDivorced + 
-0.52137742289262 * Marital_StatusMarried + -0.32382086914936 * Marital_StatusSingle + 
-0.66163012672344 * Marital_StatusTogether ;
2440835   +   H1x1_2  = H1x1_2  +    -0.25832319223886 * Education2n_Cycle
2440836   +          +     0.05602860720141 * EducationBasic  +    -0.86282852488383 *
2440837   +        EducationGraduation  +     0.18916317018059 * EducationMaster
2440838   +          +    -1.04858218653238 * Marital_StatusDivorced
2440839   +          +     2.41098335093061 * Marital_StatusMarried
2440840   +          +    -1.94696044861334 * Marital_StatusSingle
2440841   +          +     2.16021514856437 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.25832319223886 * Education2n_Cycle + 
0.05602860720141 * EducationBasic + -0.86282852488383 * EducationGraduation + 0.18916317018059 
* EducationMaster + -1.04858218653238 * Marital_StatusDivorced + 2.41098335093061 * 
Marital_StatusMarried + -1.94696044861334 * Marital_StatusSingle + 2.16021514856437 * 
Marital_StatusTogether ;
2440842   +   H1x1_3  = H1x1_3  +    -0.05351872242069 * Education2n_Cycle
2440843   +          +    -0.56850783552841 * EducationBasic  +    -0.14880907057098 *
2440844   +        EducationGraduation  +    -0.32850851013319 * EducationMaster
2440845   +          +     0.42964114177062 * Marital_StatusDivorced
2440846   +          +    -0.38607635605816 * Marital_StatusMarried
2440847   +          +    -0.02157405407852 * Marital_StatusSingle
2440848   +          +    -0.59995619744527 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.05351872242069 * Education2n_Cycle + 
-0.56850783552841 * EducationBasic + -0.14880907057098 * EducationGraduation + 
-0.32850851013319 * EducationMaster + 0.42964114177062 * Marital_StatusDivorced + 
-0.38607635605816 * Marital_StatusMarried + -0.02157405407852 * Marital_StatusSingle + 
-0.59995619744527 * Marital_StatusTogether ;
2440849   +   H1x1_1  =    -0.53239337390307 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53239337390307 + H1x1_1 ;
2440850   +   H1x1_2  =     0.99428677123948 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.99428677123948 + H1x1_2 ;
2440851   +   H1x1_3  =       1.835877082844 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.835877082844 + H1x1_3 ;
2440852   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2440853   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2440854   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2440855   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2440856   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2440857   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2440858   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2440859   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2440860   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2440861   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2440862   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2440863   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2440864   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2440865   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2440866   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2440867   +END;
MPRINT(EM_DIAGRAM):   END;
2440868   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2440869   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2440870   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2440871   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2440872   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2440873   +END;
MPRINT(EM_DIAGRAM):   END;
2440874   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440875   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2440876   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440877   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2440878   +   P_DepVar1  =    -3.41904253756965 * H1x1_1  +    -7.11204151517034 * H1x1_2
2440879   +          +     10.7909509395818 * H1x1_3  +    -2.20432578352426 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.41904253756965 * H1x1_1 + -7.11204151517034 * H1x1_2 + 
10.7909509395818 * H1x1_3 + -2.20432578352426 * H1x1_4 ;
2440880   +   P_DepVar1  =    -3.66951098257489 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.66951098257489 + P_DepVar1 ;
2440881   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2440882   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2440883   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2440884   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2440885   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2440886   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2440887   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2440888   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2440889   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2440890   +END;
MPRINT(EM_DIAGRAM):   END;
2440891   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2440892   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2440893   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2440894   +END;
MPRINT(EM_DIAGRAM):   END;
2440895   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2440896   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2440897   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2440898   +END;
MPRINT(EM_DIAGRAM):   END;
2440899   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440900   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2440901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440902   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2440903   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2440904   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2440905   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2440906   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2440907   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2440908   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2440909   +END;
MPRINT(EM_DIAGRAM):   END;
2440910   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2440911   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2440912   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2440913   +drop
2440914   +H1x1_1
2440915   +H1x1_2
2440916   +H1x1_3
2440917   +H1x1_4
2440918   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 ;
2440919   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2440920    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2440921    quit;
2440922    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2440923    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2440924    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2440925    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
2440926    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2440927    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440928    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2440929    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440930    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2440931    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME 
CREATOR);
2440932    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440933    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440934    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2440935    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2440936    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2440937    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440938    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
2440939    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2440940    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2440941    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440942    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440943    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2440944    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2440945    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440946    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440947    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2440948    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2440948  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1479 rows and 5 columns.

2440949    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440950    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2440951    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1479 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1479 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2440952    filename _pref
2440952  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2440953    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2440954    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2440955   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2440956   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2440957   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2440958   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2440959   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2440960   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2440961    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2440962    quit;
2440963    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2440964    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2440965    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2440966    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2440967    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2440968    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440969    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2440970    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440971    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440972    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2440973    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440974    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2440975    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2440976    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2440977    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2440978    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440979    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2440980    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2440981    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2440982    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440983    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440984    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2440985    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2440986    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440987    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440988    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2440989    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2440989  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2440990    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2440991    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2440992    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1483 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440993    filename _pref
2440993  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2440994    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2440995    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2440996   +
2440997   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2440998   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2440998  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2440999   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2441000   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2441001   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2441002   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2441003   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2441004    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2441005    quit;
2441006    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2441007    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2441008    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2441009    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2441010    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2441011    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2441012    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2441013    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2441014    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2441015    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2441016    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2441017    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2441018    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2441019    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2441020    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2441021    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2441022    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2441023    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2441024    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2441025    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2441026    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2441027    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2441028    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2441029    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2441030    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2441031    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2441032    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2441032  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2441033    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2441034    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2441035    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1522 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2441036    filename _pref
2441036  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2441037    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2441038    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2441039   +
2441040   +
2441041   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2441042   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2441043   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2441044   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2441045   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2441046   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2441047   +
2441048   +
2441049   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2441050   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2441051   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2441052   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2441053   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2441054   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2441055   +
2441056   +
2441057   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2441058   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2441059   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2441060   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2441061   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2441062   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2441063   +
2441064   +
2441065   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2441066   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2441067   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2441068   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2441069   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2441070   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2441071   +
2441072   +
2441073   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2441074   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2441075   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2441076   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2441077   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2441078   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2441079   +
2441080   +
2441081   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2441082   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2441083   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2441084   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2441085   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2441086   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2441087   +
2441088   +
2441089   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2441090   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2441091   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2441092   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2441093   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2441094   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2441095   +
2441096   +
2441097   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2441098   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2441099   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2441100   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2441101   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2441102   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2441103   +if
2441104   +_FILTERNORM1 not in ( '.')
2441105   + and
2441106   +_FILTERNORM2 not in ( '.')
2441107   + and
2441108   +_FILTERNORM3 not in ( '.')
2441109   + and
2441110   +_FILTERNORM4 not in ( '.')
2441111   + and
2441112   +_FILTERNORM5 not in ( '.')
2441113   + and
2441114   +_FILTERNORM6 not in ( '.')
2441115   + and
2441116   +_FILTERNORM7 not in ( ' ')
2441117   + and
2441118   +_FILTERNORM8 not in ( ' ')
2441119   +and
2441120   +( Dt_Customer ne .)
2441121   +and ( Income ne . and (Income<=107000))
2441122   +and ( Kidhome ne .)
2441123   +and ( MntFishProducts ne .)
2441124   +and ( MntFruits ne .)
2441125   +and ( MntGoldProds ne .)
2441126   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2441127   +and ( MntSweetProducts ne .)
2441128   +and ( MntWines ne .)
2441129   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2441130   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2441131   +and ( NumStorePurchases ne .)
2441132   +and ( NumWebPurchases ne .)
2441133   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2441134   +and ( Recency ne .)
2441135   +and ( Teenhome ne .)
2441136   +and ( Year_Birth ne .)
2441137   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2441138   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2441139   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2441140   +end;
MPRINT(EM_DIAGRAM):   end;
2441141   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2441142   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2441143    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2441144    quit;
2441145    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2441146    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2441147    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2441148    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2441149    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2441150    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2441151    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2441152    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2441153    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2441154    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2441155    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2441156    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2441157    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2441158    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2441159    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2441160    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2441161    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2441162    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2441163    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2441164    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2441165    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2441166    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2441167    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2441168    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2441169    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2441170    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2441171    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2441171  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2441172    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2441173    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2441174    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1588 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2441175    %macro varDept(fcmpdata=,id=);
2441176    %global nobs&id scoreFlag&id;
2441177    %let scoreFlag&id = 0;
2441178    %if &id=1 or ^&fcmpStart %then %do;
2441179    proc sort data=&fcmpdata out=_temp&id nodupkey;
2441180    by NAME;
2441181    where id=&id and LHS in( %let j=1;
2441182    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2441183    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2441184    "&var" %let j = %eval(&j+1);
2441185    %end;
2441186    );
2441187    run;
2441188    %let dsid = %sysfunc(open(_temp&id));
2441189    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2441190    %let dsid = %sysfunc(close(&dsid));
2441191    %if &&nobs&id %then %do;
2441192    %let scoreFlag&id = 1;
2441193    %let fcmpStart = 1;
2441194    %end;
2441195    %else %let fcmpStart = 0;
2441196    %end;
2441197    %else %do;
2441198    proc sort data=&fcmpdata out=_tempid;
2441199    where id=&id;
2441200    by LHS;
2441201    run;
2441202    %let dsid = %sysfunc(open(_tempid));
2441203    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2441204    %let dsid = %sysfunc(close(&dsid));
2441205    %if ^&&nobs&id %then %do;
2441206    proc datasets lib=work nolist;
2441207    delete _tempid;
2441208    run;
2441209    quit;
2441210    %end;
2441211    %else %do;
2441212    data _tempAll;
2441213    set %let j=%eval(&id-1);
2441214    %do x=1 %to &j;
2441215    %if &&nobs&x %then %do;
2441216    _temp&x %end;
2441217    %end;
2441218    ;
2441219    run;
2441220    proc sql;
2441221    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2441221  ! work._tempid p2 where p.name=p2.lhs;
2441222    quit;
2441223    data _temp&id;
2441224    set _temp&id;
2441225    where LHS ne '' and NAME ne '' and Node ne '';
2441226    run;
2441227    proc datasets lib=work nolist;
2441228    delete _tempAll;
2441229    run;
2441230    %let dsid = %sysfunc(open(_temp&id));
2441231    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2441232    %let dsid = %sysfunc(close(&dsid));
2441233    %if ^&&nobs&id %then %do;
2441234    proc datasets lib=work nolist;
2441235    delete _temp&id;
2441236    run;
2441237    quit;
2441238    %end;
2441239    %else %do;
2441240    %let scoreFlag&id = 1;
2441241    data _temp&id;
2441242    set _temp&id;
2441243    where LHS ne NAME and node ne '';
2441244    run;
2441245    %let dsid = %sysfunc(open(_temp&id));
2441246    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2441247    %let dsid = %sysfunc(close(&dsid));
2441248    %if ^&&nobs&id %then %do;
2441249    proc datasets lib=work nolist;
2441250    delete _temp&id;
2441251    run;
2441252    quit;
2441253    %end;
2441254    %else %do;
2441255    proc sort data=_temp&id nodupkey;
2441256    by LHS NAME;
2441257    run;
2441258    %end;
2441259    %end;
2441260    %end;
2441261    %end;
2441262    %mend varDept;
2441263    %macro optCode(outdata=fcmpdata);
2441264    %global fcmpStart;
2441265    %let fcmpStart = 0;
2441266    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2441267    %let NumNodes=9;
2441268    %do k=1 %to &NumNodes;
2441269    %vardept(fcmpdata=&outdata, id=&k);
2441270    %end;
2441271    %mend optCode;
2441272    %optcode(outData=EMWS8.Ensmbl45_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2441273    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2441274    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2441275    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2441276    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2441277    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2441278    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2441279    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2441280    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2441281    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2441282    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2441282  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2441283    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2441284    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2441285    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2441286    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2441287    filename _pref
2441287  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
2441288    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2441289    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
2441290   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2441291   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2441292   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2441293   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2441294   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2441295   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2441296   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2441297   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2441298   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2441299   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2441300   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2441301   +LENGTH _WARN_ $4
2441302   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2441303   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2441304   +
2441305   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2441306   +
2441307   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2441308   +
2441309   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2441310   +
2441311   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2441312   +
2441313   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2441314   +
2441315   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2441316   +
2441317   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2441318   +
2441319   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2441320   +
2441321   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2441322   +
2441323   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2441324   +
2441325   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2441326   +
2441327   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2441328   +
2441329   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2441330   +
2441331   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2441332   +
2441333   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2441334   +
2441335   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2441336   +
2441337   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2441338   +
2441339   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2441340   +
2441341   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2441342   +
2441343   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2441344   +
2441345   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2441346   +
2441347   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2441348   +
2441349   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2441350   +
2441351   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2441352   +
2441353   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2441354   +
2441355   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2441356   +
2441357   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2441358   +
2441359   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2441360   +
2441361   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2441362   +
2441363   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2441364   +
2441365   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2441366   +
2441367   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2441368   +
2441369   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2441370   +
2441371   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2441372   +
2441373   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2441374   +
2441375   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2441376   +
2441377   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2441378   +
2441379   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2441380   +
2441381   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2441382   +
2441383   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2441384   +
2441385   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2441386   +
2441387   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2441388   +
2441389   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2441390   +
2441391   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2441392   +
2441393   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2441394   +
2441395   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2441396   +
2441397   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2441398   +
2441399   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2441400   +
2441401   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2441402   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2441403   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2441404   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2441405   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2441406   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441407   +end;
MPRINT(EM_DIAGRAM):   end;
2441408   +else do;
MPRINT(EM_DIAGRAM):   else do;
2441409   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2441410   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2441411   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2441412   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2441413   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2441414   +   end;
MPRINT(EM_DIAGRAM):   end;
2441415   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2441416   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2441417   +   end;
MPRINT(EM_DIAGRAM):   end;
2441418   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2441419   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2441420   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2441421   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441422   +   end;
MPRINT(EM_DIAGRAM):   end;
2441423   +end;
MPRINT(EM_DIAGRAM):   end;
2441424   +
2441425   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2441426   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2441427   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2441428   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2441429   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2441430   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441431   +end;
MPRINT(EM_DIAGRAM):   end;
2441432   +else do;
MPRINT(EM_DIAGRAM):   else do;
2441433   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2441434   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2441435   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2441436   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2441437   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2441438   +   end;
MPRINT(EM_DIAGRAM):   end;
2441439   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2441440   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2441441   +   end;
MPRINT(EM_DIAGRAM):   end;
2441442   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2441443   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2441444   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2441445   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441446   +   end;
MPRINT(EM_DIAGRAM):   end;
2441447   +end;
MPRINT(EM_DIAGRAM):   end;
2441448   +
2441449   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2441450   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2441451   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2441452   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2441453   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2441454   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441455   +end;
MPRINT(EM_DIAGRAM):   end;
2441456   +else do;
MPRINT(EM_DIAGRAM):   else do;
2441457   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2441458   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2441459   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2441460   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2441461   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2441462   +   end;
MPRINT(EM_DIAGRAM):   end;
2441463   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2441464   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2441465   +   end;
MPRINT(EM_DIAGRAM):   end;
2441466   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2441467   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2441468   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2441469   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441470   +   end;
MPRINT(EM_DIAGRAM):   end;
2441471   +end;
MPRINT(EM_DIAGRAM):   end;
2441472   +
2441473   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2441474   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2441475   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2441476   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2441477   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2441478   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441479   +end;
MPRINT(EM_DIAGRAM):   end;
2441480   +else do;
MPRINT(EM_DIAGRAM):   else do;
2441481   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2441482   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2441483   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2441484   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2441485   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2441486   +   end;
MPRINT(EM_DIAGRAM):   end;
2441487   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2441488   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2441489   +   end;
MPRINT(EM_DIAGRAM):   end;
2441490   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2441491   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2441492   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2441493   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441494   +   end;
MPRINT(EM_DIAGRAM):   end;
2441495   +end;
MPRINT(EM_DIAGRAM):   end;
2441496   +
2441497   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2441498   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2441499   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2441500   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2441501   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2441502   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441503   +end;
MPRINT(EM_DIAGRAM):   end;
2441504   +else do;
MPRINT(EM_DIAGRAM):   else do;
2441505   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2441506   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2441507   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2441508   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2441509   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2441510   +   end;
MPRINT(EM_DIAGRAM):   end;
2441511   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2441512   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2441513   +   end;
MPRINT(EM_DIAGRAM):   end;
2441514   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2441515   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2441516   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2441517   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441518   +   end;
MPRINT(EM_DIAGRAM):   end;
2441519   +end;
MPRINT(EM_DIAGRAM):   end;
2441520   +
2441521   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2441522   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2441523   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2441524   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2441525   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2441526   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441527   +end;
MPRINT(EM_DIAGRAM):   end;
2441528   +else do;
MPRINT(EM_DIAGRAM):   else do;
2441529   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2441530   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2441531   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2441532   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2441533   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2441534   +   end;
MPRINT(EM_DIAGRAM):   end;
2441535   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2441536   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2441537   +   end;
MPRINT(EM_DIAGRAM):   end;
2441538   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2441539   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2441540   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2441541   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441542   +   end;
MPRINT(EM_DIAGRAM):   end;
2441543   +end;
MPRINT(EM_DIAGRAM):   end;
2441544   +
2441545   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2441546   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2441547   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2441548   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2441549   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2441550   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441551   +end;
MPRINT(EM_DIAGRAM):   end;
2441552   +else do;
MPRINT(EM_DIAGRAM):   else do;
2441553   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2441554   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2441555   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2441556   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2441557   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2441558   +   end;
MPRINT(EM_DIAGRAM):   end;
2441559   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2441560   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2441561   +   end;
MPRINT(EM_DIAGRAM):   end;
2441562   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2441563   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2441564   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2441565   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441566   +   end;
MPRINT(EM_DIAGRAM):   end;
2441567   +end;
MPRINT(EM_DIAGRAM):   end;
2441568   +
2441569   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2441570   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2441571   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2441572   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2441573   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2441574   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2441575   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2441576   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2441577   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2441578   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2441579   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2441580   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2441581   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2441582   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441583   +end;
MPRINT(EM_DIAGRAM):   end;
2441584   +else do;
MPRINT(EM_DIAGRAM):   else do;
2441585   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2441586   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2441587   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2441588   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2441589   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2441590   +   end;
MPRINT(EM_DIAGRAM):   end;
2441591   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2441592   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2441593   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2441594   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2441595   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2441596   +   end;
MPRINT(EM_DIAGRAM):   end;
2441597   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2441598   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2441599   +   end;
MPRINT(EM_DIAGRAM):   end;
2441600   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2441601   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2441602   +   end;
MPRINT(EM_DIAGRAM):   end;
2441603   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2441604   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2441605   +   end;
MPRINT(EM_DIAGRAM):   end;
2441606   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2441607   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2441608   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2441609   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2441610   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2441611   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2441612   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441613   +   end;
MPRINT(EM_DIAGRAM):   end;
2441614   +end;
MPRINT(EM_DIAGRAM):   end;
2441615   +
2441616   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2441617   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2441618   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2441619   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2441620   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2441621   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2441622   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2441623   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2441624   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2441625   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2441626   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2441627   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2441628   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2441629   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2441630   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441631   +end;
MPRINT(EM_DIAGRAM):   end;
2441632   +else do;
MPRINT(EM_DIAGRAM):   else do;
2441633   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2441634   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2441635   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2441636   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2441637   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2441638   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2441639   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2441640   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2441641   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2441642   +         end;
MPRINT(EM_DIAGRAM):   end;
2441643   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2441644   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2441645   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2441646   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2441647   +            end;
MPRINT(EM_DIAGRAM):   end;
2441648   +         end;
MPRINT(EM_DIAGRAM):   end;
2441649   +      end;
MPRINT(EM_DIAGRAM):   end;
2441650   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2441651   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2441652   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2441653   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2441654   +         end;
MPRINT(EM_DIAGRAM):   end;
2441655   +      end;
MPRINT(EM_DIAGRAM):   end;
2441656   +   end;
MPRINT(EM_DIAGRAM):   end;
2441657   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2441658   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2441659   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2441660   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2441661   +      end;
MPRINT(EM_DIAGRAM):   end;
2441662   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2441663   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2441664   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2441665   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2441666   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2441667   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2441668   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2441669   +         end;
MPRINT(EM_DIAGRAM):   end;
2441670   +      end;
MPRINT(EM_DIAGRAM):   end;
2441671   +   end;
MPRINT(EM_DIAGRAM):   end;
2441672   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2441673   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2441674   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2441675   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2441676   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2441677   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2441678   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441679   +   end;
MPRINT(EM_DIAGRAM):   end;
2441680   +end;
MPRINT(EM_DIAGRAM):   end;
2441681   +
2441682   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2441683   +*** Checking missing input Interval
2441684   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2441685   +
2441686   +IF NMISS(
2441687   +   AcceptedCmpTotal ,
2441688   +   Age ,
2441689   +   Frq ,
2441690   +   Income ,
2441691   +   Kidhome ,
2441692   +   Mnt ,
2441693   +   MntFishProducts ,
2441694   +   MntFruits ,
2441695   +   MntGoldProds ,
2441696   +   MntMeatProducts ,
2441697   +   MntSweetProducts ,
2441698   +   MntWines ,
2441699   +   MonthsAsCustomer ,
2441700   +   NumCatalogPurchases ,
2441701   +   NumDealsPurchases ,
2441702   +   NumDistPurchases ,
2441703   +   NumStorePurchases ,
2441704   +   NumWebPurchases ,
2441705   +   NumWebVisitsMonth ,
2441706   +   RFMstat ,
2441707   +   RMntFrq ,
2441708   +   Recency ,
2441709   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2441710   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2441711   +
2441712   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441713   +END;
MPRINT(EM_DIAGRAM):   END;
2441714   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2441715   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2441716   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2441717   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2441718   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2441719   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2441720   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2441721   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2441722   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2441723   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2441724   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2441725   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2441726   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2441727   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2441728   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2441729   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2441730   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2441731   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2441732   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2441733   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2441734   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2441735   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2441736   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2441737   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2441738   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2441739   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2441740   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2441741   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2441742   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2441743   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2441744   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2441745   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2441746   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2441747   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2441748   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2441749   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2441750   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2441751   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2441752   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2441753   +END;
MPRINT(EM_DIAGRAM):   END;
2441754   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2441755   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2441756   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2441757   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2441758   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2441759   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2441760   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2441761   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2441762   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2441763   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2441764   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2441765   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2441766   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2441767   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2441768   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2441769   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2441770   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2441771   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2441772   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2441773   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2441774   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2441775   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2441776   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2441777   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2441778   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2441779   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2441780   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2441781   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2441782   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2441783   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2441784   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2441785   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2441786   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2441787   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2441788   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2441789   +   ELSE S_NumCatalogPurchases
2441790   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2441791   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2441792   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2441793   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2441794   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2441795   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2441796   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2441797   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2441798   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2441799   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2441800   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2441801   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2441802   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2441803   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2441804   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2441805   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2441806   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2441807   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2441808   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2441809   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2441810   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2441811   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2441812   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2441813   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2441814   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2441815   +END;
MPRINT(EM_DIAGRAM):   END;
2441816   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2441817   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2441818   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2441819   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2441820   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2441821   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2441822   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2441823   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2441824   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2441825   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2441826   +   H1x1_1  =     0.08465472857554 * S_AcceptedCmpTotal
2441827   +          +     0.23104131534618 * S_Age  +     0.27646175976509 * S_Frq
2441828   +          +     0.45938840681203 * S_Income  +     0.09814900830666 *
2441829   +        S_Kidhome  +     0.23249430277518 * S_Mnt  +    -0.51905493105122 *
2441830   +        S_MntFishProducts  +    -0.07604226481078 * S_MntFruits
2441831   +          +     0.10100393832157 * S_MntGoldProds  +     1.56159221713858 *
2441832   +        S_MntMeatProducts  +     0.12166799382268 * S_MntSweetProducts
2441833   +          +    -0.63388816790524 * S_MntWines  +     0.00878303775585 *
2441834   +        S_MonthsAsCustomer  +     0.01990411233136 * S_NumCatalogPurchases
2441835   +          +     0.19770934886328 * S_NumDealsPurchases
2441836   +          +      0.0515215988111 * S_NumDistPurchases
2441837   +          +    -0.34569346346089 * S_NumStorePurchases
2441838   +          +    -0.27122293596124 * S_NumWebPurchases
2441839   +          +    -0.17061565609755 * S_NumWebVisitsMonth
2441840   +          +      0.1271178187502 * S_RFMstat  +     0.38306508975954 *
2441841   +        S_RMntFrq  +     0.05823588653853 * S_Recency
2441842   +          +    -0.03760117378617 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.08465472857554 * S_AcceptedCmpTotal + 0.23104131534618 * 
S_Age + 0.27646175976509 * S_Frq + 0.45938840681203 * S_Income + 0.09814900830666 * S_Kidhome 
+ 0.23249430277518 * S_Mnt + -0.51905493105122 * S_MntFishProducts + -0.07604226481078 * 
S_MntFruits + 0.10100393832157 * S_MntGoldProds + 1.56159221713858 * S_MntMeatProducts + 
0.12166799382268 * S_MntSweetProducts + -0.63388816790524 * S_MntWines + 0.00878303775585 * 
S_MonthsAsCustomer + 0.01990411233136 * S_NumCatalogPurchases + 0.19770934886328 * 
S_NumDealsPurchases + 0.0515215988111 * S_NumDistPurchases + -0.34569346346089 * 
S_NumStorePurchases + -0.27122293596124 * S_NumWebPurchases + -0.17061565609755 * 
S_NumWebVisitsMonth + 0.1271178187502 * S_RFMstat + 0.38306508975954 * S_RMntFrq + 
0.05823588653853 * S_Recency + -0.03760117378617 * S_Teenhome ;
2441843   +   H1x1_2  =     0.16564144258189 * S_AcceptedCmpTotal
2441844   +          +    -0.18930338067433 * S_Age  +    -0.23013558761757 * S_Frq
2441845   +          +     -0.1347135122598 * S_Income  +     0.04776498811407 *
2441846   +        S_Kidhome  +    -0.14940302068852 * S_Mnt  +    -0.13108691405604 *
2441847   +        S_MntFishProducts  +    -0.02561341150704 * S_MntFruits
2441848   +          +    -0.02022222891948 * S_MntGoldProds  +     0.80867688993093 *
2441849   +        S_MntMeatProducts  +    -0.08374488783635 * S_MntSweetProducts
2441850   +          +     -0.6719369441832 * S_MntWines  +    -0.14760035685198 *
2441851   +        S_MonthsAsCustomer  +      0.4007376271331 * S_NumCatalogPurchases
2441852   +          +     0.54308887602031 * S_NumDealsPurchases
2441853   +          +    -0.22507315320192 * S_NumDistPurchases
2441854   +          +    -0.79861387328361 * S_NumStorePurchases
2441855   +          +    -0.45467494002747 * S_NumWebPurchases
2441856   +          +      0.2119048824613 * S_NumWebVisitsMonth
2441857   +          +     0.30167662748678 * S_RFMstat  +     0.10712110659027 *
2441858   +        S_RMntFrq  +    -0.03061918029089 * S_Recency
2441859   +          +    -0.06096313113607 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.16564144258189 * S_AcceptedCmpTotal + -0.18930338067433 * 
S_Age + -0.23013558761757 * S_Frq + -0.1347135122598 * S_Income + 0.04776498811407 * S_Kidhome 
+ -0.14940302068852 * S_Mnt + -0.13108691405604 * S_MntFishProducts + -0.02561341150704 * 
S_MntFruits + -0.02022222891948 * S_MntGoldProds + 0.80867688993093 * S_MntMeatProducts + 
-0.08374488783635 * S_MntSweetProducts + -0.6719369441832 * S_MntWines + -0.14760035685198 * 
S_MonthsAsCustomer + 0.4007376271331 * S_NumCatalogPurchases + 0.54308887602031 * 
S_NumDealsPurchases + -0.22507315320192 * S_NumDistPurchases + -0.79861387328361 * 
S_NumStorePurchases + -0.45467494002747 * S_NumWebPurchases + 0.2119048824613 * 
S_NumWebVisitsMonth + 0.30167662748678 * S_RFMstat + 0.10712110659027 * S_RMntFrq + 
-0.03061918029089 * S_Recency + -0.06096313113607 * S_Teenhome ;
2441860   +   H1x1_3  =     0.02674875562898 * S_AcceptedCmpTotal
2441861   +          +    -0.19731891748843 * S_Age  +    -0.00753784701259 * S_Frq
2441862   +          +    -0.31764694608254 * S_Income  +     0.49525183733398 *
2441863   +        S_Kidhome  +     0.24623619243686 * S_Mnt  +     0.25904859702044 *
2441864   +        S_MntFishProducts  +     0.26153358982994 * S_MntFruits
2441865   +          +    -0.07223707213485 * S_MntGoldProds  +    -0.15192960471493 *
2441866   +        S_MntMeatProducts  +     0.08241128624385 * S_MntSweetProducts
2441867   +          +     0.62479763709054 * S_MntWines  +     0.03593742779349 *
2441868   +        S_MonthsAsCustomer  +     0.00825730323418 * S_NumCatalogPurchases
2441869   +          +     -0.0771083149302 * S_NumDealsPurchases
2441870   +          +     0.03403621221162 * S_NumDistPurchases
2441871   +          +     0.61303946422025 * S_NumStorePurchases
2441872   +          +     0.27126793634053 * S_NumWebPurchases
2441873   +          +     -0.9769688424222 * S_NumWebVisitsMonth
2441874   +          +     0.08832170040425 * S_RFMstat  +     0.13241491054212 *
2441875   +        S_RMntFrq  +     0.94872655811163 * S_Recency
2441876   +          +     0.22002222738147 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.02674875562898 * S_AcceptedCmpTotal + -0.19731891748843 * 
S_Age + -0.00753784701259 * S_Frq + -0.31764694608254 * S_Income + 0.49525183733398 * 
S_Kidhome + 0.24623619243686 * S_Mnt + 0.25904859702044 * S_MntFishProducts + 0.26153358982994 
* S_MntFruits + -0.07223707213485 * S_MntGoldProds + -0.15192960471493 * S_MntMeatProducts + 
0.08241128624385 * S_MntSweetProducts + 0.62479763709054 * S_MntWines + 0.03593742779349 * 
S_MonthsAsCustomer + 0.00825730323418 * S_NumCatalogPurchases + -0.0771083149302 * 
S_NumDealsPurchases + 0.03403621221162 * S_NumDistPurchases + 0.61303946422025 * 
S_NumStorePurchases + 0.27126793634053 * S_NumWebPurchases + -0.9769688424222 * 
S_NumWebVisitsMonth + 0.08832170040425 * S_RFMstat + 0.13241491054212 * S_RMntFrq + 
0.94872655811163 * S_Recency + 0.22002222738147 * S_Teenhome ;
2441877   +   H1x1_4  =     0.46328587348713 * S_AcceptedCmpTotal
2441878   +          +      -0.306946385792 * S_Age  +    -0.24247964225191 * S_Frq
2441879   +          +    -0.42968609314513 * S_Income  +    -0.08934431746158 *
2441880   +        S_Kidhome  +     0.15972194979558 * S_Mnt  +    -0.22174909818279 *
2441881   +        S_MntFishProducts  +    -0.23755215058744 * S_MntFruits
2441882   +          +      -0.124789433808 * S_MntGoldProds  +     0.50040173514144 *
2441883   +        S_MntMeatProducts  +     0.02850063230459 * S_MntSweetProducts
2441884   +          +     0.13427582671876 * S_MntWines  +     0.25569886862761 *
2441885   +        S_MonthsAsCustomer  +     0.34004201732149 * S_NumCatalogPurchases
2441886   +          +     0.29894603062327 * S_NumDealsPurchases
2441887   +          +     0.07614620530875 * S_NumDistPurchases
2441888   +          +     0.15402335009896 * S_NumStorePurchases
2441889   +          +     0.10615749096863 * S_NumWebPurchases
2441890   +          +     0.41962286816879 * S_NumWebVisitsMonth
2441891   +          +     0.00203630873093 * S_RFMstat  +     0.04736976805951 *
2441892   +        S_RMntFrq  +    -0.84751074132422 * S_Recency
2441893   +          +      0.2189023557249 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46328587348713 * S_AcceptedCmpTotal + -0.306946385792 * S_Age 
+ -0.24247964225191 * S_Frq + -0.42968609314513 * S_Income + -0.08934431746158 * S_Kidhome + 
0.15972194979558 * S_Mnt + -0.22174909818279 * S_MntFishProducts + -0.23755215058744 * 
S_MntFruits + -0.124789433808 * S_MntGoldProds + 0.50040173514144 * S_MntMeatProducts + 
0.02850063230459 * S_MntSweetProducts + 0.13427582671876 * S_MntWines + 0.25569886862761 * 
S_MonthsAsCustomer + 0.34004201732149 * S_NumCatalogPurchases + 0.29894603062327 * 
S_NumDealsPurchases + 0.07614620530875 * S_NumDistPurchases + 0.15402335009896 * 
S_NumStorePurchases + 0.10615749096863 * S_NumWebPurchases + 0.41962286816879 * 
S_NumWebVisitsMonth + 0.00203630873093 * S_RFMstat + 0.04736976805951 * S_RMntFrq + 
-0.84751074132422 * S_Recency + 0.2189023557249 * S_Teenhome ;
2441894   +   H1x1_5  =    -0.32353341757368 * S_AcceptedCmpTotal
2441895   +          +     0.03233494925748 * S_Age  +    -0.21296093282526 * S_Frq
2441896   +          +    -0.33919081075007 * S_Income  +     0.08771362671573 *
2441897   +        S_Kidhome  +    -0.10797068838726 * S_Mnt  +    -0.19736358637985 *
2441898   +        S_MntFishProducts  +    -0.19679917231132 * S_MntFruits
2441899   +          +     0.07502386205588 * S_MntGoldProds  +    -0.50948750987247 *
2441900   +        S_MntMeatProducts  +     0.00413757018488 * S_MntSweetProducts
2441901   +          +      0.0788538305785 * S_MntWines  +    -0.02917052455021 *
2441902   +        S_MonthsAsCustomer  +    -0.53933514609821 * S_NumCatalogPurchases
2441903   +          +     0.14392502416642 * S_NumDealsPurchases
2441904   +          +    -0.10026304978633 * S_NumDistPurchases
2441905   +          +     -0.0588453022746 * S_NumStorePurchases
2441906   +          +     0.24799398610395 * S_NumWebPurchases
2441907   +          +    -0.52695548549717 * S_NumWebVisitsMonth
2441908   +          +     0.01855620452049 * S_RFMstat  +    -0.00189170766477 *
2441909   +        S_RMntFrq  +     0.51841177421912 * S_Recency
2441910   +          +     0.31491299720207 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.32353341757368 * S_AcceptedCmpTotal + 0.03233494925748 * 
S_Age + -0.21296093282526 * S_Frq + -0.33919081075007 * S_Income + 0.08771362671573 * 
S_Kidhome + -0.10797068838726 * S_Mnt + -0.19736358637985 * S_MntFishProducts + 
-0.19679917231132 * S_MntFruits + 0.07502386205588 * S_MntGoldProds + -0.50948750987247 * 
S_MntMeatProducts + 0.00413757018488 * S_MntSweetProducts + 0.0788538305785 * S_MntWines + 
-0.02917052455021 * S_MonthsAsCustomer + -0.53933514609821 * S_NumCatalogPurchases + 
0.14392502416642 * S_NumDealsPurchases + -0.10026304978633 * S_NumDistPurchases + 
-0.0588453022746 * S_NumStorePurchases + 0.24799398610395 * S_NumWebPurchases + 
-0.52695548549717 * S_NumWebVisitsMonth + 0.01855620452049 * S_RFMstat + -0.00189170766477 * 
S_RMntFrq + 0.51841177421912 * S_Recency + 0.31491299720207 * S_Teenhome ;
2441911   +   H1x1_6  =     -0.2113594539647 * S_AcceptedCmpTotal
2441912   +          +     -0.1052829531896 * S_Age  +     0.30802959734964 * S_Frq
2441913   +          +    -0.03112570586685 * S_Income  +     0.19129661263247 *
2441914   +        S_Kidhome  +     0.00533736622639 * S_Mnt  +    -0.06112703732925 *
2441915   +        S_MntFishProducts  +    -0.15875686512247 * S_MntFruits
2441916   +          +    -0.08040179272112 * S_MntGoldProds  +    -0.14462087536907 *
2441917   +        S_MntMeatProducts  +     0.21353582706121 * S_MntSweetProducts
2441918   +          +    -0.30180630737612 * S_MntWines  +    -0.11825033043182 *
2441919   +        S_MonthsAsCustomer  +     -0.2917393256645 * S_NumCatalogPurchases
2441920   +          +     0.08149600854964 * S_NumDealsPurchases
2441921   +          +     0.16873541613513 * S_NumDistPurchases
2441922   +          +    -0.20437343413446 * S_NumStorePurchases
2441923   +          +     -0.1671107527288 * S_NumWebPurchases
2441924   +          +     0.03677043100993 * S_NumWebVisitsMonth
2441925   +          +      0.0240516540488 * S_RFMstat  +     0.06155030856383 *
2441926   +        S_RMntFrq  +    -0.28802122451372 * S_Recency
2441927   +          +     0.06998878697307 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.2113594539647 * S_AcceptedCmpTotal + -0.1052829531896 * 
S_Age + 0.30802959734964 * S_Frq + -0.03112570586685 * S_Income + 0.19129661263247 * S_Kidhome 
+ 0.00533736622639 * S_Mnt + -0.06112703732925 * S_MntFishProducts + -0.15875686512247 * 
S_MntFruits + -0.08040179272112 * S_MntGoldProds + -0.14462087536907 * S_MntMeatProducts + 
0.21353582706121 * S_MntSweetProducts + -0.30180630737612 * S_MntWines + -0.11825033043182 * 
S_MonthsAsCustomer + -0.2917393256645 * S_NumCatalogPurchases + 0.08149600854964 * 
S_NumDealsPurchases + 0.16873541613513 * S_NumDistPurchases + -0.20437343413446 * 
S_NumStorePurchases + -0.1671107527288 * S_NumWebPurchases + 0.03677043100993 * 
S_NumWebVisitsMonth + 0.0240516540488 * S_RFMstat + 0.06155030856383 * S_RMntFrq + 
-0.28802122451372 * S_Recency + 0.06998878697307 * S_Teenhome ;
2441928   +   H1x1_1  = H1x1_1  +    -0.33641509021082 * AcceptedCmp10
2441929   +          +     0.03092292109435 * AcceptedCmp20  +    -0.23551187181907 *
2441930   +        AcceptedCmp30  +    -0.06694400005185 * AcceptedCmp40
2441931   +          +    -0.14203506237074 * AcceptedCmp50  +    -0.25866390496966 *
2441932   +        Complain0  +     0.19505921178308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.33641509021082 * AcceptedCmp10 + 0.03092292109435 * 
AcceptedCmp20 + -0.23551187181907 * AcceptedCmp30 + -0.06694400005185 * AcceptedCmp40 + 
-0.14203506237074 * AcceptedCmp50 + -0.25866390496966 * Complain0 + 0.19505921178308 * 
HigherEducationBinary0 ;
2441933   +   H1x1_2  = H1x1_2  +     0.09937599707203 * AcceptedCmp10
2441934   +          +     0.03831208573575 * AcceptedCmp20  +     0.39683693019758 *
2441935   +        AcceptedCmp30  +     0.37006277175295 * AcceptedCmp40
2441936   +          +     0.21293419476895 * AcceptedCmp50  +     0.15528568367473 *
2441937   +        Complain0  +    -0.30210013299822 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09937599707203 * AcceptedCmp10 + 0.03831208573575 * 
AcceptedCmp20 + 0.39683693019758 * AcceptedCmp30 + 0.37006277175295 * AcceptedCmp40 + 
0.21293419476895 * AcceptedCmp50 + 0.15528568367473 * Complain0 + -0.30210013299822 * 
HigherEducationBinary0 ;
2441938   +   H1x1_3  = H1x1_3  +     0.29891621770856 * AcceptedCmp10
2441939   +          +     0.64938384482014 * AcceptedCmp20  +     0.44997242602142 *
2441940   +        AcceptedCmp30  +       0.479093722666 * AcceptedCmp40
2441941   +          +     0.50957180373919 * AcceptedCmp50  +     0.27833535432461 *
2441942   +        Complain0  +    -0.20383534906723 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.29891621770856 * AcceptedCmp10 + 0.64938384482014 * 
AcceptedCmp20 + 0.44997242602142 * AcceptedCmp30 + 0.479093722666 * AcceptedCmp40 + 
0.50957180373919 * AcceptedCmp50 + 0.27833535432461 * Complain0 + -0.20383534906723 * 
HigherEducationBinary0 ;
2441943   +   H1x1_4  = H1x1_4  +    -0.26872515586946 * AcceptedCmp10
2441944   +          +    -0.24299337381911 * AcceptedCmp20  +    -0.01147155911926 *
2441945   +        AcceptedCmp30  +     -0.3056041277894 * AcceptedCmp40
2441946   +          +    -0.05496409609003 * AcceptedCmp50  +     0.07858238173893 *
2441947   +        Complain0  +     0.05721550070076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26872515586946 * AcceptedCmp10 + -0.24299337381911 
* AcceptedCmp20 + -0.01147155911926 * AcceptedCmp30 + -0.3056041277894 * AcceptedCmp40 + 
-0.05496409609003 * AcceptedCmp50 + 0.07858238173893 * Complain0 + 0.05721550070076 * 
HigherEducationBinary0 ;
2441948   +   H1x1_5  = H1x1_5  +    -0.14067626649899 * AcceptedCmp10
2441949   +          +    -0.30627802828357 * AcceptedCmp20  +     0.05057942365592 *
2441950   +        AcceptedCmp30  +    -0.10378506600459 * AcceptedCmp40
2441951   +          +     0.07479232390108 * AcceptedCmp50  +     0.07252750671496 *
2441952   +        Complain0  +     0.11114854035831 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.14067626649899 * AcceptedCmp10 + -0.30627802828357 
* AcceptedCmp20 + 0.05057942365592 * AcceptedCmp30 + -0.10378506600459 * AcceptedCmp40 + 
0.07479232390108 * AcceptedCmp50 + 0.07252750671496 * Complain0 + 0.11114854035831 * 
HigherEducationBinary0 ;
2441953   +   H1x1_6  = H1x1_6  +    -0.25806332334976 * AcceptedCmp10
2441954   +          +     0.03944021903138 * AcceptedCmp20  +    -0.08792206887119 *
2441955   +        AcceptedCmp30  +    -0.24631282865199 * AcceptedCmp40
2441956   +          +    -0.06123991538969 * AcceptedCmp50  +    -0.03114784375357 *
2441957   +        Complain0  +    -0.25204544481193 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.25806332334976 * AcceptedCmp10 + 0.03944021903138 * 
AcceptedCmp20 + -0.08792206887119 * AcceptedCmp30 + -0.24631282865199 * AcceptedCmp40 + 
-0.06123991538969 * AcceptedCmp50 + -0.03114784375357 * Complain0 + -0.25204544481193 * 
HigherEducationBinary0 ;
2441958   +   H1x1_1  = H1x1_1  +      0.2972170984261 * Education2n_Cycle
2441959   +          +     0.01651368568996 * EducationBasic  +     -0.1186055936649 *
2441960   +        EducationGraduation  +      0.0228208538951 * EducationMaster
2441961   +          +    -0.31045295887604 * Marital_StatusDivorced
2441962   +          +    -0.01109401001539 * Marital_StatusMarried
2441963   +          +     0.01325135981025 * Marital_StatusSingle
2441964   +          +     0.16609357475978 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.2972170984261 * Education2n_Cycle + 0.01651368568996 
* EducationBasic + -0.1186055936649 * EducationGraduation + 0.0228208538951 * EducationMaster 
+ -0.31045295887604 * Marital_StatusDivorced + -0.01109401001539 * Marital_StatusMarried + 
0.01325135981025 * Marital_StatusSingle + 0.16609357475978 * Marital_StatusTogether ;
2441965   +   H1x1_2  = H1x1_2  +    -0.07095220065018 * Education2n_Cycle
2441966   +          +    -0.23491732567608 * EducationBasic  +     0.20187086452315 *
2441967   +        EducationGraduation  +     0.07524128723108 * EducationMaster
2441968   +          +     0.02275101861599 * Marital_StatusDivorced
2441969   +          +     0.20271548664903 * Marital_StatusMarried
2441970   +          +    -0.12132069210718 * Marital_StatusSingle
2441971   +          +     0.00085090729385 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.07095220065018 * Education2n_Cycle + 
-0.23491732567608 * EducationBasic + 0.20187086452315 * EducationGraduation + 0.07524128723108 
* EducationMaster + 0.02275101861599 * Marital_StatusDivorced + 0.20271548664903 * 
Marital_StatusMarried + -0.12132069210718 * Marital_StatusSingle + 0.00085090729385 * 
Marital_StatusTogether ;
2441972   +   H1x1_3  = H1x1_3  +    -0.02268297689573 * Education2n_Cycle
2441973   +          +     0.06359770535369 * EducationBasic  +     -0.1194001280088 *
2441974   +        EducationGraduation  +     0.17299848976308 * EducationMaster
2441975   +          +     -0.4992959703281 * Marital_StatusDivorced
2441976   +          +     0.62071659624138 * Marital_StatusMarried
2441977   +          +    -0.21776202274494 * Marital_StatusSingle
2441978   +          +     0.54712874598141 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.02268297689573 * Education2n_Cycle + 
0.06359770535369 * EducationBasic + -0.1194001280088 * EducationGraduation + 0.17299848976308 
* EducationMaster + -0.4992959703281 * Marital_StatusDivorced + 0.62071659624138 * 
Marital_StatusMarried + -0.21776202274494 * Marital_StatusSingle + 0.54712874598141 * 
Marital_StatusTogether ;
2441979   +   H1x1_4  = H1x1_4  +    -0.17773353520266 * Education2n_Cycle
2441980   +          +     0.17998728120628 * EducationBasic  +    -0.00324602612825 *
2441981   +        EducationGraduation  +    -0.22448876765089 * EducationMaster
2441982   +          +     0.05626212670587 * Marital_StatusDivorced
2441983   +          +     0.14353891364597 * Marital_StatusMarried
2441984   +          +    -0.29006765622997 * Marital_StatusSingle
2441985   +          +     0.05503638282535 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.17773353520266 * Education2n_Cycle + 
0.17998728120628 * EducationBasic + -0.00324602612825 * EducationGraduation + 
-0.22448876765089 * EducationMaster + 0.05626212670587 * Marital_StatusDivorced + 
0.14353891364597 * Marital_StatusMarried + -0.29006765622997 * Marital_StatusSingle + 
0.05503638282535 * Marital_StatusTogether ;
2441986   +   H1x1_5  = H1x1_5  +     0.06634316870499 * Education2n_Cycle
2441987   +          +    -0.36153880127411 * EducationBasic  +     0.23023144658635 *
2441988   +        EducationGraduation  +    -0.06568730318683 * EducationMaster
2441989   +          +    -0.21206913700604 * Marital_StatusDivorced
2441990   +          +     0.58790643614629 * Marital_StatusMarried
2441991   +          +    -0.65995982578062 * Marital_StatusSingle
2441992   +          +     0.49642503732428 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.06634316870499 * Education2n_Cycle + 
-0.36153880127411 * EducationBasic + 0.23023144658635 * EducationGraduation + 
-0.06568730318683 * EducationMaster + -0.21206913700604 * Marital_StatusDivorced + 
0.58790643614629 * Marital_StatusMarried + -0.65995982578062 * Marital_StatusSingle + 
0.49642503732428 * Marital_StatusTogether ;
2441993   +   H1x1_6  = H1x1_6  +     0.16504024096118 * Education2n_Cycle
2441994   +          +     0.11925867171875 * EducationBasic  +    -0.04213907014732 *
2441995   +        EducationGraduation  +    -0.21389968555475 * EducationMaster
2441996   +          +    -0.05047370516008 * Marital_StatusDivorced
2441997   +          +    -0.23139090963669 * Marital_StatusMarried
2441998   +          +     0.04816197463249 * Marital_StatusSingle
2441999   +          +     0.04977890114896 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16504024096118 * Education2n_Cycle + 
0.11925867171875 * EducationBasic + -0.04213907014732 * EducationGraduation + 
-0.21389968555475 * EducationMaster + -0.05047370516008 * Marital_StatusDivorced + 
-0.23139090963669 * Marital_StatusMarried + 0.04816197463249 * Marital_StatusSingle + 
0.04977890114896 * Marital_StatusTogether ;
2442000   +   H1x1_1  =    -1.90576647346127 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.90576647346127 + H1x1_1 ;
2442001   +   H1x1_2  =     0.32295787429294 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.32295787429294 + H1x1_2 ;
2442002   +   H1x1_3  =     0.75117643107919 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.75117643107919 + H1x1_3 ;
2442003   +   H1x1_4  =      1.2336762751587 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.2336762751587 + H1x1_4 ;
2442004   +   H1x1_5  =    -0.97062317465491 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.97062317465491 + H1x1_5 ;
2442005   +   H1x1_6  =    -1.15756803634408 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -1.15756803634408 + H1x1_6 ;
2442006   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2442007   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2442008   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2442009   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2442010   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2442011   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2442012   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2442013   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2442014   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2442015   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2442016   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2442017   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2442018   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2442019   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2442020   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2442021   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2442022   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2442023   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2442024   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2442025   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2442026   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2442027   +END;
MPRINT(EM_DIAGRAM):   END;
2442028   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2442029   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2442030   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2442031   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2442032   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2442033   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2442034   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2442035   +END;
MPRINT(EM_DIAGRAM):   END;
2442036   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2442037   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2442038   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2442039   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2442040   +   P_DepVar1  =    -0.99830813428318 * H1x1_1  +     1.33495006526712 * H1x1_2
2442041   +          +    -1.37942150026657 * H1x1_3  +     1.22714974922576 * H1x1_4
2442042   +          +     1.73375794385595 * H1x1_5  +     -0.0100306049679 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.99830813428318 * H1x1_1 + 1.33495006526712 * H1x1_2 + 
-1.37942150026657 * H1x1_3 + 1.22714974922576 * H1x1_4 + 1.73375794385595 * H1x1_5 + 
-0.0100306049679 * H1x1_6 ;
2442043   +   P_DepVar1  =    -1.90393999986167 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.90393999986167 + P_DepVar1 ;
2442044   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2442045   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2442046   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2442047   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2442048   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2442049   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2442050   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2442051   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2442052   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2442053   +END;
MPRINT(EM_DIAGRAM):   END;
2442054   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2442055   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2442056   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2442057   +END;
MPRINT(EM_DIAGRAM):   END;
2442058   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2442059   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2442060   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2442061   +END;
MPRINT(EM_DIAGRAM):   END;
2442062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2442063   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2442064   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2442065   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2442066   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2442067   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2442068   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2442069   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2442070   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2442071   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2442072   +END;
MPRINT(EM_DIAGRAM):   END;
2442073   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2442074   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2442075   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2442076   +drop
2442077   +H1x1_1
2442078   +H1x1_2
2442079   +H1x1_3
2442080   +H1x1_4
2442081   +H1x1_5
2442082   +H1x1_6
2442083   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 ;
2442084   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2442085    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2442086    quit;
2442087    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2442088    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2442089    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2442090    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
2442091    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2442092    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2995 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442093    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2442094    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442095    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2995 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442096    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME 
CREATOR);
2442097    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442098    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442099    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2442100    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2442101    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2442102    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442103    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
2442104    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2442105    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2442106    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442107    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442108    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2442109    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2442110    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442111    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442112    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2442113    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2442113  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1655 rows and 5 columns.

2442114    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442115    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2442116    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1655 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1655 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442117    filename _pref
2442117  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2442118    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2442119    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2442120   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2442121   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2442122   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2442123   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2442124   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2442125   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2442126    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2442127    quit;
2442128    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2442129    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2442130    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2442131    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2442132    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2442133    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442134    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2442135    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442136    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442137    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2442138    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442139    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442140    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2442141    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2442142    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2442143    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442144    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2442145    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2442146    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2442147    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442148    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442149    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2442150    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2442151    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442152    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442153    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2442154    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2442154  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2442155    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442156    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2442157    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1659 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442158    filename _pref
2442158  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2442159    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2442160    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2442161   +
2442162   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2442163   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2442163  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2442164   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2442165   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2442166   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2442167   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2442168   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2442169    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2442170    quit;
2442171    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2442172    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2442173    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2442174    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2442175    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2442176    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442177    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2442178    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442179    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442180    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2442181    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442182    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442183    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2442184    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2442185    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2442186    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442187    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2442188    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442189    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2442190    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442191    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442192    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2442193    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2442194    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442195    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442196    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2442197    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2442197  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2442198    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442199    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2442200    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1698 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442201    filename _pref
2442201  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2442202    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2442203    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2442204   +
2442205   +
2442206   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2442207   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2442208   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2442209   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2442210   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2442211   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2442212   +
2442213   +
2442214   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2442215   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2442216   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2442217   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2442218   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2442219   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2442220   +
2442221   +
2442222   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2442223   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2442224   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2442225   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2442226   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2442227   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2442228   +
2442229   +
2442230   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2442231   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2442232   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2442233   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2442234   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2442235   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2442236   +
2442237   +
2442238   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2442239   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2442240   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2442241   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2442242   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2442243   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2442244   +
2442245   +
2442246   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2442247   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2442248   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2442249   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2442250   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2442251   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2442252   +
2442253   +
2442254   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2442255   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2442256   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2442257   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2442258   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2442259   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2442260   +
2442261   +
2442262   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2442263   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2442264   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2442265   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2442266   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2442267   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2442268   +if
2442269   +_FILTERNORM1 not in ( '.')
2442270   + and
2442271   +_FILTERNORM2 not in ( '.')
2442272   + and
2442273   +_FILTERNORM3 not in ( '.')
2442274   + and
2442275   +_FILTERNORM4 not in ( '.')
2442276   + and
2442277   +_FILTERNORM5 not in ( '.')
2442278   + and
2442279   +_FILTERNORM6 not in ( '.')
2442280   + and
2442281   +_FILTERNORM7 not in ( ' ')
2442282   + and
2442283   +_FILTERNORM8 not in ( ' ')
2442284   +and
2442285   +( Dt_Customer ne .)
2442286   +and ( Income ne . and (Income<=107000))
2442287   +and ( Kidhome ne .)
2442288   +and ( MntFishProducts ne .)
2442289   +and ( MntFruits ne .)
2442290   +and ( MntGoldProds ne .)
2442291   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2442292   +and ( MntSweetProducts ne .)
2442293   +and ( MntWines ne .)
2442294   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2442295   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2442296   +and ( NumStorePurchases ne .)
2442297   +and ( NumWebPurchases ne .)
2442298   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2442299   +and ( Recency ne .)
2442300   +and ( Teenhome ne .)
2442301   +and ( Year_Birth ne .)
2442302   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2442303   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2442304   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2442305   +end;
MPRINT(EM_DIAGRAM):   end;
2442306   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2442307   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2442308    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2442309    quit;
2442310    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2442311    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2442312    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2442313    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2442314    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2442315    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442316    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2442317    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442318    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442319    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2442320    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442321    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442322    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2442323    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2442324    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2442325    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442326    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2442327    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2442328    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2442329    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442330    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442331    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2442332    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2442333    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442334    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442335    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2442336    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2442336  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2442337    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442338    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2442339    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1764 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442340    %macro varDept(fcmpdata=,id=);
2442341    %global nobs&id scoreFlag&id;
2442342    %let scoreFlag&id = 0;
2442343    %if &id=1 or ^&fcmpStart %then %do;
2442344    proc sort data=&fcmpdata out=_temp&id nodupkey;
2442345    by NAME;
2442346    where id=&id and LHS in( %let j=1;
2442347    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2442348    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2442349    "&var" %let j = %eval(&j+1);
2442350    %end;
2442351    );
2442352    run;
2442353    %let dsid = %sysfunc(open(_temp&id));
2442354    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2442355    %let dsid = %sysfunc(close(&dsid));
2442356    %if &&nobs&id %then %do;
2442357    %let scoreFlag&id = 1;
2442358    %let fcmpStart = 1;
2442359    %end;
2442360    %else %let fcmpStart = 0;
2442361    %end;
2442362    %else %do;
2442363    proc sort data=&fcmpdata out=_tempid;
2442364    where id=&id;
2442365    by LHS;
2442366    run;
2442367    %let dsid = %sysfunc(open(_tempid));
2442368    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2442369    %let dsid = %sysfunc(close(&dsid));
2442370    %if ^&&nobs&id %then %do;
2442371    proc datasets lib=work nolist;
2442372    delete _tempid;
2442373    run;
2442374    quit;
2442375    %end;
2442376    %else %do;
2442377    data _tempAll;
2442378    set %let j=%eval(&id-1);
2442379    %do x=1 %to &j;
2442380    %if &&nobs&x %then %do;
2442381    _temp&x %end;
2442382    %end;
2442383    ;
2442384    run;
2442385    proc sql;
2442386    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2442386  ! work._tempid p2 where p.name=p2.lhs;
2442387    quit;
2442388    data _temp&id;
2442389    set _temp&id;
2442390    where LHS ne '' and NAME ne '' and Node ne '';
2442391    run;
2442392    proc datasets lib=work nolist;
2442393    delete _tempAll;
2442394    run;
2442395    %let dsid = %sysfunc(open(_temp&id));
2442396    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2442397    %let dsid = %sysfunc(close(&dsid));
2442398    %if ^&&nobs&id %then %do;
2442399    proc datasets lib=work nolist;
2442400    delete _temp&id;
2442401    run;
2442402    quit;
2442403    %end;
2442404    %else %do;
2442405    %let scoreFlag&id = 1;
2442406    data _temp&id;
2442407    set _temp&id;
2442408    where LHS ne NAME and node ne '';
2442409    run;
2442410    %let dsid = %sysfunc(open(_temp&id));
2442411    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2442412    %let dsid = %sysfunc(close(&dsid));
2442413    %if ^&&nobs&id %then %do;
2442414    proc datasets lib=work nolist;
2442415    delete _temp&id;
2442416    run;
2442417    quit;
2442418    %end;
2442419    %else %do;
2442420    proc sort data=_temp&id nodupkey;
2442421    by LHS NAME;
2442422    run;
2442423    %end;
2442424    %end;
2442425    %end;
2442426    %end;
2442427    %mend varDept;
2442428    %macro optCode(outdata=fcmpdata);
2442429    %global fcmpStart;
2442430    %let fcmpStart = 0;
2442431    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2442432    %let NumNodes=9;
2442433    %do k=1 %to &NumNodes;
2442434    %vardept(fcmpdata=&outdata, id=&k);
2442435    %end;
2442436    %mend optCode;
2442437    %optcode(outData=EMWS8.Ensmbl45_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2442438    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2442439    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2442440    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2442441    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442442    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2442443    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2442444    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2442445    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442446    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2442447    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2442447  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2442448    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

2442449    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2442450    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2442451    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442452    filename _pref
2442452  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
2442453    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2442454    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
2442455   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2442456   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2442457   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2442458   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2442459   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2442460   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2442461   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2442462   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2442463   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2442464   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2442465   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2442466   +LENGTH _WARN_ $4
2442467   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2442468   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2442469   +
2442470   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2442471   +
2442472   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2442473   +
2442474   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2442475   +
2442476   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2442477   +
2442478   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2442479   +
2442480   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2442481   +
2442482   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2442483   +
2442484   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2442485   +
2442486   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2442487   +
2442488   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2442489   +
2442490   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2442491   +
2442492   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2442493   +
2442494   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2442495   +
2442496   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2442497   +
2442498   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2442499   +
2442500   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2442501   +
2442502   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2442503   +
2442504   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2442505   +
2442506   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2442507   +
2442508   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2442509   +
2442510   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2442511   +
2442512   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2442513   +
2442514   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2442515   +
2442516   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2442517   +
2442518   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2442519   +
2442520   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2442521   +
2442522   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2442523   +
2442524   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2442525   +
2442526   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2442527   +
2442528   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2442529   +
2442530   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2442531   +
2442532   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2442533   +
2442534   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2442535   +
2442536   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2442537   +
2442538   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2442539   +
2442540   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2442541   +
2442542   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2442543   +
2442544   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2442545   +
2442546   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2442547   +
2442548   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2442549   +
2442550   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2442551   +
2442552   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2442553   +
2442554   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2442555   +
2442556   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2442557   +
2442558   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2442559   +
2442560   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2442561   +
2442562   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2442563   +
2442564   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2442565   +
2442566   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2442567   +
2442568   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2442569   +
2442570   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2442571   +
2442572   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2442573   +
2442574   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2442575   +
2442576   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2442577   +
2442578   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2442579   +
2442580   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2442581   +
2442582   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2442583   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2442584   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2442585   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2442586   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2442587   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2442588   +end;
MPRINT(EM_DIAGRAM):   end;
2442589   +else do;
MPRINT(EM_DIAGRAM):   else do;
2442590   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2442591   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2442592   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2442593   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2442594   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2442595   +   end;
MPRINT(EM_DIAGRAM):   end;
2442596   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2442597   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2442598   +   end;
MPRINT(EM_DIAGRAM):   end;
2442599   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2442600   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2442601   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2442602   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2442603   +   end;
MPRINT(EM_DIAGRAM):   end;
2442604   +end;
MPRINT(EM_DIAGRAM):   end;
2442605   +
2442606   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2442607   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2442608   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2442609   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2442610   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2442611   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2442612   +end;
MPRINT(EM_DIAGRAM):   end;
2442613   +else do;
MPRINT(EM_DIAGRAM):   else do;
2442614   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2442615   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2442616   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2442617   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2442618   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2442619   +   end;
MPRINT(EM_DIAGRAM):   end;
2442620   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2442621   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2442622   +   end;
MPRINT(EM_DIAGRAM):   end;
2442623   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2442624   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2442625   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2442626   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2442627   +   end;
MPRINT(EM_DIAGRAM):   end;
2442628   +end;
MPRINT(EM_DIAGRAM):   end;
2442629   +
2442630   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2442631   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2442632   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2442633   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2442634   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2442635   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2442636   +end;
MPRINT(EM_DIAGRAM):   end;
2442637   +else do;
MPRINT(EM_DIAGRAM):   else do;
2442638   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2442639   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2442640   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2442641   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2442642   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2442643   +   end;
MPRINT(EM_DIAGRAM):   end;
2442644   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2442645   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2442646   +   end;
MPRINT(EM_DIAGRAM):   end;
2442647   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2442648   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2442649   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2442650   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2442651   +   end;
MPRINT(EM_DIAGRAM):   end;
2442652   +end;
MPRINT(EM_DIAGRAM):   end;
2442653   +
2442654   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2442655   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2442656   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2442657   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2442658   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2442659   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2442660   +end;
MPRINT(EM_DIAGRAM):   end;
2442661   +else do;
MPRINT(EM_DIAGRAM):   else do;
2442662   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2442663   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2442664   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2442665   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2442666   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2442667   +   end;
MPRINT(EM_DIAGRAM):   end;
2442668   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2442669   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2442670   +   end;
MPRINT(EM_DIAGRAM):   end;
2442671   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2442672   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2442673   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2442674   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2442675   +   end;
MPRINT(EM_DIAGRAM):   end;
2442676   +end;
MPRINT(EM_DIAGRAM):   end;
2442677   +
2442678   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2442679   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2442680   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2442681   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2442682   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2442683   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2442684   +end;
MPRINT(EM_DIAGRAM):   end;
2442685   +else do;
MPRINT(EM_DIAGRAM):   else do;
2442686   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2442687   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2442688   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2442689   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2442690   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2442691   +   end;
MPRINT(EM_DIAGRAM):   end;
2442692   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2442693   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2442694   +   end;
MPRINT(EM_DIAGRAM):   end;
2442695   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2442696   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2442697   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2442698   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2442699   +   end;
MPRINT(EM_DIAGRAM):   end;
2442700   +end;
MPRINT(EM_DIAGRAM):   end;
2442701   +
2442702   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2442703   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2442704   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2442705   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2442706   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2442707   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2442708   +end;
MPRINT(EM_DIAGRAM):   end;
2442709   +else do;
MPRINT(EM_DIAGRAM):   else do;
2442710   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2442711   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2442712   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2442713   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2442714   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2442715   +   end;
MPRINT(EM_DIAGRAM):   end;
2442716   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2442717   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2442718   +   end;
MPRINT(EM_DIAGRAM):   end;
2442719   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2442720   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2442721   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2442722   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2442723   +   end;
MPRINT(EM_DIAGRAM):   end;
2442724   +end;
MPRINT(EM_DIAGRAM):   end;
2442725   +
2442726   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2442727   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2442728   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2442729   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2442730   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2442731   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2442732   +end;
MPRINT(EM_DIAGRAM):   end;
2442733   +else do;
MPRINT(EM_DIAGRAM):   else do;
2442734   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2442735   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2442736   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2442737   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2442738   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2442739   +   end;
MPRINT(EM_DIAGRAM):   end;
2442740   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2442741   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2442742   +   end;
MPRINT(EM_DIAGRAM):   end;
2442743   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2442744   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2442745   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2442746   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2442747   +   end;
MPRINT(EM_DIAGRAM):   end;
2442748   +end;
MPRINT(EM_DIAGRAM):   end;
2442749   +
2442750   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2442751   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2442752   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2442753   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2442754   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2442755   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2442756   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2442757   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2442758   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2442759   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2442760   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2442761   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2442762   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2442763   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2442764   +end;
MPRINT(EM_DIAGRAM):   end;
2442765   +else do;
MPRINT(EM_DIAGRAM):   else do;
2442766   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2442767   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2442768   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2442769   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2442770   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2442771   +   end;
MPRINT(EM_DIAGRAM):   end;
2442772   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2442773   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2442774   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2442775   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2442776   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2442777   +   end;
MPRINT(EM_DIAGRAM):   end;
2442778   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2442779   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2442780   +   end;
MPRINT(EM_DIAGRAM):   end;
The SAS System

2442781   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2442782   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2442783   +   end;
MPRINT(EM_DIAGRAM):   end;
2442784   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2442785   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2442786   +   end;
MPRINT(EM_DIAGRAM):   end;
2442787   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2442788   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2442789   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2442790   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2442791   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2442792   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2442793   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2442794   +   end;
MPRINT(EM_DIAGRAM):   end;
2442795   +end;
MPRINT(EM_DIAGRAM):   end;
2442796   +
2442797   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2442798   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2442799   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2442800   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2442801   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2442802   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2442803   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2442804   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2442805   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2442806   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2442807   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2442808   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2442809   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2442810   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2442811   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2442812   +end;
MPRINT(EM_DIAGRAM):   end;
2442813   +else do;
MPRINT(EM_DIAGRAM):   else do;
2442814   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2442815   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2442816   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2442817   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2442818   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2442819   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2442820   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2442821   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2442822   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2442823   +         end;
MPRINT(EM_DIAGRAM):   end;
2442824   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2442825   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2442826   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2442827   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2442828   +            end;
MPRINT(EM_DIAGRAM):   end;
2442829   +         end;
MPRINT(EM_DIAGRAM):   end;
2442830   +      end;
MPRINT(EM_DIAGRAM):   end;
2442831   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2442832   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2442833   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2442834   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2442835   +         end;
MPRINT(EM_DIAGRAM):   end;
2442836   +      end;
MPRINT(EM_DIAGRAM):   end;
2442837   +   end;
MPRINT(EM_DIAGRAM):   end;
2442838   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2442839   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2442840   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2442841   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2442842   +      end;
MPRINT(EM_DIAGRAM):   end;
2442843   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2442844   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2442845   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2442846   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2442847   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2442848   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2442849   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2442850   +         end;
MPRINT(EM_DIAGRAM):   end;
2442851   +      end;
MPRINT(EM_DIAGRAM):   end;
2442852   +   end;
MPRINT(EM_DIAGRAM):   end;
2442853   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2442854   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2442855   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2442856   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2442857   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2442858   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2442859   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2442860   +   end;
MPRINT(EM_DIAGRAM):   end;
2442861   +end;
MPRINT(EM_DIAGRAM):   end;
2442862   +
2442863   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2442864   +*** Checking missing input Interval
2442865   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2442866   +
2442867   +IF NMISS(
2442868   +   AcceptedCmpTotal ,
2442869   +   Age ,
2442870   +   Frq ,
2442871   +   Income ,
2442872   +   Kidhome ,
2442873   +   Mnt ,
2442874   +   MntFishProducts ,
2442875   +   MntFruits ,
2442876   +   MntGoldProds ,
2442877   +   MntMeatProducts ,
2442878   +   MntSweetProducts ,
2442879   +   MntWines ,
2442880   +   MonthsAsCustomer ,
2442881   +   NumCatalogPurchases ,
2442882   +   NumDealsPurchases ,
2442883   +   NumDistPurchases ,
2442884   +   NumStorePurchases ,
2442885   +   NumWebPurchases ,
2442886   +   NumWebVisitsMonth ,
2442887   +   RFMstat ,
2442888   +   RMntFrq ,
2442889   +   Recency ,
2442890   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2442891   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2442892   +
2442893   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2442894   +END;
MPRINT(EM_DIAGRAM):   END;
2442895   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2442896   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2442897   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2442898   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2442899   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2442900   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2442901   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2442902   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2442903   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2442904   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2442905   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2442906   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2442907   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2442908   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2442909   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2442910   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2442911   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2442912   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2442913   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2442914   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2442915   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2442916   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2442917   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2442918   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2442919   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2442920   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2442921   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2442922   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2442923   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2442924   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2442925   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2442926   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2442927   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2442928   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2442929   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2442930   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2442931   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2442932   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2442933   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2442934   +END;
MPRINT(EM_DIAGRAM):   END;
2442935   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2442936   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2442937   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2442938   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2442939   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2442940   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2442941   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2442942   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2442943   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2442944   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2442945   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2442946   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2442947   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2442948   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2442949   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2442950   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2442951   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2442952   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2442953   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2442954   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2442955   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2442956   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2442957   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2442958   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2442959   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2442960   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2442961   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2442962   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2442963   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2442964   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2442965   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2442966   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2442967   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2442968   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2442969   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2442970   +   ELSE S_NumCatalogPurchases
2442971   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2442972   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2442973   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2442974   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2442975   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2442976   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2442977   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2442978   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2442979   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2442980   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2442981   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2442982   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2442983   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2442984   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2442985   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2442986   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2442987   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2442988   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2442989   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2442990   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2442991   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2442992   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2442993   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2442994   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2442995   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2442996   +END;
MPRINT(EM_DIAGRAM):   END;
2442997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2442998   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2442999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2443000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2443001   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2443002   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2443003   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2443004   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2443005   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2443006   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2443007   +   H1x1_1  =    -0.08478534961354 * S_AcceptedCmpTotal
2443008   +          +     0.21528166003219 * S_Age  +    -0.16079737422774 * S_Frq
2443009   +          +     0.04922044955183 * S_Income  +     0.06245849112135 *
2443010   +        S_Kidhome  +    -0.12820970008154 * S_Mnt  +    -0.00676959308959 *
2443011   +        S_MntFishProducts  +    -0.20367403957375 * S_MntFruits
2443012   +          +    -0.06459558558968 * S_MntGoldProds  +     0.01557669100416 *
2443013   +        S_MntMeatProducts  +    -0.16342003924117 * S_MntSweetProducts
2443014   +          +     0.34676276369853 * S_MntWines  +    -0.08454570225616 *
2443015   +        S_MonthsAsCustomer  +    -0.00318885387905 * S_NumCatalogPurchases
2443016   +          +      0.1112677116841 * S_NumDealsPurchases
2443017   +          +     0.01563584187072 * S_NumDistPurchases
2443018   +          +     0.19193969522995 * S_NumStorePurchases
2443019   +          +      0.3133556199984 * S_NumWebPurchases
2443020   +          +    -0.21884874785716 * S_NumWebVisitsMonth
2443021   +          +     0.08478875792216 * S_RFMstat  +     0.05964414665285 *
2443022   +        S_RMntFrq  +    -0.12595000497726 * S_Recency
2443023   +          +     -0.1238719414537 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.08478534961354 * S_AcceptedCmpTotal + 0.21528166003219 * 
S_Age + -0.16079737422774 * S_Frq + 0.04922044955183 * S_Income + 0.06245849112135 * S_Kidhome 
+ -0.12820970008154 * S_Mnt + -0.00676959308959 * S_MntFishProducts + -0.20367403957375 * 
S_MntFruits + -0.06459558558968 * S_MntGoldProds + 0.01557669100416 * S_MntMeatProducts + 
-0.16342003924117 * S_MntSweetProducts + 0.34676276369853 * S_MntWines + -0.08454570225616 * 
S_MonthsAsCustomer + -0.00318885387905 * S_NumCatalogPurchases + 0.1112677116841 * 
S_NumDealsPurchases + 0.01563584187072 * S_NumDistPurchases + 0.19193969522995 * 
S_NumStorePurchases + 0.3133556199984 * S_NumWebPurchases + -0.21884874785716 * 
S_NumWebVisitsMonth + 0.08478875792216 * S_RFMstat + 0.05964414665285 * S_RMntFrq + 
-0.12595000497726 * S_Recency + -0.1238719414537 * S_Teenhome ;
2443024   +   H1x1_2  =     0.20807487357943 * S_AcceptedCmpTotal
2443025   +          +    -0.27223051908987 * S_Age  +     0.28649391533674 * S_Frq
2443026   +          +     0.46493719675068 * S_Income  +     0.10180542910079 *
2443027   +        S_Kidhome  +    -0.19573056673819 * S_Mnt  +    -0.05332725327514 *
2443028   +        S_MntFishProducts  +    -0.28610692329433 * S_MntFruits
2443029   +          +    -0.13417237194849 * S_MntGoldProds  +     0.45697707494335 *
2443030   +        S_MntMeatProducts  +    -0.28280545785477 * S_MntSweetProducts
2443031   +          +    -0.13234920069688 * S_MntWines  +     -0.2710938018651 *
2443032   +        S_MonthsAsCustomer  +     0.31174284041905 * S_NumCatalogPurchases
2443033   +          +     0.30225032753275 * S_NumDealsPurchases
2443034   +          +     0.33833359923595 * S_NumDistPurchases
2443035   +          +    -0.20255599575849 * S_NumStorePurchases
2443036   +          +    -0.12040071168942 * S_NumWebPurchases
2443037   +          +    -0.12407090307061 * S_NumWebVisitsMonth
2443038   +          +    -0.05688936259515 * S_RFMstat  +     0.15514736649245 *
2443039   +        S_RMntFrq  +     0.00838555462657 * S_Recency
2443040   +          +     0.04609426861136 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.20807487357943 * S_AcceptedCmpTotal + -0.27223051908987 * 
S_Age + 0.28649391533674 * S_Frq + 0.46493719675068 * S_Income + 0.10180542910079 * S_Kidhome 
+ -0.19573056673819 * S_Mnt + -0.05332725327514 * S_MntFishProducts + -0.28610692329433 * 
S_MntFruits + -0.13417237194849 * S_MntGoldProds + 0.45697707494335 * S_MntMeatProducts + 
-0.28280545785477 * S_MntSweetProducts + -0.13234920069688 * S_MntWines + -0.2710938018651 * 
S_MonthsAsCustomer + 0.31174284041905 * S_NumCatalogPurchases + 0.30225032753275 * 
S_NumDealsPurchases + 0.33833359923595 * S_NumDistPurchases + -0.20255599575849 * 
S_NumStorePurchases + -0.12040071168942 * S_NumWebPurchases + -0.12407090307061 * 
S_NumWebVisitsMonth + -0.05688936259515 * S_RFMstat + 0.15514736649245 * S_RMntFrq + 
0.00838555462657 * S_Recency + 0.04609426861136 * S_Teenhome ;
2443041   +   H1x1_3  =    -0.30541463116928 * S_AcceptedCmpTotal
2443042   +          +    -0.01746117216025 * S_Age  +    -0.44156473334329 * S_Frq
2443043   +          +    -0.51952426304193 * S_Income  +     0.20419921255777 *
2443044   +        S_Kidhome  +    -0.18174316707953 * S_Mnt  +    -0.03813675536406 *
2443045   +        S_MntFishProducts  +     -0.0959023413712 * S_MntFruits
2443046   +          +     0.12724081783278 * S_MntGoldProds  +    -0.07639148541426 *
2443047   +        S_MntMeatProducts  +     -0.0797214413833 * S_MntSweetProducts
2443048   +          +    -0.57705931875808 * S_MntWines  +    -0.12638551201991 *
2443049   +        S_MonthsAsCustomer  +    -0.21854676704549 * S_NumCatalogPurchases
2443050   +          +     0.16792903091627 * S_NumDealsPurchases
2443051   +          +    -0.37408945626745 * S_NumDistPurchases
2443052   +          +    -0.18067262995566 * S_NumStorePurchases
2443053   +          +     0.21192146789881 * S_NumWebPurchases
2443054   +          +    -0.23547702310669 * S_NumWebVisitsMonth
2443055   +          +    -0.02272089758813 * S_RFMstat  +    -0.16409330281075 *
2443056   +        S_RMntFrq  +     0.45021846112946 * S_Recency
2443057   +          +     0.32988735727394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.30541463116928 * S_AcceptedCmpTotal + -0.01746117216025 * 
S_Age + -0.44156473334329 * S_Frq + -0.51952426304193 * S_Income + 0.20419921255777 * 
S_Kidhome + -0.18174316707953 * S_Mnt + -0.03813675536406 * S_MntFishProducts + 
-0.0959023413712 * S_MntFruits + 0.12724081783278 * S_MntGoldProds + -0.07639148541426 * 
S_MntMeatProducts + -0.0797214413833 * S_MntSweetProducts + -0.57705931875808 * S_MntWines + 
-0.12638551201991 * S_MonthsAsCustomer + -0.21854676704549 * S_NumCatalogPurchases + 
0.16792903091627 * S_NumDealsPurchases + -0.37408945626745 * S_NumDistPurchases + 
-0.18067262995566 * S_NumStorePurchases + 0.21192146789881 * S_NumWebPurchases + 
-0.23547702310669 * S_NumWebVisitsMonth + -0.02272089758813 * S_RFMstat + -0.16409330281075 * 
S_RMntFrq + 0.45021846112946 * S_Recency + 0.32988735727394 * S_Teenhome ;
2443058   +   H1x1_4  =     0.05205198916717 * S_AcceptedCmpTotal
2443059   +          +     0.25568653619739 * S_Age  +    -0.31037252146959 * S_Frq
2443060   +          +     0.42636025358982 * S_Income  +    -0.24453708980866 *
2443061   +        S_Kidhome  +    -0.07832530945892 * S_Mnt  +    -0.48332124476182 *
2443062   +        S_MntFishProducts  +    -0.13932879119138 * S_MntFruits
2443063   +          +      0.1984121566988 * S_MntGoldProds  +     1.14965897015972 *
2443064   +        S_MntMeatProducts  +     0.07027485457428 * S_MntSweetProducts
2443065   +          +    -0.56598097754046 * S_MntWines  +     0.07317190938075 *
2443066   +        S_MonthsAsCustomer  +       0.075756987983 * S_NumCatalogPurchases
2443067   +          +     0.29407429399136 * S_NumDealsPurchases
2443068   +          +     0.01610745252195 * S_NumDistPurchases
2443069   +          +    -0.17767939085628 * S_NumStorePurchases
2443070   +          +    -0.15168958538637 * S_NumWebPurchases
2443071   +          +     0.17433622143988 * S_NumWebVisitsMonth
2443072   +          +     0.11635602973993 * S_RFMstat  +     0.32632751843433 *
2443073   +        S_RMntFrq  +    -0.24758483374458 * S_Recency
2443074   +          +    -0.31468291567479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.05205198916717 * S_AcceptedCmpTotal + 0.25568653619739 * 
S_Age + -0.31037252146959 * S_Frq + 0.42636025358982 * S_Income + -0.24453708980866 * 
S_Kidhome + -0.07832530945892 * S_Mnt + -0.48332124476182 * S_MntFishProducts + 
-0.13932879119138 * S_MntFruits + 0.1984121566988 * S_MntGoldProds + 1.14965897015972 * 
S_MntMeatProducts + 0.07027485457428 * S_MntSweetProducts + -0.56598097754046 * S_MntWines + 
0.07317190938075 * S_MonthsAsCustomer + 0.075756987983 * S_NumCatalogPurchases + 
0.29407429399136 * S_NumDealsPurchases + 0.01610745252195 * S_NumDistPurchases + 
-0.17767939085628 * S_NumStorePurchases + -0.15168958538637 * S_NumWebPurchases + 
0.17433622143988 * S_NumWebVisitsMonth + 0.11635602973993 * S_RFMstat + 0.32632751843433 * 
S_RMntFrq + -0.24758483374458 * S_Recency + -0.31468291567479 * S_Teenhome ;
2443075   +   H1x1_5  =    -0.59657492903543 * S_AcceptedCmpTotal
2443076   +          +     0.23513672763458 * S_Age  +    -0.14882104210954 * S_Frq
2443077   +          +    -0.07762660201035 * S_Income  +     0.01424651904783 *
2443078   +        S_Kidhome  +     0.18748607813081 * S_Mnt  +     0.11088464897095 *
2443079   +        S_MntFishProducts  +    -0.10064450211557 * S_MntFruits
2443080   +          +     0.11161391354421 * S_MntGoldProds  +    -1.36345407290644 *
2443081   +        S_MntMeatProducts  +     0.04868729717044 * S_MntSweetProducts
2443082   +          +     0.80284342329654 * S_MntWines  +     -0.0179539622492 *
2443083   +        S_MonthsAsCustomer  +    -0.60051908798715 * S_NumCatalogPurchases
2443084   +          +    -0.37976451362108 * S_NumDealsPurchases
2443085   +          +    -0.17027731520801 * S_NumDistPurchases
2443086   +          +     0.59849493667087 * S_NumStorePurchases
2443087   +          +     0.65481480560301 * S_NumWebPurchases
2443088   +          +    -0.68253224576609 * S_NumWebVisitsMonth
2443089   +          +    -0.16723490165629 * S_RFMstat  +    -0.10533797887644 *
2443090   +        S_RMntFrq  +     0.81382723915873 * S_Recency
2443091   +          +     0.06049401205856 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.59657492903543 * S_AcceptedCmpTotal + 0.23513672763458 * 
S_Age + -0.14882104210954 * S_Frq + -0.07762660201035 * S_Income + 0.01424651904783 * 
S_Kidhome + 0.18748607813081 * S_Mnt + 0.11088464897095 * S_MntFishProducts + 
-0.10064450211557 * S_MntFruits + 0.11161391354421 * S_MntGoldProds + -1.36345407290644 * 
S_MntMeatProducts + 0.04868729717044 * S_MntSweetProducts + 0.80284342329654 * S_MntWines + 
-0.0179539622492 * S_MonthsAsCustomer + -0.60051908798715 * S_NumCatalogPurchases + 
-0.37976451362108 * S_NumDealsPurchases + -0.17027731520801 * S_NumDistPurchases + 
0.59849493667087 * S_NumStorePurchases + 0.65481480560301 * S_NumWebPurchases + 
-0.68253224576609 * S_NumWebVisitsMonth + -0.16723490165629 * S_RFMstat + -0.10533797887644 * 
S_RMntFrq + 0.81382723915873 * S_Recency + 0.06049401205856 * S_Teenhome ;
2443092   +   H1x1_6  =    -0.07547841798202 * S_AcceptedCmpTotal
2443093   +          +     0.22445278254589 * S_Age  +    -0.26357481075143 * S_Frq
2443094   +          +     0.06894154144261 * S_Income  +     0.20713236126681 *
2443095   +        S_Kidhome  +    -0.14103612934526 * S_Mnt  +     0.36334508557452 *
2443096   +        S_MntFishProducts  +    -0.20862425337296 * S_MntFruits
2443097   +          +    -0.29089690099273 * S_MntGoldProds  +     0.11336893090527 *
2443098   +        S_MntMeatProducts  +    -0.13547374281924 * S_MntSweetProducts
2443099   +          +     0.02228828195539 * S_MntWines  +    -0.19257650420334 *
2443100   +        S_MonthsAsCustomer  +      0.1365526319824 * S_NumCatalogPurchases
2443101   +          +    -0.07686699131623 * S_NumDealsPurchases
2443102   +          +    -0.07220460738926 * S_NumDistPurchases
2443103   +          +    -0.06554027468389 * S_NumStorePurchases
2443104   +          +     0.10422838158001 * S_NumWebPurchases
2443105   +          +    -0.03858550147892 * S_NumWebVisitsMonth
2443106   +          +    -0.06397448441373 * S_RFMstat  +     0.21747838287147 *
2443107   +        S_RMntFrq  +     0.24839313159913 * S_Recency
2443108   +          +    -0.06317317698653 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.07547841798202 * S_AcceptedCmpTotal + 0.22445278254589 * 
S_Age + -0.26357481075143 * S_Frq + 0.06894154144261 * S_Income + 0.20713236126681 * S_Kidhome 
+ -0.14103612934526 * S_Mnt + 0.36334508557452 * S_MntFishProducts + -0.20862425337296 * 
S_MntFruits + -0.29089690099273 * S_MntGoldProds + 0.11336893090527 * S_MntMeatProducts + 
-0.13547374281924 * S_MntSweetProducts + 0.02228828195539 * S_MntWines + -0.19257650420334 * 
S_MonthsAsCustomer + 0.1365526319824 * S_NumCatalogPurchases + -0.07686699131623 * 
S_NumDealsPurchases + -0.07220460738926 * S_NumDistPurchases + -0.06554027468389 * 
S_NumStorePurchases + 0.10422838158001 * S_NumWebPurchases + -0.03858550147892 * 
S_NumWebVisitsMonth + -0.06397448441373 * S_RFMstat + 0.21747838287147 * S_RMntFrq + 
0.24839313159913 * S_Recency + -0.06317317698653 * S_Teenhome ;
2443109   +   H1x1_7  =    -0.08604903695444 * S_AcceptedCmpTotal
2443110   +          +    -0.14807437541992 * S_Age  +     0.01466157584549 * S_Frq
2443111   +          +    -0.09883966180507 * S_Income  +     0.51992566778352 *
2443112   +        S_Kidhome  +     0.29795006703636 * S_Mnt  +    -0.08922020500011 *
2443113   +        S_MntFishProducts  +     0.19836834402079 * S_MntFruits
2443114   +          +    -0.11292241468378 * S_MntGoldProds  +       0.584464452194 *
2443115   +        S_MntMeatProducts  +     0.22625326024073 * S_MntSweetProducts
2443116   +          +     0.24074129944382 * S_MntWines  +     0.13538906557527 *
2443117   +        S_MonthsAsCustomer  +    -0.01228250248922 * S_NumCatalogPurchases
2443118   +          +    -0.07920122387563 * S_NumDealsPurchases
2443119   +          +      0.3649244061347 * S_NumDistPurchases
2443120   +          +     0.36475853688403 * S_NumStorePurchases
2443121   +          +     0.02153991404063 * S_NumWebPurchases
2443122   +          +    -0.94080669139388 * S_NumWebVisitsMonth
2443123   +          +     0.24853677977494 * S_RFMstat  +     0.37015183933951 *
2443124   +        S_RMntFrq  +      0.6724157721663 * S_Recency
2443125   +          +      0.1615471643866 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_7 = -0.08604903695444 * S_AcceptedCmpTotal + -0.14807437541992 * 
S_Age + 0.01466157584549 * S_Frq + -0.09883966180507 * S_Income + 0.51992566778352 * S_Kidhome 
+ 0.29795006703636 * S_Mnt + -0.08922020500011 * S_MntFishProducts + 0.19836834402079 * 
S_MntFruits + -0.11292241468378 * S_MntGoldProds + 0.584464452194 * S_MntMeatProducts + 
0.22625326024073 * S_MntSweetProducts + 0.24074129944382 * S_MntWines + 0.13538906557527 * 
S_MonthsAsCustomer + -0.01228250248922 * S_NumCatalogPurchases + -0.07920122387563 * 
S_NumDealsPurchases + 0.3649244061347 * S_NumDistPurchases + 0.36475853688403 * 
S_NumStorePurchases + 0.02153991404063 * S_NumWebPurchases + -0.94080669139388 * 
S_NumWebVisitsMonth + 0.24853677977494 * S_RFMstat + 0.37015183933951 * S_RMntFrq + 
0.6724157721663 * S_Recency + 0.1615471643866 * S_Teenhome ;
2443126   +   H1x1_1  = H1x1_1  +     0.04431608362128 * AcceptedCmp10
2443127   +          +       0.145592087795 * AcceptedCmp20  +    -0.18972867139938 *
2443128   +        AcceptedCmp30  +     0.11297731320888 * AcceptedCmp40
2443129   +          +     0.15203974410995 * AcceptedCmp50  +     0.05130421316428 *
2443130   +        Complain0  +     0.33576036450343 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04431608362128 * AcceptedCmp10 + 0.145592087795 * 
AcceptedCmp20 + -0.18972867139938 * AcceptedCmp30 + 0.11297731320888 * AcceptedCmp40 + 
0.15203974410995 * AcceptedCmp50 + 0.05130421316428 * Complain0 + 0.33576036450343 * 
HigherEducationBinary0 ;
2443131   +   H1x1_2  = H1x1_2  +    -0.05495742609855 * AcceptedCmp10
2443132   +          +    -0.08873650760176 * AcceptedCmp20  +    -0.16380549867313 *
2443133   +        AcceptedCmp30  +    -0.24495261884932 * AcceptedCmp40
2443134   +          +    -0.22199506896148 * AcceptedCmp50  +       0.149484615172 *
2443135   +        Complain0  +     0.01091791142552 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.05495742609855 * AcceptedCmp10 + -0.08873650760176 
* AcceptedCmp20 + -0.16380549867313 * AcceptedCmp30 + -0.24495261884932 * AcceptedCmp40 + 
-0.22199506896148 * AcceptedCmp50 + 0.149484615172 * Complain0 + 0.01091791142552 * 
HigherEducationBinary0 ;
2443136   +   H1x1_3  = H1x1_3  +     0.03473702421341 * AcceptedCmp10
2443137   +          +    -0.11226718065217 * AcceptedCmp20  +     0.19024579384296 *
2443138   +        AcceptedCmp30  +     0.15478548865598 * AcceptedCmp40
2443139   +          +     0.15222823671897 * AcceptedCmp50  +     0.07713012834947 *
2443140   +        Complain0  +    -0.18741708707661 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.03473702421341 * AcceptedCmp10 + -0.11226718065217 * 
AcceptedCmp20 + 0.19024579384296 * AcceptedCmp30 + 0.15478548865598 * AcceptedCmp40 + 
0.15222823671897 * AcceptedCmp50 + 0.07713012834947 * Complain0 + -0.18741708707661 * 
HigherEducationBinary0 ;
2443141   +   H1x1_4  = H1x1_4  +    -0.25622127302429 * AcceptedCmp10
2443142   +          +    -0.39059103518073 * AcceptedCmp20  +    -0.29716603631807 *
2443143   +        AcceptedCmp30  +    -0.20875694971526 * AcceptedCmp40
2443144   +          +    -0.35128787139073 * AcceptedCmp50  +    -0.28848733462386 *
2443145   +        Complain0  +      0.4276503747649 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.25622127302429 * AcceptedCmp10 + -0.39059103518073 
* AcceptedCmp20 + -0.29716603631807 * AcceptedCmp30 + -0.20875694971526 * AcceptedCmp40 + 
-0.35128787139073 * AcceptedCmp50 + -0.28848733462386 * Complain0 + 0.4276503747649 * 
HigherEducationBinary0 ;
2443146   +   H1x1_5  = H1x1_5  +    -0.06574875851088 * AcceptedCmp10
2443147   +          +    -0.27375195259265 * AcceptedCmp20  +     -0.2740681662293 *
2443148   +        AcceptedCmp30  +    -0.14697156898736 * AcceptedCmp40
2443149   +          +     0.17684649468835 * AcceptedCmp50  +    -0.09979172944646 *
2443150   +        Complain0  +     0.38986664202197 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.06574875851088 * AcceptedCmp10 + -0.27375195259265 
* AcceptedCmp20 + -0.2740681662293 * AcceptedCmp30 + -0.14697156898736 * AcceptedCmp40 + 
0.17684649468835 * AcceptedCmp50 + -0.09979172944646 * Complain0 + 0.38986664202197 * 
HigherEducationBinary0 ;
2443151   +   H1x1_6  = H1x1_6  +     0.08696678529441 * AcceptedCmp10
2443152   +          +     0.09467543942215 * AcceptedCmp20  +     0.04586779705477 *
2443153   +        AcceptedCmp30  +    -0.12591921836379 * AcceptedCmp40
2443154   +          +     0.20150138392895 * AcceptedCmp50  +     0.27764282700214 *
2443155   +        Complain0  +     0.13985738522066 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.08696678529441 * AcceptedCmp10 + 0.09467543942215 * 
AcceptedCmp20 + 0.04586779705477 * AcceptedCmp30 + -0.12591921836379 * AcceptedCmp40 + 
0.20150138392895 * AcceptedCmp50 + 0.27764282700214 * Complain0 + 0.13985738522066 * 
HigherEducationBinary0 ;
2443156   +   H1x1_7  = H1x1_7  +    -0.10455069401218 * AcceptedCmp10
2443157   +          +      0.1311831941372 * AcceptedCmp20  +     0.17844209104604 *
2443158   +        AcceptedCmp30  +     0.19406707592815 * AcceptedCmp40
2443159   +          +    -0.00068155012319 * AcceptedCmp50  +     0.13245364846536 *
2443160   +        Complain0  +    -0.05165256160872 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + -0.10455069401218 * AcceptedCmp10 + 0.1311831941372 * 
AcceptedCmp20 + 0.17844209104604 * AcceptedCmp30 + 0.19406707592815 * AcceptedCmp40 + 
-0.00068155012319 * AcceptedCmp50 + 0.13245364846536 * Complain0 + -0.05165256160872 * 
HigherEducationBinary0 ;
2443161   +   H1x1_1  = H1x1_1  +     0.28967939808759 * Education2n_Cycle
2443162   +          +    -0.15795056374781 * EducationBasic  +    -0.00649803471307 *
2443163   +        EducationGraduation  +     0.19520715924532 * EducationMaster
2443164   +          +     0.07744097241553 * Marital_StatusDivorced
2443165   +          +     -0.0247463100385 * Marital_StatusMarried
2443166   +          +     0.05804915234573 * Marital_StatusSingle
2443167   +          +    -0.08320125047871 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.28967939808759 * Education2n_Cycle + 
-0.15795056374781 * EducationBasic + -0.00649803471307 * EducationGraduation + 
0.19520715924532 * EducationMaster + 0.07744097241553 * Marital_StatusDivorced + 
-0.0247463100385 * Marital_StatusMarried + 0.05804915234573 * Marital_StatusSingle + 
-0.08320125047871 * Marital_StatusTogether ;
2443168   +   H1x1_2  = H1x1_2  +     0.12524444422085 * Education2n_Cycle
2443169   +          +    -0.30278286924729 * EducationBasic  +     0.37480827366421 *
2443170   +        EducationGraduation  +     0.34209136290694 * EducationMaster
2443171   +          +     0.01390668926269 * Marital_StatusDivorced
2443172   +          +     0.01136282152074 * Marital_StatusMarried
2443173   +          +     0.12450246418789 * Marital_StatusSingle
2443174   +          +     -0.1576148519872 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12524444422085 * Education2n_Cycle + 
-0.30278286924729 * EducationBasic + 0.37480827366421 * EducationGraduation + 0.34209136290694 
* EducationMaster + 0.01390668926269 * Marital_StatusDivorced + 0.01136282152074 * 
Marital_StatusMarried + 0.12450246418789 * Marital_StatusSingle + -0.1576148519872 * 
Marital_StatusTogether ;
2443175   +   H1x1_3  = H1x1_3  +    -0.14589041643593 * Education2n_Cycle
2443176   +          +    -0.15691118816463 * EducationBasic  +      0.1993616073183 *
2443177   +        EducationGraduation  +     0.02862010255145 * EducationMaster
2443178   +          +    -0.19133456931879 * Marital_StatusDivorced
2443179   +          +     0.56263566654996 * Marital_StatusMarried
2443180   +          +    -0.42172822038882 * Marital_StatusSingle
2443181   +          +     0.42023140643292 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14589041643593 * Education2n_Cycle + 
-0.15691118816463 * EducationBasic + 0.1993616073183 * EducationGraduation + 0.02862010255145 
* EducationMaster + -0.19133456931879 * Marital_StatusDivorced + 0.56263566654996 * 
Marital_StatusMarried + -0.42172822038882 * Marital_StatusSingle + 0.42023140643292 * 
Marital_StatusTogether ;
2443182   +   H1x1_4  = H1x1_4  +     0.10038585978656 * Education2n_Cycle
2443183   +          +    -0.11388609002984 * EducationBasic  +    -0.14980553500983 *
2443184   +        EducationGraduation  +    -0.07646595330369 * EducationMaster
2443185   +          +    -0.19871205065609 * Marital_StatusDivorced
2443186   +          +    -0.14730795681603 * Marital_StatusMarried
2443187   +          +     0.05055432510362 * Marital_StatusSingle
2443188   +          +     0.06558965292395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.10038585978656 * Education2n_Cycle + 
-0.11388609002984 * EducationBasic + -0.14980553500983 * EducationGraduation + 
-0.07646595330369 * EducationMaster + -0.19871205065609 * Marital_StatusDivorced + 
-0.14730795681603 * Marital_StatusMarried + 0.05055432510362 * Marital_StatusSingle + 
0.06558965292395 * Marital_StatusTogether ;
2443189   +   H1x1_5  = H1x1_5  +      0.0015835307855 * Education2n_Cycle
2443190   +          +    -0.22658746797638 * EducationBasic  +    -0.03445982386977 *
2443191   +        EducationGraduation  +     0.11375378192685 * EducationMaster
2443192   +          +    -0.35623807358995 * Marital_StatusDivorced
2443193   +          +     0.30324726283965 * Marital_StatusMarried
2443194   +          +    -0.18561093467927 * Marital_StatusSingle
2443195   +          +       0.395424582152 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0015835307855 * Education2n_Cycle + 
-0.22658746797638 * EducationBasic + -0.03445982386977 * EducationGraduation + 
0.11375378192685 * EducationMaster + -0.35623807358995 * Marital_StatusDivorced + 
0.30324726283965 * Marital_StatusMarried + -0.18561093467927 * Marital_StatusSingle + 
0.395424582152 * Marital_StatusTogether ;
2443196   +   H1x1_6  = H1x1_6  +    -0.23751822587858 * Education2n_Cycle
2443197   +          +    -0.01687300040825 * EducationBasic  +     0.23236967703011 *
2443198   +        EducationGraduation  +      0.0725289831541 * EducationMaster
2443199   +          +     0.11581014663368 * Marital_StatusDivorced
2443200   +          +    -0.31070638037659 * Marital_StatusMarried
2443201   +          +     0.17131747253949 * Marital_StatusSingle
2443202   +          +    -0.19314955966476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.23751822587858 * Education2n_Cycle + 
-0.01687300040825 * EducationBasic + 0.23236967703011 * EducationGraduation + 0.0725289831541 
* EducationMaster + 0.11581014663368 * Marital_StatusDivorced + -0.31070638037659 * 
Marital_StatusMarried + 0.17131747253949 * Marital_StatusSingle + -0.19314955966476 * 
Marital_StatusTogether ;
2443203   +   H1x1_7  = H1x1_7  +     0.00103693282479 * Education2n_Cycle
2443204   +          +     0.12608909598752 * EducationBasic  +     -0.2366673091666 *
2443205   +        EducationGraduation  +     0.24413217290922 * EducationMaster
2443206   +          +    -0.42450599871892 * Marital_StatusDivorced
2443207   +          +     0.48162905075885 * Marital_StatusMarried
2443208   +          +    -0.26618507749283 * Marital_StatusSingle
2443209   +          +     0.38053668740338 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 + 0.00103693282479 * Education2n_Cycle + 
0.12608909598752 * EducationBasic + -0.2366673091666 * EducationGraduation + 0.24413217290922 
* EducationMaster + -0.42450599871892 * Marital_StatusDivorced + 0.48162905075885 * 
Marital_StatusMarried + -0.26618507749283 * Marital_StatusSingle + 0.38053668740338 * 
Marital_StatusTogether ;
2443210   +   H1x1_1  =     0.12149136705075 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.12149136705075 + H1x1_1 ;
2443211   +   H1x1_2  =    -0.97489696657001 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.97489696657001 + H1x1_2 ;
2443212   +   H1x1_3  =    -0.70605220802968 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.70605220802968 + H1x1_3 ;
2443213   +   H1x1_4  =    -1.07783206982379 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.07783206982379 + H1x1_4 ;
2443214   +   H1x1_5  =    -1.00400706261511 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.00400706261511 + H1x1_5 ;
2443215   +   H1x1_6  =     0.22600488314839 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.22600488314839 + H1x1_6 ;
2443216   +   H1x1_7  =     1.55642446968077 + H1x1_7 ;
MPRINT(EM_DIAGRAM):   H1x1_7 = 1.55642446968077 + H1x1_7 ;
2443217   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2443218   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2443219   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2443220   +   IF H1x1_1  < _REC_EPS AND H1x1_1  > - _REC_EPS THEN
2443221   +   H1x1_1  = H1x1_1  * H1x1_1 ;
MPRINT(EM_DIAGRAM):   IF H1x1_1 < _REC_EPS AND H1x1_1 > - _REC_EPS THEN H1x1_1 = H1x1_1 * 
H1x1_1 ;
2443222   +   ELSE H1x1_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_1 = _REC_EPS ;
2443223   +   IF H1x1_2  < _REC_EPS AND H1x1_2  > - _REC_EPS THEN
2443224   +   H1x1_2  = H1x1_2  * H1x1_2 ;
MPRINT(EM_DIAGRAM):   IF H1x1_2 < _REC_EPS AND H1x1_2 > - _REC_EPS THEN H1x1_2 = H1x1_2 * 
H1x1_2 ;
2443225   +   ELSE H1x1_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_2 = _REC_EPS ;
2443226   +   IF H1x1_3  < _REC_EPS AND H1x1_3  > - _REC_EPS THEN
2443227   +   H1x1_3  = H1x1_3  * H1x1_3 ;
MPRINT(EM_DIAGRAM):   IF H1x1_3 < _REC_EPS AND H1x1_3 > - _REC_EPS THEN H1x1_3 = H1x1_3 * 
H1x1_3 ;
2443228   +   ELSE H1x1_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_3 = _REC_EPS ;
2443229   +   IF H1x1_4  < _REC_EPS AND H1x1_4  > - _REC_EPS THEN
2443230   +   H1x1_4  = H1x1_4  * H1x1_4 ;
MPRINT(EM_DIAGRAM):   IF H1x1_4 < _REC_EPS AND H1x1_4 > - _REC_EPS THEN H1x1_4 = H1x1_4 * 
H1x1_4 ;
2443231   +   ELSE H1x1_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_4 = _REC_EPS ;
2443232   +   IF H1x1_5  < _REC_EPS AND H1x1_5  > - _REC_EPS THEN
2443233   +   H1x1_5  = H1x1_5  * H1x1_5 ;
MPRINT(EM_DIAGRAM):   IF H1x1_5 < _REC_EPS AND H1x1_5 > - _REC_EPS THEN H1x1_5 = H1x1_5 * 
H1x1_5 ;
2443234   +   ELSE H1x1_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_5 = _REC_EPS ;
2443235   +   IF H1x1_6  < _REC_EPS AND H1x1_6  > - _REC_EPS THEN
2443236   +   H1x1_6  = H1x1_6  * H1x1_6 ;
MPRINT(EM_DIAGRAM):   IF H1x1_6 < _REC_EPS AND H1x1_6 > - _REC_EPS THEN H1x1_6 = H1x1_6 * 
H1x1_6 ;
2443237   +   ELSE H1x1_6  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_6 = _REC_EPS ;
2443238   +   IF H1x1_7  < _REC_EPS AND H1x1_7  > - _REC_EPS THEN
2443239   +   H1x1_7  = H1x1_7  * H1x1_7 ;
MPRINT(EM_DIAGRAM):   IF H1x1_7 < _REC_EPS AND H1x1_7 > - _REC_EPS THEN H1x1_7 = H1x1_7 * 
H1x1_7 ;
2443240   +   ELSE H1x1_7  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x1_7 = _REC_EPS ;
2443241   +END;
MPRINT(EM_DIAGRAM):   END;
2443242   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2443243   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2443244   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2443245   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2443246   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2443247   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2443248   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2443249   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2443250   +END;
MPRINT(EM_DIAGRAM):   END;
2443251   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2443252   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2443253   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2443254   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2443255   +   H1x2_1  =    -1.36226288448745 * S_AcceptedCmpTotal
2443256   +          +     -1.3328616352886 * S_Age  +     1.25346137866034 * S_Frq
2443257   +          +    -1.21746243786295 * S_Income  +     2.83911738158074 *
2443258   +        S_Kidhome  +    -0.60784009102409 * S_Mnt  +     1.57752173634223 *
2443259   +        S_MntFishProducts  +    -0.26776567401075 * S_MntFruits
2443260   +          +     1.09584731081081 * S_MntGoldProds  +     1.22333044103532 *
2443261   +        S_MntMeatProducts  +     0.42827942745016 * S_MntSweetProducts
2443262   +          +     0.67813472792448 * S_MntWines  +     0.56816492004798 *
2443263   +        S_MonthsAsCustomer  +     0.58113470399079 * S_NumCatalogPurchases
2443264   +          +     1.96719021971894 * S_NumDealsPurchases
2443265   +          +    -0.44535354794671 * S_NumDistPurchases
2443266   +          +    -0.54827762736866 * S_NumStorePurchases
2443267   +          +     1.02703310241897 * S_NumWebPurchases
2443268   +          +    -0.12526997502601 * S_NumWebVisitsMonth
2443269   +          +    -0.55803926383776 * S_RFMstat  +     0.01819380776809 *
2443270   +        S_RMntFrq  +       0.651688575044 * S_Recency
2443271   +          +     1.58682398186611 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.36226288448745 * S_AcceptedCmpTotal + -1.3328616352886 * 
S_Age + 1.25346137866034 * S_Frq + -1.21746243786295 * S_Income + 2.83911738158074 * S_Kidhome 
+ -0.60784009102409 * S_Mnt + 1.57752173634223 * S_MntFishProducts + -0.26776567401075 * 
S_MntFruits + 1.09584731081081 * S_MntGoldProds + 1.22333044103532 * S_MntMeatProducts + 
0.42827942745016 * S_MntSweetProducts + 0.67813472792448 * S_MntWines + 0.56816492004798 * 
S_MonthsAsCustomer + 0.58113470399079 * S_NumCatalogPurchases + 1.96719021971894 * 
S_NumDealsPurchases + -0.44535354794671 * S_NumDistPurchases + -0.54827762736866 * 
S_NumStorePurchases + 1.02703310241897 * S_NumWebPurchases + -0.12526997502601 * 
S_NumWebVisitsMonth + -0.55803926383776 * S_RFMstat + 0.01819380776809 * S_RMntFrq + 
0.651688575044 * S_Recency + 1.58682398186611 * S_Teenhome ;
2443272   +   H1x2_2  =    -0.38064507857029 * S_AcceptedCmpTotal
2443273   +          +    -0.49661801158351 * S_Age  +    -0.89589399799916 * S_Frq
2443274   +          +     -0.0121499288597 * S_Income  +    -0.48023022827846 *
2443275   +        S_Kidhome  +     -0.5183846206029 * S_Mnt  +    -3.13913899012334 *
2443276   +        S_MntFishProducts  +    -2.07291335687615 * S_MntFruits
2443277   +          +     0.51019753905662 * S_MntGoldProds  +     0.11458666377917 *
2443278   +        S_MntMeatProducts  +     -1.8499241966205 * S_MntSweetProducts
2443279   +          +     0.23160544044172 * S_MntWines  +    -0.48210626907943 *
2443280   +        S_MonthsAsCustomer  +     0.15500845227752 * S_NumCatalogPurchases
2443281   +          +     1.34659447971131 * S_NumDealsPurchases
2443282   +          +    -0.51624251310423 * S_NumDistPurchases
2443283   +          +      -1.283121574848 * S_NumStorePurchases
2443284   +          +    -1.83517806228926 * S_NumWebPurchases
2443285   +          +     0.51321339475285 * S_NumWebVisitsMonth
2443286   +          +    -1.86431704283342 * S_RFMstat  +    -1.52065204326569 *
2443287   +        S_RMntFrq  +    -0.33186055095462 * S_Recency
2443288   +          +    -0.49524729407054 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.38064507857029 * S_AcceptedCmpTotal + -0.49661801158351 * 
S_Age + -0.89589399799916 * S_Frq + -0.0121499288597 * S_Income + -0.48023022827846 * 
S_Kidhome + -0.5183846206029 * S_Mnt + -3.13913899012334 * S_MntFishProducts + 
-2.07291335687615 * S_MntFruits + 0.51019753905662 * S_MntGoldProds + 0.11458666377917 * 
S_MntMeatProducts + -1.8499241966205 * S_MntSweetProducts + 0.23160544044172 * S_MntWines + 
-0.48210626907943 * S_MonthsAsCustomer + 0.15500845227752 * S_NumCatalogPurchases + 
1.34659447971131 * S_NumDealsPurchases + -0.51624251310423 * S_NumDistPurchases + 
-1.283121574848 * S_NumStorePurchases + -1.83517806228926 * S_NumWebPurchases + 
0.51321339475285 * S_NumWebVisitsMonth + -1.86431704283342 * S_RFMstat + -1.52065204326569 * 
S_RMntFrq + -0.33186055095462 * S_Recency + -0.49524729407054 * S_Teenhome ;
2443289   +   H1x2_3  =    -0.75774003934728 * S_AcceptedCmpTotal
2443290   +          +    -0.85312030825337 * S_Age  +    -0.01726294458221 * S_Frq
2443291   +          +     0.58598267983786 * S_Income  +     1.30497766805554 *
2443292   +        S_Kidhome  +    -0.84214135491022 * S_Mnt  +     0.55305862453787 *
2443293   +        S_MntFishProducts  +      0.6488663613899 * S_MntFruits
2443294   +          +    -0.83189439197558 * S_MntGoldProds  +    -0.07500050412653 *
2443295   +        S_MntMeatProducts  +    -0.06401928810253 * S_MntSweetProducts
2443296   +          +      0.5940135658334 * S_MntWines  +    -0.04573352455984 *
2443297   +        S_MonthsAsCustomer  +    -1.53610650634069 * S_NumCatalogPurchases
2443298   +          +     0.67492297345004 * S_NumDealsPurchases
2443299   +          +    -0.40437875375926 * S_NumDistPurchases
2443300   +          +     0.36322603681545 * S_NumStorePurchases
2443301   +          +    -1.15315070635524 * S_NumWebPurchases
2443302   +          +     1.20707272201156 * S_NumWebVisitsMonth
2443303   +          +     0.12192566357285 * S_RFMstat  +    -0.46711219170047 *
2443304   +        S_RMntFrq  +     1.89703582493259 * S_Recency
2443305   +          +     1.07511942237188 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.75774003934728 * S_AcceptedCmpTotal + -0.85312030825337 * 
S_Age + -0.01726294458221 * S_Frq + 0.58598267983786 * S_Income + 1.30497766805554 * S_Kidhome 
+ -0.84214135491022 * S_Mnt + 0.55305862453787 * S_MntFishProducts + 0.6488663613899 * 
S_MntFruits + -0.83189439197558 * S_MntGoldProds + -0.07500050412653 * S_MntMeatProducts + 
-0.06401928810253 * S_MntSweetProducts + 0.5940135658334 * S_MntWines + -0.04573352455984 * 
S_MonthsAsCustomer + -1.53610650634069 * S_NumCatalogPurchases + 0.67492297345004 * 
S_NumDealsPurchases + -0.40437875375926 * S_NumDistPurchases + 0.36322603681545 * 
S_NumStorePurchases + -1.15315070635524 * S_NumWebPurchases + 1.20707272201156 * 
S_NumWebVisitsMonth + 0.12192566357285 * S_RFMstat + -0.46711219170047 * S_RMntFrq + 
1.89703582493259 * S_Recency + 1.07511942237188 * S_Teenhome ;
2443306   +   H1x2_4  =     0.62123819069495 * S_AcceptedCmpTotal
2443307   +          +     0.03399237520702 * S_Age  +    -0.01971421795338 * S_Frq
2443308   +          +    -0.54728266919056 * S_Income  +     -0.4634195771237 *
2443309   +        S_Kidhome  +    -1.19055247712911 * S_Mnt  +      1.4307770729159 *
2443310   +        S_MntFishProducts  +    -0.83895281276374 * S_MntFruits
2443311   +          +    -0.48578798244317 * S_MntGoldProds  +     -0.2846617807101 *
2443312   +        S_MntMeatProducts  +     0.70721686533987 * S_MntSweetProducts
2443313   +          +     1.32824513551741 * S_MntWines  +    -0.62654342755965 *
2443314   +        S_MonthsAsCustomer  +    -0.97245161056543 * S_NumCatalogPurchases
2443315   +          +    -0.41427983342148 * S_NumDealsPurchases
2443316   +          +    -0.22714305629205 * S_NumDistPurchases
2443317   +          +    -0.78763182048862 * S_NumStorePurchases
2443318   +          +    -0.26669253451501 * S_NumWebPurchases
2443319   +          +    -0.79601078616342 * S_NumWebVisitsMonth
2443320   +          +    -0.03863278696502 * S_RFMstat  +     0.95011556103056 *
2443321   +        S_RMntFrq  +     0.57184629262878 * S_Recency
2443322   +          +    -0.21560478702461 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.62123819069495 * S_AcceptedCmpTotal + 0.03399237520702 * 
S_Age + -0.01971421795338 * S_Frq + -0.54728266919056 * S_Income + -0.4634195771237 * 
S_Kidhome + -1.19055247712911 * S_Mnt + 1.4307770729159 * S_MntFishProducts + 
-0.83895281276374 * S_MntFruits + -0.48578798244317 * S_MntGoldProds + -0.2846617807101 * 
S_MntMeatProducts + 0.70721686533987 * S_MntSweetProducts + 1.32824513551741 * S_MntWines + 
-0.62654342755965 * S_MonthsAsCustomer + -0.97245161056543 * S_NumCatalogPurchases + 
-0.41427983342148 * S_NumDealsPurchases + -0.22714305629205 * S_NumDistPurchases + 
-0.78763182048862 * S_NumStorePurchases + -0.26669253451501 * S_NumWebPurchases + 
-0.79601078616342 * S_NumWebVisitsMonth + -0.03863278696502 * S_RFMstat + 0.95011556103056 * 
S_RMntFrq + 0.57184629262878 * S_Recency + -0.21560478702461 * S_Teenhome ;
2443323   +   H1x2_5  =     1.47906557745075 * S_AcceptedCmpTotal
2443324   +          +    -0.31060566334198 * S_Age  +     0.56472424389718 * S_Frq
2443325   +          +     2.16541682726249 * S_Income  +    -0.34119803841059 *
2443326   +        S_Kidhome  +    -0.53783050542796 * S_Mnt  +     0.54954821448236 *
2443327   +        S_MntFishProducts  +    -0.48449918837838 * S_MntFruits
2443328   +          +     0.29783052620672 * S_MntGoldProds  +    -0.15068954343013 *
2443329   +        S_MntMeatProducts  +     0.12733251381761 * S_MntSweetProducts
2443330   +          +    -2.46709166794296 * S_MntWines  +     -1.2011286508879 *
2443331   +        S_MonthsAsCustomer  +    -0.88194814936932 * S_NumCatalogPurchases
2443332   +          +      0.7697882092212 * S_NumDealsPurchases
2443333   +          +     0.51864835453056 * S_NumDistPurchases
2443334   +          +    -1.18320366630444 * S_NumStorePurchases
2443335   +          +     -0.6608394639529 * S_NumWebPurchases
2443336   +          +    -0.03948137707769 * S_NumWebVisitsMonth
2443337   +          +     1.01076462488608 * S_RFMstat  +    -0.91562280329354 *
2443338   +        S_RMntFrq  +    -1.07576669501238 * S_Recency
2443339   +          +     -0.5946628412106 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.47906557745075 * S_AcceptedCmpTotal + -0.31060566334198 * 
S_Age + 0.56472424389718 * S_Frq + 2.16541682726249 * S_Income + -0.34119803841059 * S_Kidhome 
+ -0.53783050542796 * S_Mnt + 0.54954821448236 * S_MntFishProducts + -0.48449918837838 * 
S_MntFruits + 0.29783052620672 * S_MntGoldProds + -0.15068954343013 * S_MntMeatProducts + 
0.12733251381761 * S_MntSweetProducts + -2.46709166794296 * S_MntWines + -1.2011286508879 * 
S_MonthsAsCustomer + -0.88194814936932 * S_NumCatalogPurchases + 0.7697882092212 * 
S_NumDealsPurchases + 0.51864835453056 * S_NumDistPurchases + -1.18320366630444 * 
S_NumStorePurchases + -0.6608394639529 * S_NumWebPurchases + -0.03948137707769 * 
S_NumWebVisitsMonth + 1.01076462488608 * S_RFMstat + -0.91562280329354 * S_RMntFrq + 
-1.07576669501238 * S_Recency + -0.5946628412106 * S_Teenhome ;
2443340   +   H1x2_6  =     0.42130900994246 * S_AcceptedCmpTotal
2443341   +          +     1.64256522546546 * S_Age  +    -0.31822237495441 * S_Frq
2443342   +          +     0.39698710846967 * S_Income  +    -1.30075584525681 *
2443343   +        S_Kidhome  +    -1.74733472316294 * S_Mnt  +    -1.04423575539078 *
2443344   +        S_MntFishProducts  +     0.28025913700744 * S_MntFruits
2443345   +          +     0.92062413073229 * S_MntGoldProds  +     0.38487452173084 *
2443346   +        S_MntMeatProducts  +     2.15808673418264 * S_MntSweetProducts
2443347   +          +     -0.5364274323591 * S_MntWines  +     0.64447858852609 *
2443348   +        S_MonthsAsCustomer  +     0.33683873873337 * S_NumCatalogPurchases
2443349   +          +     1.45707983202269 * S_NumDealsPurchases
2443350   +          +     0.83341887728641 * S_NumDistPurchases
2443351   +          +    -0.36664450469423 * S_NumStorePurchases
2443352   +          +     0.63911579043339 * S_NumWebPurchases
2443353   +          +     0.67144790303554 * S_NumWebVisitsMonth
2443354   +          +    -0.22124390112376 * S_RFMstat  +     1.72222071547971 *
2443355   +        S_RMntFrq  +    -0.02323382627271 * S_Recency
2443356   +          +    -0.09494567508522 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0.42130900994246 * S_AcceptedCmpTotal + 1.64256522546546 * 
S_Age + -0.31822237495441 * S_Frq + 0.39698710846967 * S_Income + -1.30075584525681 * 
S_Kidhome + -1.74733472316294 * S_Mnt + -1.04423575539078 * S_MntFishProducts + 
0.28025913700744 * S_MntFruits + 0.92062413073229 * S_MntGoldProds + 0.38487452173084 * 
S_MntMeatProducts + 2.15808673418264 * S_MntSweetProducts + -0.5364274323591 * S_MntWines + 
0.64447858852609 * S_MonthsAsCustomer + 0.33683873873337 * S_NumCatalogPurchases + 
1.45707983202269 * S_NumDealsPurchases + 0.83341887728641 * S_NumDistPurchases + 
-0.36664450469423 * S_NumStorePurchases + 0.63911579043339 * S_NumWebPurchases + 
0.67144790303554 * S_NumWebVisitsMonth + -0.22124390112376 * S_RFMstat + 1.72222071547971 * 
S_RMntFrq + -0.02323382627271 * S_Recency + -0.09494567508522 * S_Teenhome ;
2443357   +   H1x2_7  =      0.0903330772553 * S_AcceptedCmpTotal
2443358   +          +     0.13217959089196 * S_Age  +     0.93600629225871 * S_Frq
2443359   +          +     1.23765169211392 * S_Income  +     1.27732984858098 *
2443360   +        S_Kidhome  +     1.54889765360944 * S_Mnt  +     0.84618173514761 *
2443361   +        S_MntFishProducts  +    -0.32044356786958 * S_MntFruits
2443362   +          +    -0.26357995597029 * S_MntGoldProds  +     0.53649229087334 *
2443363   +        S_MntMeatProducts  +     1.46955866272889 * S_MntSweetProducts
2443364   +          +    -0.34260315437319 * S_MntWines  +    -1.70693604004836 *
2443365   +        S_MonthsAsCustomer  +     -0.4612555130737 * S_NumCatalogPurchases
2443366   +          +     0.68491896063662 * S_NumDealsPurchases
2443367   +          +      0.5386312048592 * S_NumDistPurchases
2443368   +          +     1.28108942503912 * S_NumStorePurchases
2443369   +          +    -0.88282270505969 * S_NumWebPurchases
2443370   +          +    -0.66670958211416 * S_NumWebVisitsMonth
2443371   +          +     0.94315921733739 * S_RFMstat  +     0.70533705858561 *
2443372   +        S_RMntFrq  +     0.23896687873405 * S_Recency
2443373   +          +     0.66289635918858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.0903330772553 * S_AcceptedCmpTotal + 0.13217959089196 * S_Age 
+ 0.93600629225871 * S_Frq + 1.23765169211392 * S_Income + 1.27732984858098 * S_Kidhome + 
1.54889765360944 * S_Mnt + 0.84618173514761 * S_MntFishProducts + -0.32044356786958 * 
S_MntFruits + -0.26357995597029 * S_MntGoldProds + 0.53649229087334 * S_MntMeatProducts + 
1.46955866272889 * S_MntSweetProducts + -0.34260315437319 * S_MntWines + -1.70693604004836 * 
S_MonthsAsCustomer + -0.4612555130737 * S_NumCatalogPurchases + 0.68491896063662 * 
S_NumDealsPurchases + 0.5386312048592 * S_NumDistPurchases + 1.28108942503912 * 
S_NumStorePurchases + -0.88282270505969 * S_NumWebPurchases + -0.66670958211416 * 
S_NumWebVisitsMonth + 0.94315921733739 * S_RFMstat + 0.70533705858561 * S_RMntFrq + 
0.23896687873405 * S_Recency + 0.66289635918858 * S_Teenhome ;
2443374   +   H1x2_1  = H1x2_1  +     0.22958861848016 * AcceptedCmp10
2443375   +          +    -1.11069938765475 * AcceptedCmp20  +     1.18563222829069 *
2443376   +        AcceptedCmp30  +    -0.97028253571173 * AcceptedCmp40
2443377   +          +     0.60850082670391 * AcceptedCmp50  +     0.31163990605418 *
2443378   +        Complain0  +     1.10957053966326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.22958861848016 * AcceptedCmp10 + -1.11069938765475 * 
AcceptedCmp20 + 1.18563222829069 * AcceptedCmp30 + -0.97028253571173 * AcceptedCmp40 + 
0.60850082670391 * AcceptedCmp50 + 0.31163990605418 * Complain0 + 1.10957053966326 * 
HigherEducationBinary0 ;
2443379   +   H1x2_2  = H1x2_2  +    -0.99409862826118 * AcceptedCmp10
2443380   +          +    -0.76360093699992 * AcceptedCmp20  +     0.82772534103696 *
2443381   +        AcceptedCmp30  +     1.74232000787449 * AcceptedCmp40
2443382   +          +    -1.37356239255127 * AcceptedCmp50  +      0.0919811154199 *
2443383   +        Complain0  +    -0.00220513515877 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.99409862826118 * AcceptedCmp10 + -0.76360093699992 
* AcceptedCmp20 + 0.82772534103696 * AcceptedCmp30 + 1.74232000787449 * AcceptedCmp40 + 
-1.37356239255127 * AcceptedCmp50 + 0.0919811154199 * Complain0 + -0.00220513515877 * 
HigherEducationBinary0 ;
2443384   +   H1x2_3  = H1x2_3  +    -0.21003647134105 * AcceptedCmp10
2443385   +          +    -0.08930317176477 * AcceptedCmp20  +    -0.39109673162041 *
2443386   +        AcceptedCmp30  +     1.14094450038946 * AcceptedCmp40
2443387   +          +     1.26041997788848 * AcceptedCmp50  +    -0.10972130900569 *
2443388   +        Complain0  +    -0.99352598480407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.21003647134105 * AcceptedCmp10 + -0.08930317176477 
* AcceptedCmp20 + -0.39109673162041 * AcceptedCmp30 + 1.14094450038946 * AcceptedCmp40 + 
1.26041997788848 * AcceptedCmp50 + -0.10972130900569 * Complain0 + -0.99352598480407 * 
HigherEducationBinary0 ;
2443389   +   H1x2_4  = H1x2_4  +     2.02630284432093 * AcceptedCmp10
2443390   +          +    -2.50721904229276 * AcceptedCmp20  +    -1.31026450397446 *
2443391   +        AcceptedCmp30  +    -0.83440880266914 * AcceptedCmp40
2443392   +          +     -0.0570899805015 * AcceptedCmp50  +    -0.55525351434733 *
2443393   +        Complain0  +     0.27306601694081 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 2.02630284432093 * AcceptedCmp10 + -2.50721904229276 * 
AcceptedCmp20 + -1.31026450397446 * AcceptedCmp30 + -0.83440880266914 * AcceptedCmp40 + 
-0.0570899805015 * AcceptedCmp50 + -0.55525351434733 * Complain0 + 0.27306601694081 * 
HigherEducationBinary0 ;
2443394   +   H1x2_5  = H1x2_5  +    -0.18595284227194 * AcceptedCmp10
2443395   +          +    -1.55973916517392 * AcceptedCmp20  +    -3.81563768970049 *
2443396   +        AcceptedCmp30  +    -0.09331430915239 * AcceptedCmp40
2443397   +          +     0.76128118177142 * AcceptedCmp50  +    -0.17283107047755 *
2443398   +        Complain0  +    -1.01028562804392 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.18595284227194 * AcceptedCmp10 + -1.55973916517392 
* AcceptedCmp20 + -3.81563768970049 * AcceptedCmp30 + -0.09331430915239 * AcceptedCmp40 + 
0.76128118177142 * AcceptedCmp50 + -0.17283107047755 * Complain0 + -1.01028562804392 * 
HigherEducationBinary0 ;
2443399   +   H1x2_6  = H1x2_6  +    -1.21475169836565 * AcceptedCmp10
2443400   +          +     0.28748729216575 * AcceptedCmp20  +     1.15908030413172 *
2443401   +        AcceptedCmp30  +    -0.05889528676549 * AcceptedCmp40
2443402   +          +    -0.41661363625562 * AcceptedCmp50  +    -0.77939130028952 *
2443403   +        Complain0  +     2.19510865765326 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.21475169836565 * AcceptedCmp10 + 0.28748729216575 * 
AcceptedCmp20 + 1.15908030413172 * AcceptedCmp30 + -0.05889528676549 * AcceptedCmp40 + 
-0.41661363625562 * AcceptedCmp50 + -0.77939130028952 * Complain0 + 2.19510865765326 * 
HigherEducationBinary0 ;
2443404   +   H1x2_7  = H1x2_7  +     0.87360423179644 * AcceptedCmp10
2443405   +          +    -0.47867594186426 * AcceptedCmp20  +    -0.30325818223392 *
2443406   +        AcceptedCmp30  +    -0.96085556588297 * AcceptedCmp40
2443407   +          +    -0.19693158209969 * AcceptedCmp50  +    -0.73731792634553 *
2443408   +        Complain0  +    -1.10021678806679 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + 0.87360423179644 * AcceptedCmp10 + -0.47867594186426 * 
AcceptedCmp20 + -0.30325818223392 * AcceptedCmp30 + -0.96085556588297 * AcceptedCmp40 + 
-0.19693158209969 * AcceptedCmp50 + -0.73731792634553 * Complain0 + -1.10021678806679 * 
HigherEducationBinary0 ;
2443409   +   H1x2_1  = H1x2_1  +    -1.17876013389516 * Education2n_Cycle
2443410   +          +    -0.35670434275624 * EducationBasic  +    -0.12456502068616 *
2443411   +        EducationGraduation  +     -1.0620373133508 * EducationMaster
2443412   +          +    -3.97961426831865 * Marital_StatusDivorced
2443413   +          +     0.00932639813867 * Marital_StatusMarried
2443414   +          +     1.29310186574718 * Marital_StatusSingle
2443415   +          +     1.60940802221114 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.17876013389516 * Education2n_Cycle + 
-0.35670434275624 * EducationBasic + -0.12456502068616 * EducationGraduation + 
-1.0620373133508 * EducationMaster + -3.97961426831865 * Marital_StatusDivorced + 
0.00932639813867 * Marital_StatusMarried + 1.29310186574718 * Marital_StatusSingle + 
1.60940802221114 * Marital_StatusTogether ;
2443416   +   H1x2_2  = H1x2_2  +     0.58497813059595 * Education2n_Cycle
2443417   +          +     0.98038586431321 * EducationBasic  +    -0.20442806724521 *
2443418   +        EducationGraduation  +     0.64973046142001 * EducationMaster
2443419   +          +    -0.30358516578188 * Marital_StatusDivorced
2443420   +          +    -0.96176709360703 * Marital_StatusMarried
2443421   +          +     1.26977690921649 * Marital_StatusSingle
2443422   +          +     -0.6681544336237 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.58497813059595 * Education2n_Cycle + 
0.98038586431321 * EducationBasic + -0.20442806724521 * EducationGraduation + 0.64973046142001 
* EducationMaster + -0.30358516578188 * Marital_StatusDivorced + -0.96176709360703 * 
Marital_StatusMarried + 1.26977690921649 * Marital_StatusSingle + -0.6681544336237 * 
Marital_StatusTogether ;
2443423   +   H1x2_3  = H1x2_3  +     0.42123479646947 * Education2n_Cycle
2443424   +          +     0.22705854674045 * EducationBasic  +     0.34794003687348 *
2443425   +        EducationGraduation  +     0.18356390207843 * EducationMaster
2443426   +          +     0.55272671490757 * Marital_StatusDivorced
2443427   +          +      0.1499239288334 * Marital_StatusMarried
2443428   +          +    -0.46840941760604 * Marital_StatusSingle
2443429   +          +     0.93706218273755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.42123479646947 * Education2n_Cycle + 
0.22705854674045 * EducationBasic + 0.34794003687348 * EducationGraduation + 0.18356390207843 
* EducationMaster + 0.55272671490757 * Marital_StatusDivorced + 0.1499239288334 * 
Marital_StatusMarried + -0.46840941760604 * Marital_StatusSingle + 0.93706218273755 * 
Marital_StatusTogether ;
2443430   +   H1x2_4  = H1x2_4  +     0.85035585831723 * Education2n_Cycle
2443431   +          +    -0.70680576286167 * EducationBasic  +    -0.24487676912938 *
2443432   +        EducationGraduation  +    -0.33030970028481 * EducationMaster
2443433   +          +      -1.240735370138 * Marital_StatusDivorced
2443434   +          +    -1.20089294883599 * Marital_StatusMarried
2443435   +          +     0.57492674426149 * Marital_StatusSingle
2443436   +          +     1.44189292990255 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.85035585831723 * Education2n_Cycle + 
-0.70680576286167 * EducationBasic + -0.24487676912938 * EducationGraduation + 
-0.33030970028481 * EducationMaster + -1.240735370138 * Marital_StatusDivorced + 
-1.20089294883599 * Marital_StatusMarried + 0.57492674426149 * Marital_StatusSingle + 
1.44189292990255 * Marital_StatusTogether ;
2443437   +   H1x2_5  = H1x2_5  +    -0.62461434654579 * Education2n_Cycle
2443438   +          +    -0.34090423965869 * EducationBasic  +    -0.82493401834396 *
2443439   +        EducationGraduation  +    -1.09423426649553 * EducationMaster
2443440   +          +     1.05435442049802 * Marital_StatusDivorced
2443441   +          +      0.3571256349717 * Marital_StatusMarried
2443442   +          +    -0.44741267266578 * Marital_StatusSingle
2443443   +          +     0.02948931507994 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.62461434654579 * Education2n_Cycle + 
-0.34090423965869 * EducationBasic + -0.82493401834396 * EducationGraduation + 
-1.09423426649553 * EducationMaster + 1.05435442049802 * Marital_StatusDivorced + 
0.3571256349717 * Marital_StatusMarried + -0.44741267266578 * Marital_StatusSingle + 
0.02948931507994 * Marital_StatusTogether ;
2443444   +   H1x2_6  = H1x2_6  +     0.09620501635178 * Education2n_Cycle
2443445   +          +    -0.54617424401993 * EducationBasic  +    -0.43305038404558 *
2443446   +        EducationGraduation  +     0.05453229059502 * EducationMaster
2443447   +          +     2.06026721980778 * Marital_StatusDivorced
2443448   +          +    -0.49583258645166 * Marital_StatusMarried
2443449   +          +    -1.14824900824474 * Marital_StatusSingle
2443450   +          +     0.57690093967839 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + 0.09620501635178 * Education2n_Cycle + 
-0.54617424401993 * EducationBasic + -0.43305038404558 * EducationGraduation + 
0.05453229059502 * EducationMaster + 2.06026721980778 * Marital_StatusDivorced + 
-0.49583258645166 * Marital_StatusMarried + -1.14824900824474 * Marital_StatusSingle + 
0.57690093967839 * Marital_StatusTogether ;
2443451   +   H1x2_7  = H1x2_7  +    -0.31251046777442 * Education2n_Cycle
2443452   +          +    -1.69272922870259 * EducationBasic  +    -0.08682253496961 *
2443453   +        EducationGraduation  +     0.58241644186309 * EducationMaster
2443454   +          +     -1.1890908607447 * Marital_StatusDivorced
2443455   +          +    -0.46668809907123 * Marital_StatusMarried
2443456   +          +     1.20342564763422 * Marital_StatusSingle
2443457   +          +    -1.75740662969578 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 + -0.31251046777442 * Education2n_Cycle + 
-1.69272922870259 * EducationBasic + -0.08682253496961 * EducationGraduation + 
0.58241644186309 * EducationMaster + -1.1890908607447 * Marital_StatusDivorced + 
-0.46668809907123 * Marital_StatusMarried + 1.20342564763422 * Marital_StatusSingle + 
-1.75740662969578 * Marital_StatusTogether ;
2443458   +   H1x2_1  =    -0.14973719401763 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.14973719401763 + H1x2_1 ;
2443459   +   H1x2_2  =    -0.56259582407931 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.56259582407931 + H1x2_2 ;
2443460   +   H1x2_3  =     0.42132483186492 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.42132483186492 + H1x2_3 ;
2443461   +   H1x2_4  =      1.1996209421335 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.1996209421335 + H1x2_4 ;
2443462   +   H1x2_5  =     0.95827018478011 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.95827018478011 + H1x2_5 ;
2443463   +   H1x2_6  =     1.88844492435344 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.88844492435344 + H1x2_6 ;
2443464   +   H1x2_7  =     0.77184516675485 + H1x2_7 ;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0.77184516675485 + H1x2_7 ;
2443465   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2443466   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2443467   +   H1x2_1  = EXP(MIN(H1x2_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(H1x2_1 , _EXP_BAR));
2443468   +   H1x2_2  = EXP(MIN(H1x2_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(H1x2_2 , _EXP_BAR));
2443469   +   H1x2_3  = EXP(MIN(H1x2_3 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(MIN(H1x2_3 , _EXP_BAR));
2443470   +   H1x2_4  = EXP(MIN(H1x2_4 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(MIN(H1x2_4 , _EXP_BAR));
2443471   +   H1x2_5  = EXP(MIN(H1x2_5 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(MIN(H1x2_5 , _EXP_BAR));
2443472   +   H1x2_6  = EXP(MIN(H1x2_6 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(MIN(H1x2_6 , _EXP_BAR));
2443473   +   H1x2_7  = EXP(MIN(H1x2_7 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(MIN(H1x2_7 , _EXP_BAR));
2443474   +END;
MPRINT(EM_DIAGRAM):   END;
2443475   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2443476   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2443477   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2443478   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2443479   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2443480   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2443481   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2443482   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2443483   +END;
MPRINT(EM_DIAGRAM):   END;
2443484   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2443485   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2443486   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2443487   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2443488   +   P_DepVar1  =     0.10431866610268 * H1x1_1  +    -0.48100701431081 * H1x1_2
2443489   +          +      1.1561061025832 * H1x1_3  +    -1.23928879501664 * H1x1_4
2443490   +          +     1.22057275321508 * H1x1_5  +     0.21972347471711 * H1x1_6
2443491   +          +    -0.98998788335495 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.10431866610268 * H1x1_1 + -0.48100701431081 * H1x1_2 + 
1.1561061025832 * H1x1_3 + -1.23928879501664 * H1x1_4 + 1.22057275321508 * H1x1_5 + 
0.21972347471711 * H1x1_6 + -0.98998788335495 * H1x1_7 ;
2443492   +   P_DepVar1  = P_DepVar1  + -4.9985478923183E-10 * H1x2_1
2443493   +          +   2.7724573038604E-6 * H1x2_2  +  -3.3263781208921E-6 * H1x2_3
2443494   +          +     1.90169432265E-8 * H1x2_4  +  -9.7460294571708E-9 * H1x2_5
2443495   +          +  -2.0885179583168E-6 * H1x2_6  +    3.038660449943E-8 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -4.9985478923183E-10 * H1x2_1 + 
2.7724573038604E-6 * H1x2_2 + -3.3263781208921E-6 * H1x2_3 + 1.90169432265E-8 * H1x2_4 + 
-9.7460294571708E-9 * H1x2_5 + -2.0885179583168E-6 * H1x2_6 + 3.038660449943E-8 * H1x2_7 ;
2443496   +   P_DepVar1  =    -2.34500119066237 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.34500119066237 + P_DepVar1 ;
2443497   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2443498   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2443499   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2443500   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2443501   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2443502   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2443503   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2443504   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2443505   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2443506   +END;
MPRINT(EM_DIAGRAM):   END;
2443507   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2443508   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2443509   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2443510   +END;
MPRINT(EM_DIAGRAM):   END;
2443511   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2443512   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2443513   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2443514   +END;
MPRINT(EM_DIAGRAM):   END;
2443515   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2443516   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2443517   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2443518   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2443519   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2443520   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2443521   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2443522   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2443523   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2443524   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2443525   +END;
MPRINT(EM_DIAGRAM):   END;
2443526   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2443527   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2443528   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2443529   +drop
2443530   +H1x1_1
2443531   +H1x1_2
2443532   +H1x1_3
2443533   +H1x1_4
2443534   +H1x1_5
2443535   +H1x1_6
2443536   +H1x1_7
2443537   +H1x2_1
2443538   +H1x2_2
2443539   +H1x2_3
2443540   +H1x2_4
2443541   +H1x2_5
2443542   +H1x2_6
2443543   +H1x2_7
2443544   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x1_6 H1x1_7 H1x2_1 H1x2_2 
H1x2_3 H1x2_4 H1x2_5 H1x2_6 H1x2_7 ;
2443545   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2443546    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2443547    quit;
2443548    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2443549    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2443550    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2443551    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
2443552    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2443553    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4452 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4452 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2443554    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2443555    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2443556    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4452 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4452 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443557    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME 
CREATOR);
2443558    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2443559    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2443560    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2443561    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2443562    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2443563    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443564    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
2443565    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2443566    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2443567    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2443568    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443569    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2443570    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2443571    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2443572    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443573    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2443574    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2443574  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2199 rows and 5 columns.

2443575    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2443576    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2443577    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2199 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 2199 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443578    filename _pref
2443578  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2443579    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2443580    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2443581   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2443582   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2443583   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2443584   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2443585   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2443586   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2443587    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2443588    quit;
2443589    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2443590    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2443591    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2443592    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2443593    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2443594    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443595    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2443596    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2443597    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443598    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2443599    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2443600    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443601    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2443602    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2443603    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2443604    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2443605    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2443606    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.24 seconds
      cpu time            0.01 seconds
      

2443607    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2443608    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2443609    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443610    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2443611    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2443612    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2443613    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443614    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2443615    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2443615  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2443616    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2443617    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2443618    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 2203 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443619    filename _pref
2443619  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2443620    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2443621    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2443622   +
2443623   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2443624   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2443624  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2443625   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2443626   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2443627   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2443628   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2443629   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2443630    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2443631    quit;
2443632    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2443633    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2443634    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2443635    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2443636    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2443637    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443638    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2443639    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2443640    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443641    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2443642    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2443643    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443644    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2443645    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2443646    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2443647    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443648    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2443649    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2443650    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2443651    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2443652    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443653    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2443654    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2443655    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2443656    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443657    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2443658    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2443658  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2443659    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2443660    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2443661    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 2242 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443662    filename _pref
2443662  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2443663    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2443664    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2443665   +
2443666   +
2443667   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2443668   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2443669   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2443670   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2443671   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2443672   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2443673   +
2443674   +
2443675   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2443676   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2443677   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2443678   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2443679   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2443680   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2443681   +
2443682   +
2443683   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2443684   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2443685   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2443686   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2443687   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2443688   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2443689   +
2443690   +
2443691   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2443692   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2443693   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2443694   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2443695   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2443696   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2443697   +
2443698   +
2443699   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2443700   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2443701   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2443702   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2443703   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2443704   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2443705   +
2443706   +
2443707   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2443708   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2443709   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2443710   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2443711   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2443712   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2443713   +
2443714   +
2443715   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2443716   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2443717   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2443718   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2443719   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2443720   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2443721   +
2443722   +
2443723   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2443724   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2443725   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2443726   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2443727   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2443728   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2443729   +if
2443730   +_FILTERNORM1 not in ( '.')
2443731   + and
2443732   +_FILTERNORM2 not in ( '.')
2443733   + and
2443734   +_FILTERNORM3 not in ( '.')
2443735   + and
2443736   +_FILTERNORM4 not in ( '.')
2443737   + and
2443738   +_FILTERNORM5 not in ( '.')
2443739   + and
2443740   +_FILTERNORM6 not in ( '.')
2443741   + and
2443742   +_FILTERNORM7 not in ( ' ')
2443743   + and
2443744   +_FILTERNORM8 not in ( ' ')
2443745   +and
2443746   +( Dt_Customer ne .)
2443747   +and ( Income ne . and (Income<=107000))
2443748   +and ( Kidhome ne .)
2443749   +and ( MntFishProducts ne .)
2443750   +and ( MntFruits ne .)
2443751   +and ( MntGoldProds ne .)
2443752   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2443753   +and ( MntSweetProducts ne .)
2443754   +and ( MntWines ne .)
2443755   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2443756   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2443757   +and ( NumStorePurchases ne .)
2443758   +and ( NumWebPurchases ne .)
2443759   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2443760   +and ( Recency ne .)
2443761   +and ( Teenhome ne .)
2443762   +and ( Year_Birth ne .)
2443763   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2443764   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2443765   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2443766   +end;
MPRINT(EM_DIAGRAM):   end;
2443767   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2443768   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2443769    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2443770    quit;
2443771    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2443772    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2443773    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2443774    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2443775    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2443776    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443777    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2443778    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2443779    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2443780    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2443781    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2443782    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443783    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2443784    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2443785    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2443786    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443787    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2443788    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2443789    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2443790    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2443791    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443792    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2443793    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2443794    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2443795    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2443796    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2443797    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2443797  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2443798    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443799    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2443800    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 2308 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443801    %macro varDept(fcmpdata=,id=);
2443802    %global nobs&id scoreFlag&id;
2443803    %let scoreFlag&id = 0;
2443804    %if &id=1 or ^&fcmpStart %then %do;
2443805    proc sort data=&fcmpdata out=_temp&id nodupkey;
2443806    by NAME;
2443807    where id=&id and LHS in( %let j=1;
2443808    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2443809    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2443810    "&var" %let j = %eval(&j+1);
2443811    %end;
2443812    );
2443813    run;
2443814    %let dsid = %sysfunc(open(_temp&id));
2443815    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2443816    %let dsid = %sysfunc(close(&dsid));
2443817    %if &&nobs&id %then %do;
2443818    %let scoreFlag&id = 1;
2443819    %let fcmpStart = 1;
2443820    %end;
2443821    %else %let fcmpStart = 0;
2443822    %end;
2443823    %else %do;
2443824    proc sort data=&fcmpdata out=_tempid;
2443825    where id=&id;
2443826    by LHS;
2443827    run;
2443828    %let dsid = %sysfunc(open(_tempid));
2443829    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2443830    %let dsid = %sysfunc(close(&dsid));
2443831    %if ^&&nobs&id %then %do;
2443832    proc datasets lib=work nolist;
2443833    delete _tempid;
2443834    run;
2443835    quit;
2443836    %end;
2443837    %else %do;
2443838    data _tempAll;
2443839    set %let j=%eval(&id-1);
2443840    %do x=1 %to &j;
2443841    %if &&nobs&x %then %do;
2443842    _temp&x %end;
2443843    %end;
2443844    ;
2443845    run;
2443846    proc sql;
2443847    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2443847  ! work._tempid p2 where p.name=p2.lhs;
2443848    quit;
2443849    data _temp&id;
2443850    set _temp&id;
2443851    where LHS ne '' and NAME ne '' and Node ne '';
2443852    run;
2443853    proc datasets lib=work nolist;
2443854    delete _tempAll;
2443855    run;
2443856    %let dsid = %sysfunc(open(_temp&id));
2443857    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2443858    %let dsid = %sysfunc(close(&dsid));
2443859    %if ^&&nobs&id %then %do;
2443860    proc datasets lib=work nolist;
2443861    delete _temp&id;
2443862    run;
2443863    quit;
2443864    %end;
2443865    %else %do;
2443866    %let scoreFlag&id = 1;
2443867    data _temp&id;
2443868    set _temp&id;
2443869    where LHS ne NAME and node ne '';
2443870    run;
2443871    %let dsid = %sysfunc(open(_temp&id));
2443872    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2443873    %let dsid = %sysfunc(close(&dsid));
2443874    %if ^&&nobs&id %then %do;
2443875    proc datasets lib=work nolist;
2443876    delete _temp&id;
2443877    run;
2443878    quit;
2443879    %end;
2443880    %else %do;
2443881    proc sort data=_temp&id nodupkey;
2443882    by LHS NAME;
2443883    run;
2443884    %end;
2443885    %end;
2443886    %end;
2443887    %end;
2443888    %mend varDept;
2443889    %macro optCode(outdata=fcmpdata);
2443890    %global fcmpStart;
2443891    %let fcmpStart = 0;
2443892    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2443893    %let NumNodes=9;
2443894    %do k=1 %to &NumNodes;
2443895    %vardept(fcmpdata=&outdata, id=&k);
2443896    %end;
2443897    %mend optCode;
2443898    %optcode(outData=EMWS8.Ensmbl45_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2443899    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2443900    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2443901    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2443902    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443903    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2443904    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2443905    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2443906    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2443907    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2443908    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2443908  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2443909    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443910    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2443911    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2443912    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2443913    filename _pref
2443913  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
2443914    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2443915    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas.
2443916   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2443917   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2443918   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2443919   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2443920   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2443921   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2443922   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2443923   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2443924   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2443925   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2443926   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2443927   +LENGTH _WARN_ $4
2443928   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2443929   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2443930   +
2443931   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2443932   +
2443933   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2443934   +
2443935   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2443936   +
2443937   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2443938   +
2443939   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2443940   +
2443941   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2443942   +
2443943   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2443944   +
2443945   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2443946   +
2443947   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2443948   +
2443949   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2443950   +
2443951   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2443952   +
2443953   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2443954   +
2443955   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2443956   +
2443957   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2443958   +
2443959   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2443960   +
2443961   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2443962   +
2443963   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2443964   +
2443965   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2443966   +
2443967   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2443968   +
2443969   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2443970   +
2443971   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2443972   +
2443973   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2443974   +
2443975   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2443976   +
2443977   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2443978   +
2443979   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2443980   +
2443981   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2443982   +
2443983   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2443984   +
2443985   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2443986   +
2443987   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2443988   +
2443989   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2443990   +
2443991   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2443992   +
2443993   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2443994   +
2443995   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2443996   +
2443997   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2443998   +
2443999   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2444000   +
2444001   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2444002   +
2444003   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2444004   +
2444005   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2444006   +
2444007   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2444008   +
2444009   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2444010   +
2444011   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2444012   +
2444013   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2444014   +
2444015   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2444016   +
2444017   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2444018   +
2444019   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2444020   +
2444021   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2444022   +
2444023   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2444024   +
2444025   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2444026   +
2444027   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2444028   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2444029   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2444030   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2444031   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2444032   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2444033   +end;
MPRINT(EM_DIAGRAM):   end;
2444034   +else do;
MPRINT(EM_DIAGRAM):   else do;
2444035   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2444036   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2444037   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2444038   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2444039   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2444040   +   end;
MPRINT(EM_DIAGRAM):   end;
2444041   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2444042   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2444043   +   end;
MPRINT(EM_DIAGRAM):   end;
2444044   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2444045   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2444046   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2444047   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2444048   +   end;
MPRINT(EM_DIAGRAM):   end;
2444049   +end;
MPRINT(EM_DIAGRAM):   end;
2444050   +
2444051   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2444052   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2444053   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2444054   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2444055   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2444056   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2444057   +end;
MPRINT(EM_DIAGRAM):   end;
2444058   +else do;
MPRINT(EM_DIAGRAM):   else do;
2444059   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2444060   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2444061   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2444062   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2444063   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2444064   +   end;
MPRINT(EM_DIAGRAM):   end;
2444065   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2444066   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2444067   +   end;
MPRINT(EM_DIAGRAM):   end;
2444068   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2444069   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2444070   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2444071   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2444072   +   end;
MPRINT(EM_DIAGRAM):   end;
2444073   +end;
MPRINT(EM_DIAGRAM):   end;
2444074   +
2444075   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2444076   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2444077   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2444078   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2444079   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2444080   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2444081   +end;
MPRINT(EM_DIAGRAM):   end;
2444082   +else do;
MPRINT(EM_DIAGRAM):   else do;
2444083   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2444084   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2444085   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2444086   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2444087   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2444088   +   end;
MPRINT(EM_DIAGRAM):   end;
2444089   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2444090   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2444091   +   end;
MPRINT(EM_DIAGRAM):   end;
2444092   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2444093   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2444094   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2444095   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2444096   +   end;
MPRINT(EM_DIAGRAM):   end;
2444097   +end;
MPRINT(EM_DIAGRAM):   end;
2444098   +
2444099   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2444100   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2444101   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2444102   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2444103   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2444104   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2444105   +end;
MPRINT(EM_DIAGRAM):   end;
2444106   +else do;
MPRINT(EM_DIAGRAM):   else do;
2444107   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2444108   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2444109   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2444110   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2444111   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2444112   +   end;
MPRINT(EM_DIAGRAM):   end;
2444113   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2444114   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2444115   +   end;
MPRINT(EM_DIAGRAM):   end;
2444116   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2444117   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2444118   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2444119   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2444120   +   end;
MPRINT(EM_DIAGRAM):   end;
2444121   +end;
MPRINT(EM_DIAGRAM):   end;
2444122   +
2444123   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2444124   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2444125   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2444126   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2444127   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2444128   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2444129   +end;
MPRINT(EM_DIAGRAM):   end;
2444130   +else do;
MPRINT(EM_DIAGRAM):   else do;
2444131   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2444132   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2444133   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2444134   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2444135   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2444136   +   end;
MPRINT(EM_DIAGRAM):   end;
2444137   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2444138   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2444139   +   end;
MPRINT(EM_DIAGRAM):   end;
2444140   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2444141   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2444142   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2444143   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2444144   +   end;
MPRINT(EM_DIAGRAM):   end;
2444145   +end;
MPRINT(EM_DIAGRAM):   end;
2444146   +
2444147   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2444148   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2444149   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2444150   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2444151   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2444152   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2444153   +end;
MPRINT(EM_DIAGRAM):   end;
2444154   +else do;
MPRINT(EM_DIAGRAM):   else do;
2444155   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2444156   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2444157   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2444158   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2444159   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2444160   +   end;
MPRINT(EM_DIAGRAM):   end;
2444161   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2444162   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2444163   +   end;
MPRINT(EM_DIAGRAM):   end;
2444164   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2444165   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2444166   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2444167   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2444168   +   end;
MPRINT(EM_DIAGRAM):   end;
2444169   +end;
MPRINT(EM_DIAGRAM):   end;
2444170   +
2444171   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2444172   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2444173   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2444174   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2444175   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2444176   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2444177   +end;
MPRINT(EM_DIAGRAM):   end;
2444178   +else do;
MPRINT(EM_DIAGRAM):   else do;
2444179   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2444180   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2444181   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2444182   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2444183   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2444184   +   end;
MPRINT(EM_DIAGRAM):   end;
2444185   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2444186   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2444187   +   end;
MPRINT(EM_DIAGRAM):   end;
2444188   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2444189   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2444190   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2444191   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2444192   +   end;
MPRINT(EM_DIAGRAM):   end;
2444193   +end;
MPRINT(EM_DIAGRAM):   end;
2444194   +
2444195   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2444196   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2444197   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2444198   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2444199   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2444200   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2444201   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2444202   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2444203   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2444204   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2444205   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2444206   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2444207   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2444208   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2444209   +end;
MPRINT(EM_DIAGRAM):   end;
2444210   +else do;
MPRINT(EM_DIAGRAM):   else do;
2444211   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2444212   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2444213   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2444214   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2444215   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2444216   +   end;
MPRINT(EM_DIAGRAM):   end;
2444217   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2444218   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2444219   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2444220   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2444221   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2444222   +   end;
MPRINT(EM_DIAGRAM):   end;
2444223   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2444224   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2444225   +   end;
MPRINT(EM_DIAGRAM):   end;
2444226   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2444227   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2444228   +   end;
MPRINT(EM_DIAGRAM):   end;
2444229   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2444230   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2444231   +   end;
MPRINT(EM_DIAGRAM):   end;
2444232   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2444233   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2444234   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2444235   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2444236   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2444237   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2444238   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2444239   +   end;
MPRINT(EM_DIAGRAM):   end;
2444240   +end;
MPRINT(EM_DIAGRAM):   end;
2444241   +
2444242   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2444243   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2444244   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2444245   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2444246   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2444247   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2444248   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2444249   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2444250   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2444251   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2444252   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2444253   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2444254   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2444255   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2444256   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2444257   +end;
MPRINT(EM_DIAGRAM):   end;
2444258   +else do;
MPRINT(EM_DIAGRAM):   else do;
2444259   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2444260   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2444261   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2444262   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2444263   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2444264   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2444265   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2444266   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2444267   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2444268   +         end;
MPRINT(EM_DIAGRAM):   end;
2444269   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2444270   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2444271   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2444272   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2444273   +            end;
MPRINT(EM_DIAGRAM):   end;
2444274   +         end;
MPRINT(EM_DIAGRAM):   end;
2444275   +      end;
MPRINT(EM_DIAGRAM):   end;
2444276   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2444277   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2444278   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2444279   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2444280   +         end;
MPRINT(EM_DIAGRAM):   end;
2444281   +      end;
MPRINT(EM_DIAGRAM):   end;
2444282   +   end;
MPRINT(EM_DIAGRAM):   end;
2444283   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2444284   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2444285   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2444286   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2444287   +      end;
MPRINT(EM_DIAGRAM):   end;
2444288   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2444289   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2444290   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2444291   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2444292   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2444293   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2444294   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2444295   +         end;
MPRINT(EM_DIAGRAM):   end;
2444296   +      end;
MPRINT(EM_DIAGRAM):   end;
2444297   +   end;
MPRINT(EM_DIAGRAM):   end;
2444298   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2444299   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2444300   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2444301   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2444302   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2444303   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2444304   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2444305   +   end;
MPRINT(EM_DIAGRAM):   end;
2444306   +end;
MPRINT(EM_DIAGRAM):   end;
2444307   +
2444308   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2444309   +*** Checking missing input Interval
2444310   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2444311   +
2444312   +IF NMISS(
2444313   +   AcceptedCmpTotal ,
2444314   +   Age ,
2444315   +   Frq ,
2444316   +   Income ,
2444317   +   Kidhome ,
2444318   +   Mnt ,
2444319   +   MntFishProducts ,
2444320   +   MntFruits ,
2444321   +   MntGoldProds ,
2444322   +   MntMeatProducts ,
2444323   +   MntSweetProducts ,
2444324   +   MntWines ,
2444325   +   MonthsAsCustomer ,
2444326   +   NumCatalogPurchases ,
2444327   +   NumDealsPurchases ,
2444328   +   NumDistPurchases ,
2444329   +   NumStorePurchases ,
2444330   +   NumWebPurchases ,
2444331   +   NumWebVisitsMonth ,
2444332   +   RFMstat ,
2444333   +   RMntFrq ,
2444334   +   Recency ,
2444335   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2444336   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2444337   +
2444338   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2444339   +END;
MPRINT(EM_DIAGRAM):   END;
2444340   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2444341   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2444342   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2444343   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2444344   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2444345   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2444346   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2444347   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2444348   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2444349   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2444350   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2444351   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2444352   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2444353   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2444354   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2444355   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2444356   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2444357   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2444358   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2444359   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2444360   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2444361   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2444362   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2444363   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2444364   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2444365   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2444366   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2444367   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2444368   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2444369   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2444370   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2444371   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2444372   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2444373   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2444374   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2444375   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2444376   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2444377   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2444378   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2444379   +END;
MPRINT(EM_DIAGRAM):   END;
2444380   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2444381   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2444382   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2444383   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2444384   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2444385   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2444386   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2444387   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2444388   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2444389   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2444390   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2444391   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2444392   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2444393   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2444394   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2444395   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2444396   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2444397   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2444398   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2444399   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2444400   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2444401   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2444402   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2444403   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2444404   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2444405   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2444406   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2444407   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2444408   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2444409   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2444410   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2444411   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2444412   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2444413   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2444414   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2444415   +   ELSE S_NumCatalogPurchases
2444416   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2444417   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2444418   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2444419   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2444420   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2444421   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2444422   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2444423   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2444424   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2444425   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2444426   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2444427   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2444428   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2444429   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2444430   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2444431   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2444432   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2444433   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2444434   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2444435   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2444436   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2444437   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2444438   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2444439   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2444440   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2444441   +END;
MPRINT(EM_DIAGRAM):   END;
2444442   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2444443   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2444444   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2444445   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2444446   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2444447   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2444448   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2444449   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2444450   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2444451   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2444452   +   H1x1_1  =     0.26454269681311 * S_AcceptedCmpTotal
2444453   +          +    -0.01281904987956 * S_Age  +    -0.19309516267581 * S_Frq
2444454   +          +    -0.19077579202378 * S_Income  +      0.1806651018562 *
2444455   +        S_Kidhome  +    -0.31002612826472 * S_Mnt  +    -0.05901796512011 *
2444456   +        S_MntFishProducts  +    -0.03760930101165 * S_MntFruits
2444457   +          +     0.01720900715043 * S_MntGoldProds  +     0.21472292961422 *
2444458   +        S_MntMeatProducts  +    -0.02880706568684 * S_MntSweetProducts
2444459   +          +    -0.37993583170844 * S_MntWines  +    -0.00848444156361 *
2444460   +        S_MonthsAsCustomer  +     0.15939611818942 * S_NumCatalogPurchases
2444461   +          +     0.08390531145773 * S_NumDealsPurchases
2444462   +          +    -0.29505970645775 * S_NumDistPurchases
2444463   +          +    -0.13820571170194 * S_NumStorePurchases
2444464   +          +     0.11468011313368 * S_NumWebPurchases
2444465   +          +    -0.18421241371843 * S_NumWebVisitsMonth
2444466   +          +     0.11564064971509 * S_RFMstat  +    -0.02223928001432 *
2444467   +        S_RMntFrq  +     0.18022777532589 * S_Recency
2444468   +          +     0.14654831145379 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26454269681311 * S_AcceptedCmpTotal + -0.01281904987956 * 
S_Age + -0.19309516267581 * S_Frq + -0.19077579202378 * S_Income + 0.1806651018562 * S_Kidhome 
+ -0.31002612826472 * S_Mnt + -0.05901796512011 * S_MntFishProducts + -0.03760930101165 * 
S_MntFruits + 0.01720900715043 * S_MntGoldProds + 0.21472292961422 * S_MntMeatProducts + 
-0.02880706568684 * S_MntSweetProducts + -0.37993583170844 * S_MntWines + -0.00848444156361 * 
S_MonthsAsCustomer + 0.15939611818942 * S_NumCatalogPurchases + 0.08390531145773 * 
S_NumDealsPurchases + -0.29505970645775 * S_NumDistPurchases + -0.13820571170194 * 
S_NumStorePurchases + 0.11468011313368 * S_NumWebPurchases + -0.18421241371843 * 
S_NumWebVisitsMonth + 0.11564064971509 * S_RFMstat + -0.02223928001432 * S_RMntFrq + 
0.18022777532589 * S_Recency + 0.14654831145379 * S_Teenhome ;
2444469   +   H1x1_2  =     0.27055972468014 * S_AcceptedCmpTotal
2444470   +          +      0.0025862891193 * S_Age  +    -0.07147307366817 * S_Frq
2444471   +          +      0.1883776136263 * S_Income  +    -0.12712510891181 *
2444472   +        S_Kidhome  +    -0.42099927948686 * S_Mnt  +    -0.07047631817862 *
2444473   +        S_MntFishProducts  +    -0.06658475152878 * S_MntFruits
2444474   +          +     0.01943025682869 * S_MntGoldProds  +     0.29481794109465 *
2444475   +        S_MntMeatProducts  +    -0.06573502094591 * S_MntSweetProducts
2444476   +          +    -0.46266722725002 * S_MntWines  +    -0.00472333181469 *
2444477   +        S_MonthsAsCustomer  +     0.35081452017576 * S_NumCatalogPurchases
2444478   +          +     0.18009076035363 * S_NumDealsPurchases
2444479   +          +     0.03853861006587 * S_NumDistPurchases
2444480   +          +    -0.05118063952874 * S_NumStorePurchases
2444481   +          +    -0.03282286120473 * S_NumWebPurchases
2444482   +          +     0.31160900419026 * S_NumWebVisitsMonth
2444483   +          +     0.08027884378429 * S_RFMstat  +     0.39057239541393 *
2444484   +        S_RMntFrq  +    -0.34796767111274 * S_Recency
2444485   +          +    -0.12099758522271 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27055972468014 * S_AcceptedCmpTotal + 0.0025862891193 * S_Age 
+ -0.07147307366817 * S_Frq + 0.1883776136263 * S_Income + -0.12712510891181 * S_Kidhome + 
-0.42099927948686 * S_Mnt + -0.07047631817862 * S_MntFishProducts + -0.06658475152878 * 
S_MntFruits + 0.01943025682869 * S_MntGoldProds + 0.29481794109465 * S_MntMeatProducts + 
-0.06573502094591 * S_MntSweetProducts + -0.46266722725002 * S_MntWines + -0.00472333181469 * 
S_MonthsAsCustomer + 0.35081452017576 * S_NumCatalogPurchases + 0.18009076035363 * 
S_NumDealsPurchases + 0.03853861006587 * S_NumDistPurchases + -0.05118063952874 * 
S_NumStorePurchases + -0.03282286120473 * S_NumWebPurchases + 0.31160900419026 * 
S_NumWebVisitsMonth + 0.08027884378429 * S_RFMstat + 0.39057239541393 * S_RMntFrq + 
-0.34796767111274 * S_Recency + -0.12099758522271 * S_Teenhome ;
2444486   +   H1x1_1  = H1x1_1  +     0.12539246465239 * AcceptedCmp10
2444487   +          +     0.38473652869745 * AcceptedCmp20  +     0.29820983391886 *
2444488   +        AcceptedCmp30  +     0.29085092779792 * AcceptedCmp40
2444489   +          +     0.18918195914981 * AcceptedCmp50  +    -0.26812516781697 *
2444490   +        Complain0  +    -0.08804110897148 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.12539246465239 * AcceptedCmp10 + 0.38473652869745 * 
AcceptedCmp20 + 0.29820983391886 * AcceptedCmp30 + 0.29085092779792 * AcceptedCmp40 + 
0.18918195914981 * AcceptedCmp50 + -0.26812516781697 * Complain0 + -0.08804110897148 * 
HigherEducationBinary0 ;
2444491   +   H1x1_2  = H1x1_2  +    -0.02312897825565 * AcceptedCmp10
2444492   +          +     0.03909481703523 * AcceptedCmp20  +     0.02531081539721 *
2444493   +        AcceptedCmp30  +     0.03109641300151 * AcceptedCmp40
2444494   +          +     0.01985718189621 * AcceptedCmp50  +     0.13425456375085 *
2444495   +        Complain0  +    -0.08222486590117 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.02312897825565 * AcceptedCmp10 + 0.03909481703523 * 
AcceptedCmp20 + 0.02531081539721 * AcceptedCmp30 + 0.03109641300151 * AcceptedCmp40 + 
0.01985718189621 * AcceptedCmp50 + 0.13425456375085 * Complain0 + -0.08222486590117 * 
HigherEducationBinary0 ;
2444496   +   H1x1_1  = H1x1_1  +    -0.01975862863669 * Education2n_Cycle
2444497   +          +     0.14654730697956 * EducationBasic  +    -0.00459515646452 *
2444498   +        EducationGraduation  +     0.01586948449127 * EducationMaster
2444499   +          +    -0.04750981393889 * Marital_StatusDivorced
2444500   +          +     0.28216925676677 * Marital_StatusMarried
2444501   +          +    -0.20757827413964 * Marital_StatusSingle
2444502   +          +     0.22622509024122 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.01975862863669 * Education2n_Cycle + 
0.14654730697956 * EducationBasic + -0.00459515646452 * EducationGraduation + 0.01586948449127 
* EducationMaster + -0.04750981393889 * Marital_StatusDivorced + 0.28216925676677 * 
Marital_StatusMarried + -0.20757827413964 * Marital_StatusSingle + 0.22622509024122 * 
Marital_StatusTogether ;
2444503   +   H1x1_2  = H1x1_2  +     0.12009608969049 * Education2n_Cycle
2444504   +          +     0.01793460710056 * EducationBasic  +    -0.04257710051346 *
2444505   +        EducationGraduation  +    -0.06975725710115 * EducationMaster
2444506   +          +     0.05981919620577 * Marital_StatusDivorced
2444507   +          +    -0.17161573846062 * Marital_StatusMarried
2444508   +          +     0.15869440681091 * Marital_StatusSingle
2444509   +          +    -0.13282372850158 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12009608969049 * Education2n_Cycle + 
0.01793460710056 * EducationBasic + -0.04257710051346 * EducationGraduation + 
-0.06975725710115 * EducationMaster + 0.05981919620577 * Marital_StatusDivorced + 
-0.17161573846062 * Marital_StatusMarried + 0.15869440681091 * Marital_StatusSingle + 
-0.13282372850158 * Marital_StatusTogether ;
2444510   +   H1x1_1  =     0.87962277715971 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.87962277715971 + H1x1_1 ;
2444511   +   H1x1_2  =    -0.62570339696782 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.62570339696782 + H1x1_2 ;
2444512   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2444513   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2444514   +END;
MPRINT(EM_DIAGRAM):   END;
2444515   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2444516   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2444517   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2444518   +END;
MPRINT(EM_DIAGRAM):   END;
2444519   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2444520   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2444521   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2444522   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2444523   +   H1x2_1  =      0.1719390672121 * S_AcceptedCmpTotal
2444524   +          +     0.23586839288361 * S_Age  +    -1.85384134180372 * S_Frq
2444525   +          +    -0.43561758063577 * S_Income  +     -2.5581498901473 *
2444526   +        S_Kidhome  +      1.7031888248428 * S_Mnt  +     0.84982621124736 *
2444527   +        S_MntFishProducts  +     0.25990173458485 * S_MntFruits
2444528   +          +    -2.80730469703961 * S_MntGoldProds  +     0.64923500711702 *
2444529   +        S_MntMeatProducts  +     0.27458645458502 * S_MntSweetProducts
2444530   +          +    -0.47723589182372 * S_MntWines  +    -0.66777488145507 *
2444531   +        S_MonthsAsCustomer  +    -0.46364414558282 * S_NumCatalogPurchases
2444532   +          +     0.00741910846933 * S_NumDealsPurchases
2444533   +          +       1.334289252268 * S_NumDistPurchases
2444534   +          +    -0.29851567180932 * S_NumStorePurchases
2444535   +          +    -0.52115313259666 * S_NumWebPurchases
2444536   +          +     0.93907168501909 * S_NumWebVisitsMonth
2444537   +          +    -0.26126881318451 * S_RFMstat  +     -1.3003763542929 *
2444538   +        S_RMntFrq  +    -0.12807368149309 * S_Recency
2444539   +          +    -0.21296116974623 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.1719390672121 * S_AcceptedCmpTotal + 0.23586839288361 * S_Age 
+ -1.85384134180372 * S_Frq + -0.43561758063577 * S_Income + -2.5581498901473 * S_Kidhome + 
1.7031888248428 * S_Mnt + 0.84982621124736 * S_MntFishProducts + 0.25990173458485 * 
S_MntFruits + -2.80730469703961 * S_MntGoldProds + 0.64923500711702 * S_MntMeatProducts + 
0.27458645458502 * S_MntSweetProducts + -0.47723589182372 * S_MntWines + -0.66777488145507 * 
S_MonthsAsCustomer + -0.46364414558282 * S_NumCatalogPurchases + 0.00741910846933 * 
S_NumDealsPurchases + 1.334289252268 * S_NumDistPurchases + -0.29851567180932 * 
S_NumStorePurchases + -0.52115313259666 * S_NumWebPurchases + 0.93907168501909 * 
S_NumWebVisitsMonth + -0.26126881318451 * S_RFMstat + -1.3003763542929 * S_RMntFrq + 
-0.12807368149309 * S_Recency + -0.21296116974623 * S_Teenhome ;
2444540   +   H1x2_2  =     0.30897763700303 * S_AcceptedCmpTotal
2444541   +          +    -0.77727886396317 * S_Age  +    -0.79298582494973 * S_Frq
2444542   +          +    -1.73199353738093 * S_Income  +     1.12984956989288 *
2444543   +        S_Kidhome  +    -1.36701096993984 * S_Mnt  +    -0.21063950702424 *
2444544   +        S_MntFishProducts  +    -0.20027336686257 * S_MntFruits
2444545   +          +    -0.06955810418489 * S_MntGoldProds  +     0.16672767423533 *
2444546   +        S_MntMeatProducts  +    -1.56675269740541 * S_MntSweetProducts
2444547   +          +     1.85366479127485 * S_MntWines  +    -0.58178621903094 *
2444548   +        S_MonthsAsCustomer  +     1.31024619253935 * S_NumCatalogPurchases
2444549   +          +     1.60427001186844 * S_NumDealsPurchases
2444550   +          +    -0.18447618033353 * S_NumDistPurchases
2444551   +          +    -1.29966073003539 * S_NumStorePurchases
2444552   +          +    -1.12373457341536 * S_NumWebPurchases
2444553   +          +     1.46099221440494 * S_NumWebVisitsMonth
2444554   +          +     0.17795038564406 * S_RFMstat  +    -0.82372068140832 *
2444555   +        S_RMntFrq  +      0.4480370534729 * S_Recency
2444556   +          +     0.19272737691538 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30897763700303 * S_AcceptedCmpTotal + -0.77727886396317 * 
S_Age + -0.79298582494973 * S_Frq + -1.73199353738093 * S_Income + 1.12984956989288 * 
S_Kidhome + -1.36701096993984 * S_Mnt + -0.21063950702424 * S_MntFishProducts + 
-0.20027336686257 * S_MntFruits + -0.06955810418489 * S_MntGoldProds + 0.16672767423533 * 
S_MntMeatProducts + -1.56675269740541 * S_MntSweetProducts + 1.85366479127485 * S_MntWines + 
-0.58178621903094 * S_MonthsAsCustomer + 1.31024619253935 * S_NumCatalogPurchases + 
1.60427001186844 * S_NumDealsPurchases + -0.18447618033353 * S_NumDistPurchases + 
-1.29966073003539 * S_NumStorePurchases + -1.12373457341536 * S_NumWebPurchases + 
1.46099221440494 * S_NumWebVisitsMonth + 0.17795038564406 * S_RFMstat + -0.82372068140832 * 
S_RMntFrq + 0.4480370534729 * S_Recency + 0.19272737691538 * S_Teenhome ;
2444557   +   H1x2_1  = H1x2_1  +     -0.6569942252053 * AcceptedCmp10
2444558   +          +    -0.89152555599538 * AcceptedCmp20  +     1.00488730476017 *
2444559   +        AcceptedCmp30  +     0.34286042692068 * AcceptedCmp40
2444560   +          +    -1.19198820362508 * AcceptedCmp50  +    -0.86571531914686 *
2444561   +        Complain0  +     0.14303136037365 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.6569942252053 * AcceptedCmp10 + -0.89152555599538 * 
AcceptedCmp20 + 1.00488730476017 * AcceptedCmp30 + 0.34286042692068 * AcceptedCmp40 + 
-1.19198820362508 * AcceptedCmp50 + -0.86571531914686 * Complain0 + 0.14303136037365 * 
HigherEducationBinary0 ;
2444562   +   H1x2_2  = H1x2_2  +     1.79481763784518 * AcceptedCmp10
2444563   +          +    -2.85912280013336 * AcceptedCmp20  +     0.16890012708431 *
2444564   +        AcceptedCmp30  +     0.94639083182751 * AcceptedCmp40
2444565   +          +    -0.62141828005946 * AcceptedCmp50  +    -0.39098882491277 *
2444566   +        Complain0  +     0.85700787946581 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.79481763784518 * AcceptedCmp10 + -2.85912280013336 * 
AcceptedCmp20 + 0.16890012708431 * AcceptedCmp30 + 0.94639083182751 * AcceptedCmp40 + 
-0.62141828005946 * AcceptedCmp50 + -0.39098882491277 * Complain0 + 0.85700787946581 * 
HigherEducationBinary0 ;
2444567   +   H1x2_1  = H1x2_1  +      0.0737054452993 * Education2n_Cycle
2444568   +          +       0.362372261752 * EducationBasic  +      -1.485941295677 *
2444569   +        EducationGraduation  +    -0.81257694655594 * EducationMaster
2444570   +          +     0.59819559998538 * Marital_StatusDivorced
2444571   +          +     0.92957772553633 * Marital_StatusMarried
2444572   +          +    -1.11796266958894 * Marital_StatusSingle
2444573   +          +     -2.0576132087002 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.0737054452993 * Education2n_Cycle + 0.362372261752 * 
EducationBasic + -1.485941295677 * EducationGraduation + -0.81257694655594 * EducationMaster + 
0.59819559998538 * Marital_StatusDivorced + 0.92957772553633 * Marital_StatusMarried + 
-1.11796266958894 * Marital_StatusSingle + -2.0576132087002 * Marital_StatusTogether ;
2444574   +   H1x2_2  = H1x2_2  +    -1.10016528859962 * Education2n_Cycle
2444575   +          +    -1.46816646165468 * EducationBasic  +    -0.11241499152788 *
2444576   +        EducationGraduation  +    -0.65110715251273 * EducationMaster
2444577   +          +      1.0870909562212 * Marital_StatusDivorced
2444578   +          +     1.50333961797515 * Marital_StatusMarried
2444579   +          +    -1.41407780765932 * Marital_StatusSingle
2444580   +          +    -0.52528072358697 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.10016528859962 * Education2n_Cycle + 
-1.46816646165468 * EducationBasic + -0.11241499152788 * EducationGraduation + 
-0.65110715251273 * EducationMaster + 1.0870909562212 * Marital_StatusDivorced + 
1.50333961797515 * Marital_StatusMarried + -1.41407780765932 * Marital_StatusSingle + 
-0.52528072358697 * Marital_StatusTogether ;
2444581   +   H1x2_1  =     1.46376024534028 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.46376024534028 + H1x2_1 ;
2444582   +   H1x2_2  =    -0.21341526379366 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.21341526379366 + H1x2_2 ;
2444583   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2444584   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2444585   +   H1x2_1  = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(MIN(-0.5 * H1x2_1 **2, _EXP_BAR));
2444586   +   H1x2_2  = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(MIN(-0.5 * H1x2_2 **2, _EXP_BAR));
2444587   +END;
MPRINT(EM_DIAGRAM):   END;
2444588   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2444589   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2444590   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2444591   +END;
MPRINT(EM_DIAGRAM):   END;
2444592   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2444593   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2444594   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2444595   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2444596   +   H1x3_1  =     0.29299707972123 * S_AcceptedCmpTotal
2444597   +          +     1.39797329466471 * S_Age  +    -2.02673480388837 * S_Frq
2444598   +          +    -1.09682777516542 * S_Income  +    -1.22241109888643 *
2444599   +        S_Kidhome  +    -1.35766076466324 * S_Mnt  +    -2.90812690982576 *
2444600   +        S_MntFishProducts  +    -0.48174923069843 * S_MntFruits
2444601   +          +     1.57335575145195 * S_MntGoldProds  +    -0.55248873552176 *
2444602   +        S_MntMeatProducts  +     0.54536808091745 * S_MntSweetProducts
2444603   +          +    -0.41516162035296 * S_MntWines  +     0.07715050596116 *
2444604   +        S_MonthsAsCustomer  +    -2.18785324142159 * S_NumCatalogPurchases
2444605   +          +     -1.1174504455343 * S_NumDealsPurchases
2444606   +          +    -0.18561253113498 * S_NumDistPurchases
2444607   +          +    -0.35231054612792 * S_NumStorePurchases
2444608   +          +      0.9249490354172 * S_NumWebPurchases
2444609   +          +    -0.79868535147175 * S_NumWebVisitsMonth
2444610   +          +    -0.17158151681124 * S_RFMstat  +     -0.9870286843901 *
2444611   +        S_RMntFrq  +     0.62439123699986 * S_Recency
2444612   +          +    -0.45845377794308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.29299707972123 * S_AcceptedCmpTotal + 1.39797329466471 * 
S_Age + -2.02673480388837 * S_Frq + -1.09682777516542 * S_Income + -1.22241109888643 * 
S_Kidhome + -1.35766076466324 * S_Mnt + -2.90812690982576 * S_MntFishProducts + 
-0.48174923069843 * S_MntFruits + 1.57335575145195 * S_MntGoldProds + -0.55248873552176 * 
S_MntMeatProducts + 0.54536808091745 * S_MntSweetProducts + -0.41516162035296 * S_MntWines + 
0.07715050596116 * S_MonthsAsCustomer + -2.18785324142159 * S_NumCatalogPurchases + 
-1.1174504455343 * S_NumDealsPurchases + -0.18561253113498 * S_NumDistPurchases + 
-0.35231054612792 * S_NumStorePurchases + 0.9249490354172 * S_NumWebPurchases + 
-0.79868535147175 * S_NumWebVisitsMonth + -0.17158151681124 * S_RFMstat + -0.9870286843901 * 
S_RMntFrq + 0.62439123699986 * S_Recency + -0.45845377794308 * S_Teenhome ;
2444613   +   H1x3_2  =    -1.07483179793421 * S_AcceptedCmpTotal
2444614   +          +     1.03558600048684 * S_Age  +     1.11497695424161 * S_Frq
2444615   +          +     0.27297296926116 * S_Income  +     0.77036019999023 *
2444616   +        S_Kidhome  +     0.02567848304605 * S_Mnt  +     0.38661977628442 *
2444617   +        S_MntFishProducts  +    -0.36751750771945 * S_MntFruits
2444618   +          +     0.93924107558212 * S_MntGoldProds  +     0.93046859422523 *
2444619   +        S_MntMeatProducts  +    -0.46124679979068 * S_MntSweetProducts
2444620   +          +    -0.45348234529786 * S_MntWines  +     1.60057890623864 *
2444621   +        S_MonthsAsCustomer  +    -1.74657448073162 * S_NumCatalogPurchases
2444622   +          +     1.05434863590054 * S_NumDealsPurchases
2444623   +          +    -0.73255174632068 * S_NumDistPurchases
2444624   +          +     0.53949953455044 * S_NumStorePurchases
2444625   +          +    -0.61709467816649 * S_NumWebPurchases
2444626   +          +     1.36235282484348 * S_NumWebVisitsMonth
2444627   +          +     -0.0352720913953 * S_RFMstat  +     0.14001475375682 *
2444628   +        S_RMntFrq  +    -0.24276831608869 * S_Recency
2444629   +          +     0.09762798365722 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -1.07483179793421 * S_AcceptedCmpTotal + 1.03558600048684 * 
S_Age + 1.11497695424161 * S_Frq + 0.27297296926116 * S_Income + 0.77036019999023 * S_Kidhome 
+ 0.02567848304605 * S_Mnt + 0.38661977628442 * S_MntFishProducts + -0.36751750771945 * 
S_MntFruits + 0.93924107558212 * S_MntGoldProds + 0.93046859422523 * S_MntMeatProducts + 
-0.46124679979068 * S_MntSweetProducts + -0.45348234529786 * S_MntWines + 1.60057890623864 * 
S_MonthsAsCustomer + -1.74657448073162 * S_NumCatalogPurchases + 1.05434863590054 * 
S_NumDealsPurchases + -0.73255174632068 * S_NumDistPurchases + 0.53949953455044 * 
S_NumStorePurchases + -0.61709467816649 * S_NumWebPurchases + 1.36235282484348 * 
S_NumWebVisitsMonth + -0.0352720913953 * S_RFMstat + 0.14001475375682 * S_RMntFrq + 
-0.24276831608869 * S_Recency + 0.09762798365722 * S_Teenhome ;
2444630   +   H1x3_1  = H1x3_1  +    -0.94208577947628 * AcceptedCmp10
2444631   +          +     -0.5233017415423 * AcceptedCmp20  +    -0.76900164563331 *
2444632   +        AcceptedCmp30  +    -0.79512141055877 * AcceptedCmp40
2444633   +          +     0.20126599116957 * AcceptedCmp50  +    -0.43046555689873 *
2444634   +        Complain0  +     0.31565229685815 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.94208577947628 * AcceptedCmp10 + -0.5233017415423 * 
AcceptedCmp20 + -0.76900164563331 * AcceptedCmp30 + -0.79512141055877 * AcceptedCmp40 + 
0.20126599116957 * AcceptedCmp50 + -0.43046555689873 * Complain0 + 0.31565229685815 * 
HigherEducationBinary0 ;
2444635   +   H1x3_2  = H1x3_2  +    -1.24961064002454 * AcceptedCmp10
2444636   +          +    -0.89859693224833 * AcceptedCmp20  +     1.15884958881232 *
2444637   +        AcceptedCmp30  +     0.38250389164472 * AcceptedCmp40
2444638   +          +     0.47123004358879 * AcceptedCmp50  +     -2.1232679844098 *
2444639   +        Complain0  +     0.97226091069674 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.24961064002454 * AcceptedCmp10 + -0.89859693224833 
* AcceptedCmp20 + 1.15884958881232 * AcceptedCmp30 + 0.38250389164472 * AcceptedCmp40 + 
0.47123004358879 * AcceptedCmp50 + -2.1232679844098 * Complain0 + 0.97226091069674 * 
HigherEducationBinary0 ;
2444640   +   H1x3_1  = H1x3_1  +    -0.07500306665919 * Education2n_Cycle
2444641   +          +     0.04122924311058 * EducationBasic  +    -0.49410102102951 *
2444642   +        EducationGraduation  +    -0.45477734340809 * EducationMaster
2444643   +          +     0.22253248036322 * Marital_StatusDivorced
2444644   +          +    -1.72455332745001 * Marital_StatusMarried
2444645   +          +     0.57787272107232 * Marital_StatusSingle
2444646   +          +     0.16267074825086 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.07500306665919 * Education2n_Cycle + 
0.04122924311058 * EducationBasic + -0.49410102102951 * EducationGraduation + 
-0.45477734340809 * EducationMaster + 0.22253248036322 * Marital_StatusDivorced + 
-1.72455332745001 * Marital_StatusMarried + 0.57787272107232 * Marital_StatusSingle + 
0.16267074825086 * Marital_StatusTogether ;
2444647   +   H1x3_2  = H1x3_2  +    -0.21560233542581 * Education2n_Cycle
2444648   +          +    -0.36476815429069 * EducationBasic  +     1.63334881201349 *
2444649   +        EducationGraduation  +    -1.12620982139344 * EducationMaster
2444650   +          +     0.14637124403046 * Marital_StatusDivorced
2444651   +          +     0.18905186437528 * Marital_StatusMarried
2444652   +          +     0.00511958458521 * Marital_StatusSingle
2444653   +          +      -0.915980703129 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.21560233542581 * Education2n_Cycle + 
-0.36476815429069 * EducationBasic + 1.63334881201349 * EducationGraduation + 
-1.12620982139344 * EducationMaster + 0.14637124403046 * Marital_StatusDivorced + 
0.18905186437528 * Marital_StatusMarried + 0.00511958458521 * Marital_StatusSingle + 
-0.915980703129 * Marital_StatusTogether ;
2444654   +   H1x3_1  =     0.54853846322055 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.54853846322055 + H1x3_1 ;
2444655   +   H1x3_2  =     1.36395858099198 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.36395858099198 + H1x3_2 ;
2444656   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2444657   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2444658   +   H1x3_1  = EXP(MIN(H1x3_1 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(MIN(H1x3_1 , _EXP_BAR));
2444659   +   H1x3_2  = EXP(MIN(H1x3_2 , _EXP_BAR));
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(MIN(H1x3_2 , _EXP_BAR));
2444660   +END;
MPRINT(EM_DIAGRAM):   END;
2444661   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2444662   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2444663   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2444664   +END;
MPRINT(EM_DIAGRAM):   END;
2444665   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2444666   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2444667   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2444668   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2444669   +   P_DepVar1  =    -10.6892993503201 * H1x1_1  +     16.2938756734008 * H1x1_2
2444670   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -10.6892993503201 * H1x1_1 + 16.2938756734008 * H1x1_2 ;
2444671   +   P_DepVar1  = P_DepVar1  +      1.2332183930826 * H1x2_1
2444672   +          +    -0.85206858106106 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + 1.2332183930826 * H1x2_1 + -0.85206858106106 * 
H1x2_2 ;
2444673   +   P_DepVar1  = P_DepVar1  +    -0.00087126688031 * H1x3_1
2444674   +          +    -0.00025812675645 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00087126688031 * H1x3_1 + -0.00025812675645 * 
H1x3_2 ;
2444675   +   P_DepVar1  =     2.20710379818135 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.20710379818135 + P_DepVar1 ;
2444676   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2444677   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2444678   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2444679   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2444680   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2444681   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2444682   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2444683   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2444684   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2444685   +END;
MPRINT(EM_DIAGRAM):   END;
2444686   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2444687   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2444688   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2444689   +END;
MPRINT(EM_DIAGRAM):   END;
2444690   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2444691   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2444692   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2444693   +END;
MPRINT(EM_DIAGRAM):   END;
2444694   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2444695   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2444696   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2444697   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2444698   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2444699   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2444700   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2444701   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2444702   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2444703   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2444704   +END;
MPRINT(EM_DIAGRAM):   END;
2444705   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2444706   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2444707   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2444708   +drop
2444709   +H1x1_1
2444710   +H1x1_2
2444711   +H1x2_1
2444712   +H1x2_2
2444713   +H1x3_1
2444714   +H1x3_2
2444715   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x2_1 H1x2_2 H1x3_1 H1x3_2 ;
2444716   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2444717    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2444718    quit;
2444719    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2444720    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2444721    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2444722    retain ID 2 Node "AutoNeural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural7";
2444723    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2444724    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2931 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2931 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444725    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2444726    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2444727    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2931 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2931 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2444728    proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME 
CREATOR);
2444729    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2444730    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444731    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2444732    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2444733    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2444734    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444735    proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
2444736    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2444737    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2444738    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2444739    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444740    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2444741    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2444742    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2444743    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2444744    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2444745    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2444745  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1623 rows and 5 columns.

2444746    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444747    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2444748    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1623 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1623 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2444749    filename _pref
2444749  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2444750    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2444751    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2444752   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2444753   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2444754   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2444755   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2444756   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2444757   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2444758    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2444759    quit;
2444760    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2444761    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2444762    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2444763    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2444764    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2444765    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444766    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2444767    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2444768    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444769    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2444770    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2444771    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444772    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2444773    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2444774    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2444775    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444776    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2444777    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2444778    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2444779    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2444780    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444781    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2444782    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2444783    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2444784    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444785    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2444786    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2444786  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2444787    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444788    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2444789    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1627 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444790    filename _pref
2444790  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2444791    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2444792    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2444793   +
2444794   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2444795   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2444795  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2444796   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2444797   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2444798   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2444799   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2444800   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2444801    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2444802    quit;
2444803    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2444804    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2444805    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2444806    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2444807    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2444808    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444809    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2444810    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2444811    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444812    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2444813    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2444814    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2444815    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2444816    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2444817    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2444818    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444819    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2444820    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444821    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2444822    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2444823    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444824    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2444825    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2444826    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2444827    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444828    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2444829    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2444829  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2444830    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2444831    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2444832    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1666 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444833    filename _pref
2444833  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2444834    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2444835    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2444836   +
2444837   +
2444838   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2444839   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2444840   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2444841   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2444842   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2444843   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2444844   +
2444845   +
2444846   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2444847   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2444848   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2444849   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2444850   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2444851   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2444852   +
2444853   +
2444854   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2444855   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2444856   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2444857   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2444858   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2444859   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2444860   +
2444861   +
2444862   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2444863   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2444864   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2444865   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2444866   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2444867   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2444868   +
2444869   +
2444870   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2444871   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2444872   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2444873   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2444874   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2444875   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2444876   +
2444877   +
2444878   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2444879   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2444880   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2444881   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2444882   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2444883   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2444884   +
2444885   +
2444886   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2444887   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2444888   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2444889   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2444890   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2444891   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2444892   +
2444893   +
2444894   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2444895   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2444896   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2444897   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2444898   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2444899   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2444900   +if
2444901   +_FILTERNORM1 not in ( '.')
2444902   + and
2444903   +_FILTERNORM2 not in ( '.')
2444904   + and
2444905   +_FILTERNORM3 not in ( '.')
2444906   + and
2444907   +_FILTERNORM4 not in ( '.')
2444908   + and
2444909   +_FILTERNORM5 not in ( '.')
2444910   + and
2444911   +_FILTERNORM6 not in ( '.')
2444912   + and
2444913   +_FILTERNORM7 not in ( ' ')
2444914   + and
2444915   +_FILTERNORM8 not in ( ' ')
2444916   +and
2444917   +( Dt_Customer ne .)
2444918   +and ( Income ne . and (Income<=107000))
2444919   +and ( Kidhome ne .)
2444920   +and ( MntFishProducts ne .)
2444921   +and ( MntFruits ne .)
2444922   +and ( MntGoldProds ne .)
2444923   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2444924   +and ( MntSweetProducts ne .)
2444925   +and ( MntWines ne .)
2444926   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2444927   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2444928   +and ( NumStorePurchases ne .)
2444929   +and ( NumWebPurchases ne .)
2444930   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2444931   +and ( Recency ne .)
2444932   +and ( Teenhome ne .)
2444933   +and ( Year_Birth ne .)
2444934   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2444935   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2444936   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2444937   +end;
MPRINT(EM_DIAGRAM):   end;
2444938   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2444939   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2444940    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2444941    quit;
2444942    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2444943    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2444944    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2444945    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2444946    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2444947    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444948    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2444949    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2444950    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2444951    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2444952    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2444953    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444954    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2444955    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2444956    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2444957    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444958    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2444959    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2444960    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2444961    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2444962    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444963    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2444964    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2444965    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2444966    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2444967    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2444968    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2444968  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2444969    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444970    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2444971    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1732 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2444972    %macro varDept(fcmpdata=,id=);
2444973    %global nobs&id scoreFlag&id;
2444974    %let scoreFlag&id = 0;
2444975    %if &id=1 or ^&fcmpStart %then %do;
2444976    proc sort data=&fcmpdata out=_temp&id nodupkey;
2444977    by NAME;
2444978    where id=&id and LHS in( %let j=1;
2444979    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2444980    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2444981    "&var" %let j = %eval(&j+1);
2444982    %end;
2444983    );
2444984    run;
2444985    %let dsid = %sysfunc(open(_temp&id));
2444986    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2444987    %let dsid = %sysfunc(close(&dsid));
2444988    %if &&nobs&id %then %do;
2444989    %let scoreFlag&id = 1;
2444990    %let fcmpStart = 1;
2444991    %end;
2444992    %else %let fcmpStart = 0;
2444993    %end;
2444994    %else %do;
2444995    proc sort data=&fcmpdata out=_tempid;
2444996    where id=&id;
2444997    by LHS;
2444998    run;
2444999    %let dsid = %sysfunc(open(_tempid));
2445000    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2445001    %let dsid = %sysfunc(close(&dsid));
2445002    %if ^&&nobs&id %then %do;
2445003    proc datasets lib=work nolist;
2445004    delete _tempid;
2445005    run;
2445006    quit;
2445007    %end;
2445008    %else %do;
2445009    data _tempAll;
2445010    set %let j=%eval(&id-1);
2445011    %do x=1 %to &j;
2445012    %if &&nobs&x %then %do;
2445013    _temp&x %end;
2445014    %end;
2445015    ;
2445016    run;
2445017    proc sql;
2445018    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2445018  ! work._tempid p2 where p.name=p2.lhs;
2445019    quit;
2445020    data _temp&id;
2445021    set _temp&id;
2445022    where LHS ne '' and NAME ne '' and Node ne '';
2445023    run;
2445024    proc datasets lib=work nolist;
2445025    delete _tempAll;
2445026    run;
2445027    %let dsid = %sysfunc(open(_temp&id));
2445028    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2445029    %let dsid = %sysfunc(close(&dsid));
2445030    %if ^&&nobs&id %then %do;
2445031    proc datasets lib=work nolist;
2445032    delete _temp&id;
2445033    run;
2445034    quit;
2445035    %end;
2445036    %else %do;
2445037    %let scoreFlag&id = 1;
2445038    data _temp&id;
2445039    set _temp&id;
2445040    where LHS ne NAME and node ne '';
2445041    run;
2445042    %let dsid = %sysfunc(open(_temp&id));
2445043    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2445044    %let dsid = %sysfunc(close(&dsid));
2445045    %if ^&&nobs&id %then %do;
2445046    proc datasets lib=work nolist;
2445047    delete _temp&id;
2445048    run;
2445049    quit;
2445050    %end;
2445051    %else %do;
2445052    proc sort data=_temp&id nodupkey;
2445053    by LHS NAME;
2445054    run;
2445055    %end;
2445056    %end;
2445057    %end;
2445058    %end;
2445059    %mend varDept;
2445060    %macro optCode(outdata=fcmpdata);
2445061    %global fcmpStart;
2445062    %let fcmpStart = 0;
2445063    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2445064    %let NumNodes=9;
2445065    %do k=1 %to &NumNodes;
2445066    %vardept(fcmpdata=&outdata, id=&k);
2445067    %end;
2445068    %mend optCode;
2445069    %optcode(outData=EMWS8.Ensmbl45_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2445070    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2445071    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2445072    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2445073    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2445074    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2445075    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2445076    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2445077    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2445078    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2445079    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2445079  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2445080    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2445081    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2445082    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2445083    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2445084    filename _pref
2445084  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
2445085    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2445086    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas.
2445087   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2445088   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2445089   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2445090   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2445091   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2445092   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2445093   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2445094   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2445095   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2445096   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2445097   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2445098   +LENGTH _WARN_ $4
2445099   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2445100   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2445101   +
2445102   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2445103   +
2445104   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2445105   +
2445106   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2445107   +
2445108   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2445109   +
2445110   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2445111   +
2445112   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2445113   +
2445114   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2445115   +
2445116   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2445117   +
2445118   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2445119   +
2445120   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2445121   +
2445122   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2445123   +
2445124   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2445125   +
2445126   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2445127   +
2445128   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2445129   +
2445130   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2445131   +
2445132   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2445133   +
2445134   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2445135   +
2445136   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2445137   +
2445138   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2445139   +
2445140   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2445141   +
2445142   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2445143   +
2445144   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2445145   +
2445146   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2445147   +
2445148   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2445149   +
2445150   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2445151   +
2445152   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2445153   +
2445154   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2445155   +
2445156   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2445157   +
2445158   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2445159   +
2445160   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2445161   +
2445162   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2445163   +
2445164   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2445165   +
2445166   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2445167   +
2445168   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2445169   +
2445170   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2445171   +
2445172   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2445173   +
2445174   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2445175   +
2445176   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2445177   +
2445178   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2445179   +
2445180   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2445181   +
2445182   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2445183   +
2445184   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2445185   +
2445186   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2445187   +
2445188   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2445189   +
2445190   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2445191   +
2445192   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2445193   +
2445194   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2445195   +
2445196   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2445197   +
2445198   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2445199   +
2445200   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2445201   +
2445202   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2445203   +
2445204   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2445205   +
2445206   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2445207   +
2445208   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2445209   +
2445210   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2445211   +
2445212   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2445213   +
2445214   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2445215   +
2445216   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2445217   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2445218   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2445219   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2445220   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2445221   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2445222   +end;
MPRINT(EM_DIAGRAM):   end;
2445223   +else do;
MPRINT(EM_DIAGRAM):   else do;
2445224   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2445225   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2445226   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2445227   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2445228   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2445229   +   end;
MPRINT(EM_DIAGRAM):   end;
2445230   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2445231   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2445232   +   end;
MPRINT(EM_DIAGRAM):   end;
2445233   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2445234   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2445235   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2445236   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2445237   +   end;
MPRINT(EM_DIAGRAM):   end;
2445238   +end;
MPRINT(EM_DIAGRAM):   end;
2445239   +
2445240   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2445241   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2445242   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2445243   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2445244   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2445245   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2445246   +end;
MPRINT(EM_DIAGRAM):   end;
2445247   +else do;
MPRINT(EM_DIAGRAM):   else do;
2445248   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2445249   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2445250   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2445251   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2445252   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2445253   +   end;
MPRINT(EM_DIAGRAM):   end;
2445254   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2445255   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2445256   +   end;
MPRINT(EM_DIAGRAM):   end;
2445257   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2445258   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2445259   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2445260   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2445261   +   end;
MPRINT(EM_DIAGRAM):   end;
2445262   +end;
MPRINT(EM_DIAGRAM):   end;
2445263   +
2445264   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2445265   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2445266   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2445267   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2445268   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2445269   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2445270   +end;
MPRINT(EM_DIAGRAM):   end;
2445271   +else do;
MPRINT(EM_DIAGRAM):   else do;
2445272   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2445273   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2445274   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2445275   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2445276   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2445277   +   end;
MPRINT(EM_DIAGRAM):   end;
2445278   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2445279   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2445280   +   end;
MPRINT(EM_DIAGRAM):   end;
2445281   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2445282   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2445283   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2445284   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2445285   +   end;
MPRINT(EM_DIAGRAM):   end;
2445286   +end;
MPRINT(EM_DIAGRAM):   end;
2445287   +
2445288   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2445289   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2445290   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2445291   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2445292   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2445293   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2445294   +end;
MPRINT(EM_DIAGRAM):   end;
2445295   +else do;
MPRINT(EM_DIAGRAM):   else do;
2445296   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2445297   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2445298   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2445299   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2445300   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2445301   +   end;
MPRINT(EM_DIAGRAM):   end;
2445302   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2445303   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2445304   +   end;
MPRINT(EM_DIAGRAM):   end;
2445305   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2445306   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2445307   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2445308   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2445309   +   end;
MPRINT(EM_DIAGRAM):   end;
2445310   +end;
MPRINT(EM_DIAGRAM):   end;
2445311   +
2445312   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2445313   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2445314   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2445315   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2445316   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2445317   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2445318   +end;
MPRINT(EM_DIAGRAM):   end;
2445319   +else do;
MPRINT(EM_DIAGRAM):   else do;
2445320   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2445321   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2445322   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2445323   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2445324   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2445325   +   end;
MPRINT(EM_DIAGRAM):   end;
2445326   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2445327   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2445328   +   end;
MPRINT(EM_DIAGRAM):   end;
2445329   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2445330   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2445331   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2445332   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2445333   +   end;
MPRINT(EM_DIAGRAM):   end;
2445334   +end;
MPRINT(EM_DIAGRAM):   end;
2445335   +
2445336   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2445337   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2445338   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2445339   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2445340   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2445341   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2445342   +end;
MPRINT(EM_DIAGRAM):   end;
2445343   +else do;
MPRINT(EM_DIAGRAM):   else do;
2445344   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2445345   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2445346   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2445347   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2445348   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2445349   +   end;
MPRINT(EM_DIAGRAM):   end;
2445350   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2445351   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2445352   +   end;
MPRINT(EM_DIAGRAM):   end;
2445353   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2445354   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2445355   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2445356   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2445357   +   end;
MPRINT(EM_DIAGRAM):   end;
2445358   +end;
MPRINT(EM_DIAGRAM):   end;
2445359   +
2445360   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2445361   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2445362   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2445363   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2445364   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2445365   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2445366   +end;
MPRINT(EM_DIAGRAM):   end;
2445367   +else do;
MPRINT(EM_DIAGRAM):   else do;
2445368   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2445369   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2445370   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2445371   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2445372   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2445373   +   end;
MPRINT(EM_DIAGRAM):   end;
2445374   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2445375   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2445376   +   end;
MPRINT(EM_DIAGRAM):   end;
2445377   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2445378   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2445379   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2445380   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2445381   +   end;
MPRINT(EM_DIAGRAM):   end;
2445382   +end;
MPRINT(EM_DIAGRAM):   end;
2445383   +
2445384   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2445385   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2445386   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2445387   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2445388   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2445389   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2445390   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2445391   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2445392   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2445393   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2445394   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2445395   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2445396   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2445397   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2445398   +end;
MPRINT(EM_DIAGRAM):   end;
2445399   +else do;
MPRINT(EM_DIAGRAM):   else do;
2445400   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2445401   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2445402   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2445403   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2445404   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2445405   +   end;
MPRINT(EM_DIAGRAM):   end;
2445406   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2445407   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2445408   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2445409   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2445410   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2445411   +   end;
MPRINT(EM_DIAGRAM):   end;
2445412   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2445413   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2445414   +   end;
MPRINT(EM_DIAGRAM):   end;
2445415   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2445416   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2445417   +   end;
MPRINT(EM_DIAGRAM):   end;
2445418   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2445419   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2445420   +   end;
MPRINT(EM_DIAGRAM):   end;
2445421   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2445422   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2445423   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2445424   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2445425   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2445426   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2445427   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2445428   +   end;
MPRINT(EM_DIAGRAM):   end;
2445429   +end;
MPRINT(EM_DIAGRAM):   end;
2445430   +
2445431   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2445432   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2445433   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2445434   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2445435   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2445436   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2445437   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2445438   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2445439   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2445440   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2445441   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2445442   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2445443   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2445444   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2445445   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2445446   +end;
MPRINT(EM_DIAGRAM):   end;
2445447   +else do;
MPRINT(EM_DIAGRAM):   else do;
2445448   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2445449   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2445450   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2445451   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2445452   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2445453   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2445454   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2445455   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2445456   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2445457   +         end;
MPRINT(EM_DIAGRAM):   end;
2445458   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2445459   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2445460   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2445461   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2445462   +            end;
MPRINT(EM_DIAGRAM):   end;
2445463   +         end;
MPRINT(EM_DIAGRAM):   end;
2445464   +      end;
MPRINT(EM_DIAGRAM):   end;
2445465   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2445466   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2445467   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2445468   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2445469   +         end;
MPRINT(EM_DIAGRAM):   end;
2445470   +      end;
MPRINT(EM_DIAGRAM):   end;
2445471   +   end;
MPRINT(EM_DIAGRAM):   end;
2445472   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2445473   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2445474   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2445475   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2445476   +      end;
MPRINT(EM_DIAGRAM):   end;
2445477   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2445478   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2445479   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2445480   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2445481   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2445482   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2445483   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2445484   +         end;
MPRINT(EM_DIAGRAM):   end;
2445485   +      end;
MPRINT(EM_DIAGRAM):   end;
2445486   +   end;
MPRINT(EM_DIAGRAM):   end;
2445487   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2445488   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2445489   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2445490   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2445491   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2445492   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2445493   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2445494   +   end;
MPRINT(EM_DIAGRAM):   end;
2445495   +end;
MPRINT(EM_DIAGRAM):   end;
2445496   +
2445497   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2445498   +*** Checking missing input Interval
2445499   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2445500   +
2445501   +IF NMISS(
2445502   +   AcceptedCmpTotal ,
2445503   +   Age ,
2445504   +   Frq ,
2445505   +   Income ,
2445506   +   Kidhome ,
2445507   +   Mnt ,
2445508   +   MntFishProducts ,
2445509   +   MntFruits ,
2445510   +   MntGoldProds ,
2445511   +   MntMeatProducts ,
2445512   +   MntSweetProducts ,
2445513   +   MntWines ,
2445514   +   MonthsAsCustomer ,
2445515   +   NumCatalogPurchases ,
2445516   +   NumDealsPurchases ,
2445517   +   NumDistPurchases ,
2445518   +   NumStorePurchases ,
2445519   +   NumWebPurchases ,
2445520   +   NumWebVisitsMonth ,
2445521   +   RFMstat ,
2445522   +   RMntFrq ,
2445523   +   Recency ,
2445524   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2445525   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2445526   +
2445527   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2445528   +END;
MPRINT(EM_DIAGRAM):   END;
2445529   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2445530   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2445531   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2445532   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2445533   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2445534   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2445535   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2445536   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2445537   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2445538   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2445539   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2445540   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2445541   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2445542   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2445543   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2445544   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2445545   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2445546   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2445547   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2445548   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2445549   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2445550   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2445551   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2445552   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2445553   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2445554   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2445555   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2445556   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2445557   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2445558   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2445559   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2445560   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2445561   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2445562   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2445563   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2445564   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2445565   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2445566   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2445567   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2445568   +END;
MPRINT(EM_DIAGRAM):   END;
2445569   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2445570   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2445571   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2445572   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2445573   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2445574   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2445575   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2445576   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2445577   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2445578   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2445579   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2445580   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2445581   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2445582   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2445583   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2445584   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2445585   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2445586   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2445587   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2445588   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2445589   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2445590   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2445591   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2445592   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2445593   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2445594   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2445595   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2445596   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2445597   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2445598   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2445599   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2445600   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2445601   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
2445602   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
2445603   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2445604   +   ELSE S_NumCatalogPurchases
2445605   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2445606   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2445607   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2445608   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2445609   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2445610   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2445611   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2445612   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2445613   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2445614   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2445615   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2445616   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2445617   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2445618   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2445619   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2445620   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2445621   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2445622   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2445623   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2445624   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2445625   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2445626   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2445627   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2445628   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2445629   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2445630   +END;
MPRINT(EM_DIAGRAM):   END;
2445631   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2445632   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2445633   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2445634   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2445635   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2445636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2445637   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2445638   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2445639   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2445640   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2445641   +   H1x1_1  =     -1.5235159368138 * S_AcceptedCmpTotal
2445642   +          +     0.13941271308016 * S_Age  +    -0.84765157270503 * S_Frq
2445643   +          +    -0.89386555046676 * S_Income  +     1.62709236629244 *
2445644   +        S_Kidhome  +    -1.21416429819342 * S_Mnt  +    -1.95640488965637 *
2445645   +        S_MntFishProducts  +    -0.08621024993404 * S_MntFruits
2445646   +          +    -0.38536990009586 * S_MntGoldProds  +     3.12553097304637 *
2445647   +        S_MntMeatProducts  +    -2.50680711036653 * S_MntSweetProducts
2445648   +          +    -3.77770073626477 * S_MntWines  +     0.39118206604766 *
2445649   +        S_MonthsAsCustomer  +     1.80485993754239 * S_NumCatalogPurchases
2445650   +          +     3.21215425524619 * S_NumDealsPurchases
2445651   +          +     0.08695198777156 * S_NumDistPurchases
2445652   +          +    -2.58697971128295 * S_NumStorePurchases
2445653   +          +    -0.44431924796059 * S_NumWebPurchases
2445654   +          +     -1.4492698984921 * S_NumWebVisitsMonth
2445655   +          +     2.16652214648037 * S_RFMstat  +    -0.48027961131639 *
2445656   +        S_RMntFrq  +    -0.27206877070748 * S_Recency
2445657   +          +    -0.34774852853763 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.5235159368138 * S_AcceptedCmpTotal + 0.13941271308016 * 
S_Age + -0.84765157270503 * S_Frq + -0.89386555046676 * S_Income + 1.62709236629244 * 
S_Kidhome + -1.21416429819342 * S_Mnt + -1.95640488965637 * S_MntFishProducts + 
-0.08621024993404 * S_MntFruits + -0.38536990009586 * S_MntGoldProds + 3.12553097304637 * 
S_MntMeatProducts + -2.50680711036653 * S_MntSweetProducts + -3.77770073626477 * S_MntWines + 
0.39118206604766 * S_MonthsAsCustomer + 1.80485993754239 * S_NumCatalogPurchases + 
3.21215425524619 * S_NumDealsPurchases + 0.08695198777156 * S_NumDistPurchases + 
-2.58697971128295 * S_NumStorePurchases + -0.44431924796059 * S_NumWebPurchases + 
-1.4492698984921 * S_NumWebVisitsMonth + 2.16652214648037 * S_RFMstat + -0.48027961131639 * 
S_RMntFrq + -0.27206877070748 * S_Recency + -0.34774852853763 * S_Teenhome ;
2445658   +   H1x1_2  =     -0.5665707820209 * S_AcceptedCmpTotal
2445659   +          +    -1.33582859121223 * S_Age  +     0.90483024742522 * S_Frq
2445660   +          +    -2.00588558815165 * S_Income  +      3.0373198083895 *
2445661   +        S_Kidhome  +      0.4356905004225 * S_Mnt  +     0.19619626354366 *
2445662   +        S_MntFishProducts  +    -1.09111340184132 * S_MntFruits
2445663   +          +     0.36844676336289 * S_MntGoldProds  +    -2.23832561375429 *
2445664   +        S_MntMeatProducts  +    -0.18280081530069 * S_MntSweetProducts
2445665   +          +     2.11599309139107 * S_MntWines  +     0.68147940490709 *
2445666   +        S_MonthsAsCustomer  +    -0.73940648599397 * S_NumCatalogPurchases
2445667   +          +    -0.83844506398484 * S_NumDealsPurchases
2445668   +          +     0.60831936516804 * S_NumDistPurchases
2445669   +          +     1.79084087761626 * S_NumStorePurchases
2445670   +          +     1.17119196356453 * S_NumWebPurchases
2445671   +          +    -3.63586683518718 * S_NumWebVisitsMonth
2445672   +          +     0.60521990735996 * S_RFMstat  +     0.56036381019221 *
2445673   +        S_RMntFrq  +     3.84599118896159 * S_Recency
2445674   +          +     2.42091939246471 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5665707820209 * S_AcceptedCmpTotal + -1.33582859121223 * 
S_Age + 0.90483024742522 * S_Frq + -2.00588558815165 * S_Income + 3.0373198083895 * S_Kidhome 
+ 0.4356905004225 * S_Mnt + 0.19619626354366 * S_MntFishProducts + -1.09111340184132 * 
S_MntFruits + 0.36844676336289 * S_MntGoldProds + -2.23832561375429 * S_MntMeatProducts + 
-0.18280081530069 * S_MntSweetProducts + 2.11599309139107 * S_MntWines + 0.68147940490709 * 
S_MonthsAsCustomer + -0.73940648599397 * S_NumCatalogPurchases + -0.83844506398484 * 
S_NumDealsPurchases + 0.60831936516804 * S_NumDistPurchases + 1.79084087761626 * 
S_NumStorePurchases + 1.17119196356453 * S_NumWebPurchases + -3.63586683518718 * 
S_NumWebVisitsMonth + 0.60521990735996 * S_RFMstat + 0.56036381019221 * S_RMntFrq + 
3.84599118896159 * S_Recency + 2.42091939246471 * S_Teenhome ;
2445675   +   H1x1_3  =    -2.34864034635966 * S_AcceptedCmpTotal
2445676   +          +     0.38417502023066 * S_Age  +     0.18241442054661 * S_Frq
2445677   +          +    -0.36643054878492 * S_Income  +    -0.01464967964014 *
2445678   +        S_Kidhome  +     0.13084033882631 * S_Mnt  +     1.43066752801424 *
2445679   +        S_MntFishProducts  +     0.30678881611098 * S_MntFruits
2445680   +          +    -0.35038082288662 * S_MntGoldProds  +    -6.79650673935808 *
2445681   +        S_MntMeatProducts  +    -0.35154740308081 * S_MntSweetProducts
2445682   +          +     4.53406963590593 * S_MntWines  +     0.35082802515055 *
2445683   +        S_MonthsAsCustomer  +    -1.62489937965567 * S_NumCatalogPurchases
2445684   +          +    -0.31484031572628 * S_NumDealsPurchases
2445685   +          +    -0.18273941035679 * S_NumDistPurchases
2445686   +          +     0.99501789733882 * S_NumStorePurchases
2445687   +          +     1.32014078829379 * S_NumWebPurchases
2445688   +          +    -1.34393498450215 * S_NumWebVisitsMonth
2445689   +          +    -0.93549119966022 * S_RFMstat  +    -1.74825390192193 *
2445690   +        S_RMntFrq  +     0.84406941726743 * S_Recency
2445691   +          +     -0.5004540381333 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.34864034635966 * S_AcceptedCmpTotal + 0.38417502023066 * 
S_Age + 0.18241442054661 * S_Frq + -0.36643054878492 * S_Income + -0.01464967964014 * 
S_Kidhome + 0.13084033882631 * S_Mnt + 1.43066752801424 * S_MntFishProducts + 0.30678881611098 
* S_MntFruits + -0.35038082288662 * S_MntGoldProds + -6.79650673935808 * S_MntMeatProducts + 
-0.35154740308081 * S_MntSweetProducts + 4.53406963590593 * S_MntWines + 0.35082802515055 * 
S_MonthsAsCustomer + -1.62489937965567 * S_NumCatalogPurchases + -0.31484031572628 * 
S_NumDealsPurchases + -0.18273941035679 * S_NumDistPurchases + 0.99501789733882 * 
S_NumStorePurchases + 1.32014078829379 * S_NumWebPurchases + -1.34393498450215 * 
S_NumWebVisitsMonth + -0.93549119966022 * S_RFMstat + -1.74825390192193 * S_RMntFrq + 
0.84406941726743 * S_Recency + -0.5004540381333 * S_Teenhome ;
2445692   +   H1x1_4  =     0.46772023050431 * S_AcceptedCmpTotal
2445693   +          +    -0.64609651992636 * S_Age  +     0.65433283816167 * S_Frq
2445694   +          +     0.97922442633265 * S_Income  +    -0.37705204232056 *
2445695   +        S_Kidhome  +     0.00937752600299 * S_Mnt  +     -0.6082843846013 *
2445696   +        S_MntFishProducts  +     -0.6227107898918 * S_MntFruits
2445697   +          +      0.0291421224006 * S_MntGoldProds  +     1.09748402313736 *
2445698   +        S_MntMeatProducts  +     0.00604619863622 * S_MntSweetProducts
2445699   +          +    -0.74684537570529 * S_MntWines  +    -0.00266569003481 *
2445700   +        S_MonthsAsCustomer  +     2.01081657735872 * S_NumCatalogPurchases
2445701   +          +     1.19658719134196 * S_NumDealsPurchases
2445702   +          +     0.87478204472986 * S_NumDistPurchases
2445703   +          +    -0.20635856288784 * S_NumStorePurchases
2445704   +          +    -0.89927356974242 * S_NumWebPurchases
2445705   +          +     2.92285244132576 * S_NumWebVisitsMonth
2445706   +          +    -0.10913907245142 * S_RFMstat  +     1.64233441899256 *
2445707   +        S_RMntFrq  +    -3.64945971202322 * S_Recency
2445708   +          +    -1.78841346993558 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.46772023050431 * S_AcceptedCmpTotal + -0.64609651992636 * 
S_Age + 0.65433283816167 * S_Frq + 0.97922442633265 * S_Income + -0.37705204232056 * S_Kidhome 
+ 0.00937752600299 * S_Mnt + -0.6082843846013 * S_MntFishProducts + -0.6227107898918 * 
S_MntFruits + 0.0291421224006 * S_MntGoldProds + 1.09748402313736 * S_MntMeatProducts + 
0.00604619863622 * S_MntSweetProducts + -0.74684537570529 * S_MntWines + -0.00266569003481 * 
S_MonthsAsCustomer + 2.01081657735872 * S_NumCatalogPurchases + 1.19658719134196 * 
S_NumDealsPurchases + 0.87478204472986 * S_NumDistPurchases + -0.20635856288784 * 
S_NumStorePurchases + -0.89927356974242 * S_NumWebPurchases + 2.92285244132576 * 
S_NumWebVisitsMonth + -0.10913907245142 * S_RFMstat + 1.64233441899256 * S_RMntFrq + 
-3.64945971202322 * S_Recency + -1.78841346993558 * S_Teenhome ;
2445709   +   H1x1_5  =    -1.22491918863941 * S_AcceptedCmpTotal
2445710   +          +     0.16201659993217 * S_Age  +     0.17189537824457 * S_Frq
2445711   +          +    -0.87922900323563 * S_Income  +    -0.79268410231108 *
2445712   +        S_Kidhome  +     0.62793961676074 * S_Mnt  +     0.20877761882787 *
2445713   +        S_MntFishProducts  +     0.99367872286661 * S_MntFruits
2445714   +          +     -0.4347564565882 * S_MntGoldProds  +    -0.16203279329295 *
2445715   +        S_MntMeatProducts  +     0.81409215344356 * S_MntSweetProducts
2445716   +          +     1.33482971563984 * S_MntWines  +    -1.17441882196058 *
2445717   +        S_MonthsAsCustomer  +    -1.72330829533107 * S_NumCatalogPurchases
2445718   +          +       -2.32617124568 * S_NumDealsPurchases
2445719   +          +    -0.56589187730672 * S_NumDistPurchases
2445720   +          +     1.07062299863482 * S_NumStorePurchases
2445721   +          +     0.30077273739578 * S_NumWebPurchases
2445722   +          +    -1.67745421915317 * S_NumWebVisitsMonth
2445723   +          +      0.0530074713265 * S_RFMstat  +    -0.55969729655382 *
2445724   +        S_RMntFrq  +     1.32196704233234 * S_Recency
2445725   +          +     1.05470622089613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.22491918863941 * S_AcceptedCmpTotal + 0.16201659993217 * 
S_Age + 0.17189537824457 * S_Frq + -0.87922900323563 * S_Income + -0.79268410231108 * 
S_Kidhome + 0.62793961676074 * S_Mnt + 0.20877761882787 * S_MntFishProducts + 0.99367872286661 
* S_MntFruits + -0.4347564565882 * S_MntGoldProds + -0.16203279329295 * S_MntMeatProducts + 
0.81409215344356 * S_MntSweetProducts + 1.33482971563984 * S_MntWines + -1.17441882196058 * 
S_MonthsAsCustomer + -1.72330829533107 * S_NumCatalogPurchases + -2.32617124568 * 
S_NumDealsPurchases + -0.56589187730672 * S_NumDistPurchases + 1.07062299863482 * 
S_NumStorePurchases + 0.30077273739578 * S_NumWebPurchases + -1.67745421915317 * 
S_NumWebVisitsMonth + 0.0530074713265 * S_RFMstat + -0.55969729655382 * S_RMntFrq + 
1.32196704233234 * S_Recency + 1.05470622089613 * S_Teenhome ;
2445726   +   H1x1_1  = H1x1_1  +     0.19875423759582 * AcceptedCmp10
2445727   +          +    -1.84163905120352 * AcceptedCmp20  +    -1.63149345314696 *
2445728   +        AcceptedCmp30  +    -1.52652349127913 * AcceptedCmp40
2445729   +          +    -0.97663634905647 * AcceptedCmp50  +    -0.94352222509088 *
2445730   +        Complain0  +    -0.63297203617355 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.19875423759582 * AcceptedCmp10 + -1.84163905120352 * 
AcceptedCmp20 + -1.63149345314696 * AcceptedCmp30 + -1.52652349127913 * AcceptedCmp40 + 
-0.97663634905647 * AcceptedCmp50 + -0.94352222509088 * Complain0 + -0.63297203617355 * 
HigherEducationBinary0 ;
2445731   +   H1x1_2  = H1x1_2  +      0.0505791781839 * AcceptedCmp10
2445732   +          +    -0.19407965320143 * AcceptedCmp20  +     0.35537657271506 *
2445733   +        AcceptedCmp30  +    -0.84577216347728 * AcceptedCmp40
2445734   +          +     1.73085566880686 * AcceptedCmp50  +     0.05800586053869 *
2445735   +        Complain0  +    -0.62505561129469 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0505791781839 * AcceptedCmp10 + -0.19407965320143 * 
AcceptedCmp20 + 0.35537657271506 * AcceptedCmp30 + -0.84577216347728 * AcceptedCmp40 + 
1.73085566880686 * AcceptedCmp50 + 0.05800586053869 * Complain0 + -0.62505561129469 * 
HigherEducationBinary0 ;
2445736   +   H1x1_3  = H1x1_3  +     0.54825581966403 * AcceptedCmp10
2445737   +          +     -0.0966204838125 * AcceptedCmp20  +    -1.31707923763053 *
2445738   +        AcceptedCmp30  +    -1.21021077486757 * AcceptedCmp40
2445739   +          +     3.29102250037389 * AcceptedCmp50  +    -0.16383687725206 *
2445740   +        Complain0  +     0.00651446514934 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.54825581966403 * AcceptedCmp10 + -0.0966204838125 * 
AcceptedCmp20 + -1.31707923763053 * AcceptedCmp30 + -1.21021077486757 * AcceptedCmp40 + 
3.29102250037389 * AcceptedCmp50 + -0.16383687725206 * Complain0 + 0.00651446514934 * 
HigherEducationBinary0 ;
2445741   +   H1x1_4  = H1x1_4  +    -1.18573650260336 * AcceptedCmp10
2445742   +          +    -1.73968979068234 * AcceptedCmp20  +    -1.31277698137778 *
2445743   +        AcceptedCmp30  +    -1.74346538593922 * AcceptedCmp40
2445744   +          +    -0.72543919818299 * AcceptedCmp50  +    -0.06328353200384 *
2445745   +        Complain0  +     0.74828735398796 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.18573650260336 * AcceptedCmp10 + -1.73968979068234 
* AcceptedCmp20 + -1.31277698137778 * AcceptedCmp30 + -1.74346538593922 * AcceptedCmp40 + 
-0.72543919818299 * AcceptedCmp50 + -0.06328353200384 * Complain0 + 0.74828735398796 * 
HigherEducationBinary0 ;
2445746   +   H1x1_5  = H1x1_5  +    -0.19622185523754 * AcceptedCmp10
2445747   +          +     -0.4643498903813 * AcceptedCmp20  +     0.69293644934542 *
2445748   +        AcceptedCmp30  +     0.23077838801355 * AcceptedCmp40
2445749   +          +     0.53061813608476 * AcceptedCmp50  +    -0.56870999936869 *
2445750   +        Complain0  +      0.5917990310858 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.19622185523754 * AcceptedCmp10 + -0.4643498903813 * 
AcceptedCmp20 + 0.69293644934542 * AcceptedCmp30 + 0.23077838801355 * AcceptedCmp40 + 
0.53061813608476 * AcceptedCmp50 + -0.56870999936869 * Complain0 + 0.5917990310858 * 
HigherEducationBinary0 ;
2445751   +   H1x1_1  = H1x1_1  +     1.01422000032629 * Education2n_Cycle
2445752   +          +    -0.77619298826287 * EducationBasic  +     0.35633748974614 *
2445753   +        EducationGraduation  +     0.98491516107588 * EducationMaster
2445754   +          +    -0.27797737429678 * Marital_StatusDivorced
2445755   +          +    -0.08137635862327 * Marital_StatusMarried
2445756   +          +     0.06275411820495 * Marital_StatusSingle
2445757   +          +    -0.19979743343415 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.01422000032629 * Education2n_Cycle + 
-0.77619298826287 * EducationBasic + 0.35633748974614 * EducationGraduation + 0.98491516107588 
* EducationMaster + -0.27797737429678 * Marital_StatusDivorced + -0.08137635862327 * 
Marital_StatusMarried + 0.06275411820495 * Marital_StatusSingle + -0.19979743343415 * 
Marital_StatusTogether ;
2445758   +   H1x1_2  = H1x1_2  +    -0.66224206017124 * Education2n_Cycle
2445759   +          +     0.80729589186486 * EducationBasic  +     0.75931615755998 *
2445760   +        EducationGraduation  +    -0.05470462753112 * EducationMaster
2445761   +          +     0.05151426841441 * Marital_StatusDivorced
2445762   +          +     1.19165082030442 * Marital_StatusMarried
2445763   +          +    -1.08257080662611 * Marital_StatusSingle
2445764   +          +     0.13534863375625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.66224206017124 * Education2n_Cycle + 
0.80729589186486 * EducationBasic + 0.75931615755998 * EducationGraduation + -0.05470462753112 
* EducationMaster + 0.05151426841441 * Marital_StatusDivorced + 1.19165082030442 * 
Marital_StatusMarried + -1.08257080662611 * Marital_StatusSingle + 0.13534863375625 * 
Marital_StatusTogether ;
2445765   +   H1x1_3  = H1x1_3  +     0.20065577451105 * Education2n_Cycle
2445766   +          +    -0.14205714608311 * EducationBasic  +    -0.07077711368393 *
2445767   +        EducationGraduation  +     0.40262329710793 * EducationMaster
2445768   +          +      0.0238206459022 * Marital_StatusDivorced
2445769   +          +     -0.4653244204261 * Marital_StatusMarried
2445770   +          +     0.13051613619882 * Marital_StatusSingle
2445771   +          +    -0.35951366919755 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.20065577451105 * Education2n_Cycle + 
-0.14205714608311 * EducationBasic + -0.07077711368393 * EducationGraduation + 
0.40262329710793 * EducationMaster + 0.0238206459022 * Marital_StatusDivorced + 
-0.4653244204261 * Marital_StatusMarried + 0.13051613619882 * Marital_StatusSingle + 
-0.35951366919755 * Marital_StatusTogether ;
2445772   +   H1x1_4  = H1x1_4  +     -0.8555672630555 * Education2n_Cycle
2445773   +          +     0.58439980233621 * EducationBasic  +     0.04784356342853 *
2445774   +        EducationGraduation  +    -0.79764992264249 * EducationMaster
2445775   +          +     -0.7449356409222 * Marital_StatusDivorced
2445776   +          +    -1.46604673521535 * Marital_StatusMarried
2445777   +          +     0.74484771688818 * Marital_StatusSingle
2445778   +          +    -1.91273009779071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.8555672630555 * Education2n_Cycle + 
0.58439980233621 * EducationBasic + 0.04784356342853 * EducationGraduation + -0.79764992264249 
* EducationMaster + -0.7449356409222 * Marital_StatusDivorced + -1.46604673521535 * 
Marital_StatusMarried + 0.74484771688818 * Marital_StatusSingle + -1.91273009779071 * 
Marital_StatusTogether ;
2445779   +   H1x1_5  = H1x1_5  +    -0.45561096683674 * Education2n_Cycle
2445780   +          +    -0.08389156101858 * EducationBasic  +    -1.24281299616343 *
2445781   +        EducationGraduation  +    -0.00999807517226 * EducationMaster
2445782   +          +    -3.68044980584423 * Marital_StatusDivorced
2445783   +          +     3.14587407902338 * Marital_StatusMarried
2445784   +          +    -2.66118132753024 * Marital_StatusSingle
2445785   +          +     3.50991640149914 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.45561096683674 * Education2n_Cycle + 
-0.08389156101858 * EducationBasic + -1.24281299616343 * EducationGraduation + 
-0.00999807517226 * EducationMaster + -3.68044980584423 * Marital_StatusDivorced + 
3.14587407902338 * Marital_StatusMarried + -2.66118132753024 * Marital_StatusSingle + 
3.50991640149914 * Marital_StatusTogether ;
2445786   +   H1x1_1  =    -2.87464368543529 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.87464368543529 + H1x1_1 ;
2445787   +   H1x1_2  =     0.69745433976458 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.69745433976458 + H1x1_2 ;
2445788   +   H1x1_3  =    -0.71895677211617 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.71895677211617 + H1x1_3 ;
2445789   +   H1x1_4  =    -3.07619671976178 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.07619671976178 + H1x1_4 ;
2445790   +   H1x1_5  =    -1.74345318000473 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.74345318000473 + H1x1_5 ;
2445791   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2445792   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2445793   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2445794   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2445795   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2445796   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2445797   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2445798   +END;
MPRINT(EM_DIAGRAM):   END;
2445799   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2445800   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2445801   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2445802   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2445803   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2445804   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2445805   +END;
MPRINT(EM_DIAGRAM):   END;
2445806   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2445807   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2445808   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2445809   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2445810   +   H1x2_1  =     0.02206354442682 * S_AcceptedCmpTotal
2445811   +          +    -1.34753268833642 * S_Age  +    -2.08377331969695 * S_Frq
2445812   +          +    -1.39854535380539 * S_Income  +     2.13620611759545 *
2445813   +        S_Kidhome  +    -1.50515365217324 * S_Mnt  +     0.85499321862984 *
2445814   +        S_MntFishProducts  +    -1.17732452790345 * S_MntFruits
2445815   +          +     1.52355640622249 * S_MntGoldProds  +     1.31854239360457 *
2445816   +        S_MntMeatProducts  +    -0.03265851293389 * S_MntSweetProducts
2445817   +          +     2.18666242847435 * S_MntWines  +     0.08246249957908 *
2445818   +        S_MonthsAsCustomer  +    -1.06901902236609 * S_NumCatalogPurchases
2445819   +          +     0.89261880438741 * S_NumDealsPurchases
2445820   +          +    -1.61647413199892 * S_NumDistPurchases
2445821   +          +    -0.56304669045195 * S_NumStorePurchases
2445822   +          +      0.7766837080945 * S_NumWebPurchases
2445823   +          +     -2.2953497398902 * S_NumWebVisitsMonth
2445824   +          +    -3.34547809243199 * S_RFMstat  +     0.07311937799261 *
2445825   +        S_RMntFrq  +     -0.5786489917247 * S_Recency
2445826   +          +    -1.06532056361117 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.02206354442682 * S_AcceptedCmpTotal + -1.34753268833642 * 
S_Age + -2.08377331969695 * S_Frq + -1.39854535380539 * S_Income + 2.13620611759545 * 
S_Kidhome + -1.50515365217324 * S_Mnt + 0.85499321862984 * S_MntFishProducts + 
-1.17732452790345 * S_MntFruits + 1.52355640622249 * S_MntGoldProds + 1.31854239360457 * 
S_MntMeatProducts + -0.03265851293389 * S_MntSweetProducts + 2.18666242847435 * S_MntWines + 
0.08246249957908 * S_MonthsAsCustomer + -1.06901902236609 * S_NumCatalogPurchases + 
0.89261880438741 * S_NumDealsPurchases + -1.61647413199892 * S_NumDistPurchases + 
-0.56304669045195 * S_NumStorePurchases + 0.7766837080945 * S_NumWebPurchases + 
-2.2953497398902 * S_NumWebVisitsMonth + -3.34547809243199 * S_RFMstat + 0.07311937799261 * 
S_RMntFrq + -0.5786489917247 * S_Recency + -1.06532056361117 * S_Teenhome ;
2445827   +   H1x2_2  =      0.0341880757331 * S_AcceptedCmpTotal
2445828   +          +     0.72034771315738 * S_Age  +     0.64155966340389 * S_Frq
2445829   +          +    -1.06570008729492 * S_Income  +    -1.84532938869849 *
2445830   +        S_Kidhome  +     0.94433555965982 * S_Mnt  +     1.23831916074831 *
2445831   +        S_MntFishProducts  +     1.33415870886475 * S_MntFruits
2445832   +          +    -0.51253922893993 * S_MntGoldProds  +     0.02241594009025 *
2445833   +        S_MntMeatProducts  +     -1.2811169586741 * S_MntSweetProducts
2445834   +          +     1.96686773881953 * S_MntWines  +     1.44655944802715 *
2445835   +        S_MonthsAsCustomer  +    -1.18627316384798 * S_NumCatalogPurchases
2445836   +          +     1.02431289724643 * S_NumDealsPurchases
2445837   +          +    -0.90960173637405 * S_NumDistPurchases
2445838   +          +     1.24283490404772 * S_NumStorePurchases
2445839   +          +     1.23072413154592 * S_NumWebPurchases
2445840   +          +    -0.21533378473931 * S_NumWebVisitsMonth
2445841   +          +     1.26438704884008 * S_RFMstat  +      0.0014042871018 *
2445842   +        S_RMntFrq  +     0.32357651423135 * S_Recency
2445843   +          +    -0.49834512433407 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.0341880757331 * S_AcceptedCmpTotal + 0.72034771315738 * S_Age 
+ 0.64155966340389 * S_Frq + -1.06570008729492 * S_Income + -1.84532938869849 * S_Kidhome + 
0.94433555965982 * S_Mnt + 1.23831916074831 * S_MntFishProducts + 1.33415870886475 * 
S_MntFruits + -0.51253922893993 * S_MntGoldProds + 0.02241594009025 * S_MntMeatProducts + 
-1.2811169586741 * S_MntSweetProducts + 1.96686773881953 * S_MntWines + 1.44655944802715 * 
S_MonthsAsCustomer + -1.18627316384798 * S_NumCatalogPurchases + 1.02431289724643 * 
S_NumDealsPurchases + -0.90960173637405 * S_NumDistPurchases + 1.24283490404772 * 
S_NumStorePurchases + 1.23072413154592 * S_NumWebPurchases + -0.21533378473931 * 
S_NumWebVisitsMonth + 1.26438704884008 * S_RFMstat + 0.0014042871018 * S_RMntFrq + 
0.32357651423135 * S_Recency + -0.49834512433407 * S_Teenhome ;
2445844   +   H1x2_3  =    -0.57066024275015 * S_AcceptedCmpTotal
2445845   +          +     0.16615358153136 * S_Age  +    -0.60017461612499 * S_Frq
2445846   +          +    -0.21195793925019 * S_Income  +    -0.36049126996499 *
2445847   +        S_Kidhome  +     0.97458542661118 * S_Mnt  +     0.62279162661518 *
2445848   +        S_MntFishProducts  +    -0.44715765367363 * S_MntFruits
2445849   +          +     0.91519163455361 * S_MntGoldProds  +     1.07312113398768 *
2445850   +        S_MntMeatProducts  +    -1.61967017526055 * S_MntSweetProducts
2445851   +          +    -1.88327677412185 * S_MntWines  +    -1.67067768979245 *
2445852   +        S_MonthsAsCustomer  +    -0.64725516463464 * S_NumCatalogPurchases
2445853   +          +    -0.26249596122198 * S_NumDealsPurchases
2445854   +          +    -0.63328519804758 * S_NumDistPurchases
2445855   +          +    -0.88467503575886 * S_NumStorePurchases
2445856   +          +    -0.83120537310738 * S_NumWebPurchases
2445857   +          +     1.40072282351719 * S_NumWebVisitsMonth
2445858   +          +     1.42591300760984 * S_RFMstat  +     1.93593865100837 *
2445859   +        S_RMntFrq  +     -1.2794275536508 * S_Recency
2445860   +          +    -0.78582664529339 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.57066024275015 * S_AcceptedCmpTotal + 0.16615358153136 * 
S_Age + -0.60017461612499 * S_Frq + -0.21195793925019 * S_Income + -0.36049126996499 * 
S_Kidhome + 0.97458542661118 * S_Mnt + 0.62279162661518 * S_MntFishProducts + 
-0.44715765367363 * S_MntFruits + 0.91519163455361 * S_MntGoldProds + 1.07312113398768 * 
S_MntMeatProducts + -1.61967017526055 * S_MntSweetProducts + -1.88327677412185 * S_MntWines + 
-1.67067768979245 * S_MonthsAsCustomer + -0.64725516463464 * S_NumCatalogPurchases + 
-0.26249596122198 * S_NumDealsPurchases + -0.63328519804758 * S_NumDistPurchases + 
-0.88467503575886 * S_NumStorePurchases + -0.83120537310738 * S_NumWebPurchases + 
1.40072282351719 * S_NumWebVisitsMonth + 1.42591300760984 * S_RFMstat + 1.93593865100837 * 
S_RMntFrq + -1.2794275536508 * S_Recency + -0.78582664529339 * S_Teenhome ;
2445861   +   H1x2_4  =     0.70159995537759 * S_AcceptedCmpTotal
2445862   +          +    -0.70199351793792 * S_Age  +     1.63573967285806 * S_Frq
2445863   +          +     -0.1930098634567 * S_Income  +    -0.43173926207337 *
2445864   +        S_Kidhome  +    -0.45239271926178 * S_Mnt  +    -0.14139816383874 *
2445865   +        S_MntFishProducts  +    -0.70568635660703 * S_MntFruits
2445866   +          +     1.68796268038024 * S_MntGoldProds  +     0.80481626355934 *
2445867   +        S_MntMeatProducts  +     0.29831384975096 * S_MntSweetProducts
2445868   +          +    -0.50792336172825 * S_MntWines  +     0.80425149159678 *
2445869   +        S_MonthsAsCustomer  +    -2.26171302044375 * S_NumCatalogPurchases
2445870   +          +     1.30167361451945 * S_NumDealsPurchases
2445871   +          +     1.45457613716235 * S_NumDistPurchases
2445872   +          +    -0.40226463685252 * S_NumStorePurchases
2445873   +          +     0.36369161683572 * S_NumWebPurchases
2445874   +          +    -2.65684851610403 * S_NumWebVisitsMonth
2445875   +          +    -1.14810413235545 * S_RFMstat  +       1.291857215261 *
2445876   +        S_RMntFrq  +     1.36572595403825 * S_Recency
2445877   +          +    -0.54958418574963 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.70159995537759 * S_AcceptedCmpTotal + -0.70199351793792 * 
S_Age + 1.63573967285806 * S_Frq + -0.1930098634567 * S_Income + -0.43173926207337 * S_Kidhome 
+ -0.45239271926178 * S_Mnt + -0.14139816383874 * S_MntFishProducts + -0.70568635660703 * 
S_MntFruits + 1.68796268038024 * S_MntGoldProds + 0.80481626355934 * S_MntMeatProducts + 
0.29831384975096 * S_MntSweetProducts + -0.50792336172825 * S_MntWines + 0.80425149159678 * 
S_MonthsAsCustomer + -2.26171302044375 * S_NumCatalogPurchases + 1.30167361451945 * 
S_NumDealsPurchases + 1.45457613716235 * S_NumDistPurchases + -0.40226463685252 * 
S_NumStorePurchases + 0.36369161683572 * S_NumWebPurchases + -2.65684851610403 * 
S_NumWebVisitsMonth + -1.14810413235545 * S_RFMstat + 1.291857215261 * S_RMntFrq + 
1.36572595403825 * S_Recency + -0.54958418574963 * S_Teenhome ;
2445878   +   H1x2_5  =    -1.00456225444665 * S_AcceptedCmpTotal
2445879   +          +     0.19033874303798 * S_Age  +    -0.62578451616415 * S_Frq
2445880   +          +    -0.96647190269426 * S_Income  +     1.77002676974464 *
2445881   +        S_Kidhome  +    -0.53816249322166 * S_Mnt  +     0.21322270253871 *
2445882   +        S_MntFishProducts  +     0.84210241961105 * S_MntFruits
2445883   +          +     0.44153678515007 * S_MntGoldProds  +    -0.23120999196747 *
2445884   +        S_MntMeatProducts  +     0.62950730283125 * S_MntSweetProducts
2445885   +          +    -0.64043011108056 * S_MntWines  +    -2.74922907599662 *
2445886   +        S_MonthsAsCustomer  +     0.67939322758717 * S_NumCatalogPurchases
2445887   +          +    -0.54572162665338 * S_NumDealsPurchases
2445888   +          +      0.9607390449318 * S_NumDistPurchases
2445889   +          +    -0.03259470545754 * S_NumStorePurchases
2445890   +          +     0.19202241423412 * S_NumWebPurchases
2445891   +          +     0.61085831658456 * S_NumWebVisitsMonth
2445892   +          +    -0.08582160429243 * S_RFMstat  +     1.73862452808565 *
2445893   +        S_RMntFrq  +    -0.01216476188714 * S_Recency
2445894   +          +     -0.3304403270473 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.00456225444665 * S_AcceptedCmpTotal + 0.19033874303798 * 
S_Age + -0.62578451616415 * S_Frq + -0.96647190269426 * S_Income + 1.77002676974464 * 
S_Kidhome + -0.53816249322166 * S_Mnt + 0.21322270253871 * S_MntFishProducts + 
0.84210241961105 * S_MntFruits + 0.44153678515007 * S_MntGoldProds + -0.23120999196747 * 
S_MntMeatProducts + 0.62950730283125 * S_MntSweetProducts + -0.64043011108056 * S_MntWines + 
-2.74922907599662 * S_MonthsAsCustomer + 0.67939322758717 * S_NumCatalogPurchases + 
-0.54572162665338 * S_NumDealsPurchases + 0.9607390449318 * S_NumDistPurchases + 
-0.03259470545754 * S_NumStorePurchases + 0.19202241423412 * S_NumWebPurchases + 
0.61085831658456 * S_NumWebVisitsMonth + -0.08582160429243 * S_RFMstat + 1.73862452808565 * 
S_RMntFrq + -0.01216476188714 * S_Recency + -0.3304403270473 * S_Teenhome ;
2445895   +   H1x2_1  = H1x2_1  +     0.83453601566539 * AcceptedCmp10
2445896   +          +     0.59109136511077 * AcceptedCmp20  +     -0.9669340701943 *
2445897   +        AcceptedCmp30  +    -2.31468262956126 * AcceptedCmp40
2445898   +          +    -0.76277791850069 * AcceptedCmp50  +     0.30895289981412 *
2445899   +        Complain0  +       0.147233855837 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.83453601566539 * AcceptedCmp10 + 0.59109136511077 * 
AcceptedCmp20 + -0.9669340701943 * AcceptedCmp30 + -2.31468262956126 * AcceptedCmp40 + 
-0.76277791850069 * AcceptedCmp50 + 0.30895289981412 * Complain0 + 0.147233855837 * 
HigherEducationBinary0 ;
2445900   +   H1x2_2  = H1x2_2  +     0.42789425545567 * AcceptedCmp10
2445901   +          +     0.08505833889085 * AcceptedCmp20  +    -1.15112188313855 *
2445902   +        AcceptedCmp30  +    -1.24362486486214 * AcceptedCmp40
2445903   +          +     0.04131419116048 * AcceptedCmp50  +    -0.45255799355317 *
2445904   +        Complain0  +    -0.32616423192953 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.42789425545567 * AcceptedCmp10 + 0.08505833889085 * 
AcceptedCmp20 + -1.15112188313855 * AcceptedCmp30 + -1.24362486486214 * AcceptedCmp40 + 
0.04131419116048 * AcceptedCmp50 + -0.45255799355317 * Complain0 + -0.32616423192953 * 
HigherEducationBinary0 ;
2445905   +   H1x2_3  = H1x2_3  +    -0.03136360497649 * AcceptedCmp10
2445906   +          +     0.33867713207886 * AcceptedCmp20  +     0.05809342990544 *
2445907   +        AcceptedCmp30  +    -0.06416815079894 * AcceptedCmp40
2445908   +          +     1.14617960682421 * AcceptedCmp50  +    -0.82461320336041 *
2445909   +        Complain0  +     0.58944444655621 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.03136360497649 * AcceptedCmp10 + 0.33867713207886 * 
AcceptedCmp20 + 0.05809342990544 * AcceptedCmp30 + -0.06416815079894 * AcceptedCmp40 + 
1.14617960682421 * AcceptedCmp50 + -0.82461320336041 * Complain0 + 0.58944444655621 * 
HigherEducationBinary0 ;
2445910   +   H1x2_4  = H1x2_4  +    -1.12705500616438 * AcceptedCmp10
2445911   +          +      0.0487863004734 * AcceptedCmp20  +     1.30229008593765 *
2445912   +        AcceptedCmp30  +      0.1726718549662 * AcceptedCmp40
2445913   +          +     0.68443569845295 * AcceptedCmp50  +     2.39733248962228 *
2445914   +        Complain0  +      -0.620937291929 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.12705500616438 * AcceptedCmp10 + 0.0487863004734 * 
AcceptedCmp20 + 1.30229008593765 * AcceptedCmp30 + 0.1726718549662 * AcceptedCmp40 + 
0.68443569845295 * AcceptedCmp50 + 2.39733248962228 * Complain0 + -0.620937291929 * 
HigherEducationBinary0 ;
2445915   +   H1x2_5  = H1x2_5  +     1.42400460803453 * AcceptedCmp10
2445916   +          +    -1.22361480936625 * AcceptedCmp20  +     1.31090186367202 *
2445917   +        AcceptedCmp30  +    -1.40343404818254 * AcceptedCmp40
2445918   +          +    -0.57377230862494 * AcceptedCmp50  +     0.58622740778295 *
2445919   +        Complain0  +    -0.83222074319962 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.42400460803453 * AcceptedCmp10 + -1.22361480936625 * 
AcceptedCmp20 + 1.31090186367202 * AcceptedCmp30 + -1.40343404818254 * AcceptedCmp40 + 
-0.57377230862494 * AcceptedCmp50 + 0.58622740778295 * Complain0 + -0.83222074319962 * 
HigherEducationBinary0 ;
2445920   +   H1x2_1  = H1x2_1  +     1.56508379719546 * Education2n_Cycle
2445921   +          +     0.52302987210661 * EducationBasic  +     -0.0570045326497 *
2445922   +        EducationGraduation  +    -0.01838790774804 * EducationMaster
2445923   +          +    -2.32430245081383 * Marital_StatusDivorced
2445924   +          +    -0.09815511356796 * Marital_StatusMarried
2445925   +          +     0.13075504294551 * Marital_StatusSingle
2445926   +          +     -0.0278875765201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.56508379719546 * Education2n_Cycle + 
0.52302987210661 * EducationBasic + -0.0570045326497 * EducationGraduation + -0.01838790774804 
* EducationMaster + -2.32430245081383 * Marital_StatusDivorced + -0.09815511356796 * 
Marital_StatusMarried + 0.13075504294551 * Marital_StatusSingle + -0.0278875765201 * 
Marital_StatusTogether ;
2445927   +   H1x2_2  = H1x2_2  +    -0.85592920992847 * Education2n_Cycle
2445928   +          +     0.93272618259957 * EducationBasic  +     0.48987674771079 *
2445929   +        EducationGraduation  +    -1.12454002820451 * EducationMaster
2445930   +          +    -0.65574603869224 * Marital_StatusDivorced
2445931   +          +     1.54672472575294 * Marital_StatusMarried
2445932   +          +    -1.59817602340208 * Marital_StatusSingle
2445933   +          +     1.94381954546813 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.85592920992847 * Education2n_Cycle + 
0.93272618259957 * EducationBasic + 0.48987674771079 * EducationGraduation + -1.12454002820451 
* EducationMaster + -0.65574603869224 * Marital_StatusDivorced + 1.54672472575294 * 
Marital_StatusMarried + -1.59817602340208 * Marital_StatusSingle + 1.94381954546813 * 
Marital_StatusTogether ;
2445934   +   H1x2_3  = H1x2_3  +     0.37093371596523 * Education2n_Cycle
2445935   +          +    -2.05531065359129 * EducationBasic  +     1.16090743585078 *
2445936   +        EducationGraduation  +     0.87547303889444 * EducationMaster
2445937   +          +    -0.50911604604781 * Marital_StatusDivorced
2445938   +          +     0.30403066135719 * Marital_StatusMarried
2445939   +          +      0.1026950879545 * Marital_StatusSingle
2445940   +          +     0.01000166524405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.37093371596523 * Education2n_Cycle + 
-2.05531065359129 * EducationBasic + 1.16090743585078 * EducationGraduation + 0.87547303889444 
* EducationMaster + -0.50911604604781 * Marital_StatusDivorced + 0.30403066135719 * 
Marital_StatusMarried + 0.1026950879545 * Marital_StatusSingle + 0.01000166524405 * 
Marital_StatusTogether ;
2445941   +   H1x2_4  = H1x2_4  +     1.28509086202466 * Education2n_Cycle
2445942   +          +     0.07860157688162 * EducationBasic  +     0.24607672351689 *
2445943   +        EducationGraduation  +    -0.06009602645566 * EducationMaster
2445944   +          +     1.07371507133318 * Marital_StatusDivorced
2445945   +          +    -0.07097334129051 * Marital_StatusMarried
2445946   +          +    -0.48339718568621 * Marital_StatusSingle
2445947   +          +    -0.08900780355835 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.28509086202466 * Education2n_Cycle + 
0.07860157688162 * EducationBasic + 0.24607672351689 * EducationGraduation + -0.06009602645566 
* EducationMaster + 1.07371507133318 * Marital_StatusDivorced + -0.07097334129051 * 
Marital_StatusMarried + -0.48339718568621 * Marital_StatusSingle + -0.08900780355835 * 
Marital_StatusTogether ;
2445948   +   H1x2_5  = H1x2_5  +    -1.08109633810919 * Education2n_Cycle
2445949   +          +    -0.54966585100103 * EducationBasic  +      0.5388683065169 *
2445950   +        EducationGraduation  +     0.46960055830119 * EducationMaster
2445951   +          +     1.04342893515504 * Marital_StatusDivorced
2445952   +          +     1.16171312085032 * Marital_StatusMarried
2445953   +          +    -0.30201646939913 * Marital_StatusSingle
2445954   +          +     1.84122645884771 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -1.08109633810919 * Education2n_Cycle + 
-0.54966585100103 * EducationBasic + 0.5388683065169 * EducationGraduation + 0.46960055830119 
* EducationMaster + 1.04342893515504 * Marital_StatusDivorced + 1.16171312085032 * 
Marital_StatusMarried + -0.30201646939913 * Marital_StatusSingle + 1.84122645884771 * 
Marital_StatusTogether ;
2445955   +   H1x2_1  =     1.56970796025332 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.56970796025332 + H1x2_1 ;
2445956   +   H1x2_2  =    -0.11766478836824 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.11766478836824 + H1x2_2 ;
2445957   +   H1x2_3  =    -2.78218653641036 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -2.78218653641036 + H1x2_3 ;
2445958   +   H1x2_4  =     0.51979515224467 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.51979515224467 + H1x2_4 ;
2445959   +   H1x2_5  =     -0.4635890987824 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.4635890987824 + H1x2_5 ;
2445960   +END;
MPRINT(EM_DIAGRAM):   END;
2445961   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2445962   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2445963   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2445964   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2445965   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2445966   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2445967   +END;
MPRINT(EM_DIAGRAM):   END;
2445968   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2445969   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2445970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2445971   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2445972   +   H1x3_1  =     0.04411772880581 * S_AcceptedCmpTotal
2445973   +          +    -1.62725197326682 * S_Age  +    -1.99668213406033 * S_Frq
2445974   +          +     -1.2265241921112 * S_Income  +     1.99702869958035 *
2445975   +        S_Kidhome  +    -1.46762539068512 * S_Mnt  +     0.97784534044189 *
2445976   +        S_MntFishProducts  +    -1.07945265688497 * S_MntFruits
2445977   +          +     2.09306294956674 * S_MntGoldProds  +     1.46219664114361 *
2445978   +        S_MntMeatProducts  +     0.10961158671991 * S_MntSweetProducts
2445979   +          +     2.03040669273977 * S_MntWines  +     0.16536646017211 *
2445980   +        S_MonthsAsCustomer  +    -0.88077951545076 * S_NumCatalogPurchases
2445981   +          +     1.32256781010645 * S_NumDealsPurchases
2445982   +          +    -1.43015438973619 * S_NumDistPurchases
2445983   +          +    -0.63489289584421 * S_NumStorePurchases
2445984   +          +     0.90508699686841 * S_NumWebPurchases
2445985   +          +    -2.24234858061014 * S_NumWebVisitsMonth
2445986   +          +     -2.9988027991146 * S_RFMstat  +     0.35987461993699 *
2445987   +        S_RMntFrq  +    -1.09317668626142 * S_Recency
2445988   +          +    -1.09925349438658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.04411772880581 * S_AcceptedCmpTotal + -1.62725197326682 * 
S_Age + -1.99668213406033 * S_Frq + -1.2265241921112 * S_Income + 1.99702869958035 * S_Kidhome 
+ -1.46762539068512 * S_Mnt + 0.97784534044189 * S_MntFishProducts + -1.07945265688497 * 
S_MntFruits + 2.09306294956674 * S_MntGoldProds + 1.46219664114361 * S_MntMeatProducts + 
0.10961158671991 * S_MntSweetProducts + 2.03040669273977 * S_MntWines + 0.16536646017211 * 
S_MonthsAsCustomer + -0.88077951545076 * S_NumCatalogPurchases + 1.32256781010645 * 
S_NumDealsPurchases + -1.43015438973619 * S_NumDistPurchases + -0.63489289584421 * 
S_NumStorePurchases + 0.90508699686841 * S_NumWebPurchases + -2.24234858061014 * 
S_NumWebVisitsMonth + -2.9988027991146 * S_RFMstat + 0.35987461993699 * S_RMntFrq + 
-1.09317668626142 * S_Recency + -1.09925349438658 * S_Teenhome ;
2445989   +   H1x3_2  =     0.10522923391314 * S_AcceptedCmpTotal
2445990   +          +     0.68417479453112 * S_Age  +     0.46966162186743 * S_Frq
2445991   +          +    -1.21537535753115 * S_Income  +    -1.87423294109672 *
2445992   +        S_Kidhome  +     0.76913864731495 * S_Mnt  +     1.08535778796502 *
2445993   +        S_MntFishProducts  +     1.27743864099826 * S_MntFruits
2445994   +          +     -0.3186089651882 * S_MntGoldProds  +    -0.00224333051647 *
2445995   +        S_MntMeatProducts  +    -1.28169616734092 * S_MntSweetProducts
2445996   +          +     1.67350500234032 * S_MntWines  +     1.09584504562467 *
2445997   +        S_MonthsAsCustomer  +    -1.45467876727494 * S_NumCatalogPurchases
2445998   +          +     0.85965187264096 * S_NumDealsPurchases
2445999   +          +    -1.15239933286756 * S_NumDistPurchases
2446000   +          +     1.20800889102387 * S_NumStorePurchases
2446001   +          +     1.08790389130242 * S_NumWebPurchases
2446002   +          +    -0.13665551161149 * S_NumWebVisitsMonth
2446003   +          +     1.02103499612659 * S_RFMstat  +    -0.12980097143044 *
2446004   +        S_RMntFrq  +     0.65854311654256 * S_Recency
2446005   +          +    -0.60999209572192 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.10522923391314 * S_AcceptedCmpTotal + 0.68417479453112 * 
S_Age + 0.46966162186743 * S_Frq + -1.21537535753115 * S_Income + -1.87423294109672 * 
S_Kidhome + 0.76913864731495 * S_Mnt + 1.08535778796502 * S_MntFishProducts + 1.27743864099826 
* S_MntFruits + -0.3186089651882 * S_MntGoldProds + -0.00224333051647 * S_MntMeatProducts + 
-1.28169616734092 * S_MntSweetProducts + 1.67350500234032 * S_MntWines + 1.09584504562467 * 
S_MonthsAsCustomer + -1.45467876727494 * S_NumCatalogPurchases + 0.85965187264096 * 
S_NumDealsPurchases + -1.15239933286756 * S_NumDistPurchases + 1.20800889102387 * 
S_NumStorePurchases + 1.08790389130242 * S_NumWebPurchases + -0.13665551161149 * 
S_NumWebVisitsMonth + 1.02103499612659 * S_RFMstat + -0.12980097143044 * S_RMntFrq + 
0.65854311654256 * S_Recency + -0.60999209572192 * S_Teenhome ;
2446006   +   H1x3_3  =    -0.72575004293074 * S_AcceptedCmpTotal
2446007   +          +     0.34932839743259 * S_Age  +     -0.2673460618328 * S_Frq
2446008   +          +     0.25743187687481 * S_Income  +    -0.02172890929346 *
2446009   +        S_Kidhome  +     1.21785656626837 * S_Mnt  +     0.37454359336223 *
2446010   +        S_MntFishProducts  +    -0.32600053706408 * S_MntFruits
2446011   +          +     0.57807148940534 * S_MntGoldProds  +     1.14736546512366 *
2446012   +        S_MntMeatProducts  +    -1.41517082393978 * S_MntSweetProducts
2446013   +          +    -1.44899595080061 * S_MntWines  +    -1.45520867126531 *
2446014   +        S_MonthsAsCustomer  +    -0.33372174099196 * S_NumCatalogPurchases
2446015   +          +     -0.5767607129654 * S_NumDealsPurchases
2446016   +          +     -0.2643921429796 * S_NumDistPurchases
2446017   +          +    -0.67417489911206 * S_NumStorePurchases
2446018   +          +    -0.51423877684891 * S_NumWebPurchases
2446019   +          +     1.40328299605176 * S_NumWebVisitsMonth
2446020   +          +     1.35588787174957 * S_RFMstat  +     1.98416436137119 *
2446021   +        S_RMntFrq  +     -0.8447362450681 * S_Recency
2446022   +          +    -1.04372961736437 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.72575004293074 * S_AcceptedCmpTotal + 0.34932839743259 * 
S_Age + -0.2673460618328 * S_Frq + 0.25743187687481 * S_Income + -0.02172890929346 * S_Kidhome 
+ 1.21785656626837 * S_Mnt + 0.37454359336223 * S_MntFishProducts + -0.32600053706408 * 
S_MntFruits + 0.57807148940534 * S_MntGoldProds + 1.14736546512366 * S_MntMeatProducts + 
-1.41517082393978 * S_MntSweetProducts + -1.44899595080061 * S_MntWines + -1.45520867126531 * 
S_MonthsAsCustomer + -0.33372174099196 * S_NumCatalogPurchases + -0.5767607129654 * 
S_NumDealsPurchases + -0.2643921429796 * S_NumDistPurchases + -0.67417489911206 * 
S_NumStorePurchases + -0.51423877684891 * S_NumWebPurchases + 1.40328299605176 * 
S_NumWebVisitsMonth + 1.35588787174957 * S_RFMstat + 1.98416436137119 * S_RMntFrq + 
-0.8447362450681 * S_Recency + -1.04372961736437 * S_Teenhome ;
2446023   +   H1x3_4  =     0.05745684959388 * S_AcceptedCmpTotal
2446024   +          +    -0.71077680161454 * S_Age  +      1.4854566142375 * S_Frq
2446025   +          +    -0.32870416928843 * S_Income  +    -0.24944295149087 *
2446026   +        S_Kidhome  +     -0.8312409740431 * S_Mnt  +    -0.09638646505384 *
2446027   +        S_MntFishProducts  +    -0.86550491354678 * S_MntFruits
2446028   +          +     1.46902858697296 * S_MntGoldProds  +      0.3661164136841 *
2446029   +        S_MntMeatProducts  +     0.43108270077708 * S_MntSweetProducts
2446030   +          +    -0.87140466249616 * S_MntWines  +     0.17511224898094 *
2446031   +        S_MonthsAsCustomer  +    -2.66256923117027 * S_NumCatalogPurchases
2446032   +          +      1.2821617657076 * S_NumDealsPurchases
2446033   +          +     1.26584115202735 * S_NumDistPurchases
2446034   +          +    -0.46597664211833 * S_NumStorePurchases
2446035   +          +     0.45652363472866 * S_NumWebPurchases
2446036   +          +    -2.66296112021252 * S_NumWebVisitsMonth
2446037   +          +    -0.86670667018974 * S_RFMstat  +     0.60866041131732 *
2446038   +        S_RMntFrq  +     1.31886754707923 * S_Recency
2446039   +          +    -0.09949653139413 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.05745684959388 * S_AcceptedCmpTotal + -0.71077680161454 * 
S_Age + 1.4854566142375 * S_Frq + -0.32870416928843 * S_Income + -0.24944295149087 * S_Kidhome 
+ -0.8312409740431 * S_Mnt + -0.09638646505384 * S_MntFishProducts + -0.86550491354678 * 
S_MntFruits + 1.46902858697296 * S_MntGoldProds + 0.3661164136841 * S_MntMeatProducts + 
0.43108270077708 * S_MntSweetProducts + -0.87140466249616 * S_MntWines + 0.17511224898094 * 
S_MonthsAsCustomer + -2.66256923117027 * S_NumCatalogPurchases + 1.2821617657076 * 
S_NumDealsPurchases + 1.26584115202735 * S_NumDistPurchases + -0.46597664211833 * 
S_NumStorePurchases + 0.45652363472866 * S_NumWebPurchases + -2.66296112021252 * 
S_NumWebVisitsMonth + -0.86670667018974 * S_RFMstat + 0.60866041131732 * S_RMntFrq + 
1.31886754707923 * S_Recency + -0.09949653139413 * S_Teenhome ;
2446040   +   H1x3_5  =    -0.66850525418144 * S_AcceptedCmpTotal
2446041   +          +     0.14331320698516 * S_Age  +    -0.82708146094779 * S_Frq
2446042   +          +    -0.95718847240937 * S_Income  +     1.37375648833049 *
2446043   +        S_Kidhome  +    -0.48314397401233 * S_Mnt  +     0.07047324834759 *
2446044   +        S_MntFishProducts  +     0.86114312801139 * S_MntFruits
2446045   +          +     0.54573348379533 * S_MntGoldProds  +    -0.05966372249273 *
2446046   +        S_MntMeatProducts  +     0.47275063848217 * S_MntSweetProducts
2446047   +          +    -0.62962007155261 * S_MntWines  +    -2.38081462831488 *
2446048   +        S_MonthsAsCustomer  +     0.56594272689824 * S_NumCatalogPurchases
2446049   +          +    -0.85162564171681 * S_NumDealsPurchases
2446050   +          +     0.64631099667221 * S_NumDistPurchases
2446051   +          +    -0.03081963858636 * S_NumStorePurchases
2446052   +          +    -0.24124717624664 * S_NumWebPurchases
2446053   +          +     0.56425980772372 * S_NumWebVisitsMonth
2446054   +          +    -0.32254616624678 * S_RFMstat  +     1.84875225899832 *
2446055   +        S_RMntFrq  +     0.08133312388911 * S_Recency
2446056   +          +    -0.19004451996479 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.66850525418144 * S_AcceptedCmpTotal + 0.14331320698516 * 
S_Age + -0.82708146094779 * S_Frq + -0.95718847240937 * S_Income + 1.37375648833049 * 
S_Kidhome + -0.48314397401233 * S_Mnt + 0.07047324834759 * S_MntFishProducts + 
0.86114312801139 * S_MntFruits + 0.54573348379533 * S_MntGoldProds + -0.05966372249273 * 
S_MntMeatProducts + 0.47275063848217 * S_MntSweetProducts + -0.62962007155261 * S_MntWines + 
-2.38081462831488 * S_MonthsAsCustomer + 0.56594272689824 * S_NumCatalogPurchases + 
-0.85162564171681 * S_NumDealsPurchases + 0.64631099667221 * S_NumDistPurchases + 
-0.03081963858636 * S_NumStorePurchases + -0.24124717624664 * S_NumWebPurchases + 
0.56425980772372 * S_NumWebVisitsMonth + -0.32254616624678 * S_RFMstat + 1.84875225899832 * 
S_RMntFrq + 0.08133312388911 * S_Recency + -0.19004451996479 * S_Teenhome ;
2446057   +   H1x3_1  = H1x3_1  +     1.03487942320068 * AcceptedCmp10
2446058   +          +     0.77723443135875 * AcceptedCmp20  +    -1.04686858569959 *
2446059   +        AcceptedCmp30  +    -1.87852311800194 * AcceptedCmp40
2446060   +          +    -0.69838759011672 * AcceptedCmp50  +     0.50242045854463 *
2446061   +        Complain0  +    -0.13339808164255 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.03487942320068 * AcceptedCmp10 + 0.77723443135875 * 
AcceptedCmp20 + -1.04686858569959 * AcceptedCmp30 + -1.87852311800194 * AcceptedCmp40 + 
-0.69838759011672 * AcceptedCmp50 + 0.50242045854463 * Complain0 + -0.13339808164255 * 
HigherEducationBinary0 ;
2446062   +   H1x3_2  = H1x3_2  +     0.39887299789564 * AcceptedCmp10
2446063   +          +     0.12293700562648 * AcceptedCmp20  +    -1.41656670681309 *
2446064   +        AcceptedCmp30  +    -1.04607557362847 * AcceptedCmp40
2446065   +          +     0.02824649030864 * AcceptedCmp50  +    -0.46581865837196 *
2446066   +        Complain0  +    -0.45913631308543 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.39887299789564 * AcceptedCmp10 + 0.12293700562648 * 
AcceptedCmp20 + -1.41656670681309 * AcceptedCmp30 + -1.04607557362847 * AcceptedCmp40 + 
0.02824649030864 * AcceptedCmp50 + -0.46581865837196 * Complain0 + -0.45913631308543 * 
HigherEducationBinary0 ;
2446067   +   H1x3_3  = H1x3_3  +     0.20672868292414 * AcceptedCmp10
2446068   +          +     0.52082182457868 * AcceptedCmp20  +     0.54911826263592 *
2446069   +        AcceptedCmp30  +    -0.02400616289922 * AcceptedCmp40
2446070   +          +     1.22209744911863 * AcceptedCmp50  +    -0.68243413694538 *
2446071   +        Complain0  +     0.15620895311704 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.20672868292414 * AcceptedCmp10 + 0.52082182457868 * 
AcceptedCmp20 + 0.54911826263592 * AcceptedCmp30 + -0.02400616289922 * AcceptedCmp40 + 
1.22209744911863 * AcceptedCmp50 + -0.68243413694538 * Complain0 + 0.15620895311704 * 
HigherEducationBinary0 ;
2446072   +   H1x3_4  = H1x3_4  +    -0.88269820758187 * AcceptedCmp10
2446073   +          +    -0.19276892535938 * AcceptedCmp20  +     1.26789056018511 *
2446074   +        AcceptedCmp30  +     0.04396979158385 * AcceptedCmp40
2446075   +          +     0.54194186871284 * AcceptedCmp50  +     2.07766091697967 *
2446076   +        Complain0  +    -0.43514178858246 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.88269820758187 * AcceptedCmp10 + -0.19276892535938 
* AcceptedCmp20 + 1.26789056018511 * AcceptedCmp30 + 0.04396979158385 * AcceptedCmp40 + 
0.54194186871284 * AcceptedCmp50 + 2.07766091697967 * Complain0 + -0.43514178858246 * 
HigherEducationBinary0 ;
2446077   +   H1x3_5  = H1x3_5  +     1.04303179873707 * AcceptedCmp10
2446078   +          +    -1.29742389809739 * AcceptedCmp20  +     1.21708533617895 *
2446079   +        AcceptedCmp30  +    -1.47807634614974 * AcceptedCmp40
2446080   +          +     -0.7694244559597 * AcceptedCmp50  +     0.51798162453723 *
2446081   +        Complain0  +    -0.95513113905832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.04303179873707 * AcceptedCmp10 + -1.29742389809739 * 
AcceptedCmp20 + 1.21708533617895 * AcceptedCmp30 + -1.47807634614974 * AcceptedCmp40 + 
-0.7694244559597 * AcceptedCmp50 + 0.51798162453723 * Complain0 + -0.95513113905832 * 
HigherEducationBinary0 ;
2446082   +   H1x3_1  = H1x3_1  +     1.27822716215014 * Education2n_Cycle
2446083   +          +     0.45900505383383 * EducationBasic  +    -0.35822992758656 *
2446084   +        EducationGraduation  +     0.05949934527868 * EducationMaster
2446085   +          +    -2.49973437075558 * Marital_StatusDivorced
2446086   +          +    -0.18076948182574 * Marital_StatusMarried
2446087   +          +     0.13498525495231 * Marital_StatusSingle
2446088   +          +    -0.02365465636052 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 1.27822716215014 * Education2n_Cycle + 
0.45900505383383 * EducationBasic + -0.35822992758656 * EducationGraduation + 0.05949934527868 
* EducationMaster + -2.49973437075558 * Marital_StatusDivorced + -0.18076948182574 * 
Marital_StatusMarried + 0.13498525495231 * Marital_StatusSingle + -0.02365465636052 * 
Marital_StatusTogether ;
2446089   +   H1x3_2  = H1x3_2  +    -1.14981446246051 * Education2n_Cycle
2446090   +          +     0.68006996858541 * EducationBasic  +    -0.06493857044709 *
2446091   +        EducationGraduation  +    -1.22462805502453 * EducationMaster
2446092   +          +       -0.59463732835 * Marital_StatusDivorced
2446093   +          +     1.37741332427598 * Marital_StatusMarried
2446094   +          +     -1.5833455713231 * Marital_StatusSingle
2446095   +          +     1.79205360628448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -1.14981446246051 * Education2n_Cycle + 
0.68006996858541 * EducationBasic + -0.06493857044709 * EducationGraduation + 
-1.22462805502453 * EducationMaster + -0.59463732835 * Marital_StatusDivorced + 
1.37741332427598 * Marital_StatusMarried + -1.5833455713231 * Marital_StatusSingle + 
1.79205360628448 * Marital_StatusTogether ;
2446096   +   H1x3_3  = H1x3_3  +     0.17779609626753 * Education2n_Cycle
2446097   +          +    -2.22704675950779 * EducationBasic  +     1.30292325944162 *
2446098   +        EducationGraduation  +     0.68083131423474 * EducationMaster
2446099   +          +    -0.44569556289443 * Marital_StatusDivorced
2446100   +          +     0.29918053103557 * Marital_StatusMarried
2446101   +          +    -0.10337314064224 * Marital_StatusSingle
2446102   +          +     0.04054221993299 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.17779609626753 * Education2n_Cycle + 
-2.22704675950779 * EducationBasic + 1.30292325944162 * EducationGraduation + 0.68083131423474 
* EducationMaster + -0.44569556289443 * Marital_StatusDivorced + 0.29918053103557 * 
Marital_StatusMarried + -0.10337314064224 * Marital_StatusSingle + 0.04054221993299 * 
Marital_StatusTogether ;
2446103   +   H1x3_4  = H1x3_4  +     1.16412985277542 * Education2n_Cycle
2446104   +          +     0.18806330813344 * EducationBasic  +     0.00212145829045 *
2446105   +        EducationGraduation  +     0.00087354662697 * EducationMaster
2446106   +          +     1.13881957277462 * Marital_StatusDivorced
2446107   +          +    -0.35849807146313 * Marital_StatusMarried
2446108   +          +    -0.22168731316885 * Marital_StatusSingle
2446109   +          +    -0.22672306263461 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + 1.16412985277542 * Education2n_Cycle + 
0.18806330813344 * EducationBasic + 0.00212145829045 * EducationGraduation + 0.00087354662697 
* EducationMaster + 1.13881957277462 * Marital_StatusDivorced + -0.35849807146313 * 
Marital_StatusMarried + -0.22168731316885 * Marital_StatusSingle + -0.22672306263461 * 
Marital_StatusTogether ;
2446110   +   H1x3_5  = H1x3_5  +    -1.25195599938207 * Education2n_Cycle
2446111   +          +    -0.60946428681789 * EducationBasic  +     0.39993500009227 *
2446112   +        EducationGraduation  +     0.43730905987249 * EducationMaster
2446113   +          +     1.10774969923269 * Marital_StatusDivorced
2446114   +          +     1.08409594073043 * Marital_StatusMarried
2446115   +          +    -0.33145048007894 * Marital_StatusSingle
2446116   +          +     1.68703837664761 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.25195599938207 * Education2n_Cycle + 
-0.60946428681789 * EducationBasic + 0.39993500009227 * EducationGraduation + 0.43730905987249 
* EducationMaster + 1.10774969923269 * Marital_StatusDivorced + 1.08409594073043 * 
Marital_StatusMarried + -0.33145048007894 * Marital_StatusSingle + 1.68703837664761 * 
Marital_StatusTogether ;
2446117   +   H1x3_1  =     1.76093149538288 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.76093149538288 + H1x3_1 ;
2446118   +   H1x3_2  =    -0.11243980195421 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.11243980195421 + H1x3_2 ;
2446119   +   H1x3_3  =    -2.59474781862449 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -2.59474781862449 + H1x3_3 ;
2446120   +   H1x3_4  =     0.25376473610258 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.25376473610258 + H1x3_4 ;
2446121   +   H1x3_5  =    -0.54808648261397 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.54808648261397 + H1x3_5 ;
2446122   +   _EPS = SQRT(CONSTANT('MACEPS')) ;
MPRINT(EM_DIAGRAM):   _EPS = SQRT(CONSTANT('MACEPS')) ;
2446123   +   _REC_EPS = 1/_EPS ;
MPRINT(EM_DIAGRAM):   _REC_EPS = 1/_EPS ;
2446124   +   DROP _REC_EPS _EPS ;
MPRINT(EM_DIAGRAM):   DROP _REC_EPS _EPS ;
2446125   +   IF H1x3_1  < _REC_EPS AND H1x3_1  > - _REC_EPS THEN
2446126   +   H1x3_1  = H1x3_1  * H1x3_1 ;
MPRINT(EM_DIAGRAM):   IF H1x3_1 < _REC_EPS AND H1x3_1 > - _REC_EPS THEN H1x3_1 = H1x3_1 * 
H1x3_1 ;
2446127   +   ELSE H1x3_1  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_1 = _REC_EPS ;
2446128   +   IF H1x3_2  < _REC_EPS AND H1x3_2  > - _REC_EPS THEN
2446129   +   H1x3_2  = H1x3_2  * H1x3_2 ;
MPRINT(EM_DIAGRAM):   IF H1x3_2 < _REC_EPS AND H1x3_2 > - _REC_EPS THEN H1x3_2 = H1x3_2 * 
H1x3_2 ;
2446130   +   ELSE H1x3_2  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_2 = _REC_EPS ;
2446131   +   IF H1x3_3  < _REC_EPS AND H1x3_3  > - _REC_EPS THEN
2446132   +   H1x3_3  = H1x3_3  * H1x3_3 ;
MPRINT(EM_DIAGRAM):   IF H1x3_3 < _REC_EPS AND H1x3_3 > - _REC_EPS THEN H1x3_3 = H1x3_3 * 
H1x3_3 ;
2446133   +   ELSE H1x3_3  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_3 = _REC_EPS ;
2446134   +   IF H1x3_4  < _REC_EPS AND H1x3_4  > - _REC_EPS THEN
2446135   +   H1x3_4  = H1x3_4  * H1x3_4 ;
MPRINT(EM_DIAGRAM):   IF H1x3_4 < _REC_EPS AND H1x3_4 > - _REC_EPS THEN H1x3_4 = H1x3_4 * 
H1x3_4 ;
2446136   +   ELSE H1x3_4  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_4 = _REC_EPS ;
2446137   +   IF H1x3_5  < _REC_EPS AND H1x3_5  > - _REC_EPS THEN
2446138   +   H1x3_5  = H1x3_5  * H1x3_5 ;
MPRINT(EM_DIAGRAM):   IF H1x3_5 < _REC_EPS AND H1x3_5 > - _REC_EPS THEN H1x3_5 = H1x3_5 * 
H1x3_5 ;
2446139   +   ELSE H1x3_5  = _REC_EPS ;
MPRINT(EM_DIAGRAM):   ELSE H1x3_5 = _REC_EPS ;
2446140   +END;
MPRINT(EM_DIAGRAM):   END;
2446141   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2446142   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2446143   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2446144   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2446145   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2446146   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2446147   +END;
MPRINT(EM_DIAGRAM):   END;
2446148   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2446149   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2446150   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2446151   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2446152   +   P_DepVar1  =     12.3694111963696 * H1x1_1  +     -9.1014019341077 * H1x1_2
2446153   +          +    -14.9093780045901 * H1x1_3  +     25.4505756686259 * H1x1_4
2446154   +          +    -13.3798044908382 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.3694111963696 * H1x1_1 + -9.1014019341077 * H1x1_2 + 
-14.9093780045901 * H1x1_3 + 25.4505756686259 * H1x1_4 + -13.3798044908382 * H1x1_5 ;
2446155   +   P_DepVar1  = P_DepVar1  +     -0.2373753683635 * H1x2_1
2446156   +          +    -0.03661175538589 * H1x2_2  +     0.29534813812803 * H1x2_3
2446157   +          +     0.11908166898588 * H1x2_4  +      -0.241544638637 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.2373753683635 * H1x2_1 + -0.03661175538589 * 
H1x2_2 + 0.29534813812803 * H1x2_3 + 0.11908166898588 * H1x2_4 + -0.241544638637 * H1x2_5 ;
2446158   +   P_DepVar1  = P_DepVar1  +    -0.00276620815201 * H1x3_1
2446159   +          +     0.00487849269566 * H1x3_2  +     0.01323887261394 * H1x3_3
2446160   +          +     -0.0271389925801 * H1x3_4  +     0.00026595473892 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.00276620815201 * H1x3_1 + 0.00487849269566 * 
H1x3_2 + 0.01323887261394 * H1x3_3 + -0.0271389925801 * H1x3_4 + 0.00026595473892 * H1x3_5 ;
2446161   +   P_DepVar1  =      4.0541137239843 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.0541137239843 + P_DepVar1 ;
2446162   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2446163   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2446164   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2446165   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2446166   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2446167   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2446168   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2446169   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2446170   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2446171   +END;
MPRINT(EM_DIAGRAM):   END;
2446172   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2446173   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2446174   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2446175   +END;
MPRINT(EM_DIAGRAM):   END;
2446176   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2446177   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2446178   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2446179   +END;
MPRINT(EM_DIAGRAM):   END;
2446180   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2446181   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2446182   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2446183   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2446184   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2446185   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2446186   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2446187   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2446188   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2446189   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2446190   +END;
MPRINT(EM_DIAGRAM):   END;
2446191   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2446192   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2446193   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2446194   +drop
2446195   +H1x1_1
2446196   +H1x1_2
2446197   +H1x1_3
2446198   +H1x1_4
2446199   +H1x1_5
2446200   +H1x2_1
2446201   +H1x2_2
2446202   +H1x2_3
2446203   +H1x2_4
2446204   +H1x2_5
2446205   +H1x3_1
2446206   +H1x3_2
2446207   +H1x3_3
2446208   +H1x3_4
2446209   +H1x3_5
2446210   +;
MPRINT(EM_DIAGRAM):   drop H1x1_1 H1x1_2 H1x1_3 H1x1_4 H1x1_5 H1x2_1 H1x2_2 H1x2_3 H1x2_4 
H1x2_5 H1x3_1 H1x3_2 H1x3_3 H1x3_4 H1x3_5 ;
2446211   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2446212    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2446213    quit;
2446214    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2446215    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2446216    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2446217    retain ID 2 Node "AutoNeural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural10";
2446218    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2446219    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4614 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4614 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2446220    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2446221    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2446222    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4614 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4614 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
      

2446223    proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME 
CREATOR);
2446224    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2446225    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446226    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2446227    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2446228    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2446229    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446230    proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
2446231    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2446232    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2446233    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2446234    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446235    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2446236    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2446237    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2446238    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2446239    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2446240    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2446240  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2263 rows and 5 columns.

2446241    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446242    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2446243    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2263 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 2263 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446244    filename _pref
2446244  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2446245    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2446246    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2446247   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2446248   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2446249   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2446250   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2446251   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2446252   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2446253    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2446254    quit;
2446255    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2446256    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2446257    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2446258    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2446259    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2446260    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446261    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2446262    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2446263    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446264    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2446265    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2446266    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2446267    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2446268    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2446269    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2446270    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446271    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2446272    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2446273    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2446274    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2446275    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446276    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2446277    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2446278    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2446279    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446280    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2446281    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2446281  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2446282    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2446283    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2446284    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 2267 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446285    filename _pref
2446285  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2446286    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2446287    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2446288   +
2446289   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2446290   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2446290  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2446291   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2446292   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2446293   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2446294   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2446295   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2446296    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2446297    quit;
2446298    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2446299    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2446300    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2446301    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2446302    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2446303    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446304    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2446305    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2446306    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2446307    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2446308    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2446309    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446310    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2446311    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2446312    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2446313    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446314    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2446315    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2446316    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2446317    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2446318    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446319    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2446320    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2446321    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2446322    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446323    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2446324    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2446324  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2446325    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2446326    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2446327    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 2306 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446328    filename _pref
2446328  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2446329    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2446330    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2446331   +
2446332   +
2446333   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2446334   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2446335   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2446336   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2446337   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2446338   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2446339   +
2446340   +
2446341   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2446342   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2446343   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2446344   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2446345   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2446346   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2446347   +
2446348   +
2446349   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2446350   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2446351   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2446352   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2446353   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2446354   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2446355   +
2446356   +
2446357   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2446358   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2446359   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2446360   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2446361   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2446362   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2446363   +
2446364   +
2446365   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2446366   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2446367   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2446368   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2446369   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2446370   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2446371   +
2446372   +
2446373   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2446374   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2446375   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2446376   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2446377   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2446378   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2446379   +
2446380   +
2446381   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2446382   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2446383   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2446384   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2446385   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2446386   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2446387   +
2446388   +
2446389   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2446390   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2446391   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2446392   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2446393   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2446394   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2446395   +if
2446396   +_FILTERNORM1 not in ( '.')
2446397   + and
2446398   +_FILTERNORM2 not in ( '.')
2446399   + and
2446400   +_FILTERNORM3 not in ( '.')
2446401   + and
2446402   +_FILTERNORM4 not in ( '.')
2446403   + and
2446404   +_FILTERNORM5 not in ( '.')
2446405   + and
2446406   +_FILTERNORM6 not in ( '.')
2446407   + and
2446408   +_FILTERNORM7 not in ( ' ')
2446409   + and
2446410   +_FILTERNORM8 not in ( ' ')
2446411   +and
2446412   +( Dt_Customer ne .)
2446413   +and ( Income ne . and (Income<=107000))
2446414   +and ( Kidhome ne .)
2446415   +and ( MntFishProducts ne .)
2446416   +and ( MntFruits ne .)
2446417   +and ( MntGoldProds ne .)
2446418   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2446419   +and ( MntSweetProducts ne .)
2446420   +and ( MntWines ne .)
2446421   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2446422   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2446423   +and ( NumStorePurchases ne .)
2446424   +and ( NumWebPurchases ne .)
2446425   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2446426   +and ( Recency ne .)
2446427   +and ( Teenhome ne .)
2446428   +and ( Year_Birth ne .)
2446429   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2446430   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2446431   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2446432   +end;
MPRINT(EM_DIAGRAM):   end;
2446433   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2446434   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2446435    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2446436    quit;
2446437    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2446438    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2446439    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2446440    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2446441    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2446442    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2446443    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2446444    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2446445    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446446    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2446447    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2446448    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446449    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2446450    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2446451    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2446452    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2446453    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2446454    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2446455    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2446456    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2446457    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2446458    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2446459    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2446460    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2446461    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446462    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2446463    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2446463  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2446464    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446465    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2446466    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 2372 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2446467    %macro varDept(fcmpdata=,id=);
2446468    %global nobs&id scoreFlag&id;
2446469    %let scoreFlag&id = 0;
2446470    %if &id=1 or ^&fcmpStart %then %do;
2446471    proc sort data=&fcmpdata out=_temp&id nodupkey;
2446472    by NAME;
2446473    where id=&id and LHS in( %let j=1;
2446474    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2446475    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2446476    "&var" %let j = %eval(&j+1);
2446477    %end;
2446478    );
2446479    run;
2446480    %let dsid = %sysfunc(open(_temp&id));
2446481    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2446482    %let dsid = %sysfunc(close(&dsid));
2446483    %if &&nobs&id %then %do;
2446484    %let scoreFlag&id = 1;
2446485    %let fcmpStart = 1;
2446486    %end;
2446487    %else %let fcmpStart = 0;
2446488    %end;
2446489    %else %do;
2446490    proc sort data=&fcmpdata out=_tempid;
2446491    where id=&id;
2446492    by LHS;
2446493    run;
2446494    %let dsid = %sysfunc(open(_tempid));
2446495    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2446496    %let dsid = %sysfunc(close(&dsid));
2446497    %if ^&&nobs&id %then %do;
2446498    proc datasets lib=work nolist;
2446499    delete _tempid;
2446500    run;
2446501    quit;
2446502    %end;
2446503    %else %do;
2446504    data _tempAll;
2446505    set %let j=%eval(&id-1);
2446506    %do x=1 %to &j;
2446507    %if &&nobs&x %then %do;
2446508    _temp&x %end;
2446509    %end;
2446510    ;
2446511    run;
2446512    proc sql;
2446513    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2446513  ! work._tempid p2 where p.name=p2.lhs;
2446514    quit;
2446515    data _temp&id;
2446516    set _temp&id;
2446517    where LHS ne '' and NAME ne '' and Node ne '';
2446518    run;
2446519    proc datasets lib=work nolist;
2446520    delete _tempAll;
2446521    run;
2446522    %let dsid = %sysfunc(open(_temp&id));
2446523    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2446524    %let dsid = %sysfunc(close(&dsid));
2446525    %if ^&&nobs&id %then %do;
2446526    proc datasets lib=work nolist;
2446527    delete _temp&id;
2446528    run;
2446529    quit;
2446530    %end;
2446531    %else %do;
2446532    %let scoreFlag&id = 1;
2446533    data _temp&id;
2446534    set _temp&id;
2446535    where LHS ne NAME and node ne '';
2446536    run;
2446537    %let dsid = %sysfunc(open(_temp&id));
2446538    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2446539    %let dsid = %sysfunc(close(&dsid));
2446540    %if ^&&nobs&id %then %do;
2446541    proc datasets lib=work nolist;
2446542    delete _temp&id;
2446543    run;
2446544    quit;
2446545    %end;
2446546    %else %do;
2446547    proc sort data=_temp&id nodupkey;
2446548    by LHS NAME;
2446549    run;
2446550    %end;
2446551    %end;
2446552    %end;
2446553    %end;
2446554    %mend varDept;
2446555    %macro optCode(outdata=fcmpdata);
2446556    %global fcmpStart;
2446557    %let fcmpStart = 0;
2446558    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2446559    %let NumNodes=9;
2446560    %do k=1 %to &NumNodes;
2446561    %vardept(fcmpdata=&outdata, id=&k);
2446562    %end;
2446563    %mend optCode;
2446564    %optcode(outData=EMWS8.Ensmbl45_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 134 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 100 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 34 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 34 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 77 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2446565    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2446566    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2446567    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2446568    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446569    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2446570    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2446571    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2446572    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446573    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2446574    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2446574  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2446575    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2446576    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2446577    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2446578    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446579    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2446580    * Ensmbl45: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Computing metadata for TRAIN data;
2446581    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL45_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl45_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl45_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl45_TRAIN out=WORK.M12NPPCE noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M12NPPCE;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M12NPPCE(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M12NPPCE;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M12NPPCE;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3M9T2BD NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3M9T2BD;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3M9T2BD;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3CDMPZB(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3M9T2BD;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3M9T2BD;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3M9T2BD;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3M9T2BD;
MPRINT(EMADVISECOLUMNS):   set WORK.M3M9T2BD;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl45_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl45";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl45";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2446901    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2446902    set EMWS8.Ensmbl45_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl45_EMINFO;
2446903    where DATA='Ensmbl45' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl45' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
2446904    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_EMINFO.
      WHERE (DATA='Ensmbl45') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446905    data EMWS8.Ensmbl45_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl45_EMINFO;
2446906    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2446907    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2446908    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL45_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
2446912    run;
2446913    data EMWS8.Ensmbl45_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl45_EMINFO;
2446914    set EMWS8.Ensmbl45_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl45_EMINFO WORK.MODELTEMP_INFO;
2446915    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL45_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL45_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2446916    proc sort data = EMWS8.Ensmbl45_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl45_EMINFO NOTHREADS;
2446917    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2446918    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL45_EMINFO.
NOTE: The data set EMWS8.ENSMBL45_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446919    proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
2446920    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2446921    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446922    proc sort data = EMWS8.Ensmbl45_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl45_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2446923    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2446924    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL45_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2446925    data EMWS8.Ensmbl45_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl45_EMINFO;
2446926    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2446927    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2446928    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL45_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2446929    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2446930    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2446931    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2446932    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.ENSMBL45_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.ENSMBL45_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
