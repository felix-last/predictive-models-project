MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.23 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                12.23 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O24SHPAM 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O24SHPAM new;
MPRINT(EM_DIAGRAM):   run;
1274169    filename emflow
1274169  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring AUTONEURAL10_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1274170    *------------------------------------------------------------*;
1274171    * Ensmbl45: Scoring AUTONEURAL10_TRAIN data;
1274172    *------------------------------------------------------------*;
1274173    data EMWS8.Ensmbl45_TRAIN
1274174    / view=EMWS8.Ensmbl45_TRAIN
1274175    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl45_TRAIN / view=EMWS8.Ensmbl45_TRAIN ;
1274176    set EMWS8.AutoNeural10_TRAIN
1274177    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_TRAIN ;
1274178    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\EMFLOWSCORE.sas.
1274179   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1274180   +* Ensmbl45: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Combine model for DepVar;
1274181   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1274182   +* Ensmbl45: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 1 of 5;
1274183   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1274184   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1274185   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1274186   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1274187   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1274188   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1274189   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1274190   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1274191   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1274192   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1274193   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1274194   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1274195   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1274196   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1274197   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1274198   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1274199   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1274200   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1274201   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1274202   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1274203   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1274204   +
1274205   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1274206   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1274206  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1274207   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1274208   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1274209   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1274210   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1274211   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1274212   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1274213   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1274214   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1274215   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1274216   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1274217   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1274218   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1274219   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1274220   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1274221   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1274222   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1274223   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1274224   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1274225   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1274226   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1274227   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1274228   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1274229   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1274230   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1274231   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1274232   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1274233   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1274234   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1274235   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1274236   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
1274237   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1274238   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1274239   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1274240   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1274241   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1274242   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1274243   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1274244   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1274245   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1274246   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1274247   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1274248   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1274249   +LENGTH _WARN_ $4
1274250   +      F_DepVar  $ 12
1274251   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1274252   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1274253   +
1274254   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1274255   +
1274256   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1274257   +
1274258   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1274259   +
1274260   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1274261   +
1274262   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1274263   +
1274264   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1274265   +
1274266   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1274267   +
1274268   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1274269   +
1274270   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1274271   +
1274272   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1274273   +
1274274   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1274275   +
1274276   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1274277   +
1274278   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1274279   +
1274280   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1274281   +
1274282   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1274283   +
1274284   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1274285   +
1274286   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1274287   +
1274288   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1274289   +
1274290   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1274291   +
1274292   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1274293   +
1274294   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1274295   +
1274296   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1274297   +
1274298   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1274299   +
1274300   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1274301   +
1274302   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1274303   +
1274304   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1274305   +
1274306   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1274307   +
1274308   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1274309   +
1274310   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1274311   +
1274312   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1274313   +
1274314   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1274315   +
1274316   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1274317   +
1274318   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1274319   +
1274320   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1274321   +
1274322   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1274323   +
1274324   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1274325   +
1274326   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1274327   +
1274328   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1274329   +
1274330   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1274331   +
1274332   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1274333   +
1274334   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1274335   +
1274336   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1274337   +
1274338   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1274339   +
1274340   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1274341   +
1274342   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1274343   +
1274344   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1274345   +
1274346   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1274347   +
1274348   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1274349   +
1274350   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1274351   +
1274352   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1274353   +
1274354   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
1274355   +
1274356   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
1274357   +
1274358   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1274359   +
1274360   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1274361   +
1274362   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1274363   +
1274364   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1274365   +
1274366   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1274367   +
1274368   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1274369   +
1274370   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1274371   +
1274372   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1274373   +
1274374   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
1274375   +
1274376   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
1274377   +
1274378   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1274379   +
1274380   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1274381   +
1274382   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1274383   +
1274384   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
1274385   +
1274386   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
1274387   +
1274388   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1274389   +
1274390   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1274391   +
1274392   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1274393   +
1274394   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1274395   +
1274396   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1274397   +
1274398   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1274399   +
1274400   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1274401   +
1274402   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1274403   +
1274404   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1274405   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1274406   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1274407   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1274408   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1274409   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1274410   +end;
MPRINT(EM_DIAGRAM):   end;
1274411   +else do;
MPRINT(EM_DIAGRAM):   else do;
1274412   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1274413   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1274414   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1274415   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1274416   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1274417   +   end;
MPRINT(EM_DIAGRAM):   end;
1274418   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1274419   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1274420   +   end;
MPRINT(EM_DIAGRAM):   end;
1274421   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1274422   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1274423   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1274424   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1274425   +   end;
MPRINT(EM_DIAGRAM):   end;
1274426   +end;
MPRINT(EM_DIAGRAM):   end;
1274427   +
1274428   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1274429   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1274430   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1274431   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1274432   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1274433   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1274434   +end;
MPRINT(EM_DIAGRAM):   end;
1274435   +else do;
MPRINT(EM_DIAGRAM):   else do;
1274436   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1274437   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1274438   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1274439   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1274440   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1274441   +   end;
MPRINT(EM_DIAGRAM):   end;
1274442   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1274443   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1274444   +   end;
MPRINT(EM_DIAGRAM):   end;
1274445   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1274446   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1274447   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1274448   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1274449   +   end;
MPRINT(EM_DIAGRAM):   end;
1274450   +end;
MPRINT(EM_DIAGRAM):   end;
1274451   +
1274452   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1274453   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1274454   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1274455   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1274456   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1274457   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1274458   +end;
MPRINT(EM_DIAGRAM):   end;
1274459   +else do;
MPRINT(EM_DIAGRAM):   else do;
1274460   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1274461   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1274462   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1274463   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1274464   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1274465   +   end;
MPRINT(EM_DIAGRAM):   end;
1274466   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1274467   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1274468   +   end;
MPRINT(EM_DIAGRAM):   end;
1274469   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1274470   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1274471   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1274472   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1274473   +   end;
MPRINT(EM_DIAGRAM):   end;
1274474   +end;
MPRINT(EM_DIAGRAM):   end;
1274475   +
1274476   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1274477   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1274478   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1274479   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1274480   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1274481   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1274482   +end;
MPRINT(EM_DIAGRAM):   end;
1274483   +else do;
MPRINT(EM_DIAGRAM):   else do;
1274484   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1274485   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1274486   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1274487   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1274488   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1274489   +   end;
MPRINT(EM_DIAGRAM):   end;
1274490   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1274491   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1274492   +   end;
MPRINT(EM_DIAGRAM):   end;
1274493   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1274494   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1274495   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1274496   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1274497   +   end;
MPRINT(EM_DIAGRAM):   end;
1274498   +end;
MPRINT(EM_DIAGRAM):   end;
1274499   +
1274500   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1274501   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1274502   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1274503   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1274504   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1274505   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1274506   +end;
MPRINT(EM_DIAGRAM):   end;
1274507   +else do;
MPRINT(EM_DIAGRAM):   else do;
1274508   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1274509   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1274510   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1274511   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1274512   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1274513   +   end;
MPRINT(EM_DIAGRAM):   end;
1274514   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1274515   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1274516   +   end;
MPRINT(EM_DIAGRAM):   end;
1274517   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1274518   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1274519   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1274520   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1274521   +   end;
MPRINT(EM_DIAGRAM):   end;
1274522   +end;
MPRINT(EM_DIAGRAM):   end;
1274523   +
1274524   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1274525   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1274526   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1274527   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1274528   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1274529   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1274530   +end;
MPRINT(EM_DIAGRAM):   end;
1274531   +else do;
MPRINT(EM_DIAGRAM):   else do;
1274532   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1274533   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1274534   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1274535   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1274536   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1274537   +   end;
MPRINT(EM_DIAGRAM):   end;
1274538   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1274539   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1274540   +   end;
MPRINT(EM_DIAGRAM):   end;
1274541   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1274542   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1274543   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1274544   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1274545   +   end;
MPRINT(EM_DIAGRAM):   end;
1274546   +end;
MPRINT(EM_DIAGRAM):   end;
1274547   +
1274548   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1274549   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1274550   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1274551   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1274552   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1274553   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1274554   +end;
MPRINT(EM_DIAGRAM):   end;
1274555   +else do;
MPRINT(EM_DIAGRAM):   else do;
1274556   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1274557   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1274558   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1274559   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1274560   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1274561   +   end;
MPRINT(EM_DIAGRAM):   end;
1274562   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1274563   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1274564   +   end;
MPRINT(EM_DIAGRAM):   end;
1274565   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1274566   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1274567   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1274568   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1274569   +   end;
MPRINT(EM_DIAGRAM):   end;
1274570   +end;
MPRINT(EM_DIAGRAM):   end;
1274571   +
1274572   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1274573   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1274574   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1274575   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1274576   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1274577   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1274578   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1274579   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1274580   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1274581   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1274582   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1274583   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1274584   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1274585   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1274586   +end;
MPRINT(EM_DIAGRAM):   end;
1274587   +else do;
MPRINT(EM_DIAGRAM):   else do;
1274588   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1274589   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1274590   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1274591   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1274592   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1274593   +   end;
MPRINT(EM_DIAGRAM):   end;
1274594   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1274595   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1274596   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1274597   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1274598   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1274599   +   end;
MPRINT(EM_DIAGRAM):   end;
1274600   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1274601   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1274602   +   end;
MPRINT(EM_DIAGRAM):   end;
1274603   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1274604   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1274605   +   end;
MPRINT(EM_DIAGRAM):   end;
1274606   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1274607   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1274608   +   end;
MPRINT(EM_DIAGRAM):   end;
1274609   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1274610   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1274611   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1274612   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1274613   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1274614   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1274615   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1274616   +   end;
MPRINT(EM_DIAGRAM):   end;
1274617   +end;
MPRINT(EM_DIAGRAM):   end;
1274618   +
1274619   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1274620   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1274621   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1274622   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1274623   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1274624   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1274625   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1274626   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1274627   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1274628   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1274629   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1274630   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1274631   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1274632   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1274633   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1274634   +end;
MPRINT(EM_DIAGRAM):   end;
1274635   +else do;
MPRINT(EM_DIAGRAM):   else do;
1274636   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1274637   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1274638   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1274639   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1274640   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1274641   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1274642   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1274643   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1274644   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1274645   +         end;
MPRINT(EM_DIAGRAM):   end;
1274646   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1274647   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1274648   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1274649   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1274650   +            end;
MPRINT(EM_DIAGRAM):   end;
1274651   +         end;
MPRINT(EM_DIAGRAM):   end;
1274652   +      end;
MPRINT(EM_DIAGRAM):   end;
1274653   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1274654   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1274655   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1274656   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1274657   +         end;
MPRINT(EM_DIAGRAM):   end;
1274658   +      end;
MPRINT(EM_DIAGRAM):   end;
1274659   +   end;
MPRINT(EM_DIAGRAM):   end;
1274660   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1274661   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1274662   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1274663   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1274664   +      end;
MPRINT(EM_DIAGRAM):   end;
1274665   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1274666   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1274667   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1274668   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1274669   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1274670   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1274671   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1274672   +         end;
MPRINT(EM_DIAGRAM):   end;
1274673   +      end;
MPRINT(EM_DIAGRAM):   end;
1274674   +   end;
MPRINT(EM_DIAGRAM):   end;
1274675   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1274676   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1274677   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1274678   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1274679   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1274680   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1274681   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1274682   +   end;
MPRINT(EM_DIAGRAM):   end;
1274683   +end;
MPRINT(EM_DIAGRAM):   end;
1274684   +
1274685   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1274686   +*** Checking missing input Interval
1274687   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1274688   +
1274689   +IF NMISS(
1274690   +   AcceptedCmpTotal ,
1274691   +   Age ,
1274692   +   Frq ,
1274693   +   Income ,
1274694   +   Kidhome ,
1274695   +   Mnt ,
1274696   +   MntFishProducts ,
1274697   +   MntFruits ,
1274698   +   MntGoldProds ,
1274699   +   MntMeatProducts ,
1274700   +   MntSweetProducts ,
1274701   +   MntWines ,
1274702   +   MonthsAsCustomer ,
1274703   +   NumCatalogPurchases ,
1274704   +   NumDealsPurchases ,
1274705   +   NumDistPurchases ,
1274706   +   NumStorePurchases ,
1274707   +   NumWebPurchases ,
1274708   +   NumWebVisitsMonth ,
1274709   +   RFMstat ,
1274710   +   RMntFrq ,
1274711   +   Recency ,
1274712   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1274713   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1274714   +
1274715   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1274716   +END;
MPRINT(EM_DIAGRAM):   END;
1274717   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1274718   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1274719   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1274720   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1274721   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1274722   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1274723   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1274724   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1274725   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1274726   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1274727   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1274728   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1274729   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1274730   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1274731   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1274732   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1274733   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1274734   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1274735   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1274736   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1274737   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1274738   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1274739   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1274740   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1274741   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1274742   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1274743   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1274744   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1274745   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1274746   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1274747   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1274748   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1274749   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1274750   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1274751   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1274752   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1274753   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1274754   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1274755   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1274756   +END;
MPRINT(EM_DIAGRAM):   END;
1274757   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1274758   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1274759   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1274760   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1274761   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1274762   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1274763   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1274764   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1274765   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1274766   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1274767   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1274768   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1274769   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1274770   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1274771   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1274772   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1274773   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1274774   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1274775   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1274776   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1274777   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1274778   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1274779   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1274780   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1274781   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1274782   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1274783   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1274784   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1274785   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1274786   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1274787   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1274788   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1274789   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1274790   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1274791   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1274792   +   ELSE S_NumCatalogPurchases
1274793   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1274794   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1274795   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1274796   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1274797   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1274798   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1274799   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1274800   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1274801   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1274802   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1274803   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1274804   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1274805   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1274806   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1274807   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1274808   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1274809   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1274810   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1274811   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1274812   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1274813   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1274814   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1274815   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1274816   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1274817   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1274818   +END;
MPRINT(EM_DIAGRAM):   END;
1274819   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1274820   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1274821   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1274822   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1274823   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1274824   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1274825   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1274826   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1274827   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1274828   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1274829   +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
1274830   +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
1274831   +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
1274832   +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
1274833   +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
1274834   +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
1274835   +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
1274836   +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
1274837   +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
1274838   +          +     3.45371614080196 * S_NumDealsPurchases
1274839   +          +     0.19118374544537 * S_NumDistPurchases
1274840   +          +    -2.45138001446793 * S_NumStorePurchases
1274841   +          +    -0.11424280244155 * S_NumWebPurchases
1274842   +          +    -2.31770357716565 * S_NumWebVisitsMonth
1274843   +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
1274844   +        S_RMntFrq  +     0.26870809438679 * S_Recency
1274845   +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 * 
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 * 
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts + 
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 * 
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines + 
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases + 
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases + 
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases + 
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 * 
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
1274846   +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
1274847   +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
1274848   +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
1274849   +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
1274850   +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
1274851   +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
1274852   +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
1274853   +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
1274854   +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
1274855   +          +    -1.28390925647659 * S_NumDealsPurchases
1274856   +          +     0.82669177239926 * S_NumDistPurchases
1274857   +          +     1.71678585204511 * S_NumStorePurchases
1274858   +          +     1.49226295608046 * S_NumWebPurchases
1274859   +          +     -4.0105103018388 * S_NumWebVisitsMonth
1274860   +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
1274861   +        S_RMntFrq  +     4.74241121363086 * S_Recency
1274862   +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 * 
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome 
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 * 
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts + 
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 * 
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 * 
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 * 
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 * 
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq + 
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
1274863   +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
1274864   +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
1274865   +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
1274866   +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
1274867   +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
1274868   +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
1274869   +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
1274870   +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
1274871   +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
1274872   +          +     0.22958626391725 * S_NumDealsPurchases
1274873   +          +    -0.02046515813996 * S_NumDistPurchases
1274874   +          +      0.8618502050837 * S_NumStorePurchases
1274875   +          +     1.45175370326009 * S_NumWebPurchases
1274876   +          +    -0.86122442436156 * S_NumWebVisitsMonth
1274877   +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
1274878   +        S_RMntFrq  +    -0.08202178452839 * S_Recency
1274879   +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 * 
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome 
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 * 
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts + 
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 * 
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 * 
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 * 
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 * 
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq + 
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
1274880   +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
1274881   +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
1274882   +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
1274883   +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
1274884   +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
1274885   +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
1274886   +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
1274887   +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
1274888   +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
1274889   +          +     1.25310034610344 * S_NumDealsPurchases
1274890   +          +     0.92141098602176 * S_NumDistPurchases
1274891   +          +    -0.08806509391473 * S_NumStorePurchases
1274892   +          +     -1.0533787624668 * S_NumWebPurchases
1274893   +          +     3.07050739830585 * S_NumWebVisitsMonth
1274894   +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
1274895   +        S_RMntFrq  +     -3.8741602707981 * S_Recency
1274896   +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 * 
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome 
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 * 
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts + 
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 * 
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 * 
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 * 
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 * 
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq + 
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
1274897   +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
1274898   +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
1274899   +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
1274900   +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
1274901   +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
1274902   +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
1274903   +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
1274904   +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
1274905   +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
1274906   +          +    -1.68259553608287 * S_NumDealsPurchases
1274907   +          +    -0.53835572290445 * S_NumDistPurchases
1274908   +          +     1.25833922835446 * S_NumStorePurchases
1274909   +          +     0.48300830623998 * S_NumWebPurchases
1274910   +          +    -2.20119275236582 * S_NumWebVisitsMonth
1274911   +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
1274912   +        S_RMntFrq  +     0.35692712879409 * S_Recency
1274913   +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 * 
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome 
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 * 
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts + 
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 * 
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 * 
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 * 
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 * 
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq + 
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
1274914   +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
1274915   +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
1274916   +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
1274917   +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
1274918   +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 * 
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 + 
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 * 
HigherEducationBinary0 ;
1274919   +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
1274920   +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
1274921   +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
1274922   +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
1274923   +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 * 
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 + 
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 * 
HigherEducationBinary0 ;
1274924   +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
1274925   +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
1274926   +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
1274927   +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
1274928   +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 * 
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 + 
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 * 
HigherEducationBinary0 ;
1274929   +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
1274930   +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
1274931   +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
1274932   +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
1274933   +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355 
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 + 
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 * 
HigherEducationBinary0 ;
1274934   +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
1274935   +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
1274936   +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
1274937   +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
1274938   +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255 
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 + 
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 * 
HigherEducationBinary0 ;
1274939   +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
1274940   +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
1274941   +        EducationGraduation  +     1.25189584055994 * EducationMaster
1274942   +          +     0.26230568150721 * Marital_StatusDivorced
1274943   +          +     0.27563523967756 * Marital_StatusMarried
1274944   +          +     0.54464481618478 * Marital_StatusSingle
1274945   +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931 
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster 
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried + 
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
1274946   +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
1274947   +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
1274948   +        EducationGraduation  +     0.29772013614284 * EducationMaster
1274949   +          +    -0.06750661313108 * Marital_StatusDivorced
1274950   +          +     1.48628445854207 * Marital_StatusMarried
1274951   +          +    -0.52197797291165 * Marital_StatusSingle
1274952   +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle + 
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284 
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 * 
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 * 
Marital_StatusTogether ;
1274953   +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
1274954   +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
1274955   +        EducationGraduation  +     0.45665087056809 * EducationMaster
1274956   +          +     0.03219453957597 * Marital_StatusDivorced
1274957   +          +    -0.73835008216677 * Marital_StatusMarried
1274958   +          +     0.11212575818086 * Marital_StatusSingle
1274959   +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle + 
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 * 
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 * 
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 * 
Marital_StatusTogether ;
1274960   +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
1274961   +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
1274962   +        EducationGraduation  +    -1.00228990059701 * EducationMaster
1274963   +          +    -0.95055539413405 * Marital_StatusDivorced
1274964   +          +    -1.65922419336067 * Marital_StatusMarried
1274965   +          +     0.78727538125107 * Marital_StatusSingle
1274966   +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle + 
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701 
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 * 
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 * 
Marital_StatusTogether ;
1274967   +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
1274968   +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
1274969   +        EducationGraduation  +     0.46710355433642 * EducationMaster
1274970   +          +     -4.1747415035634 * Marital_StatusDivorced
1274971   +          +     3.61194282451968 * Marital_StatusMarried
1274972   +          +     -3.2800495365546 * Marital_StatusSingle
1274973   +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle + 
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642 
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 * 
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 * 
Marital_StatusTogether ;
1274974   +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
1274975   +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
1274976   +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
1274977   +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
1274978   +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
1274979   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1274980   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1274981   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1274982   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1274983   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1274984   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1274985   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1274986   +END;
MPRINT(EM_DIAGRAM):   END;
1274987   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1274988   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1274989   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1274990   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1274991   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1274992   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1274993   +END;
MPRINT(EM_DIAGRAM):   END;
1274994   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1274995   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1274996   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1274997   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1274998   +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
1274999   +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
1275000   +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
1275001   +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
1275002   +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
1275003   +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
1275004   +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
1275005   +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
1275006   +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
1275007   +          +     1.29727972396867 * S_NumDealsPurchases
1275008   +          +     -0.4796144286007 * S_NumDistPurchases
1275009   +          +     0.88365985808591 * S_NumStorePurchases
1275010   +          +     0.68522096892804 * S_NumWebPurchases
1275011   +          +     0.54931043107798 * S_NumWebVisitsMonth
1275012   +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
1275013   +        S_RMntFrq  +     2.35704770144328 * S_Recency
1275014   +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 * 
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome 
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 * 
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts + 
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 * 
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 * 
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 * 
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 * 
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq + 
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
1275015   +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
1275016   +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
1275017   +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
1275018   +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
1275019   +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
1275020   +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
1275021   +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
1275022   +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
1275023   +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
1275024   +          +     0.26997834581422 * S_NumDealsPurchases
1275025   +          +      1.4974894627406 * S_NumDistPurchases
1275026   +          +     0.20577850505638 * S_NumStorePurchases
1275027   +          +     0.67578530037026 * S_NumWebPurchases
1275028   +          +     1.48893165613941 * S_NumWebVisitsMonth
1275029   +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
1275030   +        S_RMntFrq  +    -1.40718347701522 * S_Recency
1275031   +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 * 
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 * 
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts + 
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 * 
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines + 
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases + 
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases + 
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases + 
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 * 
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
1275032   +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
1275033   +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
1275034   +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
1275035   +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
1275036   +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
1275037   +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
1275038   +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
1275039   +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
1275040   +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
1275041   +          +    -0.75474919633886 * S_NumDealsPurchases
1275042   +          +     2.21872386475638 * S_NumDistPurchases
1275043   +          +    -0.36191460108989 * S_NumStorePurchases
1275044   +          +     0.03160010932412 * S_NumWebPurchases
1275045   +          +     0.00984650739909 * S_NumWebVisitsMonth
1275046   +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
1275047   +        S_RMntFrq  +     0.97890474913417 * S_Recency
1275048   +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 * 
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome + 
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 * 
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts + 
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 * 
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 * 
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 * 
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 * 
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq + 
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
1275049   +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
1275050   +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
1275051   +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
1275052   +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
1275053   +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
1275054   +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
1275055   +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
1275056   +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
1275057   +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
1275058   +          +    -1.12057357865269 * S_NumDealsPurchases
1275059   +          +    -0.70841760614521 * S_NumDistPurchases
1275060   +          +    -1.39174816270404 * S_NumStorePurchases
1275061   +          +    -1.62343249380806 * S_NumWebPurchases
1275062   +          +    -0.73097954508465 * S_NumWebVisitsMonth
1275063   +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
1275064   +        S_RMntFrq  +    -1.13585643618227 * S_Recency
1275065   +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 * 
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 * 
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658 
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts + 
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 * 
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 * 
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 * 
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 * 
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq + 
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
1275066   +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
1275067   +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
1275068   +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
1275069   +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
1275070   +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
1275071   +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
1275072   +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
1275073   +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
1275074   +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
1275075   +          +     0.66880481485557 * S_NumDealsPurchases
1275076   +          +     0.69540174544859 * S_NumDistPurchases
1275077   +          +     1.68246546921736 * S_NumStorePurchases
1275078   +          +     1.85958176898295 * S_NumWebPurchases
1275079   +          +    -0.23815810306565 * S_NumWebVisitsMonth
1275080   +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
1275081   +        S_RMntFrq  +    -2.12360922264332 * S_Recency
1275082   +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 * 
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome 
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 * 
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts + 
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 * 
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 * 
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 * 
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 * 
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq + 
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
1275083   +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
1275084   +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
1275085   +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
1275086   +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
1275087   +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761 
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 + 
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 * 
HigherEducationBinary0 ;
1275088   +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
1275089   +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
1275090   +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
1275091   +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
1275092   +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 * 
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 + 
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 * 
HigherEducationBinary0 ;
1275093   +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
1275094   +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
1275095   +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
1275096   +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
1275097   +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 * 
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 + 
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 * 
HigherEducationBinary0 ;
1275098   +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
1275099   +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
1275100   +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
1275101   +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
1275102   +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 * 
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 + 
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 * 
HigherEducationBinary0 ;
1275103   +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
1275104   +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
1275105   +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
1275106   +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
1275107   +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 * 
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 + 
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 * 
HigherEducationBinary0 ;
1275108   +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
1275109   +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
1275110   +        EducationGraduation  +     0.32623787352656 * EducationMaster
1275111   +          +      0.2766977476799 * Marital_StatusDivorced
1275112   +          +     0.99585126449473 * Marital_StatusMarried
1275113   +          +    -0.71244490682808 * Marital_StatusSingle
1275114   +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle + 
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656 
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 * 
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 * 
Marital_StatusTogether ;
1275115   +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
1275116   +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
1275117   +        EducationGraduation  +     0.47239961039918 * EducationMaster
1275118   +          +     0.04724779113048 * Marital_StatusDivorced
1275119   +          +    -0.80186231440666 * Marital_StatusMarried
1275120   +          +    -0.02226793584171 * Marital_StatusSingle
1275121   +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle + 
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918 
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 * 
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 * 
Marital_StatusTogether ;
1275122   +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
1275123   +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
1275124   +        EducationGraduation  +     0.41284540548646 * EducationMaster
1275125   +          +     0.28206835683721 * Marital_StatusDivorced
1275126   +          +     0.46500886756532 * Marital_StatusMarried
1275127   +          +     0.35327545255503 * Marital_StatusSingle
1275128   +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle + 
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation + 
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced + 
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle + 
0.58394650567036 * Marital_StatusTogether ;
1275129   +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
1275130   +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
1275131   +        EducationGraduation  +    -0.29812527209479 * EducationMaster
1275132   +          +     1.22291788006392 * Marital_StatusDivorced
1275133   +          +    -2.27040720272432 * Marital_StatusMarried
1275134   +          +     1.13606780043773 * Marital_StatusSingle
1275135   +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle + 
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479 
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 * 
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 * 
Marital_StatusTogether ;
1275136   +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
1275137   +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
1275138   +        EducationGraduation  +      0.4909097120378 * EducationMaster
1275139   +          +     -0.3999800759199 * Marital_StatusDivorced
1275140   +          +    -0.40978271635345 * Marital_StatusMarried
1275141   +          +    -0.55524279444227 * Marital_StatusSingle
1275142   +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle + 
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 * 
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 * 
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 * 
Marital_StatusTogether ;
1275143   +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
1275144   +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
1275145   +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
1275146   +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
1275147   +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
1275148   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1275149   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1275150   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1275151   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
1275152   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
1275153   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
1275154   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
1275155   +END;
MPRINT(EM_DIAGRAM):   END;
1275156   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1275157   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1275158   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1275159   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1275160   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1275161   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1275162   +END;
MPRINT(EM_DIAGRAM):   END;
1275163   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1275164   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1275165   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1275166   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1275167   +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
1275168   +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
1275169   +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
1275170   +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
1275171   +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
1275172   +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
1275173   +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
1275174   +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
1275175   +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
1275176   +          +     0.15783958682465 * S_NumDealsPurchases
1275177   +          +     1.52124708558457 * S_NumDistPurchases
1275178   +          +     -1.3804418313581 * S_NumStorePurchases
1275179   +          +    -1.29570111649272 * S_NumWebPurchases
1275180   +          +    -0.64280706056547 * S_NumWebVisitsMonth
1275181   +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
1275182   +        S_RMntFrq  +    -0.06726660535826 * S_Recency
1275183   +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 * 
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome 
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 * 
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts + 
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 * 
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 * 
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 * 
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 * 
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq + 
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
1275184   +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
1275185   +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
1275186   +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
1275187   +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
1275188   +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
1275189   +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
1275190   +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
1275191   +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
1275192   +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
1275193   +          +     0.12337111358286 * S_NumDealsPurchases
1275194   +          +     -2.3848926094027 * S_NumDistPurchases
1275195   +          +    -1.20666646996433 * S_NumStorePurchases
1275196   +          +     0.89549302881365 * S_NumWebPurchases
1275197   +          +     0.95359042569947 * S_NumWebVisitsMonth
1275198   +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
1275199   +        S_RMntFrq  +     0.17682790616815 * S_Recency
1275200   +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 * 
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome 
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 * 
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts + 
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 * 
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 * 
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 * 
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 * 
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq + 
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
1275201   +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
1275202   +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
1275203   +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
1275204   +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
1275205   +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
1275206   +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
1275207   +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
1275208   +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
1275209   +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
1275210   +          +    -1.05383642674948 * S_NumDealsPurchases
1275211   +          +     1.71861984509369 * S_NumDistPurchases
1275212   +          +     1.47595181536047 * S_NumStorePurchases
1275213   +          +    -1.64165005491178 * S_NumWebPurchases
1275214   +          +    -2.35130004742828 * S_NumWebVisitsMonth
1275215   +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
1275216   +        S_RMntFrq  +    -1.27356615687944 * S_Recency
1275217   +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 * 
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 * 
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241 
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts + 
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 * 
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 * 
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 * 
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 * 
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq + 
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
1275218   +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
1275219   +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
1275220   +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
1275221   +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
1275222   +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
1275223   +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
1275224   +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
1275225   +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
1275226   +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
1275227   +          +     0.13347794794222 * S_NumDealsPurchases
1275228   +          +     0.30533639886561 * S_NumDistPurchases
1275229   +          +     1.63892955540526 * S_NumStorePurchases
1275230   +          +     0.43734586516446 * S_NumWebPurchases
1275231   +          +     1.79260779802864 * S_NumWebVisitsMonth
1275232   +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
1275233   +        S_RMntFrq  +    -0.32271271703746 * S_Recency
1275234   +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 * 
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome + 
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 * 
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts + 
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 * 
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 * 
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 * 
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 * 
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq + 
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
1275235   +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
1275236   +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
1275237   +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
1275238   +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
1275239   +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
1275240   +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
1275241   +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
1275242   +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
1275243   +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
1275244   +          +     1.64209094349557 * S_NumDealsPurchases
1275245   +          +    -0.38876870460627 * S_NumDistPurchases
1275246   +          +    -0.48559309584971 * S_NumStorePurchases
1275247   +          +     0.21254626353218 * S_NumWebPurchases
1275248   +          +    -0.71484448532542 * S_NumWebVisitsMonth
1275249   +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
1275250   +        S_RMntFrq  +     0.44893411588775 * S_Recency
1275251   +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 * 
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome 
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 * 
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts + 
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 * 
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 * 
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 * 
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 * 
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq + 
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
1275252   +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
1275253   +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
1275254   +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
1275255   +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
1275256   +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 * 
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 + 
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 * 
HigherEducationBinary0 ;
1275257   +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
1275258   +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
1275259   +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
1275260   +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
1275261   +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 * 
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 + 
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 * 
HigherEducationBinary0 ;
1275262   +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
1275263   +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
1275264   +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
1275265   +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
1275266   +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 * 
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 + 
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 * 
HigherEducationBinary0 ;
1275267   +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
1275268   +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
1275269   +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
1275270   +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
1275271   +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334 
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 + 
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 * 
HigherEducationBinary0 ;
1275272   +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
1275273   +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
1275274   +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
1275275   +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
1275276   +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 * 
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 + 
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 * 
HigherEducationBinary0 ;
1275277   +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
1275278   +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
1275279   +        EducationGraduation  +     0.46887304015863 * EducationMaster
1275280   +          +     1.33953173091973 * Marital_StatusDivorced
1275281   +          +    -0.26253208073262 * Marital_StatusMarried
1275282   +          +    -0.00960552682431 * Marital_StatusSingle
1275283   +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle + 
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation + 
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced + 
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle + 
1.02851334153667 * Marital_StatusTogether ;
1275284   +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
1275285   +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
1275286   +        EducationGraduation  +     1.05325310300372 * EducationMaster
1275287   +          +     1.43150850334311 * Marital_StatusDivorced
1275288   +          +    -0.69239127844934 * Marital_StatusMarried
1275289   +          +     2.08477562471559 * Marital_StatusSingle
1275290   +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle + 
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372 
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 * 
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 * 
Marital_StatusTogether ;
1275291   +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
1275292   +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
1275293   +        EducationGraduation  +     1.80436924796338 * EducationMaster
1275294   +          +     1.08387556786168 * Marital_StatusDivorced
1275295   +          +      1.0283506000217 * Marital_StatusMarried
1275296   +          +    -0.87069431107983 * Marital_StatusSingle
1275297   +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle + 
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338 
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 * 
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 * 
Marital_StatusTogether ;
1275298   +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
1275299   +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
1275300   +        EducationGraduation  +    -1.53859265107051 * EducationMaster
1275301   +          +      -1.347780188307 * Marital_StatusDivorced
1275302   +          +    -0.53911983240372 * Marital_StatusMarried
1275303   +          +     0.22083074159185 * Marital_StatusSingle
1275304   +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle + 
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation + 
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced + 
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle + 
0.46023807391468 * Marital_StatusTogether ;
1275305   +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
1275306   +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
1275307   +        EducationGraduation  +      1.6087631135774 * EducationMaster
1275308   +          +     1.46582538311384 * Marital_StatusDivorced
1275309   +          +     0.05256161016002 * Marital_StatusMarried
1275310   +          +    -1.21402967626877 * Marital_StatusSingle
1275311   +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle + 
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 * 
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 * 
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 * 
Marital_StatusTogether ;
1275312   +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
1275313   +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
1275314   +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
1275315   +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
1275316   +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
1275317   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1275318   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1275319   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1275320   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
1275321   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
1275322   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
1275323   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
1275324   +END;
MPRINT(EM_DIAGRAM):   END;
1275325   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1275326   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1275327   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1275328   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1275329   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
1275330   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
1275331   +END;
MPRINT(EM_DIAGRAM):   END;
1275332   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1275333   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1275334   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1275335   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1275336   +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
1275337   +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
1275338   +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 + 
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
1275339   +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
1275340   +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
1275341   +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 + 
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
1275342   +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
1275343   +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
1275344   +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 + 
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
1275345   +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
1275346   +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
1275347   +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 + 
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
1275348   +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
1275349   +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
1275350   +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2 
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
1275351   +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
1275352   +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
1275353   +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2 
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
1275354   +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
1275355   +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
1275356   +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2 
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
1275357   +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
1275358   +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
1275359   +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2 
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
1275360   +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
1275361   +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
1275362   +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2 
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
1275363   +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
1275364   +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
1275365   +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 + 
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
1275366   +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
1275367   +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
1275368   +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2 
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
1275369   +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
1275370   +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
1275371   +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2 
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
1275372   +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
1275373   +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
1275374   +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
1275375   +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
1275376   +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
1275377   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
1275378   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1275379   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1275380   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1275381   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1275382   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1275383   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1275384   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1275385   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1275386   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1275387   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1275388   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1275389   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1275390   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1275391   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1275392   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1275393   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1275394   +END;
MPRINT(EM_DIAGRAM):   END;
1275395   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1275396   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1275397   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1275398   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1275399   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1275400   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1275401   +END;
MPRINT(EM_DIAGRAM):   END;
1275402   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1275403   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1275404   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1275405   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1275406   +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
1275407   +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
1275408   +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 + 
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
1275409   +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
1275410   +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
1275411   +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 + 
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
1275412   +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
1275413   +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
1275414   +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 + 
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
1275415   +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
1275416   +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
1275417   +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 + 
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
1275418   +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
1275419   +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
1275420   +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 + 
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
1275421   +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
1275422   +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
1275423   +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2 
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
1275424   +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
1275425   +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
1275426   +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2 
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
1275427   +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
1275428   +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
1275429   +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2 
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
1275430   +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
1275431   +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
1275432   +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2 
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
1275433   +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
1275434   +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
1275435   +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 * 
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
1275436   +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
1275437   +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
1275438   +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2 
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
1275439   +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
1275440   +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
1275441   +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2 
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
1275442   +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
1275443   +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
1275444   +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
1275445   +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
1275446   +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
1275447   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
1275448   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1275449   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
1275450   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
1275451   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
1275452   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
1275453   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
1275454   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
1275455   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
1275456   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
1275457   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
1275458   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
1275459   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
1275460   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
1275461   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
1275462   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
1275463   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
1275464   +END;
MPRINT(EM_DIAGRAM):   END;
1275465   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1275466   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1275467   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1275468   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1275469   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
1275470   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
1275471   +END;
MPRINT(EM_DIAGRAM):   END;
1275472   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1275473   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1275474   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1275475   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1275476   +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
1275477   +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
1275478   +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 + 
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
1275479   +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
1275480   +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
1275481   +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 + 
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
1275482   +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
1275483   +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
1275484   +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 + 
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
1275485   +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
1275486   +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
1275487   +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 + 
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
1275488   +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
1275489   +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
1275490   +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2 
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
1275491   +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
1275492   +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
1275493   +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2 
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
1275494   +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
1275495   +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
1275496   +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2 
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
1275497   +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
1275498   +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
1275499   +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 * 
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
1275500   +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
1275501   +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
1275502   +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
1275503   +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
1275504   +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
1275505   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
1275506   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1275507   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
1275508   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
1275509   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
1275510   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
1275511   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
1275512   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
1275513   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
1275514   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
1275515   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
1275516   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
1275517   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
1275518   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
1275519   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
1275520   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
1275521   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
1275522   +END;
MPRINT(EM_DIAGRAM):   END;
1275523   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1275524   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1275525   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1275526   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1275527   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
1275528   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
1275529   +END;
MPRINT(EM_DIAGRAM):   END;
1275530   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1275531   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1275532   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1275533   +
1275534   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1275535   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1275536   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1275537   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1275538   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1275539   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1275540   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1275541   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1275542   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1275543   +end;
MPRINT(EM_DIAGRAM):   end;
1275544   +else do;
MPRINT(EM_DIAGRAM):   else do;
1275545   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1275546   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1275547   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1275548   +   end;
MPRINT(EM_DIAGRAM):   end;
1275549   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1275550   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1275551   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1275552   +   end;
MPRINT(EM_DIAGRAM):   end;
1275553   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1275554   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1275555   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1275556   +   end;
MPRINT(EM_DIAGRAM):   end;
1275557   +end;
MPRINT(EM_DIAGRAM):   end;
1275558   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1275559   +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
1275560   +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
1275561   +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 + 
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
1275562   +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
1275563   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1275564   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1275565   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1275566   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1275567   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1275568   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1275569   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1275570   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1275571   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1275572   +END;
MPRINT(EM_DIAGRAM):   END;
1275573   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1275574   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1275575   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1275576   +END;
MPRINT(EM_DIAGRAM):   END;
1275577   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1275578   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1275579   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1275580   +END;
MPRINT(EM_DIAGRAM):   END;
1275581   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1275582   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1275583   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1275584   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1275585   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1275586   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1275587   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1275588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1275589   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1275590   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1275591   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1275592   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1275593   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1275594   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1275595   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1275596   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1275597   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1275598   +END;
MPRINT(EM_DIAGRAM):   END;
1275599   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1275600   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1275601   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1275602   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1275603   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
1275604   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275605   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
1275606   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275607   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
1275608   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
1275609   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
1275610   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
1275611   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275612   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
1275613   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275614   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
1275615   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
1275616   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
1275617   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275618   +* Ensmbl45: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 2 of 5;
1275619   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275620   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275621   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1275622   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1275623   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
1275624   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1275625   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1275626   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1275627   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1275628   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1275629   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1275630   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1275631   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1275632   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1275633   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1275634   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1275635   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1275636   +LENGTH _WARN_ $4
1275637   +      F_DepVar  $ 12
1275638   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1275639   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1275640   +
1275641   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1275642   +
1275643   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1275644   +
1275645   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1275646   +
1275647   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1275648   +
1275649   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1275650   +
1275651   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1275652   +
1275653   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1275654   +
1275655   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1275656   +
1275657   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1275658   +
1275659   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1275660   +
1275661   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1275662   +
1275663   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1275664   +
1275665   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1275666   +
1275667   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1275668   +
1275669   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1275670   +
1275671   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1275672   +
1275673   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1275674   +
1275675   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1275676   +
1275677   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1275678   +
1275679   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1275680   +
1275681   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1275682   +
1275683   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1275684   +
1275685   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1275686   +
1275687   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1275688   +
1275689   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1275690   +
1275691   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1275692   +
1275693   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1275694   +
1275695   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1275696   +
1275697   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1275698   +
1275699   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1275700   +
1275701   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1275702   +
1275703   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1275704   +
1275705   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1275706   +
1275707   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1275708   +
1275709   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1275710   +
1275711   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1275712   +
1275713   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1275714   +
1275715   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1275716   +
1275717   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1275718   +
1275719   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1275720   +
1275721   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1275722   +
1275723   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1275724   +
1275725   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1275726   +
1275727   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1275728   +
1275729   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1275730   +
1275731   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1275732   +
1275733   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1275734   +
1275735   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1275736   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1275737   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1275738   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1275739   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1275740   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275741   +end;
MPRINT(EM_DIAGRAM):   end;
1275742   +else do;
MPRINT(EM_DIAGRAM):   else do;
1275743   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1275744   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1275745   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1275746   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1275747   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1275748   +   end;
MPRINT(EM_DIAGRAM):   end;
1275749   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1275750   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1275751   +   end;
MPRINT(EM_DIAGRAM):   end;
1275752   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1275753   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1275754   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1275755   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275756   +   end;
MPRINT(EM_DIAGRAM):   end;
1275757   +end;
MPRINT(EM_DIAGRAM):   end;
1275758   +
1275759   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1275760   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1275761   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1275762   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1275763   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1275764   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275765   +end;
MPRINT(EM_DIAGRAM):   end;
1275766   +else do;
MPRINT(EM_DIAGRAM):   else do;
1275767   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1275768   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1275769   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1275770   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1275771   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1275772   +   end;
MPRINT(EM_DIAGRAM):   end;
1275773   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1275774   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1275775   +   end;
MPRINT(EM_DIAGRAM):   end;
1275776   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1275777   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1275778   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1275779   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275780   +   end;
MPRINT(EM_DIAGRAM):   end;
1275781   +end;
MPRINT(EM_DIAGRAM):   end;
1275782   +
1275783   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1275784   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1275785   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1275786   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1275787   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1275788   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275789   +end;
MPRINT(EM_DIAGRAM):   end;
1275790   +else do;
MPRINT(EM_DIAGRAM):   else do;
1275791   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1275792   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1275793   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1275794   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1275795   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1275796   +   end;
MPRINT(EM_DIAGRAM):   end;
1275797   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1275798   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1275799   +   end;
MPRINT(EM_DIAGRAM):   end;
1275800   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1275801   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1275802   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1275803   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275804   +   end;
MPRINT(EM_DIAGRAM):   end;
1275805   +end;
MPRINT(EM_DIAGRAM):   end;
1275806   +
1275807   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1275808   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1275809   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1275810   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1275811   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1275812   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275813   +end;
MPRINT(EM_DIAGRAM):   end;
1275814   +else do;
MPRINT(EM_DIAGRAM):   else do;
1275815   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1275816   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1275817   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1275818   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1275819   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1275820   +   end;
MPRINT(EM_DIAGRAM):   end;
1275821   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1275822   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1275823   +   end;
MPRINT(EM_DIAGRAM):   end;
1275824   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1275825   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1275826   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1275827   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275828   +   end;
MPRINT(EM_DIAGRAM):   end;
1275829   +end;
MPRINT(EM_DIAGRAM):   end;
1275830   +
1275831   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1275832   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1275833   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1275834   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1275835   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1275836   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275837   +end;
MPRINT(EM_DIAGRAM):   end;
1275838   +else do;
MPRINT(EM_DIAGRAM):   else do;
1275839   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1275840   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1275841   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1275842   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1275843   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1275844   +   end;
MPRINT(EM_DIAGRAM):   end;
1275845   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1275846   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1275847   +   end;
MPRINT(EM_DIAGRAM):   end;
1275848   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1275849   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1275850   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1275851   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275852   +   end;
MPRINT(EM_DIAGRAM):   end;
1275853   +end;
MPRINT(EM_DIAGRAM):   end;
1275854   +
1275855   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1275856   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1275857   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1275858   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1275859   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1275860   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275861   +end;
MPRINT(EM_DIAGRAM):   end;
1275862   +else do;
MPRINT(EM_DIAGRAM):   else do;
1275863   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1275864   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1275865   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1275866   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1275867   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1275868   +   end;
MPRINT(EM_DIAGRAM):   end;
1275869   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1275870   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1275871   +   end;
MPRINT(EM_DIAGRAM):   end;
1275872   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1275873   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1275874   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1275875   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275876   +   end;
MPRINT(EM_DIAGRAM):   end;
1275877   +end;
MPRINT(EM_DIAGRAM):   end;
1275878   +
1275879   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1275880   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1275881   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1275882   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1275883   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1275884   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275885   +end;
MPRINT(EM_DIAGRAM):   end;
1275886   +else do;
MPRINT(EM_DIAGRAM):   else do;
1275887   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1275888   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1275889   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1275890   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1275891   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1275892   +   end;
MPRINT(EM_DIAGRAM):   end;
1275893   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1275894   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1275895   +   end;
MPRINT(EM_DIAGRAM):   end;
1275896   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1275897   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1275898   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1275899   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275900   +   end;
MPRINT(EM_DIAGRAM):   end;
1275901   +end;
MPRINT(EM_DIAGRAM):   end;
1275902   +
1275903   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1275904   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1275905   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1275906   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1275907   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1275908   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1275909   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1275910   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1275911   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1275912   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1275913   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1275914   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1275915   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1275916   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275917   +end;
MPRINT(EM_DIAGRAM):   end;
1275918   +else do;
MPRINT(EM_DIAGRAM):   else do;
1275919   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1275920   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1275921   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1275922   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1275923   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1275924   +   end;
MPRINT(EM_DIAGRAM):   end;
1275925   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1275926   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1275927   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1275928   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1275929   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1275930   +   end;
MPRINT(EM_DIAGRAM):   end;
1275931   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1275932   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1275933   +   end;
MPRINT(EM_DIAGRAM):   end;
1275934   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1275935   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1275936   +   end;
MPRINT(EM_DIAGRAM):   end;
1275937   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1275938   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1275939   +   end;
MPRINT(EM_DIAGRAM):   end;
1275940   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1275941   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1275942   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1275943   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1275944   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1275945   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1275946   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275947   +   end;
MPRINT(EM_DIAGRAM):   end;
1275948   +end;
MPRINT(EM_DIAGRAM):   end;
1275949   +
1275950   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1275951   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1275952   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1275953   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1275954   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1275955   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1275956   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1275957   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1275958   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1275959   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1275960   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1275961   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1275962   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1275963   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1275964   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1275965   +end;
MPRINT(EM_DIAGRAM):   end;
1275966   +else do;
MPRINT(EM_DIAGRAM):   else do;
1275967   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1275968   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1275969   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1275970   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1275971   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1275972   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1275973   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1275974   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1275975   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1275976   +         end;
MPRINT(EM_DIAGRAM):   end;
1275977   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1275978   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1275979   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1275980   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1275981   +            end;
MPRINT(EM_DIAGRAM):   end;
1275982   +         end;
MPRINT(EM_DIAGRAM):   end;
1275983   +      end;
MPRINT(EM_DIAGRAM):   end;
1275984   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1275985   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1275986   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1275987   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1275988   +         end;
MPRINT(EM_DIAGRAM):   end;
1275989   +      end;
MPRINT(EM_DIAGRAM):   end;
1275990   +   end;
MPRINT(EM_DIAGRAM):   end;
1275991   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1275992   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1275993   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1275994   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1275995   +      end;
MPRINT(EM_DIAGRAM):   end;
1275996   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1275997   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1275998   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1275999   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1276000   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1276001   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1276002   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1276003   +         end;
MPRINT(EM_DIAGRAM):   end;
1276004   +      end;
MPRINT(EM_DIAGRAM):   end;
1276005   +   end;
MPRINT(EM_DIAGRAM):   end;
1276006   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1276007   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1276008   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1276009   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1276010   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1276011   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1276012   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276013   +   end;
MPRINT(EM_DIAGRAM):   end;
1276014   +end;
MPRINT(EM_DIAGRAM):   end;
1276015   +
1276016   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276017   +*** Checking missing input Interval
1276018   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1276019   +
1276020   +IF NMISS(
1276021   +   AcceptedCmpTotal ,
1276022   +   Age ,
1276023   +   Frq ,
1276024   +   Income ,
1276025   +   Kidhome ,
1276026   +   Mnt ,
1276027   +   MntFishProducts ,
1276028   +   MntFruits ,
1276029   +   MntGoldProds ,
1276030   +   MntMeatProducts ,
1276031   +   MntSweetProducts ,
1276032   +   MntWines ,
1276033   +   MonthsAsCustomer ,
1276034   +   NumCatalogPurchases ,
1276035   +   NumDealsPurchases ,
1276036   +   NumDistPurchases ,
1276037   +   NumStorePurchases ,
1276038   +   NumWebPurchases ,
1276039   +   NumWebVisitsMonth ,
1276040   +   RFMstat ,
1276041   +   RMntFrq ,
1276042   +   Recency ,
1276043   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1276044   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1276045   +
1276046   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276047   +END;
MPRINT(EM_DIAGRAM):   END;
1276048   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276049   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1276050   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276051   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1276052   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1276053   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1276054   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1276055   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1276056   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1276057   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1276058   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1276059   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1276060   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1276061   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1276062   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1276063   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1276064   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1276065   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1276066   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1276067   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1276068   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1276069   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1276070   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1276071   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1276072   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1276073   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1276074   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1276075   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1276076   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1276077   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1276078   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1276079   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1276080   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1276081   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1276082   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1276083   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1276084   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1276085   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1276086   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1276087   +END;
MPRINT(EM_DIAGRAM):   END;
1276088   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1276089   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1276090   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1276091   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1276092   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1276093   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1276094   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1276095   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1276096   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1276097   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1276098   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1276099   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1276100   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1276101   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1276102   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1276103   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1276104   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1276105   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1276106   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1276107   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1276108   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1276109   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1276110   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1276111   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1276112   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1276113   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1276114   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1276115   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1276116   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1276117   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1276118   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1276119   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1276120   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1276121   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1276122   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1276123   +   ELSE S_NumCatalogPurchases
1276124   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1276125   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1276126   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1276127   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1276128   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1276129   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1276130   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1276131   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1276132   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1276133   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1276134   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1276135   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1276136   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1276137   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1276138   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1276139   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1276140   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1276141   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1276142   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1276143   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1276144   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1276145   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1276146   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1276147   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1276148   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1276149   +END;
MPRINT(EM_DIAGRAM):   END;
1276150   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276151   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1276152   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276153   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276154   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1276155   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276156   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276157   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1276158   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276159   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1276160   +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
1276161   +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
1276162   +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
1276163   +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
1276164   +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
1276165   +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
1276166   +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
1276167   +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
1276168   +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
1276169   +          +     0.09708841024031 * S_NumDealsPurchases
1276170   +          +    -0.29075561032014 * S_NumDistPurchases
1276171   +          +    -0.14495394259873 * S_NumStorePurchases
1276172   +          +     0.11890705145732 * S_NumWebPurchases
1276173   +          +    -0.16954189911344 * S_NumWebVisitsMonth
1276174   +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
1276175   +        S_RMntFrq  +     0.17150719398884 * S_Recency
1276176   +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
1276177   +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
1276178   +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
1276179   +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
1276180   +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
1276181   +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
1276182   +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
1276183   +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
1276184   +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
1276185   +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
1276186   +          +     0.16274478997892 * S_NumDealsPurchases
1276187   +          +     0.03966958784582 * S_NumDistPurchases
1276188   +          +    -0.04714110726598 * S_NumStorePurchases
1276189   +          +    -0.02124229528082 * S_NumWebPurchases
1276190   +          +     0.29753299776832 * S_NumWebVisitsMonth
1276191   +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
1276192   +        S_RMntFrq  +     -0.3340129986623 * S_Recency
1276193   +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
1276194   +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
1276195   +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
1276196   +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
1276197   +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
1276198   +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
1276199   +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
1276200   +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
1276201   +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
1276202   +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
1276203   +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
1276204   +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
1276205   +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
1276206   +        EducationGraduation  +     0.00619669837452 * EducationMaster
1276207   +          +    -0.05037639679806 * Marital_StatusDivorced
1276208   +          +     0.28781968727878 * Marital_StatusMarried
1276209   +          +    -0.20382417074384 * Marital_StatusSingle
1276210   +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
1276211   +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
1276212   +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
1276213   +        EducationGraduation  +    -0.06952670554019 * EducationMaster
1276214   +          +     0.06970969219123 * Marital_StatusDivorced
1276215   +          +    -0.15787475744986 * Marital_StatusMarried
1276216   +          +     0.14345344072192 * Marital_StatusSingle
1276217   +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
1276218   +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
1276219   +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
1276220   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1276221   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1276222   +END;
MPRINT(EM_DIAGRAM):   END;
1276223   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1276224   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1276225   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1276226   +END;
MPRINT(EM_DIAGRAM):   END;
1276227   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276228   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1276229   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276230   +
1276231   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1276232   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1276233   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1276234   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1276235   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1276236   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1276237   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1276238   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1276239   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1276240   +end;
MPRINT(EM_DIAGRAM):   end;
1276241   +else do;
MPRINT(EM_DIAGRAM):   else do;
1276242   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1276243   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1276244   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1276245   +   end;
MPRINT(EM_DIAGRAM):   end;
1276246   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1276247   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1276248   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1276249   +   end;
MPRINT(EM_DIAGRAM):   end;
1276250   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1276251   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1276252   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1276253   +   end;
MPRINT(EM_DIAGRAM):   end;
1276254   +end;
MPRINT(EM_DIAGRAM):   end;
1276255   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1276256   +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
1276257   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
1276258   +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
1276259   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1276260   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1276261   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1276262   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1276263   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1276264   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1276265   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1276266   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1276267   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1276268   +END;
MPRINT(EM_DIAGRAM):   END;
1276269   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1276270   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1276271   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1276272   +END;
MPRINT(EM_DIAGRAM):   END;
1276273   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1276274   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1276275   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1276276   +END;
MPRINT(EM_DIAGRAM):   END;
1276277   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1276278   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1276279   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1276280   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1276281   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1276282   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1276283   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1276284   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276285   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1276286   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276287   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1276288   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1276289   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1276290   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1276291   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1276292   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1276293   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1276294   +END;
MPRINT(EM_DIAGRAM):   END;
1276295   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1276296   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1276297   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1276298   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1276299   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
1276300   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1276301   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
1276302   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1276303   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
1276304   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
1276305   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
1276306   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
1276307   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1276308   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
1276309   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1276310   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
1276311   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
1276312   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
1276313   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1276314   +* Ensmbl45: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 3 of 5;
1276315   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1276316   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1276317   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1276318   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1276319   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
1276320   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1276321   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1276322   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1276323   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1276324   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1276325   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1276326   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1276327   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1276328   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1276329   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1276330   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1276331   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1276332   +LENGTH _WARN_ $4
1276333   +      F_DepVar  $ 12
1276334   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1276335   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1276336   +
1276337   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1276338   +
1276339   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1276340   +
1276341   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1276342   +
1276343   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1276344   +
1276345   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1276346   +
1276347   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1276348   +
1276349   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1276350   +
1276351   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1276352   +
1276353   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1276354   +
1276355   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1276356   +
1276357   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1276358   +
1276359   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1276360   +
1276361   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1276362   +
1276363   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1276364   +
1276365   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1276366   +
1276367   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1276368   +
1276369   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1276370   +
1276371   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1276372   +
1276373   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1276374   +
1276375   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1276376   +
1276377   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1276378   +
1276379   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1276380   +
1276381   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1276382   +
1276383   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1276384   +
1276385   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1276386   +
1276387   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1276388   +
1276389   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1276390   +
1276391   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1276392   +
1276393   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1276394   +
1276395   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1276396   +
1276397   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1276398   +
1276399   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1276400   +
1276401   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1276402   +
1276403   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1276404   +
1276405   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1276406   +
1276407   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1276408   +
1276409   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1276410   +
1276411   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1276412   +
1276413   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1276414   +
1276415   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1276416   +
1276417   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1276418   +
1276419   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1276420   +
1276421   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1276422   +
1276423   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
1276424   +
1276425   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1276426   +
1276427   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1276428   +
1276429   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1276430   +
1276431   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1276432   +
1276433   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1276434   +
1276435   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1276436   +
1276437   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
1276438   +
1276439   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1276440   +
1276441   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1276442   +
1276443   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1276444   +
1276445   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1276446   +
1276447   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1276448   +
1276449   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1276450   +
1276451   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
1276452   +
1276453   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1276454   +
1276455   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1276456   +
1276457   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1276458   +
1276459   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1276460   +
1276461   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1276462   +
1276463   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1276464   +
1276465   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1276466   +
1276467   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1276468   +
1276469   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1276470   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1276471   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1276472   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1276473   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1276474   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276475   +end;
MPRINT(EM_DIAGRAM):   end;
1276476   +else do;
MPRINT(EM_DIAGRAM):   else do;
1276477   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1276478   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1276479   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1276480   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1276481   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1276482   +   end;
MPRINT(EM_DIAGRAM):   end;
1276483   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1276484   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1276485   +   end;
MPRINT(EM_DIAGRAM):   end;
1276486   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1276487   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1276488   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1276489   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276490   +   end;
MPRINT(EM_DIAGRAM):   end;
1276491   +end;
MPRINT(EM_DIAGRAM):   end;
1276492   +
1276493   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1276494   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1276495   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1276496   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1276497   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1276498   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276499   +end;
MPRINT(EM_DIAGRAM):   end;
1276500   +else do;
MPRINT(EM_DIAGRAM):   else do;
1276501   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1276502   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1276503   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1276504   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1276505   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1276506   +   end;
MPRINT(EM_DIAGRAM):   end;
1276507   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1276508   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1276509   +   end;
MPRINT(EM_DIAGRAM):   end;
1276510   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1276511   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1276512   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1276513   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276514   +   end;
MPRINT(EM_DIAGRAM):   end;
1276515   +end;
MPRINT(EM_DIAGRAM):   end;
1276516   +
1276517   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1276518   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1276519   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1276520   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1276521   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1276522   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276523   +end;
MPRINT(EM_DIAGRAM):   end;
1276524   +else do;
MPRINT(EM_DIAGRAM):   else do;
1276525   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1276526   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1276527   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1276528   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1276529   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1276530   +   end;
MPRINT(EM_DIAGRAM):   end;
1276531   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1276532   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1276533   +   end;
MPRINT(EM_DIAGRAM):   end;
1276534   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1276535   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1276536   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1276537   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276538   +   end;
MPRINT(EM_DIAGRAM):   end;
1276539   +end;
MPRINT(EM_DIAGRAM):   end;
1276540   +
1276541   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1276542   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1276543   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1276544   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1276545   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1276546   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276547   +end;
MPRINT(EM_DIAGRAM):   end;
1276548   +else do;
MPRINT(EM_DIAGRAM):   else do;
1276549   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1276550   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1276551   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1276552   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1276553   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1276554   +   end;
MPRINT(EM_DIAGRAM):   end;
1276555   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1276556   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1276557   +   end;
MPRINT(EM_DIAGRAM):   end;
1276558   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1276559   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1276560   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1276561   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276562   +   end;
MPRINT(EM_DIAGRAM):   end;
1276563   +end;
MPRINT(EM_DIAGRAM):   end;
1276564   +
1276565   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1276566   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1276567   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1276568   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1276569   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1276570   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276571   +end;
MPRINT(EM_DIAGRAM):   end;
1276572   +else do;
MPRINT(EM_DIAGRAM):   else do;
1276573   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1276574   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1276575   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1276576   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1276577   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1276578   +   end;
MPRINT(EM_DIAGRAM):   end;
1276579   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1276580   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1276581   +   end;
MPRINT(EM_DIAGRAM):   end;
1276582   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1276583   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1276584   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1276585   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276586   +   end;
MPRINT(EM_DIAGRAM):   end;
1276587   +end;
MPRINT(EM_DIAGRAM):   end;
1276588   +
1276589   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1276590   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1276591   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1276592   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1276593   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1276594   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276595   +end;
MPRINT(EM_DIAGRAM):   end;
1276596   +else do;
MPRINT(EM_DIAGRAM):   else do;
1276597   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1276598   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1276599   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1276600   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1276601   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1276602   +   end;
MPRINT(EM_DIAGRAM):   end;
1276603   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1276604   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1276605   +   end;
MPRINT(EM_DIAGRAM):   end;
1276606   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1276607   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1276608   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1276609   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276610   +   end;
MPRINT(EM_DIAGRAM):   end;
1276611   +end;
MPRINT(EM_DIAGRAM):   end;
1276612   +
1276613   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1276614   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1276615   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1276616   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1276617   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1276618   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276619   +end;
MPRINT(EM_DIAGRAM):   end;
1276620   +else do;
MPRINT(EM_DIAGRAM):   else do;
1276621   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1276622   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1276623   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1276624   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1276625   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1276626   +   end;
MPRINT(EM_DIAGRAM):   end;
1276627   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1276628   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1276629   +   end;
MPRINT(EM_DIAGRAM):   end;
1276630   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1276631   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1276632   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1276633   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276634   +   end;
MPRINT(EM_DIAGRAM):   end;
1276635   +end;
MPRINT(EM_DIAGRAM):   end;
1276636   +
1276637   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1276638   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1276639   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1276640   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1276641   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1276642   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1276643   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1276644   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1276645   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1276646   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1276647   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1276648   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1276649   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1276650   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276651   +end;
MPRINT(EM_DIAGRAM):   end;
1276652   +else do;
MPRINT(EM_DIAGRAM):   else do;
1276653   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1276654   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1276655   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1276656   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1276657   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1276658   +   end;
MPRINT(EM_DIAGRAM):   end;
1276659   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1276660   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1276661   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1276662   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1276663   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1276664   +   end;
MPRINT(EM_DIAGRAM):   end;
1276665   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1276666   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1276667   +   end;
MPRINT(EM_DIAGRAM):   end;
1276668   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1276669   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1276670   +   end;
MPRINT(EM_DIAGRAM):   end;
1276671   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1276672   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1276673   +   end;
MPRINT(EM_DIAGRAM):   end;
1276674   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1276675   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1276676   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1276677   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1276678   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1276679   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1276680   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276681   +   end;
MPRINT(EM_DIAGRAM):   end;
1276682   +end;
MPRINT(EM_DIAGRAM):   end;
1276683   +
1276684   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1276685   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1276686   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1276687   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1276688   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1276689   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1276690   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1276691   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1276692   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1276693   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1276694   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1276695   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1276696   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1276697   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1276698   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276699   +end;
MPRINT(EM_DIAGRAM):   end;
1276700   +else do;
MPRINT(EM_DIAGRAM):   else do;
1276701   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1276702   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1276703   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1276704   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1276705   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1276706   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1276707   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1276708   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1276709   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1276710   +         end;
MPRINT(EM_DIAGRAM):   end;
1276711   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1276712   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1276713   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1276714   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1276715   +            end;
MPRINT(EM_DIAGRAM):   end;
1276716   +         end;
MPRINT(EM_DIAGRAM):   end;
1276717   +      end;
MPRINT(EM_DIAGRAM):   end;
1276718   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1276719   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1276720   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1276721   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1276722   +         end;
MPRINT(EM_DIAGRAM):   end;
1276723   +      end;
MPRINT(EM_DIAGRAM):   end;
1276724   +   end;
MPRINT(EM_DIAGRAM):   end;
1276725   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1276726   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1276727   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1276728   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1276729   +      end;
MPRINT(EM_DIAGRAM):   end;
1276730   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1276731   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1276732   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1276733   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1276734   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1276735   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1276736   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1276737   +         end;
MPRINT(EM_DIAGRAM):   end;
1276738   +      end;
MPRINT(EM_DIAGRAM):   end;
1276739   +   end;
MPRINT(EM_DIAGRAM):   end;
1276740   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1276741   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1276742   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1276743   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1276744   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1276745   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1276746   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276747   +   end;
MPRINT(EM_DIAGRAM):   end;
1276748   +end;
MPRINT(EM_DIAGRAM):   end;
1276749   +
1276750   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276751   +*** Checking missing input Interval
1276752   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1276753   +
1276754   +IF NMISS(
1276755   +   AcceptedCmpTotal ,
1276756   +   Age ,
1276757   +   Frq ,
1276758   +   Income ,
1276759   +   Kidhome ,
1276760   +   Mnt ,
1276761   +   MntFishProducts ,
1276762   +   MntFruits ,
1276763   +   MntGoldProds ,
1276764   +   MntMeatProducts ,
1276765   +   MntSweetProducts ,
1276766   +   MntWines ,
1276767   +   MonthsAsCustomer ,
1276768   +   NumCatalogPurchases ,
1276769   +   NumDealsPurchases ,
1276770   +   NumDistPurchases ,
1276771   +   NumStorePurchases ,
1276772   +   NumWebPurchases ,
1276773   +   NumWebVisitsMonth ,
1276774   +   RFMstat ,
1276775   +   RMntFrq ,
1276776   +   Recency ,
1276777   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1276778   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1276779   +
1276780   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1276781   +END;
MPRINT(EM_DIAGRAM):   END;
1276782   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276783   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1276784   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276785   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1276786   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1276787   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1276788   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1276789   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1276790   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1276791   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1276792   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1276793   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1276794   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1276795   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1276796   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1276797   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1276798   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1276799   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1276800   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1276801   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1276802   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1276803   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1276804   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1276805   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1276806   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1276807   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1276808   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1276809   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1276810   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1276811   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1276812   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1276813   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1276814   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1276815   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1276816   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1276817   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1276818   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1276819   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1276820   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1276821   +END;
MPRINT(EM_DIAGRAM):   END;
1276822   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1276823   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1276824   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1276825   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1276826   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1276827   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1276828   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1276829   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1276830   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1276831   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1276832   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1276833   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1276834   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1276835   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1276836   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1276837   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1276838   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1276839   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1276840   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1276841   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1276842   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1276843   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1276844   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1276845   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1276846   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1276847   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1276848   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1276849   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1276850   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1276851   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1276852   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1276853   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1276854   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1276855   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1276856   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1276857   +   ELSE S_NumCatalogPurchases
1276858   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1276859   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1276860   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1276861   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1276862   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1276863   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1276864   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1276865   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1276866   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1276867   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1276868   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1276869   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1276870   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1276871   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1276872   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1276873   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1276874   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1276875   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1276876   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1276877   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1276878   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1276879   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1276880   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1276881   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1276882   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1276883   +END;
MPRINT(EM_DIAGRAM):   END;
1276884   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276885   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1276886   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276887   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276888   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1276889   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276890   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276891   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1276892   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1276893   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1276894   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
1276895   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
1276896   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
1276897   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
1276898   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
1276899   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
1276900   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
1276901   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
1276902   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
1276903   +          +     1.17276395296242 * S_NumDealsPurchases
1276904   +          +     0.26632768295477 * S_NumDistPurchases
1276905   +          +    -1.26575615903579 * S_NumStorePurchases
1276906   +          +    -0.95316107557927 * S_NumWebPurchases
1276907   +          +     1.01828574356487 * S_NumWebVisitsMonth
1276908   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
1276909   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
1276910   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
1276911   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
1276912   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
1276913   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
1276914   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
1276915   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
1276916   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
1276917   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
1276918   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
1276919   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
1276920   +          +     1.14485571201233 * S_NumDealsPurchases
1276921   +          +     0.21414266588987 * S_NumDistPurchases
1276922   +          +    -0.10530090074297 * S_NumStorePurchases
1276923   +          +    -0.41712321238458 * S_NumWebPurchases
1276924   +          +    -0.99760766791108 * S_NumWebVisitsMonth
1276925   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
1276926   +        S_RMntFrq  +     1.10040128548883 * S_Recency
1276927   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
1276928   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
1276929   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
1276930   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
1276931   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
1276932   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
1276933   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
1276934   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
1276935   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
1276936   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
1276937   +          +      0.7196418967437 * S_NumDealsPurchases
1276938   +          +     0.69035286374177 * S_NumDistPurchases
1276939   +          +     0.38027656631135 * S_NumStorePurchases
1276940   +          +    -0.18878358997924 * S_NumWebPurchases
1276941   +          +     1.61962062004798 * S_NumWebVisitsMonth
1276942   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
1276943   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
1276944   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
1276945   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
1276946   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
1276947   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
1276948   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
1276949   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
1276950   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
1276951   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
1276952   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
1276953   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
1276954   +          +    -0.00642902007204 * S_NumDealsPurchases
1276955   +          +     0.29785069480367 * S_NumDistPurchases
1276956   +          +    -0.42243322063147 * S_NumStorePurchases
1276957   +          +     0.54880896338383 * S_NumWebPurchases
1276958   +          +    -0.12525846016886 * S_NumWebVisitsMonth
1276959   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
1276960   +        S_RMntFrq  +     0.10252211581449 * S_Recency
1276961   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
1276962   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
1276963   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
1276964   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
1276965   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
1276966   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
1276967   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
1276968   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
1276969   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
1276970   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
1276971   +          +    -0.48404738328225 * S_NumDealsPurchases
1276972   +          +    -0.02464180457879 * S_NumDistPurchases
1276973   +          +     1.17201831082067 * S_NumStorePurchases
1276974   +          +     0.57453655167516 * S_NumWebPurchases
1276975   +          +    -1.94417019790248 * S_NumWebVisitsMonth
1276976   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
1276977   +        S_RMntFrq  +      1.6169916658132 * S_Recency
1276978   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
1276979   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
1276980   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
1276981   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
1276982   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
1276983   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
1276984   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
1276985   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
1276986   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
1276987   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
1276988   +          +    -1.49850531967483 * S_NumDealsPurchases
1276989   +          +    -0.82105466264223 * S_NumDistPurchases
1276990   +          +     0.29984603642824 * S_NumStorePurchases
1276991   +          +     0.06557123721611 * S_NumWebPurchases
1276992   +          +     1.04754749365002 * S_NumWebVisitsMonth
1276993   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
1276994   +        S_RMntFrq  +     0.12396789666359 * S_Recency
1276995   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
1276996   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
1276997   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
1276998   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
1276999   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
1277000   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
1277001   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
1277002   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
1277003   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
1277004   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
1277005   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
1277006   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
1277007   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
1277008   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
1277009   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
1277010   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
1277011   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
1277012   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
1277013   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
1277014   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
1277015   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
1277016   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
1277017   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
1277018   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
1277019   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
1277020   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
1277021   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
1277022   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
1277023   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
1277024   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
1277025   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
1277026   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
1277027   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
1277028   +        EducationGraduation  +     0.07595631354847 * EducationMaster
1277029   +          +     0.24583509957712 * Marital_StatusDivorced
1277030   +          +    -0.22681931588361 * Marital_StatusMarried
1277031   +          +    -0.12924106229536 * Marital_StatusSingle
1277032   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
1277033   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
1277034   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
1277035   +        EducationGraduation  +     0.23015089246655 * EducationMaster
1277036   +          +    -0.12585334311068 * Marital_StatusDivorced
1277037   +          +    -0.20835502467207 * Marital_StatusMarried
1277038   +          +    -0.13839534449368 * Marital_StatusSingle
1277039   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
1277040   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
1277041   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
1277042   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
1277043   +          +     0.35106363238113 * Marital_StatusDivorced
1277044   +          +     -1.3414808583918 * Marital_StatusMarried
1277045   +          +     1.40835320798486 * Marital_StatusSingle
1277046   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
1277047   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
1277048   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
1277049   +        EducationGraduation  +      0.1746658332011 * EducationMaster
1277050   +          +     0.48174546958393 * Marital_StatusDivorced
1277051   +          +    -0.41416978858191 * Marital_StatusMarried
1277052   +          +    -0.23376801546265 * Marital_StatusSingle
1277053   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
1277054   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
1277055   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
1277056   +        EducationGraduation  +     0.68875064631577 * EducationMaster
1277057   +          +    -0.67557643774246 * Marital_StatusDivorced
1277058   +          +     1.63844045917367 * Marital_StatusMarried
1277059   +          +    -0.70320960247699 * Marital_StatusSingle
1277060   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
1277061   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
1277062   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
1277063   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
1277064   +          +    -0.11371453086883 * Marital_StatusDivorced
1277065   +          +    -0.34226997176291 * Marital_StatusMarried
1277066   +          +    -1.01568676685754 * Marital_StatusSingle
1277067   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
1277068   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
1277069   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
1277070   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
1277071   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
1277072   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
1277073   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
1277074   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
1277075   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
1277076   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
1277077   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1277078   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1277079   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1277080   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1277081   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1277082   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1277083   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1277084   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1277085   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1277086   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1277087   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1277088   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1277089   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1277090   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
1277091   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
1277092   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1277093   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1277094   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1277095   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1277096   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1277097   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1277098   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
1277099   +END;
MPRINT(EM_DIAGRAM):   END;
1277100   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1277101   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1277102   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1277103   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1277104   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1277105   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1277106   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1277107   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
1277108   +END;
MPRINT(EM_DIAGRAM):   END;
1277109   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277110   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1277111   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277112   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1277113   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
1277114   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
1277115   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
1277116   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
1277117   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
1277118   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
1277119   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
1277120   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
1277121   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
1277122   +          +    -0.87259051567474 * S_NumDealsPurchases
1277123   +          +    -0.36454149529139 * S_NumDistPurchases
1277124   +          +     0.12447759925061 * S_NumStorePurchases
1277125   +          +    -1.08133487947367 * S_NumWebPurchases
1277126   +          +    -0.49882157745454 * S_NumWebVisitsMonth
1277127   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
1277128   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
1277129   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
1277130   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
1277131   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
1277132   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
1277133   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
1277134   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
1277135   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
1277136   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
1277137   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
1277138   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
1277139   +          +     2.23121497416403 * S_NumDealsPurchases
1277140   +          +    -0.48674842191071 * S_NumDistPurchases
1277141   +          +     1.77510728607544 * S_NumStorePurchases
1277142   +          +     0.14647433155436 * S_NumWebPurchases
1277143   +          +    -0.95892686924419 * S_NumWebVisitsMonth
1277144   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
1277145   +        S_RMntFrq  +     2.46497777428475 * S_Recency
1277146   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
1277147   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
1277148   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
1277149   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
1277150   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
1277151   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
1277152   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
1277153   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
1277154   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
1277155   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
1277156   +          +     0.14338855349611 * S_NumDealsPurchases
1277157   +          +    -2.21071010829235 * S_NumDistPurchases
1277158   +          +    -0.21795889348002 * S_NumStorePurchases
1277159   +          +     1.98825087883535 * S_NumWebPurchases
1277160   +          +     1.02482442531149 * S_NumWebVisitsMonth
1277161   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
1277162   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
1277163   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
1277164   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
1277165   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
1277166   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
1277167   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
1277168   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
1277169   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
1277170   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
1277171   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
1277172   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
1277173   +          +     0.30041205661012 * S_NumDealsPurchases
1277174   +          +    -0.63499849986918 * S_NumDistPurchases
1277175   +          +    -0.34155713433714 * S_NumStorePurchases
1277176   +          +    -1.14183354933936 * S_NumWebPurchases
1277177   +          +    -0.42681980262973 * S_NumWebVisitsMonth
1277178   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
1277179   +        S_RMntFrq  +     1.25852246467612 * S_Recency
1277180   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
1277181   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
1277182   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
1277183   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
1277184   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
1277185   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
1277186   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
1277187   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
1277188   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
1277189   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
1277190   +          +    -0.21237915559831 * S_NumDealsPurchases
1277191   +          +     0.48256923764182 * S_NumDistPurchases
1277192   +          +    -0.45553093140641 * S_NumStorePurchases
1277193   +          +      0.5593655963659 * S_NumWebPurchases
1277194   +          +     0.27943768691188 * S_NumWebVisitsMonth
1277195   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
1277196   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
1277197   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
1277198   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
1277199   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
1277200   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
1277201   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
1277202   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
1277203   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
1277204   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
1277205   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
1277206   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
1277207   +          +     2.38967021388062 * S_NumDealsPurchases
1277208   +          +    -0.97722398866481 * S_NumDistPurchases
1277209   +          +     1.57612333191312 * S_NumStorePurchases
1277210   +          +    -0.75968679115983 * S_NumWebPurchases
1277211   +          +    -0.64207187757251 * S_NumWebVisitsMonth
1277212   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
1277213   +        S_RMntFrq  +     1.71313869798331 * S_Recency
1277214   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
1277215   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
1277216   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
1277217   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
1277218   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
1277219   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
1277220   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
1277221   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
1277222   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
1277223   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
1277224   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
1277225   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
1277226   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
1277227   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
1277228   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
1277229   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
1277230   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
1277231   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
1277232   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
1277233   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
1277234   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
1277235   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
1277236   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
1277237   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
1277238   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
1277239   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
1277240   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
1277241   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
1277242   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
1277243   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
1277244   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
1277245   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
1277246   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
1277247   +        EducationGraduation  +      0.1073450284316 * EducationMaster
1277248   +          +     0.96470902298142 * Marital_StatusDivorced
1277249   +          +     0.94805959268314 * Marital_StatusMarried
1277250   +          +     -0.6523948769616 * Marital_StatusSingle
1277251   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
1277252   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
1277253   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
1277254   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
1277255   +          +      0.3918249505531 * Marital_StatusDivorced
1277256   +          +    -0.00968091979586 * Marital_StatusMarried
1277257   +          +     0.84615379885071 * Marital_StatusSingle
1277258   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
1277259   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
1277260   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
1277261   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
1277262   +          +     1.14335160313191 * Marital_StatusDivorced
1277263   +          +     0.50580517192175 * Marital_StatusMarried
1277264   +          +     0.17264295020921 * Marital_StatusSingle
1277265   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
1277266   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
1277267   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
1277268   +        EducationGraduation  +     1.95818378342783 * EducationMaster
1277269   +          +    -0.11238504444225 * Marital_StatusDivorced
1277270   +          +    -0.81348274043749 * Marital_StatusMarried
1277271   +          +     0.46075415610001 * Marital_StatusSingle
1277272   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
1277273   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
1277274   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
1277275   +        EducationGraduation  +     0.08396135672504 * EducationMaster
1277276   +          +    -0.46342068701431 * Marital_StatusDivorced
1277277   +          +    -0.41667845270204 * Marital_StatusMarried
1277278   +          +    -0.47166707496281 * Marital_StatusSingle
1277279   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
1277280   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
1277281   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
1277282   +        EducationGraduation  +     0.36656103863186 * EducationMaster
1277283   +          +    -0.45376613787812 * Marital_StatusDivorced
1277284   +          +     0.01337046049801 * Marital_StatusMarried
1277285   +          +    -0.92811489484121 * Marital_StatusSingle
1277286   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
1277287   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
1277288   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
1277289   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
1277290   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
1277291   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
1277292   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
1277293   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
1277294   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
1277295   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
1277296   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1277297   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1277298   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1277299   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1277300   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1277301   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1277302   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1277303   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1277304   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1277305   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1277306   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1277307   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1277308   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1277309   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
1277310   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
1277311   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1277312   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1277313   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1277314   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1277315   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1277316   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1277317   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
1277318   +END;
MPRINT(EM_DIAGRAM):   END;
1277319   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1277320   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1277321   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1277322   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1277323   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1277324   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1277325   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1277326   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
1277327   +END;
MPRINT(EM_DIAGRAM):   END;
1277328   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277329   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1277330   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277331   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1277332   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
1277333   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
1277334   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
1277335   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
1277336   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
1277337   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
1277338   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
1277339   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
1277340   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
1277341   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
1277342   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
1277343   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
1277344   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
1277345   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
1277346   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
1277347   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
1277348   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
1277349   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
1277350   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
1277351   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
1277352   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
1277353   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
1277354   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
1277355   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
1277356   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
1277357   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
1277358   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
1277359   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
1277360   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
1277361   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
1277362   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
1277363   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
1277364   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
1277365   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
1277366   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
1277367   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
1277368   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
1277369   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
1277370   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
1277371   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
1277372   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
1277373   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
1277374   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
1277375   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
1277376   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
1277377   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
1277378   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
1277379   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
1277380   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
1277381   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
1277382   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
1277383   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
1277384   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
1277385   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
1277386   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
1277387   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
1277388   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
1277389   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1277390   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1277391   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1277392   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1277393   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1277394   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1277395   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1277396   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1277397   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1277398   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1277399   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1277400   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
1277401   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
1277402   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
1277403   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
1277404   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1277405   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1277406   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1277407   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1277408   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1277409   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
1277410   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
1277411   +END;
MPRINT(EM_DIAGRAM):   END;
1277412   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1277413   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1277414   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1277415   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1277416   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1277417   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1277418   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1277419   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
1277420   +END;
MPRINT(EM_DIAGRAM):   END;
1277421   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277422   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1277423   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277424   +
1277425   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1277426   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1277427   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1277428   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1277429   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1277430   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1277431   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1277432   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1277433   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1277434   +end;
MPRINT(EM_DIAGRAM):   end;
1277435   +else do;
MPRINT(EM_DIAGRAM):   else do;
1277436   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1277437   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1277438   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1277439   +   end;
MPRINT(EM_DIAGRAM):   end;
1277440   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1277441   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1277442   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1277443   +   end;
MPRINT(EM_DIAGRAM):   end;
1277444   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1277445   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1277446   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1277447   +   end;
MPRINT(EM_DIAGRAM):   end;
1277448   +end;
MPRINT(EM_DIAGRAM):   end;
1277449   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1277450   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
1277451   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
1277452   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
1277453   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
1277454   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
1277455   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1277456   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1277457   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1277458   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1277459   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1277460   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1277461   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1277462   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1277463   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1277464   +END;
MPRINT(EM_DIAGRAM):   END;
1277465   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1277466   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1277467   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1277468   +END;
MPRINT(EM_DIAGRAM):   END;
1277469   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1277470   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1277471   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1277472   +END;
MPRINT(EM_DIAGRAM):   END;
1277473   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1277474   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1277475   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1277476   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1277477   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1277478   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1277479   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1277480   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277481   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1277482   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277483   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1277484   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1277485   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1277486   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1277487   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1277488   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1277489   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1277490   +END;
MPRINT(EM_DIAGRAM):   END;
1277491   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1277492   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1277493   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1277494   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1277495   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
1277496   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277497   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
1277498   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277499   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
1277500   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
1277501   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
1277502   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
1277503   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277504   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
1277505   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277506   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
1277507   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
1277508   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
1277509   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277510   +* Ensmbl45: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 4 of 5;
1277511   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277512   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277513   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1277514   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1277515   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
1277516   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1277517   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1277518   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1277519   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1277520   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1277521   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1277522   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1277523   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1277524   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1277525   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1277526   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1277527   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1277528   +LENGTH _WARN_ $4
1277529   +      F_DepVar  $ 12
1277530   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1277531   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1277532   +
1277533   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1277534   +
1277535   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1277536   +
1277537   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1277538   +
1277539   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1277540   +
1277541   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1277542   +
1277543   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1277544   +
1277545   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1277546   +
1277547   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1277548   +
1277549   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1277550   +
1277551   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1277552   +
1277553   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1277554   +
1277555   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1277556   +
1277557   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1277558   +
1277559   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1277560   +
1277561   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1277562   +
1277563   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1277564   +
1277565   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1277566   +
1277567   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1277568   +
1277569   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1277570   +
1277571   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1277572   +
1277573   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1277574   +
1277575   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1277576   +
1277577   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1277578   +
1277579   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1277580   +
1277581   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1277582   +
1277583   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1277584   +
1277585   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1277586   +
1277587   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1277588   +
1277589   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1277590   +
1277591   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1277592   +
1277593   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1277594   +
1277595   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1277596   +
1277597   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1277598   +
1277599   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1277600   +
1277601   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1277602   +
1277603   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1277604   +
1277605   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1277606   +
1277607   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1277608   +
1277609   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1277610   +
1277611   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1277612   +
1277613   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1277614   +
1277615   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1277616   +
1277617   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1277618   +
1277619   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1277620   +
1277621   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1277622   +
1277623   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1277624   +
1277625   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1277626   +
1277627   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1277628   +
1277629   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1277630   +
1277631   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1277632   +
1277633   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1277634   +
1277635   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1277636   +
1277637   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1277638   +
1277639   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1277640   +
1277641   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1277642   +
1277643   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1277644   +
1277645   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1277646   +
1277647   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1277648   +
1277649   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1277650   +
1277651   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1277652   +
1277653   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1277654   +
1277655   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1277656   +
1277657   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1277658   +
1277659   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1277660   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1277661   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1277662   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1277663   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1277664   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277665   +end;
MPRINT(EM_DIAGRAM):   end;
1277666   +else do;
MPRINT(EM_DIAGRAM):   else do;
1277667   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1277668   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1277669   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1277670   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1277671   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1277672   +   end;
MPRINT(EM_DIAGRAM):   end;
1277673   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1277674   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1277675   +   end;
MPRINT(EM_DIAGRAM):   end;
1277676   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1277677   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1277678   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1277679   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277680   +   end;
MPRINT(EM_DIAGRAM):   end;
1277681   +end;
MPRINT(EM_DIAGRAM):   end;
1277682   +
1277683   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1277684   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1277685   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1277686   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1277687   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1277688   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277689   +end;
MPRINT(EM_DIAGRAM):   end;
1277690   +else do;
MPRINT(EM_DIAGRAM):   else do;
1277691   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1277692   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1277693   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1277694   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1277695   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1277696   +   end;
MPRINT(EM_DIAGRAM):   end;
1277697   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1277698   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1277699   +   end;
MPRINT(EM_DIAGRAM):   end;
1277700   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1277701   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1277702   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1277703   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277704   +   end;
MPRINT(EM_DIAGRAM):   end;
1277705   +end;
MPRINT(EM_DIAGRAM):   end;
1277706   +
1277707   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1277708   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1277709   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1277710   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1277711   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1277712   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277713   +end;
MPRINT(EM_DIAGRAM):   end;
1277714   +else do;
MPRINT(EM_DIAGRAM):   else do;
1277715   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1277716   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1277717   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1277718   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1277719   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1277720   +   end;
MPRINT(EM_DIAGRAM):   end;
1277721   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1277722   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1277723   +   end;
MPRINT(EM_DIAGRAM):   end;
1277724   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1277725   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1277726   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1277727   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277728   +   end;
MPRINT(EM_DIAGRAM):   end;
1277729   +end;
MPRINT(EM_DIAGRAM):   end;
1277730   +
1277731   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1277732   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1277733   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1277734   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1277735   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1277736   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277737   +end;
MPRINT(EM_DIAGRAM):   end;
1277738   +else do;
MPRINT(EM_DIAGRAM):   else do;
1277739   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1277740   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1277741   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1277742   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1277743   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1277744   +   end;
MPRINT(EM_DIAGRAM):   end;
1277745   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1277746   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1277747   +   end;
MPRINT(EM_DIAGRAM):   end;
1277748   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1277749   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1277750   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1277751   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277752   +   end;
MPRINT(EM_DIAGRAM):   end;
1277753   +end;
MPRINT(EM_DIAGRAM):   end;
1277754   +
1277755   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1277756   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1277757   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1277758   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1277759   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1277760   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277761   +end;
MPRINT(EM_DIAGRAM):   end;
1277762   +else do;
MPRINT(EM_DIAGRAM):   else do;
1277763   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1277764   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1277765   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1277766   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1277767   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1277768   +   end;
MPRINT(EM_DIAGRAM):   end;
1277769   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1277770   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1277771   +   end;
MPRINT(EM_DIAGRAM):   end;
1277772   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1277773   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1277774   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1277775   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277776   +   end;
MPRINT(EM_DIAGRAM):   end;
1277777   +end;
MPRINT(EM_DIAGRAM):   end;
1277778   +
1277779   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1277780   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1277781   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1277782   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1277783   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1277784   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277785   +end;
MPRINT(EM_DIAGRAM):   end;
1277786   +else do;
MPRINT(EM_DIAGRAM):   else do;
1277787   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1277788   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1277789   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1277790   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1277791   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1277792   +   end;
MPRINT(EM_DIAGRAM):   end;
1277793   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1277794   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1277795   +   end;
MPRINT(EM_DIAGRAM):   end;
1277796   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1277797   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1277798   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1277799   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277800   +   end;
MPRINT(EM_DIAGRAM):   end;
1277801   +end;
MPRINT(EM_DIAGRAM):   end;
1277802   +
1277803   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1277804   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1277805   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1277806   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1277807   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1277808   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277809   +end;
MPRINT(EM_DIAGRAM):   end;
1277810   +else do;
MPRINT(EM_DIAGRAM):   else do;
1277811   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1277812   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1277813   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1277814   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1277815   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1277816   +   end;
MPRINT(EM_DIAGRAM):   end;
1277817   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1277818   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1277819   +   end;
MPRINT(EM_DIAGRAM):   end;
1277820   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1277821   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1277822   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1277823   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277824   +   end;
MPRINT(EM_DIAGRAM):   end;
1277825   +end;
MPRINT(EM_DIAGRAM):   end;
1277826   +
1277827   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1277828   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1277829   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1277830   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1277831   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1277832   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1277833   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1277834   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1277835   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1277836   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1277837   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1277838   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1277839   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1277840   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277841   +end;
MPRINT(EM_DIAGRAM):   end;
1277842   +else do;
MPRINT(EM_DIAGRAM):   else do;
1277843   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1277844   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1277845   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1277846   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1277847   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1277848   +   end;
MPRINT(EM_DIAGRAM):   end;
1277849   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1277850   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1277851   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1277852   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1277853   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1277854   +   end;
MPRINT(EM_DIAGRAM):   end;
1277855   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1277856   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1277857   +   end;
MPRINT(EM_DIAGRAM):   end;
1277858   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1277859   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1277860   +   end;
MPRINT(EM_DIAGRAM):   end;
1277861   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1277862   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1277863   +   end;
MPRINT(EM_DIAGRAM):   end;
1277864   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1277865   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1277866   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1277867   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1277868   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1277869   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1277870   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277871   +   end;
MPRINT(EM_DIAGRAM):   end;
1277872   +end;
MPRINT(EM_DIAGRAM):   end;
1277873   +
1277874   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1277875   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1277876   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1277877   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1277878   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1277879   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1277880   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1277881   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1277882   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1277883   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1277884   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1277885   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1277886   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1277887   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1277888   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277889   +end;
MPRINT(EM_DIAGRAM):   end;
1277890   +else do;
MPRINT(EM_DIAGRAM):   else do;
1277891   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1277892   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1277893   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1277894   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1277895   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1277896   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1277897   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1277898   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1277899   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1277900   +         end;
MPRINT(EM_DIAGRAM):   end;
1277901   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1277902   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1277903   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1277904   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1277905   +            end;
MPRINT(EM_DIAGRAM):   end;
1277906   +         end;
MPRINT(EM_DIAGRAM):   end;
1277907   +      end;
MPRINT(EM_DIAGRAM):   end;
1277908   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1277909   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1277910   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1277911   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1277912   +         end;
MPRINT(EM_DIAGRAM):   end;
1277913   +      end;
MPRINT(EM_DIAGRAM):   end;
1277914   +   end;
MPRINT(EM_DIAGRAM):   end;
1277915   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1277916   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1277917   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1277918   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1277919   +      end;
MPRINT(EM_DIAGRAM):   end;
1277920   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1277921   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1277922   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1277923   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1277924   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1277925   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1277926   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1277927   +         end;
MPRINT(EM_DIAGRAM):   end;
1277928   +      end;
MPRINT(EM_DIAGRAM):   end;
1277929   +   end;
MPRINT(EM_DIAGRAM):   end;
1277930   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1277931   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1277932   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1277933   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1277934   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1277935   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1277936   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277937   +   end;
MPRINT(EM_DIAGRAM):   end;
1277938   +end;
MPRINT(EM_DIAGRAM):   end;
1277939   +
1277940   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277941   +*** Checking missing input Interval
1277942   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1277943   +
1277944   +IF NMISS(
1277945   +   AcceptedCmpTotal ,
1277946   +   Age ,
1277947   +   Frq ,
1277948   +   Income ,
1277949   +   Kidhome ,
1277950   +   Mnt ,
1277951   +   MntFishProducts ,
1277952   +   MntFruits ,
1277953   +   MntGoldProds ,
1277954   +   MntMeatProducts ,
1277955   +   MntSweetProducts ,
1277956   +   MntWines ,
1277957   +   MonthsAsCustomer ,
1277958   +   NumCatalogPurchases ,
1277959   +   NumDealsPurchases ,
1277960   +   NumDistPurchases ,
1277961   +   NumStorePurchases ,
1277962   +   NumWebPurchases ,
1277963   +   NumWebVisitsMonth ,
1277964   +   RFMstat ,
1277965   +   RMntFrq ,
1277966   +   Recency ,
1277967   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1277968   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1277969   +
1277970   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1277971   +END;
MPRINT(EM_DIAGRAM):   END;
1277972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277973   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1277974   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1277975   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1277976   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1277977   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1277978   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1277979   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1277980   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1277981   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1277982   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1277983   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1277984   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1277985   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1277986   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1277987   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1277988   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1277989   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1277990   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1277991   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1277992   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1277993   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1277994   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1277995   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1277996   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1277997   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1277998   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1277999   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1278000   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1278001   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1278002   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1278003   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1278004   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1278005   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1278006   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1278007   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1278008   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1278009   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1278010   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1278011   +END;
MPRINT(EM_DIAGRAM):   END;
1278012   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1278013   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1278014   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1278015   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1278016   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1278017   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1278018   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1278019   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1278020   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1278021   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1278022   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1278023   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1278024   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1278025   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1278026   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1278027   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1278028   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1278029   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1278030   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1278031   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1278032   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1278033   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1278034   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1278035   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1278036   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1278037   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1278038   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1278039   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1278040   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1278041   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1278042   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1278043   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1278044   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1278045   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1278046   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1278047   +   ELSE S_NumCatalogPurchases
1278048   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1278049   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1278050   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1278051   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1278052   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1278053   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1278054   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1278055   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1278056   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1278057   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1278058   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1278059   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1278060   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1278061   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1278062   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1278063   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1278064   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1278065   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1278066   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1278067   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1278068   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1278069   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1278070   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1278071   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1278072   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1278073   +END;
MPRINT(EM_DIAGRAM):   END;
1278074   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278075   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1278076   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278077   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278078   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1278079   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278080   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278081   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1278082   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278083   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1278084   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
1278085   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
1278086   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
1278087   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
1278088   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
1278089   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
1278090   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
1278091   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
1278092   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
1278093   +          +     0.89422627895323 * S_NumDealsPurchases
1278094   +          +    -0.13304125929765 * S_NumDistPurchases
1278095   +          +    -1.04568442570811 * S_NumStorePurchases
1278096   +          +    -0.28677765126751 * S_NumWebPurchases
1278097   +          +      1.2327638737509 * S_NumWebVisitsMonth
1278098   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
1278099   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
1278100   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
1278101   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
1278102   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
1278103   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
1278104   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
1278105   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
1278106   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
1278107   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
1278108   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
1278109   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
1278110   +          +     0.04224590196535 * S_NumDealsPurchases
1278111   +          +     0.76554742700113 * S_NumDistPurchases
1278112   +          +    -0.49155496870812 * S_NumStorePurchases
1278113   +          +     0.59606812744403 * S_NumWebPurchases
1278114   +          +     1.86809286276405 * S_NumWebVisitsMonth
1278115   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
1278116   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
1278117   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
1278118   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
1278119   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
1278120   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
1278121   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
1278122   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
1278123   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
1278124   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
1278125   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
1278126   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
1278127   +          +    -0.04866536993486 * S_NumDealsPurchases
1278128   +          +    -0.53535979020214 * S_NumDistPurchases
1278129   +          +     2.20634071253676 * S_NumStorePurchases
1278130   +          +      0.6164564989007 * S_NumWebPurchases
1278131   +          +    -0.43396314395263 * S_NumWebVisitsMonth
1278132   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
1278133   +        S_RMntFrq  +     2.37293441098349 * S_Recency
1278134   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
1278135   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
1278136   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
1278137   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
1278138   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
1278139   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
1278140   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
1278141   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
1278142   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
1278143   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
1278144   +          +     1.37461255707863 * S_NumDealsPurchases
1278145   +          +    -0.17684775000818 * S_NumDistPurchases
1278146   +          +    -0.62755623855535 * S_NumStorePurchases
1278147   +          +    -1.46551649022657 * S_NumWebPurchases
1278148   +          +     3.35784247878638 * S_NumWebVisitsMonth
1278149   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
1278150   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
1278151   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
1278152   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
1278153   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
1278154   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
1278155   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
1278156   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
1278157   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
1278158   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
1278159   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
1278160   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
1278161   +          +    -0.76256677907121 * S_NumDealsPurchases
1278162   +          +    -0.31591571751692 * S_NumDistPurchases
1278163   +          +      0.0506832614089 * S_NumStorePurchases
1278164   +          +      1.4636796923764 * S_NumWebPurchases
1278165   +          +     0.37743519705036 * S_NumWebVisitsMonth
1278166   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
1278167   +        S_RMntFrq  +     0.16854775832723 * S_Recency
1278168   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
1278169   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
1278170   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
1278171   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
1278172   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
1278173   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
1278174   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
1278175   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
1278176   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
1278177   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
1278178   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
1278179   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
1278180   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
1278181   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
1278182   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
1278183   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
1278184   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
1278185   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
1278186   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
1278187   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
1278188   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
1278189   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
1278190   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
1278191   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
1278192   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
1278193   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
1278194   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
1278195   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
1278196   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
1278197   +          +     0.68641668264565 * Marital_StatusDivorced
1278198   +          +    -0.81586871439732 * Marital_StatusMarried
1278199   +          +     0.63758920518451 * Marital_StatusSingle
1278200   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
1278201   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
1278202   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
1278203   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
1278204   +          +     0.05137560133238 * Marital_StatusDivorced
1278205   +          +    -2.24401993266209 * Marital_StatusMarried
1278206   +          +     1.57359386216115 * Marital_StatusSingle
1278207   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
1278208   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
1278209   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
1278210   +        EducationGraduation  +     0.61492669859334 * EducationMaster
1278211   +          +     -1.0649987815942 * Marital_StatusDivorced
1278212   +          +     0.76065111692388 * Marital_StatusMarried
1278213   +          +    -0.21694149754801 * Marital_StatusSingle
1278214   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
1278215   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
1278216   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
1278217   +        EducationGraduation  +     0.04208620358211 * EducationMaster
1278218   +          +     2.02155453548328 * Marital_StatusDivorced
1278219   +          +    -2.60190649735306 * Marital_StatusMarried
1278220   +          +     1.09149388354927 * Marital_StatusSingle
1278221   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
1278222   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
1278223   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
1278224   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
1278225   +          +     0.66315970650309 * Marital_StatusDivorced
1278226   +          +    -1.20476729758152 * Marital_StatusMarried
1278227   +          +     0.56175027826397 * Marital_StatusSingle
1278228   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
1278229   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
1278230   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
1278231   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
1278232   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
1278233   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
1278234   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
1278235   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
1278236   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1278237   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1278238   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1278239   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1278240   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1278241   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1278242   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1278243   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1278244   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1278245   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1278246   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1278247   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1278248   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1278249   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1278250   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1278251   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1278252   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1278253   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1278254   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1278255   +END;
MPRINT(EM_DIAGRAM):   END;
1278256   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1278257   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1278258   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1278259   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1278260   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1278261   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1278262   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1278263   +END;
MPRINT(EM_DIAGRAM):   END;
1278264   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278265   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1278266   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278267   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1278268   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
1278269   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
1278270   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
1278271   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
1278272   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
1278273   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
1278274   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
1278275   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
1278276   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
1278277   +          +     1.50005927423985 * S_NumDealsPurchases
1278278   +          +      0.5590536933569 * S_NumDistPurchases
1278279   +          +    -0.61757824339318 * S_NumStorePurchases
1278280   +          +     0.37259686538158 * S_NumWebPurchases
1278281   +          +     2.59725437895564 * S_NumWebVisitsMonth
1278282   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
1278283   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
1278284   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
1278285   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
1278286   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
1278287   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
1278288   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
1278289   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
1278290   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
1278291   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
1278292   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
1278293   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
1278294   +          +    -0.09282222088797 * S_NumDealsPurchases
1278295   +          +     0.10726247938321 * S_NumDistPurchases
1278296   +          +     -1.1235971458527 * S_NumStorePurchases
1278297   +          +    -0.78304387839877 * S_NumWebPurchases
1278298   +          +    -0.44139243179956 * S_NumWebVisitsMonth
1278299   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
1278300   +        S_RMntFrq  +     2.19072220135069 * S_Recency
1278301   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
1278302   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
1278303   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
1278304   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
1278305   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
1278306   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
1278307   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
1278308   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
1278309   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
1278310   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
1278311   +          +     0.35349185459988 * S_NumDealsPurchases
1278312   +          +     0.06853677714859 * S_NumDistPurchases
1278313   +          +    -1.47546012999338 * S_NumStorePurchases
1278314   +          +     0.20926435398916 * S_NumWebPurchases
1278315   +          +    -1.00535683639093 * S_NumWebVisitsMonth
1278316   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
1278317   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
1278318   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
1278319   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
1278320   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
1278321   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
1278322   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
1278323   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
1278324   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
1278325   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
1278326   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
1278327   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
1278328   +          +      0.3873586120272 * S_NumDealsPurchases
1278329   +          +     0.25911651157596 * S_NumDistPurchases
1278330   +          +     1.58922489084287 * S_NumStorePurchases
1278331   +          +     0.49041797743368 * S_NumWebPurchases
1278332   +          +     -1.5425586871929 * S_NumWebVisitsMonth
1278333   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
1278334   +        S_RMntFrq  +     1.03099569333498 * S_Recency
1278335   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
1278336   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
1278337   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
1278338   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
1278339   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
1278340   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
1278341   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
1278342   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
1278343   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
1278344   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
1278345   +          +    -0.60830880287865 * S_NumDealsPurchases
1278346   +          +      0.0745331267194 * S_NumDistPurchases
1278347   +          +    -1.39472448256952 * S_NumStorePurchases
1278348   +          +     1.95372179969087 * S_NumWebPurchases
1278349   +          +    -0.63307356390404 * S_NumWebVisitsMonth
1278350   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
1278351   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
1278352   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
1278353   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
1278354   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
1278355   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
1278356   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
1278357   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
1278358   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
1278359   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
1278360   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
1278361   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
1278362   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
1278363   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
1278364   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
1278365   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
1278366   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
1278367   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
1278368   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
1278369   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
1278370   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
1278371   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
1278372   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
1278373   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
1278374   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
1278375   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
1278376   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
1278377   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
1278378   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
1278379   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
1278380   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
1278381   +          +    -1.33377871643323 * Marital_StatusDivorced
1278382   +          +    -0.87184228840898 * Marital_StatusMarried
1278383   +          +     1.41223186340257 * Marital_StatusSingle
1278384   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
1278385   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
1278386   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
1278387   +        EducationGraduation  +     0.38341272155343 * EducationMaster
1278388   +          +    -0.21479890935233 * Marital_StatusDivorced
1278389   +          +     -0.0025459519579 * Marital_StatusMarried
1278390   +          +     1.33900491702264 * Marital_StatusSingle
1278391   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
1278392   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
1278393   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
1278394   +        EducationGraduation  +     0.60739269725685 * EducationMaster
1278395   +          +    -0.38307267471999 * Marital_StatusDivorced
1278396   +          +     0.97088969451415 * Marital_StatusMarried
1278397   +          +    -0.28578224473381 * Marital_StatusSingle
1278398   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
1278399   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
1278400   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
1278401   +        EducationGraduation  +     0.14160673378252 * EducationMaster
1278402   +          +    -1.42229401093569 * Marital_StatusDivorced
1278403   +          +      0.7234508382397 * Marital_StatusMarried
1278404   +          +    -0.29062202974628 * Marital_StatusSingle
1278405   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
1278406   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
1278407   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
1278408   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
1278409   +          +    -0.99067637207205 * Marital_StatusDivorced
1278410   +          +    -0.50245902142079 * Marital_StatusMarried
1278411   +          +     0.54214494533793 * Marital_StatusSingle
1278412   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
1278413   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
1278414   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
1278415   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
1278416   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
1278417   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
1278418   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
1278419   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
1278420   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1278421   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1278422   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1278423   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1278424   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1278425   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1278426   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1278427   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1278428   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1278429   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1278430   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1278431   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1278432   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1278433   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1278434   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1278435   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1278436   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1278437   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1278438   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1278439   +END;
MPRINT(EM_DIAGRAM):   END;
1278440   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1278441   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1278442   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1278443   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1278444   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1278445   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1278446   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1278447   +END;
MPRINT(EM_DIAGRAM):   END;
1278448   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278449   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1278450   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278451   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1278452   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
1278453   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
1278454   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
1278455   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
1278456   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
1278457   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
1278458   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
1278459   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
1278460   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
1278461   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
1278462   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
1278463   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
1278464   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
1278465   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
1278466   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
1278467   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
1278468   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
1278469   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
1278470   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
1278471   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
1278472   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
1278473   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
1278474   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
1278475   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
1278476   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
1278477   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
1278478   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
1278479   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
1278480   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
1278481   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
1278482   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
1278483   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
1278484   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
1278485   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
1278486   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
1278487   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
1278488   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
1278489   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
1278490   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
1278491   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
1278492   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
1278493   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
1278494   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
1278495   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
1278496   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
1278497   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
1278498   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
1278499   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
1278500   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1278501   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1278502   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1278503   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1278504   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1278505   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
1278506   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
1278507   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
1278508   +END;
MPRINT(EM_DIAGRAM):   END;
1278509   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1278510   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1278511   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1278512   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1278513   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1278514   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1278515   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1278516   +END;
MPRINT(EM_DIAGRAM):   END;
1278517   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278518   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1278519   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278520   +
1278521   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1278522   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1278523   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1278524   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1278525   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1278526   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278527   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1278528   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1278529   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1278530   +end;
MPRINT(EM_DIAGRAM):   end;
1278531   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278532   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1278533   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1278534   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1278535   +   end;
MPRINT(EM_DIAGRAM):   end;
1278536   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1278537   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1278538   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1278539   +   end;
MPRINT(EM_DIAGRAM):   end;
1278540   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278541   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1278542   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1278543   +   end;
MPRINT(EM_DIAGRAM):   end;
1278544   +end;
MPRINT(EM_DIAGRAM):   end;
1278545   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1278546   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
1278547   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
1278548   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
1278549   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
1278550   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1278551   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1278552   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1278553   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1278554   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1278555   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1278556   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1278557   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1278558   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1278559   +END;
MPRINT(EM_DIAGRAM):   END;
1278560   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1278561   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1278562   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1278563   +END;
MPRINT(EM_DIAGRAM):   END;
1278564   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1278565   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1278566   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1278567   +END;
MPRINT(EM_DIAGRAM):   END;
1278568   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1278569   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1278570   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1278571   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1278572   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1278573   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1278574   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1278575   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278576   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1278577   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1278578   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1278579   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1278580   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1278581   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1278582   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1278583   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1278584   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1278585   +END;
MPRINT(EM_DIAGRAM):   END;
1278586   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1278587   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1278588   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1278589   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1278590   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
1278591   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278592   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
1278593   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278594   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
1278595   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
1278596   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
1278597   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
1278598   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278599   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
1278600   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278601   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
1278602   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
1278603   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
1278604   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278605   +* Ensmbl45: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 5 of 5;
1278606   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278607   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278608   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1278609   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1278610   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
1278611   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1278612   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1278613   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1278614   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1278615   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1278616   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1278617   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1278618   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1278619   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1278620   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1278621   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1278622   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1278623   +LENGTH _WARN_ $4
1278624   +      F_DepVar  $ 12
1278625   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1278626   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1278627   +
1278628   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1278629   +
1278630   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1278631   +
1278632   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1278633   +
1278634   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1278635   +
1278636   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1278637   +
1278638   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1278639   +
1278640   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1278641   +
1278642   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1278643   +
1278644   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1278645   +
1278646   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1278647   +
1278648   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1278649   +
1278650   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1278651   +
1278652   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1278653   +
1278654   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1278655   +
1278656   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1278657   +
1278658   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1278659   +
1278660   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1278661   +
1278662   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1278663   +
1278664   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1278665   +
1278666   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1278667   +
1278668   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1278669   +
1278670   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1278671   +
1278672   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1278673   +
1278674   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1278675   +
1278676   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1278677   +
1278678   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1278679   +
1278680   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1278681   +
1278682   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1278683   +
1278684   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1278685   +
1278686   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1278687   +
1278688   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1278689   +
1278690   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1278691   +
1278692   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1278693   +
1278694   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1278695   +
1278696   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1278697   +
1278698   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1278699   +
1278700   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1278701   +
1278702   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1278703   +
1278704   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1278705   +
1278706   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1278707   +
1278708   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1278709   +
1278710   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1278711   +
1278712   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1278713   +
1278714   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1278715   +
1278716   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1278717   +
1278718   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1278719   +
1278720   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1278721   +
1278722   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1278723   +
1278724   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1278725   +
1278726   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1278727   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1278728   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1278729   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1278730   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278731   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278732   +end;
MPRINT(EM_DIAGRAM):   end;
1278733   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278734   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1278735   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1278736   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278737   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1278738   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1278739   +   end;
MPRINT(EM_DIAGRAM):   end;
1278740   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1278741   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1278742   +   end;
MPRINT(EM_DIAGRAM):   end;
1278743   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278744   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1278745   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278746   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278747   +   end;
MPRINT(EM_DIAGRAM):   end;
1278748   +end;
MPRINT(EM_DIAGRAM):   end;
1278749   +
1278750   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1278751   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1278752   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1278753   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1278754   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278755   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278756   +end;
MPRINT(EM_DIAGRAM):   end;
1278757   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278758   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1278759   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1278760   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278761   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1278762   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1278763   +   end;
MPRINT(EM_DIAGRAM):   end;
1278764   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1278765   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1278766   +   end;
MPRINT(EM_DIAGRAM):   end;
1278767   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278768   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1278769   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278770   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278771   +   end;
MPRINT(EM_DIAGRAM):   end;
1278772   +end;
MPRINT(EM_DIAGRAM):   end;
1278773   +
1278774   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1278775   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1278776   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1278777   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1278778   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278779   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278780   +end;
MPRINT(EM_DIAGRAM):   end;
1278781   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278782   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1278783   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1278784   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278785   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1278786   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1278787   +   end;
MPRINT(EM_DIAGRAM):   end;
1278788   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1278789   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1278790   +   end;
MPRINT(EM_DIAGRAM):   end;
1278791   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278792   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1278793   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278794   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278795   +   end;
MPRINT(EM_DIAGRAM):   end;
1278796   +end;
MPRINT(EM_DIAGRAM):   end;
1278797   +
1278798   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1278799   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1278800   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1278801   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1278802   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278803   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278804   +end;
MPRINT(EM_DIAGRAM):   end;
1278805   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278806   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1278807   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1278808   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278809   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1278810   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1278811   +   end;
MPRINT(EM_DIAGRAM):   end;
1278812   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1278813   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1278814   +   end;
MPRINT(EM_DIAGRAM):   end;
1278815   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278816   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1278817   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278818   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278819   +   end;
MPRINT(EM_DIAGRAM):   end;
1278820   +end;
MPRINT(EM_DIAGRAM):   end;
1278821   +
1278822   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1278823   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1278824   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1278825   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1278826   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278827   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278828   +end;
MPRINT(EM_DIAGRAM):   end;
1278829   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278830   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1278831   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1278832   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278833   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1278834   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1278835   +   end;
MPRINT(EM_DIAGRAM):   end;
1278836   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1278837   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1278838   +   end;
MPRINT(EM_DIAGRAM):   end;
1278839   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278840   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1278841   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278842   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278843   +   end;
MPRINT(EM_DIAGRAM):   end;
1278844   +end;
MPRINT(EM_DIAGRAM):   end;
1278845   +
1278846   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1278847   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1278848   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1278849   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1278850   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278851   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278852   +end;
MPRINT(EM_DIAGRAM):   end;
1278853   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278854   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1278855   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1278856   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278857   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1278858   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1278859   +   end;
MPRINT(EM_DIAGRAM):   end;
1278860   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1278861   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1278862   +   end;
MPRINT(EM_DIAGRAM):   end;
1278863   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278864   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1278865   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278866   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278867   +   end;
MPRINT(EM_DIAGRAM):   end;
1278868   +end;
MPRINT(EM_DIAGRAM):   end;
1278869   +
1278870   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1278871   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1278872   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1278873   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1278874   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278875   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278876   +end;
MPRINT(EM_DIAGRAM):   end;
1278877   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278878   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1278879   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1278880   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278881   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1278882   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1278883   +   end;
MPRINT(EM_DIAGRAM):   end;
1278884   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1278885   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1278886   +   end;
MPRINT(EM_DIAGRAM):   end;
1278887   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278888   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1278889   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278890   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278891   +   end;
MPRINT(EM_DIAGRAM):   end;
1278892   +end;
MPRINT(EM_DIAGRAM):   end;
1278893   +
1278894   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1278895   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1278896   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1278897   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1278898   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1278899   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1278900   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1278901   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1278902   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1278903   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1278904   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1278905   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1278906   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278907   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278908   +end;
MPRINT(EM_DIAGRAM):   end;
1278909   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278910   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1278911   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1278912   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278913   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1278914   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1278915   +   end;
MPRINT(EM_DIAGRAM):   end;
1278916   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1278917   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1278918   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1278919   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1278920   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1278921   +   end;
MPRINT(EM_DIAGRAM):   end;
1278922   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1278923   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1278924   +   end;
MPRINT(EM_DIAGRAM):   end;
1278925   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1278926   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1278927   +   end;
MPRINT(EM_DIAGRAM):   end;
1278928   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1278929   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1278930   +   end;
MPRINT(EM_DIAGRAM):   end;
1278931   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278932   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1278933   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1278934   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1278935   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1278936   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1278937   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278938   +   end;
MPRINT(EM_DIAGRAM):   end;
1278939   +end;
MPRINT(EM_DIAGRAM):   end;
1278940   +
1278941   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1278942   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1278943   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1278944   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1278945   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1278946   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1278947   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1278948   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1278949   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1278950   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1278951   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1278952   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1278953   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1278954   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1278955   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1278956   +end;
MPRINT(EM_DIAGRAM):   end;
1278957   +else do;
MPRINT(EM_DIAGRAM):   else do;
1278958   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1278959   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1278960   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1278961   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1278962   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1278963   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1278964   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1278965   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1278966   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1278967   +         end;
MPRINT(EM_DIAGRAM):   end;
1278968   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1278969   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1278970   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1278971   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1278972   +            end;
MPRINT(EM_DIAGRAM):   end;
1278973   +         end;
MPRINT(EM_DIAGRAM):   end;
1278974   +      end;
MPRINT(EM_DIAGRAM):   end;
1278975   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1278976   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1278977   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1278978   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1278979   +         end;
MPRINT(EM_DIAGRAM):   end;
1278980   +      end;
MPRINT(EM_DIAGRAM):   end;
1278981   +   end;
MPRINT(EM_DIAGRAM):   end;
1278982   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1278983   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1278984   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1278985   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1278986   +      end;
MPRINT(EM_DIAGRAM):   end;
1278987   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1278988   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1278989   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1278990   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1278991   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1278992   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1278993   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1278994   +         end;
MPRINT(EM_DIAGRAM):   end;
1278995   +      end;
MPRINT(EM_DIAGRAM):   end;
1278996   +   end;
MPRINT(EM_DIAGRAM):   end;
1278997   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1278998   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1278999   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1279000   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1279001   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1279002   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1279003   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279004   +   end;
MPRINT(EM_DIAGRAM):   end;
1279005   +end;
MPRINT(EM_DIAGRAM):   end;
1279006   +
1279007   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279008   +*** Checking missing input Interval
1279009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1279010   +
1279011   +IF NMISS(
1279012   +   AcceptedCmpTotal ,
1279013   +   Age ,
1279014   +   Frq ,
1279015   +   Income ,
1279016   +   Kidhome ,
1279017   +   Mnt ,
1279018   +   MntFishProducts ,
1279019   +   MntFruits ,
1279020   +   MntGoldProds ,
1279021   +   MntMeatProducts ,
1279022   +   MntSweetProducts ,
1279023   +   MntWines ,
1279024   +   MonthsAsCustomer ,
1279025   +   NumCatalogPurchases ,
1279026   +   NumDealsPurchases ,
1279027   +   NumDistPurchases ,
1279028   +   NumStorePurchases ,
1279029   +   NumWebPurchases ,
1279030   +   NumWebVisitsMonth ,
1279031   +   RFMstat ,
1279032   +   RMntFrq ,
1279033   +   Recency ,
1279034   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1279035   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1279036   +
1279037   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279038   +END;
MPRINT(EM_DIAGRAM):   END;
1279039   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279040   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1279041   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279042   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1279043   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1279044   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1279045   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1279046   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1279047   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1279048   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1279049   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1279050   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1279051   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1279052   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1279053   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1279054   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1279055   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1279056   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1279057   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1279058   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1279059   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1279060   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1279061   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1279062   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
The SAS System

1279063   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1279064   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1279065   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1279066   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1279067   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1279068   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1279069   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1279070   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1279071   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1279072   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1279073   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1279074   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1279075   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1279076   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1279077   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1279078   +END;
MPRINT(EM_DIAGRAM):   END;
1279079   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1279080   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1279081   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1279082   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1279083   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1279084   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1279085   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1279086   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1279087   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1279088   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1279089   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1279090   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1279091   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1279092   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1279093   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1279094   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1279095   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1279096   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1279097   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1279098   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1279099   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1279100   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1279101   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1279102   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1279103   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1279104   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1279105   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1279106   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1279107   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1279108   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1279109   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1279110   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1279111   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1279112   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1279113   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1279114   +   ELSE S_NumCatalogPurchases
1279115   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1279116   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1279117   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1279118   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1279119   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1279120   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1279121   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1279122   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1279123   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1279124   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1279125   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1279126   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1279127   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1279128   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1279129   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1279130   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1279131   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1279132   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1279133   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1279134   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1279135   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1279136   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1279137   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1279138   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1279139   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1279140   +END;
MPRINT(EM_DIAGRAM):   END;
1279141   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279142   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1279143   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279144   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279145   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1279146   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279147   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279148   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1279149   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279150   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1279151   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
1279152   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
1279153   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
1279154   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
1279155   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
1279156   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
1279157   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
1279158   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
1279159   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
1279160   +          +    -1.14704878034134 * S_NumDealsPurchases
1279161   +          +    -0.17763404274659 * S_NumDistPurchases
1279162   +          +     0.08894400267969 * S_NumStorePurchases
1279163   +          +     0.59283747891957 * S_NumWebPurchases
1279164   +          +     0.85268274682505 * S_NumWebVisitsMonth
1279165   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
1279166   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
1279167   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
1279168   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
1279169   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
1279170   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
1279171   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
1279172   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
1279173   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
1279174   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
1279175   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
1279176   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
1279177   +          +    -0.80841566068716 * S_NumDealsPurchases
1279178   +          +    -0.17995640033768 * S_NumDistPurchases
1279179   +          +     0.00713417460936 * S_NumStorePurchases
1279180   +          +     0.57881024323076 * S_NumWebPurchases
1279181   +          +    -1.35134224257365 * S_NumWebVisitsMonth
1279182   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
1279183   +        S_RMntFrq  +     1.16978656262499 * S_Recency
1279184   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
1279185   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
1279186   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
1279187   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
1279188   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
1279189   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
1279190   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
1279191   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
1279192   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
1279193   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
1279194   +          +     0.57891364118717 * S_NumDealsPurchases
1279195   +          +    -0.31024556838688 * S_NumDistPurchases
1279196   +          +    -1.48708542986704 * S_NumStorePurchases
1279197   +          +    -0.93009875249206 * S_NumWebPurchases
1279198   +          +     2.01900039122935 * S_NumWebVisitsMonth
1279199   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
1279200   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
1279201   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
1279202   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
1279203   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
1279204   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
1279205   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
1279206   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
1279207   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
1279208   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
1279209   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
1279210   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
1279211   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
1279212   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
1279213   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
1279214   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
1279215   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
1279216   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
1279217   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
1279218   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
1279219   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
1279220   +          +     0.55883606830033 * Marital_StatusDivorced
1279221   +          +    -0.54530037567066 * Marital_StatusMarried
1279222   +          +    -0.52994736075753 * Marital_StatusSingle
1279223   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
1279224   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
1279225   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
1279226   +        EducationGraduation  +     0.31201349236277 * EducationMaster
1279227   +          +    -1.07368484057033 * Marital_StatusDivorced
1279228   +          +     2.73313504711262 * Marital_StatusMarried
1279229   +          +    -2.18530462876058 * Marital_StatusSingle
1279230   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
1279231   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
1279232   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
1279233   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
1279234   +          +     0.49993144243043 * Marital_StatusDivorced
1279235   +          +    -0.38953339116829 * Marital_StatusMarried
1279236   +          +    -0.10836287319942 * Marital_StatusSingle
1279237   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
1279238   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
1279239   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
1279240   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
1279241   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
1279242   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
1279243   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1279244   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1279245   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1279246   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1279247   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1279248   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1279249   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1279250   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1279251   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1279252   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1279253   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1279254   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1279255   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1279256   +END;
MPRINT(EM_DIAGRAM):   END;
1279257   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1279258   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1279259   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1279260   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1279261   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1279262   +END;
MPRINT(EM_DIAGRAM):   END;
1279263   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279264   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1279265   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279266   +
1279267   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1279268   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1279269   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1279270   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1279271   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1279272   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279273   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1279274   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1279275   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1279276   +end;
MPRINT(EM_DIAGRAM):   end;
1279277   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279278   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1279279   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1279280   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1279281   +   end;
MPRINT(EM_DIAGRAM):   end;
1279282   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1279283   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1279284   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1279285   +   end;
MPRINT(EM_DIAGRAM):   end;
1279286   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279287   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1279288   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1279289   +   end;
MPRINT(EM_DIAGRAM):   end;
1279290   +end;
MPRINT(EM_DIAGRAM):   end;
1279291   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1279292   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
1279293   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
1279294   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
1279295   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1279296   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1279297   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1279298   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1279299   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1279300   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1279301   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1279302   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1279303   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1279304   +END;
MPRINT(EM_DIAGRAM):   END;
1279305   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1279306   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1279307   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1279308   +END;
MPRINT(EM_DIAGRAM):   END;
1279309   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1279310   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1279311   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1279312   +END;
MPRINT(EM_DIAGRAM):   END;
1279313   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1279314   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1279315   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1279316   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1279317   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1279318   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1279319   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1279320   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279321   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1279322   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279323   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1279324   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1279325   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1279326   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1279327   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1279328   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1279329   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1279330   +END;
MPRINT(EM_DIAGRAM):   END;
1279331   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1279332   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1279333   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1279334   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1279335   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
1279336   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279337   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
1279338   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279339   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
1279340   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
1279341   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
1279342   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
1279343   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279344   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
1279345   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279346   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
1279347   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
1279348   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
1279349   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279350   +* Ensmbl45: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Average Posteriors of 5 models;
1279351   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279352   +P_DepVar1 = (
1279353   +AutoNeural10_P_DepVar1 +
1279354   +AutoNeural7_P_DepVar1 +
1279355   +AutoNeural12_P_DepVar1 +
1279356   +AutoNeural11_P_DepVar1 +
1279357   +AutoNeural9_P_DepVar1
1279358   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural10_P_DepVar1 + AutoNeural7_P_DepVar1 + 
AutoNeural12_P_DepVar1 + AutoNeural11_P_DepVar1 + AutoNeural9_P_DepVar1 )/5;
1279359   +P_DepVar0 = (
1279360   +AutoNeural10_P_DepVar0 +
1279361   +AutoNeural7_P_DepVar0 +
1279362   +AutoNeural12_P_DepVar0 +
1279363   +AutoNeural11_P_DepVar0 +
1279364   +AutoNeural9_P_DepVar0
1279365   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural10_P_DepVar0 + AutoNeural7_P_DepVar0 + 
AutoNeural12_P_DepVar0 + AutoNeural11_P_DepVar0 + AutoNeural9_P_DepVar0 )/5;
1279366   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279367   +* Ensmbl45: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Computing Classification Vars;
1279368   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279369   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1279370   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1279371   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1279372   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1279373   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1279374   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1279375   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1279376   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1279377   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1279378   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1279379   +end;
MPRINT(EM_DIAGRAM):   end;
1279380   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1279381   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1279382   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1279383   +end;
MPRINT(EM_DIAGRAM):   end;
1279384   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1279385   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279386   +* Ensmbl45: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Producing Unformatted variable;
1279387   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279388   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1279389   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1279390   +else
1279391   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1279392   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279393   +* Ensmbl45: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Computing _WARN_ Variable;
1279394   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279395   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1279396   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1279397   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1279398   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1279398  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1279399   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1279399  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1279400   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1279400  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1279401   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1279401  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1279402   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1279402  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1279403   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1279403  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1279404   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1279404  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1279405   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1279405  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1279406   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1279406  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1279407   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1279407  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1279408   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1279408  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1279409   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1279409  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1279410   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1279410  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1279411   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1279411  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1279412   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1279412  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1279413   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1279413  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1279414   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1279414  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1279415   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1279415  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1279416   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1279416  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1279417   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1279417  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1279418   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279419   +* Ensmbl45: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Computing Residual Vars;
1279420   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279421   +if
1279422   +F_DepVar NE '1'
1279423   +AND F_DepVar NE '0'
1279424   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1279425   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1279426   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1279427   +end;
MPRINT(EM_DIAGRAM):   end;
1279428   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279429   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1279430   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1279431   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1279432   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1279433   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1279434   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1279435   +END;
MPRINT(EM_DIAGRAM):   END;
1279436   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1279437    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL45_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL10_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1279438    quit;
1279439    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1279440    filename emflow
1279440  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring AUTONEURAL10_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279441    *------------------------------------------------------------*;
1279442    * Ensmbl45: Scoring AUTONEURAL10_VALIDATE data;
1279443    *------------------------------------------------------------*;
1279444    data EMWS8.Ensmbl45_VALIDATE
1279445    / view=EMWS8.Ensmbl45_VALIDATE
1279446    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl45_VALIDATE / view=EMWS8.Ensmbl45_VALIDATE ;
1279447    set EMWS8.AutoNeural10_VALIDATE
1279448    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural10_VALIDATE ;
1279449    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\EMFLOWSCORE.sas.
1279450   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279451   +* Ensmbl45: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Combine model for DepVar;
1279452   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279453   +* Ensmbl45: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 1 of 5;
1279454   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279455   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279456   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1279457   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1279458   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1279459   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279460   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279461   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1279462   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1279463   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1279464   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279465   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279466   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1279467   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1279468   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1279469   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279470   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279471   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1279472   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1279473   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1279474   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279475   +
1279476   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1279477   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1279477  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1279478   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1279479   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1279480   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1279481   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1279482   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1279483   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279484   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1279485   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1279486   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1279487   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279488   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279489   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1279490   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279491   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1279492   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1279493   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1279494   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279495   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1279496   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1279497   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1279498   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279499   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279500   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1279501   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1279502   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
1279503   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279504   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279505   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1279506   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1279507   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
1279508   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1279509   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1279510   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1279511   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1279512   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1279513   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1279514   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1279515   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1279516   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1279517   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1279518   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1279519   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1279520   +LENGTH _WARN_ $4
1279521   +      F_DepVar  $ 12
1279522   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1279523   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1279524   +
1279525   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1279526   +
1279527   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1279528   +
1279529   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1279530   +
1279531   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1279532   +
1279533   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1279534   +
1279535   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1279536   +
1279537   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1279538   +
1279539   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1279540   +
1279541   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1279542   +
1279543   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1279544   +
1279545   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1279546   +
1279547   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1279548   +
1279549   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1279550   +
1279551   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1279552   +
1279553   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1279554   +
1279555   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1279556   +
1279557   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1279558   +
1279559   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1279560   +
1279561   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1279562   +
1279563   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1279564   +
1279565   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1279566   +
1279567   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1279568   +
1279569   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1279570   +
1279571   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1279572   +
1279573   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1279574   +
1279575   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1279576   +
1279577   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1279578   +
1279579   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1279580   +
1279581   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1279582   +
1279583   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1279584   +
1279585   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1279586   +
1279587   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1279588   +
1279589   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1279590   +
1279591   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1279592   +
1279593   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1279594   +
1279595   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1279596   +
1279597   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1279598   +
1279599   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1279600   +
1279601   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1279602   +
1279603   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1279604   +
1279605   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1279606   +
1279607   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1279608   +
1279609   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1279610   +
1279611   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1279612   +
1279613   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1279614   +
1279615   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1279616   +
1279617   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1279618   +
1279619   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1279620   +
1279621   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1279622   +
1279623   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1279624   +
1279625   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
1279626   +
1279627   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
1279628   +
1279629   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1279630   +
1279631   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1279632   +
1279633   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1279634   +
1279635   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1279636   +
1279637   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1279638   +
1279639   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1279640   +
1279641   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1279642   +
1279643   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1279644   +
1279645   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
1279646   +
1279647   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
1279648   +
1279649   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1279650   +
1279651   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1279652   +
1279653   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1279654   +
1279655   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
1279656   +
1279657   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
1279658   +
1279659   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1279660   +
1279661   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1279662   +
1279663   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1279664   +
1279665   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1279666   +
1279667   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1279668   +
1279669   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1279670   +
1279671   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1279672   +
1279673   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1279674   +
1279675   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1279676   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1279677   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1279678   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1279679   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1279680   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279681   +end;
MPRINT(EM_DIAGRAM):   end;
1279682   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279683   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1279684   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1279685   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279686   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1279687   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1279688   +   end;
MPRINT(EM_DIAGRAM):   end;
1279689   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1279690   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1279691   +   end;
MPRINT(EM_DIAGRAM):   end;
1279692   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279693   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1279694   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1279695   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279696   +   end;
MPRINT(EM_DIAGRAM):   end;
1279697   +end;
MPRINT(EM_DIAGRAM):   end;
1279698   +
1279699   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1279700   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1279701   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1279702   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1279703   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1279704   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279705   +end;
MPRINT(EM_DIAGRAM):   end;
1279706   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279707   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1279708   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1279709   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279710   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1279711   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1279712   +   end;
MPRINT(EM_DIAGRAM):   end;
1279713   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1279714   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1279715   +   end;
MPRINT(EM_DIAGRAM):   end;
1279716   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279717   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1279718   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1279719   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279720   +   end;
MPRINT(EM_DIAGRAM):   end;
1279721   +end;
MPRINT(EM_DIAGRAM):   end;
1279722   +
1279723   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1279724   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1279725   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1279726   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1279727   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1279728   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279729   +end;
MPRINT(EM_DIAGRAM):   end;
1279730   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279731   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1279732   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1279733   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279734   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1279735   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1279736   +   end;
MPRINT(EM_DIAGRAM):   end;
1279737   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1279738   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1279739   +   end;
MPRINT(EM_DIAGRAM):   end;
1279740   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279741   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1279742   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1279743   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279744   +   end;
MPRINT(EM_DIAGRAM):   end;
1279745   +end;
MPRINT(EM_DIAGRAM):   end;
1279746   +
1279747   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1279748   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1279749   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1279750   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1279751   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1279752   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279753   +end;
MPRINT(EM_DIAGRAM):   end;
1279754   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279755   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1279756   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1279757   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279758   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1279759   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1279760   +   end;
MPRINT(EM_DIAGRAM):   end;
1279761   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1279762   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1279763   +   end;
MPRINT(EM_DIAGRAM):   end;
1279764   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279765   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1279766   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1279767   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279768   +   end;
MPRINT(EM_DIAGRAM):   end;
1279769   +end;
MPRINT(EM_DIAGRAM):   end;
1279770   +
1279771   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1279772   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1279773   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1279774   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1279775   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1279776   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279777   +end;
MPRINT(EM_DIAGRAM):   end;
1279778   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279779   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1279780   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1279781   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279782   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1279783   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1279784   +   end;
MPRINT(EM_DIAGRAM):   end;
1279785   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1279786   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1279787   +   end;
MPRINT(EM_DIAGRAM):   end;
1279788   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279789   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1279790   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1279791   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279792   +   end;
MPRINT(EM_DIAGRAM):   end;
1279793   +end;
MPRINT(EM_DIAGRAM):   end;
1279794   +
1279795   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1279796   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1279797   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1279798   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1279799   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1279800   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279801   +end;
MPRINT(EM_DIAGRAM):   end;
1279802   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279803   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1279804   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1279805   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279806   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1279807   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1279808   +   end;
MPRINT(EM_DIAGRAM):   end;
1279809   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1279810   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1279811   +   end;
MPRINT(EM_DIAGRAM):   end;
1279812   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279813   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1279814   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1279815   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279816   +   end;
MPRINT(EM_DIAGRAM):   end;
1279817   +end;
MPRINT(EM_DIAGRAM):   end;
1279818   +
1279819   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1279820   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1279821   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1279822   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1279823   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1279824   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279825   +end;
MPRINT(EM_DIAGRAM):   end;
1279826   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279827   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1279828   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1279829   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279830   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1279831   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1279832   +   end;
MPRINT(EM_DIAGRAM):   end;
1279833   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1279834   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1279835   +   end;
MPRINT(EM_DIAGRAM):   end;
1279836   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279837   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1279838   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1279839   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279840   +   end;
MPRINT(EM_DIAGRAM):   end;
1279841   +end;
MPRINT(EM_DIAGRAM):   end;
1279842   +
1279843   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1279844   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1279845   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1279846   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1279847   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1279848   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1279849   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1279850   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1279851   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1279852   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1279853   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1279854   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1279855   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1279856   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279857   +end;
MPRINT(EM_DIAGRAM):   end;
1279858   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279859   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1279860   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1279861   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279862   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1279863   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1279864   +   end;
MPRINT(EM_DIAGRAM):   end;
1279865   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1279866   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1279867   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1279868   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1279869   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1279870   +   end;
MPRINT(EM_DIAGRAM):   end;
1279871   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1279872   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1279873   +   end;
MPRINT(EM_DIAGRAM):   end;
1279874   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1279875   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1279876   +   end;
MPRINT(EM_DIAGRAM):   end;
1279877   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1279878   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1279879   +   end;
MPRINT(EM_DIAGRAM):   end;
1279880   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279881   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1279882   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1279883   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1279884   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1279885   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1279886   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279887   +   end;
MPRINT(EM_DIAGRAM):   end;
1279888   +end;
MPRINT(EM_DIAGRAM):   end;
1279889   +
1279890   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1279891   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1279892   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1279893   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1279894   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1279895   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1279896   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1279897   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1279898   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1279899   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1279900   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1279901   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1279902   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1279903   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1279904   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279905   +end;
MPRINT(EM_DIAGRAM):   end;
1279906   +else do;
MPRINT(EM_DIAGRAM):   else do;
1279907   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1279908   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1279909   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1279910   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1279911   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1279912   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1279913   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1279914   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1279915   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1279916   +         end;
MPRINT(EM_DIAGRAM):   end;
1279917   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1279918   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1279919   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1279920   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1279921   +            end;
MPRINT(EM_DIAGRAM):   end;
1279922   +         end;
MPRINT(EM_DIAGRAM):   end;
1279923   +      end;
MPRINT(EM_DIAGRAM):   end;
1279924   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1279925   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1279926   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1279927   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1279928   +         end;
MPRINT(EM_DIAGRAM):   end;
1279929   +      end;
MPRINT(EM_DIAGRAM):   end;
1279930   +   end;
MPRINT(EM_DIAGRAM):   end;
1279931   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1279932   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1279933   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1279934   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1279935   +      end;
MPRINT(EM_DIAGRAM):   end;
1279936   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1279937   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1279938   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1279939   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1279940   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1279941   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1279942   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1279943   +         end;
MPRINT(EM_DIAGRAM):   end;
1279944   +      end;
MPRINT(EM_DIAGRAM):   end;
1279945   +   end;
MPRINT(EM_DIAGRAM):   end;
1279946   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1279947   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1279948   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1279949   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1279950   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1279951   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1279952   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279953   +   end;
MPRINT(EM_DIAGRAM):   end;
1279954   +end;
MPRINT(EM_DIAGRAM):   end;
1279955   +
1279956   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279957   +*** Checking missing input Interval
1279958   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1279959   +
1279960   +IF NMISS(
1279961   +   AcceptedCmpTotal ,
1279962   +   Age ,
1279963   +   Frq ,
1279964   +   Income ,
1279965   +   Kidhome ,
1279966   +   Mnt ,
1279967   +   MntFishProducts ,
1279968   +   MntFruits ,
1279969   +   MntGoldProds ,
1279970   +   MntMeatProducts ,
1279971   +   MntSweetProducts ,
1279972   +   MntWines ,
1279973   +   MonthsAsCustomer ,
1279974   +   NumCatalogPurchases ,
1279975   +   NumDealsPurchases ,
1279976   +   NumDistPurchases ,
1279977   +   NumStorePurchases ,
1279978   +   NumWebPurchases ,
1279979   +   NumWebVisitsMonth ,
1279980   +   RFMstat ,
1279981   +   RMntFrq ,
1279982   +   Recency ,
1279983   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1279984   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1279985   +
1279986   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1279987   +END;
MPRINT(EM_DIAGRAM):   END;
1279988   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279989   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1279990   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1279991   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1279992   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1279993   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1279994   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1279995   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1279996   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1279997   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1279998   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1279999   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1280000   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1280001   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1280002   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1280003   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1280004   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1280005   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1280006   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1280007   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1280008   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1280009   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1280010   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1280011   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1280012   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1280013   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1280014   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1280015   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1280016   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1280017   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1280018   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1280019   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1280020   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1280021   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1280022   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1280023   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1280024   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1280025   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1280026   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1280027   +END;
MPRINT(EM_DIAGRAM):   END;
1280028   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1280029   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1280030   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1280031   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1280032   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1280033   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1280034   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1280035   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1280036   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1280037   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1280038   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1280039   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1280040   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1280041   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1280042   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1280043   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1280044   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1280045   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1280046   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1280047   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1280048   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1280049   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1280050   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1280051   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1280052   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1280053   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1280054   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1280055   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1280056   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1280057   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1280058   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1280059   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1280060   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1280061   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1280062   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1280063   +   ELSE S_NumCatalogPurchases
1280064   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1280065   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1280066   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1280067   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1280068   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1280069   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1280070   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1280071   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1280072   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1280073   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1280074   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1280075   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1280076   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1280077   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1280078   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1280079   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1280080   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1280081   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1280082   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1280083   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1280084   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1280085   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1280086   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1280087   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1280088   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1280089   +END;
MPRINT(EM_DIAGRAM):   END;
1280090   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280091   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1280092   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280093   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280094   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1280095   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280096   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280097   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1280098   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280099   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1280100   +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
1280101   +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
1280102   +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
1280103   +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
1280104   +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
1280105   +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
1280106   +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
1280107   +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
1280108   +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
1280109   +          +     3.45371614080196 * S_NumDealsPurchases
1280110   +          +     0.19118374544537 * S_NumDistPurchases
1280111   +          +    -2.45138001446793 * S_NumStorePurchases
1280112   +          +    -0.11424280244155 * S_NumWebPurchases
1280113   +          +    -2.31770357716565 * S_NumWebVisitsMonth
1280114   +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
1280115   +        S_RMntFrq  +     0.26870809438679 * S_Recency
1280116   +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 * 
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 * 
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts + 
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 * 
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines + 
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases + 
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases + 
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases + 
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 * 
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
1280117   +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
1280118   +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
1280119   +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
1280120   +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
1280121   +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
1280122   +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
1280123   +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
1280124   +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
1280125   +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
1280126   +          +    -1.28390925647659 * S_NumDealsPurchases
1280127   +          +     0.82669177239926 * S_NumDistPurchases
1280128   +          +     1.71678585204511 * S_NumStorePurchases
1280129   +          +     1.49226295608046 * S_NumWebPurchases
1280130   +          +     -4.0105103018388 * S_NumWebVisitsMonth
1280131   +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
1280132   +        S_RMntFrq  +     4.74241121363086 * S_Recency
1280133   +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 * 
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome 
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 * 
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts + 
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 * 
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 * 
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 * 
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 * 
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq + 
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
1280134   +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
1280135   +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
1280136   +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
1280137   +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
1280138   +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
1280139   +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
1280140   +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
1280141   +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
1280142   +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
1280143   +          +     0.22958626391725 * S_NumDealsPurchases
1280144   +          +    -0.02046515813996 * S_NumDistPurchases
1280145   +          +      0.8618502050837 * S_NumStorePurchases
1280146   +          +     1.45175370326009 * S_NumWebPurchases
1280147   +          +    -0.86122442436156 * S_NumWebVisitsMonth
1280148   +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
1280149   +        S_RMntFrq  +    -0.08202178452839 * S_Recency
1280150   +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 * 
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome 
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 * 
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts + 
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 * 
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 * 
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 * 
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 * 
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq + 
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
1280151   +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
1280152   +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
1280153   +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
1280154   +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
1280155   +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
1280156   +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
1280157   +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
1280158   +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
1280159   +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
1280160   +          +     1.25310034610344 * S_NumDealsPurchases
1280161   +          +     0.92141098602176 * S_NumDistPurchases
1280162   +          +    -0.08806509391473 * S_NumStorePurchases
1280163   +          +     -1.0533787624668 * S_NumWebPurchases
1280164   +          +     3.07050739830585 * S_NumWebVisitsMonth
1280165   +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
1280166   +        S_RMntFrq  +     -3.8741602707981 * S_Recency
1280167   +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 * 
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome 
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 * 
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts + 
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 * 
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 * 
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 * 
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 * 
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq + 
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
1280168   +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
1280169   +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
1280170   +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
1280171   +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
1280172   +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
1280173   +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
1280174   +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
1280175   +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
1280176   +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
1280177   +          +    -1.68259553608287 * S_NumDealsPurchases
1280178   +          +    -0.53835572290445 * S_NumDistPurchases
1280179   +          +     1.25833922835446 * S_NumStorePurchases
1280180   +          +     0.48300830623998 * S_NumWebPurchases
1280181   +          +    -2.20119275236582 * S_NumWebVisitsMonth
1280182   +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
1280183   +        S_RMntFrq  +     0.35692712879409 * S_Recency
1280184   +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 * 
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome 
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 * 
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts + 
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 * 
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 * 
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 * 
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 * 
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq + 
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
1280185   +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
1280186   +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
1280187   +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
1280188   +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
1280189   +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 * 
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 + 
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 * 
HigherEducationBinary0 ;
1280190   +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
1280191   +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
1280192   +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
1280193   +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
1280194   +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 * 
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 + 
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 * 
HigherEducationBinary0 ;
1280195   +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
1280196   +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
1280197   +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
1280198   +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
1280199   +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 * 
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 + 
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 * 
HigherEducationBinary0 ;
1280200   +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
1280201   +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
1280202   +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
1280203   +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
1280204   +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355 
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 + 
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 * 
HigherEducationBinary0 ;
1280205   +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
1280206   +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
1280207   +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
1280208   +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
1280209   +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255 
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 + 
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 * 
HigherEducationBinary0 ;
1280210   +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
1280211   +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
1280212   +        EducationGraduation  +     1.25189584055994 * EducationMaster
1280213   +          +     0.26230568150721 * Marital_StatusDivorced
1280214   +          +     0.27563523967756 * Marital_StatusMarried
1280215   +          +     0.54464481618478 * Marital_StatusSingle
1280216   +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931 
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster 
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried + 
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
1280217   +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
1280218   +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
1280219   +        EducationGraduation  +     0.29772013614284 * EducationMaster
1280220   +          +    -0.06750661313108 * Marital_StatusDivorced
1280221   +          +     1.48628445854207 * Marital_StatusMarried
1280222   +          +    -0.52197797291165 * Marital_StatusSingle
1280223   +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle + 
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284 
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 * 
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 * 
Marital_StatusTogether ;
1280224   +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
1280225   +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
1280226   +        EducationGraduation  +     0.45665087056809 * EducationMaster
1280227   +          +     0.03219453957597 * Marital_StatusDivorced
1280228   +          +    -0.73835008216677 * Marital_StatusMarried
1280229   +          +     0.11212575818086 * Marital_StatusSingle
1280230   +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle + 
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 * 
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 * 
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 * 
Marital_StatusTogether ;
1280231   +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
1280232   +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
1280233   +        EducationGraduation  +    -1.00228990059701 * EducationMaster
1280234   +          +    -0.95055539413405 * Marital_StatusDivorced
1280235   +          +    -1.65922419336067 * Marital_StatusMarried
1280236   +          +     0.78727538125107 * Marital_StatusSingle
1280237   +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle + 
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701 
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 * 
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 * 
Marital_StatusTogether ;
1280238   +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
1280239   +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
1280240   +        EducationGraduation  +     0.46710355433642 * EducationMaster
1280241   +          +     -4.1747415035634 * Marital_StatusDivorced
1280242   +          +     3.61194282451968 * Marital_StatusMarried
1280243   +          +     -3.2800495365546 * Marital_StatusSingle
1280244   +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle + 
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642 
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 * 
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 * 
Marital_StatusTogether ;
1280245   +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
1280246   +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
1280247   +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
1280248   +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
1280249   +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
1280250   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1280251   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1280252   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1280253   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1280254   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1280255   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1280256   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1280257   +END;
MPRINT(EM_DIAGRAM):   END;
1280258   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1280259   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1280260   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1280261   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1280262   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1280263   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1280264   +END;
MPRINT(EM_DIAGRAM):   END;
1280265   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280266   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1280267   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280268   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1280269   +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
1280270   +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
1280271   +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
1280272   +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
1280273   +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
1280274   +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
1280275   +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
1280276   +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
1280277   +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
1280278   +          +     1.29727972396867 * S_NumDealsPurchases
1280279   +          +     -0.4796144286007 * S_NumDistPurchases
1280280   +          +     0.88365985808591 * S_NumStorePurchases
1280281   +          +     0.68522096892804 * S_NumWebPurchases
1280282   +          +     0.54931043107798 * S_NumWebVisitsMonth
1280283   +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
1280284   +        S_RMntFrq  +     2.35704770144328 * S_Recency
1280285   +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 * 
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome 
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 * 
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts + 
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 * 
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 * 
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 * 
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 * 
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq + 
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
1280286   +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
1280287   +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
1280288   +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
1280289   +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
1280290   +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
1280291   +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
1280292   +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
1280293   +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
1280294   +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
1280295   +          +     0.26997834581422 * S_NumDealsPurchases
1280296   +          +      1.4974894627406 * S_NumDistPurchases
1280297   +          +     0.20577850505638 * S_NumStorePurchases
1280298   +          +     0.67578530037026 * S_NumWebPurchases
1280299   +          +     1.48893165613941 * S_NumWebVisitsMonth
1280300   +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
1280301   +        S_RMntFrq  +    -1.40718347701522 * S_Recency
1280302   +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 * 
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 * 
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts + 
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 * 
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines + 
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases + 
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases + 
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases + 
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 * 
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
1280303   +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
1280304   +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
1280305   +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
1280306   +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
1280307   +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
1280308   +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
1280309   +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
1280310   +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
1280311   +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
1280312   +          +    -0.75474919633886 * S_NumDealsPurchases
1280313   +          +     2.21872386475638 * S_NumDistPurchases
1280314   +          +    -0.36191460108989 * S_NumStorePurchases
1280315   +          +     0.03160010932412 * S_NumWebPurchases
1280316   +          +     0.00984650739909 * S_NumWebVisitsMonth
1280317   +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
1280318   +        S_RMntFrq  +     0.97890474913417 * S_Recency
1280319   +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 * 
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome + 
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 * 
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts + 
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 * 
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 * 
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 * 
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 * 
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq + 
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
1280320   +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
1280321   +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
1280322   +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
1280323   +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
1280324   +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
1280325   +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
1280326   +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
1280327   +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
1280328   +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
1280329   +          +    -1.12057357865269 * S_NumDealsPurchases
1280330   +          +    -0.70841760614521 * S_NumDistPurchases
1280331   +          +    -1.39174816270404 * S_NumStorePurchases
1280332   +          +    -1.62343249380806 * S_NumWebPurchases
1280333   +          +    -0.73097954508465 * S_NumWebVisitsMonth
1280334   +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
1280335   +        S_RMntFrq  +    -1.13585643618227 * S_Recency
1280336   +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 * 
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 * 
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658 
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts + 
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 * 
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 * 
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 * 
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 * 
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq + 
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
1280337   +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
1280338   +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
1280339   +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
1280340   +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
1280341   +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
1280342   +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
1280343   +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
1280344   +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
1280345   +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
1280346   +          +     0.66880481485557 * S_NumDealsPurchases
1280347   +          +     0.69540174544859 * S_NumDistPurchases
1280348   +          +     1.68246546921736 * S_NumStorePurchases
1280349   +          +     1.85958176898295 * S_NumWebPurchases
1280350   +          +    -0.23815810306565 * S_NumWebVisitsMonth
1280351   +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
1280352   +        S_RMntFrq  +    -2.12360922264332 * S_Recency
1280353   +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 * 
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome 
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 * 
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts + 
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 * 
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 * 
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 * 
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 * 
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq + 
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
1280354   +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
1280355   +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
1280356   +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
1280357   +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
1280358   +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761 
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 + 
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 * 
HigherEducationBinary0 ;
1280359   +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
1280360   +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
1280361   +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
1280362   +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
1280363   +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 * 
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 + 
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 * 
HigherEducationBinary0 ;
1280364   +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
1280365   +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
1280366   +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
1280367   +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
1280368   +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 * 
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 + 
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 * 
HigherEducationBinary0 ;
1280369   +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
1280370   +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
1280371   +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
1280372   +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
1280373   +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 * 
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 + 
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 * 
HigherEducationBinary0 ;
1280374   +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
1280375   +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
1280376   +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
1280377   +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
1280378   +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 * 
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 + 
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 * 
HigherEducationBinary0 ;
1280379   +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
1280380   +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
1280381   +        EducationGraduation  +     0.32623787352656 * EducationMaster
1280382   +          +      0.2766977476799 * Marital_StatusDivorced
1280383   +          +     0.99585126449473 * Marital_StatusMarried
1280384   +          +    -0.71244490682808 * Marital_StatusSingle
1280385   +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle + 
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656 
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 * 
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 * 
Marital_StatusTogether ;
1280386   +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
1280387   +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
1280388   +        EducationGraduation  +     0.47239961039918 * EducationMaster
1280389   +          +     0.04724779113048 * Marital_StatusDivorced
1280390   +          +    -0.80186231440666 * Marital_StatusMarried
1280391   +          +    -0.02226793584171 * Marital_StatusSingle
1280392   +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle + 
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918 
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 * 
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 * 
Marital_StatusTogether ;
1280393   +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
1280394   +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
1280395   +        EducationGraduation  +     0.41284540548646 * EducationMaster
1280396   +          +     0.28206835683721 * Marital_StatusDivorced
1280397   +          +     0.46500886756532 * Marital_StatusMarried
1280398   +          +     0.35327545255503 * Marital_StatusSingle
1280399   +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle + 
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation + 
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced + 
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle + 
0.58394650567036 * Marital_StatusTogether ;
1280400   +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
1280401   +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
1280402   +        EducationGraduation  +    -0.29812527209479 * EducationMaster
1280403   +          +     1.22291788006392 * Marital_StatusDivorced
1280404   +          +    -2.27040720272432 * Marital_StatusMarried
1280405   +          +     1.13606780043773 * Marital_StatusSingle
1280406   +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle + 
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479 
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 * 
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 * 
Marital_StatusTogether ;
1280407   +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
1280408   +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
1280409   +        EducationGraduation  +      0.4909097120378 * EducationMaster
1280410   +          +     -0.3999800759199 * Marital_StatusDivorced
1280411   +          +    -0.40978271635345 * Marital_StatusMarried
1280412   +          +    -0.55524279444227 * Marital_StatusSingle
1280413   +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle + 
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 * 
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 * 
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 * 
Marital_StatusTogether ;
1280414   +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
1280415   +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
1280416   +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
1280417   +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
1280418   +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
1280419   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1280420   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1280421   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1280422   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
1280423   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
1280424   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
1280425   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
1280426   +END;
MPRINT(EM_DIAGRAM):   END;
1280427   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1280428   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1280429   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1280430   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1280431   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1280432   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1280433   +END;
MPRINT(EM_DIAGRAM):   END;
1280434   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280435   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1280436   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280437   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1280438   +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
1280439   +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
1280440   +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
1280441   +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
1280442   +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
1280443   +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
1280444   +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
1280445   +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
1280446   +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
1280447   +          +     0.15783958682465 * S_NumDealsPurchases
1280448   +          +     1.52124708558457 * S_NumDistPurchases
1280449   +          +     -1.3804418313581 * S_NumStorePurchases
1280450   +          +    -1.29570111649272 * S_NumWebPurchases
1280451   +          +    -0.64280706056547 * S_NumWebVisitsMonth
1280452   +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
1280453   +        S_RMntFrq  +    -0.06726660535826 * S_Recency
1280454   +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 * 
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome 
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 * 
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts + 
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 * 
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 * 
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 * 
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 * 
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq + 
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
1280455   +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
1280456   +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
1280457   +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
1280458   +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
1280459   +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
1280460   +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
1280461   +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
1280462   +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
1280463   +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
1280464   +          +     0.12337111358286 * S_NumDealsPurchases
1280465   +          +     -2.3848926094027 * S_NumDistPurchases
1280466   +          +    -1.20666646996433 * S_NumStorePurchases
1280467   +          +     0.89549302881365 * S_NumWebPurchases
1280468   +          +     0.95359042569947 * S_NumWebVisitsMonth
1280469   +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
1280470   +        S_RMntFrq  +     0.17682790616815 * S_Recency
1280471   +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 * 
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome 
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 * 
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts + 
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 * 
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 * 
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 * 
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 * 
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq + 
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
1280472   +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
1280473   +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
1280474   +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
1280475   +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
1280476   +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
1280477   +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
1280478   +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
1280479   +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
1280480   +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
1280481   +          +    -1.05383642674948 * S_NumDealsPurchases
1280482   +          +     1.71861984509369 * S_NumDistPurchases
1280483   +          +     1.47595181536047 * S_NumStorePurchases
1280484   +          +    -1.64165005491178 * S_NumWebPurchases
1280485   +          +    -2.35130004742828 * S_NumWebVisitsMonth
1280486   +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
1280487   +        S_RMntFrq  +    -1.27356615687944 * S_Recency
1280488   +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 * 
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 * 
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241 
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts + 
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 * 
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 * 
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 * 
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 * 
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq + 
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
1280489   +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
1280490   +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
1280491   +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
1280492   +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
1280493   +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
1280494   +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
1280495   +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
1280496   +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
1280497   +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
1280498   +          +     0.13347794794222 * S_NumDealsPurchases
1280499   +          +     0.30533639886561 * S_NumDistPurchases
1280500   +          +     1.63892955540526 * S_NumStorePurchases
1280501   +          +     0.43734586516446 * S_NumWebPurchases
1280502   +          +     1.79260779802864 * S_NumWebVisitsMonth
1280503   +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
1280504   +        S_RMntFrq  +    -0.32271271703746 * S_Recency
1280505   +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 * 
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome + 
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 * 
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts + 
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 * 
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 * 
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 * 
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 * 
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq + 
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
1280506   +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
1280507   +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
1280508   +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
1280509   +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
1280510   +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
1280511   +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
1280512   +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
1280513   +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
1280514   +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
1280515   +          +     1.64209094349557 * S_NumDealsPurchases
1280516   +          +    -0.38876870460627 * S_NumDistPurchases
1280517   +          +    -0.48559309584971 * S_NumStorePurchases
1280518   +          +     0.21254626353218 * S_NumWebPurchases
1280519   +          +    -0.71484448532542 * S_NumWebVisitsMonth
1280520   +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
1280521   +        S_RMntFrq  +     0.44893411588775 * S_Recency
1280522   +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 * 
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome 
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 * 
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts + 
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 * 
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 * 
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 * 
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 * 
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq + 
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
1280523   +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
1280524   +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
1280525   +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
1280526   +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
1280527   +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 * 
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 + 
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 * 
HigherEducationBinary0 ;
1280528   +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
1280529   +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
1280530   +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
1280531   +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
1280532   +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 * 
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 + 
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 * 
HigherEducationBinary0 ;
1280533   +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
1280534   +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
1280535   +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
1280536   +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
1280537   +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 * 
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 + 
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 * 
HigherEducationBinary0 ;
1280538   +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
1280539   +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
1280540   +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
1280541   +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
1280542   +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334 
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 + 
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 * 
HigherEducationBinary0 ;
1280543   +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
1280544   +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
1280545   +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
1280546   +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
1280547   +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 * 
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 + 
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 * 
HigherEducationBinary0 ;
1280548   +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
1280549   +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
1280550   +        EducationGraduation  +     0.46887304015863 * EducationMaster
1280551   +          +     1.33953173091973 * Marital_StatusDivorced
1280552   +          +    -0.26253208073262 * Marital_StatusMarried
1280553   +          +    -0.00960552682431 * Marital_StatusSingle
1280554   +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle + 
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation + 
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced + 
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle + 
1.02851334153667 * Marital_StatusTogether ;
1280555   +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
1280556   +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
1280557   +        EducationGraduation  +     1.05325310300372 * EducationMaster
1280558   +          +     1.43150850334311 * Marital_StatusDivorced
1280559   +          +    -0.69239127844934 * Marital_StatusMarried
1280560   +          +     2.08477562471559 * Marital_StatusSingle
1280561   +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle + 
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372 
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 * 
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 * 
Marital_StatusTogether ;
1280562   +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
1280563   +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
1280564   +        EducationGraduation  +     1.80436924796338 * EducationMaster
1280565   +          +     1.08387556786168 * Marital_StatusDivorced
1280566   +          +      1.0283506000217 * Marital_StatusMarried
1280567   +          +    -0.87069431107983 * Marital_StatusSingle
1280568   +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle + 
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338 
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 * 
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 * 
Marital_StatusTogether ;
1280569   +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
1280570   +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
1280571   +        EducationGraduation  +    -1.53859265107051 * EducationMaster
1280572   +          +      -1.347780188307 * Marital_StatusDivorced
1280573   +          +    -0.53911983240372 * Marital_StatusMarried
1280574   +          +     0.22083074159185 * Marital_StatusSingle
1280575   +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle + 
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation + 
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced + 
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle + 
0.46023807391468 * Marital_StatusTogether ;
1280576   +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
1280577   +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
1280578   +        EducationGraduation  +      1.6087631135774 * EducationMaster
1280579   +          +     1.46582538311384 * Marital_StatusDivorced
1280580   +          +     0.05256161016002 * Marital_StatusMarried
1280581   +          +    -1.21402967626877 * Marital_StatusSingle
1280582   +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle + 
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 * 
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 * 
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 * 
Marital_StatusTogether ;
1280583   +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
1280584   +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
1280585   +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
1280586   +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
1280587   +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
1280588   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1280589   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1280590   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1280591   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
1280592   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
1280593   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
1280594   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
1280595   +END;
MPRINT(EM_DIAGRAM):   END;
1280596   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1280597   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1280598   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1280599   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1280600   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
1280601   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
1280602   +END;
MPRINT(EM_DIAGRAM):   END;
1280603   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280604   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1280605   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280606   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1280607   +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
1280608   +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
1280609   +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 + 
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
1280610   +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
1280611   +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
1280612   +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 + 
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
1280613   +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
1280614   +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
1280615   +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 + 
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
1280616   +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
1280617   +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
1280618   +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 + 
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
1280619   +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
1280620   +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
1280621   +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2 
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
1280622   +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
1280623   +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
1280624   +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2 
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
1280625   +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
1280626   +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
1280627   +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2 
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
1280628   +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
1280629   +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
1280630   +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2 
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
1280631   +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
1280632   +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
1280633   +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2 
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
1280634   +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
1280635   +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
1280636   +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 + 
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
1280637   +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
1280638   +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
1280639   +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2 
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
1280640   +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
1280641   +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
1280642   +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2 
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
1280643   +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
1280644   +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
1280645   +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
1280646   +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
1280647   +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
1280648   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
1280649   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1280650   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1280651   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1280652   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1280653   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1280654   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1280655   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1280656   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1280657   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1280658   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1280659   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1280660   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1280661   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1280662   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1280663   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1280664   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1280665   +END;
MPRINT(EM_DIAGRAM):   END;
1280666   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1280667   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1280668   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1280669   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1280670   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1280671   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1280672   +END;
MPRINT(EM_DIAGRAM):   END;
1280673   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280674   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1280675   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280676   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1280677   +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
1280678   +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
1280679   +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 + 
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
1280680   +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
1280681   +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
1280682   +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 + 
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
1280683   +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
1280684   +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
1280685   +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 + 
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
1280686   +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
1280687   +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
1280688   +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 + 
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
1280689   +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
1280690   +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
1280691   +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 + 
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
1280692   +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
1280693   +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
1280694   +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2 
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
1280695   +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
1280696   +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
1280697   +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2 
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
1280698   +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
1280699   +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
1280700   +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2 
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
1280701   +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
1280702   +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
1280703   +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2 
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
1280704   +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
1280705   +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
1280706   +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 * 
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
1280707   +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
1280708   +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
1280709   +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2 
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
1280710   +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
1280711   +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
1280712   +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2 
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
1280713   +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
1280714   +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
1280715   +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
1280716   +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
1280717   +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
1280718   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
1280719   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1280720   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
1280721   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
1280722   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
1280723   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
1280724   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
1280725   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
1280726   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
1280727   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
1280728   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
1280729   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
1280730   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
1280731   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
1280732   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
1280733   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
1280734   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
1280735   +END;
MPRINT(EM_DIAGRAM):   END;
1280736   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1280737   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1280738   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1280739   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1280740   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
1280741   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
1280742   +END;
MPRINT(EM_DIAGRAM):   END;
1280743   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280744   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1280745   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280746   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1280747   +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
1280748   +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
1280749   +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 + 
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
1280750   +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
1280751   +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
1280752   +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 + 
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
1280753   +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
1280754   +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
1280755   +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 + 
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
1280756   +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
1280757   +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
1280758   +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 + 
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
1280759   +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
1280760   +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
1280761   +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2 
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
1280762   +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
1280763   +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
1280764   +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2 
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
1280765   +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
1280766   +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
1280767   +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2 
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
1280768   +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
1280769   +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
1280770   +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 * 
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
1280771   +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
1280772   +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
1280773   +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
1280774   +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
1280775   +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
1280776   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
1280777   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1280778   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
1280779   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
1280780   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
1280781   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
1280782   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
1280783   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
1280784   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
1280785   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
1280786   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
1280787   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
1280788   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
1280789   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
1280790   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
1280791   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
1280792   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
1280793   +END;
MPRINT(EM_DIAGRAM):   END;
1280794   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1280795   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1280796   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1280797   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1280798   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
1280799   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
1280800   +END;
MPRINT(EM_DIAGRAM):   END;
1280801   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280802   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1280803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280804   +
1280805   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1280806   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1280807   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1280808   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1280809   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1280810   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1280811   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1280812   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1280813   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1280814   +end;
MPRINT(EM_DIAGRAM):   end;
1280815   +else do;
MPRINT(EM_DIAGRAM):   else do;
1280816   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1280817   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1280818   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1280819   +   end;
MPRINT(EM_DIAGRAM):   end;
1280820   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1280821   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1280822   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1280823   +   end;
MPRINT(EM_DIAGRAM):   end;
1280824   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1280825   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1280826   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1280827   +   end;
MPRINT(EM_DIAGRAM):   end;
1280828   +end;
MPRINT(EM_DIAGRAM):   end;
1280829   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1280830   +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
1280831   +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
1280832   +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 + 
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
1280833   +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
1280834   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1280835   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1280836   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1280837   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1280838   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1280839   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1280840   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1280841   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1280842   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1280843   +END;
MPRINT(EM_DIAGRAM):   END;
1280844   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1280845   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1280846   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1280847   +END;
MPRINT(EM_DIAGRAM):   END;
1280848   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1280849   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1280850   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1280851   +END;
MPRINT(EM_DIAGRAM):   END;
1280852   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1280853   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1280854   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1280855   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1280856   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1280857   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1280858   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1280859   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280860   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1280861   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1280862   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1280863   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1280864   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1280865   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1280866   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1280867   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1280868   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1280869   +END;
MPRINT(EM_DIAGRAM):   END;
1280870   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1280871   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1280872   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1280873   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1280874   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
1280875   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1280876   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
1280877   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1280878   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
1280879   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
1280880   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
1280881   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
1280882   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1280883   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
1280884   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1280885   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
1280886   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
1280887   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
1280888   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1280889   +* Ensmbl45: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 2 of 5;
1280890   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1280891   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1280892   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1280893   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1280894   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
1280895   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1280896   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1280897   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1280898   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1280899   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1280900   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1280901   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1280902   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1280903   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1280904   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1280905   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1280906   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1280907   +LENGTH _WARN_ $4
1280908   +      F_DepVar  $ 12
1280909   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1280910   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1280911   +
1280912   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1280913   +
1280914   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1280915   +
1280916   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1280917   +
1280918   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1280919   +
1280920   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1280921   +
1280922   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1280923   +
1280924   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1280925   +
1280926   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1280927   +
1280928   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1280929   +
1280930   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1280931   +
1280932   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1280933   +
1280934   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1280935   +
1280936   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1280937   +
1280938   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1280939   +
1280940   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1280941   +
1280942   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1280943   +
1280944   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1280945   +
1280946   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1280947   +
1280948   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1280949   +
1280950   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1280951   +
1280952   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1280953   +
1280954   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1280955   +
1280956   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1280957   +
1280958   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1280959   +
1280960   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1280961   +
1280962   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1280963   +
1280964   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1280965   +
1280966   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1280967   +
1280968   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1280969   +
1280970   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1280971   +
1280972   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1280973   +
1280974   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1280975   +
1280976   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1280977   +
1280978   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1280979   +
1280980   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1280981   +
1280982   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1280983   +
1280984   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1280985   +
1280986   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1280987   +
1280988   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1280989   +
1280990   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1280991   +
1280992   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1280993   +
1280994   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1280995   +
1280996   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1280997   +
1280998   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1280999   +
1281000   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1281001   +
1281002   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1281003   +
1281004   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1281005   +
1281006   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1281007   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1281008   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1281009   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1281010   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281011   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281012   +end;
MPRINT(EM_DIAGRAM):   end;
1281013   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281014   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1281015   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1281016   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281017   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1281018   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1281019   +   end;
MPRINT(EM_DIAGRAM):   end;
1281020   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1281021   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1281022   +   end;
MPRINT(EM_DIAGRAM):   end;
1281023   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281024   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1281025   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281026   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281027   +   end;
MPRINT(EM_DIAGRAM):   end;
1281028   +end;
MPRINT(EM_DIAGRAM):   end;
1281029   +
1281030   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1281031   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1281032   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1281033   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1281034   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281035   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281036   +end;
MPRINT(EM_DIAGRAM):   end;
1281037   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281038   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1281039   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1281040   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281041   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1281042   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1281043   +   end;
MPRINT(EM_DIAGRAM):   end;
1281044   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1281045   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1281046   +   end;
MPRINT(EM_DIAGRAM):   end;
1281047   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281048   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1281049   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281050   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281051   +   end;
MPRINT(EM_DIAGRAM):   end;
1281052   +end;
MPRINT(EM_DIAGRAM):   end;
1281053   +
1281054   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1281055   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1281056   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1281057   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1281058   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281059   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281060   +end;
MPRINT(EM_DIAGRAM):   end;
1281061   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281062   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1281063   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1281064   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281065   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1281066   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1281067   +   end;
MPRINT(EM_DIAGRAM):   end;
1281068   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1281069   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1281070   +   end;
MPRINT(EM_DIAGRAM):   end;
1281071   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281072   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1281073   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281074   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281075   +   end;
MPRINT(EM_DIAGRAM):   end;
1281076   +end;
MPRINT(EM_DIAGRAM):   end;
1281077   +
1281078   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1281079   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1281080   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1281081   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1281082   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281083   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281084   +end;
MPRINT(EM_DIAGRAM):   end;
1281085   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281086   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1281087   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1281088   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281089   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1281090   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1281091   +   end;
MPRINT(EM_DIAGRAM):   end;
1281092   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1281093   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1281094   +   end;
MPRINT(EM_DIAGRAM):   end;
1281095   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281096   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1281097   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281098   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281099   +   end;
MPRINT(EM_DIAGRAM):   end;
1281100   +end;
MPRINT(EM_DIAGRAM):   end;
1281101   +
1281102   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1281103   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1281104   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1281105   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1281106   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281107   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281108   +end;
MPRINT(EM_DIAGRAM):   end;
1281109   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281110   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1281111   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1281112   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281113   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1281114   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1281115   +   end;
MPRINT(EM_DIAGRAM):   end;
1281116   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1281117   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1281118   +   end;
MPRINT(EM_DIAGRAM):   end;
1281119   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281120   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1281121   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281122   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281123   +   end;
MPRINT(EM_DIAGRAM):   end;
1281124   +end;
MPRINT(EM_DIAGRAM):   end;
1281125   +
1281126   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1281127   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1281128   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1281129   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1281130   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281131   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281132   +end;
MPRINT(EM_DIAGRAM):   end;
1281133   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281134   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1281135   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1281136   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281137   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1281138   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1281139   +   end;
MPRINT(EM_DIAGRAM):   end;
1281140   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1281141   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1281142   +   end;
MPRINT(EM_DIAGRAM):   end;
1281143   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281144   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1281145   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281146   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281147   +   end;
MPRINT(EM_DIAGRAM):   end;
1281148   +end;
MPRINT(EM_DIAGRAM):   end;
1281149   +
1281150   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1281151   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1281152   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1281153   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1281154   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281155   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281156   +end;
MPRINT(EM_DIAGRAM):   end;
1281157   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281158   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1281159   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1281160   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281161   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1281162   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1281163   +   end;
MPRINT(EM_DIAGRAM):   end;
1281164   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1281165   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1281166   +   end;
MPRINT(EM_DIAGRAM):   end;
1281167   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281168   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1281169   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281170   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281171   +   end;
MPRINT(EM_DIAGRAM):   end;
1281172   +end;
MPRINT(EM_DIAGRAM):   end;
1281173   +
1281174   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1281175   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1281176   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1281177   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1281178   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1281179   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1281180   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1281181   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1281182   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1281183   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1281184   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1281185   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1281186   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281187   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281188   +end;
MPRINT(EM_DIAGRAM):   end;
1281189   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281190   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1281191   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1281192   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281193   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1281194   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1281195   +   end;
MPRINT(EM_DIAGRAM):   end;
1281196   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1281197   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1281198   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1281199   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1281200   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1281201   +   end;
MPRINT(EM_DIAGRAM):   end;
1281202   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1281203   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1281204   +   end;
MPRINT(EM_DIAGRAM):   end;
1281205   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1281206   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1281207   +   end;
MPRINT(EM_DIAGRAM):   end;
1281208   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1281209   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1281210   +   end;
MPRINT(EM_DIAGRAM):   end;
1281211   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281212   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1281213   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1281214   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1281215   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1281216   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281217   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281218   +   end;
MPRINT(EM_DIAGRAM):   end;
1281219   +end;
MPRINT(EM_DIAGRAM):   end;
1281220   +
1281221   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1281222   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1281223   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1281224   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1281225   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1281226   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1281227   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1281228   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1281229   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1281230   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1281231   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1281232   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1281233   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1281234   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281235   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281236   +end;
MPRINT(EM_DIAGRAM):   end;
1281237   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281238   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1281239   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1281240   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281241   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1281242   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1281243   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1281244   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1281245   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1281246   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1281247   +         end;
MPRINT(EM_DIAGRAM):   end;
1281248   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1281249   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1281250   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1281251   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1281252   +            end;
MPRINT(EM_DIAGRAM):   end;
1281253   +         end;
MPRINT(EM_DIAGRAM):   end;
1281254   +      end;
MPRINT(EM_DIAGRAM):   end;
1281255   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1281256   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1281257   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1281258   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1281259   +         end;
MPRINT(EM_DIAGRAM):   end;
1281260   +      end;
MPRINT(EM_DIAGRAM):   end;
1281261   +   end;
MPRINT(EM_DIAGRAM):   end;
1281262   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281263   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1281264   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1281265   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1281266   +      end;
MPRINT(EM_DIAGRAM):   end;
1281267   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1281268   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1281269   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1281270   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1281271   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1281272   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1281273   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1281274   +         end;
MPRINT(EM_DIAGRAM):   end;
1281275   +      end;
MPRINT(EM_DIAGRAM):   end;
1281276   +   end;
MPRINT(EM_DIAGRAM):   end;
1281277   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1281278   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1281279   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1281280   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1281281   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1281282   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281283   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281284   +   end;
MPRINT(EM_DIAGRAM):   end;
1281285   +end;
MPRINT(EM_DIAGRAM):   end;
1281286   +
1281287   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1281288   +*** Checking missing input Interval
1281289   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1281290   +
1281291   +IF NMISS(
1281292   +   AcceptedCmpTotal ,
1281293   +   Age ,
1281294   +   Frq ,
1281295   +   Income ,
1281296   +   Kidhome ,
1281297   +   Mnt ,
1281298   +   MntFishProducts ,
1281299   +   MntFruits ,
1281300   +   MntGoldProds ,
1281301   +   MntMeatProducts ,
1281302   +   MntSweetProducts ,
1281303   +   MntWines ,
1281304   +   MonthsAsCustomer ,
1281305   +   NumCatalogPurchases ,
1281306   +   NumDealsPurchases ,
1281307   +   NumDistPurchases ,
1281308   +   NumStorePurchases ,
1281309   +   NumWebPurchases ,
1281310   +   NumWebVisitsMonth ,
1281311   +   RFMstat ,
1281312   +   RMntFrq ,
1281313   +   Recency ,
1281314   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1281315   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1281316   +
1281317   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281318   +END;
MPRINT(EM_DIAGRAM):   END;
1281319   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1281320   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1281321   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1281322   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1281323   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1281324   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1281325   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1281326   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1281327   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1281328   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1281329   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1281330   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1281331   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1281332   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1281333   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1281334   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1281335   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1281336   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1281337   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1281338   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1281339   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1281340   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1281341   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1281342   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1281343   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1281344   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1281345   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1281346   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1281347   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1281348   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1281349   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1281350   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1281351   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1281352   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1281353   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1281354   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1281355   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1281356   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1281357   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1281358   +END;
MPRINT(EM_DIAGRAM):   END;
1281359   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1281360   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1281361   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1281362   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1281363   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1281364   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1281365   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1281366   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1281367   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1281368   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1281369   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1281370   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1281371   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1281372   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1281373   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1281374   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1281375   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1281376   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1281377   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1281378   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1281379   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1281380   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1281381   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1281382   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1281383   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1281384   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1281385   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1281386   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1281387   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1281388   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1281389   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1281390   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1281391   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1281392   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1281393   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1281394   +   ELSE S_NumCatalogPurchases
1281395   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1281396   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1281397   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1281398   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1281399   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1281400   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1281401   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1281402   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1281403   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1281404   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1281405   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1281406   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1281407   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1281408   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1281409   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1281410   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1281411   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1281412   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1281413   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1281414   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1281415   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1281416   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1281417   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1281418   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1281419   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1281420   +END;
MPRINT(EM_DIAGRAM):   END;
1281421   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1281422   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1281423   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1281424   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1281425   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1281426   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1281427   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1281428   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1281429   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1281430   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1281431   +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
1281432   +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
1281433   +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
1281434   +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
1281435   +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
1281436   +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
1281437   +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
1281438   +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
1281439   +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
1281440   +          +     0.09708841024031 * S_NumDealsPurchases
1281441   +          +    -0.29075561032014 * S_NumDistPurchases
1281442   +          +    -0.14495394259873 * S_NumStorePurchases
1281443   +          +     0.11890705145732 * S_NumWebPurchases
1281444   +          +    -0.16954189911344 * S_NumWebVisitsMonth
1281445   +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
1281446   +        S_RMntFrq  +     0.17150719398884 * S_Recency
1281447   +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
1281448   +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
1281449   +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
1281450   +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
1281451   +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
1281452   +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
1281453   +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
1281454   +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
1281455   +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
1281456   +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
1281457   +          +     0.16274478997892 * S_NumDealsPurchases
1281458   +          +     0.03966958784582 * S_NumDistPurchases
1281459   +          +    -0.04714110726598 * S_NumStorePurchases
1281460   +          +    -0.02124229528082 * S_NumWebPurchases
1281461   +          +     0.29753299776832 * S_NumWebVisitsMonth
1281462   +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
1281463   +        S_RMntFrq  +     -0.3340129986623 * S_Recency
1281464   +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
1281465   +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
1281466   +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
1281467   +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
1281468   +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
1281469   +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
1281470   +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
1281471   +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
1281472   +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
1281473   +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
1281474   +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
1281475   +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
1281476   +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
1281477   +        EducationGraduation  +     0.00619669837452 * EducationMaster
1281478   +          +    -0.05037639679806 * Marital_StatusDivorced
1281479   +          +     0.28781968727878 * Marital_StatusMarried
1281480   +          +    -0.20382417074384 * Marital_StatusSingle
1281481   +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
1281482   +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
1281483   +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
1281484   +        EducationGraduation  +    -0.06952670554019 * EducationMaster
1281485   +          +     0.06970969219123 * Marital_StatusDivorced
1281486   +          +    -0.15787475744986 * Marital_StatusMarried
1281487   +          +     0.14345344072192 * Marital_StatusSingle
1281488   +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
1281489   +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
1281490   +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
1281491   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1281492   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1281493   +END;
MPRINT(EM_DIAGRAM):   END;
1281494   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1281495   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1281496   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1281497   +END;
MPRINT(EM_DIAGRAM):   END;
1281498   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1281499   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1281500   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1281501   +
1281502   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1281503   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1281504   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1281505   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1281506   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1281507   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281508   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1281509   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1281510   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1281511   +end;
MPRINT(EM_DIAGRAM):   end;
1281512   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281513   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1281514   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1281515   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1281516   +   end;
MPRINT(EM_DIAGRAM):   end;
1281517   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1281518   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1281519   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1281520   +   end;
MPRINT(EM_DIAGRAM):   end;
1281521   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281522   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1281523   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1281524   +   end;
MPRINT(EM_DIAGRAM):   end;
1281525   +end;
MPRINT(EM_DIAGRAM):   end;
1281526   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1281527   +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
1281528   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
1281529   +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
1281530   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1281531   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1281532   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1281533   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1281534   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1281535   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1281536   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1281537   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1281538   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1281539   +END;
MPRINT(EM_DIAGRAM):   END;
1281540   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1281541   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1281542   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1281543   +END;
MPRINT(EM_DIAGRAM):   END;
1281544   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1281545   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1281546   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1281547   +END;
MPRINT(EM_DIAGRAM):   END;
1281548   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1281549   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1281550   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1281551   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1281552   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1281553   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1281554   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1281555   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1281556   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1281557   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1281558   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1281559   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1281560   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1281561   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1281562   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1281563   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1281564   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1281565   +END;
MPRINT(EM_DIAGRAM):   END;
1281566   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1281567   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1281568   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1281569   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1281570   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
1281571   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1281572   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
1281573   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1281574   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
1281575   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
1281576   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
1281577   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
1281578   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1281579   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
1281580   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1281581   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
1281582   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
1281583   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
1281584   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1281585   +* Ensmbl45: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 3 of 5;
1281586   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1281587   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1281588   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1281589   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1281590   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
1281591   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1281592   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1281593   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1281594   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1281595   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1281596   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1281597   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1281598   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1281599   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1281600   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1281601   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1281602   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1281603   +LENGTH _WARN_ $4
1281604   +      F_DepVar  $ 12
1281605   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1281606   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1281607   +
1281608   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1281609   +
1281610   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1281611   +
1281612   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1281613   +
1281614   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1281615   +
1281616   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1281617   +
1281618   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1281619   +
1281620   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1281621   +
1281622   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1281623   +
1281624   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1281625   +
1281626   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1281627   +
1281628   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1281629   +
1281630   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1281631   +
1281632   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1281633   +
1281634   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1281635   +
1281636   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1281637   +
1281638   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1281639   +
1281640   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1281641   +
1281642   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1281643   +
1281644   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1281645   +
1281646   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1281647   +
1281648   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1281649   +
1281650   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1281651   +
1281652   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1281653   +
1281654   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1281655   +
1281656   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1281657   +
1281658   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1281659   +
1281660   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1281661   +
1281662   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1281663   +
1281664   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1281665   +
1281666   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1281667   +
1281668   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1281669   +
1281670   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1281671   +
1281672   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1281673   +
1281674   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1281675   +
1281676   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1281677   +
1281678   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1281679   +
1281680   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1281681   +
1281682   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1281683   +
1281684   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1281685   +
1281686   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1281687   +
1281688   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1281689   +
1281690   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1281691   +
1281692   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1281693   +
1281694   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
1281695   +
1281696   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1281697   +
1281698   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1281699   +
1281700   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1281701   +
1281702   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1281703   +
1281704   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1281705   +
1281706   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1281707   +
1281708   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
1281709   +
1281710   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1281711   +
1281712   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1281713   +
1281714   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1281715   +
1281716   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1281717   +
1281718   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1281719   +
1281720   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1281721   +
1281722   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
1281723   +
1281724   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1281725   +
1281726   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1281727   +
1281728   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1281729   +
1281730   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1281731   +
1281732   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1281733   +
1281734   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1281735   +
1281736   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1281737   +
1281738   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1281739   +
1281740   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1281741   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1281742   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1281743   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1281744   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281745   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281746   +end;
MPRINT(EM_DIAGRAM):   end;
1281747   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281748   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1281749   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1281750   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281751   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1281752   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1281753   +   end;
MPRINT(EM_DIAGRAM):   end;
1281754   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1281755   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1281756   +   end;
MPRINT(EM_DIAGRAM):   end;
1281757   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281758   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1281759   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281760   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281761   +   end;
MPRINT(EM_DIAGRAM):   end;
1281762   +end;
MPRINT(EM_DIAGRAM):   end;
1281763   +
1281764   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1281765   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1281766   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1281767   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1281768   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281769   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281770   +end;
MPRINT(EM_DIAGRAM):   end;
1281771   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281772   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1281773   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1281774   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281775   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1281776   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1281777   +   end;
MPRINT(EM_DIAGRAM):   end;
1281778   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1281779   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1281780   +   end;
MPRINT(EM_DIAGRAM):   end;
1281781   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281782   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1281783   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281784   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281785   +   end;
MPRINT(EM_DIAGRAM):   end;
1281786   +end;
MPRINT(EM_DIAGRAM):   end;
1281787   +
1281788   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1281789   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1281790   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1281791   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1281792   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281793   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281794   +end;
MPRINT(EM_DIAGRAM):   end;
1281795   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281796   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1281797   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1281798   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281799   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1281800   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1281801   +   end;
MPRINT(EM_DIAGRAM):   end;
1281802   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1281803   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1281804   +   end;
MPRINT(EM_DIAGRAM):   end;
1281805   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281806   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1281807   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281808   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281809   +   end;
MPRINT(EM_DIAGRAM):   end;
1281810   +end;
MPRINT(EM_DIAGRAM):   end;
1281811   +
1281812   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1281813   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1281814   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1281815   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1281816   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281817   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281818   +end;
MPRINT(EM_DIAGRAM):   end;
1281819   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281820   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1281821   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1281822   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281823   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1281824   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1281825   +   end;
MPRINT(EM_DIAGRAM):   end;
1281826   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1281827   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1281828   +   end;
MPRINT(EM_DIAGRAM):   end;
1281829   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281830   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1281831   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281832   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281833   +   end;
MPRINT(EM_DIAGRAM):   end;
1281834   +end;
MPRINT(EM_DIAGRAM):   end;
1281835   +
1281836   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1281837   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1281838   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1281839   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1281840   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281841   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281842   +end;
MPRINT(EM_DIAGRAM):   end;
1281843   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281844   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1281845   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1281846   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281847   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1281848   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1281849   +   end;
MPRINT(EM_DIAGRAM):   end;
1281850   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1281851   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1281852   +   end;
MPRINT(EM_DIAGRAM):   end;
1281853   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281854   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1281855   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281856   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281857   +   end;
MPRINT(EM_DIAGRAM):   end;
1281858   +end;
MPRINT(EM_DIAGRAM):   end;
1281859   +
1281860   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1281861   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1281862   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1281863   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1281864   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281865   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281866   +end;
MPRINT(EM_DIAGRAM):   end;
1281867   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281868   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1281869   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1281870   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281871   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1281872   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1281873   +   end;
MPRINT(EM_DIAGRAM):   end;
1281874   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1281875   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1281876   +   end;
MPRINT(EM_DIAGRAM):   end;
1281877   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281878   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1281879   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281880   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281881   +   end;
MPRINT(EM_DIAGRAM):   end;
1281882   +end;
MPRINT(EM_DIAGRAM):   end;
1281883   +
1281884   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1281885   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1281886   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1281887   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1281888   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281889   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281890   +end;
MPRINT(EM_DIAGRAM):   end;
1281891   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281892   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1281893   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1281894   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281895   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1281896   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1281897   +   end;
MPRINT(EM_DIAGRAM):   end;
1281898   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1281899   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1281900   +   end;
MPRINT(EM_DIAGRAM):   end;
1281901   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281902   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1281903   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281904   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281905   +   end;
MPRINT(EM_DIAGRAM):   end;
1281906   +end;
MPRINT(EM_DIAGRAM):   end;
1281907   +
1281908   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1281909   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1281910   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1281911   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1281912   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1281913   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1281914   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1281915   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1281916   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1281917   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1281918   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1281919   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1281920   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281921   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281922   +end;
MPRINT(EM_DIAGRAM):   end;
1281923   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281924   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1281925   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1281926   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281927   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1281928   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1281929   +   end;
MPRINT(EM_DIAGRAM):   end;
1281930   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1281931   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1281932   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1281933   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1281934   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1281935   +   end;
MPRINT(EM_DIAGRAM):   end;
1281936   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1281937   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1281938   +   end;
MPRINT(EM_DIAGRAM):   end;
1281939   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1281940   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1281941   +   end;
MPRINT(EM_DIAGRAM):   end;
1281942   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1281943   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1281944   +   end;
MPRINT(EM_DIAGRAM):   end;
1281945   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281946   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1281947   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1281948   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1281949   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1281950   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1281951   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281952   +   end;
MPRINT(EM_DIAGRAM):   end;
1281953   +end;
MPRINT(EM_DIAGRAM):   end;
1281954   +
1281955   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1281956   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1281957   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1281958   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1281959   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1281960   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1281961   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1281962   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1281963   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1281964   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1281965   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1281966   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1281967   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1281968   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1281969   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1281970   +end;
MPRINT(EM_DIAGRAM):   end;
1281971   +else do;
MPRINT(EM_DIAGRAM):   else do;
1281972   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1281973   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1281974   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1281975   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1281976   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1281977   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1281978   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1281979   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1281980   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1281981   +         end;
MPRINT(EM_DIAGRAM):   end;
1281982   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1281983   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1281984   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1281985   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1281986   +            end;
MPRINT(EM_DIAGRAM):   end;
1281987   +         end;
MPRINT(EM_DIAGRAM):   end;
1281988   +      end;
MPRINT(EM_DIAGRAM):   end;
1281989   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1281990   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1281991   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1281992   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1281993   +         end;
MPRINT(EM_DIAGRAM):   end;
1281994   +      end;
MPRINT(EM_DIAGRAM):   end;
1281995   +   end;
MPRINT(EM_DIAGRAM):   end;
1281996   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1281997   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1281998   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1281999   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1282000   +      end;
MPRINT(EM_DIAGRAM):   end;
1282001   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1282002   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1282003   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1282004   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1282005   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1282006   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1282007   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1282008   +         end;
MPRINT(EM_DIAGRAM):   end;
1282009   +      end;
MPRINT(EM_DIAGRAM):   end;
1282010   +   end;
MPRINT(EM_DIAGRAM):   end;
1282011   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1282012   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1282013   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1282014   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1282015   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1282016   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1282017   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282018   +   end;
MPRINT(EM_DIAGRAM):   end;
1282019   +end;
MPRINT(EM_DIAGRAM):   end;
1282020   +
1282021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282022   +*** Checking missing input Interval
1282023   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1282024   +
1282025   +IF NMISS(
1282026   +   AcceptedCmpTotal ,
1282027   +   Age ,
1282028   +   Frq ,
1282029   +   Income ,
1282030   +   Kidhome ,
1282031   +   Mnt ,
1282032   +   MntFishProducts ,
1282033   +   MntFruits ,
1282034   +   MntGoldProds ,
1282035   +   MntMeatProducts ,
1282036   +   MntSweetProducts ,
1282037   +   MntWines ,
1282038   +   MonthsAsCustomer ,
1282039   +   NumCatalogPurchases ,
1282040   +   NumDealsPurchases ,
1282041   +   NumDistPurchases ,
1282042   +   NumStorePurchases ,
1282043   +   NumWebPurchases ,
1282044   +   NumWebVisitsMonth ,
1282045   +   RFMstat ,
1282046   +   RMntFrq ,
1282047   +   Recency ,
1282048   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1282049   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1282050   +
1282051   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282052   +END;
MPRINT(EM_DIAGRAM):   END;
1282053   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282054   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1282055   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282056   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1282057   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1282058   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1282059   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1282060   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1282061   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1282062   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1282063   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1282064   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1282065   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1282066   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1282067   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1282068   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1282069   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1282070   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1282071   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1282072   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1282073   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1282074   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1282075   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1282076   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1282077   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1282078   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1282079   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1282080   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1282081   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1282082   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1282083   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1282084   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1282085   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1282086   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1282087   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1282088   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1282089   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1282090   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1282091   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1282092   +END;
MPRINT(EM_DIAGRAM):   END;
1282093   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1282094   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1282095   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1282096   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1282097   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1282098   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1282099   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1282100   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1282101   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1282102   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1282103   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1282104   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1282105   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1282106   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1282107   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1282108   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1282109   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1282110   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1282111   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1282112   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1282113   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1282114   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1282115   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1282116   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1282117   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1282118   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1282119   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1282120   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1282121   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1282122   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1282123   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1282124   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1282125   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1282126   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1282127   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1282128   +   ELSE S_NumCatalogPurchases
1282129   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1282130   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1282131   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1282132   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1282133   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1282134   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1282135   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1282136   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1282137   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1282138   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1282139   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1282140   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1282141   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1282142   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1282143   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1282144   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1282145   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1282146   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1282147   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1282148   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1282149   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1282150   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1282151   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1282152   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1282153   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1282154   +END;
MPRINT(EM_DIAGRAM):   END;
1282155   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282156   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1282157   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282158   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282159   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1282160   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282161   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282162   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1282163   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282164   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1282165   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
1282166   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
1282167   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
1282168   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
1282169   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
1282170   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
1282171   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
1282172   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
1282173   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
1282174   +          +     1.17276395296242 * S_NumDealsPurchases
1282175   +          +     0.26632768295477 * S_NumDistPurchases
1282176   +          +    -1.26575615903579 * S_NumStorePurchases
1282177   +          +    -0.95316107557927 * S_NumWebPurchases
1282178   +          +     1.01828574356487 * S_NumWebVisitsMonth
1282179   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
1282180   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
1282181   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
1282182   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
1282183   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
1282184   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
1282185   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
1282186   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
1282187   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
1282188   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
1282189   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
1282190   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
1282191   +          +     1.14485571201233 * S_NumDealsPurchases
1282192   +          +     0.21414266588987 * S_NumDistPurchases
1282193   +          +    -0.10530090074297 * S_NumStorePurchases
1282194   +          +    -0.41712321238458 * S_NumWebPurchases
1282195   +          +    -0.99760766791108 * S_NumWebVisitsMonth
1282196   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
1282197   +        S_RMntFrq  +     1.10040128548883 * S_Recency
1282198   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
1282199   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
1282200   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
1282201   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
1282202   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
1282203   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
1282204   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
1282205   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
1282206   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
1282207   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
1282208   +          +      0.7196418967437 * S_NumDealsPurchases
1282209   +          +     0.69035286374177 * S_NumDistPurchases
1282210   +          +     0.38027656631135 * S_NumStorePurchases
1282211   +          +    -0.18878358997924 * S_NumWebPurchases
1282212   +          +     1.61962062004798 * S_NumWebVisitsMonth
1282213   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
1282214   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
1282215   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
1282216   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
1282217   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
1282218   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
1282219   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
1282220   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
1282221   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
1282222   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
1282223   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
1282224   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
1282225   +          +    -0.00642902007204 * S_NumDealsPurchases
1282226   +          +     0.29785069480367 * S_NumDistPurchases
1282227   +          +    -0.42243322063147 * S_NumStorePurchases
1282228   +          +     0.54880896338383 * S_NumWebPurchases
1282229   +          +    -0.12525846016886 * S_NumWebVisitsMonth
1282230   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
1282231   +        S_RMntFrq  +     0.10252211581449 * S_Recency
1282232   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
1282233   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
1282234   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
1282235   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
1282236   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
1282237   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
1282238   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
1282239   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
1282240   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
1282241   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
1282242   +          +    -0.48404738328225 * S_NumDealsPurchases
1282243   +          +    -0.02464180457879 * S_NumDistPurchases
1282244   +          +     1.17201831082067 * S_NumStorePurchases
1282245   +          +     0.57453655167516 * S_NumWebPurchases
1282246   +          +    -1.94417019790248 * S_NumWebVisitsMonth
1282247   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
1282248   +        S_RMntFrq  +      1.6169916658132 * S_Recency
1282249   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
1282250   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
1282251   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
1282252   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
1282253   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
1282254   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
1282255   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
1282256   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
1282257   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
1282258   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
1282259   +          +    -1.49850531967483 * S_NumDealsPurchases
1282260   +          +    -0.82105466264223 * S_NumDistPurchases
1282261   +          +     0.29984603642824 * S_NumStorePurchases
1282262   +          +     0.06557123721611 * S_NumWebPurchases
1282263   +          +     1.04754749365002 * S_NumWebVisitsMonth
1282264   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
1282265   +        S_RMntFrq  +     0.12396789666359 * S_Recency
1282266   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
1282267   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
1282268   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
1282269   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
1282270   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
1282271   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
1282272   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
1282273   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
1282274   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
1282275   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
1282276   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
1282277   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
1282278   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
1282279   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
1282280   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
1282281   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
1282282   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
1282283   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
1282284   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
1282285   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
1282286   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
1282287   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
1282288   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
1282289   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
1282290   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
1282291   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
1282292   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
1282293   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
1282294   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
1282295   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
1282296   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
1282297   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
1282298   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
1282299   +        EducationGraduation  +     0.07595631354847 * EducationMaster
1282300   +          +     0.24583509957712 * Marital_StatusDivorced
1282301   +          +    -0.22681931588361 * Marital_StatusMarried
1282302   +          +    -0.12924106229536 * Marital_StatusSingle
1282303   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
1282304   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
1282305   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
1282306   +        EducationGraduation  +     0.23015089246655 * EducationMaster
1282307   +          +    -0.12585334311068 * Marital_StatusDivorced
1282308   +          +    -0.20835502467207 * Marital_StatusMarried
1282309   +          +    -0.13839534449368 * Marital_StatusSingle
1282310   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
1282311   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
1282312   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
1282313   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
1282314   +          +     0.35106363238113 * Marital_StatusDivorced
1282315   +          +     -1.3414808583918 * Marital_StatusMarried
1282316   +          +     1.40835320798486 * Marital_StatusSingle
1282317   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
1282318   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
1282319   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
1282320   +        EducationGraduation  +      0.1746658332011 * EducationMaster
1282321   +          +     0.48174546958393 * Marital_StatusDivorced
1282322   +          +    -0.41416978858191 * Marital_StatusMarried
1282323   +          +    -0.23376801546265 * Marital_StatusSingle
1282324   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
1282325   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
1282326   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
1282327   +        EducationGraduation  +     0.68875064631577 * EducationMaster
1282328   +          +    -0.67557643774246 * Marital_StatusDivorced
1282329   +          +     1.63844045917367 * Marital_StatusMarried
1282330   +          +    -0.70320960247699 * Marital_StatusSingle
1282331   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
1282332   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
1282333   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
1282334   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
1282335   +          +    -0.11371453086883 * Marital_StatusDivorced
1282336   +          +    -0.34226997176291 * Marital_StatusMarried
1282337   +          +    -1.01568676685754 * Marital_StatusSingle
1282338   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
1282339   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
1282340   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
1282341   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
1282342   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
1282343   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
1282344   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
1282345   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
1282346   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
1282347   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
1282348   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1282349   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1282350   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1282351   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1282352   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1282353   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1282354   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1282355   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1282356   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1282357   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1282358   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1282359   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1282360   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1282361   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
1282362   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
1282363   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1282364   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1282365   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1282366   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1282367   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1282368   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1282369   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
1282370   +END;
MPRINT(EM_DIAGRAM):   END;
1282371   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1282372   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1282373   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1282374   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1282375   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1282376   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1282377   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1282378   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
1282379   +END;
MPRINT(EM_DIAGRAM):   END;
1282380   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282381   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1282382   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282383   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1282384   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
1282385   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
1282386   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
1282387   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
1282388   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
1282389   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
1282390   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
1282391   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
1282392   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
1282393   +          +    -0.87259051567474 * S_NumDealsPurchases
1282394   +          +    -0.36454149529139 * S_NumDistPurchases
1282395   +          +     0.12447759925061 * S_NumStorePurchases
1282396   +          +    -1.08133487947367 * S_NumWebPurchases
1282397   +          +    -0.49882157745454 * S_NumWebVisitsMonth
1282398   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
1282399   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
1282400   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
1282401   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
1282402   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
1282403   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
1282404   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
1282405   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
1282406   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
1282407   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
1282408   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
1282409   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
1282410   +          +     2.23121497416403 * S_NumDealsPurchases
1282411   +          +    -0.48674842191071 * S_NumDistPurchases
1282412   +          +     1.77510728607544 * S_NumStorePurchases
1282413   +          +     0.14647433155436 * S_NumWebPurchases
1282414   +          +    -0.95892686924419 * S_NumWebVisitsMonth
1282415   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
1282416   +        S_RMntFrq  +     2.46497777428475 * S_Recency
1282417   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
1282418   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
1282419   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
1282420   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
1282421   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
1282422   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
1282423   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
1282424   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
1282425   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
1282426   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
1282427   +          +     0.14338855349611 * S_NumDealsPurchases
1282428   +          +    -2.21071010829235 * S_NumDistPurchases
1282429   +          +    -0.21795889348002 * S_NumStorePurchases
1282430   +          +     1.98825087883535 * S_NumWebPurchases
1282431   +          +     1.02482442531149 * S_NumWebVisitsMonth
1282432   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
1282433   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
1282434   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
1282435   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
1282436   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
1282437   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
1282438   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
1282439   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
1282440   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
1282441   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
1282442   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
1282443   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
1282444   +          +     0.30041205661012 * S_NumDealsPurchases
1282445   +          +    -0.63499849986918 * S_NumDistPurchases
1282446   +          +    -0.34155713433714 * S_NumStorePurchases
1282447   +          +    -1.14183354933936 * S_NumWebPurchases
1282448   +          +    -0.42681980262973 * S_NumWebVisitsMonth
1282449   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
1282450   +        S_RMntFrq  +     1.25852246467612 * S_Recency
1282451   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
1282452   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
1282453   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
1282454   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
1282455   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
1282456   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
1282457   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
1282458   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
1282459   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
1282460   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
1282461   +          +    -0.21237915559831 * S_NumDealsPurchases
1282462   +          +     0.48256923764182 * S_NumDistPurchases
1282463   +          +    -0.45553093140641 * S_NumStorePurchases
1282464   +          +      0.5593655963659 * S_NumWebPurchases
1282465   +          +     0.27943768691188 * S_NumWebVisitsMonth
1282466   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
1282467   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
1282468   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
1282469   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
1282470   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
1282471   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
1282472   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
1282473   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
1282474   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
1282475   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
1282476   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
1282477   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
1282478   +          +     2.38967021388062 * S_NumDealsPurchases
1282479   +          +    -0.97722398866481 * S_NumDistPurchases
1282480   +          +     1.57612333191312 * S_NumStorePurchases
1282481   +          +    -0.75968679115983 * S_NumWebPurchases
1282482   +          +    -0.64207187757251 * S_NumWebVisitsMonth
1282483   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
1282484   +        S_RMntFrq  +     1.71313869798331 * S_Recency
1282485   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
1282486   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
1282487   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
1282488   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
1282489   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
1282490   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
1282491   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
1282492   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
1282493   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
1282494   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
1282495   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
1282496   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
1282497   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
1282498   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
1282499   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
1282500   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
1282501   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
1282502   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
1282503   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
1282504   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
1282505   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
1282506   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
1282507   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
1282508   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
1282509   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
1282510   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
1282511   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
1282512   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
1282513   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
1282514   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
1282515   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
1282516   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
1282517   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
1282518   +        EducationGraduation  +      0.1073450284316 * EducationMaster
1282519   +          +     0.96470902298142 * Marital_StatusDivorced
1282520   +          +     0.94805959268314 * Marital_StatusMarried
1282521   +          +     -0.6523948769616 * Marital_StatusSingle
1282522   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
1282523   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
1282524   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
1282525   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
1282526   +          +      0.3918249505531 * Marital_StatusDivorced
1282527   +          +    -0.00968091979586 * Marital_StatusMarried
1282528   +          +     0.84615379885071 * Marital_StatusSingle
1282529   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
1282530   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
1282531   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
1282532   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
1282533   +          +     1.14335160313191 * Marital_StatusDivorced
1282534   +          +     0.50580517192175 * Marital_StatusMarried
1282535   +          +     0.17264295020921 * Marital_StatusSingle
1282536   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
1282537   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
1282538   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
1282539   +        EducationGraduation  +     1.95818378342783 * EducationMaster
1282540   +          +    -0.11238504444225 * Marital_StatusDivorced
1282541   +          +    -0.81348274043749 * Marital_StatusMarried
1282542   +          +     0.46075415610001 * Marital_StatusSingle
1282543   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
1282544   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
1282545   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
1282546   +        EducationGraduation  +     0.08396135672504 * EducationMaster
1282547   +          +    -0.46342068701431 * Marital_StatusDivorced
1282548   +          +    -0.41667845270204 * Marital_StatusMarried
1282549   +          +    -0.47166707496281 * Marital_StatusSingle
1282550   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
1282551   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
1282552   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
1282553   +        EducationGraduation  +     0.36656103863186 * EducationMaster
1282554   +          +    -0.45376613787812 * Marital_StatusDivorced
1282555   +          +     0.01337046049801 * Marital_StatusMarried
1282556   +          +    -0.92811489484121 * Marital_StatusSingle
1282557   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
1282558   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
1282559   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
1282560   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
1282561   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
1282562   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
1282563   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
1282564   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
1282565   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
1282566   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
1282567   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1282568   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1282569   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1282570   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1282571   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1282572   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1282573   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1282574   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1282575   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1282576   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1282577   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1282578   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1282579   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1282580   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
1282581   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
1282582   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1282583   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1282584   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1282585   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1282586   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1282587   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1282588   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
1282589   +END;
MPRINT(EM_DIAGRAM):   END;
1282590   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1282591   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1282592   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1282593   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1282594   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1282595   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1282596   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1282597   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
1282598   +END;
MPRINT(EM_DIAGRAM):   END;
1282599   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282600   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1282601   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282602   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1282603   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
1282604   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
1282605   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
1282606   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
1282607   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
1282608   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
1282609   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
1282610   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
1282611   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
1282612   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
1282613   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
1282614   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
1282615   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
1282616   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
1282617   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
1282618   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
1282619   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
1282620   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
1282621   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
1282622   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
1282623   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
1282624   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
1282625   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
1282626   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
1282627   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
1282628   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
1282629   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
1282630   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
1282631   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
1282632   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
1282633   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
1282634   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
1282635   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
1282636   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
1282637   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
1282638   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
1282639   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
1282640   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
1282641   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
1282642   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
1282643   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
1282644   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
1282645   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
1282646   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
1282647   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
1282648   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
1282649   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
1282650   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
1282651   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
1282652   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
1282653   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
1282654   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
1282655   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
1282656   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
1282657   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
1282658   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
1282659   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
1282660   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1282661   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1282662   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1282663   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1282664   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1282665   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1282666   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1282667   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1282668   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1282669   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1282670   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1282671   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
1282672   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
1282673   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
1282674   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
1282675   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1282676   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1282677   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1282678   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1282679   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1282680   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
1282681   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
1282682   +END;
MPRINT(EM_DIAGRAM):   END;
1282683   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1282684   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1282685   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1282686   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1282687   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1282688   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1282689   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1282690   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
1282691   +END;
MPRINT(EM_DIAGRAM):   END;
1282692   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282693   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1282694   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282695   +
1282696   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1282697   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1282698   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1282699   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1282700   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1282701   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1282702   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1282703   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1282704   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1282705   +end;
MPRINT(EM_DIAGRAM):   end;
1282706   +else do;
MPRINT(EM_DIAGRAM):   else do;
1282707   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1282708   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1282709   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1282710   +   end;
MPRINT(EM_DIAGRAM):   end;
1282711   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1282712   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1282713   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1282714   +   end;
MPRINT(EM_DIAGRAM):   end;
1282715   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1282716   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1282717   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1282718   +   end;
MPRINT(EM_DIAGRAM):   end;
1282719   +end;
MPRINT(EM_DIAGRAM):   end;
1282720   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1282721   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
1282722   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
1282723   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
1282724   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
1282725   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
1282726   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1282727   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1282728   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1282729   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1282730   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1282731   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1282732   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1282733   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1282734   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1282735   +END;
MPRINT(EM_DIAGRAM):   END;
1282736   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1282737   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1282738   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1282739   +END;
MPRINT(EM_DIAGRAM):   END;
1282740   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1282741   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1282742   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1282743   +END;
MPRINT(EM_DIAGRAM):   END;
1282744   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1282745   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1282746   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1282747   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1282748   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1282749   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1282750   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1282751   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282752   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1282753   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1282754   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1282755   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1282756   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1282757   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1282758   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1282759   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1282760   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1282761   +END;
MPRINT(EM_DIAGRAM):   END;
1282762   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1282763   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1282764   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1282765   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1282766   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
1282767   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1282768   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
1282769   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1282770   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
1282771   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
1282772   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
1282773   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
1282774   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1282775   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
1282776   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1282777   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
1282778   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
1282779   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
1282780   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1282781   +* Ensmbl45: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 4 of 5;
1282782   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1282783   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1282784   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1282785   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1282786   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
1282787   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1282788   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1282789   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1282790   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1282791   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1282792   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1282793   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1282794   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1282795   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1282796   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1282797   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1282798   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1282799   +LENGTH _WARN_ $4
1282800   +      F_DepVar  $ 12
1282801   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1282802   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1282803   +
1282804   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1282805   +
1282806   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1282807   +
1282808   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1282809   +
1282810   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1282811   +
1282812   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1282813   +
1282814   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1282815   +
1282816   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1282817   +
1282818   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1282819   +
1282820   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1282821   +
1282822   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1282823   +
1282824   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1282825   +
1282826   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1282827   +
1282828   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1282829   +
1282830   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1282831   +
1282832   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1282833   +
1282834   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1282835   +
1282836   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1282837   +
1282838   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1282839   +
1282840   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1282841   +
1282842   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1282843   +
1282844   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1282845   +
1282846   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1282847   +
1282848   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1282849   +
1282850   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1282851   +
1282852   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1282853   +
1282854   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1282855   +
1282856   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1282857   +
1282858   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1282859   +
1282860   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1282861   +
1282862   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1282863   +
1282864   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1282865   +
1282866   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1282867   +
1282868   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1282869   +
1282870   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1282871   +
1282872   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1282873   +
1282874   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1282875   +
1282876   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1282877   +
1282878   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1282879   +
1282880   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1282881   +
1282882   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1282883   +
1282884   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1282885   +
1282886   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1282887   +
1282888   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1282889   +
1282890   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1282891   +
1282892   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1282893   +
1282894   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1282895   +
1282896   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1282897   +
1282898   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1282899   +
1282900   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1282901   +
1282902   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1282903   +
1282904   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1282905   +
1282906   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1282907   +
1282908   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1282909   +
1282910   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1282911   +
1282912   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1282913   +
1282914   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1282915   +
1282916   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1282917   +
1282918   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1282919   +
1282920   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1282921   +
1282922   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1282923   +
1282924   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1282925   +
1282926   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1282927   +
1282928   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1282929   +
1282930   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1282931   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1282932   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1282933   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1282934   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1282935   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282936   +end;
MPRINT(EM_DIAGRAM):   end;
1282937   +else do;
MPRINT(EM_DIAGRAM):   else do;
1282938   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1282939   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1282940   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1282941   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1282942   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1282943   +   end;
MPRINT(EM_DIAGRAM):   end;
1282944   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1282945   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1282946   +   end;
MPRINT(EM_DIAGRAM):   end;
1282947   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1282948   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1282949   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1282950   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282951   +   end;
MPRINT(EM_DIAGRAM):   end;
1282952   +end;
MPRINT(EM_DIAGRAM):   end;
1282953   +
1282954   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1282955   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1282956   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1282957   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1282958   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1282959   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282960   +end;
MPRINT(EM_DIAGRAM):   end;
1282961   +else do;
MPRINT(EM_DIAGRAM):   else do;
1282962   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1282963   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1282964   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1282965   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1282966   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1282967   +   end;
MPRINT(EM_DIAGRAM):   end;
1282968   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1282969   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1282970   +   end;
MPRINT(EM_DIAGRAM):   end;
1282971   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1282972   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1282973   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1282974   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282975   +   end;
MPRINT(EM_DIAGRAM):   end;
1282976   +end;
MPRINT(EM_DIAGRAM):   end;
1282977   +
1282978   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1282979   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1282980   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1282981   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1282982   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1282983   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282984   +end;
MPRINT(EM_DIAGRAM):   end;
1282985   +else do;
MPRINT(EM_DIAGRAM):   else do;
1282986   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1282987   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1282988   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1282989   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1282990   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1282991   +   end;
MPRINT(EM_DIAGRAM):   end;
1282992   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1282993   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1282994   +   end;
MPRINT(EM_DIAGRAM):   end;
1282995   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1282996   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1282997   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1282998   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1282999   +   end;
MPRINT(EM_DIAGRAM):   end;
1283000   +end;
MPRINT(EM_DIAGRAM):   end;
1283001   +
1283002   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1283003   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1283004   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1283005   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1283006   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1283007   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1283008   +end;
MPRINT(EM_DIAGRAM):   end;
1283009   +else do;
MPRINT(EM_DIAGRAM):   else do;
1283010   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1283011   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1283012   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1283013   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1283014   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1283015   +   end;
MPRINT(EM_DIAGRAM):   end;
1283016   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1283017   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1283018   +   end;
MPRINT(EM_DIAGRAM):   end;
1283019   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1283020   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1283021   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1283022   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1283023   +   end;
MPRINT(EM_DIAGRAM):   end;
1283024   +end;
MPRINT(EM_DIAGRAM):   end;
1283025   +
1283026   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1283027   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1283028   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1283029   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1283030   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1283031   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1283032   +end;
MPRINT(EM_DIAGRAM):   end;
1283033   +else do;
MPRINT(EM_DIAGRAM):   else do;
1283034   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1283035   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1283036   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1283037   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1283038   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1283039   +   end;
MPRINT(EM_DIAGRAM):   end;
1283040   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1283041   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1283042   +   end;
MPRINT(EM_DIAGRAM):   end;
1283043   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1283044   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1283045   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1283046   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1283047   +   end;
MPRINT(EM_DIAGRAM):   end;
1283048   +end;
MPRINT(EM_DIAGRAM):   end;
1283049   +
1283050   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1283051   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1283052   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1283053   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1283054   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1283055   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1283056   +end;
MPRINT(EM_DIAGRAM):   end;
1283057   +else do;
MPRINT(EM_DIAGRAM):   else do;
1283058   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1283059   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1283060   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1283061   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1283062   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1283063   +   end;
MPRINT(EM_DIAGRAM):   end;
1283064   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1283065   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1283066   +   end;
MPRINT(EM_DIAGRAM):   end;
1283067   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1283068   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1283069   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1283070   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1283071   +   end;
MPRINT(EM_DIAGRAM):   end;
1283072   +end;
MPRINT(EM_DIAGRAM):   end;
1283073   +
1283074   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1283075   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1283076   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1283077   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1283078   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1283079   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1283080   +end;
MPRINT(EM_DIAGRAM):   end;
1283081   +else do;
MPRINT(EM_DIAGRAM):   else do;
1283082   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1283083   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1283084   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1283085   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1283086   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1283087   +   end;
MPRINT(EM_DIAGRAM):   end;
1283088   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1283089   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1283090   +   end;
MPRINT(EM_DIAGRAM):   end;
1283091   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1283092   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1283093   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1283094   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1283095   +   end;
MPRINT(EM_DIAGRAM):   end;
1283096   +end;
MPRINT(EM_DIAGRAM):   end;
1283097   +
1283098   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1283099   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1283100   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1283101   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1283102   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1283103   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1283104   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1283105   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1283106   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1283107   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1283108   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1283109   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1283110   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1283111   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1283112   +end;
MPRINT(EM_DIAGRAM):   end;
1283113   +else do;
MPRINT(EM_DIAGRAM):   else do;
1283114   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1283115   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1283116   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1283117   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1283118   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1283119   +   end;
MPRINT(EM_DIAGRAM):   end;
1283120   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1283121   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1283122   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1283123   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1283124   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1283125   +   end;
MPRINT(EM_DIAGRAM):   end;
1283126   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1283127   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1283128   +   end;
MPRINT(EM_DIAGRAM):   end;
1283129   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1283130   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1283131   +   end;
MPRINT(EM_DIAGRAM):   end;
1283132   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1283133   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1283134   +   end;
MPRINT(EM_DIAGRAM):   end;
1283135   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1283136   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1283137   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1283138   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1283139   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1283140   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1283141   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1283142   +   end;
MPRINT(EM_DIAGRAM):   end;
1283143   +end;
MPRINT(EM_DIAGRAM):   end;
1283144   +
1283145   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1283146   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1283147   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1283148   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1283149   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1283150   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1283151   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1283152   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1283153   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1283154   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1283155   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1283156   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1283157   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1283158   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1283159   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1283160   +end;
MPRINT(EM_DIAGRAM):   end;
1283161   +else do;
MPRINT(EM_DIAGRAM):   else do;
1283162   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1283163   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1283164   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1283165   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1283166   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1283167   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1283168   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1283169   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1283170   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1283171   +         end;
MPRINT(EM_DIAGRAM):   end;
1283172   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1283173   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1283174   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1283175   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1283176   +            end;
MPRINT(EM_DIAGRAM):   end;
1283177   +         end;
MPRINT(EM_DIAGRAM):   end;
1283178   +      end;
MPRINT(EM_DIAGRAM):   end;
1283179   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1283180   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1283181   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1283182   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1283183   +         end;
MPRINT(EM_DIAGRAM):   end;
1283184   +      end;
MPRINT(EM_DIAGRAM):   end;
1283185   +   end;
MPRINT(EM_DIAGRAM):   end;
1283186   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1283187   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1283188   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1283189   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1283190   +      end;
MPRINT(EM_DIAGRAM):   end;
1283191   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1283192   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1283193   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1283194   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1283195   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1283196   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1283197   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1283198   +         end;
MPRINT(EM_DIAGRAM):   end;
1283199   +      end;
MPRINT(EM_DIAGRAM):   end;
1283200   +   end;
MPRINT(EM_DIAGRAM):   end;
1283201   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1283202   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1283203   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1283204   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1283205   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1283206   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1283207   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1283208   +   end;
MPRINT(EM_DIAGRAM):   end;
1283209   +end;
MPRINT(EM_DIAGRAM):   end;
1283210   +
1283211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283212   +*** Checking missing input Interval
1283213   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1283214   +
1283215   +IF NMISS(
1283216   +   AcceptedCmpTotal ,
1283217   +   Age ,
1283218   +   Frq ,
1283219   +   Income ,
1283220   +   Kidhome ,
1283221   +   Mnt ,
1283222   +   MntFishProducts ,
1283223   +   MntFruits ,
1283224   +   MntGoldProds ,
1283225   +   MntMeatProducts ,
1283226   +   MntSweetProducts ,
1283227   +   MntWines ,
1283228   +   MonthsAsCustomer ,
1283229   +   NumCatalogPurchases ,
1283230   +   NumDealsPurchases ,
1283231   +   NumDistPurchases ,
1283232   +   NumStorePurchases ,
1283233   +   NumWebPurchases ,
1283234   +   NumWebVisitsMonth ,
1283235   +   RFMstat ,
1283236   +   RMntFrq ,
1283237   +   Recency ,
1283238   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1283239   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1283240   +
1283241   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1283242   +END;
MPRINT(EM_DIAGRAM):   END;
1283243   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283244   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1283245   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283246   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1283247   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1283248   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1283249   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1283250   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1283251   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1283252   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1283253   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1283254   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1283255   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1283256   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1283257   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1283258   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1283259   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1283260   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1283261   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1283262   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1283263   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1283264   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1283265   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1283266   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1283267   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1283268   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1283269   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1283270   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1283271   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1283272   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1283273   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1283274   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1283275   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1283276   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1283277   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1283278   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1283279   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1283280   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1283281   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1283282   +END;
MPRINT(EM_DIAGRAM):   END;
1283283   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1283284   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1283285   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1283286   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1283287   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1283288   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1283289   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1283290   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1283291   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1283292   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1283293   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1283294   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1283295   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1283296   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1283297   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1283298   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1283299   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1283300   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1283301   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1283302   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1283303   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1283304   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1283305   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1283306   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1283307   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1283308   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1283309   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1283310   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1283311   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1283312   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1283313   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1283314   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1283315   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1283316   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1283317   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1283318   +   ELSE S_NumCatalogPurchases
1283319   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1283320   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1283321   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1283322   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1283323   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1283324   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1283325   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1283326   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1283327   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1283328   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1283329   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1283330   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1283331   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1283332   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1283333   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1283334   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1283335   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1283336   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1283337   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1283338   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1283339   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1283340   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1283341   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1283342   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1283343   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1283344   +END;
MPRINT(EM_DIAGRAM):   END;
1283345   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283346   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1283347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283349   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1283350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283351   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283352   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1283353   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283354   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1283355   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
1283356   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
1283357   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
1283358   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
1283359   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
1283360   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
1283361   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
1283362   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
1283363   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
1283364   +          +     0.89422627895323 * S_NumDealsPurchases
1283365   +          +    -0.13304125929765 * S_NumDistPurchases
1283366   +          +    -1.04568442570811 * S_NumStorePurchases
1283367   +          +    -0.28677765126751 * S_NumWebPurchases
1283368   +          +      1.2327638737509 * S_NumWebVisitsMonth
1283369   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
1283370   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
1283371   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
1283372   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
1283373   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
1283374   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
1283375   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
1283376   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
1283377   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
1283378   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
1283379   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
1283380   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
1283381   +          +     0.04224590196535 * S_NumDealsPurchases
1283382   +          +     0.76554742700113 * S_NumDistPurchases
1283383   +          +    -0.49155496870812 * S_NumStorePurchases
1283384   +          +     0.59606812744403 * S_NumWebPurchases
1283385   +          +     1.86809286276405 * S_NumWebVisitsMonth
1283386   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
1283387   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
1283388   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
1283389   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
1283390   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
1283391   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
1283392   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
1283393   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
1283394   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
1283395   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
1283396   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
1283397   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
1283398   +          +    -0.04866536993486 * S_NumDealsPurchases
1283399   +          +    -0.53535979020214 * S_NumDistPurchases
1283400   +          +     2.20634071253676 * S_NumStorePurchases
1283401   +          +      0.6164564989007 * S_NumWebPurchases
1283402   +          +    -0.43396314395263 * S_NumWebVisitsMonth
1283403   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
1283404   +        S_RMntFrq  +     2.37293441098349 * S_Recency
1283405   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
1283406   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
1283407   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
1283408   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
1283409   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
1283410   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
1283411   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
1283412   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
1283413   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
1283414   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
1283415   +          +     1.37461255707863 * S_NumDealsPurchases
1283416   +          +    -0.17684775000818 * S_NumDistPurchases
1283417   +          +    -0.62755623855535 * S_NumStorePurchases
1283418   +          +    -1.46551649022657 * S_NumWebPurchases
1283419   +          +     3.35784247878638 * S_NumWebVisitsMonth
1283420   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
1283421   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
1283422   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
1283423   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
1283424   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
1283425   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
1283426   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
1283427   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
1283428   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
1283429   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
1283430   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
1283431   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
1283432   +          +    -0.76256677907121 * S_NumDealsPurchases
1283433   +          +    -0.31591571751692 * S_NumDistPurchases
1283434   +          +      0.0506832614089 * S_NumStorePurchases
1283435   +          +      1.4636796923764 * S_NumWebPurchases
1283436   +          +     0.37743519705036 * S_NumWebVisitsMonth
1283437   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
1283438   +        S_RMntFrq  +     0.16854775832723 * S_Recency
1283439   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
1283440   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
1283441   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
1283442   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
1283443   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
1283444   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
1283445   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
1283446   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
1283447   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
1283448   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
1283449   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
1283450   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
1283451   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
1283452   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
1283453   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
1283454   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
1283455   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
1283456   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
1283457   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
1283458   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
1283459   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
1283460   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
1283461   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
1283462   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
1283463   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
1283464   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
1283465   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
1283466   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
1283467   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
1283468   +          +     0.68641668264565 * Marital_StatusDivorced
1283469   +          +    -0.81586871439732 * Marital_StatusMarried
1283470   +          +     0.63758920518451 * Marital_StatusSingle
1283471   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
1283472   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
1283473   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
1283474   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
1283475   +          +     0.05137560133238 * Marital_StatusDivorced
1283476   +          +    -2.24401993266209 * Marital_StatusMarried
1283477   +          +     1.57359386216115 * Marital_StatusSingle
1283478   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
1283479   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
1283480   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
1283481   +        EducationGraduation  +     0.61492669859334 * EducationMaster
1283482   +          +     -1.0649987815942 * Marital_StatusDivorced
1283483   +          +     0.76065111692388 * Marital_StatusMarried
1283484   +          +    -0.21694149754801 * Marital_StatusSingle
1283485   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
1283486   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
1283487   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
1283488   +        EducationGraduation  +     0.04208620358211 * EducationMaster
1283489   +          +     2.02155453548328 * Marital_StatusDivorced
1283490   +          +    -2.60190649735306 * Marital_StatusMarried
1283491   +          +     1.09149388354927 * Marital_StatusSingle
1283492   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
1283493   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
1283494   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
1283495   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
1283496   +          +     0.66315970650309 * Marital_StatusDivorced
1283497   +          +    -1.20476729758152 * Marital_StatusMarried
1283498   +          +     0.56175027826397 * Marital_StatusSingle
1283499   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
1283500   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
1283501   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
1283502   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
1283503   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
1283504   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
1283505   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
1283506   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
1283507   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1283508   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1283509   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1283510   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1283511   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1283512   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1283513   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1283514   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1283515   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1283516   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1283517   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1283518   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1283519   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1283520   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1283521   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1283522   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1283523   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1283524   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1283525   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1283526   +END;
MPRINT(EM_DIAGRAM):   END;
1283527   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1283528   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1283529   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1283530   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1283531   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1283532   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1283533   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1283534   +END;
MPRINT(EM_DIAGRAM):   END;
1283535   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283536   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1283537   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283538   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1283539   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
1283540   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
1283541   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
1283542   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
1283543   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
1283544   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
1283545   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
1283546   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
1283547   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
1283548   +          +     1.50005927423985 * S_NumDealsPurchases
1283549   +          +      0.5590536933569 * S_NumDistPurchases
1283550   +          +    -0.61757824339318 * S_NumStorePurchases
1283551   +          +     0.37259686538158 * S_NumWebPurchases
1283552   +          +     2.59725437895564 * S_NumWebVisitsMonth
1283553   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
1283554   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
1283555   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
1283556   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
1283557   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
1283558   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
1283559   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
1283560   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
1283561   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
1283562   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
1283563   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
1283564   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
1283565   +          +    -0.09282222088797 * S_NumDealsPurchases
1283566   +          +     0.10726247938321 * S_NumDistPurchases
1283567   +          +     -1.1235971458527 * S_NumStorePurchases
1283568   +          +    -0.78304387839877 * S_NumWebPurchases
1283569   +          +    -0.44139243179956 * S_NumWebVisitsMonth
1283570   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
1283571   +        S_RMntFrq  +     2.19072220135069 * S_Recency
1283572   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
1283573   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
1283574   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
1283575   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
1283576   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
1283577   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
1283578   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
1283579   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
1283580   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
1283581   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
1283582   +          +     0.35349185459988 * S_NumDealsPurchases
1283583   +          +     0.06853677714859 * S_NumDistPurchases
1283584   +          +    -1.47546012999338 * S_NumStorePurchases
1283585   +          +     0.20926435398916 * S_NumWebPurchases
1283586   +          +    -1.00535683639093 * S_NumWebVisitsMonth
1283587   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
1283588   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
1283589   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
1283590   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
1283591   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
1283592   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
1283593   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
1283594   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
1283595   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
1283596   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
1283597   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
1283598   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
1283599   +          +      0.3873586120272 * S_NumDealsPurchases
1283600   +          +     0.25911651157596 * S_NumDistPurchases
1283601   +          +     1.58922489084287 * S_NumStorePurchases
1283602   +          +     0.49041797743368 * S_NumWebPurchases
1283603   +          +     -1.5425586871929 * S_NumWebVisitsMonth
1283604   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
1283605   +        S_RMntFrq  +     1.03099569333498 * S_Recency
1283606   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
1283607   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
1283608   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
1283609   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
1283610   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
1283611   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
1283612   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
1283613   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
1283614   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
1283615   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
1283616   +          +    -0.60830880287865 * S_NumDealsPurchases
1283617   +          +      0.0745331267194 * S_NumDistPurchases
1283618   +          +    -1.39472448256952 * S_NumStorePurchases
1283619   +          +     1.95372179969087 * S_NumWebPurchases
1283620   +          +    -0.63307356390404 * S_NumWebVisitsMonth
1283621   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
1283622   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
1283623   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
1283624   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
1283625   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
1283626   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
1283627   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
1283628   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
1283629   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
1283630   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
1283631   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
1283632   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
1283633   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
1283634   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
1283635   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
1283636   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
1283637   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
1283638   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
1283639   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
1283640   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
1283641   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
1283642   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
1283643   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
1283644   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
1283645   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
1283646   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
1283647   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
1283648   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
1283649   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
1283650   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
1283651   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
1283652   +          +    -1.33377871643323 * Marital_StatusDivorced
1283653   +          +    -0.87184228840898 * Marital_StatusMarried
1283654   +          +     1.41223186340257 * Marital_StatusSingle
1283655   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
1283656   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
1283657   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
1283658   +        EducationGraduation  +     0.38341272155343 * EducationMaster
1283659   +          +    -0.21479890935233 * Marital_StatusDivorced
1283660   +          +     -0.0025459519579 * Marital_StatusMarried
1283661   +          +     1.33900491702264 * Marital_StatusSingle
1283662   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
1283663   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
1283664   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
1283665   +        EducationGraduation  +     0.60739269725685 * EducationMaster
1283666   +          +    -0.38307267471999 * Marital_StatusDivorced
1283667   +          +     0.97088969451415 * Marital_StatusMarried
1283668   +          +    -0.28578224473381 * Marital_StatusSingle
1283669   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
1283670   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
1283671   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
1283672   +        EducationGraduation  +     0.14160673378252 * EducationMaster
1283673   +          +    -1.42229401093569 * Marital_StatusDivorced
1283674   +          +      0.7234508382397 * Marital_StatusMarried
1283675   +          +    -0.29062202974628 * Marital_StatusSingle
1283676   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
1283677   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
1283678   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
1283679   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
1283680   +          +    -0.99067637207205 * Marital_StatusDivorced
1283681   +          +    -0.50245902142079 * Marital_StatusMarried
1283682   +          +     0.54214494533793 * Marital_StatusSingle
1283683   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
1283684   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
1283685   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
1283686   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
1283687   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
1283688   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
1283689   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
1283690   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
1283691   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1283692   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1283693   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1283694   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1283695   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1283696   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1283697   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1283698   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1283699   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1283700   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1283701   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1283702   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1283703   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1283704   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1283705   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1283706   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1283707   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1283708   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1283709   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1283710   +END;
MPRINT(EM_DIAGRAM):   END;
1283711   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1283712   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1283713   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1283714   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1283715   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1283716   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1283717   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1283718   +END;
MPRINT(EM_DIAGRAM):   END;
1283719   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283720   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1283721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283722   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1283723   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
1283724   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
1283725   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
1283726   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
1283727   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
1283728   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
1283729   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
1283730   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
1283731   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
1283732   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
1283733   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
1283734   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
1283735   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
1283736   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
1283737   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
1283738   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
1283739   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
1283740   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
1283741   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
1283742   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
1283743   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
1283744   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
1283745   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
1283746   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
1283747   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
1283748   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
1283749   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
1283750   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
1283751   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
1283752   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
1283753   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
1283754   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
1283755   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
1283756   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
1283757   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
1283758   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
1283759   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
1283760   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
1283761   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
1283762   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
1283763   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
1283764   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
1283765   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
1283766   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
1283767   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
1283768   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
1283769   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
1283770   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
1283771   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1283772   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1283773   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1283774   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1283775   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1283776   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
1283777   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
1283778   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
1283779   +END;
MPRINT(EM_DIAGRAM):   END;
1283780   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1283781   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1283782   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1283783   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1283784   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1283785   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1283786   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1283787   +END;
MPRINT(EM_DIAGRAM):   END;
1283788   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283789   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1283790   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283791   +
1283792   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1283793   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1283794   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1283795   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1283796   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1283797   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1283798   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1283799   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1283800   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1283801   +end;
MPRINT(EM_DIAGRAM):   end;
1283802   +else do;
MPRINT(EM_DIAGRAM):   else do;
1283803   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1283804   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1283805   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1283806   +   end;
MPRINT(EM_DIAGRAM):   end;
1283807   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1283808   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1283809   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1283810   +   end;
MPRINT(EM_DIAGRAM):   end;
1283811   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1283812   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1283813   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1283814   +   end;
MPRINT(EM_DIAGRAM):   end;
1283815   +end;
MPRINT(EM_DIAGRAM):   end;
1283816   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1283817   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
1283818   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
1283819   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
1283820   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
1283821   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1283822   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1283823   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1283824   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1283825   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1283826   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1283827   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1283828   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1283829   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1283830   +END;
MPRINT(EM_DIAGRAM):   END;
1283831   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1283832   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1283833   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1283834   +END;
MPRINT(EM_DIAGRAM):   END;
1283835   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1283836   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1283837   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1283838   +END;
MPRINT(EM_DIAGRAM):   END;
1283839   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1283840   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1283841   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1283842   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1283843   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1283844   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1283845   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1283846   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283847   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1283848   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1283849   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1283850   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1283851   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1283852   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1283853   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1283854   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1283855   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1283856   +END;
MPRINT(EM_DIAGRAM):   END;
1283857   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1283858   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1283859   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1283860   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1283861   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
1283862   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1283863   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
1283864   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1283865   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
1283866   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
1283867   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
1283868   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
1283869   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1283870   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
1283871   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1283872   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
1283873   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
1283874   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
1283875   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1283876   +* Ensmbl45: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 5 of 5;
1283877   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1283878   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1283879   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
1283880   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1283881   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
1283882   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1283883   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1283884   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1283885   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1283886   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1283887   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1283888   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1283889   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1283890   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1283891   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1283892   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1283893   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1283894   +LENGTH _WARN_ $4
1283895   +      F_DepVar  $ 12
1283896   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1283897   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1283898   +
1283899   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1283900   +
1283901   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1283902   +
1283903   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1283904   +
1283905   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1283906   +
1283907   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1283908   +
1283909   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1283910   +
1283911   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1283912   +
1283913   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1283914   +
1283915   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1283916   +
1283917   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1283918   +
1283919   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1283920   +
1283921   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1283922   +
1283923   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1283924   +
1283925   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1283926   +
1283927   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1283928   +
1283929   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1283930   +
1283931   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1283932   +
1283933   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1283934   +
1283935   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1283936   +
1283937   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1283938   +
1283939   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1283940   +
1283941   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1283942   +
1283943   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1283944   +
1283945   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1283946   +
1283947   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1283948   +
1283949   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1283950   +
1283951   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1283952   +
1283953   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1283954   +
1283955   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1283956   +
1283957   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1283958   +
1283959   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1283960   +
1283961   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1283962   +
1283963   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1283964   +
1283965   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1283966   +
1283967   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1283968   +
1283969   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1283970   +
1283971   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1283972   +
1283973   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1283974   +
1283975   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1283976   +
1283977   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1283978   +
1283979   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1283980   +
1283981   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1283982   +
1283983   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1283984   +
1283985   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1283986   +
1283987   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1283988   +
1283989   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1283990   +
1283991   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1283992   +
1283993   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1283994   +
1283995   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1283996   +
1283997   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1283998   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1283999   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1284000   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1284001   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1284002   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284003   +end;
MPRINT(EM_DIAGRAM):   end;
1284004   +else do;
MPRINT(EM_DIAGRAM):   else do;
1284005   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1284006   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1284007   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1284008   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1284009   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1284010   +   end;
MPRINT(EM_DIAGRAM):   end;
1284011   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1284012   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1284013   +   end;
MPRINT(EM_DIAGRAM):   end;
1284014   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1284015   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1284016   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1284017   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284018   +   end;
MPRINT(EM_DIAGRAM):   end;
1284019   +end;
MPRINT(EM_DIAGRAM):   end;
1284020   +
1284021   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1284022   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1284023   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1284024   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1284025   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1284026   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284027   +end;
MPRINT(EM_DIAGRAM):   end;
1284028   +else do;
MPRINT(EM_DIAGRAM):   else do;
1284029   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1284030   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1284031   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1284032   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1284033   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1284034   +   end;
MPRINT(EM_DIAGRAM):   end;
1284035   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1284036   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1284037   +   end;
MPRINT(EM_DIAGRAM):   end;
1284038   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1284039   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1284040   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1284041   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284042   +   end;
MPRINT(EM_DIAGRAM):   end;
1284043   +end;
MPRINT(EM_DIAGRAM):   end;
1284044   +
1284045   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1284046   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1284047   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1284048   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1284049   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1284050   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284051   +end;
MPRINT(EM_DIAGRAM):   end;
1284052   +else do;
MPRINT(EM_DIAGRAM):   else do;
1284053   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1284054   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1284055   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1284056   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1284057   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1284058   +   end;
MPRINT(EM_DIAGRAM):   end;
1284059   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1284060   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1284061   +   end;
MPRINT(EM_DIAGRAM):   end;
1284062   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1284063   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1284064   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1284065   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284066   +   end;
MPRINT(EM_DIAGRAM):   end;
1284067   +end;
MPRINT(EM_DIAGRAM):   end;
1284068   +
1284069   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1284070   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1284071   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1284072   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1284073   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1284074   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284075   +end;
MPRINT(EM_DIAGRAM):   end;
1284076   +else do;
MPRINT(EM_DIAGRAM):   else do;
1284077   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1284078   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1284079   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1284080   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1284081   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1284082   +   end;
MPRINT(EM_DIAGRAM):   end;
1284083   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1284084   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1284085   +   end;
MPRINT(EM_DIAGRAM):   end;
1284086   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1284087   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1284088   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1284089   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284090   +   end;
MPRINT(EM_DIAGRAM):   end;
1284091   +end;
MPRINT(EM_DIAGRAM):   end;
1284092   +
1284093   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1284094   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1284095   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1284096   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1284097   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1284098   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284099   +end;
MPRINT(EM_DIAGRAM):   end;
1284100   +else do;
MPRINT(EM_DIAGRAM):   else do;
1284101   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1284102   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1284103   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1284104   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1284105   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1284106   +   end;
MPRINT(EM_DIAGRAM):   end;
1284107   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1284108   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1284109   +   end;
MPRINT(EM_DIAGRAM):   end;
1284110   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1284111   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1284112   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1284113   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284114   +   end;
MPRINT(EM_DIAGRAM):   end;
1284115   +end;
MPRINT(EM_DIAGRAM):   end;
1284116   +
1284117   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1284118   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1284119   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1284120   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1284121   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1284122   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284123   +end;
MPRINT(EM_DIAGRAM):   end;
1284124   +else do;
MPRINT(EM_DIAGRAM):   else do;
1284125   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1284126   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1284127   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1284128   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1284129   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1284130   +   end;
MPRINT(EM_DIAGRAM):   end;
1284131   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1284132   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1284133   +   end;
MPRINT(EM_DIAGRAM):   end;
1284134   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1284135   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1284136   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1284137   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284138   +   end;
MPRINT(EM_DIAGRAM):   end;
1284139   +end;
MPRINT(EM_DIAGRAM):   end;
1284140   +
1284141   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1284142   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1284143   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1284144   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1284145   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1284146   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284147   +end;
MPRINT(EM_DIAGRAM):   end;
1284148   +else do;
MPRINT(EM_DIAGRAM):   else do;
1284149   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1284150   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1284151   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1284152   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1284153   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1284154   +   end;
MPRINT(EM_DIAGRAM):   end;
1284155   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1284156   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1284157   +   end;
MPRINT(EM_DIAGRAM):   end;
1284158   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1284159   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1284160   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1284161   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284162   +   end;
MPRINT(EM_DIAGRAM):   end;
1284163   +end;
MPRINT(EM_DIAGRAM):   end;
1284164   +
1284165   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1284166   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1284167   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1284168   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1284169   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1284170   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1284171   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1284172   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1284173   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1284174   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1284175   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1284176   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1284177   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1284178   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284179   +end;
MPRINT(EM_DIAGRAM):   end;
1284180   +else do;
MPRINT(EM_DIAGRAM):   else do;
1284181   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1284182   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1284183   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1284184   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1284185   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1284186   +   end;
MPRINT(EM_DIAGRAM):   end;
1284187   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1284188   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1284189   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1284190   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1284191   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1284192   +   end;
MPRINT(EM_DIAGRAM):   end;
1284193   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1284194   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1284195   +   end;
MPRINT(EM_DIAGRAM):   end;
1284196   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1284197   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1284198   +   end;
MPRINT(EM_DIAGRAM):   end;
1284199   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1284200   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1284201   +   end;
MPRINT(EM_DIAGRAM):   end;
1284202   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1284203   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1284204   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1284205   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1284206   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1284207   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1284208   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284209   +   end;
MPRINT(EM_DIAGRAM):   end;
1284210   +end;
MPRINT(EM_DIAGRAM):   end;
1284211   +
1284212   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1284213   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1284214   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1284215   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1284216   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1284217   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1284218   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1284219   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1284220   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1284221   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1284222   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1284223   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1284224   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1284225   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1284226   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284227   +end;
MPRINT(EM_DIAGRAM):   end;
1284228   +else do;
MPRINT(EM_DIAGRAM):   else do;
1284229   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1284230   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1284231   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1284232   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1284233   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1284234   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1284235   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1284236   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1284237   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1284238   +         end;
MPRINT(EM_DIAGRAM):   end;
1284239   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1284240   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1284241   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1284242   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1284243   +            end;
MPRINT(EM_DIAGRAM):   end;
1284244   +         end;
MPRINT(EM_DIAGRAM):   end;
1284245   +      end;
MPRINT(EM_DIAGRAM):   end;
1284246   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1284247   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1284248   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1284249   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1284250   +         end;
MPRINT(EM_DIAGRAM):   end;
1284251   +      end;
MPRINT(EM_DIAGRAM):   end;
1284252   +   end;
MPRINT(EM_DIAGRAM):   end;
1284253   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1284254   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1284255   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1284256   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1284257   +      end;
MPRINT(EM_DIAGRAM):   end;
1284258   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1284259   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1284260   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1284261   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1284262   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1284263   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1284264   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1284265   +         end;
MPRINT(EM_DIAGRAM):   end;
1284266   +      end;
MPRINT(EM_DIAGRAM):   end;
1284267   +   end;
MPRINT(EM_DIAGRAM):   end;
1284268   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1284269   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1284270   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1284271   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1284272   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1284273   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1284274   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284275   +   end;
MPRINT(EM_DIAGRAM):   end;
1284276   +end;
MPRINT(EM_DIAGRAM):   end;
1284277   +
1284278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1284279   +*** Checking missing input Interval
1284280   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1284281   +
1284282   +IF NMISS(
1284283   +   AcceptedCmpTotal ,
1284284   +   Age ,
1284285   +   Frq ,
1284286   +   Income ,
1284287   +   Kidhome ,
1284288   +   Mnt ,
1284289   +   MntFishProducts ,
1284290   +   MntFruits ,
1284291   +   MntGoldProds ,
1284292   +   MntMeatProducts ,
1284293   +   MntSweetProducts ,
1284294   +   MntWines ,
1284295   +   MonthsAsCustomer ,
1284296   +   NumCatalogPurchases ,
1284297   +   NumDealsPurchases ,
1284298   +   NumDistPurchases ,
1284299   +   NumStorePurchases ,
1284300   +   NumWebPurchases ,
1284301   +   NumWebVisitsMonth ,
1284302   +   RFMstat ,
1284303   +   RMntFrq ,
1284304   +   Recency ,
1284305   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1284306   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1284307   +
1284308   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284309   +END;
MPRINT(EM_DIAGRAM):   END;
1284310   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1284311   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1284312   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1284313   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1284314   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1284315   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1284316   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1284317   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1284318   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1284319   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1284320   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1284321   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1284322   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1284323   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1284324   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1284325   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1284326   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1284327   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1284328   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1284329   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1284330   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1284331   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1284332   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1284333   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1284334   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1284335   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1284336   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1284337   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1284338   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1284339   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1284340   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1284341   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1284342   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1284343   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1284344   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1284345   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1284346   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1284347   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1284348   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1284349   +END;
MPRINT(EM_DIAGRAM):   END;
1284350   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1284351   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1284352   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1284353   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1284354   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1284355   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1284356   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1284357   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1284358   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1284359   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1284360   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1284361   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1284362   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1284363   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1284364   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1284365   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1284366   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1284367   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1284368   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1284369   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1284370   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1284371   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1284372   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1284373   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1284374   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1284375   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1284376   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1284377   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1284378   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1284379   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1284380   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1284381   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1284382   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1284383   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1284384   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1284385   +   ELSE S_NumCatalogPurchases
1284386   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1284387   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1284388   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1284389   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1284390   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1284391   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1284392   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1284393   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1284394   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1284395   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1284396   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1284397   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1284398   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1284399   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1284400   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1284401   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1284402   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1284403   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1284404   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1284405   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1284406   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1284407   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1284408   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1284409   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1284410   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1284411   +END;
MPRINT(EM_DIAGRAM):   END;
1284412   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1284413   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1284414   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1284415   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1284416   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1284417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1284418   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1284419   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1284420   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1284421   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1284422   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
1284423   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
1284424   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
1284425   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
1284426   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
1284427   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
1284428   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
1284429   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
1284430   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
1284431   +          +    -1.14704878034134 * S_NumDealsPurchases
1284432   +          +    -0.17763404274659 * S_NumDistPurchases
1284433   +          +     0.08894400267969 * S_NumStorePurchases
1284434   +          +     0.59283747891957 * S_NumWebPurchases
1284435   +          +     0.85268274682505 * S_NumWebVisitsMonth
1284436   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
1284437   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
1284438   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
1284439   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
1284440   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
1284441   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
1284442   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
1284443   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
1284444   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
1284445   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
1284446   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
1284447   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
1284448   +          +    -0.80841566068716 * S_NumDealsPurchases
1284449   +          +    -0.17995640033768 * S_NumDistPurchases
1284450   +          +     0.00713417460936 * S_NumStorePurchases
1284451   +          +     0.57881024323076 * S_NumWebPurchases
1284452   +          +    -1.35134224257365 * S_NumWebVisitsMonth
1284453   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
1284454   +        S_RMntFrq  +     1.16978656262499 * S_Recency
The SAS System

1284455   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
1284456   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
1284457   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
1284458   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
1284459   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
1284460   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
1284461   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
1284462   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
1284463   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
1284464   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
1284465   +          +     0.57891364118717 * S_NumDealsPurchases
1284466   +          +    -0.31024556838688 * S_NumDistPurchases
1284467   +          +    -1.48708542986704 * S_NumStorePurchases
1284468   +          +    -0.93009875249206 * S_NumWebPurchases
1284469   +          +     2.01900039122935 * S_NumWebVisitsMonth
1284470   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
1284471   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
1284472   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
1284473   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
1284474   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
1284475   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
1284476   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
1284477   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
1284478   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
1284479   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
1284480   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
1284481   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
1284482   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
1284483   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
1284484   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
1284485   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
1284486   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
1284487   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
1284488   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
1284489   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
1284490   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
1284491   +          +     0.55883606830033 * Marital_StatusDivorced
1284492   +          +    -0.54530037567066 * Marital_StatusMarried
1284493   +          +    -0.52994736075753 * Marital_StatusSingle
1284494   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
1284495   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
1284496   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
1284497   +        EducationGraduation  +     0.31201349236277 * EducationMaster
1284498   +          +    -1.07368484057033 * Marital_StatusDivorced
1284499   +          +     2.73313504711262 * Marital_StatusMarried
1284500   +          +    -2.18530462876058 * Marital_StatusSingle
1284501   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
1284502   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
1284503   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
1284504   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
1284505   +          +     0.49993144243043 * Marital_StatusDivorced
1284506   +          +    -0.38953339116829 * Marital_StatusMarried
1284507   +          +    -0.10836287319942 * Marital_StatusSingle
1284508   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
1284509   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
1284510   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
1284511   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
1284512   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
1284513   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
1284514   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1284515   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1284516   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1284517   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1284518   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1284519   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1284520   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1284521   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1284522   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1284523   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1284524   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1284525   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1284526   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1284527   +END;
MPRINT(EM_DIAGRAM):   END;
1284528   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1284529   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1284530   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1284531   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1284532   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1284533   +END;
MPRINT(EM_DIAGRAM):   END;
1284534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1284535   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1284536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1284537   +
1284538   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1284539   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1284540   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1284541   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1284542   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1284543   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1284544   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1284545   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1284546   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1284547   +end;
MPRINT(EM_DIAGRAM):   end;
1284548   +else do;
MPRINT(EM_DIAGRAM):   else do;
1284549   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1284550   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1284551   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1284552   +   end;
MPRINT(EM_DIAGRAM):   end;
1284553   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1284554   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1284555   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1284556   +   end;
MPRINT(EM_DIAGRAM):   end;
1284557   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1284558   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1284559   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1284560   +   end;
MPRINT(EM_DIAGRAM):   end;
1284561   +end;
MPRINT(EM_DIAGRAM):   end;
1284562   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1284563   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
1284564   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
1284565   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
1284566   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1284567   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1284568   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1284569   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1284570   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1284571   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1284572   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1284573   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1284574   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1284575   +END;
MPRINT(EM_DIAGRAM):   END;
1284576   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1284577   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1284578   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1284579   +END;
MPRINT(EM_DIAGRAM):   END;
1284580   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1284581   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1284582   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1284583   +END;
MPRINT(EM_DIAGRAM):   END;
1284584   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1284585   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1284586   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1284587   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1284588   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1284589   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1284590   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1284591   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1284592   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1284593   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1284594   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1284595   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1284596   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1284597   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1284598   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1284599   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1284600   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1284601   +END;
MPRINT(EM_DIAGRAM):   END;
1284602   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1284603   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1284604   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1284605   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1284606   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
1284607   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1284608   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
1284609   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1284610   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
1284611   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
1284612   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
1284613   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
1284614   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1284615   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
1284616   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1284617   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
1284618   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
1284619   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
1284620   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1284621   +* Ensmbl45: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Average Posteriors of 5 models;
1284622   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1284623   +P_DepVar1 = (
1284624   +AutoNeural10_P_DepVar1 +
1284625   +AutoNeural7_P_DepVar1 +
1284626   +AutoNeural12_P_DepVar1 +
1284627   +AutoNeural11_P_DepVar1 +
1284628   +AutoNeural9_P_DepVar1
1284629   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural10_P_DepVar1 + AutoNeural7_P_DepVar1 + 
AutoNeural12_P_DepVar1 + AutoNeural11_P_DepVar1 + AutoNeural9_P_DepVar1 )/5;
1284630   +P_DepVar0 = (
1284631   +AutoNeural10_P_DepVar0 +
1284632   +AutoNeural7_P_DepVar0 +
1284633   +AutoNeural12_P_DepVar0 +
1284634   +AutoNeural11_P_DepVar0 +
1284635   +AutoNeural9_P_DepVar0
1284636   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural10_P_DepVar0 + AutoNeural7_P_DepVar0 + 
AutoNeural12_P_DepVar0 + AutoNeural11_P_DepVar0 + AutoNeural9_P_DepVar0 )/5;
1284637   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1284638   +* Ensmbl45: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Computing Classification Vars;
1284639   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1284640   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1284641   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1284642   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1284643   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1284644   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1284645   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1284646   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1284647   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1284648   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1284649   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1284650   +end;
MPRINT(EM_DIAGRAM):   end;
1284651   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1284652   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1284653   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1284654   +end;
MPRINT(EM_DIAGRAM):   end;
1284655   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1284656   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1284657   +* Ensmbl45: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Producing Unformatted variable;
1284658   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1284659   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1284660   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1284661   +else
1284662   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1284663   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1284664   +* Ensmbl45: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Computing _WARN_ Variable;
1284665   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1284666   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1284667   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1284668   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1284669   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1284669  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1284670   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1284670  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1284671   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1284671  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1284672   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1284672  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1284673   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1284673  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1284674   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1284674  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1284675   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1284675  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1284676   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1284676  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1284677   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1284677  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1284678   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1284678  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1284679   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1284679  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1284680   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1284680  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1284681   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1284681  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1284682   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1284682  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1284683   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1284683  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1284684   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1284684  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1284685   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
1284685  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1284686   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
1284686  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1284687   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
1284687  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1284688   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
1284688  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1284689   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1284690   +* Ensmbl45: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Computing Residual Vars;
1284691   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1284692   +if
1284693   +F_DepVar NE '1'
1284694   +AND F_DepVar NE '0'
1284695   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1284696   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1284697   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1284698   +end;
MPRINT(EM_DIAGRAM):   end;
1284699   +else do;
MPRINT(EM_DIAGRAM):   else do;
1284700   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1284701   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1284702   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1284703   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1284704   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1284705   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1284706   +END;
MPRINT(EM_DIAGRAM):   END;
1284707   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1284708    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL45_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL10_VALIDATE.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.18 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.20 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1284709    quit;
1284710    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl45_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl45_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl45_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl45_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl45_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1284770    filename _pref
1284770  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
1284771    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1284772    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas.
1284773   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1284774   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1284775   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1284776   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1284777   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1284778   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1284779   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1284780   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1284781   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1284782   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1284783   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1284784   +LENGTH _WARN_ $4
1284785   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1284786   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1284787   +
1284788   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1284789   +
1284790   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1284791   +
1284792   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1284793   +
1284794   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1284795   +
1284796   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1284797   +
1284798   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1284799   +
1284800   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1284801   +
1284802   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1284803   +
1284804   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1284805   +
1284806   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1284807   +
1284808   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1284809   +
1284810   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1284811   +
1284812   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1284813   +
1284814   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1284815   +
1284816   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1284817   +
1284818   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1284819   +
1284820   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1284821   +
1284822   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1284823   +
1284824   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1284825   +
1284826   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1284827   +
1284828   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1284829   +
1284830   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1284831   +
1284832   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1284833   +
1284834   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1284835   +
1284836   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1284837   +
1284838   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1284839   +
1284840   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1284841   +
1284842   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1284843   +
1284844   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1284845   +
1284846   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1284847   +
1284848   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1284849   +
1284850   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1284851   +
1284852   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1284853   +
1284854   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1284855   +
1284856   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1284857   +
1284858   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1284859   +
1284860   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1284861   +
1284862   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1284863   +
1284864   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1284865   +
1284866   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1284867   +
1284868   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1284869   +
1284870   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1284871   +
1284872   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1284873   +
1284874   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1284875   +
1284876   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1284877   +
1284878   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1284879   +
1284880   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1284881   +
1284882   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
1284883   +
1284884   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
1284885   +
1284886   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
1284887   +
1284888   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
1284889   +
1284890   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
1284891   +
1284892   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1284893   +
1284894   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1284895   +
1284896   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1284897   +
1284898   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1284899   +
1284900   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1284901   +
1284902   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
1284903   +
1284904   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
1284905   +
1284906   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
1284907   +
1284908   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
1284909   +
1284910   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
1284911   +
1284912   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
1284913   +
1284914   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
1284915   +
1284916   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
1284917   +
1284918   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
1284919   +
1284920   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
1284921   +
1284922   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1284923   +
1284924   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1284925   +
1284926   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1284927   +
1284928   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1284929   +
1284930   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1284931   +
1284932   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1284933   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1284934   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1284935   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1284936   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1284937   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284938   +end;
MPRINT(EM_DIAGRAM):   end;
1284939   +else do;
MPRINT(EM_DIAGRAM):   else do;
1284940   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1284941   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1284942   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1284943   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1284944   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1284945   +   end;
MPRINT(EM_DIAGRAM):   end;
1284946   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1284947   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1284948   +   end;
MPRINT(EM_DIAGRAM):   end;
1284949   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1284950   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1284951   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1284952   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284953   +   end;
MPRINT(EM_DIAGRAM):   end;
1284954   +end;
MPRINT(EM_DIAGRAM):   end;
1284955   +
1284956   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1284957   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1284958   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1284959   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1284960   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1284961   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284962   +end;
MPRINT(EM_DIAGRAM):   end;
1284963   +else do;
MPRINT(EM_DIAGRAM):   else do;
1284964   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1284965   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1284966   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1284967   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1284968   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1284969   +   end;
MPRINT(EM_DIAGRAM):   end;
1284970   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1284971   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1284972   +   end;
MPRINT(EM_DIAGRAM):   end;
1284973   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1284974   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1284975   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1284976   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284977   +   end;
MPRINT(EM_DIAGRAM):   end;
1284978   +end;
MPRINT(EM_DIAGRAM):   end;
1284979   +
1284980   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1284981   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1284982   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1284983   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1284984   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1284985   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1284986   +end;
MPRINT(EM_DIAGRAM):   end;
1284987   +else do;
MPRINT(EM_DIAGRAM):   else do;
1284988   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1284989   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1284990   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1284991   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1284992   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1284993   +   end;
MPRINT(EM_DIAGRAM):   end;
1284994   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1284995   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1284996   +   end;
MPRINT(EM_DIAGRAM):   end;
1284997   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1284998   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1284999   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1285000   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1285001   +   end;
MPRINT(EM_DIAGRAM):   end;
1285002   +end;
MPRINT(EM_DIAGRAM):   end;
1285003   +
1285004   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1285005   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1285006   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1285007   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1285008   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1285009   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1285010   +end;
MPRINT(EM_DIAGRAM):   end;
1285011   +else do;
MPRINT(EM_DIAGRAM):   else do;
1285012   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1285013   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1285014   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1285015   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1285016   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1285017   +   end;
MPRINT(EM_DIAGRAM):   end;
1285018   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1285019   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1285020   +   end;
MPRINT(EM_DIAGRAM):   end;
1285021   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1285022   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1285023   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1285024   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1285025   +   end;
MPRINT(EM_DIAGRAM):   end;
1285026   +end;
MPRINT(EM_DIAGRAM):   end;
1285027   +
1285028   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1285029   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1285030   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1285031   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1285032   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1285033   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1285034   +end;
MPRINT(EM_DIAGRAM):   end;
1285035   +else do;
MPRINT(EM_DIAGRAM):   else do;
1285036   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1285037   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1285038   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1285039   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1285040   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1285041   +   end;
MPRINT(EM_DIAGRAM):   end;
1285042   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1285043   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1285044   +   end;
MPRINT(EM_DIAGRAM):   end;
1285045   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1285046   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1285047   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1285048   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1285049   +   end;
MPRINT(EM_DIAGRAM):   end;
1285050   +end;
MPRINT(EM_DIAGRAM):   end;
1285051   +
1285052   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1285053   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1285054   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1285055   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1285056   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1285057   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1285058   +end;
MPRINT(EM_DIAGRAM):   end;
1285059   +else do;
MPRINT(EM_DIAGRAM):   else do;
1285060   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1285061   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1285062   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1285063   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1285064   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1285065   +   end;
MPRINT(EM_DIAGRAM):   end;
1285066   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1285067   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1285068   +   end;
MPRINT(EM_DIAGRAM):   end;
1285069   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1285070   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1285071   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1285072   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1285073   +   end;
MPRINT(EM_DIAGRAM):   end;
1285074   +end;
MPRINT(EM_DIAGRAM):   end;
1285075   +
1285076   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1285077   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1285078   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1285079   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1285080   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1285081   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1285082   +end;
MPRINT(EM_DIAGRAM):   end;
1285083   +else do;
MPRINT(EM_DIAGRAM):   else do;
1285084   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1285085   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1285086   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1285087   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1285088   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1285089   +   end;
MPRINT(EM_DIAGRAM):   end;
1285090   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1285091   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1285092   +   end;
MPRINT(EM_DIAGRAM):   end;
1285093   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1285094   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1285095   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1285096   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1285097   +   end;
MPRINT(EM_DIAGRAM):   end;
1285098   +end;
MPRINT(EM_DIAGRAM):   end;
1285099   +
1285100   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1285101   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1285102   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1285103   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1285104   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1285105   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1285106   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1285107   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1285108   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1285109   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1285110   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1285111   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1285112   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1285113   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1285114   +end;
MPRINT(EM_DIAGRAM):   end;
1285115   +else do;
MPRINT(EM_DIAGRAM):   else do;
1285116   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1285117   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1285118   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1285119   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1285120   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1285121   +   end;
MPRINT(EM_DIAGRAM):   end;
1285122   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1285123   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1285124   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1285125   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1285126   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1285127   +   end;
MPRINT(EM_DIAGRAM):   end;
1285128   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1285129   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1285130   +   end;
MPRINT(EM_DIAGRAM):   end;
1285131   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1285132   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1285133   +   end;
MPRINT(EM_DIAGRAM):   end;
1285134   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1285135   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1285136   +   end;
MPRINT(EM_DIAGRAM):   end;
1285137   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1285138   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1285139   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1285140   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1285141   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1285142   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1285143   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1285144   +   end;
MPRINT(EM_DIAGRAM):   end;
1285145   +end;
MPRINT(EM_DIAGRAM):   end;
1285146   +
1285147   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1285148   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1285149   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1285150   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1285151   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1285152   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1285153   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1285154   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1285155   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1285156   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1285157   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1285158   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1285159   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1285160   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1285161   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1285162   +end;
MPRINT(EM_DIAGRAM):   end;
1285163   +else do;
MPRINT(EM_DIAGRAM):   else do;
1285164   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1285165   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1285166   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1285167   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1285168   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1285169   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1285170   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1285171   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1285172   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1285173   +         end;
MPRINT(EM_DIAGRAM):   end;
1285174   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1285175   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1285176   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1285177   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1285178   +            end;
MPRINT(EM_DIAGRAM):   end;
1285179   +         end;
MPRINT(EM_DIAGRAM):   end;
1285180   +      end;
MPRINT(EM_DIAGRAM):   end;
1285181   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1285182   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1285183   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1285184   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1285185   +         end;
MPRINT(EM_DIAGRAM):   end;
1285186   +      end;
MPRINT(EM_DIAGRAM):   end;
1285187   +   end;
MPRINT(EM_DIAGRAM):   end;
1285188   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1285189   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1285190   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1285191   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1285192   +      end;
MPRINT(EM_DIAGRAM):   end;
1285193   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1285194   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1285195   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1285196   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1285197   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1285198   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1285199   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1285200   +         end;
MPRINT(EM_DIAGRAM):   end;
1285201   +      end;
MPRINT(EM_DIAGRAM):   end;
1285202   +   end;
MPRINT(EM_DIAGRAM):   end;
1285203   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1285204   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1285205   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1285206   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1285207   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1285208   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1285209   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1285210   +   end;
MPRINT(EM_DIAGRAM):   end;
1285211   +end;
MPRINT(EM_DIAGRAM):   end;
1285212   +
1285213   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1285214   +*** Checking missing input Interval
1285215   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1285216   +
1285217   +IF NMISS(
1285218   +   AcceptedCmpTotal ,
1285219   +   Age ,
1285220   +   Frq ,
1285221   +   Income ,
1285222   +   Kidhome ,
1285223   +   Mnt ,
1285224   +   MntFishProducts ,
1285225   +   MntFruits ,
1285226   +   MntGoldProds ,
1285227   +   MntMeatProducts ,
1285228   +   MntSweetProducts ,
1285229   +   MntWines ,
1285230   +   MonthsAsCustomer ,
1285231   +   NumCatalogPurchases ,
1285232   +   NumDealsPurchases ,
1285233   +   NumDistPurchases ,
1285234   +   NumStorePurchases ,
1285235   +   NumWebPurchases ,
1285236   +   NumWebVisitsMonth ,
1285237   +   RFMstat ,
1285238   +   RMntFrq ,
1285239   +   Recency ,
1285240   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1285241   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1285242   +
1285243   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1285244   +END;
MPRINT(EM_DIAGRAM):   END;
1285245   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1285246   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1285247   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1285248   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1285249   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1285250   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1285251   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1285252   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1285253   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1285254   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1285255   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1285256   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1285257   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1285258   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1285259   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1285260   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1285261   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1285262   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1285263   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1285264   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1285265   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1285266   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1285267   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1285268   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1285269   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1285270   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1285271   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1285272   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1285273   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1285274   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1285275   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1285276   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1285277   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1285278   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1285279   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1285280   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1285281   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1285282   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1285283   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1285284   +END;
MPRINT(EM_DIAGRAM):   END;
1285285   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1285286   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1285287   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1285288   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1285289   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1285290   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1285291   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1285292   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1285293   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1285294   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1285295   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1285296   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1285297   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1285298   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1285299   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1285300   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1285301   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1285302   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1285303   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1285304   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1285305   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1285306   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1285307   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1285308   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1285309   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1285310   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1285311   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1285312   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1285313   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1285314   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1285315   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1285316   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1285317   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1285318   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1285319   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1285320   +   ELSE S_NumCatalogPurchases
1285321   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1285322   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1285323   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1285324   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1285325   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1285326   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1285327   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1285328   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1285329   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1285330   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1285331   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1285332   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1285333   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1285334   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1285335   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1285336   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1285337   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1285338   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1285339   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1285340   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1285341   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1285342   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1285343   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1285344   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1285345   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1285346   +END;
MPRINT(EM_DIAGRAM):   END;
1285347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1285348   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1285349   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1285350   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1285351   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1285352   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1285353   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1285354   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1285355   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1285356   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1285357   +   H1x1_1  =     -1.6780441789215 * S_AcceptedCmpTotal
1285358   +          +     0.45385980917029 * S_Age  +    -0.71899650455913 * S_Frq
1285359   +          +    -1.93679506571805 * S_Income  +     1.56925991391051 *
1285360   +        S_Kidhome  +    -1.47175189232318 * S_Mnt  +    -2.23220260217222 *
1285361   +        S_MntFishProducts  +    -0.27017202076253 * S_MntFruits
1285362   +          +    -0.33562096740259 * S_MntGoldProds  +     3.61472960640287 *
1285363   +        S_MntMeatProducts  +    -2.85576251647297 * S_MntSweetProducts
1285364   +          +     -4.4467685903527 * S_MntWines  +     0.38963757858628 *
1285365   +        S_MonthsAsCustomer  +     1.66666181194027 * S_NumCatalogPurchases
1285366   +          +     3.45371614080196 * S_NumDealsPurchases
1285367   +          +     0.19118374544537 * S_NumDistPurchases
1285368   +          +    -2.45138001446793 * S_NumStorePurchases
1285369   +          +    -0.11424280244155 * S_NumWebPurchases
1285370   +          +    -2.31770357716565 * S_NumWebVisitsMonth
1285371   +          +     2.81643889601936 * S_RFMstat  +    -1.04896006701534 *
1285372   +        S_RMntFrq  +     0.26870809438679 * S_Recency
1285373   +          +    -0.26422448158811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.6780441789215 * S_AcceptedCmpTotal + 0.45385980917029 * 
S_Age + -0.71899650455913 * S_Frq + -1.93679506571805 * S_Income + 1.56925991391051 * 
S_Kidhome + -1.47175189232318 * S_Mnt + -2.23220260217222 * S_MntFishProducts + 
-0.27017202076253 * S_MntFruits + -0.33562096740259 * S_MntGoldProds + 3.61472960640287 * 
S_MntMeatProducts + -2.85576251647297 * S_MntSweetProducts + -4.4467685903527 * S_MntWines + 
0.38963757858628 * S_MonthsAsCustomer + 1.66666181194027 * S_NumCatalogPurchases + 
3.45371614080196 * S_NumDealsPurchases + 0.19118374544537 * S_NumDistPurchases + 
-2.45138001446793 * S_NumStorePurchases + -0.11424280244155 * S_NumWebPurchases + 
-2.31770357716565 * S_NumWebVisitsMonth + 2.81643889601936 * S_RFMstat + -1.04896006701534 * 
S_RMntFrq + 0.26870809438679 * S_Recency + -0.26422448158811 * S_Teenhome ;
1285374   +   H1x1_2  =    -0.85648293000641 * S_AcceptedCmpTotal
1285375   +          +    -1.65647402725291 * S_Age  +     1.01151947076788 * S_Frq
1285376   +          +    -2.30217634682957 * S_Income  +     3.64198249916211 *
1285377   +        S_Kidhome  +     0.20767518788666 * S_Mnt  +     0.16841756532554 *
1285378   +        S_MntFishProducts  +      -1.068506425921 * S_MntFruits
1285379   +          +     0.58318801939162 * S_MntGoldProds  +    -2.31777049056548 *
1285380   +        S_MntMeatProducts  +     0.23759430399811 * S_MntSweetProducts
1285381   +          +      1.6840332285232 * S_MntWines  +     1.02971381781013 *
1285382   +        S_MonthsAsCustomer  +    -0.67962580165124 * S_NumCatalogPurchases
1285383   +          +    -1.28390925647659 * S_NumDealsPurchases
1285384   +          +     0.82669177239926 * S_NumDistPurchases
1285385   +          +     1.71678585204511 * S_NumStorePurchases
1285386   +          +     1.49226295608046 * S_NumWebPurchases
1285387   +          +     -4.0105103018388 * S_NumWebVisitsMonth
1285388   +          +     0.59909792991084 * S_RFMstat  +     1.07820515361554 *
1285389   +        S_RMntFrq  +     4.74241121363086 * S_Recency
1285390   +          +     3.02084642655958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.85648293000641 * S_AcceptedCmpTotal + -1.65647402725291 * 
S_Age + 1.01151947076788 * S_Frq + -2.30217634682957 * S_Income + 3.64198249916211 * S_Kidhome 
+ 0.20767518788666 * S_Mnt + 0.16841756532554 * S_MntFishProducts + -1.068506425921 * 
S_MntFruits + 0.58318801939162 * S_MntGoldProds + -2.31777049056548 * S_MntMeatProducts + 
0.23759430399811 * S_MntSweetProducts + 1.6840332285232 * S_MntWines + 1.02971381781013 * 
S_MonthsAsCustomer + -0.67962580165124 * S_NumCatalogPurchases + -1.28390925647659 * 
S_NumDealsPurchases + 0.82669177239926 * S_NumDistPurchases + 1.71678585204511 * 
S_NumStorePurchases + 1.49226295608046 * S_NumWebPurchases + -4.0105103018388 * 
S_NumWebVisitsMonth + 0.59909792991084 * S_RFMstat + 1.07820515361554 * S_RMntFrq + 
4.74241121363086 * S_Recency + 3.02084642655958 * S_Teenhome ;
1285391   +   H1x1_3  =    -2.68802949086986 * S_AcceptedCmpTotal
1285392   +          +     0.32408799976195 * S_Age  +     0.22616656573012 * S_Frq
1285393   +          +     -0.4811040196236 * S_Income  +     0.01554228937278 *
1285394   +        S_Kidhome  +    -0.00131538598753 * S_Mnt  +     1.89942488016409 *
1285395   +        S_MntFishProducts  +     0.56303548397494 * S_MntFruits
1285396   +          +    -0.15594598286956 * S_MntGoldProds  +    -7.89542322794989 *
1285397   +        S_MntMeatProducts  +    -0.27122492647076 * S_MntSweetProducts
1285398   +          +     4.85572438492582 * S_MntWines  +     0.12362243863555 *
1285399   +        S_MonthsAsCustomer  +    -1.47960473675934 * S_NumCatalogPurchases
1285400   +          +     0.22958626391725 * S_NumDealsPurchases
1285401   +          +    -0.02046515813996 * S_NumDistPurchases
1285402   +          +      0.8618502050837 * S_NumStorePurchases
1285403   +          +     1.45175370326009 * S_NumWebPurchases
1285404   +          +    -0.86122442436156 * S_NumWebVisitsMonth
1285405   +          +    -0.99643351802143 * S_RFMstat  +    -1.65762265567389 *
1285406   +        S_RMntFrq  +    -0.08202178452839 * S_Recency
1285407   +          +    -0.62066116666102 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.68802949086986 * S_AcceptedCmpTotal + 0.32408799976195 * 
S_Age + 0.22616656573012 * S_Frq + -0.4811040196236 * S_Income + 0.01554228937278 * S_Kidhome 
+ -0.00131538598753 * S_Mnt + 1.89942488016409 * S_MntFishProducts + 0.56303548397494 * 
S_MntFruits + -0.15594598286956 * S_MntGoldProds + -7.89542322794989 * S_MntMeatProducts + 
-0.27122492647076 * S_MntSweetProducts + 4.85572438492582 * S_MntWines + 0.12362243863555 * 
S_MonthsAsCustomer + -1.47960473675934 * S_NumCatalogPurchases + 0.22958626391725 * 
S_NumDealsPurchases + -0.02046515813996 * S_NumDistPurchases + 0.8618502050837 * 
S_NumStorePurchases + 1.45175370326009 * S_NumWebPurchases + -0.86122442436156 * 
S_NumWebVisitsMonth + -0.99643351802143 * S_RFMstat + -1.65762265567389 * S_RMntFrq + 
-0.08202178452839 * S_Recency + -0.62066116666102 * S_Teenhome ;
1285408   +   H1x1_4  =     0.45192233004895 * S_AcceptedCmpTotal
1285409   +          +    -0.94676544762121 * S_Age  +     0.73809341266988 * S_Frq
1285410   +          +     0.72277799278136 * S_Income  +    -0.12970804152173 *
1285411   +        S_Kidhome  +     0.01052564540044 * S_Mnt  +    -0.48321452967118 *
1285412   +        S_MntFishProducts  +    -0.41471448831942 * S_MntFruits
1285413   +          +     0.04381334765674 * S_MntGoldProds  +     0.92594151100538 *
1285414   +        S_MntMeatProducts  +     0.29845970530397 * S_MntSweetProducts
1285415   +          +    -0.71535779454556 * S_MntWines  +     0.00059837351168 *
1285416   +        S_MonthsAsCustomer  +     2.23353511013288 * S_NumCatalogPurchases
1285417   +          +     1.25310034610344 * S_NumDealsPurchases
1285418   +          +     0.92141098602176 * S_NumDistPurchases
1285419   +          +    -0.08806509391473 * S_NumStorePurchases
1285420   +          +     -1.0533787624668 * S_NumWebPurchases
1285421   +          +     3.07050739830585 * S_NumWebVisitsMonth
1285422   +          +    -0.05671059637078 * S_RFMstat  +     1.73621676609839 *
1285423   +        S_RMntFrq  +     -3.8741602707981 * S_Recency
1285424   +          +    -2.06796290973426 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.45192233004895 * S_AcceptedCmpTotal + -0.94676544762121 * 
S_Age + 0.73809341266988 * S_Frq + 0.72277799278136 * S_Income + -0.12970804152173 * S_Kidhome 
+ 0.01052564540044 * S_Mnt + -0.48321452967118 * S_MntFishProducts + -0.41471448831942 * 
S_MntFruits + 0.04381334765674 * S_MntGoldProds + 0.92594151100538 * S_MntMeatProducts + 
0.29845970530397 * S_MntSweetProducts + -0.71535779454556 * S_MntWines + 0.00059837351168 * 
S_MonthsAsCustomer + 2.23353511013288 * S_NumCatalogPurchases + 1.25310034610344 * 
S_NumDealsPurchases + 0.92141098602176 * S_NumDistPurchases + -0.08806509391473 * 
S_NumStorePurchases + -1.0533787624668 * S_NumWebPurchases + 3.07050739830585 * 
S_NumWebVisitsMonth + -0.05671059637078 * S_RFMstat + 1.73621676609839 * S_RMntFrq + 
-3.8741602707981 * S_Recency + -2.06796290973426 * S_Teenhome ;
1285425   +   H1x1_5  =    -1.36121985595495 * S_AcceptedCmpTotal
1285426   +          +     0.05422070059006 * S_Age  +     0.27495083329116 * S_Frq
1285427   +          +     -0.9677209394449 * S_Income  +    -1.13619168708067 *
1285428   +        S_Kidhome  +     0.62918569209141 * S_Mnt  +     0.37160756976122 *
1285429   +        S_MntFishProducts  +     0.88680401337821 * S_MntFruits
1285430   +          +    -0.36100921959604 * S_MntGoldProds  +    -0.35574990334834 *
1285431   +        S_MntMeatProducts  +     0.82389188555236 * S_MntSweetProducts
1285432   +          +     1.43496434553922 * S_MntWines  +    -1.46335376005851 *
1285433   +        S_MonthsAsCustomer  +    -1.84942841156411 * S_NumCatalogPurchases
1285434   +          +    -1.68259553608287 * S_NumDealsPurchases
1285435   +          +    -0.53835572290445 * S_NumDistPurchases
1285436   +          +     1.25833922835446 * S_NumStorePurchases
1285437   +          +     0.48300830623998 * S_NumWebPurchases
1285438   +          +    -2.20119275236582 * S_NumWebVisitsMonth
1285439   +          +     -0.2397284702987 * S_RFMstat  +    -0.71924218175088 *
1285440   +        S_RMntFrq  +     0.35692712879409 * S_Recency
1285441   +          +     0.77122286526706 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36121985595495 * S_AcceptedCmpTotal + 0.05422070059006 * 
S_Age + 0.27495083329116 * S_Frq + -0.9677209394449 * S_Income + -1.13619168708067 * S_Kidhome 
+ 0.62918569209141 * S_Mnt + 0.37160756976122 * S_MntFishProducts + 0.88680401337821 * 
S_MntFruits + -0.36100921959604 * S_MntGoldProds + -0.35574990334834 * S_MntMeatProducts + 
0.82389188555236 * S_MntSweetProducts + 1.43496434553922 * S_MntWines + -1.46335376005851 * 
S_MonthsAsCustomer + -1.84942841156411 * S_NumCatalogPurchases + -1.68259553608287 * 
S_NumDealsPurchases + -0.53835572290445 * S_NumDistPurchases + 1.25833922835446 * 
S_NumStorePurchases + 0.48300830623998 * S_NumWebPurchases + -2.20119275236582 * 
S_NumWebVisitsMonth + -0.2397284702987 * S_RFMstat + -0.71924218175088 * S_RMntFrq + 
0.35692712879409 * S_Recency + 0.77122286526706 * S_Teenhome ;
1285442   +   H1x1_1  = H1x1_1  +     0.07301304241545 * AcceptedCmp10
1285443   +          +    -1.95730125129608 * AcceptedCmp20  +    -1.38342161079442 *
1285444   +        AcceptedCmp30  +    -1.49080889719345 * AcceptedCmp40
1285445   +          +    -1.07381857035964 * AcceptedCmp50  +    -1.39161532835475 *
1285446   +        Complain0  +    -0.48833832833721 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.07301304241545 * AcceptedCmp10 + -1.95730125129608 * 
AcceptedCmp20 + -1.38342161079442 * AcceptedCmp30 + -1.49080889719345 * AcceptedCmp40 + 
-1.07381857035964 * AcceptedCmp50 + -1.39161532835475 * Complain0 + -0.48833832833721 * 
HigherEducationBinary0 ;
1285447   +   H1x1_2  = H1x1_2  +     0.38934062747222 * AcceptedCmp10
1285448   +          +    -0.32259780417284 * AcceptedCmp20  +     0.51602852076334 *
1285449   +        AcceptedCmp30  +    -0.70838948180655 * AcceptedCmp40
1285450   +          +     1.29066052659113 * AcceptedCmp50  +      0.1004848714971 *
1285451   +        Complain0  +    -0.73386392383925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.38934062747222 * AcceptedCmp10 + -0.32259780417284 * 
AcceptedCmp20 + 0.51602852076334 * AcceptedCmp30 + -0.70838948180655 * AcceptedCmp40 + 
1.29066052659113 * AcceptedCmp50 + 0.1004848714971 * Complain0 + -0.73386392383925 * 
HigherEducationBinary0 ;
1285452   +   H1x1_3  = H1x1_3  +     0.34219997086576 * AcceptedCmp10
1285453   +          +    -0.12311182470953 * AcceptedCmp20  +     -2.0600710888874 *
1285454   +        AcceptedCmp30  +      -1.904294485826 * AcceptedCmp40
1285455   +          +     3.36424449872952 * AcceptedCmp50  +    -0.25078238709812 *
1285456   +        Complain0  +    -0.08077684854733 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.34219997086576 * AcceptedCmp10 + -0.12311182470953 * 
AcceptedCmp20 + -2.0600710888874 * AcceptedCmp30 + -1.904294485826 * AcceptedCmp40 + 
3.36424449872952 * AcceptedCmp50 + -0.25078238709812 * Complain0 + -0.08077684854733 * 
HigherEducationBinary0 ;
1285457   +   H1x1_4  = H1x1_4  +    -1.12501407155309 * AcceptedCmp10
1285458   +          +    -1.58866249671355 * AcceptedCmp20  +    -1.72881548820716 *
1285459   +        AcceptedCmp30  +      -2.214698125839 * AcceptedCmp40
1285460   +          +    -0.62635613939269 * AcceptedCmp50  +      0.0150779868394 *
1285461   +        Complain0  +     1.03338023365724 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12501407155309 * AcceptedCmp10 + -1.58866249671355 
* AcceptedCmp20 + -1.72881548820716 * AcceptedCmp30 + -2.214698125839 * AcceptedCmp40 + 
-0.62635613939269 * AcceptedCmp50 + 0.0150779868394 * Complain0 + 1.03338023365724 * 
HigherEducationBinary0 ;
1285462   +   H1x1_5  = H1x1_5  +    -0.26508589111781 * AcceptedCmp10
1285463   +          +    -0.40912292690255 * AcceptedCmp20  +     0.75389762391096 *
1285464   +        AcceptedCmp30  +     0.41336953757691 * AcceptedCmp40
1285465   +          +     0.15346623431804 * AcceptedCmp50  +    -0.57037201584293 *
1285466   +        Complain0  +     0.77009921064044 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.26508589111781 * AcceptedCmp10 + -0.40912292690255 
* AcceptedCmp20 + 0.75389762391096 * AcceptedCmp30 + 0.41336953757691 * AcceptedCmp40 + 
0.15346623431804 * AcceptedCmp50 + -0.57037201584293 * Complain0 + 0.77009921064044 * 
HigherEducationBinary0 ;
1285467   +   H1x1_1  = H1x1_1  +      1.0009305049246 * Education2n_Cycle
1285468   +          +     -0.4613305087931 * EducationBasic  +      0.3758596828746 *
1285469   +        EducationGraduation  +     1.25189584055994 * EducationMaster
1285470   +          +     0.26230568150721 * Marital_StatusDivorced
1285471   +          +     0.27563523967756 * Marital_StatusMarried
1285472   +          +     0.54464481618478 * Marital_StatusSingle
1285473   +          +    -0.59728882722473 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.0009305049246 * Education2n_Cycle + -0.4613305087931 
* EducationBasic + 0.3758596828746 * EducationGraduation + 1.25189584055994 * EducationMaster 
+ 0.26230568150721 * Marital_StatusDivorced + 0.27563523967756 * Marital_StatusMarried + 
0.54464481618478 * Marital_StatusSingle + -0.59728882722473 * Marital_StatusTogether ;
1285474   +   H1x1_2  = H1x1_2  +    -0.67268966683928 * Education2n_Cycle
1285475   +          +     1.13837889947773 * EducationBasic  +     1.04211010190617 *
1285476   +        EducationGraduation  +     0.29772013614284 * EducationMaster
1285477   +          +    -0.06750661313108 * Marital_StatusDivorced
1285478   +          +     1.48628445854207 * Marital_StatusMarried
1285479   +          +    -0.52197797291165 * Marital_StatusSingle
1285480   +          +     0.26825188905773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67268966683928 * Education2n_Cycle + 
1.13837889947773 * EducationBasic + 1.04211010190617 * EducationGraduation + 0.29772013614284 
* EducationMaster + -0.06750661313108 * Marital_StatusDivorced + 1.48628445854207 * 
Marital_StatusMarried + -0.52197797291165 * Marital_StatusSingle + 0.26825188905773 * 
Marital_StatusTogether ;
1285481   +   H1x1_3  = H1x1_3  +     0.15872794306716 * Education2n_Cycle
1285482   +          +     -0.2621450786439 * EducationBasic  +      -0.141563901063 *
1285483   +        EducationGraduation  +     0.45665087056809 * EducationMaster
1285484   +          +     0.03219453957597 * Marital_StatusDivorced
1285485   +          +    -0.73835008216677 * Marital_StatusMarried
1285486   +          +     0.11212575818086 * Marital_StatusSingle
1285487   +          +    -0.43478073380625 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.15872794306716 * Education2n_Cycle + 
-0.2621450786439 * EducationBasic + -0.141563901063 * EducationGraduation + 0.45665087056809 * 
EducationMaster + 0.03219453957597 * Marital_StatusDivorced + -0.73835008216677 * 
Marital_StatusMarried + 0.11212575818086 * Marital_StatusSingle + -0.43478073380625 * 
Marital_StatusTogether ;
1285488   +   H1x1_4  = H1x1_4  +    -0.76014837933596 * Education2n_Cycle
1285489   +          +     0.81014096036717 * EducationBasic  +     0.41200440507889 *
1285490   +        EducationGraduation  +    -1.00228990059701 * EducationMaster
1285491   +          +    -0.95055539413405 * Marital_StatusDivorced
1285492   +          +    -1.65922419336067 * Marital_StatusMarried
1285493   +          +     0.78727538125107 * Marital_StatusSingle
1285494   +          +    -2.04820355088009 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.76014837933596 * Education2n_Cycle + 
0.81014096036717 * EducationBasic + 0.41200440507889 * EducationGraduation + -1.00228990059701 
* EducationMaster + -0.95055539413405 * Marital_StatusDivorced + -1.65922419336067 * 
Marital_StatusMarried + 0.78727538125107 * Marital_StatusSingle + -2.04820355088009 * 
Marital_StatusTogether ;
1285495   +   H1x1_5  = H1x1_5  +    -0.28767104655135 * Education2n_Cycle
1285496   +          +     0.23294407135706 * EducationBasic  +    -1.19680108607997 *
1285497   +        EducationGraduation  +     0.46710355433642 * EducationMaster
1285498   +          +     -4.1747415035634 * Marital_StatusDivorced
1285499   +          +     3.61194282451968 * Marital_StatusMarried
1285500   +          +     -3.2800495365546 * Marital_StatusSingle
1285501   +          +     4.03496183640024 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.28767104655135 * Education2n_Cycle + 
0.23294407135706 * EducationBasic + -1.19680108607997 * EducationGraduation + 0.46710355433642 
* EducationMaster + -4.1747415035634 * Marital_StatusDivorced + 3.61194282451968 * 
Marital_StatusMarried + -3.2800495365546 * Marital_StatusSingle + 4.03496183640024 * 
Marital_StatusTogether ;
1285502   +   H1x1_1  =    -2.93438581065873 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.93438581065873 + H1x1_1 ;
1285503   +   H1x1_2  =     0.62443347607569 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.62443347607569 + H1x1_2 ;
1285504   +   H1x1_3  =    -1.18755793198513 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.18755793198513 + H1x1_3 ;
1285505   +   H1x1_4  =    -3.21278432238831 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.21278432238831 + H1x1_4 ;
1285506   +   H1x1_5  =    -1.81875492018044 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.81875492018044 + H1x1_5 ;
1285507   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1285508   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1285509   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
1285510   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
1285511   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
1285512   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
1285513   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
1285514   +END;
MPRINT(EM_DIAGRAM):   END;
1285515   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1285516   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1285517   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1285518   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1285519   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1285520   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1285521   +END;
MPRINT(EM_DIAGRAM):   END;
1285522   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1285523   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1285524   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1285525   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1285526   +   H1x2_1  =    -0.54874145972704 * S_AcceptedCmpTotal
1285527   +          +    -1.96729802286214 * S_Age  +     0.48476252791598 * S_Frq
1285528   +          +    -0.22341551246937 * S_Income  +      0.5578096957255 *
1285529   +        S_Kidhome  +     0.02626802496223 * S_Mnt  +     0.45412544568839 *
1285530   +        S_MntFishProducts  +     1.01144979259918 * S_MntFruits
1285531   +          +     0.10684155186482 * S_MntGoldProds  +    -0.28941930881694 *
1285532   +        S_MntMeatProducts  +    -1.28044699620063 * S_MntSweetProducts
1285533   +          +     0.01381215802108 * S_MntWines  +    -0.10048261914477 *
1285534   +        S_MonthsAsCustomer  +     2.77259931235269 * S_NumCatalogPurchases
1285535   +          +     1.29727972396867 * S_NumDealsPurchases
1285536   +          +     -0.4796144286007 * S_NumDistPurchases
1285537   +          +     0.88365985808591 * S_NumStorePurchases
1285538   +          +     0.68522096892804 * S_NumWebPurchases
1285539   +          +     0.54931043107798 * S_NumWebVisitsMonth
1285540   +          +     0.54113568533807 * S_RFMstat  +    -1.25421061779043 *
1285541   +        S_RMntFrq  +     2.35704770144328 * S_Recency
1285542   +          +     0.71039073076168 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.54874145972704 * S_AcceptedCmpTotal + -1.96729802286214 * 
S_Age + 0.48476252791598 * S_Frq + -0.22341551246937 * S_Income + 0.5578096957255 * S_Kidhome 
+ 0.02626802496223 * S_Mnt + 0.45412544568839 * S_MntFishProducts + 1.01144979259918 * 
S_MntFruits + 0.10684155186482 * S_MntGoldProds + -0.28941930881694 * S_MntMeatProducts + 
-1.28044699620063 * S_MntSweetProducts + 0.01381215802108 * S_MntWines + -0.10048261914477 * 
S_MonthsAsCustomer + 2.77259931235269 * S_NumCatalogPurchases + 1.29727972396867 * 
S_NumDealsPurchases + -0.4796144286007 * S_NumDistPurchases + 0.88365985808591 * 
S_NumStorePurchases + 0.68522096892804 * S_NumWebPurchases + 0.54931043107798 * 
S_NumWebVisitsMonth + 0.54113568533807 * S_RFMstat + -1.25421061779043 * S_RMntFrq + 
2.35704770144328 * S_Recency + 0.71039073076168 * S_Teenhome ;
1285543   +   H1x2_2  =    -0.87761654715429 * S_AcceptedCmpTotal
1285544   +          +     0.35157201280883 * S_Age  +    -0.52499399345006 * S_Frq
1285545   +          +    -0.18535763866989 * S_Income  +    -2.37902660986953 *
1285546   +        S_Kidhome  +     0.91895423997679 * S_Mnt  +     0.25609945459048 *
1285547   +        S_MntFishProducts  +    -0.81235755934506 * S_MntFruits
1285548   +          +     0.52120923975997 * S_MntGoldProds  +    -0.44372337811583 *
1285549   +        S_MntMeatProducts  +     0.44948834045992 * S_MntSweetProducts
1285550   +          +     -1.0932771504262 * S_MntWines  +     0.50602262267579 *
1285551   +        S_MonthsAsCustomer  +     1.56553203254999 * S_NumCatalogPurchases
1285552   +          +     0.26997834581422 * S_NumDealsPurchases
1285553   +          +      1.4974894627406 * S_NumDistPurchases
1285554   +          +     0.20577850505638 * S_NumStorePurchases
1285555   +          +     0.67578530037026 * S_NumWebPurchases
1285556   +          +     1.48893165613941 * S_NumWebVisitsMonth
1285557   +          +     0.13287732996796 * S_RFMstat  +     0.56918286957798 *
1285558   +        S_RMntFrq  +    -1.40718347701522 * S_Recency
1285559   +          +    -1.45355422903931 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.87761654715429 * S_AcceptedCmpTotal + 0.35157201280883 * 
S_Age + -0.52499399345006 * S_Frq + -0.18535763866989 * S_Income + -2.37902660986953 * 
S_Kidhome + 0.91895423997679 * S_Mnt + 0.25609945459048 * S_MntFishProducts + 
-0.81235755934506 * S_MntFruits + 0.52120923975997 * S_MntGoldProds + -0.44372337811583 * 
S_MntMeatProducts + 0.44948834045992 * S_MntSweetProducts + -1.0932771504262 * S_MntWines + 
0.50602262267579 * S_MonthsAsCustomer + 1.56553203254999 * S_NumCatalogPurchases + 
0.26997834581422 * S_NumDealsPurchases + 1.4974894627406 * S_NumDistPurchases + 
0.20577850505638 * S_NumStorePurchases + 0.67578530037026 * S_NumWebPurchases + 
1.48893165613941 * S_NumWebVisitsMonth + 0.13287732996796 * S_RFMstat + 0.56918286957798 * 
S_RMntFrq + -1.40718347701522 * S_Recency + -1.45355422903931 * S_Teenhome ;
1285560   +   H1x2_3  =    -0.04229252175967 * S_AcceptedCmpTotal
1285561   +          +    -0.15725101559927 * S_Age  +      2.0258984610186 * S_Frq
1285562   +          +     0.68410444381038 * S_Income  +     0.69019962444573 *
1285563   +        S_Kidhome  +    -0.34233922017925 * S_Mnt  +     1.55352897772997 *
1285564   +        S_MntFishProducts  +    -0.76176236164027 * S_MntFruits
1285565   +          +    -1.16754517357962 * S_MntGoldProds  +     1.24350326644835 *
1285566   +        S_MntMeatProducts  +    -0.81282451423383 * S_MntSweetProducts
1285567   +          +      0.7172672745995 * S_MntWines  +     1.13255065624057 *
1285568   +        S_MonthsAsCustomer  +    -0.07781573365472 * S_NumCatalogPurchases
1285569   +          +    -0.75474919633886 * S_NumDealsPurchases
1285570   +          +     2.21872386475638 * S_NumDistPurchases
1285571   +          +    -0.36191460108989 * S_NumStorePurchases
1285572   +          +     0.03160010932412 * S_NumWebPurchases
1285573   +          +     0.00984650739909 * S_NumWebVisitsMonth
1285574   +          +     0.89037882953417 * S_RFMstat  +    -1.05136047825247 *
1285575   +        S_RMntFrq  +     0.97890474913417 * S_Recency
1285576   +          +     1.27657797009328 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.04229252175967 * S_AcceptedCmpTotal + -0.15725101559927 * 
S_Age + 2.0258984610186 * S_Frq + 0.68410444381038 * S_Income + 0.69019962444573 * S_Kidhome + 
-0.34233922017925 * S_Mnt + 1.55352897772997 * S_MntFishProducts + -0.76176236164027 * 
S_MntFruits + -1.16754517357962 * S_MntGoldProds + 1.24350326644835 * S_MntMeatProducts + 
-0.81282451423383 * S_MntSweetProducts + 0.7172672745995 * S_MntWines + 1.13255065624057 * 
S_MonthsAsCustomer + -0.07781573365472 * S_NumCatalogPurchases + -0.75474919633886 * 
S_NumDealsPurchases + 2.21872386475638 * S_NumDistPurchases + -0.36191460108989 * 
S_NumStorePurchases + 0.03160010932412 * S_NumWebPurchases + 0.00984650739909 * 
S_NumWebVisitsMonth + 0.89037882953417 * S_RFMstat + -1.05136047825247 * S_RMntFrq + 
0.97890474913417 * S_Recency + 1.27657797009328 * S_Teenhome ;
1285577   +   H1x2_4  =    -1.09473986244398 * S_AcceptedCmpTotal
1285578   +          +     0.02292759635423 * S_Age  +     -1.7109267909752 * S_Frq
1285579   +          +    -1.43383040360225 * S_Income  +    -1.57934610129188 *
1285580   +        S_Kidhome  +      0.1051214240099 * S_Mnt  +     0.97936539268931 *
1285581   +        S_MntFishProducts  +    -0.59583313648658 * S_MntFruits
1285582   +          +     1.51886505753921 * S_MntGoldProds  +    -0.32475169924002 *
1285583   +        S_MntMeatProducts  +     2.41110603237098 * S_MntSweetProducts
1285584   +          +    -0.31356867592074 * S_MntWines  +    -0.46746195334785 *
1285585   +        S_MonthsAsCustomer  +      1.2175994058873 * S_NumCatalogPurchases
1285586   +          +    -1.12057357865269 * S_NumDealsPurchases
1285587   +          +    -0.70841760614521 * S_NumDistPurchases
1285588   +          +    -1.39174816270404 * S_NumStorePurchases
1285589   +          +    -1.62343249380806 * S_NumWebPurchases
1285590   +          +    -0.73097954508465 * S_NumWebVisitsMonth
1285591   +          +    -3.00146168388145 * S_RFMstat  +     0.52793752800199 *
1285592   +        S_RMntFrq  +    -1.13585643618227 * S_Recency
1285593   +          +    -0.84809590269062 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.09473986244398 * S_AcceptedCmpTotal + 0.02292759635423 * 
S_Age + -1.7109267909752 * S_Frq + -1.43383040360225 * S_Income + -1.57934610129188 * 
S_Kidhome + 0.1051214240099 * S_Mnt + 0.97936539268931 * S_MntFishProducts + -0.59583313648658 
* S_MntFruits + 1.51886505753921 * S_MntGoldProds + -0.32475169924002 * S_MntMeatProducts + 
2.41110603237098 * S_MntSweetProducts + -0.31356867592074 * S_MntWines + -0.46746195334785 * 
S_MonthsAsCustomer + 1.2175994058873 * S_NumCatalogPurchases + -1.12057357865269 * 
S_NumDealsPurchases + -0.70841760614521 * S_NumDistPurchases + -1.39174816270404 * 
S_NumStorePurchases + -1.62343249380806 * S_NumWebPurchases + -0.73097954508465 * 
S_NumWebVisitsMonth + -3.00146168388145 * S_RFMstat + 0.52793752800199 * S_RMntFrq + 
-1.13585643618227 * S_Recency + -0.84809590269062 * S_Teenhome ;
1285594   +   H1x2_5  =    -0.76941479017685 * S_AcceptedCmpTotal
1285595   +          +    -0.80197055800099 * S_Age  +    -0.33523741625948 * S_Frq
1285596   +          +     0.67386262421365 * S_Income  +     1.52003240833706 *
1285597   +        S_Kidhome  +     0.14459028288037 * S_Mnt  +     0.39874528164598 *
1285598   +        S_MntFishProducts  +    -1.59397070226712 * S_MntFruits
1285599   +          +     0.78518859165099 * S_MntGoldProds  +     0.48003679676647 *
1285600   +        S_MntMeatProducts  +    -0.17657709565986 * S_MntSweetProducts
1285601   +          +    -0.79155200251992 * S_MntWines  +     0.27335896970236 *
1285602   +        S_MonthsAsCustomer  +     1.70502645622852 * S_NumCatalogPurchases
1285603   +          +     0.66880481485557 * S_NumDealsPurchases
1285604   +          +     0.69540174544859 * S_NumDistPurchases
1285605   +          +     1.68246546921736 * S_NumStorePurchases
1285606   +          +     1.85958176898295 * S_NumWebPurchases
1285607   +          +    -0.23815810306565 * S_NumWebVisitsMonth
1285608   +          +    -1.93291997626659 * S_RFMstat  +     0.44532152898673 *
1285609   +        S_RMntFrq  +    -2.12360922264332 * S_Recency
1285610   +          +     0.99915338747458 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.76941479017685 * S_AcceptedCmpTotal + -0.80197055800099 * 
S_Age + -0.33523741625948 * S_Frq + 0.67386262421365 * S_Income + 1.52003240833706 * S_Kidhome 
+ 0.14459028288037 * S_Mnt + 0.39874528164598 * S_MntFishProducts + -1.59397070226712 * 
S_MntFruits + 0.78518859165099 * S_MntGoldProds + 0.48003679676647 * S_MntMeatProducts + 
-0.17657709565986 * S_MntSweetProducts + -0.79155200251992 * S_MntWines + 0.27335896970236 * 
S_MonthsAsCustomer + 1.70502645622852 * S_NumCatalogPurchases + 0.66880481485557 * 
S_NumDealsPurchases + 0.69540174544859 * S_NumDistPurchases + 1.68246546921736 * 
S_NumStorePurchases + 1.85958176898295 * S_NumWebPurchases + -0.23815810306565 * 
S_NumWebVisitsMonth + -1.93291997626659 * S_RFMstat + 0.44532152898673 * S_RMntFrq + 
-2.12360922264332 * S_Recency + 0.99915338747458 * S_Teenhome ;
1285611   +   H1x2_1  = H1x2_1  +    -0.34162163066653 * AcceptedCmp10
1285612   +          +    -1.63962075993761 * AcceptedCmp20  +    -0.15621537766672 *
1285613   +        AcceptedCmp30  +      -0.732967936338 * AcceptedCmp40
1285614   +          +    -0.89574320220152 * AcceptedCmp50  +    -1.65404732277767 *
1285615   +        Complain0  +     0.39810242344925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.34162163066653 * AcceptedCmp10 + -1.63962075993761 
* AcceptedCmp20 + -0.15621537766672 * AcceptedCmp30 + -0.732967936338 * AcceptedCmp40 + 
-0.89574320220152 * AcceptedCmp50 + -1.65404732277767 * Complain0 + 0.39810242344925 * 
HigherEducationBinary0 ;
1285616   +   H1x2_2  = H1x2_2  +     1.20749893379181 * AcceptedCmp10
1285617   +          +     0.74035850461127 * AcceptedCmp20  +    -0.57598323268755 *
1285618   +        AcceptedCmp30  +      0.2507562576407 * AcceptedCmp40
1285619   +          +    -1.65954337863227 * AcceptedCmp50  +    -0.36715622527216 *
1285620   +        Complain0  +    -0.80760857638242 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.20749893379181 * AcceptedCmp10 + 0.74035850461127 * 
AcceptedCmp20 + -0.57598323268755 * AcceptedCmp30 + 0.2507562576407 * AcceptedCmp40 + 
-1.65954337863227 * AcceptedCmp50 + -0.36715622527216 * Complain0 + -0.80760857638242 * 
HigherEducationBinary0 ;
1285621   +   H1x2_3  = H1x2_3  +      0.1125551214626 * AcceptedCmp10
1285622   +          +      0.9256532360503 * AcceptedCmp20  +    -0.66171851987996 *
1285623   +        AcceptedCmp30  +     1.38941609616943 * AcceptedCmp40
1285624   +          +    -0.12600029950267 * AcceptedCmp50  +     1.77872255302987 *
1285625   +        Complain0  +     0.92261637863861 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.1125551214626 * AcceptedCmp10 + 0.9256532360503 * 
AcceptedCmp20 + -0.66171851987996 * AcceptedCmp30 + 1.38941609616943 * AcceptedCmp40 + 
-0.12600029950267 * AcceptedCmp50 + 1.77872255302987 * Complain0 + 0.92261637863861 * 
HigherEducationBinary0 ;
1285626   +   H1x2_4  = H1x2_4  +     1.15541901435911 * AcceptedCmp10
1285627   +          +     0.29649422640031 * AcceptedCmp20  +     0.39809722545141 *
1285628   +        AcceptedCmp30  +    -0.33350815656019 * AcceptedCmp40
1285629   +          +    -0.67932033799188 * AcceptedCmp50  +     0.37378775543802 *
1285630   +        Complain0  +    -0.42273281355142 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 1.15541901435911 * AcceptedCmp10 + 0.29649422640031 * 
AcceptedCmp20 + 0.39809722545141 * AcceptedCmp30 + -0.33350815656019 * AcceptedCmp40 + 
-0.67932033799188 * AcceptedCmp50 + 0.37378775543802 * Complain0 + -0.42273281355142 * 
HigherEducationBinary0 ;
1285631   +   H1x2_5  = H1x2_5  +     0.42070748083274 * AcceptedCmp10
1285632   +          +     0.35338291913326 * AcceptedCmp20  +    -0.47257467834599 *
1285633   +        AcceptedCmp30  +     1.53611423156071 * AcceptedCmp40
1285634   +          +    -1.33360798584085 * AcceptedCmp50  +    -1.44352278404761 *
1285635   +        Complain0  +    -0.33674466205114 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.42070748083274 * AcceptedCmp10 + 0.35338291913326 * 
AcceptedCmp20 + -0.47257467834599 * AcceptedCmp30 + 1.53611423156071 * AcceptedCmp40 + 
-1.33360798584085 * AcceptedCmp50 + -1.44352278404761 * Complain0 + -0.33674466205114 * 
HigherEducationBinary0 ;
1285636   +   H1x2_1  = H1x2_1  +     0.60843711339598 * Education2n_Cycle
1285637   +          +     -0.2612316425128 * EducationBasic  +     0.53215140077355 *
1285638   +        EducationGraduation  +     0.32623787352656 * EducationMaster
1285639   +          +      0.2766977476799 * Marital_StatusDivorced
1285640   +          +     0.99585126449473 * Marital_StatusMarried
1285641   +          +    -0.71244490682808 * Marital_StatusSingle
1285642   +          +     0.05234471555621 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 0.60843711339598 * Education2n_Cycle + 
-0.2612316425128 * EducationBasic + 0.53215140077355 * EducationGraduation + 0.32623787352656 
* EducationMaster + 0.2766977476799 * Marital_StatusDivorced + 0.99585126449473 * 
Marital_StatusMarried + -0.71244490682808 * Marital_StatusSingle + 0.05234471555621 * 
Marital_StatusTogether ;
1285643   +   H1x2_2  = H1x2_2  +    -1.37916273373311 * Education2n_Cycle
1285644   +          +     0.16982792088728 * EducationBasic  +     0.00814910507718 *
1285645   +        EducationGraduation  +     0.47239961039918 * EducationMaster
1285646   +          +     0.04724779113048 * Marital_StatusDivorced
1285647   +          +    -0.80186231440666 * Marital_StatusMarried
1285648   +          +    -0.02226793584171 * Marital_StatusSingle
1285649   +          +     1.15827064756189 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -1.37916273373311 * Education2n_Cycle + 
0.16982792088728 * EducationBasic + 0.00814910507718 * EducationGraduation + 0.47239961039918 
* EducationMaster + 0.04724779113048 * Marital_StatusDivorced + -0.80186231440666 * 
Marital_StatusMarried + -0.02226793584171 * Marital_StatusSingle + 1.15827064756189 * 
Marital_StatusTogether ;
1285650   +   H1x2_3  = H1x2_3  +    -0.24428291102209 * Education2n_Cycle
1285651   +          +    -0.11697967041189 * EducationBasic  +    -1.11774839931933 *
1285652   +        EducationGraduation  +     0.41284540548646 * EducationMaster
1285653   +          +     0.28206835683721 * Marital_StatusDivorced
1285654   +          +     0.46500886756532 * Marital_StatusMarried
1285655   +          +     0.35327545255503 * Marital_StatusSingle
1285656   +          +     0.58394650567036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.24428291102209 * Education2n_Cycle + 
-0.11697967041189 * EducationBasic + -1.11774839931933 * EducationGraduation + 
0.41284540548646 * EducationMaster + 0.28206835683721 * Marital_StatusDivorced + 
0.46500886756532 * Marital_StatusMarried + 0.35327545255503 * Marital_StatusSingle + 
0.58394650567036 * Marital_StatusTogether ;
1285657   +   H1x2_4  = H1x2_4  +    -0.41547462236128 * Education2n_Cycle
1285658   +          +     1.13629818238321 * EducationBasic  +     0.25034344652006 *
1285659   +        EducationGraduation  +    -0.29812527209479 * EducationMaster
1285660   +          +     1.22291788006392 * Marital_StatusDivorced
1285661   +          +    -2.27040720272432 * Marital_StatusMarried
1285662   +          +     1.13606780043773 * Marital_StatusSingle
1285663   +          +    -1.07606142589696 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.41547462236128 * Education2n_Cycle + 
1.13629818238321 * EducationBasic + 0.25034344652006 * EducationGraduation + -0.29812527209479 
* EducationMaster + 1.22291788006392 * Marital_StatusDivorced + -2.27040720272432 * 
Marital_StatusMarried + 1.13606780043773 * Marital_StatusSingle + -1.07606142589696 * 
Marital_StatusTogether ;
1285664   +   H1x2_5  = H1x2_5  +     1.12913918872999 * Education2n_Cycle
1285665   +          +     1.23833680718071 * EducationBasic  +     1.02294394812757 *
1285666   +        EducationGraduation  +      0.4909097120378 * EducationMaster
1285667   +          +     -0.3999800759199 * Marital_StatusDivorced
1285668   +          +    -0.40978271635345 * Marital_StatusMarried
1285669   +          +    -0.55524279444227 * Marital_StatusSingle
1285670   +          +    -0.84395633194091 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.12913918872999 * Education2n_Cycle + 
1.23833680718071 * EducationBasic + 1.02294394812757 * EducationGraduation + 0.4909097120378 * 
EducationMaster + -0.3999800759199 * Marital_StatusDivorced + -0.40978271635345 * 
Marital_StatusMarried + -0.55524279444227 * Marital_StatusSingle + -0.84395633194091 * 
Marital_StatusTogether ;
1285671   +   H1x2_1  =    -0.65400470626386 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.65400470626386 + H1x2_1 ;
1285672   +   H1x2_2  =    -0.07530883721979 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07530883721979 + H1x2_2 ;
1285673   +   H1x2_3  =      -0.290996947172 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.290996947172 + H1x2_3 ;
1285674   +   H1x2_4  =    -0.89461283774487 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.89461283774487 + H1x2_4 ;
1285675   +   H1x2_5  =    -0.37171981998051 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.37171981998051 + H1x2_5 ;
1285676   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1285677   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1285678   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
1285679   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
1285680   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
1285681   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
1285682   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
1285683   +END;
MPRINT(EM_DIAGRAM):   END;
1285684   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1285685   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1285686   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1285687   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1285688   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1285689   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1285690   +END;
MPRINT(EM_DIAGRAM):   END;
1285691   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1285692   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
1285693   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1285694   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1285695   +   H1x3_1  =     0.02034446400728 * S_AcceptedCmpTotal
1285696   +          +    -0.93561297099295 * S_Age  +     0.49066734733476 * S_Frq
1285697   +          +    -1.34856771280634 * S_Income  +     1.35662384709137 *
1285698   +        S_Kidhome  +    -0.02206222240953 * S_Mnt  +     0.42162640035912 *
1285699   +        S_MntFishProducts  +      1.4724867503467 * S_MntFruits
1285700   +          +    -0.51460401528507 * S_MntGoldProds  +       0.958125893994 *
1285701   +        S_MntMeatProducts  +     0.57113865733502 * S_MntSweetProducts
1285702   +          +    -1.00744287646761 * S_MntWines  +     0.17043433169038 *
1285703   +        S_MonthsAsCustomer  +     1.69277828985001 * S_NumCatalogPurchases
1285704   +          +     0.15783958682465 * S_NumDealsPurchases
1285705   +          +     1.52124708558457 * S_NumDistPurchases
1285706   +          +     -1.3804418313581 * S_NumStorePurchases
1285707   +          +    -1.29570111649272 * S_NumWebPurchases
1285708   +          +    -0.64280706056547 * S_NumWebVisitsMonth
1285709   +          +    -1.20774016698707 * S_RFMstat  +    -0.44623204790714 *
1285710   +        S_RMntFrq  +    -0.06726660535826 * S_Recency
1285711   +          +    -0.73266660753354 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.02034446400728 * S_AcceptedCmpTotal + -0.93561297099295 * 
S_Age + 0.49066734733476 * S_Frq + -1.34856771280634 * S_Income + 1.35662384709137 * S_Kidhome 
+ -0.02206222240953 * S_Mnt + 0.42162640035912 * S_MntFishProducts + 1.4724867503467 * 
S_MntFruits + -0.51460401528507 * S_MntGoldProds + 0.958125893994 * S_MntMeatProducts + 
0.57113865733502 * S_MntSweetProducts + -1.00744287646761 * S_MntWines + 0.17043433169038 * 
S_MonthsAsCustomer + 1.69277828985001 * S_NumCatalogPurchases + 0.15783958682465 * 
S_NumDealsPurchases + 1.52124708558457 * S_NumDistPurchases + -1.3804418313581 * 
S_NumStorePurchases + -1.29570111649272 * S_NumWebPurchases + -0.64280706056547 * 
S_NumWebVisitsMonth + -1.20774016698707 * S_RFMstat + -0.44623204790714 * S_RMntFrq + 
-0.06726660535826 * S_Recency + -0.73266660753354 * S_Teenhome ;
1285712   +   H1x3_2  =     0.05576327437156 * S_AcceptedCmpTotal
1285713   +          +    -0.09670418926268 * S_Age  +     0.70499031549942 * S_Frq
1285714   +          +     0.26184897891893 * S_Income  +    -1.14390972062773 *
1285715   +        S_Kidhome  +     -0.0692794596346 * S_Mnt  +     0.38520399298269 *
1285716   +        S_MntFishProducts  +     0.23416686193508 * S_MntFruits
1285717   +          +     0.54961704765881 * S_MntGoldProds  +     1.00350256670809 *
1285718   +        S_MntMeatProducts  +    -0.03432942277526 * S_MntSweetProducts
1285719   +          +    -0.79877133727616 * S_MntWines  +    -2.29194848128805 *
1285720   +        S_MonthsAsCustomer  +    -0.38950356087292 * S_NumCatalogPurchases
1285721   +          +     0.12337111358286 * S_NumDealsPurchases
1285722   +          +     -2.3848926094027 * S_NumDistPurchases
1285723   +          +    -1.20666646996433 * S_NumStorePurchases
1285724   +          +     0.89549302881365 * S_NumWebPurchases
1285725   +          +     0.95359042569947 * S_NumWebVisitsMonth
1285726   +          +    -0.41458051201542 * S_RFMstat  +    -2.05830783255089 *
1285727   +        S_RMntFrq  +     0.17682790616815 * S_Recency
1285728   +          +     0.20329199183726 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.05576327437156 * S_AcceptedCmpTotal + -0.09670418926268 * 
S_Age + 0.70499031549942 * S_Frq + 0.26184897891893 * S_Income + -1.14390972062773 * S_Kidhome 
+ -0.0692794596346 * S_Mnt + 0.38520399298269 * S_MntFishProducts + 0.23416686193508 * 
S_MntFruits + 0.54961704765881 * S_MntGoldProds + 1.00350256670809 * S_MntMeatProducts + 
-0.03432942277526 * S_MntSweetProducts + -0.79877133727616 * S_MntWines + -2.29194848128805 * 
S_MonthsAsCustomer + -0.38950356087292 * S_NumCatalogPurchases + 0.12337111358286 * 
S_NumDealsPurchases + -2.3848926094027 * S_NumDistPurchases + -1.20666646996433 * 
S_NumStorePurchases + 0.89549302881365 * S_NumWebPurchases + 0.95359042569947 * 
S_NumWebVisitsMonth + -0.41458051201542 * S_RFMstat + -2.05830783255089 * S_RMntFrq + 
0.17682790616815 * S_Recency + 0.20329199183726 * S_Teenhome ;
1285729   +   H1x3_3  =     0.56145399373835 * S_AcceptedCmpTotal
1285730   +          +     -0.0607922137813 * S_Age  +    -0.72333515266618 * S_Frq
1285731   +          +     1.00319702869592 * S_Income  +    -0.98265416539823 *
1285732   +        S_Kidhome  +      0.0683081611036 * S_Mnt  +     0.53609800817402 *
1285733   +        S_MntFishProducts  +     2.04360526983241 * S_MntFruits
1285734   +          +    -0.71698041504305 * S_MntGoldProds  +     -0.0344399486348 *
1285735   +        S_MntMeatProducts  +     0.33812230317499 * S_MntSweetProducts
1285736   +          +     1.06616289880664 * S_MntWines  +     0.61567483782422 *
1285737   +        S_MonthsAsCustomer  +      0.1468959674594 * S_NumCatalogPurchases
1285738   +          +    -1.05383642674948 * S_NumDealsPurchases
1285739   +          +     1.71861984509369 * S_NumDistPurchases
1285740   +          +     1.47595181536047 * S_NumStorePurchases
1285741   +          +    -1.64165005491178 * S_NumWebPurchases
1285742   +          +    -2.35130004742828 * S_NumWebVisitsMonth
1285743   +          +      1.0733561716985 * S_RFMstat  +     1.11931629246452 *
1285744   +        S_RMntFrq  +    -1.27356615687944 * S_Recency
1285745   +          +     0.38980214209917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.56145399373835 * S_AcceptedCmpTotal + -0.0607922137813 * 
S_Age + -0.72333515266618 * S_Frq + 1.00319702869592 * S_Income + -0.98265416539823 * 
S_Kidhome + 0.0683081611036 * S_Mnt + 0.53609800817402 * S_MntFishProducts + 2.04360526983241 
* S_MntFruits + -0.71698041504305 * S_MntGoldProds + -0.0344399486348 * S_MntMeatProducts + 
0.33812230317499 * S_MntSweetProducts + 1.06616289880664 * S_MntWines + 0.61567483782422 * 
S_MonthsAsCustomer + 0.1468959674594 * S_NumCatalogPurchases + -1.05383642674948 * 
S_NumDealsPurchases + 1.71861984509369 * S_NumDistPurchases + 1.47595181536047 * 
S_NumStorePurchases + -1.64165005491178 * S_NumWebPurchases + -2.35130004742828 * 
S_NumWebVisitsMonth + 1.0733561716985 * S_RFMstat + 1.11931629246452 * S_RMntFrq + 
-1.27356615687944 * S_Recency + 0.38980214209917 * S_Teenhome ;
1285746   +   H1x3_4  =    -1.87202109167616 * S_AcceptedCmpTotal
1285747   +          +     0.55536174675106 * S_Age  +     1.30133566520787 * S_Frq
1285748   +          +     1.18618986686496 * S_Income  +      0.7889264950743 *
1285749   +        S_Kidhome  +     0.52573653297629 * S_Mnt  +    -0.46151505202831 *
1285750   +        S_MntFishProducts  +     0.87196199131075 * S_MntFruits
1285751   +          +    -1.42881514301194 * S_MntGoldProds  +     0.75395204572369 *
1285752   +        S_MntMeatProducts  +    -1.86940235435459 * S_MntSweetProducts
1285753   +          +    -0.16531589560603 * S_MntWines  +     0.80429494629006 *
1285754   +        S_MonthsAsCustomer  +     2.07324775707635 * S_NumCatalogPurchases
1285755   +          +     0.13347794794222 * S_NumDealsPurchases
1285756   +          +     0.30533639886561 * S_NumDistPurchases
1285757   +          +     1.63892955540526 * S_NumStorePurchases
1285758   +          +     0.43734586516446 * S_NumWebPurchases
1285759   +          +     1.79260779802864 * S_NumWebVisitsMonth
1285760   +          +     2.03019700767877 * S_RFMstat  +    -0.36302320348133 *
1285761   +        S_RMntFrq  +    -0.32271271703746 * S_Recency
1285762   +          +     1.03191552613762 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = -1.87202109167616 * S_AcceptedCmpTotal + 0.55536174675106 * 
S_Age + 1.30133566520787 * S_Frq + 1.18618986686496 * S_Income + 0.7889264950743 * S_Kidhome + 
0.52573653297629 * S_Mnt + -0.46151505202831 * S_MntFishProducts + 0.87196199131075 * 
S_MntFruits + -1.42881514301194 * S_MntGoldProds + 0.75395204572369 * S_MntMeatProducts + 
-1.86940235435459 * S_MntSweetProducts + -0.16531589560603 * S_MntWines + 0.80429494629006 * 
S_MonthsAsCustomer + 2.07324775707635 * S_NumCatalogPurchases + 0.13347794794222 * 
S_NumDealsPurchases + 0.30533639886561 * S_NumDistPurchases + 1.63892955540526 * 
S_NumStorePurchases + 0.43734586516446 * S_NumWebPurchases + 1.79260779802864 * 
S_NumWebVisitsMonth + 2.03019700767877 * S_RFMstat + -0.36302320348133 * S_RMntFrq + 
-0.32271271703746 * S_Recency + 1.03191552613762 * S_Teenhome ;
1285763   +   H1x3_5  =     0.20857223520727 * S_AcceptedCmpTotal
1285764   +          +    -0.20096771162452 * S_Age  +     0.34962532991985 * S_Frq
1285765   +          +     1.37548654455856 * S_Income  +     1.56421861140197 *
1285766   +        S_Kidhome  +    -1.14534324749928 * S_Mnt  +     1.19456381083083 *
1285767   +        S_MntFishProducts  +     0.66027175430916 * S_MntFruits
1285768   +          +    -0.93198171949009 * S_MntGoldProds  +    -0.72464830253528 *
1285769   +        S_MntMeatProducts  +     1.02487566206095 * S_MntSweetProducts
1285770   +          +     1.05601020947303 * S_MntWines  +     2.31580499448269 *
1285771   +        S_MonthsAsCustomer  +    -0.72019418879499 * S_NumCatalogPurchases
1285772   +          +     1.64209094349557 * S_NumDealsPurchases
1285773   +          +    -0.38876870460627 * S_NumDistPurchases
1285774   +          +    -0.48559309584971 * S_NumStorePurchases
1285775   +          +     0.21254626353218 * S_NumWebPurchases
1285776   +          +    -0.71484448532542 * S_NumWebVisitsMonth
1285777   +          +     0.02349535084994 * S_RFMstat  +    -0.16176132186427 *
1285778   +        S_RMntFrq  +     0.44893411588775 * S_Recency
1285779   +          +      0.2652212690846 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.20857223520727 * S_AcceptedCmpTotal + -0.20096771162452 * 
S_Age + 0.34962532991985 * S_Frq + 1.37548654455856 * S_Income + 1.56421861140197 * S_Kidhome 
+ -1.14534324749928 * S_Mnt + 1.19456381083083 * S_MntFishProducts + 0.66027175430916 * 
S_MntFruits + -0.93198171949009 * S_MntGoldProds + -0.72464830253528 * S_MntMeatProducts + 
1.02487566206095 * S_MntSweetProducts + 1.05601020947303 * S_MntWines + 2.31580499448269 * 
S_MonthsAsCustomer + -0.72019418879499 * S_NumCatalogPurchases + 1.64209094349557 * 
S_NumDealsPurchases + -0.38876870460627 * S_NumDistPurchases + -0.48559309584971 * 
S_NumStorePurchases + 0.21254626353218 * S_NumWebPurchases + -0.71484448532542 * 
S_NumWebVisitsMonth + 0.02349535084994 * S_RFMstat + -0.16176132186427 * S_RMntFrq + 
0.44893411588775 * S_Recency + 0.2652212690846 * S_Teenhome ;
1285780   +   H1x3_1  = H1x3_1  +    -1.35842958516566 * AcceptedCmp10
1285781   +          +     0.34594436457216 * AcceptedCmp20  +      0.3640777110552 *
1285782   +        AcceptedCmp30  +    -2.65231594293215 * AcceptedCmp40
1285783   +          +    -0.32594395344101 * AcceptedCmp50  +    -0.20731631969028 *
1285784   +        Complain0  +    -0.37562812451995 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.35842958516566 * AcceptedCmp10 + 0.34594436457216 * 
AcceptedCmp20 + 0.3640777110552 * AcceptedCmp30 + -2.65231594293215 * AcceptedCmp40 + 
-0.32594395344101 * AcceptedCmp50 + -0.20731631969028 * Complain0 + -0.37562812451995 * 
HigherEducationBinary0 ;
1285785   +   H1x3_2  = H1x3_2  +    -0.29516697471591 * AcceptedCmp10
1285786   +          +     0.12160626453607 * AcceptedCmp20  +    -0.19673071668839 *
1285787   +        AcceptedCmp30  +      0.9679629348873 * AcceptedCmp40
1285788   +          +     0.27607865991675 * AcceptedCmp50  +     0.34210605810889 *
1285789   +        Complain0  +    -0.91955372970801 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + -0.29516697471591 * AcceptedCmp10 + 0.12160626453607 * 
AcceptedCmp20 + -0.19673071668839 * AcceptedCmp30 + 0.9679629348873 * AcceptedCmp40 + 
0.27607865991675 * AcceptedCmp50 + 0.34210605810889 * Complain0 + -0.91955372970801 * 
HigherEducationBinary0 ;
1285790   +   H1x3_3  = H1x3_3  +    -0.64048354977116 * AcceptedCmp10
1285791   +          +     0.71632378156708 * AcceptedCmp20  +     1.49620826236085 *
1285792   +        AcceptedCmp30  +    -0.41927727863342 * AcceptedCmp40
1285793   +          +    -0.74518887123144 * AcceptedCmp50  +     -0.5653895859863 *
1285794   +        Complain0  +     0.49026807979832 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.64048354977116 * AcceptedCmp10 + 0.71632378156708 * 
AcceptedCmp20 + 1.49620826236085 * AcceptedCmp30 + -0.41927727863342 * AcceptedCmp40 + 
-0.74518887123144 * AcceptedCmp50 + -0.5653895859863 * Complain0 + 0.49026807979832 * 
HigherEducationBinary0 ;
1285795   +   H1x3_4  = H1x3_4  +    -0.39456977652419 * AcceptedCmp10
1285796   +          +    -0.35607374401334 * AcceptedCmp20  +     0.25403314478809 *
1285797   +        AcceptedCmp30  +    -1.26365534513909 * AcceptedCmp40
1285798   +          +    -0.93574993035227 * AcceptedCmp50  +    -0.01475423275475 *
1285799   +        Complain0  +     0.99152563511102 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.39456977652419 * AcceptedCmp10 + -0.35607374401334 
* AcceptedCmp20 + 0.25403314478809 * AcceptedCmp30 + -1.26365534513909 * AcceptedCmp40 + 
-0.93574993035227 * AcceptedCmp50 + -0.01475423275475 * Complain0 + 0.99152563511102 * 
HigherEducationBinary0 ;
1285800   +   H1x3_5  = H1x3_5  +    -1.26373480748972 * AcceptedCmp10
1285801   +          +     0.14485593883591 * AcceptedCmp20  +     -0.0764980824216 *
1285802   +        AcceptedCmp30  +    -1.03297576023738 * AcceptedCmp40
1285803   +          +    -1.10199278454673 * AcceptedCmp50  +     0.92040879426753 *
1285804   +        Complain0  +     0.19845951543481 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -1.26373480748972 * AcceptedCmp10 + 0.14485593883591 * 
AcceptedCmp20 + -0.0764980824216 * AcceptedCmp30 + -1.03297576023738 * AcceptedCmp40 + 
-1.10199278454673 * AcceptedCmp50 + 0.92040879426753 * Complain0 + 0.19845951543481 * 
HigherEducationBinary0 ;
1285805   +   H1x3_1  = H1x3_1  +     0.21888802927361 * Education2n_Cycle
1285806   +          +    -1.88729117459232 * EducationBasic  +    -0.23163049582765 *
1285807   +        EducationGraduation  +     0.46887304015863 * EducationMaster
1285808   +          +     1.33953173091973 * Marital_StatusDivorced
1285809   +          +    -0.26253208073262 * Marital_StatusMarried
1285810   +          +    -0.00960552682431 * Marital_StatusSingle
1285811   +          +     1.02851334153667 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.21888802927361 * Education2n_Cycle + 
-1.88729117459232 * EducationBasic + -0.23163049582765 * EducationGraduation + 
0.46887304015863 * EducationMaster + 1.33953173091973 * Marital_StatusDivorced + 
-0.26253208073262 * Marital_StatusMarried + -0.00960552682431 * Marital_StatusSingle + 
1.02851334153667 * Marital_StatusTogether ;
1285812   +   H1x3_2  = H1x3_2  +     2.36701652448958 * Education2n_Cycle
1285813   +          +     0.64894060487321 * EducationBasic  +     -1.2851019467738 *
1285814   +        EducationGraduation  +     1.05325310300372 * EducationMaster
1285815   +          +     1.43150850334311 * Marital_StatusDivorced
1285816   +          +    -0.69239127844934 * Marital_StatusMarried
1285817   +          +     2.08477562471559 * Marital_StatusSingle
1285818   +          +    -1.55945531486837 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 2.36701652448958 * Education2n_Cycle + 
0.64894060487321 * EducationBasic + -1.2851019467738 * EducationGraduation + 1.05325310300372 
* EducationMaster + 1.43150850334311 * Marital_StatusDivorced + -0.69239127844934 * 
Marital_StatusMarried + 2.08477562471559 * Marital_StatusSingle + -1.55945531486837 * 
Marital_StatusTogether ;
1285819   +   H1x3_3  = H1x3_3  +    -0.07588279976612 * Education2n_Cycle
1285820   +          +    -1.60804492005984 * EducationBasic  +     0.15348594453976 *
1285821   +        EducationGraduation  +     1.80436924796338 * EducationMaster
1285822   +          +     1.08387556786168 * Marital_StatusDivorced
1285823   +          +      1.0283506000217 * Marital_StatusMarried
1285824   +          +    -0.87069431107983 * Marital_StatusSingle
1285825   +          +    -0.04455113729262 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + -0.07588279976612 * Education2n_Cycle + 
-1.60804492005984 * EducationBasic + 0.15348594453976 * EducationGraduation + 1.80436924796338 
* EducationMaster + 1.08387556786168 * Marital_StatusDivorced + 1.0283506000217 * 
Marital_StatusMarried + -0.87069431107983 * Marital_StatusSingle + -0.04455113729262 * 
Marital_StatusTogether ;
1285826   +   H1x3_4  = H1x3_4  +    -0.24072826180906 * Education2n_Cycle
1285827   +          +     0.56372511932643 * EducationBasic  +    -1.72914870390939 *
1285828   +        EducationGraduation  +    -1.53859265107051 * EducationMaster
1285829   +          +      -1.347780188307 * Marital_StatusDivorced
1285830   +          +    -0.53911983240372 * Marital_StatusMarried
1285831   +          +     0.22083074159185 * Marital_StatusSingle
1285832   +          +     0.46023807391468 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -0.24072826180906 * Education2n_Cycle + 
0.56372511932643 * EducationBasic + -1.72914870390939 * EducationGraduation + 
-1.53859265107051 * EducationMaster + -1.347780188307 * Marital_StatusDivorced + 
-0.53911983240372 * Marital_StatusMarried + 0.22083074159185 * Marital_StatusSingle + 
0.46023807391468 * Marital_StatusTogether ;
1285833   +   H1x3_5  = H1x3_5  +    -0.72917301249658 * Education2n_Cycle
1285834   +          +     0.78780526232794 * EducationBasic  +     0.22244378874589 *
1285835   +        EducationGraduation  +      1.6087631135774 * EducationMaster
1285836   +          +     1.46582538311384 * Marital_StatusDivorced
1285837   +          +     0.05256161016002 * Marital_StatusMarried
1285838   +          +    -1.21402967626877 * Marital_StatusSingle
1285839   +          +     0.88645860928281 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + -0.72917301249658 * Education2n_Cycle + 
0.78780526232794 * EducationBasic + 0.22244378874589 * EducationGraduation + 1.6087631135774 * 
EducationMaster + 1.46582538311384 * Marital_StatusDivorced + 0.05256161016002 * 
Marital_StatusMarried + -1.21402967626877 * Marital_StatusSingle + 0.88645860928281 * 
Marital_StatusTogether ;
1285840   +   H1x3_1  =     0.88456831875399 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.88456831875399 + H1x3_1 ;
1285841   +   H1x3_2  =    -0.97118571845853 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.97118571845853 + H1x3_2 ;
1285842   +   H1x3_3  =    -0.79264210370105 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.79264210370105 + H1x3_3 ;
1285843   +   H1x3_4  =     0.02838267530757 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.02838267530757 + H1x3_4 ;
1285844   +   H1x3_5  =      0.6575544901332 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = 0.6575544901332 + H1x3_5 ;
1285845   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1285846   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1285847   +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
1285848   +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
1285849   +   H1x3_3  = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_3 = 1.0 / (1.0 + EXP(MIN( - H1x3_3 , _EXP_BAR)));
1285850   +   H1x3_4  = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.0 / (1.0 + EXP(MIN( - H1x3_4 , _EXP_BAR)));
1285851   +   H1x3_5  = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_5 = 1.0 / (1.0 + EXP(MIN( - H1x3_5 , _EXP_BAR)));
1285852   +END;
MPRINT(EM_DIAGRAM):   END;
1285853   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1285854   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
1285855   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
1285856   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
1285857   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
1285858   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
1285859   +END;
MPRINT(EM_DIAGRAM):   END;
1285860   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1285861   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1285862   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1285863   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1285864   +   H2x1_1  =    -0.87888588976745 * H1x1_1  +     2.90335871970001 * H1x1_2
1285865   +          +     3.56892082037266 * H1x1_3  +    -2.73992780705083 * H1x1_4
1285866   +          +     1.85087845133324 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.87888588976745 * H1x1_1 + 2.90335871970001 * H1x1_2 + 
3.56892082037266 * H1x1_3 + -2.73992780705083 * H1x1_4 + 1.85087845133324 * H1x1_5 ;
1285867   +   H2x1_2  =    -0.58574259841126 * H1x1_1  +    -0.21734849016798 * H1x1_2
1285868   +          +    -0.25911074181081 * H1x1_3  +    -0.42608313525243 * H1x1_4
1285869   +          +      0.0572264965726 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.58574259841126 * H1x1_1 + -0.21734849016798 * H1x1_2 + 
-0.25911074181081 * H1x1_3 + -0.42608313525243 * H1x1_4 + 0.0572264965726 * H1x1_5 ;
1285870   +   H2x1_3  =     -3.4245103090892 * H1x1_1  +     2.39148442791109 * H1x1_2
1285871   +          +     2.40633993926864 * H1x1_3  +    -0.39116314741561 * H1x1_4
1285872   +          +     1.55940137045446 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.4245103090892 * H1x1_1 + 2.39148442791109 * H1x1_2 + 
2.40633993926864 * H1x1_3 + -0.39116314741561 * H1x1_4 + 1.55940137045446 * H1x1_5 ;
1285873   +   H2x1_4  =     4.40552826823228 * H1x1_1  +    -2.22667369285426 * H1x1_2
1285874   +          +    -4.36956996992936 * H1x1_3  +     5.07833758885145 * H1x1_4
1285875   +          +    -3.71745000855391 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 4.40552826823228 * H1x1_1 + -2.22667369285426 * H1x1_2 + 
-4.36956996992936 * H1x1_3 + 5.07833758885145 * H1x1_4 + -3.71745000855391 * H1x1_5 ;
1285876   +   H2x1_1  = H2x1_1  +     2.57417055243767 * H1x2_1
1285877   +          +     0.83648749576123 * H1x2_2  +     0.89390090173338 * H1x2_3
1285878   +          +     0.64981014833304 * H1x2_4  +    -0.52148329192172 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 2.57417055243767 * H1x2_1 + 0.83648749576123 * H1x2_2 
+ 0.89390090173338 * H1x2_3 + 0.64981014833304 * H1x2_4 + -0.52148329192172 * H1x2_5 ;
1285879   +   H2x1_2  = H2x1_2  +      0.0180888989385 * H1x2_1
1285880   +          +    -0.80823823488019 * H1x2_2  +    -0.28763491232907 * H1x2_3
1285881   +          +     0.25846928082637 * H1x2_4  +    -0.90191452174928 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.0180888989385 * H1x2_1 + -0.80823823488019 * H1x2_2 
+ -0.28763491232907 * H1x2_3 + 0.25846928082637 * H1x2_4 + -0.90191452174928 * H1x2_5 ;
1285882   +   H2x1_3  = H2x1_3  +     1.14009879940491 * H1x2_1
1285883   +          +    -0.40787680915084 * H1x2_2  +     0.07284828777988 * H1x2_3
1285884   +          +     0.36049016529857 * H1x2_4  +    -1.18138631855392 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.14009879940491 * H1x2_1 + -0.40787680915084 * H1x2_2 
+ 0.07284828777988 * H1x2_3 + 0.36049016529857 * H1x2_4 + -1.18138631855392 * H1x2_5 ;
1285885   +   H2x1_4  = H2x1_4  +     -0.1178430666715 * H1x2_1
1285886   +          +     2.09065650924536 * H1x2_2  +     1.04148055725421 * H1x2_3
1285887   +          +     0.02606984862898 * H1x2_4  +     0.31973150706209 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.1178430666715 * H1x2_1 + 2.09065650924536 * H1x2_2 
+ 1.04148055725421 * H1x2_3 + 0.02606984862898 * H1x2_4 + 0.31973150706209 * H1x2_5 ;
1285888   +   H2x1_1  = H2x1_1  +     0.37589541636702 * H1x3_1
1285889   +          +    -1.02452495514201 * H1x3_2  +     0.44765211805329 * H1x3_3
1285890   +          +    -1.35647342372032 * H1x3_4  +     -0.6490399229487 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.37589541636702 * H1x3_1 + -1.02452495514201 * H1x3_2 
+ 0.44765211805329 * H1x3_3 + -1.35647342372032 * H1x3_4 + -0.6490399229487 * H1x3_5 ;
1285891   +   H2x1_2  = H2x1_2  +      -1.910747593267 * H1x3_1
1285892   +          +     1.91313714874593 * H1x3_2  +     0.89010950185557 * H1x3_3
1285893   +          +     1.16258612173237 * H1x3_4  +     0.67062728470341 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.910747593267 * H1x3_1 + 1.91313714874593 * H1x3_2 + 
0.89010950185557 * H1x3_3 + 1.16258612173237 * H1x3_4 + 0.67062728470341 * H1x3_5 ;
1285894   +   H2x1_3  = H2x1_3  +    -0.61933600446437 * H1x3_1
1285895   +          +     1.71790550668732 * H1x3_2  +     0.54214423164791 * H1x3_3
1285896   +          +     1.23934237110052 * H1x3_4  +     -0.5426823885329 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.61933600446437 * H1x3_1 + 1.71790550668732 * H1x3_2 
+ 0.54214423164791 * H1x3_3 + 1.23934237110052 * H1x3_4 + -0.5426823885329 * H1x3_5 ;
1285897   +   H2x1_4  = H2x1_4  +     0.63501991890118 * H1x3_1
1285898   +          +     0.52608732282548 * H1x3_2  +     1.05849455171994 * H1x3_3
1285899   +          +    -0.10988994454917 * H1x3_4  +     -0.4296682351699 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.63501991890118 * H1x3_1 + 0.52608732282548 * H1x3_2 
+ 1.05849455171994 * H1x3_3 + -0.10988994454917 * H1x3_4 + -0.4296682351699 * H1x3_5 ;
1285900   +   H2x1_1  =     1.65760855975376 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.65760855975376 + H2x1_1 ;
1285901   +   H2x1_2  =    -1.48092067999918 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48092067999918 + H2x1_2 ;
1285902   +   H2x1_3  =     0.34293203475136 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.34293203475136 + H2x1_3 ;
1285903   +   H2x1_4  =     2.26730807690838 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.26730807690838 + H2x1_4 ;
1285904   +   H2x1_5  = 0;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0;
1285905   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 );
1285906   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1285907   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1285908   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1285909   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1285910   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1285911   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1285912   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1285913   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1285914   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1285915   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1285916   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1285917   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1285918   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1285919   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1285920   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1285921   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1285922   +END;
MPRINT(EM_DIAGRAM):   END;
1285923   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1285924   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1285925   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1285926   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1285927   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1285928   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1285929   +END;
MPRINT(EM_DIAGRAM):   END;
1285930   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1285931   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
1285932   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1285933   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1285934   +   H2x2_1  =     0.35487648363729 * H1x1_1  +    -1.23352844324567 * H1x1_2
1285935   +          +      0.4867158313468 * H1x1_3  +    -1.47292809903753 * H1x1_4
1285936   +          +    -1.00833023262854 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.35487648363729 * H1x1_1 + -1.23352844324567 * H1x1_2 + 
0.4867158313468 * H1x1_3 + -1.47292809903753 * H1x1_4 + -1.00833023262854 * H1x1_5 ;
1285937   +   H2x2_2  =     1.32087363094324 * H1x1_1  +     0.82502983555141 * H1x1_2
1285938   +          +    -0.68621854188154 * H1x1_3  +     1.98219533394448 * H1x1_4
1285939   +          +     0.24099626891211 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 1.32087363094324 * H1x1_1 + 0.82502983555141 * H1x1_2 + 
-0.68621854188154 * H1x1_3 + 1.98219533394448 * H1x1_4 + 0.24099626891211 * H1x1_5 ;
1285940   +   H2x2_3  =     1.19516705715854 * H1x1_1  +    -0.20476587977538 * H1x1_2
1285941   +          +    -2.69435199012833 * H1x1_3  +      1.1085509496662 * H1x1_4
1285942   +          +    -0.95845782501191 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 1.19516705715854 * H1x1_1 + -0.20476587977538 * H1x1_2 + 
-2.69435199012833 * H1x1_3 + 1.1085509496662 * H1x1_4 + -0.95845782501191 * H1x1_5 ;
1285943   +   H2x2_4  =     0.80435775915951 * H1x1_1  +     1.81751702761299 * H1x1_2
1285944   +          +     0.07722876002556 * H1x1_3  +    -0.41957373993392 * H1x1_4
1285945   +          +    -1.39341356039439 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.80435775915951 * H1x1_1 + 1.81751702761299 * H1x1_2 + 
0.07722876002556 * H1x1_3 + -0.41957373993392 * H1x1_4 + -1.39341356039439 * H1x1_5 ;
1285946   +   H2x2_1  = H2x2_1  +     0.84230993439042 * H1x2_1
1285947   +          +      1.4931541058726 * H1x2_2  +     0.29113033361443 * H1x2_3
1285948   +          +     0.58117372781043 * H1x2_4  +     0.21183820652904 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.84230993439042 * H1x2_1 + 1.4931541058726 * H1x2_2 + 
0.29113033361443 * H1x2_3 + 0.58117372781043 * H1x2_4 + 0.21183820652904 * H1x2_5 ;
1285949   +   H2x2_2  = H2x2_2  +     0.27560928585641 * H1x2_1
1285950   +          +     1.00352880610395 * H1x2_2  +     1.86342723621296 * H1x2_3
1285951   +          +     0.68698974361713 * H1x2_4  +     1.62443344475228 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.27560928585641 * H1x2_1 + 1.00352880610395 * H1x2_2 
+ 1.86342723621296 * H1x2_3 + 0.68698974361713 * H1x2_4 + 1.62443344475228 * H1x2_5 ;
1285952   +   H2x2_3  = H2x2_3  +     0.59362453125998 * H1x2_1
1285953   +          +     2.21434215943762 * H1x2_2  +     0.00697391860503 * H1x2_3
1285954   +          +     0.52298455671378 * H1x2_4  +    -1.36319907473823 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.59362453125998 * H1x2_1 + 2.21434215943762 * H1x2_2 
+ 0.00697391860503 * H1x2_3 + 0.52298455671378 * H1x2_4 + -1.36319907473823 * H1x2_5 ;
1285955   +   H2x2_4  = H2x2_4  +     0.87949581153547 * H1x2_1
1285956   +          +     0.52867495476492 * H1x2_2  +    -0.30823702050003 * H1x2_3
1285957   +          +     1.30732992472712 * H1x2_4  +    -0.93335113891701 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.87949581153547 * H1x2_1 + 0.52867495476492 * H1x2_2 
+ -0.30823702050003 * H1x2_3 + 1.30732992472712 * H1x2_4 + -0.93335113891701 * H1x2_5 ;
1285958   +   H2x2_1  = H2x2_1  +    -0.18546949662618 * H1x3_1
1285959   +          +     0.12449215628678 * H1x3_2  +    -0.06904718348363 * H1x3_3
1285960   +          +     1.64236464165721 * H1x3_4  +      0.6073731959408 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.18546949662618 * H1x3_1 + 0.12449215628678 * H1x3_2 
+ -0.06904718348363 * H1x3_3 + 1.64236464165721 * H1x3_4 + 0.6073731959408 * H1x3_5 ;
1285961   +   H2x2_2  = H2x2_2  +    -0.65604349417832 * H1x3_1
1285962   +          +    -0.36719791640957 * H1x3_2  +     0.13320126120657 * H1x3_3
1285963   +          +     0.18159276955134 * H1x3_4  +     2.58327741985853 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.65604349417832 * H1x3_1 + -0.36719791640957 * 
H1x3_2 + 0.13320126120657 * H1x3_3 + 0.18159276955134 * H1x3_4 + 2.58327741985853 * H1x3_5 ;
1285964   +   H2x2_3  = H2x2_3  +     0.91638163706166 * H1x3_1
1285965   +          +    -0.47067218080648 * H1x3_2  +    -1.48968450897101 * H1x3_3
1285966   +          +     1.31187282169231 * H1x3_4  +     -0.2874693423684 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.91638163706166 * H1x3_1 + -0.47067218080648 * H1x3_2 
+ -1.48968450897101 * H1x3_3 + 1.31187282169231 * H1x3_4 + -0.2874693423684 * H1x3_5 ;
1285967   +   H2x2_4  = H2x2_4  +     0.53560065193109 * H1x3_1
1285968   +          +    -1.15405943087628 * H1x3_2  +     0.12331054856276 * H1x3_3
1285969   +          +     -1.4665768024733 * H1x3_4  +    -0.08015819920106 * H1x3_5 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.53560065193109 * H1x3_1 + -1.15405943087628 * H1x3_2 
+ 0.12331054856276 * H1x3_3 + -1.4665768024733 * H1x3_4 + -0.08015819920106 * H1x3_5 ;
1285970   +   H2x2_1  =     1.14294113680807 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.14294113680807 + H2x2_1 ;
1285971   +   H2x2_2  =     0.23029998902452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.23029998902452 + H2x2_2 ;
1285972   +   H2x2_3  =     0.09214575938404 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.09214575938404 + H2x2_3 ;
1285973   +   H2x2_4  =    -1.18247593420886 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -1.18247593420886 + H2x2_4 ;
1285974   +   H2x2_5  = 0;
MPRINT(EM_DIAGRAM):   H2x2_5 = 0;
1285975   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 );
1285976   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1285977   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
1285978   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
1285979   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
1285980   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
1285981   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
1285982   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
1285983   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
1285984   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
1285985   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
1285986   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
1285987   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
1285988   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
1285989   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
1285990   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
1285991   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
1285992   +END;
MPRINT(EM_DIAGRAM):   END;
1285993   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1285994   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
1285995   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
1285996   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
1285997   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
1285998   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
1285999   +END;
MPRINT(EM_DIAGRAM):   END;
1286000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1286001   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
1286002   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1286003   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1286004   +   H3x1_1  =     0.38781845364667 * H2x1_1  +    -1.29333236344932 * H2x1_2
1286005   +          +    -0.39452648844304 * H2x1_3  +    -1.74269898056816 * H2x1_4
1286006   +          +     0.80663208970159 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.38781845364667 * H2x1_1 + -1.29333236344932 * H2x1_2 + 
-0.39452648844304 * H2x1_3 + -1.74269898056816 * H2x1_4 + 0.80663208970159 * H2x1_5 ;
1286007   +   H3x1_2  =     3.42138045838852 * H2x1_1  +    -2.53755815247586 * H2x1_2
1286008   +          +     1.21718290783021 * H2x1_3  +    -5.59742312960418 * H2x1_4
1286009   +          +     0.93331767575635 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 3.42138045838852 * H2x1_1 + -2.53755815247586 * H2x1_2 + 
1.21718290783021 * H2x1_3 + -5.59742312960418 * H2x1_4 + 0.93331767575635 * H2x1_5 ;
1286010   +   H3x1_3  =      0.3066875685513 * H2x1_1  +     0.06212172151661 * H2x1_2
1286011   +          +     0.54975837436313 * H2x1_3  +    -2.01758242649336 * H2x1_4
1286012   +          +     -1.5405169528484 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.3066875685513 * H2x1_1 + 0.06212172151661 * H2x1_2 + 
0.54975837436313 * H2x1_3 + -2.01758242649336 * H2x1_4 + -1.5405169528484 * H2x1_5 ;
1286013   +   H3x1_4  =     0.75238654454663 * H2x1_1  +      0.8605688517794 * H2x1_2
1286014   +          +    -1.18675726977521 * H2x1_3  +    -0.23106123144614 * H2x1_4
1286015   +          +    -0.26022301590207 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = 0.75238654454663 * H2x1_1 + 0.8605688517794 * H2x1_2 + 
-1.18675726977521 * H2x1_3 + -0.23106123144614 * H2x1_4 + -0.26022301590207 * H2x1_5 ;
1286016   +   H3x1_1  = H3x1_1  +     -1.9857802180333 * H2x2_1
1286017   +          +    -1.83746541265988 * H2x2_2  +    -0.19991218509663 * H2x2_3
1286018   +          +    -1.16358880876987 * H2x2_4  +     0.72072728861384 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + -1.9857802180333 * H2x2_1 + -1.83746541265988 * H2x2_2 
+ -0.19991218509663 * H2x2_3 + -1.16358880876987 * H2x2_4 + 0.72072728861384 * H2x2_5 ;
1286019   +   H3x1_2  = H3x1_2  +     0.96937540396367 * H2x2_1
1286020   +          +    -0.36649624165623 * H2x2_2  +     0.89618563330616 * H2x2_3
1286021   +          +    -0.84224721075989 * H2x2_4  +     0.43309698013395 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.96937540396367 * H2x2_1 + -0.36649624165623 * H2x2_2 
+ 0.89618563330616 * H2x2_3 + -0.84224721075989 * H2x2_4 + 0.43309698013395 * H2x2_5 ;
1286022   +   H3x1_3  = H3x1_3  +    -0.90225214765586 * H2x2_1
1286023   +          +     0.02136319386846 * H2x2_2  +    -0.46868394918483 * H2x2_3
1286024   +          +     0.56005845701528 * H2x2_4  +     -1.2510120440755 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.90225214765586 * H2x2_1 + 0.02136319386846 * H2x2_2 
+ -0.46868394918483 * H2x2_3 + 0.56005845701528 * H2x2_4 + -1.2510120440755 * H2x2_5 ;
1286025   +   H3x1_4  = H3x1_4  +    -0.50993520854009 * H2x2_1
1286026   +          +    -2.07093806498525 * H2x2_2  +      0.4129198676448 * H2x2_3
1286027   +          +     0.26049404756746 * H2x2_4  +     2.51376895456424 * H2x2_5 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + -0.50993520854009 * H2x2_1 + -2.07093806498525 * 
H2x2_2 + 0.4129198676448 * H2x2_3 + 0.26049404756746 * H2x2_4 + 2.51376895456424 * H2x2_5 ;
1286028   +   H3x1_1  =    -0.83299285935592 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.83299285935592 + H3x1_1 ;
1286029   +   H3x1_2  =     1.30330978853872 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 1.30330978853872 + H3x1_2 ;
1286030   +   H3x1_3  =    -2.12788819064089 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -2.12788819064089 + H3x1_3 ;
1286031   +   H3x1_4  =    -2.20240058017016 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -2.20240058017016 + H3x1_4 ;
1286032   +   H3x1_5  = 0;
MPRINT(EM_DIAGRAM):   H3x1_5 = 0;
1286033   +   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 , H3x1_3 , H3x1_4 , H3x1_5 );
1286034   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1286035   +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
1286036   +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
1286037   +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
1286038   +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
1286039   +   H3x1_3  = EXP(H3x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_3 = EXP(H3x1_3 - _MAX_);
1286040   +   _SUM_ = _SUM_ + H3x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_3 ;
1286041   +   H3x1_4  = EXP(H3x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_4 = EXP(H3x1_4 - _MAX_);
1286042   +   _SUM_ = _SUM_ + H3x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_4 ;
1286043   +   H3x1_5  = EXP(H3x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_5 = EXP(H3x1_5 - _MAX_);
1286044   +   _SUM_ = _SUM_ + H3x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_5 ;
1286045   +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
1286046   +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
1286047   +   H3x1_3  = H3x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 / _SUM_;
1286048   +   H3x1_4  = H3x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 / _SUM_;
1286049   +   H3x1_5  = H3x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 / _SUM_;
1286050   +END;
MPRINT(EM_DIAGRAM):   END;
1286051   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1286052   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
1286053   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
1286054   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
1286055   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
1286056   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
1286057   +END;
MPRINT(EM_DIAGRAM):   END;
1286058   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1286059   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1286060   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1286061   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1286062   +   P_DepVar1  =     0.02793808059597 * H3x1_1  +    -8.41365271594755 * H3x1_2
1286063   +          +    -0.18933524733979 * H3x1_3  +     1.61020422729446 * H3x1_4
1286064   +          +     7.51494112828021 * H3x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.02793808059597 * H3x1_1 + -8.41365271594755 * H3x1_2 + 
-0.18933524733979 * H3x1_3 + 1.61020422729446 * H3x1_4 + 7.51494112828021 * H3x1_5 ;
1286065   +   P_DepVar1  =     0.83962115399384 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.83962115399384 + P_DepVar1 ;
1286066   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1286067   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1286068   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1286069   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1286070   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1286071   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1286072   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1286073   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1286074   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1286075   +END;
MPRINT(EM_DIAGRAM):   END;
1286076   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1286077   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1286078   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1286079   +END;
MPRINT(EM_DIAGRAM):   END;
1286080   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1286081   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1286082   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1286083   +END;
MPRINT(EM_DIAGRAM):   END;
1286084   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1286085   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1286086   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1286087   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1286088   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1286089   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1286090   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1286091   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1286092   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1286093   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1286094   +END;
MPRINT(EM_DIAGRAM):   END;
1286095   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1286096   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1286097   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1286098   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1286099    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1286100    quit;
1286101    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1286102    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1286103    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1286104    retain ID 2 Node "AutoNeural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural10";
1286105    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1286106    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9109 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 9109 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1286107    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1286108    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1286109    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 9109 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 9109 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1286110    proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME 
CREATOR);
1286111    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1286112    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286113    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1286114    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1286115    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1286116    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286117    proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
1286118    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 83 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1286119    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1286120    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1286121    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 83 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 83 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286122    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1286123    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1286124    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1286125    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 83 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 83 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1286126    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1286127    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1286127  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4449 rows and 5 columns.

1286128    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286129    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
1286130    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 4449 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 4449 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286131    filename _pref
1286131  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1286132    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1286133    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1286134   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1286135   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1286136   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1286137   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1286138   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1286139   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1286140    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1286141    quit;
1286142    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1286143    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1286144    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1286145    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1286146    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1286147    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1286148    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1286149    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1286150    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286151    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1286152    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1286153    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286154    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1286155    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1286156    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1286157    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1286158    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1286159    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1286160    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1286161    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1286162    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286163    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1286164    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1286165    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1286166    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286167    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1286168    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1286168  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1286169    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286170    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
1286171    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 4453 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286172    filename _pref
1286172  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1286173    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1286174    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1286175   +
1286176   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1286177   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1286177  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1286178   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1286179   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1286180   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1286181   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1286182   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1286183    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1286184    quit;
1286185    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1286186    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1286187    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1286188    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1286189    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1286190    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286191    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1286192    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1286193    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286194    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1286195    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1286196    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286197    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1286198    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1286199    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1286200    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286201    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1286202    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1286203    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1286204    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1286205    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286206    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1286207    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1286208    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1286209    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286210    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1286211    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1286211  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1286212    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1286213    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
1286214    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 4492 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286215    filename _pref
1286215  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1286216    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1286217    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1286218   +
1286219   +
1286220   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1286221   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1286222   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1286223   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1286224   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1286225   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1286226   +
1286227   +
1286228   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1286229   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1286230   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1286231   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1286232   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1286233   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1286234   +
1286235   +
1286236   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1286237   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1286238   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1286239   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1286240   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1286241   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1286242   +
1286243   +
1286244   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1286245   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1286246   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1286247   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1286248   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1286249   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1286250   +
1286251   +
1286252   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1286253   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1286254   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1286255   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1286256   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1286257   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1286258   +
1286259   +
1286260   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1286261   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1286262   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1286263   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1286264   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1286265   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1286266   +
1286267   +
1286268   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1286269   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1286270   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1286271   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1286272   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1286273   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1286274   +
1286275   +
1286276   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1286277   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1286278   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1286279   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1286280   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1286281   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1286282   +if
1286283   +_FILTERNORM1 not in ( '.')
1286284   + and
1286285   +_FILTERNORM2 not in ( '.')
1286286   + and
1286287   +_FILTERNORM3 not in ( '.')
1286288   + and
1286289   +_FILTERNORM4 not in ( '.')
1286290   + and
1286291   +_FILTERNORM5 not in ( '.')
1286292   + and
1286293   +_FILTERNORM6 not in ( '.')
1286294   + and
1286295   +_FILTERNORM7 not in ( ' ')
1286296   + and
1286297   +_FILTERNORM8 not in ( ' ')
1286298   +and
1286299   +( Dt_Customer ne .)
1286300   +and ( Income ne . and (Income<=107000))
1286301   +and ( Kidhome ne .)
1286302   +and ( MntFishProducts ne .)
1286303   +and ( MntFruits ne .)
1286304   +and ( MntGoldProds ne .)
1286305   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1286306   +and ( MntSweetProducts ne .)
1286307   +and ( MntWines ne .)
1286308   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1286309   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1286310   +and ( NumStorePurchases ne .)
1286311   +and ( NumWebPurchases ne .)
1286312   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1286313   +and ( Recency ne .)
1286314   +and ( Teenhome ne .)
1286315   +and ( Year_Birth ne .)
1286316   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1286317   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1286318   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1286319   +end;
MPRINT(EM_DIAGRAM):   end;
1286320   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1286321   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1286322    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1286323    quit;
1286324    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1286325    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1286326    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1286327    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1286328    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1286329    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286330    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1286331    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1286332    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286333    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1286334    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1286335    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286336    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1286337    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1286338    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1286339    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286340    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1286341    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1286342    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1286343    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1286344    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286345    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1286346    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1286347    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1286348    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286349    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1286350    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1286350  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1286351    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286352    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
1286353    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 4558 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286354    %macro varDept(fcmpdata=,id=);
1286355    %global nobs&id scoreFlag&id;
1286356    %let scoreFlag&id = 0;
1286357    %if &id=1 or ^&fcmpStart %then %do;
1286358    proc sort data=&fcmpdata out=_temp&id nodupkey;
1286359    by NAME;
1286360    where id=&id and LHS in( %let j=1;
1286361    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1286362    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1286363    "&var" %let j = %eval(&j+1);
1286364    %end;
1286365    );
1286366    run;
1286367    %let dsid = %sysfunc(open(_temp&id));
1286368    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1286369    %let dsid = %sysfunc(close(&dsid));
1286370    %if &&nobs&id %then %do;
1286371    %let scoreFlag&id = 1;
1286372    %let fcmpStart = 1;
1286373    %end;
1286374    %else %let fcmpStart = 0;
1286375    %end;
1286376    %else %do;
1286377    proc sort data=&fcmpdata out=_tempid;
1286378    where id=&id;
1286379    by LHS;
1286380    run;
1286381    %let dsid = %sysfunc(open(_tempid));
1286382    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1286383    %let dsid = %sysfunc(close(&dsid));
1286384    %if ^&&nobs&id %then %do;
1286385    proc datasets lib=work nolist;
1286386    delete _tempid;
1286387    run;
1286388    quit;
1286389    %end;
1286390    %else %do;
1286391    data _tempAll;
1286392    set %let j=%eval(&id-1);
1286393    %do x=1 %to &j;
1286394    %if &&nobs&x %then %do;
1286395    _temp&x %end;
1286396    %end;
1286397    ;
1286398    run;
1286399    proc sql;
1286400    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1286400  ! work._tempid p2 where p.name=p2.lhs;
1286401    quit;
1286402    data _temp&id;
1286403    set _temp&id;
1286404    where LHS ne '' and NAME ne '' and Node ne '';
1286405    run;
1286406    proc datasets lib=work nolist;
1286407    delete _tempAll;
1286408    run;
1286409    %let dsid = %sysfunc(open(_temp&id));
1286410    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1286411    %let dsid = %sysfunc(close(&dsid));
1286412    %if ^&&nobs&id %then %do;
1286413    proc datasets lib=work nolist;
1286414    delete _temp&id;
1286415    run;
1286416    quit;
1286417    %end;
1286418    %else %do;
1286419    %let scoreFlag&id = 1;
1286420    data _temp&id;
1286421    set _temp&id;
1286422    where LHS ne NAME and node ne '';
1286423    run;
1286424    %let dsid = %sysfunc(open(_temp&id));
1286425    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1286426    %let dsid = %sysfunc(close(&dsid));
1286427    %if ^&&nobs&id %then %do;
1286428    proc datasets lib=work nolist;
1286429    delete _temp&id;
1286430    run;
1286431    quit;
1286432    %end;
1286433    %else %do;
1286434    proc sort data=_temp&id nodupkey;
1286435    by LHS NAME;
1286436    run;
1286437    %end;
1286438    %end;
1286439    %end;
1286440    %end;
1286441    %mend varDept;
1286442    %macro optCode(outdata=fcmpdata);
1286443    %global fcmpStart;
1286444    %let fcmpStart = 0;
1286445    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1286446    %let NumNodes=9;
1286447    %do k=1 %to &NumNodes;
1286448    %vardept(fcmpdata=&outdata, id=&k);
1286449    %end;
1286450    %mend optCode;
1286451    %optcode(outData=EMWS8.Ensmbl45_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 224 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 160 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 64 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 64 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 64 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 64 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 68 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 64 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 107 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1286452    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1286453    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1286454    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1286455    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286456    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1286457    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1286458    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1286459    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286460    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1286461    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1286461  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1286462    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1286463    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1286464    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1286465    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1286466    filename _pref
1286466  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
1286467    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1286468    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas.
1286469   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1286470   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1286471   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1286472   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1286473   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1286474   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1286475   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1286476   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1286477   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1286478   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1286479   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1286480   +LENGTH _WARN_ $4
1286481   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1286482   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1286483   +
1286484   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1286485   +
1286486   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1286487   +
1286488   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1286489   +
1286490   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1286491   +
1286492   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1286493   +
1286494   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1286495   +
1286496   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1286497   +
1286498   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1286499   +
1286500   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1286501   +
1286502   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1286503   +
1286504   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1286505   +
1286506   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1286507   +
1286508   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1286509   +
1286510   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1286511   +
1286512   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1286513   +
1286514   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1286515   +
1286516   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1286517   +
1286518   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1286519   +
1286520   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1286521   +
1286522   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1286523   +
1286524   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1286525   +
1286526   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1286527   +
1286528   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1286529   +
1286530   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1286531   +
1286532   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1286533   +
1286534   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1286535   +
1286536   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1286537   +
1286538   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1286539   +
1286540   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1286541   +
1286542   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1286543   +
1286544   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1286545   +
1286546   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1286547   +
1286548   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1286549   +
1286550   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1286551   +
1286552   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1286553   +
1286554   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1286555   +
1286556   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1286557   +
1286558   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1286559   +
1286560   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1286561   +
1286562   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1286563   +
1286564   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1286565   +
1286566   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1286567   +
1286568   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1286569   +
1286570   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1286571   +
1286572   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1286573   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1286574   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1286575   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1286576   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1286577   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1286578   +end;
MPRINT(EM_DIAGRAM):   end;
1286579   +else do;
MPRINT(EM_DIAGRAM):   else do;
1286580   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1286581   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1286582   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1286583   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1286584   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1286585   +   end;
MPRINT(EM_DIAGRAM):   end;
1286586   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1286587   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1286588   +   end;
MPRINT(EM_DIAGRAM):   end;
1286589   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1286590   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1286591   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1286592   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1286593   +   end;
MPRINT(EM_DIAGRAM):   end;
1286594   +end;
MPRINT(EM_DIAGRAM):   end;
1286595   +
1286596   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1286597   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1286598   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1286599   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1286600   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1286601   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1286602   +end;
MPRINT(EM_DIAGRAM):   end;
1286603   +else do;
MPRINT(EM_DIAGRAM):   else do;
1286604   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1286605   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1286606   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1286607   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1286608   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1286609   +   end;
MPRINT(EM_DIAGRAM):   end;
1286610   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1286611   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1286612   +   end;
MPRINT(EM_DIAGRAM):   end;
1286613   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1286614   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1286615   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1286616   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1286617   +   end;
MPRINT(EM_DIAGRAM):   end;
1286618   +end;
MPRINT(EM_DIAGRAM):   end;
1286619   +
1286620   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1286621   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1286622   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1286623   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1286624   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1286625   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1286626   +end;
MPRINT(EM_DIAGRAM):   end;
1286627   +else do;
MPRINT(EM_DIAGRAM):   else do;
1286628   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1286629   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1286630   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1286631   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1286632   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1286633   +   end;
MPRINT(EM_DIAGRAM):   end;
1286634   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1286635   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1286636   +   end;
MPRINT(EM_DIAGRAM):   end;
1286637   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1286638   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1286639   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1286640   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1286641   +   end;
MPRINT(EM_DIAGRAM):   end;
1286642   +end;
MPRINT(EM_DIAGRAM):   end;
1286643   +
1286644   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1286645   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1286646   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1286647   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1286648   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1286649   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1286650   +end;
MPRINT(EM_DIAGRAM):   end;
1286651   +else do;
MPRINT(EM_DIAGRAM):   else do;
1286652   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1286653   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1286654   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1286655   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1286656   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1286657   +   end;
MPRINT(EM_DIAGRAM):   end;
1286658   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1286659   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1286660   +   end;
MPRINT(EM_DIAGRAM):   end;
1286661   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1286662   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1286663   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1286664   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1286665   +   end;
MPRINT(EM_DIAGRAM):   end;
1286666   +end;
MPRINT(EM_DIAGRAM):   end;
1286667   +
1286668   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1286669   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1286670   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1286671   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1286672   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1286673   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1286674   +end;
MPRINT(EM_DIAGRAM):   end;
1286675   +else do;
MPRINT(EM_DIAGRAM):   else do;
1286676   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1286677   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1286678   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1286679   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1286680   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1286681   +   end;
MPRINT(EM_DIAGRAM):   end;
1286682   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1286683   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1286684   +   end;
MPRINT(EM_DIAGRAM):   end;
1286685   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1286686   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1286687   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1286688   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1286689   +   end;
MPRINT(EM_DIAGRAM):   end;
1286690   +end;
MPRINT(EM_DIAGRAM):   end;
1286691   +
1286692   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1286693   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1286694   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1286695   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1286696   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1286697   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1286698   +end;
MPRINT(EM_DIAGRAM):   end;
1286699   +else do;
MPRINT(EM_DIAGRAM):   else do;
1286700   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1286701   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1286702   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1286703   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1286704   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1286705   +   end;
MPRINT(EM_DIAGRAM):   end;
1286706   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1286707   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1286708   +   end;
MPRINT(EM_DIAGRAM):   end;
1286709   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1286710   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1286711   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1286712   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1286713   +   end;
MPRINT(EM_DIAGRAM):   end;
1286714   +end;
MPRINT(EM_DIAGRAM):   end;
1286715   +
1286716   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1286717   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1286718   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1286719   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1286720   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1286721   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1286722   +end;
MPRINT(EM_DIAGRAM):   end;
1286723   +else do;
MPRINT(EM_DIAGRAM):   else do;
1286724   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1286725   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1286726   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1286727   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1286728   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1286729   +   end;
MPRINT(EM_DIAGRAM):   end;
1286730   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1286731   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1286732   +   end;
MPRINT(EM_DIAGRAM):   end;
1286733   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1286734   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1286735   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1286736   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1286737   +   end;
MPRINT(EM_DIAGRAM):   end;
1286738   +end;
MPRINT(EM_DIAGRAM):   end;
1286739   +
1286740   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1286741   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1286742   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1286743   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1286744   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1286745   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1286746   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1286747   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1286748   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1286749   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1286750   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1286751   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1286752   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1286753   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1286754   +end;
MPRINT(EM_DIAGRAM):   end;
1286755   +else do;
MPRINT(EM_DIAGRAM):   else do;
1286756   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1286757   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1286758   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1286759   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1286760   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1286761   +   end;
MPRINT(EM_DIAGRAM):   end;
1286762   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1286763   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1286764   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1286765   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1286766   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1286767   +   end;
MPRINT(EM_DIAGRAM):   end;
1286768   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1286769   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1286770   +   end;
MPRINT(EM_DIAGRAM):   end;
1286771   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1286772   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1286773   +   end;
MPRINT(EM_DIAGRAM):   end;
1286774   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1286775   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1286776   +   end;
MPRINT(EM_DIAGRAM):   end;
1286777   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1286778   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1286779   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1286780   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1286781   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1286782   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1286783   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1286784   +   end;
MPRINT(EM_DIAGRAM):   end;
1286785   +end;
MPRINT(EM_DIAGRAM):   end;
1286786   +
1286787   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1286788   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1286789   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1286790   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1286791   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1286792   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1286793   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1286794   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1286795   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1286796   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1286797   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1286798   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1286799   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1286800   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1286801   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1286802   +end;
MPRINT(EM_DIAGRAM):   end;
1286803   +else do;
MPRINT(EM_DIAGRAM):   else do;
1286804   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1286805   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1286806   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1286807   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1286808   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1286809   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1286810   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1286811   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1286812   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1286813   +         end;
MPRINT(EM_DIAGRAM):   end;
1286814   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1286815   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1286816   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1286817   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1286818   +            end;
MPRINT(EM_DIAGRAM):   end;
1286819   +         end;
MPRINT(EM_DIAGRAM):   end;
1286820   +      end;
MPRINT(EM_DIAGRAM):   end;
1286821   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1286822   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1286823   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1286824   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1286825   +         end;
MPRINT(EM_DIAGRAM):   end;
1286826   +      end;
MPRINT(EM_DIAGRAM):   end;
1286827   +   end;
MPRINT(EM_DIAGRAM):   end;
1286828   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1286829   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1286830   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1286831   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1286832   +      end;
MPRINT(EM_DIAGRAM):   end;
1286833   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1286834   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1286835   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1286836   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1286837   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1286838   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1286839   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1286840   +         end;
MPRINT(EM_DIAGRAM):   end;
1286841   +      end;
MPRINT(EM_DIAGRAM):   end;
1286842   +   end;
MPRINT(EM_DIAGRAM):   end;
1286843   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1286844   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1286845   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1286846   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1286847   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1286848   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1286849   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1286850   +   end;
MPRINT(EM_DIAGRAM):   end;
1286851   +end;
MPRINT(EM_DIAGRAM):   end;
1286852   +
1286853   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1286854   +*** Checking missing input Interval
1286855   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1286856   +
1286857   +IF NMISS(
1286858   +   AcceptedCmpTotal ,
1286859   +   Age ,
1286860   +   Frq ,
1286861   +   Income ,
1286862   +   Kidhome ,
1286863   +   Mnt ,
1286864   +   MntFishProducts ,
1286865   +   MntFruits ,
1286866   +   MntGoldProds ,
1286867   +   MntMeatProducts ,
1286868   +   MntSweetProducts ,
1286869   +   MntWines ,
1286870   +   MonthsAsCustomer ,
1286871   +   NumCatalogPurchases ,
1286872   +   NumDealsPurchases ,
1286873   +   NumDistPurchases ,
1286874   +   NumStorePurchases ,
1286875   +   NumWebPurchases ,
1286876   +   NumWebVisitsMonth ,
1286877   +   RFMstat ,
1286878   +   RMntFrq ,
1286879   +   Recency ,
1286880   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1286881   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1286882   +
1286883   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1286884   +END;
MPRINT(EM_DIAGRAM):   END;
1286885   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1286886   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1286887   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1286888   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1286889   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1286890   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1286891   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1286892   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1286893   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1286894   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1286895   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1286896   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1286897   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1286898   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1286899   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1286900   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1286901   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1286902   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1286903   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1286904   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1286905   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1286906   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1286907   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1286908   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1286909   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1286910   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1286911   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1286912   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1286913   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1286914   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1286915   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1286916   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1286917   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1286918   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1286919   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1286920   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1286921   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1286922   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1286923   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1286924   +END;
MPRINT(EM_DIAGRAM):   END;
1286925   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1286926   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1286927   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1286928   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1286929   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1286930   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1286931   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1286932   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1286933   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1286934   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1286935   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1286936   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1286937   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1286938   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1286939   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1286940   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1286941   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1286942   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1286943   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1286944   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1286945   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1286946   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1286947   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1286948   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1286949   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1286950   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1286951   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1286952   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1286953   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1286954   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1286955   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1286956   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1286957   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1286958   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1286959   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1286960   +   ELSE S_NumCatalogPurchases
1286961   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1286962   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1286963   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1286964   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1286965   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1286966   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1286967   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1286968   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1286969   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1286970   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1286971   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1286972   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1286973   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1286974   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1286975   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1286976   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1286977   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1286978   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1286979   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1286980   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1286981   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1286982   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1286983   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1286984   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1286985   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1286986   +END;
MPRINT(EM_DIAGRAM):   END;
1286987   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1286988   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1286989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1286990   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1286991   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1286992   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1286993   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1286994   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1286995   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1286996   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1286997   +   H1x1_1  =     0.26227897937716 * S_AcceptedCmpTotal
1286998   +          +     -0.0155758157867 * S_Age  +    -0.20268934440257 * S_Frq
1286999   +          +    -0.18529976542103 * S_Income  +     0.18038928903961 *
1287000   +        S_Kidhome  +    -0.28961354349068 * S_Mnt  +    -0.05151010840858 *
1287001   +        S_MntFishProducts  +    -0.03759341636928 * S_MntFruits
1287002   +          +     0.01305575717465 * S_MntGoldProds  +     0.24307680778257 *
1287003   +        S_MntMeatProducts  +    -0.02893363709307 * S_MntSweetProducts
1287004   +          +    -0.35324697751403 * S_MntWines  +    -0.00781254837323 *
1287005   +        S_MonthsAsCustomer  +     0.15222992290422 * S_NumCatalogPurchases
1287006   +          +     0.09708841024031 * S_NumDealsPurchases
1287007   +          +    -0.29075561032014 * S_NumDistPurchases
1287008   +          +    -0.14495394259873 * S_NumStorePurchases
1287009   +          +     0.11890705145732 * S_NumWebPurchases
1287010   +          +    -0.16954189911344 * S_NumWebVisitsMonth
1287011   +          +     0.12377939462638 * S_RFMstat  +    -0.05870604523801 *
1287012   +        S_RMntFrq  +     0.17150719398884 * S_Recency
1287013   +          +     0.13642607109645 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.26227897937716 * S_AcceptedCmpTotal + -0.0155758157867 * 
S_Age + -0.20268934440257 * S_Frq + -0.18529976542103 * S_Income + 0.18038928903961 * 
S_Kidhome + -0.28961354349068 * S_Mnt + -0.05151010840858 * S_MntFishProducts + 
-0.03759341636928 * S_MntFruits + 0.01305575717465 * S_MntGoldProds + 0.24307680778257 * 
S_MntMeatProducts + -0.02893363709307 * S_MntSweetProducts + -0.35324697751403 * S_MntWines + 
-0.00781254837323 * S_MonthsAsCustomer + 0.15222992290422 * S_NumCatalogPurchases + 
0.09708841024031 * S_NumDealsPurchases + -0.29075561032014 * S_NumDistPurchases + 
-0.14495394259873 * S_NumStorePurchases + 0.11890705145732 * S_NumWebPurchases + 
-0.16954189911344 * S_NumWebVisitsMonth + 0.12377939462638 * S_RFMstat + -0.05870604523801 * 
S_RMntFrq + 0.17150719398884 * S_Recency + 0.13642607109645 * S_Teenhome ;
1287014   +   H1x1_2  =     0.26173967942961 * S_AcceptedCmpTotal
1287015   +          +    -0.00424968908882 * S_Age  +    -0.07102902276221 * S_Frq
1287016   +          +     0.17373040625452 * S_Income  +    -0.12612693849717 *
1287017   +        S_Kidhome  +    -0.40114393645566 * S_Mnt  +    -0.06800009910731 *
1287018   +        S_MntFishProducts  +    -0.06681994193124 * S_MntFruits
1287019   +          +     0.00602505287702 * S_MntGoldProds  +     0.29533767747106 *
1287020   +        S_MntMeatProducts  +    -0.06832235425976 * S_MntSweetProducts
1287021   +          +    -0.44970327281811 * S_MntWines  +    -0.01061648191158 *
1287022   +        S_MonthsAsCustomer  +      0.3402332775449 * S_NumCatalogPurchases
1287023   +          +     0.16274478997892 * S_NumDealsPurchases
1287024   +          +     0.03966958784582 * S_NumDistPurchases
1287025   +          +    -0.04714110726598 * S_NumStorePurchases
1287026   +          +    -0.02124229528082 * S_NumWebPurchases
1287027   +          +     0.29753299776832 * S_NumWebVisitsMonth
1287028   +          +     0.08114418100212 * S_RFMstat  +     0.39051989081881 *
1287029   +        S_RMntFrq  +     -0.3340129986623 * S_Recency
1287030   +          +    -0.11108871458308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.26173967942961 * S_AcceptedCmpTotal + -0.00424968908882 * 
S_Age + -0.07102902276221 * S_Frq + 0.17373040625452 * S_Income + -0.12612693849717 * 
S_Kidhome + -0.40114393645566 * S_Mnt + -0.06800009910731 * S_MntFishProducts + 
-0.06681994193124 * S_MntFruits + 0.00602505287702 * S_MntGoldProds + 0.29533767747106 * 
S_MntMeatProducts + -0.06832235425976 * S_MntSweetProducts + -0.44970327281811 * S_MntWines + 
-0.01061648191158 * S_MonthsAsCustomer + 0.3402332775449 * S_NumCatalogPurchases + 
0.16274478997892 * S_NumDealsPurchases + 0.03966958784582 * S_NumDistPurchases + 
-0.04714110726598 * S_NumStorePurchases + -0.02124229528082 * S_NumWebPurchases + 
0.29753299776832 * S_NumWebVisitsMonth + 0.08114418100212 * S_RFMstat + 0.39051989081881 * 
S_RMntFrq + -0.3340129986623 * S_Recency + -0.11108871458308 * S_Teenhome ;
1287031   +   H1x1_1  = H1x1_1  +      0.1756873442571 * AcceptedCmp10
1287032   +          +     0.31180024044306 * AcceptedCmp20  +     0.29619883713337 *
1287033   +        AcceptedCmp30  +     0.30154500722412 * AcceptedCmp40
1287034   +          +     0.19297823461379 * AcceptedCmp50  +     -0.2612666063344 *
1287035   +        Complain0  +    -0.07979877068908 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.1756873442571 * AcceptedCmp10 + 0.31180024044306 * 
AcceptedCmp20 + 0.29619883713337 * AcceptedCmp30 + 0.30154500722412 * AcceptedCmp40 + 
0.19297823461379 * AcceptedCmp50 + -0.2612666063344 * Complain0 + -0.07979877068908 * 
HigherEducationBinary0 ;
1287036   +   H1x1_2  = H1x1_2  +      0.0093987850789 * AcceptedCmp10
1287037   +          +     0.01121417299451 * AcceptedCmp20  +     0.02978720081114 *
1287038   +        AcceptedCmp30  +     0.03675035164823 * AcceptedCmp40
1287039   +          +      0.0326403700043 * AcceptedCmp50  +     0.12620299225555 *
1287040   +        Complain0  +    -0.08132205666396 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.0093987850789 * AcceptedCmp10 + 0.01121417299451 * 
AcceptedCmp20 + 0.02978720081114 * AcceptedCmp30 + 0.03675035164823 * AcceptedCmp40 + 
0.0326403700043 * AcceptedCmp50 + 0.12620299225555 * Complain0 + -0.08132205666396 * 
HigherEducationBinary0 ;
1287041   +   H1x1_1  = H1x1_1  +    -0.03360721558666 * Education2n_Cycle
1287042   +          +     0.15032252273168 * EducationBasic  +    -0.00292639237041 *
1287043   +        EducationGraduation  +     0.00619669837452 * EducationMaster
1287044   +          +    -0.05037639679806 * Marital_StatusDivorced
1287045   +          +     0.28781968727878 * Marital_StatusMarried
1287046   +          +    -0.20382417074384 * Marital_StatusSingle
1287047   +          +     0.20088888064707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03360721558666 * Education2n_Cycle + 
0.15032252273168 * EducationBasic + -0.00292639237041 * EducationGraduation + 0.00619669837452 
* EducationMaster + -0.05037639679806 * Marital_StatusDivorced + 0.28781968727878 * 
Marital_StatusMarried + -0.20382417074384 * Marital_StatusSingle + 0.20088888064707 * 
Marital_StatusTogether ;
1287048   +   H1x1_2  = H1x1_2  +     0.12543856607452 * Education2n_Cycle
1287049   +          +      0.0095562801112 * EducationBasic  +    -0.04438983662274 *
1287050   +        EducationGraduation  +    -0.06952670554019 * EducationMaster
1287051   +          +     0.06970969219123 * Marital_StatusDivorced
1287052   +          +    -0.15787475744986 * Marital_StatusMarried
1287053   +          +     0.14345344072192 * Marital_StatusSingle
1287054   +          +    -0.12758942067533 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12543856607452 * Education2n_Cycle + 0.0095562801112 
* EducationBasic + -0.04438983662274 * EducationGraduation + -0.06952670554019 * 
EducationMaster + 0.06970969219123 * Marital_StatusDivorced + -0.15787475744986 * 
Marital_StatusMarried + 0.14345344072192 * Marital_StatusSingle + -0.12758942067533 * 
Marital_StatusTogether ;
1287055   +   H1x1_1  =     0.90517220350758 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.90517220350758 + H1x1_1 ;
1287056   +   H1x1_2  =    -0.60383186342134 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.60383186342134 + H1x1_2 ;
1287057   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
1287058   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
1287059   +END;
MPRINT(EM_DIAGRAM):   END;
1287060   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1287061   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1287062   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1287063   +END;
MPRINT(EM_DIAGRAM):   END;
1287064   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1287065   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1287066   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1287067   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1287068   +   P_DepVar1  =     -11.151440981908 * H1x1_1  +     16.6040498320868 * H1x1_2
1287069   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.151440981908 * H1x1_1 + 16.6040498320868 * H1x1_2 ;
1287070   +   P_DepVar1  =     2.38025141404985 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.38025141404985 + P_DepVar1 ;
1287071   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1287072   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1287073   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1287074   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1287075   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1287076   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1287077   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1287078   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1287079   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1287080   +END;
MPRINT(EM_DIAGRAM):   END;
1287081   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1287082   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1287083   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1287084   +END;
MPRINT(EM_DIAGRAM):   END;
1287085   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1287086   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1287087   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1287088   +END;
MPRINT(EM_DIAGRAM):   END;
1287089   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1287090   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1287091   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1287092   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1287093   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1287094   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1287095   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1287096   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1287097   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1287098   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1287099   +END;
MPRINT(EM_DIAGRAM):   END;
1287100   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1287101   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1287102   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1287103   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1287104    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1287105    quit;
1287106    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1287107    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1287108    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1287109    retain ID 2 Node "AutoNeural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural7";
1287110    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1287111    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287112    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1287113    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1287114    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287115    proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME 
CREATOR);
1287116    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1287117    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1287118    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1287119    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1287120    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1287121    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287122    proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
1287123    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1287124    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1287125    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1287126    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287127    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1287128    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1287129    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1287130    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287131    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1287132    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1287132  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1359 rows and 5 columns.

1287133    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1287134    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
1287135    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1359 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1359 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287136    filename _pref
1287136  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1287137    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1287138    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1287139   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1287140   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1287141   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1287142   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1287143   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1287144   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1287145    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1287146    quit;
1287147    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1287148    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1287149    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1287150    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1287151    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1287152    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287153    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1287154    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1287155    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287156    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1287157    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1287158    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1287159    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1287160    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1287161    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1287162    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287163    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1287164    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1287165    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1287166    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1287167    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1287168    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1287169    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1287170    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1287171    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287172    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1287173    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1287173  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1287174    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287175    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
1287176    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1363 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287177    filename _pref
1287177  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1287178    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1287179    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1287180   +
1287181   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1287182   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1287182  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1287183   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1287184   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1287185   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1287186   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1287187   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1287188    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1287189    quit;
1287190    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1287191    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1287192    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1287193    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1287194    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1287195    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1287196    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1287197    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1287198    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287199    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1287200    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1287201    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287202    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1287203    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1287204    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1287205    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287206    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1287207    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287208    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1287209    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1287210    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287211    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1287212    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1287213    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1287214    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287215    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1287216    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1287216  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1287217    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1287218    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
1287219    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1402 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287220    filename _pref
1287220  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1287221    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1287222    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1287223   +
1287224   +
1287225   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1287226   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1287227   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1287228   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1287229   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1287230   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1287231   +
1287232   +
1287233   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1287234   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1287235   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1287236   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1287237   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1287238   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1287239   +
1287240   +
1287241   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1287242   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1287243   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1287244   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1287245   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1287246   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1287247   +
1287248   +
1287249   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1287250   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1287251   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1287252   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1287253   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1287254   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1287255   +
1287256   +
1287257   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1287258   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1287259   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1287260   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1287261   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1287262   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1287263   +
1287264   +
1287265   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1287266   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1287267   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1287268   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1287269   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1287270   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1287271   +
1287272   +
1287273   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1287274   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1287275   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1287276   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1287277   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1287278   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1287279   +
1287280   +
1287281   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1287282   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1287283   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1287284   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1287285   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1287286   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1287287   +if
1287288   +_FILTERNORM1 not in ( '.')
1287289   + and
1287290   +_FILTERNORM2 not in ( '.')
1287291   + and
1287292   +_FILTERNORM3 not in ( '.')
1287293   + and
1287294   +_FILTERNORM4 not in ( '.')
1287295   + and
1287296   +_FILTERNORM5 not in ( '.')
1287297   + and
1287298   +_FILTERNORM6 not in ( '.')
1287299   + and
1287300   +_FILTERNORM7 not in ( ' ')
1287301   + and
1287302   +_FILTERNORM8 not in ( ' ')
1287303   +and
1287304   +( Dt_Customer ne .)
1287305   +and ( Income ne . and (Income<=107000))
1287306   +and ( Kidhome ne .)
1287307   +and ( MntFishProducts ne .)
1287308   +and ( MntFruits ne .)
1287309   +and ( MntGoldProds ne .)
1287310   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1287311   +and ( MntSweetProducts ne .)
1287312   +and ( MntWines ne .)
1287313   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1287314   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1287315   +and ( NumStorePurchases ne .)
1287316   +and ( NumWebPurchases ne .)
1287317   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1287318   +and ( Recency ne .)
1287319   +and ( Teenhome ne .)
1287320   +and ( Year_Birth ne .)
1287321   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1287322   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1287323   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1287324   +end;
MPRINT(EM_DIAGRAM):   end;
1287325   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1287326   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1287327    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1287328    quit;
1287329    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1287330    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1287331    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1287332    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1287333    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1287334    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287335    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1287336    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1287337    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1287338    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1287339    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1287340    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287341    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1287342    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1287343    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1287344    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287345    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1287346    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1287347    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1287348    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1287349    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287350    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1287351    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1287352    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1287353    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1287354    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1287355    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1287355  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1287356    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287357    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
1287358    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1468 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287359    %macro varDept(fcmpdata=,id=);
1287360    %global nobs&id scoreFlag&id;
1287361    %let scoreFlag&id = 0;
1287362    %if &id=1 or ^&fcmpStart %then %do;
1287363    proc sort data=&fcmpdata out=_temp&id nodupkey;
1287364    by NAME;
1287365    where id=&id and LHS in( %let j=1;
1287366    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1287367    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1287368    "&var" %let j = %eval(&j+1);
1287369    %end;
1287370    );
1287371    run;
1287372    %let dsid = %sysfunc(open(_temp&id));
1287373    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1287374    %let dsid = %sysfunc(close(&dsid));
1287375    %if &&nobs&id %then %do;
1287376    %let scoreFlag&id = 1;
1287377    %let fcmpStart = 1;
1287378    %end;
1287379    %else %let fcmpStart = 0;
1287380    %end;
1287381    %else %do;
1287382    proc sort data=&fcmpdata out=_tempid;
1287383    where id=&id;
1287384    by LHS;
1287385    run;
1287386    %let dsid = %sysfunc(open(_tempid));
1287387    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1287388    %let dsid = %sysfunc(close(&dsid));
1287389    %if ^&&nobs&id %then %do;
1287390    proc datasets lib=work nolist;
1287391    delete _tempid;
1287392    run;
1287393    quit;
1287394    %end;
1287395    %else %do;
1287396    data _tempAll;
1287397    set %let j=%eval(&id-1);
1287398    %do x=1 %to &j;
1287399    %if &&nobs&x %then %do;
1287400    _temp&x %end;
1287401    %end;
1287402    ;
1287403    run;
1287404    proc sql;
1287405    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1287405  ! work._tempid p2 where p.name=p2.lhs;
1287406    quit;
1287407    data _temp&id;
1287408    set _temp&id;
1287409    where LHS ne '' and NAME ne '' and Node ne '';
1287410    run;
1287411    proc datasets lib=work nolist;
1287412    delete _tempAll;
1287413    run;
1287414    %let dsid = %sysfunc(open(_temp&id));
1287415    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1287416    %let dsid = %sysfunc(close(&dsid));
1287417    %if ^&&nobs&id %then %do;
1287418    proc datasets lib=work nolist;
1287419    delete _temp&id;
1287420    run;
1287421    quit;
1287422    %end;
1287423    %else %do;
1287424    %let scoreFlag&id = 1;
1287425    data _temp&id;
1287426    set _temp&id;
1287427    where LHS ne NAME and node ne '';
1287428    run;
1287429    %let dsid = %sysfunc(open(_temp&id));
1287430    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1287431    %let dsid = %sysfunc(close(&dsid));
1287432    %if ^&&nobs&id %then %do;
1287433    proc datasets lib=work nolist;
1287434    delete _temp&id;
1287435    run;
1287436    quit;
1287437    %end;
1287438    %else %do;
1287439    proc sort data=_temp&id nodupkey;
1287440    by LHS NAME;
1287441    run;
1287442    %end;
1287443    %end;
1287444    %end;
1287445    %end;
1287446    %mend varDept;
1287447    %macro optCode(outdata=fcmpdata);
1287448    %global fcmpStart;
1287449    %let fcmpStart = 0;
1287450    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1287451    %let NumNodes=9;
1287452    %do k=1 %to &NumNodes;
1287453    %vardept(fcmpdata=&outdata, id=&k);
1287454    %end;
1287455    %mend optCode;
1287456    %optcode(outData=EMWS8.Ensmbl45_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 140 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 104 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 36 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 79 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1287457    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1287458    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1287459    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1287460    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1287461    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1287462    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1287463    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1287464    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287465    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1287466    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1287466  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1287467    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287468    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1287469    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1287470    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1287471    filename _pref
1287471  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
1287472    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1287473    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
1287474   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1287475   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1287476   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1287477   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1287478   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1287479   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1287480   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1287481   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1287482   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1287483   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1287484   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1287485   +LENGTH _WARN_ $4
1287486   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1287487   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1287488   +
1287489   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1287490   +
1287491   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1287492   +
1287493   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1287494   +
1287495   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1287496   +
1287497   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1287498   +
1287499   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1287500   +
1287501   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1287502   +
1287503   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1287504   +
1287505   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1287506   +
1287507   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1287508   +
1287509   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1287510   +
1287511   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1287512   +
1287513   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1287514   +
1287515   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1287516   +
1287517   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1287518   +
1287519   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1287520   +
1287521   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1287522   +
1287523   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1287524   +
1287525   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1287526   +
1287527   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1287528   +
1287529   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1287530   +
1287531   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1287532   +
1287533   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1287534   +
1287535   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1287536   +
1287537   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1287538   +
1287539   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1287540   +
1287541   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1287542   +
1287543   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1287544   +
1287545   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1287546   +
1287547   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1287548   +
1287549   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1287550   +
1287551   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1287552   +
1287553   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1287554   +
1287555   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1287556   +
1287557   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1287558   +
1287559   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1287560   +
1287561   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1287562   +
1287563   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1287564   +
1287565   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1287566   +
1287567   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1287568   +
1287569   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1287570   +
1287571   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1287572   +
1287573   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1287574   +
1287575   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
1287576   +
1287577   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1287578   +
1287579   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1287580   +
1287581   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1287582   +
1287583   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1287584   +
1287585   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1287586   +
1287587   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1287588   +
1287589   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
1287590   +
1287591   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1287592   +
1287593   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1287594   +
1287595   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1287596   +
1287597   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1287598   +
1287599   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1287600   +
1287601   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1287602   +
1287603   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
1287604   +
1287605   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1287606   +
1287607   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1287608   +
1287609   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1287610   +
1287611   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1287612   +
1287613   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1287614   +
1287615   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1287616   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1287617   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1287618   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1287619   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1287620   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1287621   +end;
MPRINT(EM_DIAGRAM):   end;
1287622   +else do;
MPRINT(EM_DIAGRAM):   else do;
1287623   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1287624   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1287625   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1287626   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1287627   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1287628   +   end;
MPRINT(EM_DIAGRAM):   end;
1287629   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1287630   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1287631   +   end;
MPRINT(EM_DIAGRAM):   end;
1287632   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1287633   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1287634   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1287635   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1287636   +   end;
MPRINT(EM_DIAGRAM):   end;
1287637   +end;
MPRINT(EM_DIAGRAM):   end;
1287638   +
1287639   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1287640   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1287641   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1287642   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1287643   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1287644   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1287645   +end;
MPRINT(EM_DIAGRAM):   end;
1287646   +else do;
MPRINT(EM_DIAGRAM):   else do;
1287647   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1287648   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1287649   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1287650   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1287651   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1287652   +   end;
MPRINT(EM_DIAGRAM):   end;
1287653   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1287654   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1287655   +   end;
MPRINT(EM_DIAGRAM):   end;
1287656   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1287657   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1287658   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1287659   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1287660   +   end;
MPRINT(EM_DIAGRAM):   end;
1287661   +end;
MPRINT(EM_DIAGRAM):   end;
1287662   +
1287663   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1287664   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1287665   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1287666   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1287667   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1287668   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1287669   +end;
MPRINT(EM_DIAGRAM):   end;
1287670   +else do;
MPRINT(EM_DIAGRAM):   else do;
1287671   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1287672   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1287673   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1287674   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1287675   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1287676   +   end;
MPRINT(EM_DIAGRAM):   end;
1287677   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1287678   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1287679   +   end;
MPRINT(EM_DIAGRAM):   end;
1287680   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1287681   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1287682   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1287683   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1287684   +   end;
MPRINT(EM_DIAGRAM):   end;
1287685   +end;
MPRINT(EM_DIAGRAM):   end;
1287686   +
1287687   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1287688   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1287689   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1287690   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1287691   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1287692   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1287693   +end;
MPRINT(EM_DIAGRAM):   end;
1287694   +else do;
MPRINT(EM_DIAGRAM):   else do;
1287695   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1287696   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1287697   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1287698   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1287699   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1287700   +   end;
MPRINT(EM_DIAGRAM):   end;
1287701   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1287702   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1287703   +   end;
MPRINT(EM_DIAGRAM):   end;
1287704   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1287705   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1287706   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1287707   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1287708   +   end;
MPRINT(EM_DIAGRAM):   end;
1287709   +end;
MPRINT(EM_DIAGRAM):   end;
1287710   +
1287711   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1287712   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1287713   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1287714   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1287715   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1287716   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1287717   +end;
MPRINT(EM_DIAGRAM):   end;
1287718   +else do;
MPRINT(EM_DIAGRAM):   else do;
1287719   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1287720   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1287721   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1287722   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1287723   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1287724   +   end;
MPRINT(EM_DIAGRAM):   end;
1287725   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1287726   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1287727   +   end;
MPRINT(EM_DIAGRAM):   end;
1287728   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1287729   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1287730   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1287731   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1287732   +   end;
MPRINT(EM_DIAGRAM):   end;
1287733   +end;
MPRINT(EM_DIAGRAM):   end;
1287734   +
1287735   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1287736   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1287737   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1287738   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1287739   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1287740   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1287741   +end;
MPRINT(EM_DIAGRAM):   end;
1287742   +else do;
MPRINT(EM_DIAGRAM):   else do;
1287743   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1287744   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1287745   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1287746   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1287747   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1287748   +   end;
MPRINT(EM_DIAGRAM):   end;
1287749   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1287750   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1287751   +   end;
MPRINT(EM_DIAGRAM):   end;
1287752   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1287753   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1287754   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1287755   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1287756   +   end;
MPRINT(EM_DIAGRAM):   end;
1287757   +end;
MPRINT(EM_DIAGRAM):   end;
1287758   +
1287759   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1287760   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1287761   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1287762   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1287763   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1287764   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1287765   +end;
MPRINT(EM_DIAGRAM):   end;
1287766   +else do;
MPRINT(EM_DIAGRAM):   else do;
1287767   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1287768   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1287769   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1287770   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1287771   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1287772   +   end;
MPRINT(EM_DIAGRAM):   end;
1287773   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1287774   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1287775   +   end;
MPRINT(EM_DIAGRAM):   end;
1287776   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1287777   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1287778   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1287779   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1287780   +   end;
MPRINT(EM_DIAGRAM):   end;
1287781   +end;
MPRINT(EM_DIAGRAM):   end;
1287782   +
1287783   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1287784   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1287785   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1287786   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1287787   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1287788   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1287789   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1287790   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1287791   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1287792   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1287793   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1287794   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1287795   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1287796   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1287797   +end;
MPRINT(EM_DIAGRAM):   end;
1287798   +else do;
MPRINT(EM_DIAGRAM):   else do;
1287799   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1287800   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1287801   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1287802   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1287803   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1287804   +   end;
MPRINT(EM_DIAGRAM):   end;
1287805   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1287806   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1287807   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1287808   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1287809   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1287810   +   end;
MPRINT(EM_DIAGRAM):   end;
1287811   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1287812   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1287813   +   end;
MPRINT(EM_DIAGRAM):   end;
1287814   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1287815   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1287816   +   end;
MPRINT(EM_DIAGRAM):   end;
1287817   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1287818   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1287819   +   end;
MPRINT(EM_DIAGRAM):   end;
1287820   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1287821   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1287822   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1287823   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1287824   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1287825   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1287826   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1287827   +   end;
MPRINT(EM_DIAGRAM):   end;
1287828   +end;
MPRINT(EM_DIAGRAM):   end;
1287829   +
1287830   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1287831   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1287832   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1287833   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1287834   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1287835   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1287836   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1287837   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1287838   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1287839   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1287840   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1287841   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1287842   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1287843   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1287844   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1287845   +end;
MPRINT(EM_DIAGRAM):   end;
1287846   +else do;
MPRINT(EM_DIAGRAM):   else do;
1287847   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1287848   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1287849   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1287850   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1287851   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1287852   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1287853   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1287854   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1287855   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1287856   +         end;
MPRINT(EM_DIAGRAM):   end;
1287857   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1287858   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1287859   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1287860   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1287861   +            end;
MPRINT(EM_DIAGRAM):   end;
1287862   +         end;
MPRINT(EM_DIAGRAM):   end;
1287863   +      end;
MPRINT(EM_DIAGRAM):   end;
1287864   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1287865   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1287866   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1287867   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1287868   +         end;
MPRINT(EM_DIAGRAM):   end;
1287869   +      end;
MPRINT(EM_DIAGRAM):   end;
1287870   +   end;
MPRINT(EM_DIAGRAM):   end;
1287871   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1287872   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1287873   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1287874   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1287875   +      end;
MPRINT(EM_DIAGRAM):   end;
1287876   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1287877   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1287878   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1287879   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1287880   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1287881   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1287882   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1287883   +         end;
MPRINT(EM_DIAGRAM):   end;
1287884   +      end;
MPRINT(EM_DIAGRAM):   end;
1287885   +   end;
MPRINT(EM_DIAGRAM):   end;
1287886   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1287887   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1287888   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1287889   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1287890   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1287891   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1287892   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1287893   +   end;
MPRINT(EM_DIAGRAM):   end;
1287894   +end;
MPRINT(EM_DIAGRAM):   end;
1287895   +
1287896   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1287897   +*** Checking missing input Interval
1287898   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1287899   +
1287900   +IF NMISS(
1287901   +   AcceptedCmpTotal ,
1287902   +   Age ,
1287903   +   Frq ,
1287904   +   Income ,
1287905   +   Kidhome ,
1287906   +   Mnt ,
1287907   +   MntFishProducts ,
1287908   +   MntFruits ,
1287909   +   MntGoldProds ,
1287910   +   MntMeatProducts ,
1287911   +   MntSweetProducts ,
1287912   +   MntWines ,
1287913   +   MonthsAsCustomer ,
1287914   +   NumCatalogPurchases ,
1287915   +   NumDealsPurchases ,
1287916   +   NumDistPurchases ,
1287917   +   NumStorePurchases ,
1287918   +   NumWebPurchases ,
1287919   +   NumWebVisitsMonth ,
1287920   +   RFMstat ,
1287921   +   RMntFrq ,
1287922   +   Recency ,
1287923   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1287924   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1287925   +
1287926   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1287927   +END;
MPRINT(EM_DIAGRAM):   END;
1287928   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1287929   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1287930   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1287931   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1287932   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1287933   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1287934   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1287935   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1287936   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1287937   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1287938   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1287939   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1287940   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1287941   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1287942   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1287943   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1287944   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1287945   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1287946   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1287947   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1287948   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1287949   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1287950   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1287951   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1287952   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1287953   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1287954   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1287955   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1287956   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1287957   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1287958   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1287959   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1287960   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1287961   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1287962   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1287963   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1287964   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1287965   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1287966   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1287967   +END;
MPRINT(EM_DIAGRAM):   END;
1287968   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1287969   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1287970   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1287971   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1287972   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1287973   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1287974   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1287975   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1287976   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1287977   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1287978   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1287979   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1287980   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1287981   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1287982   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1287983   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1287984   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1287985   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1287986   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1287987   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1287988   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1287989   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1287990   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1287991   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1287992   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1287993   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1287994   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1287995   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1287996   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1287997   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1287998   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1287999   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1288000   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1288001   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1288002   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1288003   +   ELSE S_NumCatalogPurchases
1288004   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1288005   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1288006   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1288007   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1288008   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1288009   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1288010   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1288011   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1288012   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1288013   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1288014   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1288015   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1288016   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1288017   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1288018   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1288019   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1288020   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1288021   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1288022   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1288023   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1288024   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1288025   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1288026   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1288027   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1288028   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1288029   +END;
MPRINT(EM_DIAGRAM):   END;
1288030   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1288031   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1288032   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1288033   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1288034   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1288035   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1288036   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1288037   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1288038   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1288039   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1288040   +   H1x1_1  =     0.63316204656896 * S_AcceptedCmpTotal
1288041   +          +    -0.24884200883415 * S_Age  +      -0.236584005151 * S_Frq
1288042   +          +     0.25406117591995 * S_Income  +    -0.56304122955704 *
1288043   +        S_Kidhome  +    -0.23687782938793 * S_Mnt  +    -0.09770906650074 *
1288044   +        S_MntFishProducts  +    -0.73487360819716 * S_MntFruits
1288045   +          +     0.14293909908147 * S_MntGoldProds  +     2.25015000307426 *
1288046   +        S_MntMeatProducts  +    -0.42178958150661 * S_MntSweetProducts
1288047   +          +    -2.35340366839307 * S_MntWines  +    -0.02380265380154 *
1288048   +        S_MonthsAsCustomer  +     1.16509321438746 * S_NumCatalogPurchases
1288049   +          +     1.17276395296242 * S_NumDealsPurchases
1288050   +          +     0.26632768295477 * S_NumDistPurchases
1288051   +          +    -1.26575615903579 * S_NumStorePurchases
1288052   +          +    -0.95316107557927 * S_NumWebPurchases
1288053   +          +     1.01828574356487 * S_NumWebVisitsMonth
1288054   +          +       0.795866263515 * S_RFMstat  +    -0.20490378142832 *
1288055   +        S_RMntFrq  +    -0.82943281422857 * S_Recency
1288056   +          +     0.16132418388418 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.63316204656896 * S_AcceptedCmpTotal + -0.24884200883415 * 
S_Age + -0.236584005151 * S_Frq + 0.25406117591995 * S_Income + -0.56304122955704 * S_Kidhome 
+ -0.23687782938793 * S_Mnt + -0.09770906650074 * S_MntFishProducts + -0.73487360819716 * 
S_MntFruits + 0.14293909908147 * S_MntGoldProds + 2.25015000307426 * S_MntMeatProducts + 
-0.42178958150661 * S_MntSweetProducts + -2.35340366839307 * S_MntWines + -0.02380265380154 * 
S_MonthsAsCustomer + 1.16509321438746 * S_NumCatalogPurchases + 1.17276395296242 * 
S_NumDealsPurchases + 0.26632768295477 * S_NumDistPurchases + -1.26575615903579 * 
S_NumStorePurchases + -0.95316107557927 * S_NumWebPurchases + 1.01828574356487 * 
S_NumWebVisitsMonth + 0.795866263515 * S_RFMstat + -0.20490378142832 * S_RMntFrq + 
-0.82943281422857 * S_Recency + 0.16132418388418 * S_Teenhome ;
1288057   +   H1x1_2  =    -0.43482920479481 * S_AcceptedCmpTotal
1288058   +          +     0.53350211221915 * S_Age  +    -0.06797700766223 * S_Frq
1288059   +          +     0.13771322007949 * S_Income  +     0.87012019559698 *
1288060   +        S_Kidhome  +     0.06026853274247 * S_Mnt  +    -0.43150595882972 *
1288061   +        S_MntFishProducts  +    -0.13728591661063 * S_MntFruits
1288062   +          +     0.35443873962923 * S_MntGoldProds  +     0.28102965401547 *
1288063   +        S_MntMeatProducts  +     0.52367949052365 * S_MntSweetProducts
1288064   +          +     0.35553595364078 * S_MntWines  +     0.37892120128383 *
1288065   +        S_MonthsAsCustomer  +     0.59057645965187 * S_NumCatalogPurchases
1288066   +          +     1.14485571201233 * S_NumDealsPurchases
1288067   +          +     0.21414266588987 * S_NumDistPurchases
1288068   +          +    -0.10530090074297 * S_NumStorePurchases
1288069   +          +    -0.41712321238458 * S_NumWebPurchases
1288070   +          +    -0.99760766791108 * S_NumWebVisitsMonth
1288071   +          +    -0.90203265666387 * S_RFMstat  +    -0.60947922673601 *
1288072   +        S_RMntFrq  +     1.10040128548883 * S_Recency
1288073   +          +     0.16728431679949 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.43482920479481 * S_AcceptedCmpTotal + 0.53350211221915 * 
S_Age + -0.06797700766223 * S_Frq + 0.13771322007949 * S_Income + 0.87012019559698 * S_Kidhome 
+ 0.06026853274247 * S_Mnt + -0.43150595882972 * S_MntFishProducts + -0.13728591661063 * 
S_MntFruits + 0.35443873962923 * S_MntGoldProds + 0.28102965401547 * S_MntMeatProducts + 
0.52367949052365 * S_MntSweetProducts + 0.35553595364078 * S_MntWines + 0.37892120128383 * 
S_MonthsAsCustomer + 0.59057645965187 * S_NumCatalogPurchases + 1.14485571201233 * 
S_NumDealsPurchases + 0.21414266588987 * S_NumDistPurchases + -0.10530090074297 * 
S_NumStorePurchases + -0.41712321238458 * S_NumWebPurchases + -0.99760766791108 * 
S_NumWebVisitsMonth + -0.90203265666387 * S_RFMstat + -0.60947922673601 * S_RMntFrq + 
1.10040128548883 * S_Recency + 0.16728431679949 * S_Teenhome ;
1288074   +   H1x1_3  =     0.26373486938499 * S_AcceptedCmpTotal
1288075   +          +    -0.22246756314756 * S_Age  +     0.49537720979115 * S_Frq
1288076   +          +     1.38815981786544 * S_Income  +    -0.93015968695331 *
1288077   +        S_Kidhome  +     0.11586216615481 * S_Mnt  +    -0.02105973515345 *
1288078   +        S_MntFishProducts  +    -0.28078442249811 * S_MntFruits
1288079   +          +    -0.01763878655129 * S_MntGoldProds  +     0.83934619541231 *
1288080   +        S_MntMeatProducts  +    -0.23417310915433 * S_MntSweetProducts
1288081   +          +    -0.29135819585991 * S_MntWines  +    -0.20792872642036 *
1288082   +        S_MonthsAsCustomer  +     1.05218745810839 * S_NumCatalogPurchases
1288083   +          +      0.7196418967437 * S_NumDealsPurchases
1288084   +          +     0.69035286374177 * S_NumDistPurchases
1288085   +          +     0.38027656631135 * S_NumStorePurchases
1288086   +          +    -0.18878358997924 * S_NumWebPurchases
1288087   +          +     1.61962062004798 * S_NumWebVisitsMonth
1288088   +          +    -0.04575386719745 * S_RFMstat  +     1.16358450490635 *
1288089   +        S_RMntFrq  +    -2.13821542142822 * S_Recency
1288090   +          +    -1.28960355207697 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.26373486938499 * S_AcceptedCmpTotal + -0.22246756314756 * 
S_Age + 0.49537720979115 * S_Frq + 1.38815981786544 * S_Income + -0.93015968695331 * S_Kidhome 
+ 0.11586216615481 * S_Mnt + -0.02105973515345 * S_MntFishProducts + -0.28078442249811 * 
S_MntFruits + -0.01763878655129 * S_MntGoldProds + 0.83934619541231 * S_MntMeatProducts + 
-0.23417310915433 * S_MntSweetProducts + -0.29135819585991 * S_MntWines + -0.20792872642036 * 
S_MonthsAsCustomer + 1.05218745810839 * S_NumCatalogPurchases + 0.7196418967437 * 
S_NumDealsPurchases + 0.69035286374177 * S_NumDistPurchases + 0.38027656631135 * 
S_NumStorePurchases + -0.18878358997924 * S_NumWebPurchases + 1.61962062004798 * 
S_NumWebVisitsMonth + -0.04575386719745 * S_RFMstat + 1.16358450490635 * S_RMntFrq + 
-2.13821542142822 * S_Recency + -1.28960355207697 * S_Teenhome ;
1288091   +   H1x1_4  =    -0.34331113295243 * S_AcceptedCmpTotal
1288092   +          +    -0.39878146063012 * S_Age  +     0.10068367322473 * S_Frq
1288093   +          +    -0.20171643525685 * S_Income  +    -0.76934260520569 *
1288094   +        S_Kidhome  +    -0.66782690219397 * S_Mnt  +     0.80905970181803 *
1288095   +        S_MntFishProducts  +    -0.03688782193215 * S_MntFruits
1288096   +          +     0.06641568264972 * S_MntGoldProds  +    -3.32390323965822 *
1288097   +        S_MntMeatProducts  +    -0.05413014598032 * S_MntSweetProducts
1288098   +          +     1.07708707113306 * S_MntWines  +     0.13185264889978 *
1288099   +        S_MonthsAsCustomer  +    -0.39476201074171 * S_NumCatalogPurchases
1288100   +          +    -0.00642902007204 * S_NumDealsPurchases
1288101   +          +     0.29785069480367 * S_NumDistPurchases
1288102   +          +    -0.42243322063147 * S_NumStorePurchases
1288103   +          +     0.54880896338383 * S_NumWebPurchases
1288104   +          +    -0.12525846016886 * S_NumWebVisitsMonth
1288105   +          +    -0.31397100953189 * S_RFMstat  +     -0.5192863720509 *
1288106   +        S_RMntFrq  +     0.10252211581449 * S_Recency
1288107   +          +     0.44223031313104 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.34331113295243 * S_AcceptedCmpTotal + -0.39878146063012 * 
S_Age + 0.10068367322473 * S_Frq + -0.20171643525685 * S_Income + -0.76934260520569 * 
S_Kidhome + -0.66782690219397 * S_Mnt + 0.80905970181803 * S_MntFishProducts + 
-0.03688782193215 * S_MntFruits + 0.06641568264972 * S_MntGoldProds + -3.32390323965822 * 
S_MntMeatProducts + -0.05413014598032 * S_MntSweetProducts + 1.07708707113306 * S_MntWines + 
0.13185264889978 * S_MonthsAsCustomer + -0.39476201074171 * S_NumCatalogPurchases + 
-0.00642902007204 * S_NumDealsPurchases + 0.29785069480367 * S_NumDistPurchases + 
-0.42243322063147 * S_NumStorePurchases + 0.54880896338383 * S_NumWebPurchases + 
-0.12525846016886 * S_NumWebVisitsMonth + -0.31397100953189 * S_RFMstat + -0.5192863720509 * 
S_RMntFrq + 0.10252211581449 * S_Recency + 0.44223031313104 * S_Teenhome ;
1288108   +   H1x1_5  =    -0.89949577087728 * S_AcceptedCmpTotal
1288109   +          +     -0.5133669560115 * S_Age  +     0.55814120515869 * S_Frq
1288110   +          +    -0.72790553700689 * S_Income  +     1.13470491167406 *
1288111   +        S_Kidhome  +     0.42465795563071 * S_Mnt  +     0.22642900369653 *
1288112   +        S_MntFishProducts  +    -0.10149694753146 * S_MntFruits
1288113   +          +    -0.05203167914723 * S_MntGoldProds  +    -0.42300460593042 *
1288114   +        S_MntMeatProducts  +    -0.11178206624825 * S_MntSweetProducts
1288115   +          +     1.57257994445012 * S_MntWines  +     0.02297554927807 *
1288116   +        S_MonthsAsCustomer  +    -0.60721423552141 * S_NumCatalogPurchases
1288117   +          +    -0.48404738328225 * S_NumDealsPurchases
1288118   +          +    -0.02464180457879 * S_NumDistPurchases
1288119   +          +     1.17201831082067 * S_NumStorePurchases
1288120   +          +     0.57453655167516 * S_NumWebPurchases
1288121   +          +    -1.94417019790248 * S_NumWebVisitsMonth
1288122   +          +     0.00073301476364 * S_RFMstat  +     0.12295343326875 *
1288123   +        S_RMntFrq  +      1.6169916658132 * S_Recency
1288124   +          +     0.09488579305439 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.89949577087728 * S_AcceptedCmpTotal + -0.5133669560115 * 
S_Age + 0.55814120515869 * S_Frq + -0.72790553700689 * S_Income + 1.13470491167406 * S_Kidhome 
+ 0.42465795563071 * S_Mnt + 0.22642900369653 * S_MntFishProducts + -0.10149694753146 * 
S_MntFruits + -0.05203167914723 * S_MntGoldProds + -0.42300460593042 * S_MntMeatProducts + 
-0.11178206624825 * S_MntSweetProducts + 1.57257994445012 * S_MntWines + 0.02297554927807 * 
S_MonthsAsCustomer + -0.60721423552141 * S_NumCatalogPurchases + -0.48404738328225 * 
S_NumDealsPurchases + -0.02464180457879 * S_NumDistPurchases + 1.17201831082067 * 
S_NumStorePurchases + 0.57453655167516 * S_NumWebPurchases + -1.94417019790248 * 
S_NumWebVisitsMonth + 0.00073301476364 * S_RFMstat + 0.12295343326875 * S_RMntFrq + 
1.6169916658132 * S_Recency + 0.09488579305439 * S_Teenhome ;
1288125   +   H1x1_6  =     0.01224996381937 * S_AcceptedCmpTotal
1288126   +          +     0.56818460209578 * S_Age  +    -0.50544994791872 * S_Frq
1288127   +          +    -0.39086889823619 * S_Income  +      0.2278709145292 *
1288128   +        S_Kidhome  +       0.221310975162 * S_Mnt  +     -0.2208719427117 *
1288129   +        S_MntFishProducts  +     0.33199116637803 * S_MntFruits
1288130   +          +    -0.20919304257884 * S_MntGoldProds  +     0.85155045239396 *
1288131   +        S_MntMeatProducts  +     0.32150401526792 * S_MntSweetProducts
1288132   +          +     0.24789026157513 * S_MntWines  +    -0.16427340869887 *
1288133   +        S_MonthsAsCustomer  +    -1.31657293247686 * S_NumCatalogPurchases
1288134   +          +    -1.49850531967483 * S_NumDealsPurchases
1288135   +          +    -0.82105466264223 * S_NumDistPurchases
1288136   +          +     0.29984603642824 * S_NumStorePurchases
1288137   +          +     0.06557123721611 * S_NumWebPurchases
1288138   +          +     1.04754749365002 * S_NumWebVisitsMonth
1288139   +          +     0.18881248406892 * S_RFMstat  +     0.26455728766984 *
1288140   +        S_RMntFrq  +     0.12396789666359 * S_Recency
1288141   +          +     0.04001049603668 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.01224996381937 * S_AcceptedCmpTotal + 0.56818460209578 * 
S_Age + -0.50544994791872 * S_Frq + -0.39086889823619 * S_Income + 0.2278709145292 * S_Kidhome 
+ 0.221310975162 * S_Mnt + -0.2208719427117 * S_MntFishProducts + 0.33199116637803 * 
S_MntFruits + -0.20919304257884 * S_MntGoldProds + 0.85155045239396 * S_MntMeatProducts + 
0.32150401526792 * S_MntSweetProducts + 0.24789026157513 * S_MntWines + -0.16427340869887 * 
S_MonthsAsCustomer + -1.31657293247686 * S_NumCatalogPurchases + -1.49850531967483 * 
S_NumDealsPurchases + -0.82105466264223 * S_NumDistPurchases + 0.29984603642824 * 
S_NumStorePurchases + 0.06557123721611 * S_NumWebPurchases + 1.04754749365002 * 
S_NumWebVisitsMonth + 0.18881248406892 * S_RFMstat + 0.26455728766984 * S_RMntFrq + 
0.12396789666359 * S_Recency + 0.04001049603668 * S_Teenhome ;
1288142   +   H1x1_1  = H1x1_1  +     -0.4293641198863 * AcceptedCmp10
1288143   +          +    -0.02562823362815 * AcceptedCmp20  +     0.16277388616218 *
1288144   +        AcceptedCmp30  +    -0.38952498475664 * AcceptedCmp40
1288145   +          +    -0.13756852377245 * AcceptedCmp50  +    -0.11393239206883 *
1288146   +        Complain0  +    -0.18422159910382 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.4293641198863 * AcceptedCmp10 + -0.02562823362815 * 
AcceptedCmp20 + 0.16277388616218 * AcceptedCmp30 + -0.38952498475664 * AcceptedCmp40 + 
-0.13756852377245 * AcceptedCmp50 + -0.11393239206883 * Complain0 + -0.18422159910382 * 
HigherEducationBinary0 ;
1288147   +   H1x1_2  = H1x1_2  +     -0.6690011671322 * AcceptedCmp10
1288148   +          +     0.30944418540454 * AcceptedCmp20  +     0.58989055832198 *
1288149   +        AcceptedCmp30  +    -0.11349554378017 * AcceptedCmp40
1288150   +          +     0.17747537507545 * AcceptedCmp50  +     0.31141201787728 *
1288151   +        Complain0  +    -0.14665102087088 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.6690011671322 * AcceptedCmp10 + 0.30944418540454 * 
AcceptedCmp20 + 0.58989055832198 * AcceptedCmp30 + -0.11349554378017 * AcceptedCmp40 + 
0.17747537507545 * AcceptedCmp50 + 0.31141201787728 * Complain0 + -0.14665102087088 * 
HigherEducationBinary0 ;
1288152   +   H1x1_3  = H1x1_3  +    -0.37718551551154 * AcceptedCmp10
1288153   +          +    -0.95419836616858 * AcceptedCmp20  +    -1.07782642598822 *
1288154   +        AcceptedCmp30  +    -0.36181507758379 * AcceptedCmp40
1288155   +          +    -0.20579221441057 * AcceptedCmp50  +     -0.2862570173476 *
1288156   +        Complain0  +     0.42095042003574 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.37718551551154 * AcceptedCmp10 + -0.95419836616858 
* AcceptedCmp20 + -1.07782642598822 * AcceptedCmp30 + -0.36181507758379 * AcceptedCmp40 + 
-0.20579221441057 * AcceptedCmp50 + -0.2862570173476 * Complain0 + 0.42095042003574 * 
HigherEducationBinary0 ;
1288157   +   H1x1_4  = H1x1_4  +     0.76282838117383 * AcceptedCmp10
1288158   +          +     0.17657215690894 * AcceptedCmp20  +     0.06936093547655 *
1288159   +        AcceptedCmp30  +    -0.31222684620157 * AcceptedCmp40
1288160   +          +     0.35916828202502 * AcceptedCmp50  +     0.15464859425769 *
1288161   +        Complain0  +    -0.12780871374988 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.76282838117383 * AcceptedCmp10 + 0.17657215690894 * 
AcceptedCmp20 + 0.06936093547655 * AcceptedCmp30 + -0.31222684620157 * AcceptedCmp40 + 
0.35916828202502 * AcceptedCmp50 + 0.15464859425769 * Complain0 + -0.12780871374988 * 
HigherEducationBinary0 ;
1288162   +   H1x1_5  = H1x1_5  +      0.0863832283968 * AcceptedCmp10
1288163   +          +    -0.01478152334234 * AcceptedCmp20  +    -0.25793605794945 *
1288164   +        AcceptedCmp30  +     0.75328991260718 * AcceptedCmp40
1288165   +          +     0.43869592545355 * AcceptedCmp50  +    -0.18444801256895 *
1288166   +        Complain0  +    -0.18540568245616 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.0863832283968 * AcceptedCmp10 + -0.01478152334234 * 
AcceptedCmp20 + -0.25793605794945 * AcceptedCmp30 + 0.75328991260718 * AcceptedCmp40 + 
0.43869592545355 * AcceptedCmp50 + -0.18444801256895 * Complain0 + -0.18540568245616 * 
HigherEducationBinary0 ;
1288167   +   H1x1_6  = H1x1_6  +    -0.05476883960444 * AcceptedCmp10
1288168   +          +    -0.30796660956747 * AcceptedCmp20  +    -0.15332998700386 *
1288169   +        AcceptedCmp30  +     0.07190305484507 * AcceptedCmp40
1288170   +          +    -0.19344551087023 * AcceptedCmp50  +    -0.01671794402922 *
1288171   +        Complain0  +      0.4224003744836 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.05476883960444 * AcceptedCmp10 + -0.30796660956747 
* AcceptedCmp20 + -0.15332998700386 * AcceptedCmp30 + 0.07190305484507 * AcceptedCmp40 + 
-0.19344551087023 * AcceptedCmp50 + -0.01671794402922 * Complain0 + 0.4224003744836 * 
HigherEducationBinary0 ;
1288172   +   H1x1_1  = H1x1_1  +     0.06740641383122 * Education2n_Cycle
1288173   +          +      0.0427985447056 * EducationBasic  +     0.38043688251433 *
1288174   +        EducationGraduation  +     0.07595631354847 * EducationMaster
1288175   +          +     0.24583509957712 * Marital_StatusDivorced
1288176   +          +    -0.22681931588361 * Marital_StatusMarried
1288177   +          +    -0.12924106229536 * Marital_StatusSingle
1288178   +          +     -0.2262058185403 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.06740641383122 * Education2n_Cycle + 0.0427985447056 
* EducationBasic + 0.38043688251433 * EducationGraduation + 0.07595631354847 * EducationMaster 
+ 0.24583509957712 * Marital_StatusDivorced + -0.22681931588361 * Marital_StatusMarried + 
-0.12924106229536 * Marital_StatusSingle + -0.2262058185403 * Marital_StatusTogether ;
1288179   +   H1x1_2  = H1x1_2  +    -0.13120690973481 * Education2n_Cycle
1288180   +          +     0.37925506295244 * EducationBasic  +     0.31784700588218 *
1288181   +        EducationGraduation  +     0.23015089246655 * EducationMaster
1288182   +          +    -0.12585334311068 * Marital_StatusDivorced
1288183   +          +    -0.20835502467207 * Marital_StatusMarried
1288184   +          +    -0.13839534449368 * Marital_StatusSingle
1288185   +          +     0.64317572477668 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.13120690973481 * Education2n_Cycle + 
0.37925506295244 * EducationBasic + 0.31784700588218 * EducationGraduation + 0.23015089246655 
* EducationMaster + -0.12585334311068 * Marital_StatusDivorced + -0.20835502467207 * 
Marital_StatusMarried + -0.13839534449368 * Marital_StatusSingle + 0.64317572477668 * 
Marital_StatusTogether ;
1288186   +   H1x1_3  = H1x1_3  +     0.32305785926236 * Education2n_Cycle
1288187   +          +     0.23464353160373 * EducationBasic  +    -0.73832644067678 *
1288188   +        EducationGraduation  +    -0.03608560158257 * EducationMaster
1288189   +          +     0.35106363238113 * Marital_StatusDivorced
1288190   +          +     -1.3414808583918 * Marital_StatusMarried
1288191   +          +     1.40835320798486 * Marital_StatusSingle
1288192   +          +    -1.26805917396788 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.32305785926236 * Education2n_Cycle + 
0.23464353160373 * EducationBasic + -0.73832644067678 * EducationGraduation + 
-0.03608560158257 * EducationMaster + 0.35106363238113 * Marital_StatusDivorced + 
-1.3414808583918 * Marital_StatusMarried + 1.40835320798486 * Marital_StatusSingle + 
-1.26805917396788 * Marital_StatusTogether ;
1288193   +   H1x1_4  = H1x1_4  +    -0.14516593990466 * Education2n_Cycle
1288194   +          +     0.21457892528906 * EducationBasic  +      0.3693312496431 *
1288195   +        EducationGraduation  +      0.1746658332011 * EducationMaster
1288196   +          +     0.48174546958393 * Marital_StatusDivorced
1288197   +          +    -0.41416978858191 * Marital_StatusMarried
1288198   +          +    -0.23376801546265 * Marital_StatusSingle
1288199   +          +    -0.40569257078897 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.14516593990466 * Education2n_Cycle + 
0.21457892528906 * EducationBasic + 0.3693312496431 * EducationGraduation + 0.1746658332011 * 
EducationMaster + 0.48174546958393 * Marital_StatusDivorced + -0.41416978858191 * 
Marital_StatusMarried + -0.23376801546265 * Marital_StatusSingle + -0.40569257078897 * 
Marital_StatusTogether ;
1288200   +   H1x1_5  = H1x1_5  +    -0.00489214718621 * Education2n_Cycle
1288201   +          +     0.04788059649714 * EducationBasic  +      -0.479003778409 *
1288202   +        EducationGraduation  +     0.68875064631577 * EducationMaster
1288203   +          +    -0.67557643774246 * Marital_StatusDivorced
1288204   +          +     1.63844045917367 * Marital_StatusMarried
1288205   +          +    -0.70320960247699 * Marital_StatusSingle
1288206   +          +     1.26350112628909 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.00489214718621 * Education2n_Cycle + 
0.04788059649714 * EducationBasic + -0.479003778409 * EducationGraduation + 0.68875064631577 * 
EducationMaster + -0.67557643774246 * Marital_StatusDivorced + 1.63844045917367 * 
Marital_StatusMarried + -0.70320960247699 * Marital_StatusSingle + 1.26350112628909 * 
Marital_StatusTogether ;
1288207   +   H1x1_6  = H1x1_6  +     0.38566123849432 * Education2n_Cycle
1288208   +          +    -0.48006357411447 * EducationBasic  +     0.06594567975069 *
1288209   +        EducationGraduation  +    -0.68011360002443 * EducationMaster
1288210   +          +    -0.11371453086883 * Marital_StatusDivorced
1288211   +          +    -0.34226997176291 * Marital_StatusMarried
1288212   +          +    -1.01568676685754 * Marital_StatusSingle
1288213   +          +    -0.07673228755579 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.38566123849432 * Education2n_Cycle + 
-0.48006357411447 * EducationBasic + 0.06594567975069 * EducationGraduation + 
-0.68011360002443 * EducationMaster + -0.11371453086883 * Marital_StatusDivorced + 
-0.34226997176291 * Marital_StatusMarried + -1.01568676685754 * Marital_StatusSingle + 
-0.07673228755579 * Marital_StatusTogether ;
1288214   +   H1x1_1  =    -0.13665586104906 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.13665586104906 + H1x1_1 ;
1288215   +   H1x1_2  =    -1.74128345271319 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.74128345271319 + H1x1_2 ;
1288216   +   H1x1_3  =    -0.38226400326342 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.38226400326342 + H1x1_3 ;
1288217   +   H1x1_4  =    -0.64652756521333 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.64652756521333 + H1x1_4 ;
1288218   +   H1x1_5  =     0.89555568414722 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.89555568414722 + H1x1_5 ;
1288219   +   H1x1_6  =    -0.28536788363505 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.28536788363505 + H1x1_6 ;
1288220   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
1288221   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
1288222   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
1288223   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1288224   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1288225   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1288226   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1288227   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1288228   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1288229   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1288230   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1288231   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1288232   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1288233   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1288234   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1288235   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1288236   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
1288237   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
1288238   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1288239   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1288240   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1288241   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1288242   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1288243   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1288244   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
1288245   +END;
MPRINT(EM_DIAGRAM):   END;
1288246   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1288247   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1288248   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1288249   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1288250   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1288251   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1288252   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1288253   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
1288254   +END;
MPRINT(EM_DIAGRAM):   END;
1288255   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1288256   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1288257   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1288258   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1288259   +   H1x2_1  =    -0.46863593010465 * S_AcceptedCmpTotal
1288260   +          +     0.76938995153422 * S_Age  +    -0.10870665325086 * S_Frq
1288261   +          +    -0.01767709917897 * S_Income  +    -0.06564852978687 *
1288262   +        S_Kidhome  +     1.53975855599943 * S_Mnt  +     0.14885556549813 *
1288263   +        S_MntFishProducts  +     -0.3427211596875 * S_MntFruits
1288264   +          +     1.82311511422571 * S_MntGoldProds  +     1.16814585484266 *
1288265   +        S_MntMeatProducts  +    -0.03210183211362 * S_MntSweetProducts
1288266   +          +     0.21048598967441 * S_MntWines  +    -1.43075224286158 *
1288267   +        S_MonthsAsCustomer  +     0.17264791017938 * S_NumCatalogPurchases
1288268   +          +    -0.87259051567474 * S_NumDealsPurchases
1288269   +          +    -0.36454149529139 * S_NumDistPurchases
1288270   +          +     0.12447759925061 * S_NumStorePurchases
1288271   +          +    -1.08133487947367 * S_NumWebPurchases
1288272   +          +    -0.49882157745454 * S_NumWebVisitsMonth
1288273   +          +    -1.37163643041927 * S_RFMstat  +    -2.02270778627266 *
1288274   +        S_RMntFrq  +    -0.01174101172444 * S_Recency
1288275   +          +     1.37307999964517 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.46863593010465 * S_AcceptedCmpTotal + 0.76938995153422 * 
S_Age + -0.10870665325086 * S_Frq + -0.01767709917897 * S_Income + -0.06564852978687 * 
S_Kidhome + 1.53975855599943 * S_Mnt + 0.14885556549813 * S_MntFishProducts + -0.3427211596875 
* S_MntFruits + 1.82311511422571 * S_MntGoldProds + 1.16814585484266 * S_MntMeatProducts + 
-0.03210183211362 * S_MntSweetProducts + 0.21048598967441 * S_MntWines + -1.43075224286158 * 
S_MonthsAsCustomer + 0.17264791017938 * S_NumCatalogPurchases + -0.87259051567474 * 
S_NumDealsPurchases + -0.36454149529139 * S_NumDistPurchases + 0.12447759925061 * 
S_NumStorePurchases + -1.08133487947367 * S_NumWebPurchases + -0.49882157745454 * 
S_NumWebVisitsMonth + -1.37163643041927 * S_RFMstat + -2.02270778627266 * S_RMntFrq + 
-0.01174101172444 * S_Recency + 1.37307999964517 * S_Teenhome ;
1288276   +   H1x2_2  =     0.31979674377303 * S_AcceptedCmpTotal
1288277   +          +    -1.13516841608912 * S_Age  +     1.57640145941914 * S_Frq
1288278   +          +    -0.58468039509557 * S_Income  +    -1.78015996883174 *
1288279   +        S_Kidhome  +     0.51311311640127 * S_Mnt  +     0.07011815519915 *
1288280   +        S_MntFishProducts  +     0.73204832291164 * S_MntFruits
1288281   +          +     1.50837189353633 * S_MntGoldProds  +     1.39487443576743 *
1288282   +        S_MntMeatProducts  +      0.6943398196475 * S_MntSweetProducts
1288283   +          +    -0.36693028595681 * S_MntWines  +     0.86802033237442 *
1288284   +        S_MonthsAsCustomer  +     0.02384797538091 * S_NumCatalogPurchases
1288285   +          +     2.23121497416403 * S_NumDealsPurchases
1288286   +          +    -0.48674842191071 * S_NumDistPurchases
1288287   +          +     1.77510728607544 * S_NumStorePurchases
1288288   +          +     0.14647433155436 * S_NumWebPurchases
1288289   +          +    -0.95892686924419 * S_NumWebVisitsMonth
1288290   +          +    -0.26496935918704 * S_RFMstat  +     2.48765485222223 *
1288291   +        S_RMntFrq  +     2.46497777428475 * S_Recency
1288292   +          +    -0.62872033383484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.31979674377303 * S_AcceptedCmpTotal + -1.13516841608912 * 
S_Age + 1.57640145941914 * S_Frq + -0.58468039509557 * S_Income + -1.78015996883174 * 
S_Kidhome + 0.51311311640127 * S_Mnt + 0.07011815519915 * S_MntFishProducts + 0.73204832291164 
* S_MntFruits + 1.50837189353633 * S_MntGoldProds + 1.39487443576743 * S_MntMeatProducts + 
0.6943398196475 * S_MntSweetProducts + -0.36693028595681 * S_MntWines + 0.86802033237442 * 
S_MonthsAsCustomer + 0.02384797538091 * S_NumCatalogPurchases + 2.23121497416403 * 
S_NumDealsPurchases + -0.48674842191071 * S_NumDistPurchases + 1.77510728607544 * 
S_NumStorePurchases + 0.14647433155436 * S_NumWebPurchases + -0.95892686924419 * 
S_NumWebVisitsMonth + -0.26496935918704 * S_RFMstat + 2.48765485222223 * S_RMntFrq + 
2.46497777428475 * S_Recency + -0.62872033383484 * S_Teenhome ;
1288293   +   H1x2_3  =    -0.31142826583944 * S_AcceptedCmpTotal
1288294   +          +    -1.14828049895929 * S_Age  +    -0.54227584627485 * S_Frq
1288295   +          +     0.26826674711688 * S_Income  +     0.17643820666347 *
1288296   +        S_Kidhome  +    -0.12427430981043 * S_Mnt  +     0.18056887427376 *
1288297   +        S_MntFishProducts  +    -0.63010248821544 * S_MntFruits
1288298   +          +    -0.81391687529252 * S_MntGoldProds  +    -1.12306166734361 *
1288299   +        S_MntMeatProducts  +     0.92339010601965 * S_MntSweetProducts
1288300   +          +    -2.05510990050543 * S_MntWines  +    -2.02060586903244 *
1288301   +        S_MonthsAsCustomer  +     0.98841836752178 * S_NumCatalogPurchases
1288302   +          +     0.14338855349611 * S_NumDealsPurchases
1288303   +          +    -2.21071010829235 * S_NumDistPurchases
1288304   +          +    -0.21795889348002 * S_NumStorePurchases
1288305   +          +     1.98825087883535 * S_NumWebPurchases
1288306   +          +     1.02482442531149 * S_NumWebVisitsMonth
1288307   +          +    -0.47662143614905 * S_RFMstat  +    -0.17167385440535 *
1288308   +        S_RMntFrq  +     -1.0288777281766 * S_Recency
1288309   +          +    -0.10646747275734 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.31142826583944 * S_AcceptedCmpTotal + -1.14828049895929 * 
S_Age + -0.54227584627485 * S_Frq + 0.26826674711688 * S_Income + 0.17643820666347 * S_Kidhome 
+ -0.12427430981043 * S_Mnt + 0.18056887427376 * S_MntFishProducts + -0.63010248821544 * 
S_MntFruits + -0.81391687529252 * S_MntGoldProds + -1.12306166734361 * S_MntMeatProducts + 
0.92339010601965 * S_MntSweetProducts + -2.05510990050543 * S_MntWines + -2.02060586903244 * 
S_MonthsAsCustomer + 0.98841836752178 * S_NumCatalogPurchases + 0.14338855349611 * 
S_NumDealsPurchases + -2.21071010829235 * S_NumDistPurchases + -0.21795889348002 * 
S_NumStorePurchases + 1.98825087883535 * S_NumWebPurchases + 1.02482442531149 * 
S_NumWebVisitsMonth + -0.47662143614905 * S_RFMstat + -0.17167385440535 * S_RMntFrq + 
-1.0288777281766 * S_Recency + -0.10646747275734 * S_Teenhome ;
1288310   +   H1x2_4  =    -0.40813758620671 * S_AcceptedCmpTotal
1288311   +          +     0.16751361466296 * S_Age  +     0.61297021391662 * S_Frq
1288312   +          +     0.17708553296763 * S_Income  +    -0.23498000755537 *
1288313   +        S_Kidhome  +      0.6863853027948 * S_Mnt  +    -0.43649468589643 *
1288314   +        S_MntFishProducts  +    -1.03807059787368 * S_MntFruits
1288315   +          +     0.68988160282803 * S_MntGoldProds  +     1.76714128625705 *
1288316   +        S_MntMeatProducts  +     1.15458185366826 * S_MntSweetProducts
1288317   +          +     0.31267521045306 * S_MntWines  +    -3.18562841805634 *
1288318   +        S_MonthsAsCustomer  +     0.15316473812138 * S_NumCatalogPurchases
1288319   +          +     0.30041205661012 * S_NumDealsPurchases
1288320   +          +    -0.63499849986918 * S_NumDistPurchases
1288321   +          +    -0.34155713433714 * S_NumStorePurchases
1288322   +          +    -1.14183354933936 * S_NumWebPurchases
1288323   +          +    -0.42681980262973 * S_NumWebVisitsMonth
1288324   +          +    -0.18777676484111 * S_RFMstat  +      0.2522570278894 *
1288325   +        S_RMntFrq  +     1.25852246467612 * S_Recency
1288326   +          +     0.63333476238969 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.40813758620671 * S_AcceptedCmpTotal + 0.16751361466296 * 
S_Age + 0.61297021391662 * S_Frq + 0.17708553296763 * S_Income + -0.23498000755537 * S_Kidhome 
+ 0.6863853027948 * S_Mnt + -0.43649468589643 * S_MntFishProducts + -1.03807059787368 * 
S_MntFruits + 0.68988160282803 * S_MntGoldProds + 1.76714128625705 * S_MntMeatProducts + 
1.15458185366826 * S_MntSweetProducts + 0.31267521045306 * S_MntWines + -3.18562841805634 * 
S_MonthsAsCustomer + 0.15316473812138 * S_NumCatalogPurchases + 0.30041205661012 * 
S_NumDealsPurchases + -0.63499849986918 * S_NumDistPurchases + -0.34155713433714 * 
S_NumStorePurchases + -1.14183354933936 * S_NumWebPurchases + -0.42681980262973 * 
S_NumWebVisitsMonth + -0.18777676484111 * S_RFMstat + 0.2522570278894 * S_RMntFrq + 
1.25852246467612 * S_Recency + 0.63333476238969 * S_Teenhome ;
1288327   +   H1x2_5  =     1.73048436159558 * S_AcceptedCmpTotal
1288328   +          +     1.91388487556197 * S_Age  +     0.14880026885923 * S_Frq
1288329   +          +      0.5905347897806 * S_Income  +     1.67048168226736 *
1288330   +        S_Kidhome  +     0.03869174467752 * S_Mnt  +    -0.71187911364266 *
1288331   +        S_MntFishProducts  +     0.93023590693473 * S_MntFruits
1288332   +          +     0.22907372790948 * S_MntGoldProds  +    -1.05941282177437 *
1288333   +        S_MntMeatProducts  +    -0.73905281508342 * S_MntSweetProducts
1288334   +          +     0.04429898588386 * S_MntWines  +    -0.47487263648723 *
1288335   +        S_MonthsAsCustomer  +     0.00382111008361 * S_NumCatalogPurchases
1288336   +          +    -0.21237915559831 * S_NumDealsPurchases
1288337   +          +     0.48256923764182 * S_NumDistPurchases
1288338   +          +    -0.45553093140641 * S_NumStorePurchases
1288339   +          +      0.5593655963659 * S_NumWebPurchases
1288340   +          +     0.27943768691188 * S_NumWebVisitsMonth
1288341   +          +     1.94452735574997 * S_RFMstat  +    -0.89811355261154 *
1288342   +        S_RMntFrq  +    -1.62796011550484 * S_Recency
1288343   +          +     0.60487421956906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.73048436159558 * S_AcceptedCmpTotal + 1.91388487556197 * 
S_Age + 0.14880026885923 * S_Frq + 0.5905347897806 * S_Income + 1.67048168226736 * S_Kidhome + 
0.03869174467752 * S_Mnt + -0.71187911364266 * S_MntFishProducts + 0.93023590693473 * 
S_MntFruits + 0.22907372790948 * S_MntGoldProds + -1.05941282177437 * S_MntMeatProducts + 
-0.73905281508342 * S_MntSweetProducts + 0.04429898588386 * S_MntWines + -0.47487263648723 * 
S_MonthsAsCustomer + 0.00382111008361 * S_NumCatalogPurchases + -0.21237915559831 * 
S_NumDealsPurchases + 0.48256923764182 * S_NumDistPurchases + -0.45553093140641 * 
S_NumStorePurchases + 0.5593655963659 * S_NumWebPurchases + 0.27943768691188 * 
S_NumWebVisitsMonth + 1.94452735574997 * S_RFMstat + -0.89811355261154 * S_RMntFrq + 
-1.62796011550484 * S_Recency + 0.60487421956906 * S_Teenhome ;
1288344   +   H1x2_6  =    -0.32010880515459 * S_AcceptedCmpTotal
1288345   +          +     0.95304983421791 * S_Age  +      -0.316044010281 * S_Frq
1288346   +          +     1.10925678578158 * S_Income  +     1.28019020117471 *
1288347   +        S_Kidhome  +     1.02498438668688 * S_Mnt  +     -1.8898236827792 *
1288348   +        S_MntFishProducts  +     0.96543971612672 * S_MntFruits
1288349   +          +    -0.21422669977227 * S_MntGoldProds  +     -0.0840639948559 *
1288350   +        S_MntMeatProducts  +     1.27902687109389 * S_MntSweetProducts
1288351   +          +    -1.38957846154598 * S_MntWines  +     0.80004372871482 *
1288352   +        S_MonthsAsCustomer  +    -0.19381123279552 * S_NumCatalogPurchases
1288353   +          +     2.38967021388062 * S_NumDealsPurchases
1288354   +          +    -0.97722398866481 * S_NumDistPurchases
1288355   +          +     1.57612333191312 * S_NumStorePurchases
1288356   +          +    -0.75968679115983 * S_NumWebPurchases
1288357   +          +    -0.64207187757251 * S_NumWebVisitsMonth
1288358   +          +     1.06529999122381 * S_RFMstat  +     0.67095385521555 *
1288359   +        S_RMntFrq  +     1.71313869798331 * S_Recency
1288360   +          +     1.39045686636707 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.32010880515459 * S_AcceptedCmpTotal + 0.95304983421791 * 
S_Age + -0.316044010281 * S_Frq + 1.10925678578158 * S_Income + 1.28019020117471 * S_Kidhome + 
1.02498438668688 * S_Mnt + -1.8898236827792 * S_MntFishProducts + 0.96543971612672 * 
S_MntFruits + -0.21422669977227 * S_MntGoldProds + -0.0840639948559 * S_MntMeatProducts + 
1.27902687109389 * S_MntSweetProducts + -1.38957846154598 * S_MntWines + 0.80004372871482 * 
S_MonthsAsCustomer + -0.19381123279552 * S_NumCatalogPurchases + 2.38967021388062 * 
S_NumDealsPurchases + -0.97722398866481 * S_NumDistPurchases + 1.57612333191312 * 
S_NumStorePurchases + -0.75968679115983 * S_NumWebPurchases + -0.64207187757251 * 
S_NumWebVisitsMonth + 1.06529999122381 * S_RFMstat + 0.67095385521555 * S_RMntFrq + 
1.71313869798331 * S_Recency + 1.39045686636707 * S_Teenhome ;
1288361   +   H1x2_1  = H1x2_1  +    -1.32125124093028 * AcceptedCmp10
1288362   +          +    -0.61219063588492 * AcceptedCmp20  +     1.20821214973577 *
1288363   +        AcceptedCmp30  +    -1.13548727550981 * AcceptedCmp40
1288364   +          +     0.04405769197194 * AcceptedCmp50  +      0.7940658605271 *
1288365   +        Complain0  +     1.05933486404834 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.32125124093028 * AcceptedCmp10 + -0.61219063588492 
* AcceptedCmp20 + 1.20821214973577 * AcceptedCmp30 + -1.13548727550981 * AcceptedCmp40 + 
0.04405769197194 * AcceptedCmp50 + 0.7940658605271 * Complain0 + 1.05933486404834 * 
HigherEducationBinary0 ;
1288366   +   H1x2_2  = H1x2_2  +     1.56313777120806 * AcceptedCmp10
1288367   +          +    -1.12997680537456 * AcceptedCmp20  +     1.19262470365504 *
1288368   +        AcceptedCmp30  +    -0.98995493161689 * AcceptedCmp40
1288369   +          +      -1.827141957557 * AcceptedCmp50  +    -0.43809188233899 *
1288370   +        Complain0  +      -0.627000653672 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.56313777120806 * AcceptedCmp10 + -1.12997680537456 * 
AcceptedCmp20 + 1.19262470365504 * AcceptedCmp30 + -0.98995493161689 * AcceptedCmp40 + 
-1.827141957557 * AcceptedCmp50 + -0.43809188233899 * Complain0 + -0.627000653672 * 
HigherEducationBinary0 ;
1288371   +   H1x2_3  = H1x2_3  +     1.32174755827017 * AcceptedCmp10
1288372   +          +     1.00086479754098 * AcceptedCmp20  +      0.4636133487385 *
1288373   +        AcceptedCmp30  +     1.34878553883758 * AcceptedCmp40
1288374   +          +    -2.36241584924476 * AcceptedCmp50  +       1.082421071431 *
1288375   +        Complain0  +    -0.32514144517436 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.32174755827017 * AcceptedCmp10 + 1.00086479754098 * 
AcceptedCmp20 + 0.4636133487385 * AcceptedCmp30 + 1.34878553883758 * AcceptedCmp40 + 
-2.36241584924476 * AcceptedCmp50 + 1.082421071431 * Complain0 + -0.32514144517436 * 
HigherEducationBinary0 ;
1288376   +   H1x2_4  = H1x2_4  +     0.39556775796131 * AcceptedCmp10
1288377   +          +     0.06457727211285 * AcceptedCmp20  +    -1.44632749800655 *
1288378   +        AcceptedCmp30  +     1.20294678514383 * AcceptedCmp40
1288379   +          +    -0.01594330886358 * AcceptedCmp50  +    -2.06895895180485 *
1288380   +        Complain0  +    -0.01374012569775 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.39556775796131 * AcceptedCmp10 + 0.06457727211285 * 
AcceptedCmp20 + -1.44632749800655 * AcceptedCmp30 + 1.20294678514383 * AcceptedCmp40 + 
-0.01594330886358 * AcceptedCmp50 + -2.06895895180485 * Complain0 + -0.01374012569775 * 
HigherEducationBinary0 ;
1288381   +   H1x2_5  = H1x2_5  +     1.11945933535638 * AcceptedCmp10
1288382   +          +     0.26383973979566 * AcceptedCmp20  +    -0.40426240061746 *
1288383   +        AcceptedCmp30  +     1.46916781894719 * AcceptedCmp40
1288384   +          +     0.26827715088644 * AcceptedCmp50  +     1.50074465469998 *
1288385   +        Complain0  +     -1.0626185000486 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 1.11945933535638 * AcceptedCmp10 + 0.26383973979566 * 
AcceptedCmp20 + -0.40426240061746 * AcceptedCmp30 + 1.46916781894719 * AcceptedCmp40 + 
0.26827715088644 * AcceptedCmp50 + 1.50074465469998 * Complain0 + -1.0626185000486 * 
HigherEducationBinary0 ;
1288386   +   H1x2_6  = H1x2_6  +    -0.87625232174239 * AcceptedCmp10
1288387   +          +     0.72228047975642 * AcceptedCmp20  +     1.34904015028355 *
1288388   +        AcceptedCmp30  +     1.55639496207852 * AcceptedCmp40
1288389   +          +    -0.98741935337746 * AcceptedCmp50  +     0.99421811137074 *
1288390   +        Complain0  +    -1.69180618270074 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.87625232174239 * AcceptedCmp10 + 0.72228047975642 * 
AcceptedCmp20 + 1.34904015028355 * AcceptedCmp30 + 1.55639496207852 * AcceptedCmp40 + 
-0.98741935337746 * AcceptedCmp50 + 0.99421811137074 * Complain0 + -1.69180618270074 * 
HigherEducationBinary0 ;
1288391   +   H1x2_1  = H1x2_1  +    -0.17034446979478 * Education2n_Cycle
1288392   +          +    -0.75872196172063 * EducationBasic  +     0.44107677662894 *
1288393   +        EducationGraduation  +      0.1073450284316 * EducationMaster
1288394   +          +     0.96470902298142 * Marital_StatusDivorced
1288395   +          +     0.94805959268314 * Marital_StatusMarried
1288396   +          +     -0.6523948769616 * Marital_StatusSingle
1288397   +          +     0.07557344719737 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.17034446979478 * Education2n_Cycle + 
-0.75872196172063 * EducationBasic + 0.44107677662894 * EducationGraduation + 0.1073450284316 
* EducationMaster + 0.96470902298142 * Marital_StatusDivorced + 0.94805959268314 * 
Marital_StatusMarried + -0.6523948769616 * Marital_StatusSingle + 0.07557344719737 * 
Marital_StatusTogether ;
1288398   +   H1x2_2  = H1x2_2  +    -0.42515060901662 * Education2n_Cycle
1288399   +          +    -1.05213629639837 * EducationBasic  +     0.72603871617959 *
1288400   +        EducationGraduation  +    -1.34927753306064 * EducationMaster
1288401   +          +      0.3918249505531 * Marital_StatusDivorced
1288402   +          +    -0.00968091979586 * Marital_StatusMarried
1288403   +          +     0.84615379885071 * Marital_StatusSingle
1288404   +          +     0.34817324570682 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.42515060901662 * Education2n_Cycle + 
-1.05213629639837 * EducationBasic + 0.72603871617959 * EducationGraduation + 
-1.34927753306064 * EducationMaster + 0.3918249505531 * Marital_StatusDivorced + 
-0.00968091979586 * Marital_StatusMarried + 0.84615379885071 * Marital_StatusSingle + 
0.34817324570682 * Marital_StatusTogether ;
1288405   +   H1x2_3  = H1x2_3  +    -0.31002362860852 * Education2n_Cycle
1288406   +          +     1.40744525716089 * EducationBasic  +     2.06403096539358 *
1288407   +        EducationGraduation  +     -0.8672743321499 * EducationMaster
1288408   +          +     1.14335160313191 * Marital_StatusDivorced
1288409   +          +     0.50580517192175 * Marital_StatusMarried
1288410   +          +     0.17264295020921 * Marital_StatusSingle
1288411   +          +    -0.58193119255736 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.31002362860852 * Education2n_Cycle + 
1.40744525716089 * EducationBasic + 2.06403096539358 * EducationGraduation + -0.8672743321499 
* EducationMaster + 1.14335160313191 * Marital_StatusDivorced + 0.50580517192175 * 
Marital_StatusMarried + 0.17264295020921 * Marital_StatusSingle + -0.58193119255736 * 
Marital_StatusTogether ;
1288412   +   H1x2_4  = H1x2_4  +     0.55057637605468 * Education2n_Cycle
1288413   +          +    -0.73070803276142 * EducationBasic  +     0.40424625808481 *
1288414   +        EducationGraduation  +     1.95818378342783 * EducationMaster
1288415   +          +    -0.11238504444225 * Marital_StatusDivorced
1288416   +          +    -0.81348274043749 * Marital_StatusMarried
1288417   +          +     0.46075415610001 * Marital_StatusSingle
1288418   +          +    -0.17552649817722 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.55057637605468 * Education2n_Cycle + 
-0.73070803276142 * EducationBasic + 0.40424625808481 * EducationGraduation + 1.95818378342783 
* EducationMaster + -0.11238504444225 * Marital_StatusDivorced + -0.81348274043749 * 
Marital_StatusMarried + 0.46075415610001 * Marital_StatusSingle + -0.17552649817722 * 
Marital_StatusTogether ;
1288419   +   H1x2_5  = H1x2_5  +     0.43341125564688 * Education2n_Cycle
1288420   +          +     2.81958018976644 * EducationBasic  +     0.28773362443315 *
1288421   +        EducationGraduation  +     0.08396135672504 * EducationMaster
1288422   +          +    -0.46342068701431 * Marital_StatusDivorced
1288423   +          +    -0.41667845270204 * Marital_StatusMarried
1288424   +          +    -0.47166707496281 * Marital_StatusSingle
1288425   +          +     0.54110155717306 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.43341125564688 * Education2n_Cycle + 
2.81958018976644 * EducationBasic + 0.28773362443315 * EducationGraduation + 0.08396135672504 
* EducationMaster + -0.46342068701431 * Marital_StatusDivorced + -0.41667845270204 * 
Marital_StatusMarried + -0.47166707496281 * Marital_StatusSingle + 0.54110155717306 * 
Marital_StatusTogether ;
1288426   +   H1x2_6  = H1x2_6  +    -0.27163102711307 * Education2n_Cycle
1288427   +          +    -0.04052143781957 * EducationBasic  +     0.97902549344774 *
1288428   +        EducationGraduation  +     0.36656103863186 * EducationMaster
1288429   +          +    -0.45376613787812 * Marital_StatusDivorced
1288430   +          +     0.01337046049801 * Marital_StatusMarried
1288431   +          +    -0.92811489484121 * Marital_StatusSingle
1288432   +          +     1.52402650450634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.27163102711307 * Education2n_Cycle + 
-0.04052143781957 * EducationBasic + 0.97902549344774 * EducationGraduation + 0.36656103863186 
* EducationMaster + -0.45376613787812 * Marital_StatusDivorced + 0.01337046049801 * 
Marital_StatusMarried + -0.92811489484121 * Marital_StatusSingle + 1.52402650450634 * 
Marital_StatusTogether ;
1288433   +   H1x2_1  =     0.27200642200874 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.27200642200874 + H1x2_1 ;
1288434   +   H1x2_2  =     0.52117161047058 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.52117161047058 + H1x2_2 ;
1288435   +   H1x2_3  =    -1.04763461279984 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.04763461279984 + H1x2_3 ;
1288436   +   H1x2_4  =     0.10516307959318 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.10516307959318 + H1x2_4 ;
1288437   +   H1x2_5  =     1.24237093160919 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.24237093160919 + H1x2_5 ;
1288438   +   H1x2_6  =    -0.57977518763852 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = -0.57977518763852 + H1x2_6 ;
1288439   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
1288440   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
1288441   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
1288442   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1288443   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1288444   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1288445   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1288446   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1288447   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1288448   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1288449   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1288450   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1288451   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1288452   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1288453   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1288454   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1288455   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
1288456   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
1288457   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1288458   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1288459   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1288460   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1288461   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1288462   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1288463   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
1288464   +END;
MPRINT(EM_DIAGRAM):   END;
1288465   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1288466   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1288467   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1288468   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1288469   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1288470   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1288471   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1288472   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
1288473   +END;
MPRINT(EM_DIAGRAM):   END;
1288474   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1288475   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1288476   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1288477   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1288478   +   H2x1_1  =     3.19986933046591 * H1x1_1  +    -0.53665634063887 * H1x1_2
1288479   +          +     1.71172628690017 * H1x1_3  +    -1.33944402954134 * H1x1_4
1288480   +          +    -1.93533827156845 * H1x1_5  +    -0.85772802964317 * H1x1_6
1288481   +          +     0.60984669129006 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 3.19986933046591 * H1x1_1 + -0.53665634063887 * H1x1_2 + 
1.71172628690017 * H1x1_3 + -1.33944402954134 * H1x1_4 + -1.93533827156845 * H1x1_5 + 
-0.85772802964317 * H1x1_6 + 0.60984669129006 * H1x1_7 ;
1288482   +   H2x1_2  =     -2.1883484075031 * H1x1_1  +     0.17578635446135 * H1x1_2
1288483   +          +    -1.79384950890077 * H1x1_3  +     0.88942614754722 * H1x1_4
1288484   +          +     0.41077752133457 * H1x1_5  +       0.509832853125 * H1x1_6
1288485   +          +    -0.28121910805072 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -2.1883484075031 * H1x1_1 + 0.17578635446135 * H1x1_2 + 
-1.79384950890077 * H1x1_3 + 0.88942614754722 * H1x1_4 + 0.41077752133457 * H1x1_5 + 
0.509832853125 * H1x1_6 + -0.28121910805072 * H1x1_7 ;
1288486   +   H2x1_3  =     0.86281981700921 * H1x1_1  +    -1.15482345233328 * H1x1_2
1288487   +          +     0.64743938802141 * H1x1_3  +     1.08117298211616 * H1x1_4
1288488   +          +      -0.363297480437 * H1x1_5  +    -1.58703254226713 * H1x1_6
1288489   +          +     0.54468402771449 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.86281981700921 * H1x1_1 + -1.15482345233328 * H1x1_2 + 
0.64743938802141 * H1x1_3 + 1.08117298211616 * H1x1_4 + -0.363297480437 * H1x1_5 + 
-1.58703254226713 * H1x1_6 + 0.54468402771449 * H1x1_7 ;
1288490   +   H2x1_4  =    -0.43420906601647 * H1x1_1  +     0.36485369627974 * H1x1_2
1288491   +          +    -2.42315183886716 * H1x1_3  +     0.22337896770247 * H1x1_4
1288492   +          +    -0.65684369622605 * H1x1_5  +     0.25211011207532 * H1x1_6
1288493   +          +     0.16704425645668 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.43420906601647 * H1x1_1 + 0.36485369627974 * H1x1_2 + 
-2.42315183886716 * H1x1_3 + 0.22337896770247 * H1x1_4 + -0.65684369622605 * H1x1_5 + 
0.25211011207532 * H1x1_6 + 0.16704425645668 * H1x1_7 ;
1288494   +   H2x1_5  =     0.61083333511105 * H1x1_1  +     1.11038871398931 * H1x1_2
1288495   +          +      0.4617674661653 * H1x1_3  +    -0.42039958365963 * H1x1_4
1288496   +          +    -1.37408000010678 * H1x1_5  +     0.03897439094411 * H1x1_6
1288497   +          +    -0.82592861674077 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.61083333511105 * H1x1_1 + 1.11038871398931 * H1x1_2 + 
0.4617674661653 * H1x1_3 + -0.42039958365963 * H1x1_4 + -1.37408000010678 * H1x1_5 + 
0.03897439094411 * H1x1_6 + -0.82592861674077 * H1x1_7 ;
1288498   +   H2x1_6  =     1.30877201101082 * H1x1_1  +     1.55143256487324 * H1x1_2
1288499   +          +    -1.20237741381937 * H1x1_3  +       2.394122059946 * H1x1_4
1288500   +          +     1.83804290225468 * H1x1_5  +     0.83132818010396 * H1x1_6
1288501   +          +     1.18399340483001 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.30877201101082 * H1x1_1 + 1.55143256487324 * H1x1_2 + 
-1.20237741381937 * H1x1_3 + 2.394122059946 * H1x1_4 + 1.83804290225468 * H1x1_5 + 
0.83132818010396 * H1x1_6 + 1.18399340483001 * H1x1_7 ;
1288502   +   H2x1_1  = H2x1_1  +    -2.41276052972753 * H1x2_1
1288503   +          +     0.38601054263899 * H1x2_2  +     0.54498789581044 * H1x2_3
1288504   +          +    -0.55304188445569 * H1x2_4  +     0.29484780749868 * H1x2_5
1288505   +          +     0.44012580105051 * H1x2_6  +     0.43086375065556 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.41276052972753 * H1x2_1 + 0.38601054263899 * H1x2_2 
+ 0.54498789581044 * H1x2_3 + -0.55304188445569 * H1x2_4 + 0.29484780749868 * H1x2_5 + 
0.44012580105051 * H1x2_6 + 0.43086375065556 * H1x2_7 ;
1288506   +   H2x1_2  = H2x1_2  +    -1.03173201511154 * H1x2_1
1288507   +          +     0.62119574580435 * H1x2_2  +     1.71782745718335 * H1x2_3
1288508   +          +     0.05391903933014 * H1x2_4  +     1.52443015967438 * H1x2_5
1288509   +          +     0.22301831343286 * H1x2_6  +     0.66204940430171 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -1.03173201511154 * H1x2_1 + 0.62119574580435 * H1x2_2 
+ 1.71782745718335 * H1x2_3 + 0.05391903933014 * H1x2_4 + 1.52443015967438 * H1x2_5 + 
0.22301831343286 * H1x2_6 + 0.66204940430171 * H1x2_7 ;
1288510   +   H2x1_3  = H2x1_3  +     1.37871502475142 * H1x2_1
1288511   +          +     0.02099445181492 * H1x2_2  +     0.44720218317742 * H1x2_3
1288512   +          +    -1.29625929820096 * H1x2_4  +    -1.29169956389384 * H1x2_5
1288513   +          +    -0.21403739905139 * H1x2_6  +    -0.03075946378871 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 1.37871502475142 * H1x2_1 + 0.02099445181492 * H1x2_2 
+ 0.44720218317742 * H1x2_3 + -1.29625929820096 * H1x2_4 + -1.29169956389384 * H1x2_5 + 
-0.21403739905139 * H1x2_6 + -0.03075946378871 * H1x2_7 ;
1288514   +   H2x1_4  = H2x1_4  +     1.94121727472617 * H1x2_1
1288515   +          +     0.23207290279299 * H1x2_2  +      0.3162872281134 * H1x2_3
1288516   +          +    -0.40199017937523 * H1x2_4  +     0.69294460110289 * H1x2_5
1288517   +          +    -1.00758272664059 * H1x2_6  +    -1.41698057960021 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.94121727472617 * H1x2_1 + 0.23207290279299 * H1x2_2 
+ 0.3162872281134 * H1x2_3 + -0.40199017937523 * H1x2_4 + 0.69294460110289 * H1x2_5 + 
-1.00758272664059 * H1x2_6 + -1.41698057960021 * H1x2_7 ;
1288518   +   H2x1_5  = H2x1_5  +     1.19546023857185 * H1x2_1
1288519   +          +    -1.00266987736442 * H1x2_2  +     0.71838447032796 * H1x2_3
1288520   +          +     1.70968347732204 * H1x2_4  +    -0.26894423802892 * H1x2_5
1288521   +          +    -0.61655519090213 * H1x2_6  +     2.21931491555405 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.19546023857185 * H1x2_1 + -1.00266987736442 * H1x2_2 
+ 0.71838447032796 * H1x2_3 + 1.70968347732204 * H1x2_4 + -0.26894423802892 * H1x2_5 + 
-0.61655519090213 * H1x2_6 + 2.21931491555405 * H1x2_7 ;
1288522   +   H2x1_6  = H2x1_6  +    -0.48559886762231 * H1x2_1
1288523   +          +     0.93218274010134 * H1x2_2  +     0.23140948782865 * H1x2_3
1288524   +          +     0.72139310562219 * H1x2_4  +    -0.11143939877368 * H1x2_5
1288525   +          +     0.74022211257293 * H1x2_6  +      1.0449314568566 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.48559886762231 * H1x2_1 + 0.93218274010134 * H1x2_2 
+ 0.23140948782865 * H1x2_3 + 0.72139310562219 * H1x2_4 + -0.11143939877368 * H1x2_5 + 
0.74022211257293 * H1x2_6 + 1.0449314568566 * H1x2_7 ;
1288526   +   H2x1_1  =     0.42952855003777 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.42952855003777 + H2x1_1 ;
1288527   +   H2x1_2  =     1.61752083096638 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.61752083096638 + H2x1_2 ;
1288528   +   H2x1_3  =    -0.71617788867723 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.71617788867723 + H2x1_3 ;
1288529   +   H2x1_4  =     0.39147546708847 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.39147546708847 + H2x1_4 ;
1288530   +   H2x1_5  =    -0.56259054185247 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.56259054185247 + H2x1_5 ;
1288531   +   H2x1_6  =     0.31857109159246 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.31857109159246 + H2x1_6 ;
1288532   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
1288533   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
1288534   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
1288535   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1288536   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
1288537   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
1288538   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
1288539   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
1288540   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
1288541   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
1288542   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
1288543   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
1288544   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
1288545   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
1288546   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
1288547   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
1288548   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
1288549   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
1288550   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
1288551   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
1288552   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
1288553   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
1288554   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
1288555   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
1288556   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
1288557   +END;
MPRINT(EM_DIAGRAM):   END;
1288558   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1288559   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1288560   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1288561   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1288562   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1288563   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1288564   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1288565   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
1288566   +END;
MPRINT(EM_DIAGRAM):   END;
1288567   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1288568   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1288569   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1288570   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1288571   +   P_DepVar1  =     25.2027326018714 * H2x1_1  +    -8.05331379419082 * H2x1_2
1288572   +          +     2.64798805383536 * H2x1_3  +    -4.52736775271107 * H2x1_4
1288573   +          +     6.71812741736202 * H2x1_5  +    -12.2785047473885 * H2x1_6
1288574   +          +    -4.41291972336422 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.2027326018714 * H2x1_1 + -8.05331379419082 * H2x1_2 + 
2.64798805383536 * H2x1_3 + -4.52736775271107 * H2x1_4 + 6.71812741736202 * H2x1_5 + 
-12.2785047473885 * H2x1_6 + -4.41291972336422 * H2x1_7 ;
1288575   +   P_DepVar1  =     1.22134962002326 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.22134962002326 + P_DepVar1 ;
1288576   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1288577   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1288578   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1288579   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1288580   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1288581   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1288582   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1288583   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1288584   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1288585   +END;
MPRINT(EM_DIAGRAM):   END;
1288586   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1288587   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1288588   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1288589   +END;
MPRINT(EM_DIAGRAM):   END;
1288590   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1288591   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1288592   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1288593   +END;
MPRINT(EM_DIAGRAM):   END;
1288594   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1288595   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1288596   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1288597   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1288598   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1288599   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1288600   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1288601   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1288602   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1288603   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1288604   +END;
MPRINT(EM_DIAGRAM):   END;
1288605   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1288606   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1288607   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1288608   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1288609    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1288610    quit;
1288611    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1288612    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1288613    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1288614    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
1288615    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1288616    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288617    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1288618    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1288619    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 7460 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 7460 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1288620    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME 
CREATOR);
1288621    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1288622    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288623    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1288624    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1288625    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1288626    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1288627    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
1288628    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1288629    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1288630    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1288631    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 74 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 74 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1288632    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1288633    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1288634    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1288635    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 74 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 74 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288636    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1288637    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1288637  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3727 rows and 5 columns.

1288638    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1288639    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
1288640    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3727 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 3727 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288641    filename _pref
1288641  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1288642    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1288643    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1288644   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288645   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1288646   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1288647   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1288648   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1288649   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1288650    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1288651    quit;
1288652    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1288653    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1288654    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1288655    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1288656    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1288657    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288658    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1288659    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1288660    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288661    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1288662    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1288663    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1288664    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1288665    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1288666    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1288667    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288668    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1288669    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1288670    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1288671    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1288672    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288673    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1288674    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1288675    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1288676    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288677    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1288678    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1288678  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1288679    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1288680    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
1288681    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 3731 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288682    filename _pref
1288682  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1288683    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1288684    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1288685   +
1288686   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1288687   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1288687  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1288688   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1288689   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1288690   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1288691   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1288692   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1288693    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1288694    quit;
1288695    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1288696    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1288697    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1288698    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1288699    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1288700    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288701    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1288702    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1288703    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288704    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1288705    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1288706    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288707    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1288708    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1288709    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1288710    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288711    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1288712    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288713    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1288714    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1288715    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288716    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1288717    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1288718    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1288719    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1288720    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1288721    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1288721  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1288722    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288723    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
1288724    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 3770 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288725    filename _pref
1288725  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1288726    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1288727    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1288728   +
1288729   +
1288730   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1288731   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1288732   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1288733   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1288734   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1288735   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1288736   +
1288737   +
1288738   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1288739   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1288740   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1288741   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1288742   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1288743   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1288744   +
1288745   +
1288746   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1288747   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1288748   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1288749   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1288750   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1288751   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1288752   +
1288753   +
1288754   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1288755   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1288756   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1288757   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1288758   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1288759   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1288760   +
1288761   +
1288762   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1288763   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1288764   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1288765   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1288766   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1288767   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1288768   +
1288769   +
1288770   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1288771   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1288772   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1288773   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1288774   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1288775   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1288776   +
1288777   +
1288778   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1288779   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1288780   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1288781   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1288782   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1288783   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1288784   +
1288785   +
1288786   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1288787   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1288788   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1288789   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1288790   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1288791   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1288792   +if
1288793   +_FILTERNORM1 not in ( '.')
1288794   + and
1288795   +_FILTERNORM2 not in ( '.')
1288796   + and
1288797   +_FILTERNORM3 not in ( '.')
1288798   + and
1288799   +_FILTERNORM4 not in ( '.')
1288800   + and
1288801   +_FILTERNORM5 not in ( '.')
1288802   + and
1288803   +_FILTERNORM6 not in ( '.')
1288804   + and
1288805   +_FILTERNORM7 not in ( ' ')
1288806   + and
1288807   +_FILTERNORM8 not in ( ' ')
1288808   +and
1288809   +( Dt_Customer ne .)
1288810   +and ( Income ne . and (Income<=107000))
1288811   +and ( Kidhome ne .)
1288812   +and ( MntFishProducts ne .)
1288813   +and ( MntFruits ne .)
1288814   +and ( MntGoldProds ne .)
1288815   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1288816   +and ( MntSweetProducts ne .)
1288817   +and ( MntWines ne .)
1288818   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1288819   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1288820   +and ( NumStorePurchases ne .)
1288821   +and ( NumWebPurchases ne .)
1288822   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1288823   +and ( Recency ne .)
1288824   +and ( Teenhome ne .)
1288825   +and ( Year_Birth ne .)
1288826   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1288827   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1288828   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1288829   +end;
MPRINT(EM_DIAGRAM):   end;
1288830   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1288831   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1288832    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1288833    quit;
1288834    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1288835    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1288836    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1288837    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1288838    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1288839    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288840    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1288841    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1288842    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288843    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1288844    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1288845    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288846    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1288847    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1288848    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1288849    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288850    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1288851    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1288852    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1288853    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1288854    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288855    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1288856    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1288857    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1288858    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1288859    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1288860    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1288860  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1288861    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288862    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
1288863    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 3836 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288864    %macro varDept(fcmpdata=,id=);
1288865    %global nobs&id scoreFlag&id;
1288866    %let scoreFlag&id = 0;
1288867    %if &id=1 or ^&fcmpStart %then %do;
1288868    proc sort data=&fcmpdata out=_temp&id nodupkey;
1288869    by NAME;
1288870    where id=&id and LHS in( %let j=1;
1288871    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1288872    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1288873    "&var" %let j = %eval(&j+1);
1288874    %end;
1288875    );
1288876    run;
1288877    %let dsid = %sysfunc(open(_temp&id));
1288878    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
The SAS System

1288879    %let dsid = %sysfunc(close(&dsid));
1288880    %if &&nobs&id %then %do;
1288881    %let scoreFlag&id = 1;
1288882    %let fcmpStart = 1;
1288883    %end;
1288884    %else %let fcmpStart = 0;
1288885    %end;
1288886    %else %do;
1288887    proc sort data=&fcmpdata out=_tempid;
1288888    where id=&id;
1288889    by LHS;
1288890    run;
1288891    %let dsid = %sysfunc(open(_tempid));
1288892    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1288893    %let dsid = %sysfunc(close(&dsid));
1288894    %if ^&&nobs&id %then %do;
1288895    proc datasets lib=work nolist;
1288896    delete _tempid;
1288897    run;
1288898    quit;
1288899    %end;
1288900    %else %do;
1288901    data _tempAll;
1288902    set %let j=%eval(&id-1);
1288903    %do x=1 %to &j;
1288904    %if &&nobs&x %then %do;
1288905    _temp&x %end;
1288906    %end;
1288907    ;
1288908    run;
1288909    proc sql;
1288910    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1288910  ! work._tempid p2 where p.name=p2.lhs;
1288911    quit;
1288912    data _temp&id;
1288913    set _temp&id;
1288914    where LHS ne '' and NAME ne '' and Node ne '';
1288915    run;
1288916    proc datasets lib=work nolist;
1288917    delete _tempAll;
1288918    run;
1288919    %let dsid = %sysfunc(open(_temp&id));
1288920    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1288921    %let dsid = %sysfunc(close(&dsid));
1288922    %if ^&&nobs&id %then %do;
1288923    proc datasets lib=work nolist;
1288924    delete _temp&id;
1288925    run;
1288926    quit;
1288927    %end;
1288928    %else %do;
1288929    %let scoreFlag&id = 1;
1288930    data _temp&id;
1288931    set _temp&id;
1288932    where LHS ne NAME and node ne '';
1288933    run;
1288934    %let dsid = %sysfunc(open(_temp&id));
1288935    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1288936    %let dsid = %sysfunc(close(&dsid));
1288937    %if ^&&nobs&id %then %do;
1288938    proc datasets lib=work nolist;
1288939    delete _temp&id;
1288940    run;
1288941    quit;
1288942    %end;
1288943    %else %do;
1288944    proc sort data=_temp&id nodupkey;
1288945    by LHS NAME;
1288946    run;
1288947    %end;
1288948    %end;
1288949    %end;
1288950    %end;
1288951    %mend varDept;
1288952    %macro optCode(outdata=fcmpdata);
1288953    %global fcmpStart;
1288954    %let fcmpStart = 0;
1288955    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1288956    %let NumNodes=9;
1288957    %do k=1 %to &NumNodes;
1288958    %vardept(fcmpdata=&outdata, id=&k);
1288959    %end;
1288960    %mend optCode;
1288961    %optcode(outData=EMWS8.Ensmbl45_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 197 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 142 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 55 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 55 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 59 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 55 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 98 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1288962    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1288963    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1288964    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1288965    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1288966    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1288967    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1288968    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1288969    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288970    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1288971    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1288971  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1288972    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288973    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1288974    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1288975    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1288976    filename _pref
1288976  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
1288977    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1288978    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
1288979   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1288980   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1288981   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1288982   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1288983   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1288984   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1288985   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1288986   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1288987   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1288988   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1288989   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1288990   +LENGTH _WARN_ $4
1288991   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1288992   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1288993   +
1288994   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1288995   +
1288996   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1288997   +
1288998   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1288999   +
1289000   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1289001   +
1289002   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1289003   +
1289004   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1289005   +
1289006   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1289007   +
1289008   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1289009   +
1289010   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1289011   +
1289012   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1289013   +
1289014   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1289015   +
1289016   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1289017   +
1289018   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1289019   +
1289020   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1289021   +
1289022   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1289023   +
1289024   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1289025   +
1289026   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1289027   +
1289028   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1289029   +
1289030   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1289031   +
1289032   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1289033   +
1289034   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1289035   +
1289036   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1289037   +
1289038   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1289039   +
1289040   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1289041   +
1289042   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1289043   +
1289044   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1289045   +
1289046   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1289047   +
1289048   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1289049   +
1289050   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1289051   +
1289052   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1289053   +
1289054   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1289055   +
1289056   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1289057   +
1289058   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1289059   +
1289060   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1289061   +
1289062   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1289063   +
1289064   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1289065   +
1289066   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1289067   +
1289068   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1289069   +
1289070   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1289071   +
1289072   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1289073   +
1289074   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1289075   +
1289076   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
1289077   +
1289078   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
1289079   +
1289080   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
1289081   +
1289082   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
1289083   +
1289084   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
1289085   +
1289086   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
1289087   +
1289088   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
1289089   +
1289090   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
1289091   +
1289092   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
1289093   +
1289094   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
1289095   +
1289096   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
1289097   +
1289098   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
1289099   +
1289100   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
1289101   +
1289102   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
1289103   +
1289104   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1289105   +
1289106   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1289107   +
1289108   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1289109   +
1289110   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1289111   +
1289112   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1289113   +
1289114   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1289115   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1289116   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1289117   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1289118   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289119   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289120   +end;
MPRINT(EM_DIAGRAM):   end;
1289121   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289122   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1289123   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1289124   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289125   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1289126   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1289127   +   end;
MPRINT(EM_DIAGRAM):   end;
1289128   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1289129   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1289130   +   end;
MPRINT(EM_DIAGRAM):   end;
1289131   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289132   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1289133   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289134   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289135   +   end;
MPRINT(EM_DIAGRAM):   end;
1289136   +end;
MPRINT(EM_DIAGRAM):   end;
1289137   +
1289138   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1289139   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1289140   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1289141   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1289142   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289143   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289144   +end;
MPRINT(EM_DIAGRAM):   end;
1289145   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289146   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1289147   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1289148   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289149   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1289150   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1289151   +   end;
MPRINT(EM_DIAGRAM):   end;
1289152   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1289153   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1289154   +   end;
MPRINT(EM_DIAGRAM):   end;
1289155   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289156   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1289157   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289158   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289159   +   end;
MPRINT(EM_DIAGRAM):   end;
1289160   +end;
MPRINT(EM_DIAGRAM):   end;
1289161   +
1289162   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1289163   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1289164   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1289165   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1289166   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289167   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289168   +end;
MPRINT(EM_DIAGRAM):   end;
1289169   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289170   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1289171   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1289172   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289173   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1289174   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1289175   +   end;
MPRINT(EM_DIAGRAM):   end;
1289176   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1289177   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1289178   +   end;
MPRINT(EM_DIAGRAM):   end;
1289179   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289180   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1289181   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289182   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289183   +   end;
MPRINT(EM_DIAGRAM):   end;
1289184   +end;
MPRINT(EM_DIAGRAM):   end;
1289185   +
1289186   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1289187   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1289188   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1289189   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1289190   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289191   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289192   +end;
MPRINT(EM_DIAGRAM):   end;
1289193   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289194   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1289195   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1289196   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289197   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1289198   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1289199   +   end;
MPRINT(EM_DIAGRAM):   end;
1289200   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1289201   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1289202   +   end;
MPRINT(EM_DIAGRAM):   end;
1289203   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289204   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1289205   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289206   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289207   +   end;
MPRINT(EM_DIAGRAM):   end;
1289208   +end;
MPRINT(EM_DIAGRAM):   end;
1289209   +
1289210   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1289211   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1289212   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1289213   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1289214   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289215   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289216   +end;
MPRINT(EM_DIAGRAM):   end;
1289217   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289218   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1289219   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1289220   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289221   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1289222   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1289223   +   end;
MPRINT(EM_DIAGRAM):   end;
1289224   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1289225   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1289226   +   end;
MPRINT(EM_DIAGRAM):   end;
1289227   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289228   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1289229   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289230   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289231   +   end;
MPRINT(EM_DIAGRAM):   end;
1289232   +end;
MPRINT(EM_DIAGRAM):   end;
1289233   +
1289234   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1289235   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1289236   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1289237   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1289238   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289239   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289240   +end;
MPRINT(EM_DIAGRAM):   end;
1289241   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289242   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1289243   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1289244   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289245   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1289246   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1289247   +   end;
MPRINT(EM_DIAGRAM):   end;
1289248   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1289249   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1289250   +   end;
MPRINT(EM_DIAGRAM):   end;
1289251   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289252   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1289253   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289254   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289255   +   end;
MPRINT(EM_DIAGRAM):   end;
1289256   +end;
MPRINT(EM_DIAGRAM):   end;
1289257   +
1289258   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1289259   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1289260   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1289261   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1289262   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289263   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289264   +end;
MPRINT(EM_DIAGRAM):   end;
1289265   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289266   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1289267   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1289268   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289269   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1289270   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1289271   +   end;
MPRINT(EM_DIAGRAM):   end;
1289272   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1289273   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1289274   +   end;
MPRINT(EM_DIAGRAM):   end;
1289275   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289276   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1289277   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289278   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289279   +   end;
MPRINT(EM_DIAGRAM):   end;
1289280   +end;
MPRINT(EM_DIAGRAM):   end;
1289281   +
1289282   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1289283   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1289284   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1289285   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1289286   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1289287   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1289288   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1289289   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1289290   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1289291   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1289292   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1289293   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1289294   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289295   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289296   +end;
MPRINT(EM_DIAGRAM):   end;
1289297   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289298   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1289299   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1289300   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289301   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1289302   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1289303   +   end;
MPRINT(EM_DIAGRAM):   end;
1289304   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1289305   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1289306   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1289307   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1289308   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1289309   +   end;
MPRINT(EM_DIAGRAM):   end;
1289310   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1289311   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1289312   +   end;
MPRINT(EM_DIAGRAM):   end;
1289313   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1289314   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1289315   +   end;
MPRINT(EM_DIAGRAM):   end;
1289316   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1289317   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1289318   +   end;
MPRINT(EM_DIAGRAM):   end;
1289319   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289320   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1289321   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1289322   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1289323   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1289324   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289325   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289326   +   end;
MPRINT(EM_DIAGRAM):   end;
1289327   +end;
MPRINT(EM_DIAGRAM):   end;
1289328   +
1289329   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1289330   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1289331   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1289332   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1289333   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1289334   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1289335   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1289336   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1289337   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1289338   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1289339   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1289340   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1289341   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1289342   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1289343   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289344   +end;
MPRINT(EM_DIAGRAM):   end;
1289345   +else do;
MPRINT(EM_DIAGRAM):   else do;
1289346   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1289347   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1289348   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1289349   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1289350   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1289351   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1289352   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1289353   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1289354   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1289355   +         end;
MPRINT(EM_DIAGRAM):   end;
1289356   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1289357   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1289358   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1289359   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1289360   +            end;
MPRINT(EM_DIAGRAM):   end;
1289361   +         end;
MPRINT(EM_DIAGRAM):   end;
1289362   +      end;
MPRINT(EM_DIAGRAM):   end;
1289363   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1289364   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1289365   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1289366   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1289367   +         end;
MPRINT(EM_DIAGRAM):   end;
1289368   +      end;
MPRINT(EM_DIAGRAM):   end;
1289369   +   end;
MPRINT(EM_DIAGRAM):   end;
1289370   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1289371   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1289372   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1289373   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1289374   +      end;
MPRINT(EM_DIAGRAM):   end;
1289375   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1289376   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1289377   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1289378   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1289379   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1289380   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1289381   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1289382   +         end;
MPRINT(EM_DIAGRAM):   end;
1289383   +      end;
MPRINT(EM_DIAGRAM):   end;
1289384   +   end;
MPRINT(EM_DIAGRAM):   end;
1289385   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1289386   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1289387   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1289388   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1289389   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1289390   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1289391   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289392   +   end;
MPRINT(EM_DIAGRAM):   end;
1289393   +end;
MPRINT(EM_DIAGRAM):   end;
1289394   +
1289395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289396   +*** Checking missing input Interval
1289397   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1289398   +
1289399   +IF NMISS(
1289400   +   AcceptedCmpTotal ,
1289401   +   Age ,
1289402   +   Frq ,
1289403   +   Income ,
1289404   +   Kidhome ,
1289405   +   Mnt ,
1289406   +   MntFishProducts ,
1289407   +   MntFruits ,
1289408   +   MntGoldProds ,
1289409   +   MntMeatProducts ,
1289410   +   MntSweetProducts ,
1289411   +   MntWines ,
1289412   +   MonthsAsCustomer ,
1289413   +   NumCatalogPurchases ,
1289414   +   NumDealsPurchases ,
1289415   +   NumDistPurchases ,
1289416   +   NumStorePurchases ,
1289417   +   NumWebPurchases ,
1289418   +   NumWebVisitsMonth ,
1289419   +   RFMstat ,
1289420   +   RMntFrq ,
1289421   +   Recency ,
1289422   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1289423   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1289424   +
1289425   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1289426   +END;
MPRINT(EM_DIAGRAM):   END;
1289427   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289428   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1289429   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289430   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1289431   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1289432   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1289433   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1289434   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1289435   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1289436   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1289437   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1289438   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1289439   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1289440   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1289441   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1289442   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1289443   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1289444   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1289445   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1289446   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1289447   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1289448   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1289449   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1289450   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1289451   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1289452   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1289453   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1289454   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1289455   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1289456   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1289457   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1289458   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1289459   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1289460   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1289461   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1289462   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1289463   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1289464   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1289465   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1289466   +END;
MPRINT(EM_DIAGRAM):   END;
1289467   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1289468   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1289469   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1289470   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1289471   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1289472   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1289473   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1289474   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1289475   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1289476   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1289477   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1289478   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1289479   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1289480   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1289481   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1289482   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1289483   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1289484   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1289485   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1289486   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1289487   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1289488   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1289489   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1289490   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1289491   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1289492   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1289493   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1289494   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1289495   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1289496   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1289497   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1289498   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1289499   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1289500   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1289501   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1289502   +   ELSE S_NumCatalogPurchases
1289503   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1289504   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1289505   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1289506   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1289507   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1289508   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1289509   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1289510   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1289511   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1289512   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1289513   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1289514   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1289515   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1289516   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1289517   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1289518   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1289519   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1289520   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1289521   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1289522   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1289523   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1289524   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1289525   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1289526   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1289527   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1289528   +END;
MPRINT(EM_DIAGRAM):   END;
1289529   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289530   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1289531   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289532   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289533   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1289534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289535   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289536   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1289537   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289538   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1289539   +   H1x1_1  =    -0.26269469382558 * S_AcceptedCmpTotal
1289540   +          +    -0.06270768091854 * S_Age  +    -0.71225988503068 * S_Frq
1289541   +          +    -0.19030550341755 * S_Income  +    -0.74001834753219 *
1289542   +        S_Kidhome  +    -0.80050230513362 * S_Mnt  +    -0.70546855957287 *
1289543   +        S_MntFishProducts  +    -0.57876563074872 * S_MntFruits
1289544   +          +    -0.00210300489306 * S_MntGoldProds  +     2.60078237485589 *
1289545   +        S_MntMeatProducts  +     -0.9886407516441 * S_MntSweetProducts
1289546   +          +    -2.97488547819955 * S_MntWines  +    -0.61277940059348 *
1289547   +        S_MonthsAsCustomer  +    -0.00096247683063 * S_NumCatalogPurchases
1289548   +          +     0.89422627895323 * S_NumDealsPurchases
1289549   +          +    -0.13304125929765 * S_NumDistPurchases
1289550   +          +    -1.04568442570811 * S_NumStorePurchases
1289551   +          +    -0.28677765126751 * S_NumWebPurchases
1289552   +          +      1.2327638737509 * S_NumWebVisitsMonth
1289553   +          +     0.67421347247009 * S_RFMstat  +     -0.6166808079836 *
1289554   +        S_RMntFrq  +    -0.86930969765816 * S_Recency
1289555   +          +     0.33815651609216 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.26269469382558 * S_AcceptedCmpTotal + -0.06270768091854 * 
S_Age + -0.71225988503068 * S_Frq + -0.19030550341755 * S_Income + -0.74001834753219 * 
S_Kidhome + -0.80050230513362 * S_Mnt + -0.70546855957287 * S_MntFishProducts + 
-0.57876563074872 * S_MntFruits + -0.00210300489306 * S_MntGoldProds + 2.60078237485589 * 
S_MntMeatProducts + -0.9886407516441 * S_MntSweetProducts + -2.97488547819955 * S_MntWines + 
-0.61277940059348 * S_MonthsAsCustomer + -0.00096247683063 * S_NumCatalogPurchases + 
0.89422627895323 * S_NumDealsPurchases + -0.13304125929765 * S_NumDistPurchases + 
-1.04568442570811 * S_NumStorePurchases + -0.28677765126751 * S_NumWebPurchases + 
1.2327638737509 * S_NumWebVisitsMonth + 0.67421347247009 * S_RFMstat + -0.6166808079836 * 
S_RMntFrq + -0.86930969765816 * S_Recency + 0.33815651609216 * S_Teenhome ;
1289556   +   H1x1_2  =     0.55568777293496 * S_AcceptedCmpTotal
1289557   +          +     0.80213442721076 * S_Age  +     0.34635060456486 * S_Frq
1289558   +          +    -0.74174636901916 * S_Income  +    -0.01217809906509 *
1289559   +        S_Kidhome  +     0.26876993353057 * S_Mnt  +     0.04779395124841 *
1289560   +        S_MntFishProducts  +    -0.48668668697685 * S_MntFruits
1289561   +          +    -0.53984501210781 * S_MntGoldProds  +     2.66892669248667 *
1289562   +        S_MntMeatProducts  +     0.48696031818599 * S_MntSweetProducts
1289563   +          +    -1.59625933837852 * S_MntWines  +     0.06275925418664 *
1289564   +        S_MonthsAsCustomer  +     0.97240339275782 * S_NumCatalogPurchases
1289565   +          +     0.04224590196535 * S_NumDealsPurchases
1289566   +          +     0.76554742700113 * S_NumDistPurchases
1289567   +          +    -0.49155496870812 * S_NumStorePurchases
1289568   +          +     0.59606812744403 * S_NumWebPurchases
1289569   +          +     1.86809286276405 * S_NumWebVisitsMonth
1289570   +          +    -0.40257502974261 * S_RFMstat  +    -1.46120938073597 *
1289571   +        S_RMntFrq  +    -2.09222283465666 * S_Recency
1289572   +          +    -0.29369632363913 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.55568777293496 * S_AcceptedCmpTotal + 0.80213442721076 * 
S_Age + 0.34635060456486 * S_Frq + -0.74174636901916 * S_Income + -0.01217809906509 * 
S_Kidhome + 0.26876993353057 * S_Mnt + 0.04779395124841 * S_MntFishProducts + 
-0.48668668697685 * S_MntFruits + -0.53984501210781 * S_MntGoldProds + 2.66892669248667 * 
S_MntMeatProducts + 0.48696031818599 * S_MntSweetProducts + -1.59625933837852 * S_MntWines + 
0.06275925418664 * S_MonthsAsCustomer + 0.97240339275782 * S_NumCatalogPurchases + 
0.04224590196535 * S_NumDealsPurchases + 0.76554742700113 * S_NumDistPurchases + 
-0.49155496870812 * S_NumStorePurchases + 0.59606812744403 * S_NumWebPurchases + 
1.86809286276405 * S_NumWebVisitsMonth + -0.40257502974261 * S_RFMstat + -1.46120938073597 * 
S_RMntFrq + -2.09222283465666 * S_Recency + -0.29369632363913 * S_Teenhome ;
1289573   +   H1x1_3  =    -1.40689454675752 * S_AcceptedCmpTotal
1289574   +          +     0.22713382517751 * S_Age  +     0.51688429566863 * S_Frq
1289575   +          +    -0.07045670111356 * S_Income  +     1.10344455539307 *
1289576   +        S_Kidhome  +     0.24846532877416 * S_Mnt  +       0.663861249099 *
1289577   +        S_MntFishProducts  +     0.91527393572467 * S_MntFruits
1289578   +          +    -0.30189545909263 * S_MntGoldProds  +    -0.72774030731928 *
1289579   +        S_MntMeatProducts  +     0.66425565932635 * S_MntSweetProducts
1289580   +          +     0.55381627079618 * S_MntWines  +      0.6475533846661 *
1289581   +        S_MonthsAsCustomer  +    -1.28926334887526 * S_NumCatalogPurchases
1289582   +          +    -0.04866536993486 * S_NumDealsPurchases
1289583   +          +    -0.53535979020214 * S_NumDistPurchases
1289584   +          +     2.20634071253676 * S_NumStorePurchases
1289585   +          +      0.6164564989007 * S_NumWebPurchases
1289586   +          +    -0.43396314395263 * S_NumWebVisitsMonth
1289587   +          +     0.05322242552204 * S_RFMstat  +     0.56410623855957 *
1289588   +        S_RMntFrq  +     2.37293441098349 * S_Recency
1289589   +          +     1.20608077690677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.40689454675752 * S_AcceptedCmpTotal + 0.22713382517751 * 
S_Age + 0.51688429566863 * S_Frq + -0.07045670111356 * S_Income + 1.10344455539307 * S_Kidhome 
+ 0.24846532877416 * S_Mnt + 0.663861249099 * S_MntFishProducts + 0.91527393572467 * 
S_MntFruits + -0.30189545909263 * S_MntGoldProds + -0.72774030731928 * S_MntMeatProducts + 
0.66425565932635 * S_MntSweetProducts + 0.55381627079618 * S_MntWines + 0.6475533846661 * 
S_MonthsAsCustomer + -1.28926334887526 * S_NumCatalogPurchases + -0.04866536993486 * 
S_NumDealsPurchases + -0.53535979020214 * S_NumDistPurchases + 2.20634071253676 * 
S_NumStorePurchases + 0.6164564989007 * S_NumWebPurchases + -0.43396314395263 * 
S_NumWebVisitsMonth + 0.05322242552204 * S_RFMstat + 0.56410623855957 * S_RMntFrq + 
2.37293441098349 * S_Recency + 1.20608077690677 * S_Teenhome ;
1289590   +   H1x1_4  =      0.8853369558336 * S_AcceptedCmpTotal
1289591   +          +    -0.02447538128281 * S_Age  +    -0.42850426895609 * S_Frq
1289592   +          +     2.31972189756282 * S_Income  +    -1.82782672643583 *
1289593   +        S_Kidhome  +     -0.0790436830894 * S_Mnt  +     0.24407556387791 *
1289594   +        S_MntFishProducts  +     0.21000125209328 * S_MntFruits
1289595   +          +     -0.0538417400508 * S_MntGoldProds  +     0.76422967678518 *
1289596   +        S_MntMeatProducts  +     0.14352092131967 * S_MntSweetProducts
1289597   +          +    -0.47732426074136 * S_MntWines  +      0.2881736828404 *
1289598   +        S_MonthsAsCustomer  +     1.08614742409725 * S_NumCatalogPurchases
1289599   +          +     1.37461255707863 * S_NumDealsPurchases
1289600   +          +    -0.17684775000818 * S_NumDistPurchases
1289601   +          +    -0.62755623855535 * S_NumStorePurchases
1289602   +          +    -1.46551649022657 * S_NumWebPurchases
1289603   +          +     3.35784247878638 * S_NumWebVisitsMonth
1289604   +          +      0.0205421093374 * S_RFMstat  +     0.02151146396087 *
1289605   +        S_RMntFrq  +    -2.61971612923471 * S_Recency
1289606   +          +    -1.74888814570254 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.8853369558336 * S_AcceptedCmpTotal + -0.02447538128281 * 
S_Age + -0.42850426895609 * S_Frq + 2.31972189756282 * S_Income + -1.82782672643583 * 
S_Kidhome + -0.0790436830894 * S_Mnt + 0.24407556387791 * S_MntFishProducts + 0.21000125209328 
* S_MntFruits + -0.0538417400508 * S_MntGoldProds + 0.76422967678518 * S_MntMeatProducts + 
0.14352092131967 * S_MntSweetProducts + -0.47732426074136 * S_MntWines + 0.2881736828404 * 
S_MonthsAsCustomer + 1.08614742409725 * S_NumCatalogPurchases + 1.37461255707863 * 
S_NumDealsPurchases + -0.17684775000818 * S_NumDistPurchases + -0.62755623855535 * 
S_NumStorePurchases + -1.46551649022657 * S_NumWebPurchases + 3.35784247878638 * 
S_NumWebVisitsMonth + 0.0205421093374 * S_RFMstat + 0.02151146396087 * S_RMntFrq + 
-2.61971612923471 * S_Recency + -1.74888814570254 * S_Teenhome ;
1289607   +   H1x1_5  =    -1.18321492018094 * S_AcceptedCmpTotal
1289608   +          +    -0.08221927436186 * S_Age  +    -0.42965792034093 * S_Frq
1289609   +          +    -0.82515640369651 * S_Income  +     -0.7955159282868 *
1289610   +        S_Kidhome  +    -0.24623211609742 * S_Mnt  +     1.14929640730402 *
1289611   +        S_MntFishProducts  +     0.37195406994279 * S_MntFruits
1289612   +          +    -0.11860313293867 * S_MntGoldProds  +     -5.1642360901608 *
1289613   +        S_MntMeatProducts  +     0.30315380386519 * S_MntSweetProducts
1289614   +          +     2.66130913318508 * S_MntWines  +    -0.35226665860471 *
1289615   +        S_MonthsAsCustomer  +    -1.90883979010829 * S_NumCatalogPurchases
1289616   +          +    -0.76256677907121 * S_NumDealsPurchases
1289617   +          +    -0.31591571751692 * S_NumDistPurchases
1289618   +          +      0.0506832614089 * S_NumStorePurchases
1289619   +          +      1.4636796923764 * S_NumWebPurchases
1289620   +          +     0.37743519705036 * S_NumWebVisitsMonth
1289621   +          +    -0.69857477383618 * S_RFMstat  +    -0.87851464788137 *
1289622   +        S_RMntFrq  +     0.16854775832723 * S_Recency
1289623   +          +     0.71697705359003 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.18321492018094 * S_AcceptedCmpTotal + -0.08221927436186 * 
S_Age + -0.42965792034093 * S_Frq + -0.82515640369651 * S_Income + -0.7955159282868 * 
S_Kidhome + -0.24623211609742 * S_Mnt + 1.14929640730402 * S_MntFishProducts + 
0.37195406994279 * S_MntFruits + -0.11860313293867 * S_MntGoldProds + -5.1642360901608 * 
S_MntMeatProducts + 0.30315380386519 * S_MntSweetProducts + 2.66130913318508 * S_MntWines + 
-0.35226665860471 * S_MonthsAsCustomer + -1.90883979010829 * S_NumCatalogPurchases + 
-0.76256677907121 * S_NumDealsPurchases + -0.31591571751692 * S_NumDistPurchases + 
0.0506832614089 * S_NumStorePurchases + 1.4636796923764 * S_NumWebPurchases + 0.37743519705036 
* S_NumWebVisitsMonth + -0.69857477383618 * S_RFMstat + -0.87851464788137 * S_RMntFrq + 
0.16854775832723 * S_Recency + 0.71697705359003 * S_Teenhome ;
1289624   +   H1x1_1  = H1x1_1  +    -0.36100598335798 * AcceptedCmp10
1289625   +          +    -0.80162089620833 * AcceptedCmp20  +    -0.32871385645151 *
1289626   +        AcceptedCmp30  +     0.06493645215559 * AcceptedCmp40
1289627   +          +    -0.79430619699627 * AcceptedCmp50  +    -0.55522128705257 *
1289628   +        Complain0  +    -0.30966226382805 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.36100598335798 * AcceptedCmp10 + -0.80162089620833 
* AcceptedCmp20 + -0.32871385645151 * AcceptedCmp30 + 0.06493645215559 * AcceptedCmp40 + 
-0.79430619699627 * AcceptedCmp50 + -0.55522128705257 * Complain0 + -0.30966226382805 * 
HigherEducationBinary0 ;
1289629   +   H1x1_2  = H1x1_2  +    -0.55315398954303 * AcceptedCmp10
1289630   +          +    -0.74882192477453 * AcceptedCmp20  +    -1.00393247543385 *
1289631   +        AcceptedCmp30  +    -0.99157595784247 * AcceptedCmp40
1289632   +          +     -1.3196947648703 * AcceptedCmp50  +    -0.00342039619706 *
1289633   +        Complain0  +     2.02148667926607 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.55315398954303 * AcceptedCmp10 + -0.74882192477453 
* AcceptedCmp20 + -1.00393247543385 * AcceptedCmp30 + -0.99157595784247 * AcceptedCmp40 + 
-1.3196947648703 * AcceptedCmp50 + -0.00342039619706 * Complain0 + 2.02148667926607 * 
HigherEducationBinary0 ;
1289634   +   H1x1_3  = H1x1_3  +    -1.34147425697576 * AcceptedCmp10
1289635   +          +     0.73907016980814 * AcceptedCmp20  +     0.73398008116032 *
1289636   +        AcceptedCmp30  +     0.96308137699431 * AcceptedCmp40
1289637   +          +     0.35561099349684 * AcceptedCmp50  +    -0.31219143781741 *
1289638   +        Complain0  +     0.90693629583865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -1.34147425697576 * AcceptedCmp10 + 0.73907016980814 * 
AcceptedCmp20 + 0.73398008116032 * AcceptedCmp30 + 0.96308137699431 * AcceptedCmp40 + 
0.35561099349684 * AcceptedCmp50 + -0.31219143781741 * Complain0 + 0.90693629583865 * 
HigherEducationBinary0 ;
1289639   +   H1x1_4  = H1x1_4  +    -0.50580436048114 * AcceptedCmp10
1289640   +          +    -1.02093523515462 * AcceptedCmp20  +    -0.61029325985231 *
1289641   +        AcceptedCmp30  +    -0.73402161144066 * AcceptedCmp40
1289642   +          +      0.1698155397807 * AcceptedCmp50  +    -0.01243044321253 *
1289643   +        Complain0  +    -0.47467816438005 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.50580436048114 * AcceptedCmp10 + -1.02093523515462 
* AcceptedCmp20 + -0.61029325985231 * AcceptedCmp30 + -0.73402161144066 * AcceptedCmp40 + 
0.1698155397807 * AcceptedCmp50 + -0.01243044321253 * Complain0 + -0.47467816438005 * 
HigherEducationBinary0 ;
1289644   +   H1x1_5  = H1x1_5  +     1.58877963639512 * AcceptedCmp10
1289645   +          +     0.71974146614964 * AcceptedCmp20  +    -0.38703518473707 *
1289646   +        AcceptedCmp30  +     0.18491867078918 * AcceptedCmp40
1289647   +          +     0.72124299050214 * AcceptedCmp50  +    -0.27317285634323 *
1289648   +        Complain0  +      0.1433377302902 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.58877963639512 * AcceptedCmp10 + 0.71974146614964 * 
AcceptedCmp20 + -0.38703518473707 * AcceptedCmp30 + 0.18491867078918 * AcceptedCmp40 + 
0.72124299050214 * AcceptedCmp50 + -0.27317285634323 * Complain0 + 0.1433377302902 * 
HigherEducationBinary0 ;
1289649   +   H1x1_1  = H1x1_1  +     0.29126191890253 * Education2n_Cycle
1289650   +          +    -0.73322213407659 * EducationBasic  +     0.33134572731882 *
1289651   +        EducationGraduation  +    -0.37141290775302 * EducationMaster
1289652   +          +     0.68641668264565 * Marital_StatusDivorced
1289653   +          +    -0.81586871439732 * Marital_StatusMarried
1289654   +          +     0.63758920518451 * Marital_StatusSingle
1289655   +          +    -1.07300023346175 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.29126191890253 * Education2n_Cycle + 
-0.73322213407659 * EducationBasic + 0.33134572731882 * EducationGraduation + 
-0.37141290775302 * EducationMaster + 0.68641668264565 * Marital_StatusDivorced + 
-0.81586871439732 * Marital_StatusMarried + 0.63758920518451 * Marital_StatusSingle + 
-1.07300023346175 * Marital_StatusTogether ;
1289656   +   H1x1_2  = H1x1_2  +     0.43078991783629 * Education2n_Cycle
1289657   +          +      0.6169213563952 * EducationBasic  +    -0.30246389091319 *
1289658   +        EducationGraduation  +     -0.4412391934844 * EducationMaster
1289659   +          +     0.05137560133238 * Marital_StatusDivorced
1289660   +          +    -2.24401993266209 * Marital_StatusMarried
1289661   +          +     1.57359386216115 * Marital_StatusSingle
1289662   +          +    -1.81897019215773 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.43078991783629 * Education2n_Cycle + 0.6169213563952 
* EducationBasic + -0.30246389091319 * EducationGraduation + -0.4412391934844 * 
EducationMaster + 0.05137560133238 * Marital_StatusDivorced + -2.24401993266209 * 
Marital_StatusMarried + 1.57359386216115 * Marital_StatusSingle + -1.81897019215773 * 
Marital_StatusTogether ;
1289663   +   H1x1_3  = H1x1_3  +     0.59284950139581 * Education2n_Cycle
1289664   +          +     0.47333255206751 * EducationBasic  +     0.43514421192824 *
1289665   +        EducationGraduation  +     0.61492669859334 * EducationMaster
1289666   +          +     -1.0649987815942 * Marital_StatusDivorced
1289667   +          +     0.76065111692388 * Marital_StatusMarried
1289668   +          +    -0.21694149754801 * Marital_StatusSingle
1289669   +          +     1.64182073896148 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.59284950139581 * Education2n_Cycle + 
0.47333255206751 * EducationBasic + 0.43514421192824 * EducationGraduation + 0.61492669859334 
* EducationMaster + -1.0649987815942 * Marital_StatusDivorced + 0.76065111692388 * 
Marital_StatusMarried + -0.21694149754801 * Marital_StatusSingle + 1.64182073896148 * 
Marital_StatusTogether ;
1289670   +   H1x1_4  = H1x1_4  +    -0.77613125849075 * Education2n_Cycle
1289671   +          +     0.26238013539868 * EducationBasic  +    -0.05526420132276 *
1289672   +        EducationGraduation  +     0.04208620358211 * EducationMaster
1289673   +          +     2.02155453548328 * Marital_StatusDivorced
1289674   +          +    -2.60190649735306 * Marital_StatusMarried
1289675   +          +     1.09149388354927 * Marital_StatusSingle
1289676   +          +    -1.15248770613963 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.77613125849075 * Education2n_Cycle + 
0.26238013539868 * EducationBasic + -0.05526420132276 * EducationGraduation + 0.04208620358211 
* EducationMaster + 2.02155453548328 * Marital_StatusDivorced + -2.60190649735306 * 
Marital_StatusMarried + 1.09149388354927 * Marital_StatusSingle + -1.15248770613963 * 
Marital_StatusTogether ;
1289677   +   H1x1_5  = H1x1_5  +    -0.03512618332303 * Education2n_Cycle
1289678   +          +    -0.14907811224838 * EducationBasic  +     0.24885029294709 *
1289679   +        EducationGraduation  +    -0.60853091001689 * EducationMaster
1289680   +          +     0.66315970650309 * Marital_StatusDivorced
1289681   +          +    -1.20476729758152 * Marital_StatusMarried
1289682   +          +     0.56175027826397 * Marital_StatusSingle
1289683   +          +    -1.12798745445913 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.03512618332303 * Education2n_Cycle + 
-0.14907811224838 * EducationBasic + 0.24885029294709 * EducationGraduation + 
-0.60853091001689 * EducationMaster + 0.66315970650309 * Marital_StatusDivorced + 
-1.20476729758152 * Marital_StatusMarried + 0.56175027826397 * Marital_StatusSingle + 
-1.12798745445913 * Marital_StatusTogether ;
1289684   +   H1x1_1  =      0.8264813299799 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.8264813299799 + H1x1_1 ;
1289685   +   H1x1_2  =     1.35924705880418 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.35924705880418 + H1x1_2 ;
1289686   +   H1x1_3  =    -0.31074016443189 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.31074016443189 + H1x1_3 ;
1289687   +   H1x1_4  =    -1.37395810355475 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.37395810355475 + H1x1_4 ;
1289688   +   H1x1_5  =    -0.62889533479826 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.62889533479826 + H1x1_5 ;
1289689   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
1289690   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
1289691   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1289692   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1289693   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1289694   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1289695   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1289696   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1289697   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1289698   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1289699   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1289700   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
1289701   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
1289702   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
1289703   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
1289704   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1289705   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1289706   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1289707   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1289708   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
1289709   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
1289710   +END;
MPRINT(EM_DIAGRAM):   END;
1289711   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1289712   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1289713   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1289714   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1289715   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1289716   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
1289717   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
1289718   +END;
MPRINT(EM_DIAGRAM):   END;
1289719   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289720   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
1289721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289722   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1289723   +   H1x2_1  =     0.56269814727649 * S_AcceptedCmpTotal
1289724   +          +    -0.56663088753275 * S_Age  +    -0.08799157593784 * S_Frq
1289725   +          +      0.8158986182256 * S_Income  +     0.25081960997161 *
1289726   +        S_Kidhome  +    -0.53258140179906 * S_Mnt  +     0.15843644803762 *
1289727   +        S_MntFishProducts  +    -0.87373368590299 * S_MntFruits
1289728   +          +     0.02807252984992 * S_MntGoldProds  +     1.41661611364623 *
1289729   +        S_MntMeatProducts  +     1.22431140889383 * S_MntSweetProducts
1289730   +          +    -0.25451913627032 * S_MntWines  +     0.13515407201266 *
1289731   +        S_MonthsAsCustomer  +     1.28583120667445 * S_NumCatalogPurchases
1289732   +          +     1.50005927423985 * S_NumDealsPurchases
1289733   +          +      0.5590536933569 * S_NumDistPurchases
1289734   +          +    -0.61757824339318 * S_NumStorePurchases
1289735   +          +     0.37259686538158 * S_NumWebPurchases
1289736   +          +     2.59725437895564 * S_NumWebVisitsMonth
1289737   +          +     1.61096386499852 * S_RFMstat  +      0.6096177019772 *
1289738   +        S_RMntFrq  +    -2.38795796980324 * S_Recency
1289739   +          +    -0.31987414022375 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.56269814727649 * S_AcceptedCmpTotal + -0.56663088753275 * 
S_Age + -0.08799157593784 * S_Frq + 0.8158986182256 * S_Income + 0.25081960997161 * S_Kidhome 
+ -0.53258140179906 * S_Mnt + 0.15843644803762 * S_MntFishProducts + -0.87373368590299 * 
S_MntFruits + 0.02807252984992 * S_MntGoldProds + 1.41661611364623 * S_MntMeatProducts + 
1.22431140889383 * S_MntSweetProducts + -0.25451913627032 * S_MntWines + 0.13515407201266 * 
S_MonthsAsCustomer + 1.28583120667445 * S_NumCatalogPurchases + 1.50005927423985 * 
S_NumDealsPurchases + 0.5590536933569 * S_NumDistPurchases + -0.61757824339318 * 
S_NumStorePurchases + 0.37259686538158 * S_NumWebPurchases + 2.59725437895564 * 
S_NumWebVisitsMonth + 1.61096386499852 * S_RFMstat + 0.6096177019772 * S_RMntFrq + 
-2.38795796980324 * S_Recency + -0.31987414022375 * S_Teenhome ;
1289740   +   H1x2_2  =    -1.93801069736585 * S_AcceptedCmpTotal
1289741   +          +     1.10394781020217 * S_Age  +    -0.47335296021798 * S_Frq
1289742   +          +    -1.34212492602253 * S_Income  +    -1.34380793722996 *
1289743   +        S_Kidhome  +      0.9110881410704 * S_Mnt  +    -2.21001317666388 *
1289744   +        S_MntFishProducts  +     0.73821267564247 * S_MntFruits
1289745   +          +     0.16536006752146 * S_MntGoldProds  +     0.03402222784641 *
1289746   +        S_MntMeatProducts  +     0.96043668102736 * S_MntSweetProducts
1289747   +          +    -1.40670343451334 * S_MntWines  +     0.81378739821838 *
1289748   +        S_MonthsAsCustomer  +    -0.45596935664336 * S_NumCatalogPurchases
1289749   +          +    -0.09282222088797 * S_NumDealsPurchases
1289750   +          +     0.10726247938321 * S_NumDistPurchases
1289751   +          +     -1.1235971458527 * S_NumStorePurchases
1289752   +          +    -0.78304387839877 * S_NumWebPurchases
1289753   +          +    -0.44139243179956 * S_NumWebVisitsMonth
1289754   +          +    -0.00027499457791 * S_RFMstat  +    -0.71480759211982 *
1289755   +        S_RMntFrq  +     2.19072220135069 * S_Recency
1289756   +          +    -0.32246312005896 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.93801069736585 * S_AcceptedCmpTotal + 1.10394781020217 * 
S_Age + -0.47335296021798 * S_Frq + -1.34212492602253 * S_Income + -1.34380793722996 * 
S_Kidhome + 0.9110881410704 * S_Mnt + -2.21001317666388 * S_MntFishProducts + 0.73821267564247 
* S_MntFruits + 0.16536006752146 * S_MntGoldProds + 0.03402222784641 * S_MntMeatProducts + 
0.96043668102736 * S_MntSweetProducts + -1.40670343451334 * S_MntWines + 0.81378739821838 * 
S_MonthsAsCustomer + -0.45596935664336 * S_NumCatalogPurchases + -0.09282222088797 * 
S_NumDealsPurchases + 0.10726247938321 * S_NumDistPurchases + -1.1235971458527 * 
S_NumStorePurchases + -0.78304387839877 * S_NumWebPurchases + -0.44139243179956 * 
S_NumWebVisitsMonth + -0.00027499457791 * S_RFMstat + -0.71480759211982 * S_RMntFrq + 
2.19072220135069 * S_Recency + -0.32246312005896 * S_Teenhome ;
1289757   +   H1x2_3  =    -0.33286965179681 * S_AcceptedCmpTotal
1289758   +          +     0.25643420238739 * S_Age  +     1.78251276306291 * S_Frq
1289759   +          +     0.42668628662657 * S_Income  +    -0.44555069154972 *
1289760   +        S_Kidhome  +     0.99430376599176 * S_Mnt  +     0.37152911215285 *
1289761   +        S_MntFishProducts  +    -1.00181313725345 * S_MntFruits
1289762   +          +    -1.88393479121141 * S_MntGoldProds  +    -1.71643056154209 *
1289763   +        S_MntMeatProducts  +    -0.69325136508245 * S_MntSweetProducts
1289764   +          +     0.36062578298416 * S_MntWines  +    -1.43361051175418 *
1289765   +        S_MonthsAsCustomer  +     0.92624996511804 * S_NumCatalogPurchases
1289766   +          +     0.35349185459988 * S_NumDealsPurchases
1289767   +          +     0.06853677714859 * S_NumDistPurchases
1289768   +          +    -1.47546012999338 * S_NumStorePurchases
1289769   +          +     0.20926435398916 * S_NumWebPurchases
1289770   +          +    -1.00535683639093 * S_NumWebVisitsMonth
1289771   +          +     0.39738023685345 * S_RFMstat  +     0.54359550262445 *
1289772   +        S_RMntFrq  +    -1.59138379954757 * S_Recency
1289773   +          +    -0.72224029606658 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.33286965179681 * S_AcceptedCmpTotal + 0.25643420238739 * 
S_Age + 1.78251276306291 * S_Frq + 0.42668628662657 * S_Income + -0.44555069154972 * S_Kidhome 
+ 0.99430376599176 * S_Mnt + 0.37152911215285 * S_MntFishProducts + -1.00181313725345 * 
S_MntFruits + -1.88393479121141 * S_MntGoldProds + -1.71643056154209 * S_MntMeatProducts + 
-0.69325136508245 * S_MntSweetProducts + 0.36062578298416 * S_MntWines + -1.43361051175418 * 
S_MonthsAsCustomer + 0.92624996511804 * S_NumCatalogPurchases + 0.35349185459988 * 
S_NumDealsPurchases + 0.06853677714859 * S_NumDistPurchases + -1.47546012999338 * 
S_NumStorePurchases + 0.20926435398916 * S_NumWebPurchases + -1.00535683639093 * 
S_NumWebVisitsMonth + 0.39738023685345 * S_RFMstat + 0.54359550262445 * S_RMntFrq + 
-1.59138379954757 * S_Recency + -0.72224029606658 * S_Teenhome ;
1289774   +   H1x2_4  =     -0.0656876758781 * S_AcceptedCmpTotal
1289775   +          +    -0.38220805193452 * S_Age  +    -0.62740801625755 * S_Frq
1289776   +          +     0.62992117571672 * S_Income  +      1.6289723191423 *
1289777   +        S_Kidhome  +     0.37209535830613 * S_Mnt  +     0.55983487785376 *
1289778   +        S_MntFishProducts  +    -2.12992009015736 * S_MntFruits
1289779   +          +    -0.38291517806426 * S_MntGoldProds  +    -1.36584955015054 *
1289780   +        S_MntMeatProducts  +     0.60790195398286 * S_MntSweetProducts
1289781   +          +     2.43674403604903 * S_MntWines  +     -0.0680555682506 *
1289782   +        S_MonthsAsCustomer  +    -0.38141588539042 * S_NumCatalogPurchases
1289783   +          +      0.3873586120272 * S_NumDealsPurchases
1289784   +          +     0.25911651157596 * S_NumDistPurchases
1289785   +          +     1.58922489084287 * S_NumStorePurchases
1289786   +          +     0.49041797743368 * S_NumWebPurchases
1289787   +          +     -1.5425586871929 * S_NumWebVisitsMonth
1289788   +          +    -0.68794085469802 * S_RFMstat  +     1.43555366196783 *
1289789   +        S_RMntFrq  +     1.03099569333498 * S_Recency
1289790   +          +    -0.33160793159803 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.0656876758781 * S_AcceptedCmpTotal + -0.38220805193452 * 
S_Age + -0.62740801625755 * S_Frq + 0.62992117571672 * S_Income + 1.6289723191423 * S_Kidhome 
+ 0.37209535830613 * S_Mnt + 0.55983487785376 * S_MntFishProducts + -2.12992009015736 * 
S_MntFruits + -0.38291517806426 * S_MntGoldProds + -1.36584955015054 * S_MntMeatProducts + 
0.60790195398286 * S_MntSweetProducts + 2.43674403604903 * S_MntWines + -0.0680555682506 * 
S_MonthsAsCustomer + -0.38141588539042 * S_NumCatalogPurchases + 0.3873586120272 * 
S_NumDealsPurchases + 0.25911651157596 * S_NumDistPurchases + 1.58922489084287 * 
S_NumStorePurchases + 0.49041797743368 * S_NumWebPurchases + -1.5425586871929 * 
S_NumWebVisitsMonth + -0.68794085469802 * S_RFMstat + 1.43555366196783 * S_RMntFrq + 
1.03099569333498 * S_Recency + -0.33160793159803 * S_Teenhome ;
1289791   +   H1x2_5  =      1.1619646008295 * S_AcceptedCmpTotal
1289792   +          +     -1.1099918698895 * S_Age  +     1.07090049938562 * S_Frq
1289793   +          +     0.68405730495336 * S_Income  +     0.10310173850527 *
1289794   +        S_Kidhome  +    -0.20536085581003 * S_Mnt  +    -0.13505440333321 *
1289795   +        S_MntFishProducts  +      0.7330354505267 * S_MntFruits
1289796   +          +    -0.09266368133722 * S_MntGoldProds  +     0.11251229112529 *
1289797   +        S_MntMeatProducts  +     0.93293215365852 * S_MntSweetProducts
1289798   +          +    -0.30739945619686 * S_MntWines  +     1.60111236559554 *
1289799   +        S_MonthsAsCustomer  +    -0.55541485540949 * S_NumCatalogPurchases
1289800   +          +    -0.60830880287865 * S_NumDealsPurchases
1289801   +          +      0.0745331267194 * S_NumDistPurchases
1289802   +          +    -1.39472448256952 * S_NumStorePurchases
1289803   +          +     1.95372179969087 * S_NumWebPurchases
1289804   +          +    -0.63307356390404 * S_NumWebVisitsMonth
1289805   +          +    -1.45142676869601 * S_RFMstat  +    -0.89091053567015 *
1289806   +        S_RMntFrq  +    -0.29197897313114 * S_Recency
1289807   +          +     0.02610681671236 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.1619646008295 * S_AcceptedCmpTotal + -1.1099918698895 * S_Age 
+ 1.07090049938562 * S_Frq + 0.68405730495336 * S_Income + 0.10310173850527 * S_Kidhome + 
-0.20536085581003 * S_Mnt + -0.13505440333321 * S_MntFishProducts + 0.7330354505267 * 
S_MntFruits + -0.09266368133722 * S_MntGoldProds + 0.11251229112529 * S_MntMeatProducts + 
0.93293215365852 * S_MntSweetProducts + -0.30739945619686 * S_MntWines + 1.60111236559554 * 
S_MonthsAsCustomer + -0.55541485540949 * S_NumCatalogPurchases + -0.60830880287865 * 
S_NumDealsPurchases + 0.0745331267194 * S_NumDistPurchases + -1.39472448256952 * 
S_NumStorePurchases + 1.95372179969087 * S_NumWebPurchases + -0.63307356390404 * 
S_NumWebVisitsMonth + -1.45142676869601 * S_RFMstat + -0.89091053567015 * S_RMntFrq + 
-0.29197897313114 * S_Recency + 0.02610681671236 * S_Teenhome ;
1289808   +   H1x2_1  = H1x2_1  +    -0.60663534965526 * AcceptedCmp10
1289809   +          +     0.86940361180064 * AcceptedCmp20  +     1.96097801395475 *
1289810   +        AcceptedCmp30  +    -0.07604718607607 * AcceptedCmp40
1289811   +          +    -2.82012437662904 * AcceptedCmp50  +     2.92223307409835 *
1289812   +        Complain0  +      0.7388639458943 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.60663534965526 * AcceptedCmp10 + 0.86940361180064 * 
AcceptedCmp20 + 1.96097801395475 * AcceptedCmp30 + -0.07604718607607 * AcceptedCmp40 + 
-2.82012437662904 * AcceptedCmp50 + 2.92223307409835 * Complain0 + 0.7388639458943 * 
HigherEducationBinary0 ;
1289813   +   H1x2_2  = H1x2_2  +    -0.44975979140124 * AcceptedCmp10
1289814   +          +    -0.14894854897951 * AcceptedCmp20  +     1.05214102326393 *
1289815   +        AcceptedCmp30  +    -0.24568060312448 * AcceptedCmp40
1289816   +          +    -0.32148548771167 * AcceptedCmp50  +    -0.06212131202705 *
1289817   +        Complain0  +    -1.15456299494407 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.44975979140124 * AcceptedCmp10 + -0.14894854897951 
* AcceptedCmp20 + 1.05214102326393 * AcceptedCmp30 + -0.24568060312448 * AcceptedCmp40 + 
-0.32148548771167 * AcceptedCmp50 + -0.06212131202705 * Complain0 + -1.15456299494407 * 
HigherEducationBinary0 ;
1289818   +   H1x2_3  = H1x2_3  +     0.05559829595526 * AcceptedCmp10
1289819   +          +    -0.79357273390501 * AcceptedCmp20  +     1.19638475921939 *
1289820   +        AcceptedCmp30  +     -0.4185483500346 * AcceptedCmp40
1289821   +          +     1.62070541716774 * AcceptedCmp50  +     0.42618871432227 *
1289822   +        Complain0  +    -1.31545071935076 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.05559829595526 * AcceptedCmp10 + -0.79357273390501 * 
AcceptedCmp20 + 1.19638475921939 * AcceptedCmp30 + -0.4185483500346 * AcceptedCmp40 + 
1.62070541716774 * AcceptedCmp50 + 0.42618871432227 * Complain0 + -1.31545071935076 * 
HigherEducationBinary0 ;
1289823   +   H1x2_4  = H1x2_4  +     0.79295384489774 * AcceptedCmp10
1289824   +          +    -1.12840237512106 * AcceptedCmp20  +     1.32129555401653 *
1289825   +        AcceptedCmp30  +    -0.25952521594596 * AcceptedCmp40
1289826   +          +     0.80872302488736 * AcceptedCmp50  +     1.00677398871609 *
1289827   +        Complain0  +    -0.40309387727555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.79295384489774 * AcceptedCmp10 + -1.12840237512106 * 
AcceptedCmp20 + 1.32129555401653 * AcceptedCmp30 + -0.25952521594596 * AcceptedCmp40 + 
0.80872302488736 * AcceptedCmp50 + 1.00677398871609 * Complain0 + -0.40309387727555 * 
HigherEducationBinary0 ;
1289828   +   H1x2_5  = H1x2_5  +     0.27407087260629 * AcceptedCmp10
1289829   +          +    -1.62993283587806 * AcceptedCmp20  +     -0.7976151702219 *
1289830   +        AcceptedCmp30  +    -1.43236001965205 * AcceptedCmp40
1289831   +          +     0.31785497417833 * AcceptedCmp50  +     -0.4935881696628 *
1289832   +        Complain0  +    -0.90101154412077 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.27407087260629 * AcceptedCmp10 + -1.62993283587806 * 
AcceptedCmp20 + -0.7976151702219 * AcceptedCmp30 + -1.43236001965205 * AcceptedCmp40 + 
0.31785497417833 * AcceptedCmp50 + -0.4935881696628 * Complain0 + -0.90101154412077 * 
HigherEducationBinary0 ;
1289833   +   H1x2_1  = H1x2_1  +    -0.42532202605687 * Education2n_Cycle
1289834   +          +     0.05209663685716 * EducationBasic  +     1.32477268007154 *
1289835   +        EducationGraduation  +    -1.16900224373137 * EducationMaster
1289836   +          +    -1.33377871643323 * Marital_StatusDivorced
1289837   +          +    -0.87184228840898 * Marital_StatusMarried
1289838   +          +     1.41223186340257 * Marital_StatusSingle
1289839   +          +     0.26542930660962 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.42532202605687 * Education2n_Cycle + 
0.05209663685716 * EducationBasic + 1.32477268007154 * EducationGraduation + -1.16900224373137 
* EducationMaster + -1.33377871643323 * Marital_StatusDivorced + -0.87184228840898 * 
Marital_StatusMarried + 1.41223186340257 * Marital_StatusSingle + 0.26542930660962 * 
Marital_StatusTogether ;
1289840   +   H1x2_2  = H1x2_2  +     0.31980851177227 * Education2n_Cycle
1289841   +          +     1.82629979795037 * EducationBasic  +     0.59482979766527 *
1289842   +        EducationGraduation  +     0.38341272155343 * EducationMaster
1289843   +          +    -0.21479890935233 * Marital_StatusDivorced
1289844   +          +     -0.0025459519579 * Marital_StatusMarried
1289845   +          +     1.33900491702264 * Marital_StatusSingle
1289846   +          +     0.31338385402434 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.31980851177227 * Education2n_Cycle + 
1.82629979795037 * EducationBasic + 0.59482979766527 * EducationGraduation + 0.38341272155343 
* EducationMaster + -0.21479890935233 * Marital_StatusDivorced + -0.0025459519579 * 
Marital_StatusMarried + 1.33900491702264 * Marital_StatusSingle + 0.31338385402434 * 
Marital_StatusTogether ;
1289847   +   H1x2_3  = H1x2_3  +     -1.1277686958847 * Education2n_Cycle
1289848   +          +    -0.32701971979058 * EducationBasic  +      0.4361680205519 *
1289849   +        EducationGraduation  +     0.60739269725685 * EducationMaster
1289850   +          +    -0.38307267471999 * Marital_StatusDivorced
1289851   +          +     0.97088969451415 * Marital_StatusMarried
1289852   +          +    -0.28578224473381 * Marital_StatusSingle
1289853   +          +     0.16178086683874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -1.1277686958847 * Education2n_Cycle + 
-0.32701971979058 * EducationBasic + 0.4361680205519 * EducationGraduation + 0.60739269725685 
* EducationMaster + -0.38307267471999 * Marital_StatusDivorced + 0.97088969451415 * 
Marital_StatusMarried + -0.28578224473381 * Marital_StatusSingle + 0.16178086683874 * 
Marital_StatusTogether ;
1289854   +   H1x2_4  = H1x2_4  +    -1.21481485652985 * Education2n_Cycle
1289855   +          +    -0.30231261977781 * EducationBasic  +     0.33993210461674 *
1289856   +        EducationGraduation  +     0.14160673378252 * EducationMaster
1289857   +          +    -1.42229401093569 * Marital_StatusDivorced
1289858   +          +      0.7234508382397 * Marital_StatusMarried
1289859   +          +    -0.29062202974628 * Marital_StatusSingle
1289860   +          +     1.00102560376832 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.21481485652985 * Education2n_Cycle + 
-0.30231261977781 * EducationBasic + 0.33993210461674 * EducationGraduation + 0.14160673378252 
* EducationMaster + -1.42229401093569 * Marital_StatusDivorced + 0.7234508382397 * 
Marital_StatusMarried + -0.29062202974628 * Marital_StatusSingle + 1.00102560376832 * 
Marital_StatusTogether ;
1289861   +   H1x2_5  = H1x2_5  +     0.47313927233084 * Education2n_Cycle
1289862   +          +     0.53675687099431 * EducationBasic  +    -0.75029054398953 *
1289863   +        EducationGraduation  +     -0.7118631990538 * EducationMaster
1289864   +          +    -0.99067637207205 * Marital_StatusDivorced
1289865   +          +    -0.50245902142079 * Marital_StatusMarried
1289866   +          +     0.54214494533793 * Marital_StatusSingle
1289867   +          +    -1.90023876403873 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.47313927233084 * Education2n_Cycle + 
0.53675687099431 * EducationBasic + -0.75029054398953 * EducationGraduation + -0.7118631990538 
* EducationMaster + -0.99067637207205 * Marital_StatusDivorced + -0.50245902142079 * 
Marital_StatusMarried + 0.54214494533793 * Marital_StatusSingle + -1.90023876403873 * 
Marital_StatusTogether ;
1289868   +   H1x2_1  =    -0.76220110175787 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.76220110175787 + H1x2_1 ;
1289869   +   H1x2_2  =     0.33238308796509 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.33238308796509 + H1x2_2 ;
1289870   +   H1x2_3  =    -1.79229186263718 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.79229186263718 + H1x2_3 ;
1289871   +   H1x2_4  =     2.90076107393596 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 2.90076107393596 + H1x2_4 ;
1289872   +   H1x2_5  =    -1.75965576502183 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -1.75965576502183 + H1x2_5 ;
1289873   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
1289874   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
1289875   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1289876   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
1289877   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
1289878   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
1289879   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
1289880   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
1289881   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
1289882   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
1289883   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
1289884   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
1289885   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
1289886   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
1289887   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
1289888   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
1289889   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
1289890   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
1289891   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
1289892   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
1289893   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
1289894   +END;
MPRINT(EM_DIAGRAM):   END;
1289895   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1289896   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
1289897   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
1289898   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
1289899   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
1289900   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
1289901   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
1289902   +END;
MPRINT(EM_DIAGRAM):   END;
1289903   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289904   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
1289905   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289906   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1289907   +   H2x1_1  =       1.974359971482 * H1x1_1  +     2.56630185065386 * H1x1_2
1289908   +          +    -2.09978917716486 * H1x1_3  +      2.5733942680354 * H1x1_4
1289909   +          +    -3.36902992698085 * H1x1_5  +    -2.45757278280195 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.974359971482 * H1x1_1 + 2.56630185065386 * H1x1_2 + 
-2.09978917716486 * H1x1_3 + 2.5733942680354 * H1x1_4 + -3.36902992698085 * H1x1_5 + 
-2.45757278280195 * H1x1_6 ;
1289910   +   H2x1_2  =    -0.31797232371002 * H1x1_1  +     1.40395330167402 * H1x1_2
1289911   +          +     1.81616324109762 * H1x1_3  +     1.53849589982775 * H1x1_4
1289912   +          +    -0.63132385856109 * H1x1_5  +    -2.28426391810485 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.31797232371002 * H1x1_1 + 1.40395330167402 * H1x1_2 + 
1.81616324109762 * H1x1_3 + 1.53849589982775 * H1x1_4 + -0.63132385856109 * H1x1_5 + 
-2.28426391810485 * H1x1_6 ;
1289913   +   H2x1_3  =    -1.34821716876354 * H1x1_1  +    -1.59136815069547 * H1x1_2
1289914   +          +     1.51830421093731 * H1x1_3  +     0.25947292816575 * H1x1_4
1289915   +          +     0.68626537551183 * H1x1_5  +     0.08021226539433 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -1.34821716876354 * H1x1_1 + -1.59136815069547 * H1x1_2 + 
1.51830421093731 * H1x1_3 + 0.25947292816575 * H1x1_4 + 0.68626537551183 * H1x1_5 + 
0.08021226539433 * H1x1_6 ;
1289916   +   H2x1_4  =     1.81371453071507 * H1x1_1  +     2.86509325576366 * H1x1_2
1289917   +          +    -2.51923468751378 * H1x1_3  +     3.48823967488449 * H1x1_4
1289918   +          +    -1.98439811139438 * H1x1_5  +    -1.35359233519863 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.81371453071507 * H1x1_1 + 2.86509325576366 * H1x1_2 + 
-2.51923468751378 * H1x1_3 + 3.48823967488449 * H1x1_4 + -1.98439811139438 * H1x1_5 + 
-1.35359233519863 * H1x1_6 ;
1289919   +   H2x1_5  =     2.41779243188377 * H1x1_1  +     2.38684872287302 * H1x1_2
1289920   +          +    -2.38697428830295 * H1x1_3  +     3.64463866412774 * H1x1_4
1289921   +          +    -6.25925640356471 * H1x1_5  +    -2.41187367604766 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 2.41779243188377 * H1x1_1 + 2.38684872287302 * H1x1_2 + 
-2.38697428830295 * H1x1_3 + 3.64463866412774 * H1x1_4 + -6.25925640356471 * H1x1_5 + 
-2.41187367604766 * H1x1_6 ;
1289922   +   H2x1_6  =    -0.72042650045348 * H1x1_1  +      0.1896194130913 * H1x1_2
1289923   +          +     0.90899894568677 * H1x1_3  +    -1.82868335056689 * H1x1_4
1289924   +          +     0.25430380699211 * H1x1_5  +     0.21617396847163 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.72042650045348 * H1x1_1 + 0.1896194130913 * H1x1_2 + 
0.90899894568677 * H1x1_3 + -1.82868335056689 * H1x1_4 + 0.25430380699211 * H1x1_5 + 
0.21617396847163 * H1x1_6 ;
1289925   +   H2x1_1  = H2x1_1  +     1.25654059966646 * H1x2_1
1289926   +          +     1.54802434303135 * H1x2_2  +     -0.8831980397117 * H1x2_3
1289927   +          +    -0.06778839937099 * H1x2_4  +      0.5440972304381 * H1x2_5
1289928   +          +      0.2606136576082 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 1.25654059966646 * H1x2_1 + 1.54802434303135 * H1x2_2 
+ -0.8831980397117 * H1x2_3 + -0.06778839937099 * H1x2_4 + 0.5440972304381 * H1x2_5 + 
0.2606136576082 * H1x2_6 ;
1289929   +   H2x1_2  = H2x1_2  +      1.1804478706954 * H1x2_1
1289930   +          +    -1.54526687654235 * H1x2_2  +    -1.84586479319799 * H1x2_3
1289931   +          +     1.53060510120437 * H1x2_4  +     1.17038673632413 * H1x2_5
1289932   +          +    -0.33816948355449 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 1.1804478706954 * H1x2_1 + -1.54526687654235 * H1x2_2 
+ -1.84586479319799 * H1x2_3 + 1.53060510120437 * H1x2_4 + 1.17038673632413 * H1x2_5 + 
-0.33816948355449 * H1x2_6 ;
1289933   +   H2x1_3  = H2x1_3  +    -0.17829043463382 * H1x2_1
1289934   +          +    -0.25137506897353 * H1x2_2  +     0.16242586068799 * H1x2_3
1289935   +          +    -0.09404795949359 * H1x2_4  +    -0.46228597203598 * H1x2_5
1289936   +          +    -2.05648585275111 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.17829043463382 * H1x2_1 + -0.25137506897353 * 
H1x2_2 + 0.16242586068799 * H1x2_3 + -0.09404795949359 * H1x2_4 + -0.46228597203598 * H1x2_5 + 
-2.05648585275111 * H1x2_6 ;
1289937   +   H2x1_4  = H2x1_4  +     0.42433995729877 * H1x2_1
1289938   +          +    -0.48506090180667 * H1x2_2  +    -2.00023889633201 * H1x2_3
1289939   +          +    -2.18353148884875 * H1x2_4  +      1.8888560029491 * H1x2_5
1289940   +          +     0.10756694741742 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.42433995729877 * H1x2_1 + -0.48506090180667 * H1x2_2 
+ -2.00023889633201 * H1x2_3 + -2.18353148884875 * H1x2_4 + 1.8888560029491 * H1x2_5 + 
0.10756694741742 * H1x2_6 ;
1289941   +   H2x1_5  = H2x1_5  +     1.56363187716685 * H1x2_1
1289942   +          +    -1.60380055270086 * H1x2_2  +    -0.10253336309679 * H1x2_3
1289943   +          +    -0.70868484989608 * H1x2_4  +    -1.01428312449496 * H1x2_5
1289944   +          +    -0.52564497366659 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 1.56363187716685 * H1x2_1 + -1.60380055270086 * H1x2_2 
+ -0.10253336309679 * H1x2_3 + -0.70868484989608 * H1x2_4 + -1.01428312449496 * H1x2_5 + 
-0.52564497366659 * H1x2_6 ;
1289945   +   H2x1_6  = H2x1_6  +    -2.54663319607132 * H1x2_1
1289946   +          +    -0.26971572820094 * H1x2_2  +      0.0632302804701 * H1x2_3
1289947   +          +     0.24322354570335 * H1x2_4  +     0.66904111988013 * H1x2_5
1289948   +          +     0.74493468449949 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -2.54663319607132 * H1x2_1 + -0.26971572820094 * 
H1x2_2 + 0.0632302804701 * H1x2_3 + 0.24322354570335 * H1x2_4 + 0.66904111988013 * H1x2_5 + 
0.74493468449949 * H1x2_6 ;
1289949   +   H2x1_1  =    -0.48109096483079 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.48109096483079 + H2x1_1 ;
1289950   +   H2x1_2  =     1.80708027085243 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.80708027085243 + H2x1_2 ;
1289951   +   H2x1_3  =    -0.46023689639613 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.46023689639613 + H2x1_3 ;
1289952   +   H2x1_4  =     0.33871753804401 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 0.33871753804401 + H2x1_4 ;
1289953   +   H2x1_5  =    -0.31584249921712 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.31584249921712 + H2x1_5 ;
1289954   +   H2x1_6  =     0.30285416134468 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.30285416134468 + H2x1_6 ;
1289955   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
1289956   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
1289957   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
1289958   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
1289959   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
1289960   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
1289961   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
1289962   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
1289963   +END;
MPRINT(EM_DIAGRAM):   END;
1289964   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1289965   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
1289966   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
1289967   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
1289968   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
1289969   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
1289970   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
1289971   +END;
MPRINT(EM_DIAGRAM):   END;
1289972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289973   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1289974   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289975   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1289976   +   P_DepVar1  =     7.89179702798476 * H2x1_1  +    -2.13955806072986 * H2x1_2
1289977   +          +    -3.88305304025889 * H2x1_3  +     4.07340753853874 * H2x1_4
1289978   +          +     7.74293596833296 * H2x1_5  +     -3.8939011811129 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.89179702798476 * H2x1_1 + -2.13955806072986 * H2x1_2 + 
-3.88305304025889 * H2x1_3 + 4.07340753853874 * H2x1_4 + 7.74293596833296 * H2x1_5 + 
-3.8939011811129 * H2x1_6 ;
1289979   +   P_DepVar1  =    -5.20107973804597 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.20107973804597 + P_DepVar1 ;
1289980   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1289981   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1289982   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1289983   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1289984   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1289985   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1289986   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1289987   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1289988   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1289989   +END;
MPRINT(EM_DIAGRAM):   END;
1289990   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1289991   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1289992   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1289993   +END;
MPRINT(EM_DIAGRAM):   END;
1289994   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1289995   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1289996   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1289997   +END;
MPRINT(EM_DIAGRAM):   END;
1289998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1289999   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1290000   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290001   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1290002   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1290003   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1290004   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1290005   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1290006   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1290007   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1290008   +END;
MPRINT(EM_DIAGRAM):   END;
1290009   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1290010   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1290011   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1290012   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1290013    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1290014    quit;
1290015    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1290016    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1290017    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1290018    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
1290019    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1290020    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1290021    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1290022    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1290023    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290024    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME 
CREATOR);
1290025    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1290026    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290027    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1290028    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1290029    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1290030    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290031    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
1290032    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1290033    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1290034    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1290035    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290036    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1290037    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1290038    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1290039    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290040    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1290041    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1290041  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3291 rows and 5 columns.

1290042    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1290043    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
1290044    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3291 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 3291 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290045    filename _pref
1290045  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1290046    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1290047    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1290048   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1290049   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1290050   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1290051   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1290052   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1290053   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1290054    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1290055    quit;
1290056    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1290057    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1290058    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1290059    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1290060    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1290061    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290062    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1290063    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1290064    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1290065    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1290066    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1290067    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290068    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1290069    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1290070    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1290071    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290072    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1290073    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1290074    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1290075    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1290076    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290077    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1290078    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1290079    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1290080    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290081    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1290082    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1290082  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1290083    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1290084    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
1290085    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 3295 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290086    filename _pref
1290086  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1290087    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1290088    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1290089   +
1290090   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1290091   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1290091  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1290092   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1290093   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1290094   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1290095   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1290096   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1290097    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1290098    quit;
1290099    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1290100    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1290101    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1290102    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1290103    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1290104    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290105    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1290106    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1290107    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290108    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1290109    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1290110    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290111    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1290112    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1290113    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1290114    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290115    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1290116    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290117    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1290118    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1290119    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290120    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1290121    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1290122    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1290123    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1290124    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1290125    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1290125  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1290126    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290127    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
1290128    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 3334 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290129    filename _pref
1290129  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1290130    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1290131    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1290132   +
1290133   +
1290134   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1290135   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1290136   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1290137   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1290138   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1290139   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1290140   +
1290141   +
1290142   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1290143   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1290144   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1290145   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1290146   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1290147   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1290148   +
1290149   +
1290150   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1290151   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1290152   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1290153   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1290154   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1290155   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1290156   +
1290157   +
1290158   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1290159   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1290160   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1290161   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1290162   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1290163   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1290164   +
1290165   +
1290166   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1290167   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1290168   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1290169   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1290170   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1290171   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1290172   +
1290173   +
1290174   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1290175   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1290176   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1290177   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1290178   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1290179   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1290180   +
1290181   +
1290182   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1290183   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1290184   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1290185   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1290186   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1290187   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1290188   +
1290189   +
1290190   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1290191   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1290192   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1290193   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1290194   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1290195   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1290196   +if
1290197   +_FILTERNORM1 not in ( '.')
1290198   + and
1290199   +_FILTERNORM2 not in ( '.')
1290200   + and
1290201   +_FILTERNORM3 not in ( '.')
1290202   + and
1290203   +_FILTERNORM4 not in ( '.')
1290204   + and
1290205   +_FILTERNORM5 not in ( '.')
1290206   + and
1290207   +_FILTERNORM6 not in ( '.')
1290208   + and
1290209   +_FILTERNORM7 not in ( ' ')
1290210   + and
1290211   +_FILTERNORM8 not in ( ' ')
1290212   +and
1290213   +( Dt_Customer ne .)
1290214   +and ( Income ne . and (Income<=107000))
1290215   +and ( Kidhome ne .)
1290216   +and ( MntFishProducts ne .)
1290217   +and ( MntFruits ne .)
1290218   +and ( MntGoldProds ne .)
1290219   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1290220   +and ( MntSweetProducts ne .)
1290221   +and ( MntWines ne .)
1290222   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1290223   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1290224   +and ( NumStorePurchases ne .)
1290225   +and ( NumWebPurchases ne .)
1290226   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1290227   +and ( Recency ne .)
1290228   +and ( Teenhome ne .)
1290229   +and ( Year_Birth ne .)
1290230   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1290231   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1290232   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1290233   +end;
MPRINT(EM_DIAGRAM):   end;
1290234   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1290235   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1290236    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1290237    quit;
1290238    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1290239    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1290240    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1290241    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1290242    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1290243    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290244    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1290245    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1290246    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1290247    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1290248    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1290249    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290250    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1290251    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1290252    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1290253    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290254    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1290255    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1290256    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1290257    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1290258    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290259    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1290260    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1290261    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1290262    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290263    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1290264    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1290264  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1290265    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1290266    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
1290267    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 3400 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290268    %macro varDept(fcmpdata=,id=);
1290269    %global nobs&id scoreFlag&id;
1290270    %let scoreFlag&id = 0;
1290271    %if &id=1 or ^&fcmpStart %then %do;
1290272    proc sort data=&fcmpdata out=_temp&id nodupkey;
1290273    by NAME;
1290274    where id=&id and LHS in( %let j=1;
1290275    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1290276    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1290277    "&var" %let j = %eval(&j+1);
1290278    %end;
1290279    );
1290280    run;
1290281    %let dsid = %sysfunc(open(_temp&id));
1290282    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1290283    %let dsid = %sysfunc(close(&dsid));
1290284    %if &&nobs&id %then %do;
1290285    %let scoreFlag&id = 1;
1290286    %let fcmpStart = 1;
1290287    %end;
1290288    %else %let fcmpStart = 0;
1290289    %end;
1290290    %else %do;
1290291    proc sort data=&fcmpdata out=_tempid;
1290292    where id=&id;
1290293    by LHS;
1290294    run;
1290295    %let dsid = %sysfunc(open(_tempid));
1290296    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1290297    %let dsid = %sysfunc(close(&dsid));
1290298    %if ^&&nobs&id %then %do;
1290299    proc datasets lib=work nolist;
1290300    delete _tempid;
1290301    run;
1290302    quit;
1290303    %end;
1290304    %else %do;
1290305    data _tempAll;
1290306    set %let j=%eval(&id-1);
1290307    %do x=1 %to &j;
1290308    %if &&nobs&x %then %do;
1290309    _temp&x %end;
1290310    %end;
1290311    ;
1290312    run;
1290313    proc sql;
1290314    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1290314  ! work._tempid p2 where p.name=p2.lhs;
1290315    quit;
1290316    data _temp&id;
1290317    set _temp&id;
1290318    where LHS ne '' and NAME ne '' and Node ne '';
1290319    run;
1290320    proc datasets lib=work nolist;
1290321    delete _tempAll;
1290322    run;
1290323    %let dsid = %sysfunc(open(_temp&id));
1290324    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1290325    %let dsid = %sysfunc(close(&dsid));
1290326    %if ^&&nobs&id %then %do;
1290327    proc datasets lib=work nolist;
1290328    delete _temp&id;
1290329    run;
1290330    quit;
1290331    %end;
1290332    %else %do;
1290333    %let scoreFlag&id = 1;
1290334    data _temp&id;
1290335    set _temp&id;
1290336    where LHS ne NAME and node ne '';
1290337    run;
1290338    %let dsid = %sysfunc(open(_temp&id));
1290339    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1290340    %let dsid = %sysfunc(close(&dsid));
1290341    %if ^&&nobs&id %then %do;
1290342    proc datasets lib=work nolist;
1290343    delete _temp&id;
1290344    run;
1290345    quit;
1290346    %end;
1290347    %else %do;
1290348    proc sort data=_temp&id nodupkey;
1290349    by LHS NAME;
1290350    run;
1290351    %end;
1290352    %end;
1290353    %end;
1290354    %end;
1290355    %mend varDept;
1290356    %macro optCode(outdata=fcmpdata);
1290357    %global fcmpStart;
1290358    %let fcmpStart = 0;
1290359    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1290360    %let NumNodes=9;
1290361    %do k=1 %to &NumNodes;
1290362    %vardept(fcmpdata=&outdata, id=&k);
1290363    %end;
1290364    %mend optCode;
1290365    %optcode(outData=EMWS8.Ensmbl45_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 188 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 136 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 52 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 52 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 56 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 95 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1290366    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1290367    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1290368    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1290369    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290370    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1290371    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1290372    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1290373    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290374    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1290375    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1290375  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1290376    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1290377    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1290378    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1290379    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1290380    filename _pref
1290380  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
1290381    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1290382    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
1290383   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1290384   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1290385   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1290386   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1290387   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1290388   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1290389   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1290390   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1290391   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1290392   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1290393   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1290394   +LENGTH _WARN_ $4
1290395   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1290396   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1290397   +
1290398   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1290399   +
1290400   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1290401   +
1290402   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1290403   +
1290404   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1290405   +
1290406   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1290407   +
1290408   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1290409   +
1290410   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1290411   +
1290412   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1290413   +
1290414   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1290415   +
1290416   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1290417   +
1290418   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1290419   +
1290420   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1290421   +
1290422   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1290423   +
1290424   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1290425   +
1290426   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1290427   +
1290428   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1290429   +
1290430   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1290431   +
1290432   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1290433   +
1290434   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1290435   +
1290436   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1290437   +
1290438   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1290439   +
1290440   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1290441   +
1290442   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1290443   +
1290444   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1290445   +
1290446   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1290447   +
1290448   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1290449   +
1290450   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1290451   +
1290452   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1290453   +
1290454   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1290455   +
1290456   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1290457   +
1290458   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1290459   +
1290460   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1290461   +
1290462   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1290463   +
1290464   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1290465   +
1290466   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1290467   +
1290468   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1290469   +
1290470   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1290471   +
1290472   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
1290473   +
1290474   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
1290475   +
1290476   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
1290477   +
1290478   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
1290479   +
1290480   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1290481   +
1290482   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1290483   +
1290484   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1290485   +
1290486   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1290487   +
1290488   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1290489   +
1290490   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1290491   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1290492   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1290493   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1290494   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1290495   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290496   +end;
MPRINT(EM_DIAGRAM):   end;
1290497   +else do;
MPRINT(EM_DIAGRAM):   else do;
1290498   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1290499   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1290500   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1290501   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1290502   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1290503   +   end;
MPRINT(EM_DIAGRAM):   end;
1290504   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1290505   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1290506   +   end;
MPRINT(EM_DIAGRAM):   end;
1290507   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1290508   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1290509   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1290510   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290511   +   end;
MPRINT(EM_DIAGRAM):   end;
1290512   +end;
MPRINT(EM_DIAGRAM):   end;
1290513   +
1290514   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1290515   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1290516   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1290517   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1290518   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1290519   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290520   +end;
MPRINT(EM_DIAGRAM):   end;
1290521   +else do;
MPRINT(EM_DIAGRAM):   else do;
1290522   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1290523   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1290524   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1290525   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1290526   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1290527   +   end;
MPRINT(EM_DIAGRAM):   end;
1290528   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1290529   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1290530   +   end;
MPRINT(EM_DIAGRAM):   end;
1290531   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1290532   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1290533   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1290534   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290535   +   end;
MPRINT(EM_DIAGRAM):   end;
1290536   +end;
MPRINT(EM_DIAGRAM):   end;
1290537   +
1290538   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1290539   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1290540   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1290541   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1290542   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1290543   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290544   +end;
MPRINT(EM_DIAGRAM):   end;
1290545   +else do;
MPRINT(EM_DIAGRAM):   else do;
1290546   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1290547   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1290548   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1290549   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1290550   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1290551   +   end;
MPRINT(EM_DIAGRAM):   end;
1290552   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1290553   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1290554   +   end;
MPRINT(EM_DIAGRAM):   end;
1290555   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1290556   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1290557   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1290558   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290559   +   end;
MPRINT(EM_DIAGRAM):   end;
1290560   +end;
MPRINT(EM_DIAGRAM):   end;
1290561   +
1290562   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1290563   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1290564   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1290565   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1290566   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1290567   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290568   +end;
MPRINT(EM_DIAGRAM):   end;
1290569   +else do;
MPRINT(EM_DIAGRAM):   else do;
1290570   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1290571   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1290572   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1290573   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1290574   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1290575   +   end;
MPRINT(EM_DIAGRAM):   end;
1290576   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1290577   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1290578   +   end;
MPRINT(EM_DIAGRAM):   end;
1290579   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1290580   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1290581   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1290582   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290583   +   end;
MPRINT(EM_DIAGRAM):   end;
1290584   +end;
MPRINT(EM_DIAGRAM):   end;
1290585   +
1290586   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1290587   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1290588   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1290589   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1290590   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1290591   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290592   +end;
MPRINT(EM_DIAGRAM):   end;
1290593   +else do;
MPRINT(EM_DIAGRAM):   else do;
1290594   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1290595   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1290596   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1290597   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1290598   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1290599   +   end;
MPRINT(EM_DIAGRAM):   end;
1290600   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1290601   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1290602   +   end;
MPRINT(EM_DIAGRAM):   end;
1290603   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1290604   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1290605   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1290606   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290607   +   end;
MPRINT(EM_DIAGRAM):   end;
1290608   +end;
MPRINT(EM_DIAGRAM):   end;
1290609   +
1290610   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1290611   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1290612   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1290613   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1290614   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1290615   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290616   +end;
MPRINT(EM_DIAGRAM):   end;
1290617   +else do;
MPRINT(EM_DIAGRAM):   else do;
1290618   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1290619   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1290620   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1290621   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1290622   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1290623   +   end;
MPRINT(EM_DIAGRAM):   end;
1290624   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1290625   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1290626   +   end;
MPRINT(EM_DIAGRAM):   end;
1290627   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1290628   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1290629   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1290630   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290631   +   end;
MPRINT(EM_DIAGRAM):   end;
1290632   +end;
MPRINT(EM_DIAGRAM):   end;
1290633   +
1290634   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1290635   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1290636   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1290637   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1290638   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1290639   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290640   +end;
MPRINT(EM_DIAGRAM):   end;
1290641   +else do;
MPRINT(EM_DIAGRAM):   else do;
1290642   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1290643   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1290644   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1290645   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1290646   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1290647   +   end;
MPRINT(EM_DIAGRAM):   end;
1290648   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1290649   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1290650   +   end;
MPRINT(EM_DIAGRAM):   end;
1290651   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1290652   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1290653   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1290654   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290655   +   end;
MPRINT(EM_DIAGRAM):   end;
1290656   +end;
MPRINT(EM_DIAGRAM):   end;
1290657   +
1290658   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1290659   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1290660   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1290661   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1290662   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1290663   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1290664   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1290665   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1290666   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1290667   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1290668   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1290669   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1290670   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1290671   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290672   +end;
MPRINT(EM_DIAGRAM):   end;
1290673   +else do;
MPRINT(EM_DIAGRAM):   else do;
1290674   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1290675   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1290676   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1290677   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1290678   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1290679   +   end;
MPRINT(EM_DIAGRAM):   end;
1290680   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1290681   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1290682   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1290683   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1290684   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1290685   +   end;
MPRINT(EM_DIAGRAM):   end;
1290686   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1290687   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1290688   +   end;
MPRINT(EM_DIAGRAM):   end;
1290689   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1290690   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1290691   +   end;
MPRINT(EM_DIAGRAM):   end;
1290692   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1290693   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1290694   +   end;
MPRINT(EM_DIAGRAM):   end;
1290695   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1290696   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1290697   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1290698   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1290699   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1290700   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1290701   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290702   +   end;
MPRINT(EM_DIAGRAM):   end;
1290703   +end;
MPRINT(EM_DIAGRAM):   end;
1290704   +
1290705   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1290706   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1290707   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1290708   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1290709   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1290710   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1290711   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1290712   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1290713   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1290714   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1290715   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1290716   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1290717   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1290718   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1290719   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290720   +end;
MPRINT(EM_DIAGRAM):   end;
1290721   +else do;
MPRINT(EM_DIAGRAM):   else do;
1290722   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1290723   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1290724   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1290725   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1290726   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1290727   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1290728   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1290729   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1290730   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1290731   +         end;
MPRINT(EM_DIAGRAM):   end;
1290732   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1290733   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1290734   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1290735   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1290736   +            end;
MPRINT(EM_DIAGRAM):   end;
1290737   +         end;
MPRINT(EM_DIAGRAM):   end;
1290738   +      end;
MPRINT(EM_DIAGRAM):   end;
1290739   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1290740   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1290741   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1290742   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1290743   +         end;
MPRINT(EM_DIAGRAM):   end;
1290744   +      end;
MPRINT(EM_DIAGRAM):   end;
1290745   +   end;
MPRINT(EM_DIAGRAM):   end;
1290746   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1290747   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1290748   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1290749   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1290750   +      end;
MPRINT(EM_DIAGRAM):   end;
1290751   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1290752   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1290753   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1290754   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1290755   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1290756   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1290757   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1290758   +         end;
MPRINT(EM_DIAGRAM):   end;
1290759   +      end;
MPRINT(EM_DIAGRAM):   end;
1290760   +   end;
MPRINT(EM_DIAGRAM):   end;
1290761   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1290762   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1290763   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1290764   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1290765   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1290766   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1290767   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290768   +   end;
MPRINT(EM_DIAGRAM):   end;
1290769   +end;
MPRINT(EM_DIAGRAM):   end;
1290770   +
1290771   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290772   +*** Checking missing input Interval
1290773   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1290774   +
1290775   +IF NMISS(
1290776   +   AcceptedCmpTotal ,
1290777   +   Age ,
1290778   +   Frq ,
1290779   +   Income ,
1290780   +   Kidhome ,
1290781   +   Mnt ,
1290782   +   MntFishProducts ,
1290783   +   MntFruits ,
1290784   +   MntGoldProds ,
1290785   +   MntMeatProducts ,
1290786   +   MntSweetProducts ,
1290787   +   MntWines ,
1290788   +   MonthsAsCustomer ,
1290789   +   NumCatalogPurchases ,
1290790   +   NumDealsPurchases ,
1290791   +   NumDistPurchases ,
1290792   +   NumStorePurchases ,
1290793   +   NumWebPurchases ,
1290794   +   NumWebVisitsMonth ,
1290795   +   RFMstat ,
1290796   +   RMntFrq ,
1290797   +   Recency ,
1290798   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
1290799   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1290800   +
1290801   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1290802   +END;
MPRINT(EM_DIAGRAM):   END;
1290803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290804   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1290805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290806   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1290807   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1290808   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1290809   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1290810   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1290811   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1290812   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1290813   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1290814   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1290815   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1290816   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1290817   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1290818   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1290819   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1290820   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1290821   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1290822   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1290823   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1290824   +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1290825   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1290826   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1290827   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1290828   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1290829   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1290830   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1290831   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1290832   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1290833   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1290834   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1290835   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1290836   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1290837   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1290838   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1290839   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1290840   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1290841   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1290842   +END;
MPRINT(EM_DIAGRAM):   END;
1290843   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1290844   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1290845   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1290846   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1290847   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1290848   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1290849   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1290850   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1290851   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1290852   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1290853   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1290854   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1290855   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1290856   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1290857   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1290858   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1290859   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1290860   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1290861   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1290862   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1290863   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1290864   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1290865   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1290866   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1290867   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1290868   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1290869   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1290870   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1290871   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1290872   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1290873   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1290874   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1290875   +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
1290876   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
1290877   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1290878   +   ELSE S_NumCatalogPurchases
1290879   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1290880   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1290881   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1290882   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1290883   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1290884   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1290885   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1290886   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
1290887   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1290888   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1290889   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1290890   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1290891   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1290892   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1290893   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1290894   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1290895   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1290896   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1290897   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1290898   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1290899   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1290900   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1290901   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1290902   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1290903   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1290904   +END;
MPRINT(EM_DIAGRAM):   END;
1290905   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290906   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
1290907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290908   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290909   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1290910   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290911   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290912   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
1290913   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1290914   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1290915   +   H1x1_1  =    -1.01373445510498 * S_AcceptedCmpTotal
1290916   +          +     0.33447979473871 * S_Age  +    -0.49864038088294 * S_Frq
1290917   +          +     0.31694253224638 * S_Income  +    -0.88502516255759 *
1290918   +        S_Kidhome  +    -0.95839165156922 * S_Mnt  +     1.08690890979971 *
1290919   +        S_MntFishProducts  +     0.21350737967446 * S_MntFruits
1290920   +          +     0.07347211887091 * S_MntGoldProds  +    -4.25839540508751 *
1290921   +        S_MntMeatProducts  +    -0.18409636621761 * S_MntSweetProducts
1290922   +          +     0.92254071667819 * S_MntWines  +     0.17286447654032 *
1290923   +        S_MonthsAsCustomer  +    -1.64446119745791 * S_NumCatalogPurchases
1290924   +          +    -1.14704878034134 * S_NumDealsPurchases
1290925   +          +    -0.17763404274659 * S_NumDistPurchases
1290926   +          +     0.08894400267969 * S_NumStorePurchases
1290927   +          +     0.59283747891957 * S_NumWebPurchases
1290928   +          +     0.85268274682505 * S_NumWebVisitsMonth
1290929   +          +    -0.43035426151546 * S_RFMstat  +     0.52915289749814 *
1290930   +        S_RMntFrq  +    -1.22871580072103 * S_Recency
1290931   +          +    -0.42049179704691 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.01373445510498 * S_AcceptedCmpTotal + 0.33447979473871 * 
S_Age + -0.49864038088294 * S_Frq + 0.31694253224638 * S_Income + -0.88502516255759 * 
S_Kidhome + -0.95839165156922 * S_Mnt + 1.08690890979971 * S_MntFishProducts + 
0.21350737967446 * S_MntFruits + 0.07347211887091 * S_MntGoldProds + -4.25839540508751 * 
S_MntMeatProducts + -0.18409636621761 * S_MntSweetProducts + 0.92254071667819 * S_MntWines + 
0.17286447654032 * S_MonthsAsCustomer + -1.64446119745791 * S_NumCatalogPurchases + 
-1.14704878034134 * S_NumDealsPurchases + -0.17763404274659 * S_NumDistPurchases + 
0.08894400267969 * S_NumStorePurchases + 0.59283747891957 * S_NumWebPurchases + 
0.85268274682505 * S_NumWebVisitsMonth + -0.43035426151546 * S_RFMstat + 0.52915289749814 * 
S_RMntFrq + -1.22871580072103 * S_Recency + -0.42049179704691 * S_Teenhome ;
1290932   +   H1x1_2  =    -0.17196520392875 * S_AcceptedCmpTotal
1290933   +          +     0.09368836975829 * S_Age  +     -0.2079821803313 * S_Frq
1290934   +          +    -0.59508480939905 * S_Income  +     0.34485068405931 *
1290935   +        S_Kidhome  +     0.68503953220301 * S_Mnt  +    -0.41832366462675 *
1290936   +        S_MntFishProducts  +      0.3374808822635 * S_MntFruits
1290937   +          +     0.41521872138137 * S_MntGoldProds  +     1.55234986522641 *
1290938   +        S_MntMeatProducts  +     0.17336981388128 * S_MntSweetProducts
1290939   +          +    -0.03736062165339 * S_MntWines  +     0.20414742233604 *
1290940   +        S_MonthsAsCustomer  +    -1.29756795361717 * S_NumCatalogPurchases
1290941   +          +    -0.80841566068716 * S_NumDealsPurchases
1290942   +          +    -0.17995640033768 * S_NumDistPurchases
1290943   +          +     0.00713417460936 * S_NumStorePurchases
1290944   +          +     0.57881024323076 * S_NumWebPurchases
1290945   +          +    -1.35134224257365 * S_NumWebVisitsMonth
1290946   +          +     0.63440441349443 * S_RFMstat  +      0.7029589919795 *
1290947   +        S_RMntFrq  +     1.16978656262499 * S_Recency
1290948   +          +     0.22916564304766 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.17196520392875 * S_AcceptedCmpTotal + 0.09368836975829 * 
S_Age + -0.2079821803313 * S_Frq + -0.59508480939905 * S_Income + 0.34485068405931 * S_Kidhome 
+ 0.68503953220301 * S_Mnt + -0.41832366462675 * S_MntFishProducts + 0.3374808822635 * 
S_MntFruits + 0.41521872138137 * S_MntGoldProds + 1.55234986522641 * S_MntMeatProducts + 
0.17336981388128 * S_MntSweetProducts + -0.03736062165339 * S_MntWines + 0.20414742233604 * 
S_MonthsAsCustomer + -1.29756795361717 * S_NumCatalogPurchases + -0.80841566068716 * 
S_NumDealsPurchases + -0.17995640033768 * S_NumDistPurchases + 0.00713417460936 * 
S_NumStorePurchases + 0.57881024323076 * S_NumWebPurchases + -1.35134224257365 * 
S_NumWebVisitsMonth + 0.63440441349443 * S_RFMstat + 0.7029589919795 * S_RMntFrq + 
1.16978656262499 * S_Recency + 0.22916564304766 * S_Teenhome ;
1290949   +   H1x1_3  =     1.25968793568007 * S_AcceptedCmpTotal
1290950   +          +     0.16058002256905 * S_Age  +    -1.00283978743671 * S_Frq
1290951   +          +     0.80202770811665 * S_Income  +     -0.7384690128283 *
1290952   +        S_Kidhome  +      0.6320116033322 * S_Mnt  +    -0.48862240567237 *
1290953   +        S_MntFishProducts  +     0.26477442063044 * S_MntFruits
1290954   +          +       0.434753861356 * S_MntGoldProds  +     3.54637875222405 *
1290955   +        S_MntMeatProducts  +    -0.09532877173293 * S_MntSweetProducts
1290956   +          +    -0.60614222423624 * S_MntWines  +     0.06807192728487 *
1290957   +        S_MonthsAsCustomer  +     0.45280110551612 * S_NumCatalogPurchases
1290958   +          +     0.57891364118717 * S_NumDealsPurchases
1290959   +          +    -0.31024556838688 * S_NumDistPurchases
1290960   +          +    -1.48708542986704 * S_NumStorePurchases
1290961   +          +    -0.93009875249206 * S_NumWebPurchases
1290962   +          +     2.01900039122935 * S_NumWebVisitsMonth
1290963   +          +     0.50006472616383 * S_RFMstat  +    -1.16854599018819 *
1290964   +        S_RMntFrq  +    -2.30414631760388 * S_Recency
1290965   +          +    -0.64226055895142 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.25968793568007 * S_AcceptedCmpTotal + 0.16058002256905 * 
S_Age + -1.00283978743671 * S_Frq + 0.80202770811665 * S_Income + -0.7384690128283 * S_Kidhome 
+ 0.6320116033322 * S_Mnt + -0.48862240567237 * S_MntFishProducts + 0.26477442063044 * 
S_MntFruits + 0.434753861356 * S_MntGoldProds + 3.54637875222405 * S_MntMeatProducts + 
-0.09532877173293 * S_MntSweetProducts + -0.60614222423624 * S_MntWines + 0.06807192728487 * 
S_MonthsAsCustomer + 0.45280110551612 * S_NumCatalogPurchases + 0.57891364118717 * 
S_NumDealsPurchases + -0.31024556838688 * S_NumDistPurchases + -1.48708542986704 * 
S_NumStorePurchases + -0.93009875249206 * S_NumWebPurchases + 2.01900039122935 * 
S_NumWebVisitsMonth + 0.50006472616383 * S_RFMstat + -1.16854599018819 * S_RMntFrq + 
-2.30414631760388 * S_Recency + -0.64226055895142 * S_Teenhome ;
1290966   +   H1x1_1  = H1x1_1  +     0.90039925512906 * AcceptedCmp10
1290967   +          +    -0.47386683647261 * AcceptedCmp20  +    -0.71163968851557 *
1290968   +        AcceptedCmp30  +    -1.10005761198573 * AcceptedCmp40
1290969   +          +     0.81604940024858 * AcceptedCmp50  +    -0.03266697009221 *
1290970   +        Complain0  +     0.45877513475435 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.90039925512906 * AcceptedCmp10 + -0.47386683647261 * 
AcceptedCmp20 + -0.71163968851557 * AcceptedCmp30 + -1.10005761198573 * AcceptedCmp40 + 
0.81604940024858 * AcceptedCmp50 + -0.03266697009221 * Complain0 + 0.45877513475435 * 
HigherEducationBinary0 ;
1290971   +   H1x1_2  = H1x1_2  +    -0.09498245462104 * AcceptedCmp10
1290972   +          +     -0.5878058848086 * AcceptedCmp20  +     1.08802173663414 *
1290973   +        AcceptedCmp30  +      0.4681907014168 * AcceptedCmp40
1290974   +          +    -1.71290692396514 * AcceptedCmp50  +    -0.47229847844337 *
1290975   +        Complain0  +     0.41790693564846 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.09498245462104 * AcceptedCmp10 + -0.5878058848086 * 
AcceptedCmp20 + 1.08802173663414 * AcceptedCmp30 + 0.4681907014168 * AcceptedCmp40 + 
-1.71290692396514 * AcceptedCmp50 + -0.47229847844337 * Complain0 + 0.41790693564846 * 
HigherEducationBinary0 ;
1290976   +   H1x1_3  = H1x1_3  +    -0.14466250407205 * AcceptedCmp10
1290977   +          +    -0.05281153450358 * AcceptedCmp20  +     0.30771572513376 *
1290978   +        AcceptedCmp30  +    -0.25237634767535 * AcceptedCmp40
1290979   +          +    -2.36680490171638 * AcceptedCmp50  +    -0.12273085838026 *
1290980   +        Complain0  +     0.40951032893236 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14466250407205 * AcceptedCmp10 + -0.05281153450358 
* AcceptedCmp20 + 0.30771572513376 * AcceptedCmp30 + -0.25237634767535 * AcceptedCmp40 + 
-2.36680490171638 * AcceptedCmp50 + -0.12273085838026 * Complain0 + 0.40951032893236 * 
HigherEducationBinary0 ;
1290981   +   H1x1_1  = H1x1_1  +    -0.00834762223325 * Education2n_Cycle
1290982   +          +    -0.42766880626216 * EducationBasic  +    -0.47517247816239 *
1290983   +        EducationGraduation  +    -0.68730596079478 * EducationMaster
1290984   +          +     0.55883606830033 * Marital_StatusDivorced
1290985   +          +    -0.54530037567066 * Marital_StatusMarried
1290986   +          +    -0.52994736075753 * Marital_StatusSingle
1290987   +          +    -0.53882341831078 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.00834762223325 * Education2n_Cycle + 
-0.42766880626216 * EducationBasic + -0.47517247816239 * EducationGraduation + 
-0.68730596079478 * EducationMaster + 0.55883606830033 * Marital_StatusDivorced + 
-0.54530037567066 * Marital_StatusMarried + -0.52994736075753 * Marital_StatusSingle + 
-0.53882341831078 * Marital_StatusTogether ;
1290988   +   H1x1_2  = H1x1_2  +    -0.22709215793074 * Education2n_Cycle
1290989   +          +     0.07643166113928 * EducationBasic  +    -0.97269335071824 *
1290990   +        EducationGraduation  +     0.31201349236277 * EducationMaster
1290991   +          +    -1.07368484057033 * Marital_StatusDivorced
1290992   +          +     2.73313504711262 * Marital_StatusMarried
1290993   +          +    -2.18530462876058 * Marital_StatusSingle
1290994   +          +     2.38158278480467 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.22709215793074 * Education2n_Cycle + 
0.07643166113928 * EducationBasic + -0.97269335071824 * EducationGraduation + 0.31201349236277 
* EducationMaster + -1.07368484057033 * Marital_StatusDivorced + 2.73313504711262 * 
Marital_StatusMarried + -2.18530462876058 * Marital_StatusSingle + 2.38158278480467 * 
Marital_StatusTogether ;
1290995   +   H1x1_3  = H1x1_3  +     0.04453578767387 * Education2n_Cycle
1290996   +          +    -0.65383041132508 * EducationBasic  +    -0.17789960866108 *
1290997   +        EducationGraduation  +    -0.35544166792219 * EducationMaster
1290998   +          +     0.49993144243043 * Marital_StatusDivorced
1290999   +          +    -0.38953339116829 * Marital_StatusMarried
1291000   +          +    -0.10836287319942 * Marital_StatusSingle
1291001   +          +    -0.42049990939036 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.04453578767387 * Education2n_Cycle + 
-0.65383041132508 * EducationBasic + -0.17789960866108 * EducationGraduation + 
-0.35544166792219 * EducationMaster + 0.49993144243043 * Marital_StatusDivorced + 
-0.38953339116829 * Marital_StatusMarried + -0.10836287319942 * Marital_StatusSingle + 
-0.42049990939036 * Marital_StatusTogether ;
1291002   +   H1x1_1  =    -0.67322256806566 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.67322256806566 + H1x1_1 ;
1291003   +   H1x1_2  =     1.02621981675321 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.02621981675321 + H1x1_2 ;
1291004   +   H1x1_3  =     1.79721701815172 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.79721701815172 + H1x1_3 ;
1291005   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
1291006   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
1291007   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1291008   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
1291009   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
1291010   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
1291011   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
1291012   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
1291013   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
1291014   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
1291015   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
1291016   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
1291017   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
1291018   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
1291019   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
1291020   +END;
MPRINT(EM_DIAGRAM):   END;
1291021   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1291022   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
1291023   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
1291024   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
1291025   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
1291026   +END;
MPRINT(EM_DIAGRAM):   END;
1291027   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1291028   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1291029   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1291030   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1291031   +   P_DepVar1  =    -3.84261611144245 * H1x1_1  +    -7.15065431642895 * H1x1_2
1291032   +          +       11.29639646928 * H1x1_3  +    -2.12563351481128 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.84261611144245 * H1x1_1 + -7.15065431642895 * H1x1_2 + 
11.29639646928 * H1x1_3 + -2.12563351481128 * H1x1_4 ;
1291033   +   P_DepVar1  =    -3.54755955929493 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.54755955929493 + P_DepVar1 ;
1291034   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1291035   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1291036   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1291037   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1291038   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1291039   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1291040   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1291041   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1291042   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1291043   +END;
MPRINT(EM_DIAGRAM):   END;
1291044   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1291045   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1291046   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1291047   +END;
MPRINT(EM_DIAGRAM):   END;
1291048   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1291049   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1291050   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1291051   +END;
MPRINT(EM_DIAGRAM):   END;
1291052   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1291053   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1291054   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1291055   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1291056   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1291057   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1291058   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1291059   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1291060   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1291061   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1291062   +END;
MPRINT(EM_DIAGRAM):   END;
1291063   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1291064   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1291065   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1291066   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1291067    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1291068    quit;
1291069    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1291070    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1291071    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1291072    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
1291073    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1291074    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291075    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1291076    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1291077    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291078    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME 
CREATOR);
1291079    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1291080    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

1291081    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1291082    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1291083    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1291084    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291085    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
1291086    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.23 seconds
      cpu time            0.01 seconds
      

1291087    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1291088    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1291089    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1291090    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1291091    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1291092    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1291093    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291094    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1291095    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1291095  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1551 rows and 5 columns.

1291096    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1291097    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
1291098    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1551 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1551 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291099    filename _pref
1291099  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1291100    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1291101    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1291102   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291103   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1291104   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1291105   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1291106   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1291107   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1291108    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1291109    quit;
1291110    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1291111    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1291112    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1291113    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1291114    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1291115    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291116    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1291117    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1291118    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1291119    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1291120    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1291121    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291122    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1291123    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1291124    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1291125    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291126    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1291127    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1291128    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1291129    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1291130    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291131    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1291132    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1291133    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1291134    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291135    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1291136    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1291136  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1291137    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1291138    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
1291139    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1555 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291140    filename _pref
1291140  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1291141    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1291142    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1291143   +
1291144   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1291145   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1291145  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1291146   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1291147   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1291148   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1291149   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1291150   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1291151    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1291152    quit;
1291153    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1291154    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1291155    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1291156    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1291157    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1291158    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291159    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1291160    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1291161    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291162    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1291163    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1291164    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1291165    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1291166    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1291167    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1291168    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291169    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1291170    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291171    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1291172    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1291173    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1291174    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1291175    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1291176    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1291177    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291178    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1291179    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1291179  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1291180    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291181    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
1291182    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1594 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291183    filename _pref
1291183  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1291184    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1291185    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1291186   +
1291187   +
1291188   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1291189   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1291190   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1291191   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1291192   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1291193   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1291194   +
1291195   +
1291196   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1291197   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1291198   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1291199   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1291200   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1291201   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1291202   +
1291203   +
1291204   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1291205   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1291206   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1291207   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1291208   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1291209   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1291210   +
1291211   +
1291212   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1291213   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1291214   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1291215   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1291216   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1291217   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1291218   +
1291219   +
1291220   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1291221   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1291222   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1291223   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1291224   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1291225   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1291226   +
1291227   +
1291228   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1291229   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1291230   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1291231   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1291232   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1291233   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1291234   +
1291235   +
1291236   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1291237   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1291238   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1291239   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1291240   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1291241   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1291242   +
1291243   +
1291244   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1291245   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1291246   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1291247   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1291248   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1291249   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1291250   +if
1291251   +_FILTERNORM1 not in ( '.')
1291252   + and
1291253   +_FILTERNORM2 not in ( '.')
1291254   + and
1291255   +_FILTERNORM3 not in ( '.')
1291256   + and
1291257   +_FILTERNORM4 not in ( '.')
1291258   + and
1291259   +_FILTERNORM5 not in ( '.')
1291260   + and
1291261   +_FILTERNORM6 not in ( '.')
1291262   + and
1291263   +_FILTERNORM7 not in ( ' ')
1291264   + and
1291265   +_FILTERNORM8 not in ( ' ')
1291266   +and
1291267   +( Dt_Customer ne .)
1291268   +and ( Income ne . and (Income<=107000))
1291269   +and ( Kidhome ne .)
1291270   +and ( MntFishProducts ne .)
1291271   +and ( MntFruits ne .)
1291272   +and ( MntGoldProds ne .)
1291273   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1291274   +and ( MntSweetProducts ne .)
1291275   +and ( MntWines ne .)
1291276   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1291277   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1291278   +and ( NumStorePurchases ne .)
1291279   +and ( NumWebPurchases ne .)
1291280   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1291281   +and ( Recency ne .)
1291282   +and ( Teenhome ne .)
1291283   +and ( Year_Birth ne .)
1291284   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1291285   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1291286   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1291287   +end;
MPRINT(EM_DIAGRAM):   end;
1291288   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1291289   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1291290    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1291291    quit;
1291292    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1291293    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1291294    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1291295    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1291296    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1291297    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1291298    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1291299    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1291300    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291301    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1291302    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1291303    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291304    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1291305    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1291306    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1291307    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291308    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1291309    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1291310    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1291311    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1291312    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291313    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1291314    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1291315    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1291316    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1291317    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1291318    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1291318  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1291319    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291320    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
1291321    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1660 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291322    %macro varDept(fcmpdata=,id=);
1291323    %global nobs&id scoreFlag&id;
1291324    %let scoreFlag&id = 0;
1291325    %if &id=1 or ^&fcmpStart %then %do;
1291326    proc sort data=&fcmpdata out=_temp&id nodupkey;
1291327    by NAME;
1291328    where id=&id and LHS in( %let j=1;
1291329    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1291330    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1291331    "&var" %let j = %eval(&j+1);
1291332    %end;
1291333    );
1291334    run;
1291335    %let dsid = %sysfunc(open(_temp&id));
1291336    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1291337    %let dsid = %sysfunc(close(&dsid));
1291338    %if &&nobs&id %then %do;
1291339    %let scoreFlag&id = 1;
1291340    %let fcmpStart = 1;
1291341    %end;
1291342    %else %let fcmpStart = 0;
1291343    %end;
1291344    %else %do;
1291345    proc sort data=&fcmpdata out=_tempid;
1291346    where id=&id;
1291347    by LHS;
1291348    run;
1291349    %let dsid = %sysfunc(open(_tempid));
1291350    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1291351    %let dsid = %sysfunc(close(&dsid));
1291352    %if ^&&nobs&id %then %do;
1291353    proc datasets lib=work nolist;
1291354    delete _tempid;
1291355    run;
1291356    quit;
1291357    %end;
1291358    %else %do;
1291359    data _tempAll;
1291360    set %let j=%eval(&id-1);
1291361    %do x=1 %to &j;
1291362    %if &&nobs&x %then %do;
1291363    _temp&x %end;
1291364    %end;
1291365    ;
1291366    run;
1291367    proc sql;
1291368    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1291368  ! work._tempid p2 where p.name=p2.lhs;
1291369    quit;
1291370    data _temp&id;
1291371    set _temp&id;
1291372    where LHS ne '' and NAME ne '' and Node ne '';
1291373    run;
1291374    proc datasets lib=work nolist;
1291375    delete _tempAll;
1291376    run;
1291377    %let dsid = %sysfunc(open(_temp&id));
1291378    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1291379    %let dsid = %sysfunc(close(&dsid));
1291380    %if ^&&nobs&id %then %do;
1291381    proc datasets lib=work nolist;
1291382    delete _temp&id;
1291383    run;
1291384    quit;
1291385    %end;
1291386    %else %do;
1291387    %let scoreFlag&id = 1;
1291388    data _temp&id;
1291389    set _temp&id;
1291390    where LHS ne NAME and node ne '';
1291391    run;
1291392    %let dsid = %sysfunc(open(_temp&id));
1291393    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1291394    %let dsid = %sysfunc(close(&dsid));
1291395    %if ^&&nobs&id %then %do;
1291396    proc datasets lib=work nolist;
1291397    delete _temp&id;
1291398    run;
1291399    quit;
1291400    %end;
1291401    %else %do;
1291402    proc sort data=_temp&id nodupkey;
1291403    by LHS NAME;
1291404    run;
1291405    %end;
1291406    %end;
1291407    %end;
1291408    %end;
1291409    %mend varDept;
1291410    %macro optCode(outdata=fcmpdata);
1291411    %global fcmpStart;
1291412    %let fcmpStart = 0;
1291413    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1291414    %let NumNodes=9;
1291415    %do k=1 %to &NumNodes;
1291416    %vardept(fcmpdata=&outdata, id=&k);
1291417    %end;
1291418    %mend optCode;
1291419    %optcode(outData=EMWS8.Ensmbl45_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 146 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 38 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 42 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 81 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1291420    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1291421    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1291422    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1291423    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1291424    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1291425    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1291426    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1291427    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291428    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1291429    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1291429  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

1291430    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1291431    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1291432    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1291433    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291434    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1291435    * Ensmbl45: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Computing metadata for TRAIN data;
1291436    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL45_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl45_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl45_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl45_TRAIN out=WORK.M0TSATSF noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0TSATSF;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0TSATSF(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0TSATSF;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0TSATSF;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2BO4W0O NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2BO4W0O;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2BO4W0O;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0MJRQ2P(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2BO4W0O;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2BO4W0O;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2BO4W0O;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2BO4W0O;
MPRINT(EMADVISECOLUMNS):   set WORK.M2BO4W0O;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural10_TRAIN noprint 
out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl45_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl45";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl45";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1291756    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1291757    set EMWS8.Ensmbl45_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl45_EMINFO;
1291758    where DATA='Ensmbl45' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl45' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1291759    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_EMINFO.
      WHERE (DATA='Ensmbl45') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291760    data EMWS8.Ensmbl45_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl45_EMINFO;
1291761    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1291762    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1291763    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL45_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1291767    run;
1291768    data EMWS8.Ensmbl45_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl45_EMINFO;
1291769    set EMWS8.Ensmbl45_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl45_EMINFO WORK.MODELTEMP_INFO;
1291770    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL45_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL45_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1291771    proc sort data = EMWS8.Ensmbl45_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl45_EMINFO NOTHREADS;
1291772    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1291773    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL45_EMINFO.
NOTE: The data set EMWS8.ENSMBL45_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291774    proc sort data = EMWS8.AutoNeural10_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural10_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
1291775    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1291776    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL10_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291777    proc sort data = EMWS8.Ensmbl45_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl45_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1291778    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1291779    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL45_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1291780    data EMWS8.Ensmbl45_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl45_EMINFO;
1291781    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1291782    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1291783    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL45_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1291784    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1291785    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1291786    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1291787    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.ENSMBL45_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.ENSMBL45_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
