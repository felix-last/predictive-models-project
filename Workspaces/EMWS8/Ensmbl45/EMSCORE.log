MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.06 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                19.06 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2Y3B9S_ 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2Y3B9S_ new;
MPRINT(EM_DIAGRAM):   run;
2424718    filename emflow
2424718  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring AUTONEURAL9_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2424719    *------------------------------------------------------------*;
2424720    * Ensmbl45: Scoring AUTONEURAL9_TRAIN data;
2424721    *------------------------------------------------------------*;
2424722    data EMWS8.Ensmbl45_TRAIN
2424723    / view=EMWS8.Ensmbl45_TRAIN
2424724    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl45_TRAIN / view=EMWS8.Ensmbl45_TRAIN ;
2424725    set EMWS8.AutoNeural9_TRAIN
2424726    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_TRAIN ;
2424727    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\EMFLOWSCORE.sas.
2424728   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2424729   +* Ensmbl45: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Combine model for DepVar;
2424730   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2424731   +* Ensmbl45: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 1 of 5;
2424732   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2424733   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2424734   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2424735   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2424736   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2424737   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2424738   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2424739   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2424740   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2424741   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2424742   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2424743   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2424744   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2424745   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2424746   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2424747   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2424748   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2424749   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2424750   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2424751   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2424752   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2424753   +
2424754   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2424755   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2424755  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2424756   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2424757   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2424758   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2424759   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2424760   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2424761   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2424762   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2424763   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2424764   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2424765   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2424766   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2424767   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2424768   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2424769   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2424770   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2424771   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2424772   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2424773   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2424774   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2424775   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2424776   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2424777   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2424778   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2424779   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2424780   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2424781   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2424782   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2424783   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2424784   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2424785   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2424786   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2424787   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2424788   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2424789   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2424790   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2424791   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2424792   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2424793   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2424794   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2424795   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2424796   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2424797   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2424798   +LENGTH _WARN_ $4
2424799   +      F_DepVar  $ 12
2424800   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2424801   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2424802   +
2424803   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2424804   +
2424805   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2424806   +
2424807   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2424808   +
2424809   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2424810   +
2424811   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2424812   +
2424813   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2424814   +
2424815   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2424816   +
2424817   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2424818   +
2424819   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2424820   +
2424821   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2424822   +
2424823   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2424824   +
2424825   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2424826   +
2424827   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2424828   +
2424829   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2424830   +
2424831   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2424832   +
2424833   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2424834   +
2424835   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2424836   +
2424837   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2424838   +
2424839   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2424840   +
2424841   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2424842   +
2424843   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2424844   +
2424845   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2424846   +
2424847   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2424848   +
2424849   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2424850   +
2424851   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2424852   +
2424853   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2424854   +
2424855   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2424856   +
2424857   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2424858   +
2424859   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2424860   +
2424861   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2424862   +
2424863   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2424864   +
2424865   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2424866   +
2424867   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2424868   +
2424869   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2424870   +
2424871   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2424872   +
2424873   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2424874   +
2424875   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2424876   +
2424877   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2424878   +
2424879   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2424880   +
2424881   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2424882   +
2424883   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2424884   +
2424885   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2424886   +
2424887   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2424888   +
2424889   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2424890   +
2424891   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2424892   +
2424893   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2424894   +
2424895   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2424896   +
2424897   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2424898   +
2424899   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2424900   +
2424901   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2424902   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2424903   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2424904   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2424905   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2424906   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2424907   +end;
MPRINT(EM_DIAGRAM):   end;
2424908   +else do;
MPRINT(EM_DIAGRAM):   else do;
2424909   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2424910   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2424911   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2424912   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2424913   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2424914   +   end;
MPRINT(EM_DIAGRAM):   end;
2424915   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2424916   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2424917   +   end;
MPRINT(EM_DIAGRAM):   end;
2424918   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2424919   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2424920   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2424921   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2424922   +   end;
MPRINT(EM_DIAGRAM):   end;
2424923   +end;
MPRINT(EM_DIAGRAM):   end;
2424924   +
2424925   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2424926   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2424927   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2424928   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2424929   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2424930   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2424931   +end;
MPRINT(EM_DIAGRAM):   end;
2424932   +else do;
MPRINT(EM_DIAGRAM):   else do;
2424933   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2424934   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2424935   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2424936   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2424937   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2424938   +   end;
MPRINT(EM_DIAGRAM):   end;
2424939   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2424940   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2424941   +   end;
MPRINT(EM_DIAGRAM):   end;
2424942   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2424943   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2424944   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2424945   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2424946   +   end;
MPRINT(EM_DIAGRAM):   end;
2424947   +end;
MPRINT(EM_DIAGRAM):   end;
2424948   +
2424949   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2424950   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2424951   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2424952   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2424953   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2424954   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2424955   +end;
MPRINT(EM_DIAGRAM):   end;
2424956   +else do;
MPRINT(EM_DIAGRAM):   else do;
2424957   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2424958   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2424959   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2424960   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2424961   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2424962   +   end;
MPRINT(EM_DIAGRAM):   end;
2424963   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2424964   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2424965   +   end;
MPRINT(EM_DIAGRAM):   end;
2424966   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2424967   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2424968   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2424969   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2424970   +   end;
MPRINT(EM_DIAGRAM):   end;
2424971   +end;
MPRINT(EM_DIAGRAM):   end;
2424972   +
2424973   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2424974   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2424975   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2424976   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2424977   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2424978   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2424979   +end;
MPRINT(EM_DIAGRAM):   end;
2424980   +else do;
MPRINT(EM_DIAGRAM):   else do;
2424981   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2424982   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2424983   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2424984   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2424985   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2424986   +   end;
MPRINT(EM_DIAGRAM):   end;
2424987   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2424988   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2424989   +   end;
MPRINT(EM_DIAGRAM):   end;
2424990   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2424991   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2424992   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2424993   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2424994   +   end;
MPRINT(EM_DIAGRAM):   end;
2424995   +end;
MPRINT(EM_DIAGRAM):   end;
2424996   +
2424997   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2424998   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2424999   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2425000   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2425001   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2425002   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425003   +end;
MPRINT(EM_DIAGRAM):   end;
2425004   +else do;
MPRINT(EM_DIAGRAM):   else do;
2425005   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2425006   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2425007   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2425008   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2425009   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2425010   +   end;
MPRINT(EM_DIAGRAM):   end;
2425011   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2425012   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2425013   +   end;
MPRINT(EM_DIAGRAM):   end;
2425014   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2425015   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2425016   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2425017   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425018   +   end;
MPRINT(EM_DIAGRAM):   end;
2425019   +end;
MPRINT(EM_DIAGRAM):   end;
2425020   +
2425021   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2425022   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2425023   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2425024   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2425025   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2425026   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425027   +end;
MPRINT(EM_DIAGRAM):   end;
2425028   +else do;
MPRINT(EM_DIAGRAM):   else do;
2425029   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2425030   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2425031   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2425032   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2425033   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2425034   +   end;
MPRINT(EM_DIAGRAM):   end;
2425035   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2425036   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2425037   +   end;
MPRINT(EM_DIAGRAM):   end;
2425038   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2425039   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2425040   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2425041   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425042   +   end;
MPRINT(EM_DIAGRAM):   end;
2425043   +end;
MPRINT(EM_DIAGRAM):   end;
2425044   +
2425045   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2425046   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2425047   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2425048   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2425049   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2425050   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425051   +end;
MPRINT(EM_DIAGRAM):   end;
2425052   +else do;
MPRINT(EM_DIAGRAM):   else do;
2425053   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2425054   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2425055   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2425056   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2425057   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2425058   +   end;
MPRINT(EM_DIAGRAM):   end;
2425059   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2425060   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2425061   +   end;
MPRINT(EM_DIAGRAM):   end;
2425062   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2425063   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2425064   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2425065   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425066   +   end;
MPRINT(EM_DIAGRAM):   end;
2425067   +end;
MPRINT(EM_DIAGRAM):   end;
2425068   +
2425069   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2425070   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2425071   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2425072   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2425073   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2425074   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2425075   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2425076   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2425077   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2425078   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2425079   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2425080   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2425081   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2425082   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425083   +end;
MPRINT(EM_DIAGRAM):   end;
2425084   +else do;
MPRINT(EM_DIAGRAM):   else do;
2425085   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2425086   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2425087   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2425088   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2425089   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2425090   +   end;
MPRINT(EM_DIAGRAM):   end;
2425091   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2425092   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2425093   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2425094   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2425095   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2425096   +   end;
MPRINT(EM_DIAGRAM):   end;
2425097   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2425098   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2425099   +   end;
MPRINT(EM_DIAGRAM):   end;
2425100   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2425101   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2425102   +   end;
MPRINT(EM_DIAGRAM):   end;
2425103   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2425104   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2425105   +   end;
MPRINT(EM_DIAGRAM):   end;
2425106   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2425107   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2425108   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2425109   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2425110   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2425111   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2425112   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425113   +   end;
MPRINT(EM_DIAGRAM):   end;
2425114   +end;
MPRINT(EM_DIAGRAM):   end;
2425115   +
2425116   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2425117   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2425118   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2425119   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2425120   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2425121   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2425122   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2425123   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2425124   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2425125   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2425126   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2425127   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2425128   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2425129   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2425130   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425131   +end;
MPRINT(EM_DIAGRAM):   end;
2425132   +else do;
MPRINT(EM_DIAGRAM):   else do;
2425133   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2425134   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2425135   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2425136   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2425137   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2425138   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2425139   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2425140   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2425141   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2425142   +         end;
MPRINT(EM_DIAGRAM):   end;
2425143   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2425144   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2425145   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2425146   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2425147   +            end;
MPRINT(EM_DIAGRAM):   end;
2425148   +         end;
MPRINT(EM_DIAGRAM):   end;
2425149   +      end;
MPRINT(EM_DIAGRAM):   end;
2425150   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2425151   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2425152   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2425153   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2425154   +         end;
MPRINT(EM_DIAGRAM):   end;
2425155   +      end;
MPRINT(EM_DIAGRAM):   end;
2425156   +   end;
MPRINT(EM_DIAGRAM):   end;
2425157   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2425158   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2425159   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2425160   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2425161   +      end;
MPRINT(EM_DIAGRAM):   end;
2425162   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2425163   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2425164   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2425165   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2425166   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2425167   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2425168   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2425169   +         end;
MPRINT(EM_DIAGRAM):   end;
2425170   +      end;
MPRINT(EM_DIAGRAM):   end;
2425171   +   end;
MPRINT(EM_DIAGRAM):   end;
2425172   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2425173   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2425174   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2425175   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2425176   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2425177   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2425178   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425179   +   end;
MPRINT(EM_DIAGRAM):   end;
2425180   +end;
MPRINT(EM_DIAGRAM):   end;
2425181   +
2425182   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2425183   +*** Checking missing input Interval
2425184   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2425185   +
2425186   +IF NMISS(
2425187   +   AcceptedCmpTotal ,
2425188   +   Age ,
2425189   +   Frq ,
2425190   +   Income ,
2425191   +   Kidhome ,
2425192   +   Mnt ,
2425193   +   MntFishProducts ,
2425194   +   MntFruits ,
2425195   +   MntGoldProds ,
2425196   +   MntMeatProducts ,
2425197   +   MntSweetProducts ,
2425198   +   MntWines ,
2425199   +   MonthsAsCustomer ,
2425200   +   NumCatalogPurchases ,
2425201   +   NumDealsPurchases ,
2425202   +   NumDistPurchases ,
2425203   +   NumStorePurchases ,
2425204   +   NumWebPurchases ,
2425205   +   NumWebVisitsMonth ,
2425206   +   RFMstat ,
2425207   +   RMntFrq ,
2425208   +   Recency ,
2425209   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2425210   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2425211   +
2425212   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425213   +END;
MPRINT(EM_DIAGRAM):   END;
2425214   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2425215   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2425216   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2425217   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2425218   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2425219   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2425220   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2425221   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2425222   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2425223   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2425224   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2425225   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2425226   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2425227   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2425228   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2425229   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2425230   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2425231   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2425232   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2425233   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2425234   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2425235   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2425236   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2425237   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2425238   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2425239   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2425240   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2425241   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2425242   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2425243   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2425244   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2425245   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2425246   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2425247   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2425248   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2425249   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2425250   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2425251   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2425252   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2425253   +END;
MPRINT(EM_DIAGRAM):   END;
2425254   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2425255   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2425256   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2425257   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2425258   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2425259   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2425260   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2425261   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2425262   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2425263   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2425264   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2425265   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2425266   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2425267   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2425268   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2425269   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2425270   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2425271   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2425272   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2425273   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2425274   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2425275   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2425276   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2425277   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2425278   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2425279   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2425280   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2425281   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2425282   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2425283   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2425284   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2425285   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2425286   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2425287   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2425288   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2425289   +   ELSE S_NumCatalogPurchases
2425290   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2425291   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2425292   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2425293   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2425294   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2425295   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2425296   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2425297   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2425298   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2425299   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2425300   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2425301   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2425302   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2425303   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2425304   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2425305   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2425306   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2425307   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2425308   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2425309   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2425310   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2425311   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2425312   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2425313   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2425314   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2425315   +END;
MPRINT(EM_DIAGRAM):   END;
2425316   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2425317   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2425318   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2425319   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2425320   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2425321   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2425322   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2425323   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2425324   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2425325   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2425326   +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
2425327   +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
2425328   +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
2425329   +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
2425330   +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
2425331   +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
2425332   +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
2425333   +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
2425334   +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
2425335   +          +    -1.12130210731541 * S_NumDealsPurchases
2425336   +          +    -0.12343505299726 * S_NumDistPurchases
2425337   +          +     0.11863092868196 * S_NumStorePurchases
2425338   +          +       0.583917993314 * S_NumWebPurchases
2425339   +          +     0.75529732848146 * S_NumWebVisitsMonth
2425340   +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
2425341   +        S_RMntFrq  +    -0.95519170979342 * S_Recency
2425342   +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 * 
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome 
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 * 
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts + 
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 * 
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 * 
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 * 
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 * 
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq + 
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
2425343   +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
2425344   +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
2425345   +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
2425346   +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
2425347   +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
2425348   +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
2425349   +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
2425350   +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
2425351   +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
2425352   +          +    -0.84113790640734 * S_NumDealsPurchases
2425353   +          +    -0.10512672747147 * S_NumDistPurchases
2425354   +          +     0.07268711782494 * S_NumStorePurchases
2425355   +          +     0.57578331257439 * S_NumWebPurchases
2425356   +          +    -1.34334433506558 * S_NumWebVisitsMonth
2425357   +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
2425358   +        S_RMntFrq  +      1.2759588366983 * S_Recency
2425359   +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 * 
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 * 
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts + 
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 * 
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines + 
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases + 
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases + 
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases + 
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 * 
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
2425360   +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
2425361   +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
2425362   +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
2425363   +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
2425364   +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
2425365   +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
2425366   +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
2425367   +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
2425368   +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
2425369   +          +     0.45924983504762 * S_NumDealsPurchases
2425370   +          +    -0.25508041581692 * S_NumDistPurchases
2425371   +          +    -1.34901283858526 * S_NumStorePurchases
2425372   +          +    -0.86388975031663 * S_NumWebPurchases
2425373   +          +     1.86136110391797 * S_NumWebVisitsMonth
2425374   +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
2425375   +        S_RMntFrq  +    -2.06955456943047 * S_Recency
2425376   +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age 
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome + 
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 * 
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts + 
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 * 
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 * 
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 * 
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 * 
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq + 
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
2425377   +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
2425378   +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
2425379   +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
2425380   +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
2425381   +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 * 
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 + 
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 * 
HigherEducationBinary0 ;
2425382   +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
2425383   +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
2425384   +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
2425385   +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
2425386   +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984 
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 + 
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 * 
HigherEducationBinary0 ;
2425387   +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
2425388   +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
2425389   +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
2425390   +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
2425391   +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507 
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 + 
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 * 
HigherEducationBinary0 ;
2425392   +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
2425393   +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
2425394   +        EducationGraduation  +    -0.59708578424036 * EducationMaster
2425395   +          +     0.48853068455666 * Marital_StatusDivorced
2425396   +          +    -0.54903474026465 * Marital_StatusMarried
2425397   +          +    -0.34079188373939 * Marital_StatusSingle
2425398   +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle + 
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation + 
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced + 
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle + 
-0.64602969938868 * Marital_StatusTogether ;
2425399   +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
2425400   +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
2425401   +        EducationGraduation  +     0.19038549912088 * EducationMaster
2425402   +          +    -1.03547689902027 * Marital_StatusDivorced
2425403   +          +     2.42164864610471 * Marital_StatusMarried
2425404   +          +    -1.95342561304942 * Marital_StatusSingle
2425405   +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle + 
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088 
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 * 
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 * 
Marital_StatusTogether ;
2425406   +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
2425407   +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
2425408   +        EducationGraduation  +    -0.31867831184924 * EducationMaster
2425409   +          +      0.4337638747935 * Marital_StatusDivorced
2425410   +          +    -0.38508657017615 * Marital_StatusMarried
2425411   +          +     -0.0160269708326 * Marital_StatusSingle
2425412   +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle + 
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation + 
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced + 
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle + 
-0.57491004270903 * Marital_StatusTogether ;
2425413   +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
2425414   +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
2425415   +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
2425416   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2425417   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2425418   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2425419   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2425420   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2425421   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2425422   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2425423   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2425424   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2425425   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2425426   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2425427   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2425428   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2425429   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2425430   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2425431   +END;
MPRINT(EM_DIAGRAM):   END;
2425432   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2425433   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2425434   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2425435   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2425436   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2425437   +END;
MPRINT(EM_DIAGRAM):   END;
2425438   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2425439   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2425440   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2425441   +
2425442   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2425443   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2425444   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2425445   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2425446   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2425447   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2425448   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2425449   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2425450   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2425451   +end;
MPRINT(EM_DIAGRAM):   end;
2425452   +else do;
MPRINT(EM_DIAGRAM):   else do;
2425453   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2425454   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2425455   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2425456   +   end;
MPRINT(EM_DIAGRAM):   end;
2425457   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2425458   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2425459   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2425460   +   end;
MPRINT(EM_DIAGRAM):   end;
2425461   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2425462   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2425463   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2425464   +   end;
MPRINT(EM_DIAGRAM):   end;
2425465   +end;
MPRINT(EM_DIAGRAM):   end;
2425466   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2425467   +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
2425468   +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 + 
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
2425469   +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
2425470   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2425471   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2425472   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2425473   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2425474   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2425475   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2425476   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2425477   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2425478   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2425479   +END;
MPRINT(EM_DIAGRAM):   END;
2425480   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2425481   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2425482   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2425483   +END;
MPRINT(EM_DIAGRAM):   END;
2425484   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2425485   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2425486   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2425487   +END;
MPRINT(EM_DIAGRAM):   END;
2425488   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2425489   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2425490   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2425491   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2425492   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2425493   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2425494   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2425495   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2425496   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2425497   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2425498   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2425499   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2425500   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2425501   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2425502   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2425503   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2425504   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2425505   +END;
MPRINT(EM_DIAGRAM):   END;
2425506   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2425507   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2425508   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2425509   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2425510   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2425511   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2425512   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2425513   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2425514   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2425515   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2425516   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2425517   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2425518   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2425519   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2425520   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2425521   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2425522   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2425523   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2425524   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2425525   +* Ensmbl45: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 2 of 5;
2425526   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2425527   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2425528   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2425529   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2425530   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2425531   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2425532   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2425533   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2425534   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2425535   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2425536   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2425537   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2425538   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2425539   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2425540   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2425541   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2425542   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2425543   +LENGTH _WARN_ $4
2425544   +      F_DepVar  $ 12
2425545   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2425546   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2425547   +
2425548   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2425549   +
2425550   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2425551   +
2425552   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2425553   +
2425554   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2425555   +
2425556   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2425557   +
2425558   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2425559   +
2425560   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2425561   +
2425562   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2425563   +
2425564   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2425565   +
2425566   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2425567   +
2425568   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2425569   +
2425570   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2425571   +
2425572   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2425573   +
2425574   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2425575   +
2425576   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2425577   +
2425578   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2425579   +
2425580   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2425581   +
2425582   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2425583   +
2425584   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2425585   +
2425586   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2425587   +
2425588   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2425589   +
2425590   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2425591   +
2425592   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2425593   +
2425594   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2425595   +
2425596   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2425597   +
2425598   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2425599   +
2425600   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2425601   +
2425602   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2425603   +
2425604   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2425605   +
2425606   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2425607   +
2425608   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2425609   +
2425610   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2425611   +
2425612   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2425613   +
2425614   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2425615   +
2425616   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2425617   +
2425618   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2425619   +
2425620   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2425621   +
2425622   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2425623   +
2425624   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2425625   +
2425626   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2425627   +
2425628   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2425629   +
2425630   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2425631   +
2425632   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2425633   +
2425634   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2425635   +
2425636   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2425637   +
2425638   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2425639   +
2425640   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2425641   +
2425642   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2425643   +
2425644   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2425645   +
2425646   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2425647   +
2425648   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2425649   +
2425650   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2425651   +
2425652   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2425653   +
2425654   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2425655   +
2425656   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2425657   +
2425658   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2425659   +
2425660   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2425661   +
2425662   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2425663   +
2425664   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2425665   +
2425666   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2425667   +
2425668   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2425669   +
2425670   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2425671   +
2425672   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2425673   +
2425674   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2425675   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2425676   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2425677   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2425678   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2425679   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425680   +end;
MPRINT(EM_DIAGRAM):   end;
2425681   +else do;
MPRINT(EM_DIAGRAM):   else do;
2425682   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2425683   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2425684   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2425685   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2425686   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2425687   +   end;
MPRINT(EM_DIAGRAM):   end;
2425688   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2425689   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2425690   +   end;
MPRINT(EM_DIAGRAM):   end;
2425691   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2425692   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2425693   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2425694   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425695   +   end;
MPRINT(EM_DIAGRAM):   end;
2425696   +end;
MPRINT(EM_DIAGRAM):   end;
2425697   +
2425698   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2425699   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2425700   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2425701   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2425702   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2425703   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425704   +end;
MPRINT(EM_DIAGRAM):   end;
2425705   +else do;
MPRINT(EM_DIAGRAM):   else do;
2425706   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2425707   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2425708   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2425709   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2425710   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2425711   +   end;
MPRINT(EM_DIAGRAM):   end;
2425712   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2425713   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2425714   +   end;
MPRINT(EM_DIAGRAM):   end;
2425715   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2425716   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2425717   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2425718   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425719   +   end;
MPRINT(EM_DIAGRAM):   end;
2425720   +end;
MPRINT(EM_DIAGRAM):   end;
2425721   +
2425722   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2425723   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2425724   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2425725   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2425726   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2425727   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425728   +end;
MPRINT(EM_DIAGRAM):   end;
2425729   +else do;
MPRINT(EM_DIAGRAM):   else do;
2425730   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2425731   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2425732   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2425733   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2425734   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2425735   +   end;
MPRINT(EM_DIAGRAM):   end;
2425736   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2425737   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2425738   +   end;
MPRINT(EM_DIAGRAM):   end;
2425739   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2425740   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2425741   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2425742   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425743   +   end;
MPRINT(EM_DIAGRAM):   end;
2425744   +end;
MPRINT(EM_DIAGRAM):   end;
2425745   +
2425746   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2425747   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2425748   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2425749   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2425750   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2425751   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425752   +end;
MPRINT(EM_DIAGRAM):   end;
2425753   +else do;
MPRINT(EM_DIAGRAM):   else do;
2425754   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2425755   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2425756   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2425757   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2425758   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2425759   +   end;
MPRINT(EM_DIAGRAM):   end;
2425760   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2425761   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2425762   +   end;
MPRINT(EM_DIAGRAM):   end;
2425763   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2425764   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2425765   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2425766   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425767   +   end;
MPRINT(EM_DIAGRAM):   end;
2425768   +end;
MPRINT(EM_DIAGRAM):   end;
2425769   +
2425770   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2425771   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2425772   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2425773   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2425774   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2425775   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425776   +end;
MPRINT(EM_DIAGRAM):   end;
2425777   +else do;
MPRINT(EM_DIAGRAM):   else do;
2425778   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2425779   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2425780   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2425781   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2425782   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2425783   +   end;
MPRINT(EM_DIAGRAM):   end;
2425784   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2425785   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2425786   +   end;
MPRINT(EM_DIAGRAM):   end;
2425787   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2425788   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2425789   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2425790   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425791   +   end;
MPRINT(EM_DIAGRAM):   end;
2425792   +end;
MPRINT(EM_DIAGRAM):   end;
2425793   +
2425794   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2425795   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2425796   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2425797   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2425798   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2425799   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425800   +end;
MPRINT(EM_DIAGRAM):   end;
2425801   +else do;
MPRINT(EM_DIAGRAM):   else do;
2425802   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2425803   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2425804   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2425805   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2425806   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2425807   +   end;
MPRINT(EM_DIAGRAM):   end;
2425808   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2425809   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2425810   +   end;
MPRINT(EM_DIAGRAM):   end;
2425811   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2425812   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2425813   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2425814   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425815   +   end;
MPRINT(EM_DIAGRAM):   end;
2425816   +end;
MPRINT(EM_DIAGRAM):   end;
2425817   +
2425818   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2425819   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2425820   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2425821   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2425822   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2425823   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425824   +end;
MPRINT(EM_DIAGRAM):   end;
2425825   +else do;
MPRINT(EM_DIAGRAM):   else do;
2425826   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2425827   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2425828   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2425829   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2425830   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2425831   +   end;
MPRINT(EM_DIAGRAM):   end;
2425832   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2425833   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2425834   +   end;
MPRINT(EM_DIAGRAM):   end;
2425835   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2425836   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2425837   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2425838   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425839   +   end;
MPRINT(EM_DIAGRAM):   end;
2425840   +end;
MPRINT(EM_DIAGRAM):   end;
2425841   +
2425842   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2425843   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2425844   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2425845   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2425846   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2425847   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2425848   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2425849   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2425850   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2425851   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2425852   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2425853   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2425854   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2425855   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425856   +end;
MPRINT(EM_DIAGRAM):   end;
2425857   +else do;
MPRINT(EM_DIAGRAM):   else do;
2425858   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2425859   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2425860   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2425861   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2425862   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2425863   +   end;
MPRINT(EM_DIAGRAM):   end;
2425864   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2425865   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2425866   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2425867   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2425868   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2425869   +   end;
MPRINT(EM_DIAGRAM):   end;
2425870   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2425871   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2425872   +   end;
MPRINT(EM_DIAGRAM):   end;
2425873   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2425874   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2425875   +   end;
MPRINT(EM_DIAGRAM):   end;
2425876   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2425877   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2425878   +   end;
MPRINT(EM_DIAGRAM):   end;
2425879   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2425880   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2425881   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2425882   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2425883   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2425884   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2425885   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425886   +   end;
MPRINT(EM_DIAGRAM):   end;
2425887   +end;
MPRINT(EM_DIAGRAM):   end;
2425888   +
2425889   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2425890   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2425891   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2425892   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2425893   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2425894   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2425895   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2425896   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2425897   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2425898   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2425899   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2425900   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2425901   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2425902   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2425903   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425904   +end;
MPRINT(EM_DIAGRAM):   end;
2425905   +else do;
MPRINT(EM_DIAGRAM):   else do;
2425906   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2425907   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2425908   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2425909   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2425910   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2425911   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2425912   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2425913   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2425914   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2425915   +         end;
MPRINT(EM_DIAGRAM):   end;
2425916   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2425917   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2425918   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2425919   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2425920   +            end;
MPRINT(EM_DIAGRAM):   end;
2425921   +         end;
MPRINT(EM_DIAGRAM):   end;
2425922   +      end;
MPRINT(EM_DIAGRAM):   end;
2425923   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2425924   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2425925   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2425926   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2425927   +         end;
MPRINT(EM_DIAGRAM):   end;
2425928   +      end;
MPRINT(EM_DIAGRAM):   end;
2425929   +   end;
MPRINT(EM_DIAGRAM):   end;
2425930   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2425931   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2425932   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2425933   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2425934   +      end;
MPRINT(EM_DIAGRAM):   end;
2425935   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2425936   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2425937   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2425938   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2425939   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2425940   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2425941   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2425942   +         end;
MPRINT(EM_DIAGRAM):   end;
2425943   +      end;
MPRINT(EM_DIAGRAM):   end;
2425944   +   end;
MPRINT(EM_DIAGRAM):   end;
2425945   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2425946   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2425947   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2425948   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2425949   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2425950   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2425951   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425952   +   end;
MPRINT(EM_DIAGRAM):   end;
2425953   +end;
MPRINT(EM_DIAGRAM):   end;
2425954   +
2425955   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2425956   +*** Checking missing input Interval
2425957   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2425958   +
2425959   +IF NMISS(
2425960   +   AcceptedCmpTotal ,
2425961   +   Age ,
2425962   +   Frq ,
2425963   +   Income ,
2425964   +   Kidhome ,
2425965   +   Mnt ,
2425966   +   MntFishProducts ,
2425967   +   MntFruits ,
2425968   +   MntGoldProds ,
2425969   +   MntMeatProducts ,
2425970   +   MntSweetProducts ,
2425971   +   MntWines ,
2425972   +   MonthsAsCustomer ,
2425973   +   NumCatalogPurchases ,
2425974   +   NumDealsPurchases ,
2425975   +   NumDistPurchases ,
2425976   +   NumStorePurchases ,
2425977   +   NumWebPurchases ,
2425978   +   NumWebVisitsMonth ,
2425979   +   RFMstat ,
2425980   +   RMntFrq ,
2425981   +   Recency ,
2425982   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2425983   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2425984   +
2425985   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2425986   +END;
MPRINT(EM_DIAGRAM):   END;
2425987   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2425988   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2425989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2425990   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2425991   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2425992   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2425993   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2425994   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2425995   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2425996   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2425997   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2425998   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2425999   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2426000   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2426001   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2426002   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2426003   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2426004   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2426005   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2426006   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2426007   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2426008   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2426009   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2426010   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2426011   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2426012   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2426013   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2426014   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2426015   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2426016   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2426017   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2426018   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2426019   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2426020   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2426021   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2426022   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2426023   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2426024   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2426025   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2426026   +END;
MPRINT(EM_DIAGRAM):   END;
2426027   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2426028   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2426029   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2426030   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2426031   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2426032   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2426033   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2426034   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2426035   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2426036   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2426037   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2426038   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2426039   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2426040   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2426041   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2426042   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2426043   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2426044   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2426045   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2426046   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2426047   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2426048   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2426049   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2426050   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2426051   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2426052   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2426053   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2426054   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2426055   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2426056   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2426057   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2426058   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2426059   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2426060   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2426061   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2426062   +   ELSE S_NumCatalogPurchases
2426063   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2426064   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2426065   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2426066   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2426067   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2426068   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2426069   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2426070   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2426071   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2426072   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2426073   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2426074   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2426075   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2426076   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2426077   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2426078   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2426079   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2426080   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2426081   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2426082   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2426083   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2426084   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2426085   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2426086   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2426087   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2426088   +END;
MPRINT(EM_DIAGRAM):   END;
2426089   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2426090   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2426091   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2426092   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2426093   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2426094   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2426095   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2426096   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2426097   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2426098   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2426099   +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
2426100   +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
2426101   +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
2426102   +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
2426103   +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
2426104   +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
2426105   +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
2426106   +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
2426107   +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
2426108   +          +     1.32037113020393 * S_NumDealsPurchases
2426109   +          +     0.42879249227132 * S_NumDistPurchases
2426110   +          +    -0.89190172778783 * S_NumStorePurchases
2426111   +          +    -0.87975442613962 * S_NumWebPurchases
2426112   +          +     2.98977282825831 * S_NumWebVisitsMonth
2426113   +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
2426114   +        S_RMntFrq  +    -2.53833222281652 * S_Recency
2426115   +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 * 
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 * 
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts + 
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 * 
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines + 
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases + 
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases + 
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases + 
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 * 
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
2426116   +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
2426117   +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
2426118   +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
2426119   +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
2426120   +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
2426121   +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
2426122   +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
2426123   +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
2426124   +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
2426125   +          +    -1.16737670931605 * S_NumDealsPurchases
2426126   +          +     0.08205195039242 * S_NumDistPurchases
2426127   +          +    -0.65367044520084 * S_NumStorePurchases
2426128   +          +     2.39693083674757 * S_NumWebPurchases
2426129   +          +     0.18432526469897 * S_NumWebVisitsMonth
2426130   +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
2426131   +        S_RMntFrq  +    -0.12214066685673 * S_Recency
2426132   +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 * 
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 * 
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts + 
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 * 
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines + 
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases + 
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases + 
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases + 
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 * 
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
2426133   +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
2426134   +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
2426135   +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
2426136   +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
2426137   +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
2426138   +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
2426139   +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
2426140   +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
2426141   +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
2426142   +          +     0.76616480025024 * S_NumDealsPurchases
2426143   +          +     0.42823368706255 * S_NumDistPurchases
2426144   +          +    -1.16998364854907 * S_NumStorePurchases
2426145   +          +     -1.0841896541746 * S_NumWebPurchases
2426146   +          +     2.74837744375079 * S_NumWebVisitsMonth
2426147   +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
2426148   +        S_RMntFrq  +    -5.13438280616518 * S_Recency
2426149   +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 * 
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 * 
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts + 
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 * 
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines + 
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases + 
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases + 
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases + 
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 * 
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
2426150   +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
2426151   +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
2426152   +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
2426153   +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
2426154   +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
2426155   +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
2426156   +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
2426157   +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
2426158   +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
2426159   +          +     0.78421010501058 * S_NumDealsPurchases
2426160   +          +     0.01075885160671 * S_NumDistPurchases
2426161   +          +    -1.99395040717832 * S_NumStorePurchases
2426162   +          +    -1.02908330834262 * S_NumWebPurchases
2426163   +          +     2.79163466516477 * S_NumWebVisitsMonth
2426164   +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
2426165   +        S_RMntFrq  +     -2.0907247135068 * S_Recency
2426166   +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 * 
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 * 
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts + 
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 * 
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines + 
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases + 
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases + 
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases + 
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 * 
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
2426167   +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
2426168   +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
2426169   +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
2426170   +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
2426171   +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
2426172   +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
2426173   +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
2426174   +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
2426175   +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
2426176   +          +    -1.04219068390022 * S_NumDealsPurchases
2426177   +          +    -0.45770204483973 * S_NumDistPurchases
2426178   +          +    -0.04941442229195 * S_NumStorePurchases
2426179   +          +     0.67187353161183 * S_NumWebPurchases
2426180   +          +     2.01907760553871 * S_NumWebVisitsMonth
2426181   +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
2426182   +        S_RMntFrq  +    -1.12913051410394 * S_Recency
2426183   +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 * 
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 * 
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332 
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts + 
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 * 
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 * 
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 * 
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 * 
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq + 
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
2426184   +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
2426185   +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
2426186   +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
2426187   +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
2426188   +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168 
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 + 
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 * 
HigherEducationBinary0 ;
2426189   +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
2426190   +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
2426191   +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
2426192   +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
2426193   +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 * 
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 + 
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 * 
HigherEducationBinary0 ;
2426194   +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
2426195   +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
2426196   +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
2426197   +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
2426198   +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388 
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 + 
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 * 
HigherEducationBinary0 ;
2426199   +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
2426200   +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
2426201   +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
2426202   +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
2426203   +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387 
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 + 
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 * 
HigherEducationBinary0 ;
2426204   +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
2426205   +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
2426206   +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
2426207   +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
2426208   +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 * 
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 + 
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 * 
HigherEducationBinary0 ;
2426209   +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
2426210   +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
2426211   +        EducationGraduation  +     0.09596442360106 * EducationMaster
2426212   +          +     2.58907527032049 * Marital_StatusDivorced
2426213   +          +    -2.45549008158921 * Marital_StatusMarried
2426214   +          +     2.56223650840768 * Marital_StatusSingle
2426215   +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle + 
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106 
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 * 
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 * 
Marital_StatusTogether ;
2426216   +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
2426217   +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
2426218   +        EducationGraduation  +     0.29249899969052 * EducationMaster
2426219   +          +     0.83917299191368 * Marital_StatusDivorced
2426220   +          +    -0.62624692699191 * Marital_StatusMarried
2426221   +          +    -0.22585060624911 * Marital_StatusSingle
2426222   +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle + 
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052 
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 * 
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 * 
Marital_StatusTogether ;
2426223   +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
2426224   +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
2426225   +        EducationGraduation  +     -1.3163356801876 * EducationMaster
2426226   +          +    -0.65063506696715 * Marital_StatusDivorced
2426227   +          +    -2.37495865381256 * Marital_StatusMarried
2426228   +          +    -0.54954654146904 * Marital_StatusSingle
2426229   +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle + 
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876 
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 * 
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 * 
Marital_StatusTogether ;
2426230   +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
2426231   +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
2426232   +        EducationGraduation  +     0.07916018399549 * EducationMaster
2426233   +          +     0.16185824798364 * Marital_StatusDivorced
2426234   +          +    -0.08142416735136 * Marital_StatusMarried
2426235   +          +    -0.20392270385969 * Marital_StatusSingle
2426236   +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle + 
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation + 
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced + 
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle + 
-0.16702436233017 * Marital_StatusTogether ;
2426237   +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
2426238   +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
2426239   +        EducationGraduation  +     0.28107355175103 * EducationMaster
2426240   +          +      -0.516522631078 * Marital_StatusDivorced
2426241   +          +    -0.61661247789976 * Marital_StatusMarried
2426242   +          +    -0.99533130308294 * Marital_StatusSingle
2426243   +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle + 
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation + 
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced + 
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle + 
-0.36897004084592 * Marital_StatusTogether ;
2426244   +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
2426245   +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
2426246   +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
2426247   +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
2426248   +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
2426249   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2426250   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2426251   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2426252   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2426253   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2426254   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2426255   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2426256   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2426257   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2426258   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2426259   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2426260   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2426261   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2426262   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2426263   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2426264   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2426265   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2426266   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2426267   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2426268   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2426269   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2426270   +END;
MPRINT(EM_DIAGRAM):   END;
2426271   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2426272   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2426273   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2426274   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2426275   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2426276   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2426277   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2426278   +END;
MPRINT(EM_DIAGRAM):   END;
2426279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2426280   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2426281   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2426282   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2426283   +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
2426284   +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
2426285   +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
2426286   +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
2426287   +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
2426288   +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
2426289   +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
2426290   +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
2426291   +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
2426292   +          +    -0.03801022287706 * S_NumDealsPurchases
2426293   +          +    -1.50723574966419 * S_NumDistPurchases
2426294   +          +    -0.21514545448485 * S_NumStorePurchases
2426295   +          +    -0.50179555233865 * S_NumWebPurchases
2426296   +          +    -0.68226572560161 * S_NumWebVisitsMonth
2426297   +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
2426298   +        S_RMntFrq  +     0.78178939203913 * S_Recency
2426299   +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 * 
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome 
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 * 
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts + 
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 * 
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 * 
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 * 
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 * 
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq + 
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
2426300   +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
2426301   +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
2426302   +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
2426303   +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
2426304   +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
2426305   +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
2426306   +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
2426307   +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
2426308   +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
2426309   +          +     0.70551335536975 * S_NumDealsPurchases
2426310   +          +     0.02824488988803 * S_NumDistPurchases
2426311   +          +    -0.47958123842808 * S_NumStorePurchases
2426312   +          +     1.04559003239583 * S_NumWebPurchases
2426313   +          +    -0.58386087813772 * S_NumWebVisitsMonth
2426314   +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
2426315   +        S_RMntFrq  +    -0.05848082255965 * S_Recency
2426316   +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 * 
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 * 
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298 
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts + 
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 * 
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 * 
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 * 
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 * 
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq + 
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
2426317   +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
2426318   +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
2426319   +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
2426320   +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
2426321   +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
2426322   +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
2426323   +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
2426324   +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
2426325   +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
2426326   +          +    -0.28907339261907 * S_NumDealsPurchases
2426327   +          +     0.04310505858352 * S_NumDistPurchases
2426328   +          +    -0.99594604666889 * S_NumStorePurchases
2426329   +          +    -0.58870940220114 * S_NumWebPurchases
2426330   +          +     0.84018399925148 * S_NumWebVisitsMonth
2426331   +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
2426332   +        S_RMntFrq  +    -1.47730936960999 * S_Recency
2426333   +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 * 
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome 
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 * 
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts + 
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 * 
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 * 
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 * 
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 * 
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq + 
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
2426334   +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
2426335   +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
2426336   +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
2426337   +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
2426338   +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
2426339   +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
2426340   +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
2426341   +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
2426342   +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
2426343   +          +     0.52917289878604 * S_NumDealsPurchases
2426344   +          +     0.30974142545809 * S_NumDistPurchases
2426345   +          +    -0.36081450643799 * S_NumStorePurchases
2426346   +          +    -0.28418053386759 * S_NumWebPurchases
2426347   +          +    -0.80759462497096 * S_NumWebVisitsMonth
2426348   +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
2426349   +        S_RMntFrq  +    -0.02418118976368 * S_Recency
2426350   +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 * 
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome 
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 * 
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts + 
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 * 
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 * 
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 * 
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 * 
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq + 
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
2426351   +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
2426352   +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
2426353   +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
2426354   +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
2426355   +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
2426356   +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
2426357   +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
2426358   +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
2426359   +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
2426360   +          +    -0.47500053723253 * S_NumDealsPurchases
2426361   +          +     0.41421086319635 * S_NumDistPurchases
2426362   +          +     0.69664835428137 * S_NumStorePurchases
2426363   +          +     0.66359306812968 * S_NumWebPurchases
2426364   +          +     0.77931462528741 * S_NumWebVisitsMonth
2426365   +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
2426366   +        S_RMntFrq  +    -1.91226042675868 * S_Recency
2426367   +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 * 
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome 
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 * 
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts + 
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 * 
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 * 
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 * 
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 * 
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq + 
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
2426368   +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
2426369   +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
2426370   +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
2426371   +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
2426372   +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 * 
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 + 
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 * 
HigherEducationBinary0 ;
2426373   +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
2426374   +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
2426375   +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
2426376   +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
2426377   +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 * 
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 + 
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 * 
HigherEducationBinary0 ;
2426378   +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
2426379   +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
2426380   +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
2426381   +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
2426382   +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 * 
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 + 
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 * 
HigherEducationBinary0 ;
2426383   +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
2426384   +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
2426385   +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
2426386   +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
2426387   +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 * 
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 + 
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 * 
HigherEducationBinary0 ;
2426388   +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
2426389   +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
2426390   +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
2426391   +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
2426392   +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 * 
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 + 
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 * 
HigherEducationBinary0 ;
2426393   +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
2426394   +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
2426395   +        EducationGraduation  +     0.89392741557091 * EducationMaster
2426396   +          +    -1.34742914042312 * Marital_StatusDivorced
2426397   +          +    -0.75378934918763 * Marital_StatusMarried
2426398   +          +    -1.85411678929217 * Marital_StatusSingle
2426399   +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle + 
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091 
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 * 
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 * 
Marital_StatusTogether ;
2426400   +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
2426401   +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
2426402   +        EducationGraduation  +      1.4602485898642 * EducationMaster
2426403   +          +     0.47958659206261 * Marital_StatusDivorced
2426404   +          +     -0.9665584294045 * Marital_StatusMarried
2426405   +          +      0.9733784530538 * Marital_StatusSingle
2426406   +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle + 
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642 
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 * 
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 * 
Marital_StatusTogether ;
2426407   +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
2426408   +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
2426409   +        EducationGraduation  +     1.49772418974753 * EducationMaster
2426410   +          +    -0.56894207908284 * Marital_StatusDivorced
2426411   +          +    -0.96715106987195 * Marital_StatusMarried
2426412   +          +     1.18678144721443 * Marital_StatusSingle
2426413   +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle + 
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation + 
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced + 
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle + 
1.05940264255347 * Marital_StatusTogether ;
2426414   +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
2426415   +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
2426416   +        EducationGraduation  +    -2.01250798855133 * EducationMaster
2426417   +          +     -0.6061959224661 * Marital_StatusDivorced
2426418   +          +     0.03495844244684 * Marital_StatusMarried
2426419   +          +    -0.63896361063244 * Marital_StatusSingle
2426420   +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle + 
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation + 
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced + 
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle + 
0.74357887057422 * Marital_StatusTogether ;
2426421   +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
2426422   +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
2426423   +        EducationGraduation  +     -0.1598988619204 * EducationMaster
2426424   +          +     0.82178907301319 * Marital_StatusDivorced
2426425   +          +     1.69543553114589 * Marital_StatusMarried
2426426   +          +     -2.1272067363559 * Marital_StatusSingle
2426427   +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle + 
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204 
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 * 
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 * 
Marital_StatusTogether ;
2426428   +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
2426429   +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
2426430   +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
2426431   +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
2426432   +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
2426433   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2426434   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2426435   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2426436   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2426437   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2426438   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2426439   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2426440   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2426441   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2426442   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2426443   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2426444   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2426445   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2426446   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2426447   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2426448   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2426449   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2426450   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2426451   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2426452   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2426453   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2426454   +END;
MPRINT(EM_DIAGRAM):   END;
2426455   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2426456   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2426457   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2426458   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2426459   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2426460   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2426461   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2426462   +END;
MPRINT(EM_DIAGRAM):   END;
2426463   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2426464   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2426465   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2426466   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2426467   +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
2426468   +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
2426469   +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 + 
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 + 
-1.38760297105319 * H1x1_6 ;
2426470   +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
2426471   +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
2426472   +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 + 
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 + 
2.71965753640902 * H1x1_6 ;
2426473   +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
2426474   +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
2426475   +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 + 
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 + 
-0.94725163293394 * H1x1_6 ;
2426476   +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
2426477   +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
2426478   +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 + 
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 + 
0.66585878141635 * H1x1_6 ;
2426479   +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
2426480   +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
2426481   +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 + 
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 + 
3.57592566919388 * H1x1_6 ;
2426482   +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
2426483   +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
2426484   +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 + 
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 + 
-0.32006241006585 * H1x1_6 ;
2426485   +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
2426486   +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
2426487   +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
2426488   +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 * 
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 + 
-0.07237646966438 * H1x2_6 ;
2426489   +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
2426490   +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
2426491   +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
2426492   +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2 
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 + 
0.35471332651631 * H1x2_6 ;
2426493   +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
2426494   +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
2426495   +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
2426496   +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2 
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 + 
0.5218140468737 * H1x2_6 ;
2426497   +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
2426498   +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
2426499   +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
2426500   +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2 
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 + 
-0.67920869444907 * H1x2_6 ;
2426501   +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
2426502   +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
2426503   +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
2426504   +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2 
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 + 
1.1175989027563 * H1x2_6 ;
2426505   +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
2426506   +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
2426507   +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
2426508   +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 * 
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5 
+ 1.54589390085972 * H1x2_6 ;
2426509   +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
2426510   +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
2426511   +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
2426512   +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
2426513   +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
2426514   +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
2426515   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2426516   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2426517   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2426518   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2426519   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2426520   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2426521   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2426522   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2426523   +END;
MPRINT(EM_DIAGRAM):   END;
2426524   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2426525   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2426526   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2426527   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2426528   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2426529   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2426530   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2426531   +END;
MPRINT(EM_DIAGRAM):   END;
2426532   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2426533   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2426534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2426535   +
2426536   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2426537   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2426538   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2426539   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2426540   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2426541   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2426542   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2426543   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2426544   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2426545   +end;
MPRINT(EM_DIAGRAM):   end;
2426546   +else do;
MPRINT(EM_DIAGRAM):   else do;
2426547   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2426548   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2426549   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2426550   +   end;
MPRINT(EM_DIAGRAM):   end;
2426551   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2426552   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2426553   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2426554   +   end;
MPRINT(EM_DIAGRAM):   end;
2426555   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2426556   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2426557   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2426558   +   end;
MPRINT(EM_DIAGRAM):   end;
2426559   +end;
MPRINT(EM_DIAGRAM):   end;
2426560   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2426561   +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
2426562   +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
2426563   +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 + 
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 + 
1.54726164498938 * H2x1_6 ;
2426564   +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
2426565   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2426566   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2426567   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2426568   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2426569   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2426570   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2426571   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2426572   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2426573   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2426574   +END;
MPRINT(EM_DIAGRAM):   END;
2426575   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2426576   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2426577   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2426578   +END;
MPRINT(EM_DIAGRAM):   END;
2426579   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2426580   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2426581   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2426582   +END;
MPRINT(EM_DIAGRAM):   END;
2426583   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2426584   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2426585   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2426586   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2426587   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2426588   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2426589   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2426590   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2426591   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2426592   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2426593   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2426594   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2426595   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2426596   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2426597   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2426598   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2426599   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2426600   +END;
MPRINT(EM_DIAGRAM):   END;
2426601   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2426602   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2426603   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2426604   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2426605   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2426606   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2426607   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2426608   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2426609   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2426610   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2426611   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2426612   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2426613   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2426614   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2426615   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2426616   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2426617   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2426618   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2426619   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2426620   +* Ensmbl45: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 3 of 5;
2426621   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2426622   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2426623   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2426624   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2426625   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2426626   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2426627   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2426628   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2426629   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2426630   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2426631   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2426632   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2426633   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2426634   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2426635   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2426636   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2426637   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2426638   +LENGTH _WARN_ $4
2426639   +      F_DepVar  $ 12
2426640   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2426641   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2426642   +
2426643   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2426644   +
2426645   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2426646   +
2426647   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2426648   +
2426649   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2426650   +
2426651   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2426652   +
2426653   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2426654   +
2426655   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2426656   +
2426657   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2426658   +
2426659   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2426660   +
2426661   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2426662   +
2426663   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2426664   +
2426665   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2426666   +
2426667   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2426668   +
2426669   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2426670   +
2426671   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2426672   +
2426673   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2426674   +
2426675   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2426676   +
2426677   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2426678   +
2426679   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2426680   +
2426681   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2426682   +
2426683   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2426684   +
2426685   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2426686   +
2426687   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2426688   +
2426689   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2426690   +
2426691   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2426692   +
2426693   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2426694   +
2426695   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2426696   +
2426697   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2426698   +
2426699   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2426700   +
2426701   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2426702   +
2426703   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2426704   +
2426705   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2426706   +
2426707   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2426708   +
2426709   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2426710   +
2426711   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2426712   +
2426713   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2426714   +
2426715   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2426716   +
2426717   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2426718   +
2426719   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2426720   +
2426721   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2426722   +
2426723   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2426724   +
2426725   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2426726   +
2426727   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2426728   +
2426729   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2426730   +
2426731   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2426732   +
2426733   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2426734   +
2426735   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2426736   +
2426737   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2426738   +
2426739   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2426740   +
2426741   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2426742   +
2426743   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2426744   +
2426745   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2426746   +
2426747   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2426748   +
2426749   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2426750   +
2426751   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2426752   +
2426753   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2426754   +
2426755   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2426756   +
2426757   +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
2426758   +
2426759   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2426760   +
2426761   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2426762   +
2426763   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2426764   +
2426765   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2426766   +
2426767   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2426768   +
2426769   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2426770   +
2426771   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
2426772   +
2426773   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2426774   +
2426775   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2426776   +
2426777   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2426778   +
2426779   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2426780   +
2426781   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2426782   +
2426783   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2426784   +
2426785   +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
2426786   +
2426787   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2426788   +
2426789   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2426790   +
2426791   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2426792   +
2426793   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2426794   +
2426795   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2426796   +
2426797   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2426798   +
2426799   +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
2426800   +
2426801   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2426802   +
2426803   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2426804   +
2426805   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2426806   +
2426807   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2426808   +
2426809   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2426810   +
2426811   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2426812   +
2426813   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2426814   +
2426815   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2426816   +
2426817   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2426818   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2426819   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2426820   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2426821   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2426822   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2426823   +end;
MPRINT(EM_DIAGRAM):   end;
2426824   +else do;
MPRINT(EM_DIAGRAM):   else do;
2426825   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2426826   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2426827   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2426828   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2426829   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2426830   +   end;
MPRINT(EM_DIAGRAM):   end;
2426831   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2426832   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2426833   +   end;
MPRINT(EM_DIAGRAM):   end;
2426834   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2426835   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2426836   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2426837   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2426838   +   end;
MPRINT(EM_DIAGRAM):   end;
2426839   +end;
MPRINT(EM_DIAGRAM):   end;
2426840   +
2426841   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2426842   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2426843   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2426844   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2426845   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2426846   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2426847   +end;
MPRINT(EM_DIAGRAM):   end;
2426848   +else do;
MPRINT(EM_DIAGRAM):   else do;
2426849   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2426850   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2426851   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2426852   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2426853   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2426854   +   end;
MPRINT(EM_DIAGRAM):   end;
2426855   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2426856   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2426857   +   end;
MPRINT(EM_DIAGRAM):   end;
2426858   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2426859   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2426860   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2426861   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2426862   +   end;
MPRINT(EM_DIAGRAM):   end;
2426863   +end;
MPRINT(EM_DIAGRAM):   end;
2426864   +
2426865   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2426866   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2426867   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2426868   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2426869   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2426870   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2426871   +end;
MPRINT(EM_DIAGRAM):   end;
2426872   +else do;
MPRINT(EM_DIAGRAM):   else do;
2426873   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2426874   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2426875   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2426876   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2426877   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2426878   +   end;
MPRINT(EM_DIAGRAM):   end;
2426879   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2426880   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2426881   +   end;
MPRINT(EM_DIAGRAM):   end;
2426882   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2426883   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2426884   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2426885   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2426886   +   end;
MPRINT(EM_DIAGRAM):   end;
2426887   +end;
MPRINT(EM_DIAGRAM):   end;
2426888   +
2426889   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2426890   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2426891   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2426892   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2426893   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2426894   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2426895   +end;
MPRINT(EM_DIAGRAM):   end;
2426896   +else do;
MPRINT(EM_DIAGRAM):   else do;
2426897   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2426898   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2426899   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2426900   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2426901   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2426902   +   end;
MPRINT(EM_DIAGRAM):   end;
2426903   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2426904   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2426905   +   end;
MPRINT(EM_DIAGRAM):   end;
2426906   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2426907   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2426908   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2426909   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2426910   +   end;
MPRINT(EM_DIAGRAM):   end;
2426911   +end;
MPRINT(EM_DIAGRAM):   end;
2426912   +
2426913   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2426914   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2426915   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2426916   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2426917   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2426918   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2426919   +end;
MPRINT(EM_DIAGRAM):   end;
2426920   +else do;
MPRINT(EM_DIAGRAM):   else do;
2426921   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2426922   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2426923   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2426924   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2426925   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2426926   +   end;
MPRINT(EM_DIAGRAM):   end;
2426927   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2426928   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2426929   +   end;
MPRINT(EM_DIAGRAM):   end;
2426930   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2426931   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2426932   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2426933   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2426934   +   end;
MPRINT(EM_DIAGRAM):   end;
2426935   +end;
MPRINT(EM_DIAGRAM):   end;
2426936   +
2426937   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2426938   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2426939   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2426940   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2426941   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2426942   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2426943   +end;
MPRINT(EM_DIAGRAM):   end;
2426944   +else do;
MPRINT(EM_DIAGRAM):   else do;
2426945   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2426946   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2426947   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2426948   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2426949   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2426950   +   end;
MPRINT(EM_DIAGRAM):   end;
2426951   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2426952   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2426953   +   end;
MPRINT(EM_DIAGRAM):   end;
2426954   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2426955   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2426956   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2426957   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2426958   +   end;
MPRINT(EM_DIAGRAM):   end;
2426959   +end;
MPRINT(EM_DIAGRAM):   end;
2426960   +
2426961   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2426962   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2426963   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2426964   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2426965   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2426966   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2426967   +end;
MPRINT(EM_DIAGRAM):   end;
2426968   +else do;
MPRINT(EM_DIAGRAM):   else do;
2426969   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2426970   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2426971   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2426972   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2426973   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2426974   +   end;
MPRINT(EM_DIAGRAM):   end;
2426975   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2426976   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2426977   +   end;
MPRINT(EM_DIAGRAM):   end;
2426978   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2426979   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2426980   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2426981   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2426982   +   end;
MPRINT(EM_DIAGRAM):   end;
2426983   +end;
MPRINT(EM_DIAGRAM):   end;
2426984   +
2426985   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2426986   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2426987   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2426988   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2426989   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2426990   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2426991   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2426992   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2426993   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2426994   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2426995   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2426996   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2426997   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2426998   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2426999   +end;
MPRINT(EM_DIAGRAM):   end;
2427000   +else do;
MPRINT(EM_DIAGRAM):   else do;
2427001   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2427002   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2427003   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2427004   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2427005   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2427006   +   end;
MPRINT(EM_DIAGRAM):   end;
2427007   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2427008   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2427009   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2427010   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2427011   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2427012   +   end;
MPRINT(EM_DIAGRAM):   end;
2427013   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2427014   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2427015   +   end;
MPRINT(EM_DIAGRAM):   end;
2427016   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2427017   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2427018   +   end;
MPRINT(EM_DIAGRAM):   end;
2427019   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2427020   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2427021   +   end;
MPRINT(EM_DIAGRAM):   end;
2427022   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2427023   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2427024   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2427025   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2427026   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2427027   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2427028   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2427029   +   end;
MPRINT(EM_DIAGRAM):   end;
2427030   +end;
MPRINT(EM_DIAGRAM):   end;
2427031   +
2427032   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2427033   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2427034   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2427035   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2427036   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2427037   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2427038   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2427039   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2427040   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2427041   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2427042   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2427043   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2427044   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2427045   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2427046   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2427047   +end;
MPRINT(EM_DIAGRAM):   end;
2427048   +else do;
MPRINT(EM_DIAGRAM):   else do;
2427049   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2427050   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2427051   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2427052   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2427053   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2427054   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2427055   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2427056   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2427057   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2427058   +         end;
MPRINT(EM_DIAGRAM):   end;
2427059   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2427060   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2427061   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2427062   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2427063   +            end;
MPRINT(EM_DIAGRAM):   end;
2427064   +         end;
MPRINT(EM_DIAGRAM):   end;
2427065   +      end;
MPRINT(EM_DIAGRAM):   end;
2427066   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2427067   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2427068   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2427069   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2427070   +         end;
MPRINT(EM_DIAGRAM):   end;
2427071   +      end;
MPRINT(EM_DIAGRAM):   end;
2427072   +   end;
MPRINT(EM_DIAGRAM):   end;
2427073   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2427074   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2427075   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2427076   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2427077   +      end;
MPRINT(EM_DIAGRAM):   end;
2427078   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2427079   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2427080   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2427081   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2427082   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2427083   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2427084   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2427085   +         end;
MPRINT(EM_DIAGRAM):   end;
2427086   +      end;
MPRINT(EM_DIAGRAM):   end;
2427087   +   end;
MPRINT(EM_DIAGRAM):   end;
2427088   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2427089   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2427090   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2427091   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2427092   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2427093   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2427094   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2427095   +   end;
MPRINT(EM_DIAGRAM):   end;
2427096   +end;
MPRINT(EM_DIAGRAM):   end;
2427097   +
2427098   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2427099   +*** Checking missing input Interval
2427100   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2427101   +
2427102   +IF NMISS(
2427103   +   AcceptedCmpTotal ,
2427104   +   Age ,
2427105   +   Frq ,
2427106   +   Income ,
2427107   +   Kidhome ,
2427108   +   Mnt ,
2427109   +   MntFishProducts ,
2427110   +   MntFruits ,
2427111   +   MntGoldProds ,
2427112   +   MntMeatProducts ,
2427113   +   MntSweetProducts ,
2427114   +   MntWines ,
2427115   +   MonthsAsCustomer ,
2427116   +   NumCatalogPurchases ,
2427117   +   NumDealsPurchases ,
2427118   +   NumDistPurchases ,
2427119   +   NumStorePurchases ,
2427120   +   NumWebPurchases ,
2427121   +   NumWebVisitsMonth ,
2427122   +   RFMstat ,
2427123   +   RMntFrq ,
2427124   +   Recency ,
2427125   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2427126   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2427127   +
2427128   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2427129   +END;
MPRINT(EM_DIAGRAM):   END;
2427130   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2427131   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2427132   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2427133   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2427134   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2427135   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2427136   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2427137   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2427138   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2427139   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2427140   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2427141   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2427142   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2427143   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2427144   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2427145   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2427146   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2427147   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2427148   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2427149   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2427150   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2427151   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2427152   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2427153   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2427154   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2427155   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2427156   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2427157   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2427158   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2427159   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2427160   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2427161   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2427162   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2427163   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2427164   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2427165   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2427166   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2427167   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2427168   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2427169   +END;
MPRINT(EM_DIAGRAM):   END;
2427170   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2427171   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2427172   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2427173   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2427174   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2427175   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2427176   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2427177   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2427178   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2427179   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2427180   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2427181   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2427182   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2427183   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2427184   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2427185   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2427186   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2427187   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2427188   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2427189   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2427190   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2427191   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2427192   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2427193   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2427194   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2427195   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2427196   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2427197   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2427198   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2427199   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2427200   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2427201   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2427202   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2427203   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2427204   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2427205   +   ELSE S_NumCatalogPurchases
2427206   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2427207   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2427208   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2427209   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2427210   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2427211   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2427212   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2427213   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2427214   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2427215   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2427216   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2427217   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2427218   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2427219   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2427220   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2427221   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2427222   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2427223   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2427224   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2427225   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2427226   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2427227   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2427228   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2427229   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2427230   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2427231   +END;
MPRINT(EM_DIAGRAM):   END;
2427232   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2427233   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2427234   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2427235   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2427236   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2427237   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2427238   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2427239   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2427240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2427241   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2427242   +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
2427243   +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
2427244   +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
2427245   +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
2427246   +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
2427247   +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
2427248   +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
2427249   +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
2427250   +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
2427251   +          +    -1.18466001117424 * S_NumDealsPurchases
2427252   +          +     -0.1371252133567 * S_NumDistPurchases
2427253   +          +     1.92719775731123 * S_NumStorePurchases
2427254   +          +     1.23184249192116 * S_NumWebPurchases
2427255   +          +    -1.55583843197424 * S_NumWebVisitsMonth
2427256   +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
2427257   +        S_RMntFrq  +     1.63863392145333 * S_Recency
2427258   +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 * 
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome 
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 * 
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts + 
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 * 
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 * 
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 * 
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 * 
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq + 
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
2427259   +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
2427260   +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
2427261   +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
2427262   +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
2427263   +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
2427264   +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
2427265   +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
2427266   +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
2427267   +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
2427268   +          +     0.63616523425865 * S_NumDealsPurchases
2427269   +          +     0.45460056261546 * S_NumDistPurchases
2427270   +          +    -0.61009999017225 * S_NumStorePurchases
2427271   +          +     1.85193755731081 * S_NumWebPurchases
2427272   +          +    -2.47698404964319 * S_NumWebVisitsMonth
2427273   +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
2427274   +        S_RMntFrq  +     1.07962222419254 * S_Recency
2427275   +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 * 
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 * 
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts + 
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 * 
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines + 
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases + 
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases + 
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases + 
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 * 
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
2427276   +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
2427277   +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
2427278   +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
2427279   +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
2427280   +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
2427281   +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
2427282   +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
2427283   +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
2427284   +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
2427285   +          +      1.8907968580473 * S_NumDealsPurchases
2427286   +          +     0.01244124801764 * S_NumDistPurchases
2427287   +          +    -2.34409118104622 * S_NumStorePurchases
2427288   +          +    -1.80820043087435 * S_NumWebPurchases
2427289   +          +     2.40219682136039 * S_NumWebVisitsMonth
2427290   +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
2427291   +        S_RMntFrq  +    -2.05893311376628 * S_Recency
2427292   +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 * 
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 * 
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts + 
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 * 
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines + 
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases + 
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases + 
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases + 
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 * 
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
2427293   +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
2427294   +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
2427295   +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
2427296   +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
2427297   +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
2427298   +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
2427299   +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
2427300   +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
2427301   +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
2427302   +          +     0.28209537604198 * S_NumDealsPurchases
2427303   +          +      0.6450277971767 * S_NumDistPurchases
2427304   +          +     0.85050092520609 * S_NumStorePurchases
2427305   +          +    -0.53920307215941 * S_NumWebPurchases
2427306   +          +     3.01106015100147 * S_NumWebVisitsMonth
2427307   +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
2427308   +        S_RMntFrq  +    -3.15497765450512 * S_Recency
2427309   +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 * 
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome 
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 * 
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts + 
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 * 
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 * 
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 * 
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 * 
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq + 
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
2427310   +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
2427311   +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
2427312   +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
2427313   +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
2427314   +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
2427315   +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
2427316   +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
2427317   +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
2427318   +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
2427319   +          +    -0.36642526324451 * S_NumDealsPurchases
2427320   +          +     -0.6091014843932 * S_NumDistPurchases
2427321   +          +    -0.21154626182088 * S_NumStorePurchases
2427322   +          +    -0.10361347071364 * S_NumWebPurchases
2427323   +          +     1.36358817627784 * S_NumWebVisitsMonth
2427324   +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
2427325   +        S_RMntFrq  +    -1.04649498091784 * S_Recency
2427326   +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 * 
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 * 
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts + 
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 * 
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines + 
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases + 
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases + 
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases + 
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 * 
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
2427327   +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
2427328   +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
2427329   +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
2427330   +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
2427331   +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
2427332   +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
2427333   +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
2427334   +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
2427335   +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
2427336   +          +    -0.14868505161718 * S_NumDealsPurchases
2427337   +          +    -0.08395384711805 * S_NumDistPurchases
2427338   +          +     0.60525238179245 * S_NumStorePurchases
2427339   +          +     0.04555100214276 * S_NumWebPurchases
2427340   +          +    -2.31888436784305 * S_NumWebVisitsMonth
2427341   +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
2427342   +        S_RMntFrq  +     3.02439474266744 * S_Recency
2427343   +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 * 
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome + 
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 * 
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts + 
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 * 
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 * 
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 * 
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 * 
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq + 
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
2427344   +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
2427345   +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
2427346   +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
2427347   +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
2427348   +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 * 
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 + 
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 * 
HigherEducationBinary0 ;
2427349   +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
2427350   +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
2427351   +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
2427352   +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
2427353   +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 * 
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 + 
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 * 
HigherEducationBinary0 ;
2427354   +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
2427355   +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
2427356   +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
2427357   +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
2427358   +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 * 
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 + 
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 * 
HigherEducationBinary0 ;
2427359   +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
2427360   +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
2427361   +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
2427362   +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
2427363   +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342 
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 + 
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 * 
HigherEducationBinary0 ;
2427364   +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
2427365   +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
2427366   +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
2427367   +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
2427368   +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 * 
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 + 
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 * 
HigherEducationBinary0 ;
2427369   +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
2427370   +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
2427371   +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
2427372   +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
2427373   +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742 
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 + 
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 * 
HigherEducationBinary0 ;
2427374   +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
2427375   +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
2427376   +        EducationGraduation  +     0.96924197858068 * EducationMaster
2427377   +          +     -0.7180104021039 * Marital_StatusDivorced
2427378   +          +      0.5957373170744 * Marital_StatusMarried
2427379   +          +    -0.86183942803988 * Marital_StatusSingle
2427380   +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle + 
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068 
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 * 
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 * 
Marital_StatusTogether ;
2427381   +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
2427382   +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
2427383   +        EducationGraduation  +    -1.23733321574678 * EducationMaster
2427384   +          +     0.84772700244021 * Marital_StatusDivorced
2427385   +          +    -0.37049970188511 * Marital_StatusMarried
2427386   +          +     1.54291641732063 * Marital_StatusSingle
2427387   +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle + 
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation + 
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced + 
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle + 
0.2036514883055 * Marital_StatusTogether ;
2427388   +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
2427389   +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
2427390   +        EducationGraduation  +     0.02093123351397 * EducationMaster
2427391   +          +     0.73222548496385 * Marital_StatusDivorced
2427392   +          +    -0.50102202656102 * Marital_StatusMarried
2427393   +          +    -0.07207130428422 * Marital_StatusSingle
2427394   +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle + 
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation + 
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced + 
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle + 
0.17349558515949 * Marital_StatusTogether ;
2427395   +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
2427396   +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
2427397   +        EducationGraduation  +     0.65366032471107 * EducationMaster
2427398   +          +     0.25894719464799 * Marital_StatusDivorced
2427399   +          +    -1.95576501275834 * Marital_StatusMarried
2427400   +          +     2.65422185276746 * Marital_StatusSingle
2427401   +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle + 
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107 
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 * 
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 * 
Marital_StatusTogether ;
2427402   +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
2427403   +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
2427404   +        EducationGraduation  +    -0.28683119112285 * EducationMaster
2427405   +          +     0.60936191204707 * Marital_StatusDivorced
2427406   +          +    -0.52190111190458 * Marital_StatusMarried
2427407   +          +    -0.60982305233136 * Marital_StatusSingle
2427408   +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle + 
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation + 
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced + 
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle + 
0.44659686388318 * Marital_StatusTogether ;
2427409   +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
2427410   +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
2427411   +        EducationGraduation  +     0.51538853297606 * EducationMaster
2427412   +          +    -1.44614502228294 * Marital_StatusDivorced
2427413   +          +      2.9001493892928 * Marital_StatusMarried
2427414   +          +    -2.60467399972513 * Marital_StatusSingle
2427415   +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle + 
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606 
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 * 
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 * 
Marital_StatusTogether ;
2427416   +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
2427417   +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
2427418   +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
2427419   +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
2427420   +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
2427421   +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
2427422   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
2427423   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
2427424   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
2427425   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2427426   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2427427   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2427428   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2427429   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2427430   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2427431   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2427432   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2427433   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2427434   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2427435   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2427436   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2427437   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2427438   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
2427439   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
2427440   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2427441   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2427442   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2427443   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2427444   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2427445   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2427446   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
2427447   +END;
MPRINT(EM_DIAGRAM):   END;
2427448   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2427449   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2427450   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2427451   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2427452   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2427453   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2427454   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2427455   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2427456   +END;
MPRINT(EM_DIAGRAM):   END;
2427457   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2427458   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2427459   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2427460   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2427461   +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
2427462   +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
2427463   +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
2427464   +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
2427465   +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
2427466   +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
2427467   +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
2427468   +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
2427469   +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
2427470   +          +    -0.46483717253931 * S_NumDealsPurchases
2427471   +          +    -0.53329008421157 * S_NumDistPurchases
2427472   +          +      0.2490774300193 * S_NumStorePurchases
2427473   +          +    -0.82755150673885 * S_NumWebPurchases
2427474   +          +     0.04007223822389 * S_NumWebVisitsMonth
2427475   +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
2427476   +        S_RMntFrq  +     0.43434806411249 * S_Recency
2427477   +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 * 
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome 
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 * 
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts + 
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 * 
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 * 
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 * 
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 * 
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq + 
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
2427478   +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
2427479   +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
2427480   +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
2427481   +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
2427482   +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
2427483   +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
2427484   +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
2427485   +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
2427486   +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
2427487   +          +     0.75855101382458 * S_NumDealsPurchases
2427488   +          +     1.61754951768262 * S_NumDistPurchases
2427489   +          +    -0.48146714929729 * S_NumStorePurchases
2427490   +          +    -0.76460728035552 * S_NumWebPurchases
2427491   +          +    -0.71146787112442 * S_NumWebVisitsMonth
2427492   +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
2427493   +        S_RMntFrq  +    -0.01528916550509 * S_Recency
2427494   +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 * 
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 * 
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 * 
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts + 
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 * 
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 * 
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 * 
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 * 
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq + 
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
2427495   +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
2427496   +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
2427497   +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
2427498   +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
2427499   +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
2427500   +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
2427501   +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
2427502   +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
2427503   +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
2427504   +          +     0.75255317965748 * S_NumDealsPurchases
2427505   +          +     1.34900588315783 * S_NumDistPurchases
2427506   +          +    -0.17717469778048 * S_NumStorePurchases
2427507   +          +    -0.01560551546553 * S_NumWebPurchases
2427508   +          +     1.24315988674343 * S_NumWebVisitsMonth
2427509   +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
2427510   +        S_RMntFrq  +    -2.01558015490584 * S_Recency
2427511   +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 * 
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome 
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 * 
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts + 
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 * 
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 * 
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 * 
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 * 
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq + 
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
2427512   +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
2427513   +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
2427514   +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
2427515   +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
2427516   +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
2427517   +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
2427518   +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
2427519   +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
2427520   +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
2427521   +          +    -1.71127148178768 * S_NumDealsPurchases
2427522   +          +    -1.77527355221308 * S_NumDistPurchases
2427523   +          +    -1.40009594349363 * S_NumStorePurchases
2427524   +          +    -0.46471012062697 * S_NumWebPurchases
2427525   +          +     0.04619891083228 * S_NumWebVisitsMonth
2427526   +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
2427527   +        S_RMntFrq  +     0.84880186653433 * S_Recency
2427528   +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 * 
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome 
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 * 
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts + 
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 * 
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 * 
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 * 
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 * 
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq + 
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
2427529   +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
2427530   +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
2427531   +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
2427532   +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
2427533   +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
2427534   +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
2427535   +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
2427536   +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
2427537   +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
2427538   +          +    -0.22204470395056 * S_NumDealsPurchases
2427539   +          +    -1.74490476011984 * S_NumDistPurchases
2427540   +          +     1.93538420108324 * S_NumStorePurchases
2427541   +          +     1.04892631742152 * S_NumWebPurchases
2427542   +          +     1.50717841566047 * S_NumWebVisitsMonth
2427543   +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
2427544   +        S_RMntFrq  +      1.9918829185386 * S_Recency
2427545   +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 * 
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome 
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 * 
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts + 
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 * 
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 * 
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 * 
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 * 
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq + 
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
2427546   +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
2427547   +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
2427548   +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
2427549   +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
2427550   +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
2427551   +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
2427552   +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
2427553   +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
2427554   +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
2427555   +          +    -0.94690420785776 * S_NumDealsPurchases
2427556   +          +     1.87932706342204 * S_NumDistPurchases
2427557   +          +     0.31232717416487 * S_NumStorePurchases
2427558   +          +     1.51889492693355 * S_NumWebPurchases
2427559   +          +     0.04376853689795 * S_NumWebVisitsMonth
2427560   +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
2427561   +        S_RMntFrq  +    -1.21983510008829 * S_Recency
2427562   +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 * 
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome 
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 * 
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts + 
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 * 
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 * 
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 * 
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 * 
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq + 
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
2427563   +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
2427564   +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
2427565   +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
2427566   +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
2427567   +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 * 
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 + 
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 * 
HigherEducationBinary0 ;
2427568   +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
2427569   +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
2427570   +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
2427571   +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
2427572   +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 * 
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 + 
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 * 
HigherEducationBinary0 ;
2427573   +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
2427574   +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
2427575   +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
2427576   +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
2427577   +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 * 
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 + 
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 * 
HigherEducationBinary0 ;
2427578   +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
2427579   +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
2427580   +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
2427581   +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
2427582   +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 * 
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 + 
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 * 
HigherEducationBinary0 ;
2427583   +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
2427584   +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
2427585   +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
2427586   +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
2427587   +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 * 
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 + 
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 * 
HigherEducationBinary0 ;
2427588   +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
2427589   +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
2427590   +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
2427591   +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
2427592   +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937 
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 + 
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 * 
HigherEducationBinary0 ;
2427593   +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
2427594   +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
2427595   +        EducationGraduation  +    -0.11344307008943 * EducationMaster
2427596   +          +     0.56030871857835 * Marital_StatusDivorced
2427597   +          +    -1.22448534379831 * Marital_StatusMarried
2427598   +          +     0.78141783495855 * Marital_StatusSingle
2427599   +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle + 
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943 
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 * 
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 * 
Marital_StatusTogether ;
2427600   +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
2427601   +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
2427602   +        EducationGraduation  +     0.69607179798453 * EducationMaster
2427603   +          +    -2.63452071552997 * Marital_StatusDivorced
2427604   +          +     0.61829054779121 * Marital_StatusMarried
2427605   +          +    -2.20743370246315 * Marital_StatusSingle
2427606   +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle + 
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453 
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 * 
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 * 
Marital_StatusTogether ;
2427607   +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
2427608   +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
2427609   +        EducationGraduation  +    -1.68638824011899 * EducationMaster
2427610   +          +      -1.454102516731 * Marital_StatusDivorced
2427611   +          +     0.71488291465759 * Marital_StatusMarried
2427612   +          +     0.96038830049792 * Marital_StatusSingle
2427613   +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle + 
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899 
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 * 
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 * 
Marital_StatusTogether ;
2427614   +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
2427615   +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
2427616   +        EducationGraduation  +    -1.12481097095571 * EducationMaster
2427617   +          +    -0.01160394891598 * Marital_StatusDivorced
2427618   +          +    -1.09054636482951 * Marital_StatusMarried
2427619   +          +      0.7793855479379 * Marital_StatusSingle
2427620   +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle + 
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation + 
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced + 
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle + 
-0.40649435490654 * Marital_StatusTogether ;
2427621   +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
2427622   +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
2427623   +        EducationGraduation  +     0.09666597691691 * EducationMaster
2427624   +          +    -0.73414854875115 * Marital_StatusDivorced
2427625   +          +     0.46421425621114 * Marital_StatusMarried
2427626   +          +    -0.54512730625469 * Marital_StatusSingle
2427627   +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle + 
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691 
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 * 
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 * 
Marital_StatusTogether ;
2427628   +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
2427629   +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
2427630   +        EducationGraduation  +     0.56518194582557 * EducationMaster
2427631   +          +     0.25131188683384 * Marital_StatusDivorced
2427632   +          +     2.38279806963807 * Marital_StatusMarried
2427633   +          +     0.28897706448348 * Marital_StatusSingle
2427634   +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle + 
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557 
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 * 
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 * 
Marital_StatusTogether ;
2427635   +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
2427636   +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
2427637   +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
2427638   +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
2427639   +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
2427640   +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
2427641   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
2427642   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
2427643   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
2427644   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2427645   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2427646   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2427647   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2427648   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2427649   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2427650   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2427651   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2427652   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2427653   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2427654   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2427655   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2427656   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2427657   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
2427658   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
2427659   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2427660   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2427661   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2427662   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2427663   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2427664   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2427665   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
2427666   +END;
MPRINT(EM_DIAGRAM):   END;
2427667   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2427668   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2427669   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2427670   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2427671   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2427672   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2427673   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2427674   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2427675   +END;
MPRINT(EM_DIAGRAM):   END;
2427676   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2427677   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2427678   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2427679   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2427680   +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
2427681   +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
2427682   +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
2427683   +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
2427684   +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
2427685   +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
2427686   +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
2427687   +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
2427688   +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
2427689   +          +     1.11855402225797 * S_NumDealsPurchases
2427690   +          +     0.39150287442005 * S_NumDistPurchases
2427691   +          +     0.00160244551627 * S_NumStorePurchases
2427692   +          +     1.54380043731879 * S_NumWebPurchases
2427693   +          +      0.6462755347813 * S_NumWebVisitsMonth
2427694   +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
2427695   +        S_RMntFrq  +     0.91533450209744 * S_Recency
2427696   +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 * 
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome 
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 * 
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts + 
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 * 
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 * 
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 * 
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 * 
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq + 
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
2427697   +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
2427698   +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
2427699   +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
2427700   +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
2427701   +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
2427702   +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
2427703   +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
2427704   +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
2427705   +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
2427706   +          +     0.01911815525287 * S_NumDealsPurchases
2427707   +          +    -1.07196707915227 * S_NumDistPurchases
2427708   +          +      0.6452048321682 * S_NumStorePurchases
2427709   +          +    -0.15818575353955 * S_NumWebPurchases
2427710   +          +    -0.82586162051382 * S_NumWebVisitsMonth
2427711   +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
2427712   +        S_RMntFrq  +     0.23398669008843 * S_Recency
2427713   +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 * 
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome 
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 * 
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts + 
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 * 
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 * 
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 * 
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 * 
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq + 
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
2427714   +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
2427715   +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
2427716   +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
2427717   +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
2427718   +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
2427719   +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
2427720   +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
2427721   +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
2427722   +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
2427723   +          +     1.56893739271853 * S_NumDealsPurchases
2427724   +          +      0.6745865425238 * S_NumDistPurchases
2427725   +          +    -0.26848765783548 * S_NumStorePurchases
2427726   +          +     0.79227081430227 * S_NumWebPurchases
2427727   +          +     0.83054874267768 * S_NumWebVisitsMonth
2427728   +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
2427729   +        S_RMntFrq  +     0.80917480816898 * S_Recency
2427730   +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age 
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome + 
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 * 
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts + 
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 * 
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 * 
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 * 
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 * 
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq + 
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
2427731   +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
2427732   +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
2427733   +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
2427734   +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
2427735   +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
2427736   +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
2427737   +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
2427738   +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
2427739   +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
2427740   +          +    -0.23954856030467 * S_NumDealsPurchases
2427741   +          +    -1.61914390483829 * S_NumDistPurchases
2427742   +          +      -1.014570623016 * S_NumStorePurchases
2427743   +          +    -0.36828642098701 * S_NumWebPurchases
2427744   +          +    -0.04976922659227 * S_NumWebVisitsMonth
2427745   +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
2427746   +        S_RMntFrq  +    -0.40880481304369 * S_Recency
2427747   +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 * 
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome 
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 * 
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts + 
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 * 
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 * 
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 * 
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 * 
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq + 
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
2427748   +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
2427749   +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
2427750   +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
2427751   +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
2427752   +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
2427753   +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
2427754   +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
2427755   +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
2427756   +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
2427757   +          +     1.00094082424204 * S_NumDealsPurchases
2427758   +          +      0.2724785290725 * S_NumDistPurchases
2427759   +          +     0.13170237783486 * S_NumStorePurchases
2427760   +          +    -1.31447792523743 * S_NumWebPurchases
2427761   +          +    -0.09121088371438 * S_NumWebVisitsMonth
2427762   +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
2427763   +        S_RMntFrq  +      0.6767512513985 * S_Recency
2427764   +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 * 
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 * 
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts + 
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 * 
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines + 
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases + 
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases + 
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases + 
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 * 
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
2427765   +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
2427766   +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
2427767   +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
2427768   +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
2427769   +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
2427770   +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
2427771   +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
2427772   +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
2427773   +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
2427774   +          +    -0.73198872336344 * S_NumDealsPurchases
2427775   +          +     0.29368958872361 * S_NumDistPurchases
2427776   +          +     1.52772046446908 * S_NumStorePurchases
2427777   +          +    -1.75065469134874 * S_NumWebPurchases
2427778   +          +      0.0264954621772 * S_NumWebVisitsMonth
2427779   +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
2427780   +        S_RMntFrq  +     1.14219878739476 * S_Recency
2427781   +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 * 
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 * 
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts + 
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 * 
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines + 
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases + 
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases + 
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases + 
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 * 
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
2427782   +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
2427783   +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
2427784   +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
2427785   +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
2427786   +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 * 
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 + 
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 * 
HigherEducationBinary0 ;
2427787   +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
2427788   +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
2427789   +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
2427790   +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
2427791   +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 * 
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 + 
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 * 
HigherEducationBinary0 ;
2427792   +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
2427793   +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
2427794   +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
2427795   +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
2427796   +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 * 
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 + 
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 * 
HigherEducationBinary0 ;
2427797   +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
2427798   +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
2427799   +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
2427800   +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
2427801   +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 * 
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 + 
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 * 
HigherEducationBinary0 ;
2427802   +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
2427803   +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
2427804   +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
2427805   +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
2427806   +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 * 
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 + 
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 * 
HigherEducationBinary0 ;
2427807   +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
2427808   +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
2427809   +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
2427810   +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
2427811   +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 * 
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 + 
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 * 
HigherEducationBinary0 ;
2427812   +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
2427813   +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
2427814   +        EducationGraduation  +     1.49476669226441 * EducationMaster
2427815   +          +     0.32207432513904 * Marital_StatusDivorced
2427816   +          +      0.6397913221395 * Marital_StatusMarried
2427817   +          +    -0.25330032559918 * Marital_StatusSingle
2427818   +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle + 
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441 
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 * 
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 * 
Marital_StatusTogether ;
2427819   +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
2427820   +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
2427821   +        EducationGraduation  +      0.0913616986494 * EducationMaster
2427822   +          +     0.79430904713493 * Marital_StatusDivorced
2427823   +          +     2.54456429102799 * Marital_StatusMarried
2427824   +          +     0.59410742352499 * Marital_StatusSingle
2427825   +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle + 
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494 
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 * 
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 * 
Marital_StatusTogether ;
2427826   +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
2427827   +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
2427828   +        EducationGraduation  +    -0.07080985966069 * EducationMaster
2427829   +          +    -0.43081775693595 * Marital_StatusDivorced
2427830   +          +    -0.78485102174552 * Marital_StatusMarried
2427831   +          +    -1.56581090110813 * Marital_StatusSingle
2427832   +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle + 
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation + 
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced + 
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle + 
1.31552735466691 * Marital_StatusTogether ;
2427833   +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
2427834   +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
2427835   +        EducationGraduation  +     1.01633562820676 * EducationMaster
2427836   +          +     0.38226706522151 * Marital_StatusDivorced
2427837   +          +     0.96666958079914 * Marital_StatusMarried
2427838   +          +    -0.07771259761555 * Marital_StatusSingle
2427839   +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle + 
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676 
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 * 
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 * 
Marital_StatusTogether ;
2427840   +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
2427841   +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
2427842   +        EducationGraduation  +     0.05813076059598 * EducationMaster
2427843   +          +    -0.38325393606947 * Marital_StatusDivorced
2427844   +          +    -1.43303056163299 * Marital_StatusMarried
2427845   +          +     0.11571941757387 * Marital_StatusSingle
2427846   +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle + 
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598 
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 * 
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 * 
Marital_StatusTogether ;
2427847   +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
2427848   +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
2427849   +        EducationGraduation  +     0.90837023676142 * EducationMaster
2427850   +          +    -0.36491799765765 * Marital_StatusDivorced
2427851   +          +     0.14142786767503 * Marital_StatusMarried
2427852   +          +     0.22643970468805 * Marital_StatusSingle
2427853   +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454 
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster 
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried + 
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
2427854   +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
2427855   +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
2427856   +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
2427857   +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
2427858   +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
2427859   +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
2427860   +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
2427861   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
2427862   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , 
H1x3_7 );
2427863   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2427864   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2427865   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2427866   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2427867   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2427868   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2427869   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2427870   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2427871   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2427872   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2427873   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2427874   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2427875   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2427876   +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
2427877   +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
2427878   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2427879   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2427880   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2427881   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2427882   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2427883   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2427884   +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
2427885   +END;
MPRINT(EM_DIAGRAM):   END;
2427886   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2427887   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2427888   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2427889   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2427890   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2427891   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2427892   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2427893   +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
2427894   +END;
MPRINT(EM_DIAGRAM):   END;
2427895   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2427896   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2427897   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2427898   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2427899   +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
2427900   +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
2427901   +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
2427902   +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 + 
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 + 
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
2427903   +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
2427904   +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
2427905   +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
2427906   +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 + 
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 + 
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
2427907   +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
2427908   +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
2427909   +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
2427910   +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 + 
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 + 
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
2427911   +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
2427912   +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
2427913   +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
2427914   +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 + 
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 + 
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
2427915   +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
2427916   +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
2427917   +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
2427918   +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 + 
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 + 
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
2427919   +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
2427920   +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
2427921   +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
2427922   +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 + 
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 + 
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
2427923   +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
2427924   +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
2427925   +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
2427926   +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 * 
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 + 
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
2427927   +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
2427928   +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
2427929   +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
2427930   +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2 
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 + 
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
2427931   +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
2427932   +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
2427933   +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
2427934   +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2 
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 + 
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
2427935   +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
2427936   +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
2427937   +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
2427938   +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2 
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 + 
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
2427939   +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
2427940   +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
2427941   +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
2427942   +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 * 
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 + 
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
2427943   +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
2427944   +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
2427945   +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
2427946   +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2 
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 + 
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
2427947   +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
2427948   +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
2427949   +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
2427950   +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 + 
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 + 
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
2427951   +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
2427952   +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
2427953   +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
2427954   +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2 
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 + 
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
2427955   +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
2427956   +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
2427957   +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
2427958   +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2 
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 + 
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
2427959   +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
2427960   +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
2427961   +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
2427962   +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2 
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 + 
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
2427963   +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
2427964   +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
2427965   +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
2427966   +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2 
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 + 
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
2427967   +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
2427968   +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
2427969   +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
2427970   +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2 
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 + 
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
2427971   +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
2427972   +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
2427973   +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
2427974   +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
2427975   +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
2427976   +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
2427977   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
2427978   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
2427979   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
2427980   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2427981   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
2427982   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
2427983   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
2427984   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
2427985   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
2427986   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
2427987   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
2427988   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
2427989   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
2427990   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
2427991   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
2427992   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
2427993   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
2427994   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
2427995   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
2427996   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
2427997   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
2427998   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
2427999   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
2428000   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
2428001   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
2428002   +END;
MPRINT(EM_DIAGRAM):   END;
2428003   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2428004   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2428005   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2428006   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2428007   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2428008   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2428009   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2428010   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
2428011   +END;
MPRINT(EM_DIAGRAM):   END;
2428012   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2428013   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2428014   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2428015   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2428016   +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
2428017   +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
2428018   +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
2428019   +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 + 
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 + 
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
2428020   +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
2428021   +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
2428022   +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
2428023   +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 + 
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 + 
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
2428024   +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
2428025   +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
2428026   +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
2428027   +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 + 
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 + 
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
2428028   +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
2428029   +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
2428030   +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
2428031   +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 + 
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 + 
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
2428032   +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
2428033   +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
2428034   +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
2428035   +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 + 
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 + 
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
2428036   +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
2428037   +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
2428038   +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
2428039   +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 + 
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 + 
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
2428040   +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
2428041   +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
2428042   +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
2428043   +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 * 
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 + 
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
2428044   +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
2428045   +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
2428046   +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
2428047   +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2 
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 + 
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
2428048   +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
2428049   +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
2428050   +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
2428051   +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2 
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 + 
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
2428052   +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
2428053   +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
2428054   +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
2428055   +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2 
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 + 
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
2428056   +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
2428057   +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
2428058   +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
2428059   +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2 
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 + 
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
2428060   +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
2428061   +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
2428062   +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
2428063   +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2 
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 + 
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
2428064   +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
2428065   +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
2428066   +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
2428067   +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 + 
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 + 
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
2428068   +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
2428069   +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
2428070   +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
2428071   +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 * 
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 + 
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
2428072   +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
2428073   +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
2428074   +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
2428075   +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 * 
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 + 
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
2428076   +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
2428077   +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
2428078   +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
2428079   +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2 
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 + 
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
2428080   +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
2428081   +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
2428082   +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
2428083   +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 * 
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 + 
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
2428084   +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
2428085   +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
2428086   +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
2428087   +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2 
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 + 
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
2428088   +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
2428089   +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
2428090   +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
2428091   +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
2428092   +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
2428093   +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
2428094   +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
2428095   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
2428096   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , 
H2x2_7 );
2428097   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2428098   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
2428099   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
2428100   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
2428101   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
2428102   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
2428103   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
2428104   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
2428105   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
2428106   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
2428107   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
2428108   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
2428109   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
2428110   +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
2428111   +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
2428112   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
2428113   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
2428114   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
2428115   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
2428116   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
2428117   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
2428118   +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
2428119   +END;
MPRINT(EM_DIAGRAM):   END;
2428120   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2428121   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2428122   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2428123   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2428124   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2428125   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2428126   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2428127   +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
2428128   +END;
MPRINT(EM_DIAGRAM):   END;
2428129   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2428130   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2428131   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2428132   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2428133   +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
2428134   +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
2428135   +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
2428136   +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 + 
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 + 
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
2428137   +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
2428138   +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
2428139   +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
2428140   +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 + 
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 + 
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
2428141   +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
2428142   +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
2428143   +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
2428144   +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 + 
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 + 
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
2428145   +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
2428146   +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
2428147   +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
2428148   +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 + 
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 + 
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
2428149   +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
2428150   +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
2428151   +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
2428152   +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 + 
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 + 
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
2428153   +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
2428154   +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
2428155   +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
2428156   +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 + 
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 + 
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
2428157   +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
2428158   +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
2428159   +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
2428160   +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 + 
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 + 
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
2428161   +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
2428162   +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
2428163   +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
2428164   +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2 
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 + 
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
2428165   +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
2428166   +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
2428167   +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
2428168   +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2 
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 + 
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
2428169   +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
2428170   +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
2428171   +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
2428172   +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2 
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 + 
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
2428173   +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
2428174   +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
2428175   +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
2428176   +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2 
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 + 
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
2428177   +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
2428178   +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
2428179   +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
2428180   +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 * 
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 + 
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
2428181   +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
2428182   +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
2428183   +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
2428184   +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2 
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 + 
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
2428185   +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
2428186   +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
2428187   +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
2428188   +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2 
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 + 
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
2428189   +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
2428190   +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
2428191   +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
2428192   +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
2428193   +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
2428194   +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
2428195   +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
2428196   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2428197   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2428198   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2428199   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2428200   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2428201   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2428202   +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
2428203   +END;
MPRINT(EM_DIAGRAM):   END;
2428204   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2428205   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2428206   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2428207   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2428208   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2428209   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2428210   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2428211   +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
2428212   +END;
MPRINT(EM_DIAGRAM):   END;
2428213   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2428214   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2428215   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2428216   +
2428217   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2428218   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2428219   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2428220   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2428221   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2428222   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2428223   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2428224   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2428225   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2428226   +end;
MPRINT(EM_DIAGRAM):   end;
2428227   +else do;
MPRINT(EM_DIAGRAM):   else do;
2428228   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2428229   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2428230   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2428231   +   end;
MPRINT(EM_DIAGRAM):   end;
2428232   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2428233   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2428234   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2428235   +   end;
MPRINT(EM_DIAGRAM):   end;
2428236   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2428237   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2428238   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2428239   +   end;
MPRINT(EM_DIAGRAM):   end;
2428240   +end;
MPRINT(EM_DIAGRAM):   end;
2428241   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2428242   +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
2428243   +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
2428244   +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
2428245   +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 + 
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 + 
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
2428246   +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
2428247   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2428248   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2428249   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2428250   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2428251   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2428252   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2428253   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2428254   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2428255   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2428256   +END;
MPRINT(EM_DIAGRAM):   END;
2428257   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2428258   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2428259   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2428260   +END;
MPRINT(EM_DIAGRAM):   END;
2428261   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2428262   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2428263   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2428264   +END;
MPRINT(EM_DIAGRAM):   END;
2428265   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2428266   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2428267   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2428268   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2428269   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2428270   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2428271   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2428272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2428273   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2428274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2428275   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2428276   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2428277   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2428278   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2428279   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2428280   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2428281   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2428282   +END;
MPRINT(EM_DIAGRAM):   END;
2428283   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2428284   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2428285   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2428286   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2428287   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2428288   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2428289   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2428290   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2428291   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2428292   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2428293   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2428294   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2428295   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2428296   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2428297   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2428298   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2428299   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2428300   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2428301   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2428302   +* Ensmbl45: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 4 of 5;
2428303   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2428304   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2428305   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2428306   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2428307   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2428308   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2428309   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2428310   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2428311   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2428312   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2428313   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2428314   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2428315   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2428316   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2428317   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2428318   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2428319   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2428320   +LENGTH _WARN_ $4
2428321   +      F_DepVar  $ 12
2428322   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2428323   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2428324   +
2428325   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2428326   +
2428327   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2428328   +
2428329   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2428330   +
2428331   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2428332   +
2428333   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2428334   +
2428335   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2428336   +
2428337   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2428338   +
2428339   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2428340   +
2428341   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2428342   +
2428343   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2428344   +
2428345   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2428346   +
2428347   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2428348   +
2428349   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2428350   +
2428351   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2428352   +
2428353   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2428354   +
2428355   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2428356   +
2428357   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2428358   +
2428359   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2428360   +
2428361   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2428362   +
2428363   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2428364   +
2428365   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2428366   +
2428367   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2428368   +
2428369   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2428370   +
2428371   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2428372   +
2428373   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2428374   +
2428375   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2428376   +
2428377   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2428378   +
2428379   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2428380   +
2428381   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2428382   +
2428383   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2428384   +
2428385   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2428386   +
2428387   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2428388   +
2428389   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2428390   +
2428391   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2428392   +
2428393   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
The SAS System

MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2428394   +
2428395   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2428396   +
2428397   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2428398   +
2428399   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2428400   +
2428401   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2428402   +
2428403   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2428404   +
2428405   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2428406   +
2428407   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2428408   +
2428409   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2428410   +
2428411   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2428412   +
2428413   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2428414   +
2428415   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2428416   +
2428417   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2428418   +
2428419   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2428420   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2428421   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2428422   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2428423   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2428424   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2428425   +end;
MPRINT(EM_DIAGRAM):   end;
2428426   +else do;
MPRINT(EM_DIAGRAM):   else do;
2428427   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2428428   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2428429   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2428430   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2428431   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2428432   +   end;
MPRINT(EM_DIAGRAM):   end;
2428433   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2428434   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2428435   +   end;
MPRINT(EM_DIAGRAM):   end;
2428436   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2428437   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2428438   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2428439   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2428440   +   end;
MPRINT(EM_DIAGRAM):   end;
2428441   +end;
MPRINT(EM_DIAGRAM):   end;
2428442   +
2428443   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2428444   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2428445   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2428446   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2428447   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2428448   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2428449   +end;
MPRINT(EM_DIAGRAM):   end;
2428450   +else do;
MPRINT(EM_DIAGRAM):   else do;
2428451   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2428452   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2428453   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2428454   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2428455   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2428456   +   end;
MPRINT(EM_DIAGRAM):   end;
2428457   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2428458   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2428459   +   end;
MPRINT(EM_DIAGRAM):   end;
2428460   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2428461   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2428462   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2428463   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2428464   +   end;
MPRINT(EM_DIAGRAM):   end;
2428465   +end;
MPRINT(EM_DIAGRAM):   end;
2428466   +
2428467   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2428468   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2428469   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2428470   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2428471   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2428472   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2428473   +end;
MPRINT(EM_DIAGRAM):   end;
2428474   +else do;
MPRINT(EM_DIAGRAM):   else do;
2428475   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2428476   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2428477   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2428478   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2428479   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2428480   +   end;
MPRINT(EM_DIAGRAM):   end;
2428481   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2428482   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2428483   +   end;
MPRINT(EM_DIAGRAM):   end;
2428484   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2428485   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2428486   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2428487   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2428488   +   end;
MPRINT(EM_DIAGRAM):   end;
2428489   +end;
MPRINT(EM_DIAGRAM):   end;
2428490   +
2428491   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2428492   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2428493   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2428494   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2428495   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2428496   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2428497   +end;
MPRINT(EM_DIAGRAM):   end;
2428498   +else do;
MPRINT(EM_DIAGRAM):   else do;
2428499   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2428500   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2428501   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2428502   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2428503   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2428504   +   end;
MPRINT(EM_DIAGRAM):   end;
2428505   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2428506   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2428507   +   end;
MPRINT(EM_DIAGRAM):   end;
2428508   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2428509   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2428510   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2428511   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2428512   +   end;
MPRINT(EM_DIAGRAM):   end;
2428513   +end;
MPRINT(EM_DIAGRAM):   end;
2428514   +
2428515   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2428516   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2428517   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2428518   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2428519   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2428520   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2428521   +end;
MPRINT(EM_DIAGRAM):   end;
2428522   +else do;
MPRINT(EM_DIAGRAM):   else do;
2428523   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2428524   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2428525   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2428526   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2428527   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2428528   +   end;
MPRINT(EM_DIAGRAM):   end;
2428529   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2428530   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2428531   +   end;
MPRINT(EM_DIAGRAM):   end;
2428532   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2428533   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2428534   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2428535   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2428536   +   end;
MPRINT(EM_DIAGRAM):   end;
2428537   +end;
MPRINT(EM_DIAGRAM):   end;
2428538   +
2428539   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2428540   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2428541   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2428542   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2428543   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2428544   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2428545   +end;
MPRINT(EM_DIAGRAM):   end;
2428546   +else do;
MPRINT(EM_DIAGRAM):   else do;
2428547   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2428548   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2428549   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2428550   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2428551   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2428552   +   end;
MPRINT(EM_DIAGRAM):   end;
2428553   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2428554   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2428555   +   end;
MPRINT(EM_DIAGRAM):   end;
2428556   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2428557   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2428558   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2428559   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2428560   +   end;
MPRINT(EM_DIAGRAM):   end;
2428561   +end;
MPRINT(EM_DIAGRAM):   end;
2428562   +
2428563   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2428564   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2428565   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2428566   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2428567   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2428568   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2428569   +end;
MPRINT(EM_DIAGRAM):   end;
2428570   +else do;
MPRINT(EM_DIAGRAM):   else do;
2428571   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2428572   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2428573   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2428574   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2428575   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2428576   +   end;
MPRINT(EM_DIAGRAM):   end;
2428577   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2428578   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2428579   +   end;
MPRINT(EM_DIAGRAM):   end;
2428580   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2428581   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2428582   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2428583   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2428584   +   end;
MPRINT(EM_DIAGRAM):   end;
2428585   +end;
MPRINT(EM_DIAGRAM):   end;
2428586   +
2428587   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2428588   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2428589   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2428590   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2428591   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2428592   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2428593   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2428594   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2428595   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2428596   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2428597   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2428598   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2428599   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2428600   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2428601   +end;
MPRINT(EM_DIAGRAM):   end;
2428602   +else do;
MPRINT(EM_DIAGRAM):   else do;
2428603   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2428604   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2428605   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2428606   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2428607   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2428608   +   end;
MPRINT(EM_DIAGRAM):   end;
2428609   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2428610   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2428611   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2428612   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2428613   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2428614   +   end;
MPRINT(EM_DIAGRAM):   end;
2428615   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2428616   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2428617   +   end;
MPRINT(EM_DIAGRAM):   end;
2428618   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2428619   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2428620   +   end;
MPRINT(EM_DIAGRAM):   end;
2428621   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2428622   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2428623   +   end;
MPRINT(EM_DIAGRAM):   end;
2428624   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2428625   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2428626   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2428627   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2428628   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2428629   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2428630   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2428631   +   end;
MPRINT(EM_DIAGRAM):   end;
2428632   +end;
MPRINT(EM_DIAGRAM):   end;
2428633   +
2428634   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2428635   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2428636   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2428637   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2428638   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2428639   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2428640   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2428641   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2428642   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2428643   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2428644   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2428645   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2428646   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2428647   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2428648   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2428649   +end;
MPRINT(EM_DIAGRAM):   end;
2428650   +else do;
MPRINT(EM_DIAGRAM):   else do;
2428651   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2428652   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2428653   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2428654   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2428655   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2428656   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2428657   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2428658   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2428659   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2428660   +         end;
MPRINT(EM_DIAGRAM):   end;
2428661   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2428662   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2428663   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2428664   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2428665   +            end;
MPRINT(EM_DIAGRAM):   end;
2428666   +         end;
MPRINT(EM_DIAGRAM):   end;
2428667   +      end;
MPRINT(EM_DIAGRAM):   end;
2428668   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2428669   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2428670   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2428671   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2428672   +         end;
MPRINT(EM_DIAGRAM):   end;
2428673   +      end;
MPRINT(EM_DIAGRAM):   end;
2428674   +   end;
MPRINT(EM_DIAGRAM):   end;
2428675   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2428676   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2428677   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2428678   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2428679   +      end;
MPRINT(EM_DIAGRAM):   end;
2428680   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2428681   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2428682   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2428683   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2428684   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2428685   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2428686   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2428687   +         end;
MPRINT(EM_DIAGRAM):   end;
2428688   +      end;
MPRINT(EM_DIAGRAM):   end;
2428689   +   end;
MPRINT(EM_DIAGRAM):   end;
2428690   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2428691   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2428692   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2428693   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2428694   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2428695   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2428696   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2428697   +   end;
MPRINT(EM_DIAGRAM):   end;
2428698   +end;
MPRINT(EM_DIAGRAM):   end;
2428699   +
2428700   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2428701   +*** Checking missing input Interval
2428702   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2428703   +
2428704   +IF NMISS(
2428705   +   AcceptedCmpTotal ,
2428706   +   Age ,
2428707   +   Frq ,
2428708   +   Income ,
2428709   +   Kidhome ,
2428710   +   Mnt ,
2428711   +   MntFishProducts ,
2428712   +   MntFruits ,
2428713   +   MntGoldProds ,
2428714   +   MntMeatProducts ,
2428715   +   MntSweetProducts ,
2428716   +   MntWines ,
2428717   +   MonthsAsCustomer ,
2428718   +   NumCatalogPurchases ,
2428719   +   NumDealsPurchases ,
2428720   +   NumDistPurchases ,
2428721   +   NumStorePurchases ,
2428722   +   NumWebPurchases ,
2428723   +   NumWebVisitsMonth ,
2428724   +   RFMstat ,
2428725   +   RMntFrq ,
2428726   +   Recency ,
2428727   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2428728   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2428729   +
2428730   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2428731   +END;
MPRINT(EM_DIAGRAM):   END;
2428732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2428733   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2428734   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2428735   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2428736   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2428737   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2428738   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2428739   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2428740   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2428741   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2428742   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2428743   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2428744   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2428745   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2428746   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2428747   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2428748   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2428749   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2428750   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2428751   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2428752   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2428753   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2428754   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2428755   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2428756   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2428757   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2428758   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2428759   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2428760   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2428761   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2428762   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2428763   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2428764   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2428765   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2428766   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2428767   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2428768   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2428769   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2428770   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2428771   +END;
MPRINT(EM_DIAGRAM):   END;
2428772   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2428773   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2428774   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2428775   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2428776   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2428777   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2428778   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2428779   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2428780   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2428781   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2428782   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2428783   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2428784   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2428785   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2428786   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2428787   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2428788   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2428789   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2428790   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2428791   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2428792   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2428793   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2428794   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2428795   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2428796   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2428797   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2428798   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2428799   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2428800   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2428801   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2428802   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2428803   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2428804   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2428805   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2428806   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2428807   +   ELSE S_NumCatalogPurchases
2428808   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2428809   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2428810   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2428811   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2428812   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2428813   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2428814   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2428815   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2428816   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2428817   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2428818   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2428819   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2428820   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2428821   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2428822   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2428823   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2428824   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2428825   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2428826   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2428827   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2428828   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2428829   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2428830   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2428831   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2428832   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2428833   +END;
MPRINT(EM_DIAGRAM):   END;
2428834   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2428835   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2428836   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2428837   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2428838   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2428839   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2428840   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2428841   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2428842   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2428843   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2428844   +   H1x1_1  =     0.27051750628107 * S_AcceptedCmpTotal
2428845   +          +    -0.01552488999587 * S_Age  +    -0.19918933236131 * S_Frq
2428846   +          +    -0.18053367989037 * S_Income  +     0.17934470816975 *
2428847   +        S_Kidhome  +    -0.27914859130186 * S_Mnt  +    -0.05331142159606 *
2428848   +        S_MntFishProducts  +    -0.03730503814111 * S_MntFruits
2428849   +          +     0.01217897476566 * S_MntGoldProds  +       0.241005967683 *
2428850   +        S_MntMeatProducts  +    -0.02873172523867 * S_MntSweetProducts
2428851   +          +    -0.35773732926132 * S_MntWines  +    -0.00800625524539 *
2428852   +        S_MonthsAsCustomer  +     0.14253720708201 * S_NumCatalogPurchases
2428853   +          +     0.09634439105648 * S_NumDealsPurchases
2428854   +          +     -0.2727389064287 * S_NumDistPurchases
2428855   +          +    -0.14179871978162 * S_NumStorePurchases
2428856   +          +     0.11008049559527 * S_NumWebPurchases
2428857   +          +    -0.16791463027749 * S_NumWebVisitsMonth
2428858   +          +     0.12827091331546 * S_RFMstat  +    -0.05819422771336 *
2428859   +        S_RMntFrq  +     0.17192522504917 * S_Recency
2428860   +          +     0.13379709932247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27051750628107 * S_AcceptedCmpTotal + -0.01552488999587 * 
S_Age + -0.19918933236131 * S_Frq + -0.18053367989037 * S_Income + 0.17934470816975 * 
S_Kidhome + -0.27914859130186 * S_Mnt + -0.05331142159606 * S_MntFishProducts + 
-0.03730503814111 * S_MntFruits + 0.01217897476566 * S_MntGoldProds + 0.241005967683 * 
S_MntMeatProducts + -0.02873172523867 * S_MntSweetProducts + -0.35773732926132 * S_MntWines + 
-0.00800625524539 * S_MonthsAsCustomer + 0.14253720708201 * S_NumCatalogPurchases + 
0.09634439105648 * S_NumDealsPurchases + -0.2727389064287 * S_NumDistPurchases + 
-0.14179871978162 * S_NumStorePurchases + 0.11008049559527 * S_NumWebPurchases + 
-0.16791463027749 * S_NumWebVisitsMonth + 0.12827091331546 * S_RFMstat + -0.05819422771336 * 
S_RMntFrq + 0.17192522504917 * S_Recency + 0.13379709932247 * S_Teenhome ;
2428861   +   H1x1_2  =      0.2625003002792 * S_AcceptedCmpTotal
2428862   +          +    -0.00409648963127 * S_Age  +    -0.08422560024107 * S_Frq
2428863   +          +      0.1678148652095 * S_Income  +      -0.122580580609 *
2428864   +        S_Kidhome  +    -0.41368311141801 * S_Mnt  +     -0.0649787838725 *
2428865   +        S_MntFishProducts  +    -0.06363287766971 * S_MntFruits
2428866   +          +     0.00810850196464 * S_MntGoldProds  +      0.2984971941271 *
2428867   +        S_MntMeatProducts  +     -0.0651075315757 * S_MntSweetProducts
2428868   +          +    -0.42717799596572 * S_MntWines  +    -0.00945771129633 *
2428869   +        S_MonthsAsCustomer  +     0.33346839008681 * S_NumCatalogPurchases
2428870   +          +     0.15835936877168 * S_NumDealsPurchases
2428871   +          +     0.04229992769587 * S_NumDistPurchases
2428872   +          +    -0.04051362547639 * S_NumStorePurchases
2428873   +          +    -0.01791546488406 * S_NumWebPurchases
2428874   +          +     0.28833008597045 * S_NumWebVisitsMonth
2428875   +          +     0.08007709098478 * S_RFMstat  +     0.37677948418886 *
2428876   +        S_RMntFrq  +    -0.32542265112765 * S_Recency
2428877   +          +    -0.10763248273834 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2625003002792 * S_AcceptedCmpTotal + -0.00409648963127 * 
S_Age + -0.08422560024107 * S_Frq + 0.1678148652095 * S_Income + -0.122580580609 * S_Kidhome + 
-0.41368311141801 * S_Mnt + -0.0649787838725 * S_MntFishProducts + -0.06363287766971 * 
S_MntFruits + 0.00810850196464 * S_MntGoldProds + 0.2984971941271 * S_MntMeatProducts + 
-0.0651075315757 * S_MntSweetProducts + -0.42717799596572 * S_MntWines + -0.00945771129633 * 
S_MonthsAsCustomer + 0.33346839008681 * S_NumCatalogPurchases + 0.15835936877168 * 
S_NumDealsPurchases + 0.04229992769587 * S_NumDistPurchases + -0.04051362547639 * 
S_NumStorePurchases + -0.01791546488406 * S_NumWebPurchases + 0.28833008597045 * 
S_NumWebVisitsMonth + 0.08007709098478 * S_RFMstat + 0.37677948418886 * S_RMntFrq + 
-0.32542265112765 * S_Recency + -0.10763248273834 * S_Teenhome ;
2428878   +   H1x1_1  = H1x1_1  +     0.17927888078386 * AcceptedCmp10
2428879   +          +       0.309097592234 * AcceptedCmp20  +     0.30005706470617 *
2428880   +        AcceptedCmp30  +     0.30534843193785 * AcceptedCmp40
2428881   +          +     0.19575142296602 * AcceptedCmp50  +    -0.26930325741881 *
2428882   +        Complain0  +    -0.07193220591551 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.17927888078386 * AcceptedCmp10 + 0.309097592234 * 
AcceptedCmp20 + 0.30005706470617 * AcceptedCmp30 + 0.30534843193785 * AcceptedCmp40 + 
0.19575142296602 * AcceptedCmp50 + -0.26930325741881 * Complain0 + -0.07193220591551 * 
HigherEducationBinary0 ;
2428883   +   H1x1_2  = H1x1_2  +     0.01282806481889 * AcceptedCmp10
2428884   +          +     0.01542710847454 * AcceptedCmp20  +     0.03576476827309 *
2428885   +        AcceptedCmp30  +     0.04230610697529 * AcceptedCmp40
2428886   +          +     0.03405078302469 * AcceptedCmp50  +     0.13002166919554 *
2428887   +        Complain0  +    -0.08203696285033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.01282806481889 * AcceptedCmp10 + 0.01542710847454 * 
AcceptedCmp20 + 0.03576476827309 * AcceptedCmp30 + 0.04230610697529 * AcceptedCmp40 + 
0.03405078302469 * AcceptedCmp50 + 0.13002166919554 * Complain0 + -0.08203696285033 * 
HigherEducationBinary0 ;
2428888   +   H1x1_1  = H1x1_1  +    -0.04471063478028 * Education2n_Cycle
2428889   +          +     0.15571809437849 * EducationBasic  +    -0.00113978624206 *
2428890   +        EducationGraduation  +     0.00750750981266 * EducationMaster
2428891   +          +     -0.0504367274898 * Marital_StatusDivorced
2428892   +          +     0.28345714390306 * Marital_StatusMarried
2428893   +          +     -0.2012923780435 * Marital_StatusSingle
2428894   +          +     0.20022167903492 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04471063478028 * Education2n_Cycle + 
0.15571809437849 * EducationBasic + -0.00113978624206 * EducationGraduation + 0.00750750981266 
* EducationMaster + -0.0504367274898 * Marital_StatusDivorced + 0.28345714390306 * 
Marital_StatusMarried + -0.2012923780435 * Marital_StatusSingle + 0.20022167903492 * 
Marital_StatusTogether ;
2428895   +   H1x1_2  = H1x1_2  +     0.12691361812265 * Education2n_Cycle
2428896   +          +       0.003205191831 * EducationBasic  +    -0.04323354449955 *
2428897   +        EducationGraduation  +    -0.06699429239126 * EducationMaster
2428898   +          +     0.06828937261262 * Marital_StatusDivorced
2428899   +          +     -0.1520862543536 * Marital_StatusMarried
2428900   +          +      0.1392808464716 * Marital_StatusSingle
2428901   +          +    -0.12406922875482 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12691361812265 * Education2n_Cycle + 0.003205191831 
* EducationBasic + -0.04323354449955 * EducationGraduation + -0.06699429239126 * 
EducationMaster + 0.06828937261262 * Marital_StatusDivorced + -0.1520862543536 * 
Marital_StatusMarried + 0.1392808464716 * Marital_StatusSingle + -0.12406922875482 * 
Marital_StatusTogether ;
2428902   +   H1x1_1  =     0.89722634972069 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.89722634972069 + H1x1_1 ;
2428903   +   H1x1_2  =     -0.5979471913364 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5979471913364 + H1x1_2 ;
2428904   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2428905   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2428906   +END;
MPRINT(EM_DIAGRAM):   END;
2428907   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2428908   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2428909   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2428910   +END;
MPRINT(EM_DIAGRAM):   END;
2428911   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2428912   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2428913   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2428914   +
2428915   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2428916   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2428917   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2428918   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2428919   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2428920   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2428921   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2428922   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2428923   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2428924   +end;
MPRINT(EM_DIAGRAM):   end;
2428925   +else do;
MPRINT(EM_DIAGRAM):   else do;
2428926   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2428927   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2428928   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2428929   +   end;
MPRINT(EM_DIAGRAM):   end;
2428930   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2428931   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2428932   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2428933   +   end;
MPRINT(EM_DIAGRAM):   end;
2428934   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2428935   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2428936   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2428937   +   end;
MPRINT(EM_DIAGRAM):   end;
2428938   +end;
MPRINT(EM_DIAGRAM):   end;
2428939   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2428940   +   P_DepVar1  =     -11.533020189097 * H1x1_1  +     17.2320065402955 * H1x1_2
2428941   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.533020189097 * H1x1_1 + 17.2320065402955 * H1x1_2 ;
2428942   +   P_DepVar1  =     2.37722840752042 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.37722840752042 + P_DepVar1 ;
2428943   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2428944   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2428945   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2428946   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2428947   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2428948   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2428949   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2428950   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2428951   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2428952   +END;
MPRINT(EM_DIAGRAM):   END;
2428953   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2428954   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2428955   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2428956   +END;
MPRINT(EM_DIAGRAM):   END;
2428957   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2428958   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2428959   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2428960   +END;
MPRINT(EM_DIAGRAM):   END;
2428961   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2428962   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2428963   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2428964   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2428965   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2428966   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2428967   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2428968   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2428969   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2428970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2428971   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2428972   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2428973   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2428974   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2428975   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2428976   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2428977   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2428978   +END;
MPRINT(EM_DIAGRAM):   END;
2428979   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2428980   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2428981   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2428982   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2428983   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2428984   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2428985   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2428986   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2428987   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2428988   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2428989   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2428990   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2428991   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2428992   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2428993   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2428994   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2428995   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2428996   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2428997   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2428998   +* Ensmbl45: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 5 of 5;
2428999   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2429000   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2429001   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2429002   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2429003   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2429004   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2429005   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2429006   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2429007   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2429008   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2429009   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2429010   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2429011   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2429012   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2429013   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2429014   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2429015   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2429016   +LENGTH _WARN_ $4
2429017   +      F_DepVar  $ 12
2429018   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2429019   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2429020   +
2429021   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2429022   +
2429023   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2429024   +
2429025   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2429026   +
2429027   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2429028   +
2429029   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2429030   +
2429031   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2429032   +
2429033   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2429034   +
2429035   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2429036   +
2429037   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2429038   +
2429039   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2429040   +
2429041   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2429042   +
2429043   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2429044   +
2429045   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2429046   +
2429047   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2429048   +
2429049   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2429050   +
2429051   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2429052   +
2429053   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2429054   +
2429055   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2429056   +
2429057   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2429058   +
2429059   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2429060   +
2429061   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2429062   +
2429063   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2429064   +
2429065   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2429066   +
2429067   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2429068   +
2429069   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2429070   +
2429071   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2429072   +
2429073   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2429074   +
2429075   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2429076   +
2429077   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2429078   +
2429079   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2429080   +
2429081   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2429082   +
2429083   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2429084   +
2429085   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2429086   +
2429087   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2429088   +
2429089   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2429090   +
2429091   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2429092   +
2429093   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2429094   +
2429095   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2429096   +
2429097   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2429098   +
2429099   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2429100   +
2429101   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2429102   +
2429103   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2429104   +
2429105   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2429106   +
2429107   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2429108   +
2429109   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2429110   +
2429111   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2429112   +
2429113   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2429114   +
2429115   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2429116   +
2429117   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2429118   +
2429119   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2429120   +
2429121   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2429122   +
2429123   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2429124   +
2429125   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2429126   +
2429127   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2429128   +
2429129   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2429130   +
2429131   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2429132   +
2429133   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2429134   +
2429135   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2429136   +
2429137   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2429138   +
2429139   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2429140   +
2429141   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2429142   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2429143   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2429144   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2429145   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2429146   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2429147   +end;
MPRINT(EM_DIAGRAM):   end;
2429148   +else do;
MPRINT(EM_DIAGRAM):   else do;
2429149   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2429150   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2429151   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2429152   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2429153   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2429154   +   end;
MPRINT(EM_DIAGRAM):   end;
2429155   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2429156   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2429157   +   end;
MPRINT(EM_DIAGRAM):   end;
2429158   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2429159   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2429160   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2429161   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2429162   +   end;
MPRINT(EM_DIAGRAM):   end;
2429163   +end;
MPRINT(EM_DIAGRAM):   end;
2429164   +
2429165   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2429166   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2429167   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2429168   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2429169   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2429170   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2429171   +end;
MPRINT(EM_DIAGRAM):   end;
2429172   +else do;
MPRINT(EM_DIAGRAM):   else do;
2429173   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2429174   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2429175   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2429176   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2429177   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2429178   +   end;
MPRINT(EM_DIAGRAM):   end;
2429179   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2429180   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2429181   +   end;
MPRINT(EM_DIAGRAM):   end;
2429182   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2429183   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2429184   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2429185   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2429186   +   end;
MPRINT(EM_DIAGRAM):   end;
2429187   +end;
MPRINT(EM_DIAGRAM):   end;
2429188   +
2429189   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2429190   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2429191   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2429192   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2429193   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2429194   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2429195   +end;
MPRINT(EM_DIAGRAM):   end;
2429196   +else do;
MPRINT(EM_DIAGRAM):   else do;
2429197   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2429198   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2429199   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2429200   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2429201   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2429202   +   end;
MPRINT(EM_DIAGRAM):   end;
2429203   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2429204   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2429205   +   end;
MPRINT(EM_DIAGRAM):   end;
2429206   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2429207   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2429208   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2429209   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2429210   +   end;
MPRINT(EM_DIAGRAM):   end;
2429211   +end;
MPRINT(EM_DIAGRAM):   end;
2429212   +
2429213   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2429214   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2429215   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2429216   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2429217   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2429218   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2429219   +end;
MPRINT(EM_DIAGRAM):   end;
2429220   +else do;
MPRINT(EM_DIAGRAM):   else do;
2429221   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2429222   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2429223   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2429224   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2429225   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2429226   +   end;
MPRINT(EM_DIAGRAM):   end;
2429227   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2429228   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2429229   +   end;
MPRINT(EM_DIAGRAM):   end;
2429230   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2429231   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2429232   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2429233   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2429234   +   end;
MPRINT(EM_DIAGRAM):   end;
2429235   +end;
MPRINT(EM_DIAGRAM):   end;
2429236   +
2429237   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2429238   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2429239   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2429240   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2429241   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2429242   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2429243   +end;
MPRINT(EM_DIAGRAM):   end;
2429244   +else do;
MPRINT(EM_DIAGRAM):   else do;
2429245   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2429246   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2429247   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2429248   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2429249   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2429250   +   end;
MPRINT(EM_DIAGRAM):   end;
2429251   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2429252   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2429253   +   end;
MPRINT(EM_DIAGRAM):   end;
2429254   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2429255   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2429256   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2429257   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2429258   +   end;
MPRINT(EM_DIAGRAM):   end;
2429259   +end;
MPRINT(EM_DIAGRAM):   end;
2429260   +
2429261   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2429262   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2429263   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2429264   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2429265   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2429266   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2429267   +end;
MPRINT(EM_DIAGRAM):   end;
2429268   +else do;
MPRINT(EM_DIAGRAM):   else do;
2429269   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2429270   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2429271   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2429272   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2429273   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2429274   +   end;
MPRINT(EM_DIAGRAM):   end;
2429275   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2429276   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2429277   +   end;
MPRINT(EM_DIAGRAM):   end;
2429278   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2429279   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2429280   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2429281   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2429282   +   end;
MPRINT(EM_DIAGRAM):   end;
2429283   +end;
MPRINT(EM_DIAGRAM):   end;
2429284   +
2429285   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2429286   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2429287   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2429288   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2429289   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2429290   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2429291   +end;
MPRINT(EM_DIAGRAM):   end;
2429292   +else do;
MPRINT(EM_DIAGRAM):   else do;
2429293   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2429294   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2429295   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2429296   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2429297   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2429298   +   end;
MPRINT(EM_DIAGRAM):   end;
2429299   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2429300   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2429301   +   end;
MPRINT(EM_DIAGRAM):   end;
2429302   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2429303   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2429304   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2429305   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2429306   +   end;
MPRINT(EM_DIAGRAM):   end;
2429307   +end;
MPRINT(EM_DIAGRAM):   end;
2429308   +
2429309   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2429310   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2429311   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2429312   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2429313   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2429314   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2429315   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2429316   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2429317   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2429318   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2429319   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2429320   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2429321   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2429322   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2429323   +end;
MPRINT(EM_DIAGRAM):   end;
2429324   +else do;
MPRINT(EM_DIAGRAM):   else do;
2429325   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2429326   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2429327   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2429328   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2429329   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2429330   +   end;
MPRINT(EM_DIAGRAM):   end;
2429331   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2429332   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2429333   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2429334   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2429335   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2429336   +   end;
MPRINT(EM_DIAGRAM):   end;
2429337   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2429338   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2429339   +   end;
MPRINT(EM_DIAGRAM):   end;
2429340   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2429341   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2429342   +   end;
MPRINT(EM_DIAGRAM):   end;
2429343   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2429344   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2429345   +   end;
MPRINT(EM_DIAGRAM):   end;
2429346   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2429347   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2429348   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2429349   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2429350   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2429351   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2429352   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2429353   +   end;
MPRINT(EM_DIAGRAM):   end;
2429354   +end;
MPRINT(EM_DIAGRAM):   end;
2429355   +
2429356   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2429357   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2429358   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2429359   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2429360   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2429361   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2429362   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2429363   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2429364   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2429365   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2429366   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2429367   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2429368   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2429369   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2429370   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2429371   +end;
MPRINT(EM_DIAGRAM):   end;
2429372   +else do;
MPRINT(EM_DIAGRAM):   else do;
2429373   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2429374   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2429375   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2429376   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2429377   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2429378   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2429379   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2429380   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2429381   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2429382   +         end;
MPRINT(EM_DIAGRAM):   end;
2429383   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2429384   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2429385   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2429386   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2429387   +            end;
MPRINT(EM_DIAGRAM):   end;
2429388   +         end;
MPRINT(EM_DIAGRAM):   end;
2429389   +      end;
MPRINT(EM_DIAGRAM):   end;
2429390   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2429391   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2429392   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2429393   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2429394   +         end;
MPRINT(EM_DIAGRAM):   end;
2429395   +      end;
MPRINT(EM_DIAGRAM):   end;
2429396   +   end;
MPRINT(EM_DIAGRAM):   end;
2429397   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2429398   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2429399   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2429400   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2429401   +      end;
MPRINT(EM_DIAGRAM):   end;
2429402   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2429403   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2429404   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2429405   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2429406   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2429407   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2429408   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2429409   +         end;
MPRINT(EM_DIAGRAM):   end;
2429410   +      end;
MPRINT(EM_DIAGRAM):   end;
2429411   +   end;
MPRINT(EM_DIAGRAM):   end;
2429412   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2429413   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2429414   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2429415   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2429416   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2429417   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2429418   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2429419   +   end;
MPRINT(EM_DIAGRAM):   end;
2429420   +end;
MPRINT(EM_DIAGRAM):   end;
2429421   +
2429422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2429423   +*** Checking missing input Interval
2429424   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2429425   +
2429426   +IF NMISS(
2429427   +   AcceptedCmpTotal ,
2429428   +   Age ,
2429429   +   Frq ,
2429430   +   Income ,
2429431   +   Kidhome ,
2429432   +   Mnt ,
2429433   +   MntFishProducts ,
2429434   +   MntFruits ,
2429435   +   MntGoldProds ,
2429436   +   MntMeatProducts ,
2429437   +   MntSweetProducts ,
2429438   +   MntWines ,
2429439   +   MonthsAsCustomer ,
2429440   +   NumCatalogPurchases ,
2429441   +   NumDealsPurchases ,
2429442   +   NumDistPurchases ,
2429443   +   NumStorePurchases ,
2429444   +   NumWebPurchases ,
2429445   +   NumWebVisitsMonth ,
2429446   +   RFMstat ,
2429447   +   RMntFrq ,
2429448   +   Recency ,
2429449   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2429450   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2429451   +
2429452   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2429453   +END;
MPRINT(EM_DIAGRAM):   END;
2429454   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2429455   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2429456   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2429457   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2429458   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2429459   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2429460   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2429461   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2429462   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2429463   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2429464   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2429465   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2429466   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2429467   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2429468   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2429469   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2429470   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2429471   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2429472   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2429473   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2429474   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2429475   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2429476   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2429477   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2429478   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2429479   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2429480   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2429481   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2429482   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2429483   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2429484   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2429485   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2429486   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2429487   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2429488   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2429489   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2429490   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2429491   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2429492   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2429493   +END;
MPRINT(EM_DIAGRAM):   END;
2429494   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2429495   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2429496   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2429497   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2429498   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2429499   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2429500   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2429501   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2429502   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2429503   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2429504   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2429505   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2429506   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2429507   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2429508   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2429509   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2429510   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2429511   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2429512   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2429513   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2429514   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2429515   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2429516   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2429517   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2429518   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2429519   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2429520   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2429521   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2429522   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2429523   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2429524   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2429525   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2429526   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2429527   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2429528   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2429529   +   ELSE S_NumCatalogPurchases
2429530   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2429531   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2429532   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2429533   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2429534   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2429535   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2429536   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2429537   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2429538   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2429539   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2429540   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2429541   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2429542   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2429543   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2429544   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2429545   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2429546   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2429547   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2429548   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2429549   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2429550   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2429551   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2429552   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2429553   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2429554   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2429555   +END;
MPRINT(EM_DIAGRAM):   END;
2429556   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2429557   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2429558   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2429559   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2429560   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2429561   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2429562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2429563   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2429564   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2429565   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2429566   +   H1x1_1  =     -2.0588471958351 * S_AcceptedCmpTotal
2429567   +          +     0.38628980389456 * S_Age  +     -0.8545617733777 * S_Frq
2429568   +          +    -1.37557200210661 * S_Income  +     1.58583945545125 *
2429569   +        S_Kidhome  +    -1.49250871593186 * S_Mnt  +    -2.02986091068301 *
2429570   +        S_MntFishProducts  +     0.28845511703412 * S_MntFruits
2429571   +          +    -0.62495372005095 * S_MntGoldProds  +     3.22144698444712 *
2429572   +        S_MntMeatProducts  +    -2.67158036653801 * S_MntSweetProducts
2429573   +          +    -4.30837863985493 * S_MntWines  +     0.39603200162704 *
2429574   +        S_MonthsAsCustomer  +      1.8259166147951 * S_NumCatalogPurchases
2429575   +          +      3.4758215776031 * S_NumDealsPurchases
2429576   +          +     0.17094021755289 * S_NumDistPurchases
2429577   +          +    -2.72090095694641 * S_NumStorePurchases
2429578   +          +    -0.31877935826328 * S_NumWebPurchases
2429579   +          +    -2.03399974412918 * S_NumWebVisitsMonth
2429580   +          +     2.74309130038659 * S_RFMstat  +    -0.74941844935268 *
2429581   +        S_RMntFrq  +     0.29064555076615 * S_Recency
2429582   +          +    -0.57040700827247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.0588471958351 * S_AcceptedCmpTotal + 0.38628980389456 * 
S_Age + -0.8545617733777 * S_Frq + -1.37557200210661 * S_Income + 1.58583945545125 * S_Kidhome 
+ -1.49250871593186 * S_Mnt + -2.02986091068301 * S_MntFishProducts + 0.28845511703412 * 
S_MntFruits + -0.62495372005095 * S_MntGoldProds + 3.22144698444712 * S_MntMeatProducts + 
-2.67158036653801 * S_MntSweetProducts + -4.30837863985493 * S_MntWines + 0.39603200162704 * 
S_MonthsAsCustomer + 1.8259166147951 * S_NumCatalogPurchases + 3.4758215776031 * 
S_NumDealsPurchases + 0.17094021755289 * S_NumDistPurchases + -2.72090095694641 * 
S_NumStorePurchases + -0.31877935826328 * S_NumWebPurchases + -2.03399974412918 * 
S_NumWebVisitsMonth + 2.74309130038659 * S_RFMstat + -0.74941844935268 * S_RMntFrq + 
0.29064555076615 * S_Recency + -0.57040700827247 * S_Teenhome ;
2429583   +   H1x1_2  =     -0.5995699177824 * S_AcceptedCmpTotal
2429584   +          +    -1.17769485933608 * S_Age  +     0.95998296288295 * S_Frq
2429585   +          +     -2.2343179478513 * S_Income  +     3.17436638275163 *
2429586   +        S_Kidhome  +     0.46987648124346 * S_Mnt  +     0.07213935656698 *
2429587   +        S_MntFishProducts  +    -1.38055808108069 * S_MntFruits
2429588   +          +     0.62140960451545 * S_MntGoldProds  +     -1.9000500396873 *
2429589   +        S_MntMeatProducts  +    -0.35707372583597 * S_MntSweetProducts
2429590   +          +     1.99720917743483 * S_MntWines  +     0.89245096364062 *
2429591   +        S_MonthsAsCustomer  +    -0.61497875715928 * S_NumCatalogPurchases
2429592   +          +    -1.21013804197082 * S_NumDealsPurchases
2429593   +          +     0.59974279122188 * S_NumDistPurchases
2429594   +          +     1.92425710681156 * S_NumStorePurchases
2429595   +          +     1.02413182452324 * S_NumWebPurchases
2429596   +          +    -3.63276285340174 * S_NumWebVisitsMonth
2429597   +          +     0.33919100670479 * S_RFMstat  +     0.84767315208026 *
2429598   +        S_RMntFrq  +     3.87352563099005 * S_Recency
2429599   +          +     2.74174964084917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5995699177824 * S_AcceptedCmpTotal + -1.17769485933608 * 
S_Age + 0.95998296288295 * S_Frq + -2.2343179478513 * S_Income + 3.17436638275163 * S_Kidhome 
+ 0.46987648124346 * S_Mnt + 0.07213935656698 * S_MntFishProducts + -1.38055808108069 * 
S_MntFruits + 0.62140960451545 * S_MntGoldProds + -1.9000500396873 * S_MntMeatProducts + 
-0.35707372583597 * S_MntSweetProducts + 1.99720917743483 * S_MntWines + 0.89245096364062 * 
S_MonthsAsCustomer + -0.61497875715928 * S_NumCatalogPurchases + -1.21013804197082 * 
S_NumDealsPurchases + 0.59974279122188 * S_NumDistPurchases + 1.92425710681156 * 
S_NumStorePurchases + 1.02413182452324 * S_NumWebPurchases + -3.63276285340174 * 
S_NumWebVisitsMonth + 0.33919100670479 * S_RFMstat + 0.84767315208026 * S_RMntFrq + 
3.87352563099005 * S_Recency + 2.74174964084917 * S_Teenhome ;
2429600   +   H1x1_3  =    -2.27029708882419 * S_AcceptedCmpTotal
2429601   +          +     0.57558817521081 * S_Age  +     0.03666022895146 * S_Frq
2429602   +          +    -0.43764949843184 * S_Income  +     0.05202039236868 *
2429603   +        S_Kidhome  +    -0.17515517773197 * S_Mnt  +      2.1454579331563 *
2429604   +        S_MntFishProducts  +     -0.0544472234117 * S_MntFruits
2429605   +          +    -0.24751372889101 * S_MntGoldProds  +    -7.95986512066472 *
2429606   +        S_MntMeatProducts  +    -0.42258869313323 * S_MntSweetProducts
2429607   +          +      4.6542173574208 * S_MntWines  +     0.27973663838423 *
2429608   +        S_MonthsAsCustomer  +    -0.92923468464154 * S_NumCatalogPurchases
2429609   +          +      0.4928343071801 * S_NumDealsPurchases
2429610   +          +     -0.0196677325409 * S_NumDistPurchases
2429611   +          +     0.44395828164873 * S_NumStorePurchases
2429612   +          +     0.86947051591224 * S_NumWebPurchases
2429613   +          +    -0.96787241206077 * S_NumWebVisitsMonth
2429614   +          +     -0.9429396337834 * S_RFMstat  +    -1.69298966254302 *
2429615   +        S_RMntFrq  +     0.24582117217188 * S_Recency
2429616   +          +    -1.08471509540368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.27029708882419 * S_AcceptedCmpTotal + 0.57558817521081 * 
S_Age + 0.03666022895146 * S_Frq + -0.43764949843184 * S_Income + 0.05202039236868 * S_Kidhome 
+ -0.17515517773197 * S_Mnt + 2.1454579331563 * S_MntFishProducts + -0.0544472234117 * 
S_MntFruits + -0.24751372889101 * S_MntGoldProds + -7.95986512066472 * S_MntMeatProducts + 
-0.42258869313323 * S_MntSweetProducts + 4.6542173574208 * S_MntWines + 0.27973663838423 * 
S_MonthsAsCustomer + -0.92923468464154 * S_NumCatalogPurchases + 0.4928343071801 * 
S_NumDealsPurchases + -0.0196677325409 * S_NumDistPurchases + 0.44395828164873 * 
S_NumStorePurchases + 0.86947051591224 * S_NumWebPurchases + -0.96787241206077 * 
S_NumWebVisitsMonth + -0.9429396337834 * S_RFMstat + -1.69298966254302 * S_RMntFrq + 
0.24582117217188 * S_Recency + -1.08471509540368 * S_Teenhome ;
2429617   +   H1x1_4  =     0.54181596412096 * S_AcceptedCmpTotal
2429618   +          +    -1.19331526818752 * S_Age  +     0.79853759822324 * S_Frq
2429619   +          +     0.73370928178794 * S_Income  +     0.38661834479377 *
2429620   +        S_Kidhome  +      0.3442876988888 * S_Mnt  +    -0.58769739655035 *
2429621   +        S_MntFishProducts  +     -0.8703586573687 * S_MntFruits
2429622   +          +    -0.06073044217122 * S_MntGoldProds  +     1.06031608775663 *
2429623   +        S_MntMeatProducts  +      0.1600438561366 * S_MntSweetProducts
2429624   +          +    -0.10937637342015 * S_MntWines  +     0.44423445817796 *
2429625   +        S_MonthsAsCustomer  +     2.20653376632749 * S_NumCatalogPurchases
2429626   +          +     1.10280977051932 * S_NumDealsPurchases
2429627   +          +     0.99310057404036 * S_NumDistPurchases
2429628   +          +    -0.05647459609331 * S_NumStorePurchases
2429629   +          +    -0.89852483938631 * S_NumWebPurchases
2429630   +          +     2.63022480227445 * S_NumWebVisitsMonth
2429631   +          +      0.0081819695781 * S_RFMstat  +     1.19338523211724 *
2429632   +        S_RMntFrq  +    -4.46436997560659 * S_Recency
2429633   +          +    -2.03251171372039 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54181596412096 * S_AcceptedCmpTotal + -1.19331526818752 * 
S_Age + 0.79853759822324 * S_Frq + 0.73370928178794 * S_Income + 0.38661834479377 * S_Kidhome 
+ 0.3442876988888 * S_Mnt + -0.58769739655035 * S_MntFishProducts + -0.8703586573687 * 
S_MntFruits + -0.06073044217122 * S_MntGoldProds + 1.06031608775663 * S_MntMeatProducts + 
0.1600438561366 * S_MntSweetProducts + -0.10937637342015 * S_MntWines + 0.44423445817796 * 
S_MonthsAsCustomer + 2.20653376632749 * S_NumCatalogPurchases + 1.10280977051932 * 
S_NumDealsPurchases + 0.99310057404036 * S_NumDistPurchases + -0.05647459609331 * 
S_NumStorePurchases + -0.89852483938631 * S_NumWebPurchases + 2.63022480227445 * 
S_NumWebVisitsMonth + 0.0081819695781 * S_RFMstat + 1.19338523211724 * S_RMntFrq + 
-4.46436997560659 * S_Recency + -2.03251171372039 * S_Teenhome ;
2429634   +   H1x1_5  =    -1.03227948250072 * S_AcceptedCmpTotal
2429635   +          +     0.25510562405413 * S_Age  +     0.11938172756061 * S_Frq
2429636   +          +    -0.88855927472898 * S_Income  +    -0.98732962014399 *
2429637   +        S_Kidhome  +     0.57537935682752 * S_Mnt  +     0.07702692666996 *
2429638   +        S_MntFishProducts  +     0.69541223905843 * S_MntFruits
2429639   +          +    -0.26720187465927 * S_MntGoldProds  +    -0.03938241662919 *
2429640   +        S_MntMeatProducts  +     1.08781093588885 * S_MntSweetProducts
2429641   +          +     1.16253823123182 * S_MntWines  +    -1.60607722651025 *
2429642   +        S_MonthsAsCustomer  +    -1.69043794225498 * S_NumCatalogPurchases
2429643   +          +    -2.62220616180571 * S_NumDealsPurchases
2429644   +          +    -0.51737930835331 * S_NumDistPurchases
2429645   +          +     0.88655783158133 * S_NumStorePurchases
2429646   +          +     0.35132468809969 * S_NumWebPurchases
2429647   +          +     -1.6320869675862 * S_NumWebVisitsMonth
2429648   +          +     0.33776958473405 * S_RFMstat  +    -0.42290181425075 *
2429649   +        S_RMntFrq  +     1.06226028677401 * S_Recency
2429650   +          +     1.11855899514962 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.03227948250072 * S_AcceptedCmpTotal + 0.25510562405413 * 
S_Age + 0.11938172756061 * S_Frq + -0.88855927472898 * S_Income + -0.98732962014399 * 
S_Kidhome + 0.57537935682752 * S_Mnt + 0.07702692666996 * S_MntFishProducts + 0.69541223905843 
* S_MntFruits + -0.26720187465927 * S_MntGoldProds + -0.03938241662919 * S_MntMeatProducts + 
1.08781093588885 * S_MntSweetProducts + 1.16253823123182 * S_MntWines + -1.60607722651025 * 
S_MonthsAsCustomer + -1.69043794225498 * S_NumCatalogPurchases + -2.62220616180571 * 
S_NumDealsPurchases + -0.51737930835331 * S_NumDistPurchases + 0.88655783158133 * 
S_NumStorePurchases + 0.35132468809969 * S_NumWebPurchases + -1.6320869675862 * 
S_NumWebVisitsMonth + 0.33776958473405 * S_RFMstat + -0.42290181425075 * S_RMntFrq + 
1.06226028677401 * S_Recency + 1.11855899514962 * S_Teenhome ;
2429651   +   H1x1_1  = H1x1_1  +     0.53637737817097 * AcceptedCmp10
2429652   +          +    -1.85405146733588 * AcceptedCmp20  +    -1.47621046566649 *
2429653   +        AcceptedCmp30  +    -1.37767318086242 * AcceptedCmp40
2429654   +          +    -0.96348396070145 * AcceptedCmp50  +    -1.30976546088379 *
2429655   +        Complain0  +    -0.54848314184314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.53637737817097 * AcceptedCmp10 + -1.85405146733588 * 
AcceptedCmp20 + -1.47621046566649 * AcceptedCmp30 + -1.37767318086242 * AcceptedCmp40 + 
-0.96348396070145 * AcceptedCmp50 + -1.30976546088379 * Complain0 + -0.54848314184314 * 
HigherEducationBinary0 ;
2429656   +   H1x1_2  = H1x1_2  +     0.18445380584184 * AcceptedCmp10
2429657   +          +    -0.69257274561716 * AcceptedCmp20  +     0.17226038285159 *
2429658   +        AcceptedCmp30  +    -1.06145995435722 * AcceptedCmp40
2429659   +          +     1.23459262841144 * AcceptedCmp50  +    -0.14674063302587 *
2429660   +        Complain0  +    -1.08422405648698 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.18445380584184 * AcceptedCmp10 + -0.69257274561716 * 
AcceptedCmp20 + 0.17226038285159 * AcceptedCmp30 + -1.06145995435722 * AcceptedCmp40 + 
1.23459262841144 * AcceptedCmp50 + -0.14674063302587 * Complain0 + -1.08422405648698 * 
HigherEducationBinary0 ;
2429661   +   H1x1_3  = H1x1_3  +     0.81272808689375 * AcceptedCmp10
2429662   +          +    -0.37057950605918 * AcceptedCmp20  +    -1.75364708883985 *
2429663   +        AcceptedCmp30  +     -1.9879502333289 * AcceptedCmp40
2429664   +          +     2.82649108460951 * AcceptedCmp50  +    -0.14219031901768 *
2429665   +        Complain0  +     -0.5514346363694 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.81272808689375 * AcceptedCmp10 + -0.37057950605918 * 
AcceptedCmp20 + -1.75364708883985 * AcceptedCmp30 + -1.9879502333289 * AcceptedCmp40 + 
2.82649108460951 * AcceptedCmp50 + -0.14219031901768 * Complain0 + -0.5514346363694 * 
HigherEducationBinary0 ;
2429666   +   H1x1_4  = H1x1_4  +    -1.12354567881562 * AcceptedCmp10
2429667   +          +    -1.64564861831306 * AcceptedCmp20  +    -1.84950171464501 *
2429668   +        AcceptedCmp30  +    -2.60581164673686 * AcceptedCmp40
2429669   +          +    -0.53568003317161 * AcceptedCmp50  +    -0.13929928866767 *
2429670   +        Complain0  +     1.18053116626218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12354567881562 * AcceptedCmp10 + -1.64564861831306 
* AcceptedCmp20 + -1.84950171464501 * AcceptedCmp30 + -2.60581164673686 * AcceptedCmp40 + 
-0.53568003317161 * AcceptedCmp50 + -0.13929928866767 * Complain0 + 1.18053116626218 * 
HigherEducationBinary0 ;
2429671   +   H1x1_5  = H1x1_5  +     -0.3006993305802 * AcceptedCmp10
2429672   +          +    -0.67101949915278 * AcceptedCmp20  +     0.48950637221178 *
2429673   +        AcceptedCmp30  +     0.25937105093078 * AcceptedCmp40
2429674   +          +       0.650714225549 * AcceptedCmp50  +    -0.53543482850089 *
2429675   +        Complain0  +     0.62014708316206 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.3006993305802 * AcceptedCmp10 + -0.67101949915278 * 
AcceptedCmp20 + 0.48950637221178 * AcceptedCmp30 + 0.25937105093078 * AcceptedCmp40 + 
0.650714225549 * AcceptedCmp50 + -0.53543482850089 * Complain0 + 0.62014708316206 * 
HigherEducationBinary0 ;
2429676   +   H1x1_1  = H1x1_1  +     0.78710932360637 * Education2n_Cycle
2429677   +          +    -0.34656604802235 * EducationBasic  +     0.11820082193221 *
2429678   +        EducationGraduation  +     1.42539292513854 * EducationMaster
2429679   +          +     0.34809919741136 * Marital_StatusDivorced
2429680   +          +    -0.26594093535929 * Marital_StatusMarried
2429681   +          +     0.70249715999987 * Marital_StatusSingle
2429682   +          +    -0.45710525283449 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.78710932360637 * Education2n_Cycle + 
-0.34656604802235 * EducationBasic + 0.11820082193221 * EducationGraduation + 1.42539292513854 
* EducationMaster + 0.34809919741136 * Marital_StatusDivorced + -0.26594093535929 * 
Marital_StatusMarried + 0.70249715999987 * Marital_StatusSingle + -0.45710525283449 * 
Marital_StatusTogether ;
2429683   +   H1x1_2  = H1x1_2  +    -1.00496261512915 * Education2n_Cycle
2429684   +          +     0.66783492956492 * EducationBasic  +     0.91185122922538 *
2429685   +        EducationGraduation  +    -0.28204692640004 * EducationMaster
2429686   +          +    -0.20448765627193 * Marital_StatusDivorced
2429687   +          +     1.73231344674733 * Marital_StatusMarried
2429688   +          +    -0.70956480480373 * Marital_StatusSingle
2429689   +          +      1.0926428215879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.00496261512915 * Education2n_Cycle + 
0.66783492956492 * EducationBasic + 0.91185122922538 * EducationGraduation + -0.28204692640004 
* EducationMaster + -0.20448765627193 * Marital_StatusDivorced + 1.73231344674733 * 
Marital_StatusMarried + -0.70956480480373 * Marital_StatusSingle + 1.0926428215879 * 
Marital_StatusTogether ;
2429690   +   H1x1_3  = H1x1_3  +    -0.06222681334412 * Education2n_Cycle
2429691   +          +    -0.00009122618999 * EducationBasic  +    -0.07444046529217 *
2429692   +        EducationGraduation  +     1.01284161768787 * EducationMaster
2429693   +          +     0.30333818684353 * Marital_StatusDivorced
2429694   +          +    -1.44603535988199 * Marital_StatusMarried
2429695   +          +     0.48409598426383 * Marital_StatusSingle
2429696   +          +    -1.14528682521622 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.06222681334412 * Education2n_Cycle + 
-0.00009122618999 * EducationBasic + -0.07444046529217 * EducationGraduation + 
1.01284161768787 * EducationMaster + 0.30333818684353 * Marital_StatusDivorced + 
-1.44603535988199 * Marital_StatusMarried + 0.48409598426383 * Marital_StatusSingle + 
-1.14528682521622 * Marital_StatusTogether ;
2429697   +   H1x1_4  = H1x1_4  +    -0.92316818310935 * Education2n_Cycle
2429698   +          +     0.93590924020503 * EducationBasic  +     0.36762108040277 *
2429699   +        EducationGraduation  +    -1.17735200022013 * EducationMaster
2429700   +          +     -1.5342907846297 * Marital_StatusDivorced
2429701   +          +    -1.79544684592172 * Marital_StatusMarried
2429702   +          +     0.65604313645117 * Marital_StatusSingle
2429703   +          +    -2.08172869142628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.92316818310935 * Education2n_Cycle + 
0.93590924020503 * EducationBasic + 0.36762108040277 * EducationGraduation + -1.17735200022013 
* EducationMaster + -1.5342907846297 * Marital_StatusDivorced + -1.79544684592172 * 
Marital_StatusMarried + 0.65604313645117 * Marital_StatusSingle + -2.08172869142628 * 
Marital_StatusTogether ;
2429704   +   H1x1_5  = H1x1_5  +    -0.56328800945753 * Education2n_Cycle
2429705   +          +    -0.06918346311418 * EducationBasic  +     -1.5176897786776 *
2429706   +        EducationGraduation  +     0.09618331198762 * EducationMaster
2429707   +          +    -3.97940893560267 * Marital_StatusDivorced
2429708   +          +      3.5880254142663 * Marital_StatusMarried
2429709   +          +     -2.9897737730927 * Marital_StatusSingle
2429710   +          +     3.75098376776525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.56328800945753 * Education2n_Cycle + 
-0.06918346311418 * EducationBasic + -1.5176897786776 * EducationGraduation + 0.09618331198762 
* EducationMaster + -3.97940893560267 * Marital_StatusDivorced + 3.5880254142663 * 
Marital_StatusMarried + -2.9897737730927 * Marital_StatusSingle + 3.75098376776525 * 
Marital_StatusTogether ;
2429711   +   H1x1_1  =    -2.89135496095875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.89135496095875 + H1x1_1 ;
2429712   +   H1x1_2  =     0.39943637099295 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.39943637099295 + H1x1_2 ;
2429713   +   H1x1_3  =    -1.08093114818147 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.08093114818147 + H1x1_3 ;
2429714   +   H1x1_4  =    -3.29426643182948 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.29426643182948 + H1x1_4 ;
2429715   +   H1x1_5  =    -1.76822552726746 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.76822552726746 + H1x1_5 ;
2429716   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2429717   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2429718   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2429719   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2429720   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2429721   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2429722   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2429723   +END;
MPRINT(EM_DIAGRAM):   END;
2429724   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2429725   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2429726   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2429727   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2429728   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2429729   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2429730   +END;
MPRINT(EM_DIAGRAM):   END;
2429731   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2429732   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2429733   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2429734   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2429735   +   H1x2_1  =     1.01981866144831 * S_AcceptedCmpTotal
2429736   +          +    -1.47346125364319 * S_Age  +    -0.08669650492194 * S_Frq
2429737   +          +    -0.51585471637562 * S_Income  +     1.40711190452923 *
2429738   +        S_Kidhome  +    -0.21341957199148 * S_Mnt  +    -0.31211158173505 *
2429739   +        S_MntFishProducts  +    -0.77126486046129 * S_MntFruits
2429740   +          +     -0.4503905849175 * S_MntGoldProds  +     1.01090165857015 *
2429741   +        S_MntMeatProducts  +    -0.05554268249583 * S_MntSweetProducts
2429742   +          +     2.72203992871966 * S_MntWines  +    -0.46212144021719 *
2429743   +        S_MonthsAsCustomer  +    -0.10495120677935 * S_NumCatalogPurchases
2429744   +          +     0.07279889333775 * S_NumDealsPurchases
2429745   +          +     0.07542203992452 * S_NumDistPurchases
2429746   +          +     0.16296239303342 * S_NumStorePurchases
2429747   +          +     1.59193921229231 * S_NumWebPurchases
2429748   +          +    -0.35227839362603 * S_NumWebVisitsMonth
2429749   +          +      1.3224105019117 * S_RFMstat  +    -0.77035988511057 *
2429750   +        S_RMntFrq  +     0.43315770276588 * S_Recency
2429751   +          +     0.43447147039235 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.01981866144831 * S_AcceptedCmpTotal + -1.47346125364319 * 
S_Age + -0.08669650492194 * S_Frq + -0.51585471637562 * S_Income + 1.40711190452923 * 
S_Kidhome + -0.21341957199148 * S_Mnt + -0.31211158173505 * S_MntFishProducts + 
-0.77126486046129 * S_MntFruits + -0.4503905849175 * S_MntGoldProds + 1.01090165857015 * 
S_MntMeatProducts + -0.05554268249583 * S_MntSweetProducts + 2.72203992871966 * S_MntWines + 
-0.46212144021719 * S_MonthsAsCustomer + -0.10495120677935 * S_NumCatalogPurchases + 
0.07279889333775 * S_NumDealsPurchases + 0.07542203992452 * S_NumDistPurchases + 
0.16296239303342 * S_NumStorePurchases + 1.59193921229231 * S_NumWebPurchases + 
-0.35227839362603 * S_NumWebVisitsMonth + 1.3224105019117 * S_RFMstat + -0.77035988511057 * 
S_RMntFrq + 0.43315770276588 * S_Recency + 0.43447147039235 * S_Teenhome ;
2429752   +   H1x2_2  =    -0.07629675162821 * S_AcceptedCmpTotal
2429753   +          +     0.81684969971216 * S_Age  +     0.52870818801428 * S_Frq
2429754   +          +     0.15358022485378 * S_Income  +    -0.64458879887927 *
2429755   +        S_Kidhome  +    -2.12225648421746 * S_Mnt  +     1.05240671673302 *
2429756   +        S_MntFishProducts  +    -0.89595336397918 * S_MntFruits
2429757   +          +    -0.28950558043577 * S_MntGoldProds  +     0.30996043499478 *
2429758   +        S_MntMeatProducts  +     1.27676485470274 * S_MntSweetProducts
2429759   +          +    -1.30045112439384 * S_MntWines  +     1.36110971826862 *
2429760   +        S_MonthsAsCustomer  +     -0.1778244163518 * S_NumCatalogPurchases
2429761   +          +    -0.37456959251084 * S_NumDealsPurchases
2429762   +          +    -1.15252469975668 * S_NumDistPurchases
2429763   +          +    -1.39822501888899 * S_NumStorePurchases
2429764   +          +    -0.32777847360723 * S_NumWebPurchases
2429765   +          +     0.84026499832926 * S_NumWebVisitsMonth
2429766   +          +    -1.47180193258497 * S_RFMstat  +     0.18801983980439 *
2429767   +        S_RMntFrq  +     1.21016626691186 * S_Recency
2429768   +          +    -0.82943594788748 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07629675162821 * S_AcceptedCmpTotal + 0.81684969971216 * 
S_Age + 0.52870818801428 * S_Frq + 0.15358022485378 * S_Income + -0.64458879887927 * S_Kidhome 
+ -2.12225648421746 * S_Mnt + 1.05240671673302 * S_MntFishProducts + -0.89595336397918 * 
S_MntFruits + -0.28950558043577 * S_MntGoldProds + 0.30996043499478 * S_MntMeatProducts + 
1.27676485470274 * S_MntSweetProducts + -1.30045112439384 * S_MntWines + 1.36110971826862 * 
S_MonthsAsCustomer + -0.1778244163518 * S_NumCatalogPurchases + -0.37456959251084 * 
S_NumDealsPurchases + -1.15252469975668 * S_NumDistPurchases + -1.39822501888899 * 
S_NumStorePurchases + -0.32777847360723 * S_NumWebPurchases + 0.84026499832926 * 
S_NumWebVisitsMonth + -1.47180193258497 * S_RFMstat + 0.18801983980439 * S_RMntFrq + 
1.21016626691186 * S_Recency + -0.82943594788748 * S_Teenhome ;
2429769   +   H1x2_3  =    -0.06736000283511 * S_AcceptedCmpTotal
2429770   +          +    -0.47270148030219 * S_Age  +      1.1959707178877 * S_Frq
2429771   +          +    -1.40081626653738 * S_Income  +     0.35085595025526 *
2429772   +        S_Kidhome  +    -0.43652344252181 * S_Mnt  +     1.12197802721591 *
2429773   +        S_MntFishProducts  +     1.27079634537799 * S_MntFruits
2429774   +          +    -0.03023683680758 * S_MntGoldProds  +     0.51289568088141 *
2429775   +        S_MntMeatProducts  +     1.12894900622408 * S_MntSweetProducts
2429776   +          +    -0.66940205871871 * S_MntWines  +    -1.57211003055303 *
2429777   +        S_MonthsAsCustomer  +     1.47778465205569 * S_NumCatalogPurchases
2429778   +          +     1.14090099538367 * S_NumDealsPurchases
2429779   +          +     -0.2600155774492 * S_NumDistPurchases
2429780   +          +     1.31362002392113 * S_NumStorePurchases
2429781   +          +     1.31465307763555 * S_NumWebPurchases
2429782   +          +    -0.18041623858351 * S_NumWebVisitsMonth
2429783   +          +    -0.12685084546738 * S_RFMstat  +     0.43500462904027 *
2429784   +        S_RMntFrq  +    -0.81910738140729 * S_Recency
2429785   +          +    -0.61936793661609 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.06736000283511 * S_AcceptedCmpTotal + -0.47270148030219 * 
S_Age + 1.1959707178877 * S_Frq + -1.40081626653738 * S_Income + 0.35085595025526 * S_Kidhome 
+ -0.43652344252181 * S_Mnt + 1.12197802721591 * S_MntFishProducts + 1.27079634537799 * 
S_MntFruits + -0.03023683680758 * S_MntGoldProds + 0.51289568088141 * S_MntMeatProducts + 
1.12894900622408 * S_MntSweetProducts + -0.66940205871871 * S_MntWines + -1.57211003055303 * 
S_MonthsAsCustomer + 1.47778465205569 * S_NumCatalogPurchases + 1.14090099538367 * 
S_NumDealsPurchases + -0.2600155774492 * S_NumDistPurchases + 1.31362002392113 * 
S_NumStorePurchases + 1.31465307763555 * S_NumWebPurchases + -0.18041623858351 * 
S_NumWebVisitsMonth + -0.12685084546738 * S_RFMstat + 0.43500462904027 * S_RMntFrq + 
-0.81910738140729 * S_Recency + -0.61936793661609 * S_Teenhome ;
2429786   +   H1x2_4  =    -0.31415783692162 * S_AcceptedCmpTotal
2429787   +          +     0.11061423227332 * S_Age  +    -0.65722939551233 * S_Frq
2429788   +          +     -0.9063192568986 * S_Income  +      0.4013752851291 *
2429789   +        S_Kidhome  +    -1.06795963585271 * S_Mnt  +     0.24969441019479 *
2429790   +        S_MntFishProducts  +    -0.63550038240549 * S_MntFruits
2429791   +          +     1.04454010114015 * S_MntGoldProds  +     0.89912571026653 *
2429792   +        S_MntMeatProducts  +    -1.92356868621234 * S_MntSweetProducts
2429793   +          +     -1.8642245725538 * S_MntWines  +     0.13416556054779 *
2429794   +        S_MonthsAsCustomer  +    -1.01272407075887 * S_NumCatalogPurchases
2429795   +          +     1.06486073796679 * S_NumDealsPurchases
2429796   +          +    -0.04890191247577 * S_NumDistPurchases
2429797   +          +     0.86871320720698 * S_NumStorePurchases
2429798   +          +     0.03183587281884 * S_NumWebPurchases
2429799   +          +     -0.4863802923315 * S_NumWebVisitsMonth
2429800   +          +    -1.38034657666878 * S_RFMstat  +    -0.73640242597195 *
2429801   +        S_RMntFrq  +     0.17186861211542 * S_Recency
2429802   +          +    -0.39595339111048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.31415783692162 * S_AcceptedCmpTotal + 0.11061423227332 * 
S_Age + -0.65722939551233 * S_Frq + -0.9063192568986 * S_Income + 0.4013752851291 * S_Kidhome 
+ -1.06795963585271 * S_Mnt + 0.24969441019479 * S_MntFishProducts + -0.63550038240549 * 
S_MntFruits + 1.04454010114015 * S_MntGoldProds + 0.89912571026653 * S_MntMeatProducts + 
-1.92356868621234 * S_MntSweetProducts + -1.8642245725538 * S_MntWines + 0.13416556054779 * 
S_MonthsAsCustomer + -1.01272407075887 * S_NumCatalogPurchases + 1.06486073796679 * 
S_NumDealsPurchases + -0.04890191247577 * S_NumDistPurchases + 0.86871320720698 * 
S_NumStorePurchases + 0.03183587281884 * S_NumWebPurchases + -0.4863802923315 * 
S_NumWebVisitsMonth + -1.38034657666878 * S_RFMstat + -0.73640242597195 * S_RMntFrq + 
0.17186861211542 * S_Recency + -0.39595339111048 * S_Teenhome ;
2429803   +   H1x2_5  =     1.68315669988315 * S_AcceptedCmpTotal
2429804   +          +    -1.67467335764173 * S_Age  +     1.29921539173109 * S_Frq
2429805   +          +    -0.52305600367899 * S_Income  +     1.06261291858944 *
2429806   +        S_Kidhome  +     1.77049882170904 * S_Mnt  +    -0.27692609509601 *
2429807   +        S_MntFishProducts  +    -1.23166107817727 * S_MntFruits
2429808   +          +    -2.21476398466362 * S_MntGoldProds  +     1.02542528622621 *
2429809   +        S_MntMeatProducts  +     1.04913114036094 * S_MntSweetProducts
2429810   +          +     0.30606520702636 * S_MntWines  +    -1.15158074964406 *
2429811   +        S_MonthsAsCustomer  +     0.77918810586275 * S_NumCatalogPurchases
2429812   +          +    -0.01160267590349 * S_NumDealsPurchases
2429813   +          +    -0.92773075463083 * S_NumDistPurchases
2429814   +          +    -0.83326680533995 * S_NumStorePurchases
2429815   +          +    -1.16991058954473 * S_NumWebPurchases
2429816   +          +    -2.07771165573723 * S_NumWebVisitsMonth
2429817   +          +     0.59832456826177 * S_RFMstat  +     0.08151078945291 *
2429818   +        S_RMntFrq  +     0.80165981122986 * S_Recency
2429819   +          +     1.41798811088435 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.68315669988315 * S_AcceptedCmpTotal + -1.67467335764173 * 
S_Age + 1.29921539173109 * S_Frq + -0.52305600367899 * S_Income + 1.06261291858944 * S_Kidhome 
+ 1.77049882170904 * S_Mnt + -0.27692609509601 * S_MntFishProducts + -1.23166107817727 * 
S_MntFruits + -2.21476398466362 * S_MntGoldProds + 1.02542528622621 * S_MntMeatProducts + 
1.04913114036094 * S_MntSweetProducts + 0.30606520702636 * S_MntWines + -1.15158074964406 * 
S_MonthsAsCustomer + 0.77918810586275 * S_NumCatalogPurchases + -0.01160267590349 * 
S_NumDealsPurchases + -0.92773075463083 * S_NumDistPurchases + -0.83326680533995 * 
S_NumStorePurchases + -1.16991058954473 * S_NumWebPurchases + -2.07771165573723 * 
S_NumWebVisitsMonth + 0.59832456826177 * S_RFMstat + 0.08151078945291 * S_RMntFrq + 
0.80165981122986 * S_Recency + 1.41798811088435 * S_Teenhome ;
2429820   +   H1x2_1  = H1x2_1  +    -0.16600737981926 * AcceptedCmp10
2429821   +          +     1.41264623988567 * AcceptedCmp20  +      1.0446306999234 *
2429822   +        AcceptedCmp30  +    -1.00688604631169 * AcceptedCmp40
2429823   +          +     0.64523782235527 * AcceptedCmp50  +    -1.76623980391232 *
2429824   +        Complain0  +     1.64644530449125 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.16600737981926 * AcceptedCmp10 + 1.41264623988567 * 
AcceptedCmp20 + 1.0446306999234 * AcceptedCmp30 + -1.00688604631169 * AcceptedCmp40 + 
0.64523782235527 * AcceptedCmp50 + -1.76623980391232 * Complain0 + 1.64644530449125 * 
HigherEducationBinary0 ;
2429825   +   H1x2_2  = H1x2_2  +    -0.39493094663506 * AcceptedCmp10
2429826   +          +    -0.99095404154277 * AcceptedCmp20  +    -0.81166937096774 *
2429827   +        AcceptedCmp30  +     0.14520361414777 * AcceptedCmp40
2429828   +          +    -1.54302055254785 * AcceptedCmp50  +    -0.60600550413714 *
2429829   +        Complain0  +    -3.04730224174859 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.39493094663506 * AcceptedCmp10 + -0.99095404154277 
* AcceptedCmp20 + -0.81166937096774 * AcceptedCmp30 + 0.14520361414777 * AcceptedCmp40 + 
-1.54302055254785 * AcceptedCmp50 + -0.60600550413714 * Complain0 + -3.04730224174859 * 
HigherEducationBinary0 ;
2429830   +   H1x2_3  = H1x2_3  +      1.8650016934441 * AcceptedCmp10
2429831   +          +     0.85335394099291 * AcceptedCmp20  +     0.47327521312159 *
2429832   +        AcceptedCmp30  +    -2.64862753506152 * AcceptedCmp40
2429833   +          +     0.65827168680229 * AcceptedCmp50  +     0.45516433167059 *
2429834   +        Complain0  +    -0.62891111222764 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.8650016934441 * AcceptedCmp10 + 0.85335394099291 * 
AcceptedCmp20 + 0.47327521312159 * AcceptedCmp30 + -2.64862753506152 * AcceptedCmp40 + 
0.65827168680229 * AcceptedCmp50 + 0.45516433167059 * Complain0 + -0.62891111222764 * 
HigherEducationBinary0 ;
2429835   +   H1x2_4  = H1x2_4  +    -0.31781332022679 * AcceptedCmp10
2429836   +          +    -0.35773084257089 * AcceptedCmp20  +      0.0486072265688 *
2429837   +        AcceptedCmp30  +     1.50494203860483 * AcceptedCmp40
2429838   +          +     0.00499691981651 * AcceptedCmp50  +    -0.29977032190776 *
2429839   +        Complain0  +     0.76473087756218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.31781332022679 * AcceptedCmp10 + -0.35773084257089 
* AcceptedCmp20 + 0.0486072265688 * AcceptedCmp30 + 1.50494203860483 * AcceptedCmp40 + 
0.00499691981651 * AcceptedCmp50 + -0.29977032190776 * Complain0 + 0.76473087756218 * 
HigherEducationBinary0 ;
2429840   +   H1x2_5  = H1x2_5  +     -0.4639041544815 * AcceptedCmp10
2429841   +          +    -1.28977231764453 * AcceptedCmp20  +    -0.03597660273531 *
2429842   +        AcceptedCmp30  +     0.17848986397338 * AcceptedCmp40
2429843   +          +     0.06649914015182 * AcceptedCmp50  +    -0.95633404051563 *
2429844   +        Complain0  +    -0.62555630659121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.4639041544815 * AcceptedCmp10 + -1.28977231764453 * 
AcceptedCmp20 + -0.03597660273531 * AcceptedCmp30 + 0.17848986397338 * AcceptedCmp40 + 
0.06649914015182 * AcceptedCmp50 + -0.95633404051563 * Complain0 + -0.62555630659121 * 
HigherEducationBinary0 ;
2429845   +   H1x2_1  = H1x2_1  +    -1.75926153465974 * Education2n_Cycle
2429846   +          +     0.96255168005018 * EducationBasic  +     -1.2029563052774 *
2429847   +        EducationGraduation  +    -0.22397098444024 * EducationMaster
2429848   +          +    -0.10361472385198 * Marital_StatusDivorced
2429849   +          +     0.05574820877885 * Marital_StatusMarried
2429850   +          +     0.13130988205279 * Marital_StatusSingle
2429851   +          +    -1.51165564425323 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.75926153465974 * Education2n_Cycle + 
0.96255168005018 * EducationBasic + -1.2029563052774 * EducationGraduation + -0.22397098444024 
* EducationMaster + -0.10361472385198 * Marital_StatusDivorced + 0.05574820877885 * 
Marital_StatusMarried + 0.13130988205279 * Marital_StatusSingle + -1.51165564425323 * 
Marital_StatusTogether ;
2429852   +   H1x2_2  = H1x2_2  +     1.73281005101474 * Education2n_Cycle
2429853   +          +    -0.51397811328576 * EducationBasic  +     1.64296402934617 *
2429854   +        EducationGraduation  +     1.44983505587452 * EducationMaster
2429855   +          +      0.0059353523794 * Marital_StatusDivorced
2429856   +          +    -0.59379435051653 * Marital_StatusMarried
2429857   +          +    -1.93587108708999 * Marital_StatusSingle
2429858   +          +     2.02868236823401 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.73281005101474 * Education2n_Cycle + 
-0.51397811328576 * EducationBasic + 1.64296402934617 * EducationGraduation + 1.44983505587452 
* EducationMaster + 0.0059353523794 * Marital_StatusDivorced + -0.59379435051653 * 
Marital_StatusMarried + -1.93587108708999 * Marital_StatusSingle + 2.02868236823401 * 
Marital_StatusTogether ;
2429859   +   H1x2_3  = H1x2_3  +     0.11852280587389 * Education2n_Cycle
2429860   +          +    -0.87963137637159 * EducationBasic  +      0.3212539101977 *
2429861   +        EducationGraduation  +     0.16497026569775 * EducationMaster
2429862   +          +    -0.74333797840386 * Marital_StatusDivorced
2429863   +          +    -0.93061135117658 * Marital_StatusMarried
2429864   +          +     1.04024182655844 * Marital_StatusSingle
2429865   +          +     0.58313569749679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.11852280587389 * Education2n_Cycle + 
-0.87963137637159 * EducationBasic + 0.3212539101977 * EducationGraduation + 0.16497026569775 
* EducationMaster + -0.74333797840386 * Marital_StatusDivorced + -0.93061135117658 * 
Marital_StatusMarried + 1.04024182655844 * Marital_StatusSingle + 0.58313569749679 * 
Marital_StatusTogether ;
2429866   +   H1x2_4  = H1x2_4  +     -1.2170050337036 * Education2n_Cycle
2429867   +          +    -0.83332588435502 * EducationBasic  +     0.43242117148542 *
2429868   +        EducationGraduation  +     1.71196178631559 * EducationMaster
2429869   +          +    -3.01050675344463 * Marital_StatusDivorced
2429870   +          +      0.1638723582239 * Marital_StatusMarried
2429871   +          +     0.94548468360304 * Marital_StatusSingle
2429872   +          +    -0.67333048623615 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.2170050337036 * Education2n_Cycle + 
-0.83332588435502 * EducationBasic + 0.43242117148542 * EducationGraduation + 1.71196178631559 
* EducationMaster + -3.01050675344463 * Marital_StatusDivorced + 0.1638723582239 * 
Marital_StatusMarried + 0.94548468360304 * Marital_StatusSingle + -0.67333048623615 * 
Marital_StatusTogether ;
2429873   +   H1x2_5  = H1x2_5  +    -0.66774344191467 * Education2n_Cycle
2429874   +          +     0.75591270317285 * EducationBasic  +    -0.29337325355435 *
2429875   +        EducationGraduation  +     0.57450456442662 * EducationMaster
2429876   +          +    -1.37013926274158 * Marital_StatusDivorced
2429877   +          +    -0.34168970042779 * Marital_StatusMarried
2429878   +          +     0.63383683543962 * Marital_StatusSingle
2429879   +          +     0.75118887766443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.66774344191467 * Education2n_Cycle + 
0.75591270317285 * EducationBasic + -0.29337325355435 * EducationGraduation + 0.57450456442662 
* EducationMaster + -1.37013926274158 * Marital_StatusDivorced + -0.34168970042779 * 
Marital_StatusMarried + 0.63383683543962 * Marital_StatusSingle + 0.75118887766443 * 
Marital_StatusTogether ;
2429880   +   H1x2_1  =    -1.05245414685459 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.05245414685459 + H1x2_1 ;
2429881   +   H1x2_2  =    -2.03581716915326 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.03581716915326 + H1x2_2 ;
2429882   +   H1x2_3  =    -0.95118365599668 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.95118365599668 + H1x2_3 ;
2429883   +   H1x2_4  =    -1.36171328515396 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.36171328515396 + H1x2_4 ;
2429884   +   H1x2_5  =    -0.09438724866767 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.09438724866767 + H1x2_5 ;
2429885   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2429886   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2429887   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2429888   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
2429889   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
2429890   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
2429891   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
2429892   +END;
MPRINT(EM_DIAGRAM):   END;
2429893   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2429894   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2429895   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2429896   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2429897   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2429898   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2429899   +END;
MPRINT(EM_DIAGRAM):   END;
2429900   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2429901   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2429902   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2429903   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2429904   +   H2x1_1  =    -3.66869890196477 * H1x1_1  +     3.66276995899936 * H1x1_2
2429905   +          +      4.9852243803889 * H1x1_3  +    -3.40922134517979 * H1x1_4
2429906   +          +     2.26435924995065 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.66869890196477 * H1x1_1 + 3.66276995899936 * H1x1_2 + 
4.9852243803889 * H1x1_3 + -3.40922134517979 * H1x1_4 + 2.26435924995065 * H1x1_5 ;
2429907   +   H2x1_2  =     1.35296027814603 * H1x1_1  +     0.16236277762099 * H1x1_2
2429908   +          +      0.4094634018093 * H1x1_3  +    -1.05233334297087 * H1x1_4
2429909   +          +    -0.51735435825901 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.35296027814603 * H1x1_1 + 0.16236277762099 * H1x1_2 + 
0.4094634018093 * H1x1_3 + -1.05233334297087 * H1x1_4 + -0.51735435825901 * H1x1_5 ;
2429910   +   H2x1_3  =    -3.57467050540101 * H1x1_1  +     1.96738498758928 * H1x1_2
2429911   +          +      3.1519435691133 * H1x1_3  +    -2.73180541318793 * H1x1_4
2429912   +          +     2.53621803266955 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.57467050540101 * H1x1_1 + 1.96738498758928 * H1x1_2 + 
3.1519435691133 * H1x1_3 + -2.73180541318793 * H1x1_4 + 2.53621803266955 * H1x1_5 ;
2429913   +   H2x1_4  =    -1.77897865469649 * H1x1_1  +    -0.34371813002239 * H1x1_2
2429914   +          +     0.97655076671381 * H1x1_3  +    -0.53022688394362 * H1x1_4
2429915   +          +     1.78452647837415 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.77897865469649 * H1x1_1 + -0.34371813002239 * H1x1_2 + 
0.97655076671381 * H1x1_3 + -0.53022688394362 * H1x1_4 + 1.78452647837415 * H1x1_5 ;
2429916   +   H2x1_5  =    -2.37976522756638 * H1x1_1  +     2.07473947277607 * H1x1_2
2429917   +          +      3.6114905073808 * H1x1_3  +    -4.57668209905758 * H1x1_4
2429918   +          +     2.97931581645784 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.37976522756638 * H1x1_1 + 2.07473947277607 * H1x1_2 + 
3.6114905073808 * H1x1_3 + -4.57668209905758 * H1x1_4 + 2.97931581645784 * H1x1_5 ;
2429919   +   H2x1_1  = H2x1_1  +      0.5090021095213 * H1x2_1
2429920   +          +    -0.99996599039586 * H1x2_2  +     0.09317756017156 * H1x2_3
2429921   +          +     0.07646136890595 * H1x2_4  +    -0.86729455140311 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.5090021095213 * H1x2_1 + -0.99996599039586 * H1x2_2 
+ 0.09317756017156 * H1x2_3 + 0.07646136890595 * H1x2_4 + -0.86729455140311 * H1x2_5 ;
2429922   +   H2x1_2  = H2x1_2  +     0.54458122713319 * H1x2_1
2429923   +          +    -1.01527351866283 * H1x2_2  +    -1.05264779960249 * H1x2_3
2429924   +          +     2.00891057398994 * H1x2_4  +     0.23877185330348 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.54458122713319 * H1x2_1 + -1.01527351866283 * H1x2_2 
+ -1.05264779960249 * H1x2_3 + 2.00891057398994 * H1x2_4 + 0.23877185330348 * H1x2_5 ;
2429925   +   H2x1_3  = H2x1_3  +     0.45936122831356 * H1x2_1
2429926   +          +    -0.78158455560098 * H1x2_2  +    -0.93755507764598 * H1x2_3
2429927   +          +    -0.41290092050446 * H1x2_4  +    -1.08076286104858 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.45936122831356 * H1x2_1 + -0.78158455560098 * H1x2_2 
+ -0.93755507764598 * H1x2_3 + -0.41290092050446 * H1x2_4 + -1.08076286104858 * H1x2_5 ;
2429928   +   H2x1_4  = H2x1_4  +     0.95365620475779 * H1x2_1
2429929   +          +    -0.84100294393078 * H1x2_2  +     0.70463413466954 * H1x2_3
2429930   +          +     1.80542761219637 * H1x2_4  +     0.45881360213194 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.95365620475779 * H1x2_1 + -0.84100294393078 * H1x2_2 
+ 0.70463413466954 * H1x2_3 + 1.80542761219637 * H1x2_4 + 0.45881360213194 * H1x2_5 ;
2429931   +   H2x1_5  = H2x1_5  +     0.59629215620441 * H1x2_1
2429932   +          +    -0.66300910076078 * H1x2_2  +     0.53748646350811 * H1x2_3
2429933   +          +     0.40402787748621 * H1x2_4  +    -0.68066387330661 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.59629215620441 * H1x2_1 + -0.66300910076078 * H1x2_2 
+ 0.53748646350811 * H1x2_3 + 0.40402787748621 * H1x2_4 + -0.68066387330661 * H1x2_5 ;
2429934   +   H2x1_1  =    -1.36901208947371 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.36901208947371 + H2x1_1 ;
2429935   +   H2x1_2  =     1.02513270875023 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.02513270875023 + H2x1_2 ;
2429936   +   H2x1_3  =     0.21017025934674 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.21017025934674 + H2x1_3 ;
2429937   +   H2x1_4  =    -1.15214364807652 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.15214364807652 + H2x1_4 ;
2429938   +   H2x1_5  =    -1.32590257108023 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.32590257108023 + H2x1_5 ;
2429939   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2429940   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2429941   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2429942   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2429943   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2429944   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2429945   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2429946   +END;
MPRINT(EM_DIAGRAM):   END;
2429947   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2429948   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2429949   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2429950   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2429951   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2429952   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2429953   +END;
MPRINT(EM_DIAGRAM):   END;
2429954   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2429955   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2429956   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2429957   +
2429958   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2429959   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2429960   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2429961   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2429962   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2429963   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2429964   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2429965   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2429966   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2429967   +end;
MPRINT(EM_DIAGRAM):   end;
2429968   +else do;
MPRINT(EM_DIAGRAM):   else do;
2429969   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2429970   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2429971   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2429972   +   end;
MPRINT(EM_DIAGRAM):   end;
2429973   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2429974   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2429975   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2429976   +   end;
MPRINT(EM_DIAGRAM):   end;
2429977   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2429978   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2429979   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2429980   +   end;
MPRINT(EM_DIAGRAM):   end;
2429981   +end;
MPRINT(EM_DIAGRAM):   end;
2429982   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2429983   +   P_DepVar1  =    -9.23664553457504 * H2x1_1  +     1.34611690798114 * H2x1_2
2429984   +          +    -6.67077102946651 * H2x1_3  +    -1.67245227685142 * H2x1_4
2429985   +          +    -7.67053346287177 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.23664553457504 * H2x1_1 + 1.34611690798114 * H2x1_2 + 
-6.67077102946651 * H2x1_3 + -1.67245227685142 * H2x1_4 + -7.67053346287177 * H2x1_5 ;
2429986   +   P_DepVar1  =      3.4145227149582 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.4145227149582 + P_DepVar1 ;
2429987   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2429988   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2429989   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2429990   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2429991   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2429992   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2429993   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2429994   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2429995   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2429996   +END;
MPRINT(EM_DIAGRAM):   END;
2429997   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2429998   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2429999   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2430000   +END;
MPRINT(EM_DIAGRAM):   END;
2430001   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2430002   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2430003   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2430004   +END;
MPRINT(EM_DIAGRAM):   END;
2430005   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2430006   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2430007   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2430008   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2430009   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2430010   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2430011   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2430012   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430013   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2430014   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430015   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2430016   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2430017   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2430018   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2430019   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2430020   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2430021   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2430022   +END;
MPRINT(EM_DIAGRAM):   END;
2430023   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2430024   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2430025   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2430026   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2430027   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2430028   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430029   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2430030   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430031   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2430032   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2430033   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2430034   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2430035   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430036   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2430037   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430038   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2430039   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2430040   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2430041   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430042   +* Ensmbl45: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Average Posteriors of 5 models;
2430043   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430044   +P_DepVar1 = (
2430045   +AutoNeural9_P_DepVar1 +
2430046   +AutoNeural11_P_DepVar1 +
2430047   +AutoNeural12_P_DepVar1 +
2430048   +AutoNeural7_P_DepVar1 +
2430049   +AutoNeural10_P_DepVar1
2430050   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural9_P_DepVar1 + AutoNeural11_P_DepVar1 + 
AutoNeural12_P_DepVar1 + AutoNeural7_P_DepVar1 + AutoNeural10_P_DepVar1 )/5;
2430051   +P_DepVar0 = (
2430052   +AutoNeural9_P_DepVar0 +
2430053   +AutoNeural11_P_DepVar0 +
2430054   +AutoNeural12_P_DepVar0 +
2430055   +AutoNeural7_P_DepVar0 +
2430056   +AutoNeural10_P_DepVar0
2430057   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural9_P_DepVar0 + AutoNeural11_P_DepVar0 + 
AutoNeural12_P_DepVar0 + AutoNeural7_P_DepVar0 + AutoNeural10_P_DepVar0 )/5;
2430058   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430059   +* Ensmbl45: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Computing Classification Vars;
2430060   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430061   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2430062   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2430063   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2430064   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2430065   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2430066   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2430067   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2430068   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2430069   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2430070   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2430071   +end;
MPRINT(EM_DIAGRAM):   end;
2430072   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2430073   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2430074   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2430075   +end;
MPRINT(EM_DIAGRAM):   end;
2430076   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2430077   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430078   +* Ensmbl45: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Producing Unformatted variable;
2430079   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430080   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2430081   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2430082   +else
2430083   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2430084   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430085   +* Ensmbl45: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Computing _WARN_ Variable;
2430086   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430087   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2430088   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2430089   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2430090   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2430090  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2430091   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2430091  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2430092   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2430092  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2430093   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2430093  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2430094   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2430094  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2430095   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2430095  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2430096   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2430096  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2430097   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2430097  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2430098   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2430098  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2430099   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2430099  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2430100   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2430100  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2430101   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2430101  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2430102   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2430102  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2430103   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2430103  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2430104   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2430104  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2430105   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2430105  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2430106   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2430106  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2430107   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2430107  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2430108   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2430108  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2430109   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2430109  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2430110   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430111   +* Ensmbl45: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Computing Residual Vars;
2430112   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430113   +if
2430114   +F_DepVar NE '1'
2430115   +AND F_DepVar NE '0'
2430116   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2430117   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2430118   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2430119   +end;
MPRINT(EM_DIAGRAM):   end;
2430120   +else do;
MPRINT(EM_DIAGRAM):   else do;
2430121   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2430122   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2430123   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2430124   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2430125   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2430126   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2430127   +END;
MPRINT(EM_DIAGRAM):   END;
2430128   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2430129    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL45_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL9_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.20 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2430130    quit;
2430131    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
2430132    filename emflow
2430132  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring AUTONEURAL9_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430133    *------------------------------------------------------------*;
2430134    * Ensmbl45: Scoring AUTONEURAL9_VALIDATE data;
2430135    *------------------------------------------------------------*;
2430136    data EMWS8.Ensmbl45_VALIDATE
2430137    / view=EMWS8.Ensmbl45_VALIDATE
2430138    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl45_VALIDATE / view=EMWS8.Ensmbl45_VALIDATE ;
2430139    set EMWS8.AutoNeural9_VALIDATE
2430140    ;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural9_VALIDATE ;
2430141    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\EMFLOWSCORE.sas.
2430142   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430143   +* Ensmbl45: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Combine model for DepVar;
2430144   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430145   +* Ensmbl45: Scoring Code of model 1 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 1 of 5;
2430146   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430147   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430148   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
2430149   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2430150   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
2430151   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430152   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430153   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
2430154   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
2430155   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
2430156   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430157   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430158   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
2430159   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2430160   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
2430161   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430162   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430163   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
2430164   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2430165   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
2430166   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430167   +
2430168   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2430169   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2430169  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2430170   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2430171   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2430172   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2430173   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2430174   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
2430175   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430176   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
2430177   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
2430178   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
2430179   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430180   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430181   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2430182   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430183   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2430184   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2430185   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
2430186   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430187   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
2430188   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
2430189   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
2430190   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430191   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430192   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
2430193   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
2430194   +* NODE: Meta;
MPRINT(EM_DIAGRAM):   * NODE: Meta;
2430195   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430196   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430197   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2430198   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2430199   +* NODE: AutoNeural9;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural9;
2430200   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430201   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2430202   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2430203   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2430204   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2430205   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2430206   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2430207   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2430208   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2430209   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2430210   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2430211   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2430212   +LENGTH _WARN_ $4
2430213   +      F_DepVar  $ 12
2430214   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2430215   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2430216   +
2430217   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2430218   +
2430219   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2430220   +
2430221   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2430222   +
2430223   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2430224   +
2430225   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2430226   +
2430227   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2430228   +
2430229   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2430230   +
2430231   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2430232   +
2430233   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2430234   +
2430235   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2430236   +
2430237   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2430238   +
2430239   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2430240   +
2430241   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2430242   +
2430243   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2430244   +
2430245   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2430246   +
2430247   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2430248   +
2430249   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2430250   +
2430251   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2430252   +
2430253   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2430254   +
2430255   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2430256   +
2430257   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2430258   +
2430259   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2430260   +
2430261   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2430262   +
2430263   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2430264   +
2430265   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2430266   +
2430267   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2430268   +
2430269   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2430270   +
2430271   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2430272   +
2430273   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2430274   +
2430275   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2430276   +
2430277   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2430278   +
2430279   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2430280   +
2430281   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2430282   +
2430283   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2430284   +
2430285   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2430286   +
2430287   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2430288   +
2430289   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2430290   +
2430291   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2430292   +
2430293   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2430294   +
2430295   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2430296   +
2430297   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2430298   +
2430299   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2430300   +
2430301   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2430302   +
2430303   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2430304   +
2430305   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2430306   +
2430307   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2430308   +
2430309   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2430310   +
2430311   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2430312   +
2430313   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2430314   +
2430315   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2430316   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2430317   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2430318   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2430319   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2430320   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430321   +end;
MPRINT(EM_DIAGRAM):   end;
2430322   +else do;
MPRINT(EM_DIAGRAM):   else do;
2430323   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2430324   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2430325   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2430326   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2430327   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2430328   +   end;
MPRINT(EM_DIAGRAM):   end;
2430329   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2430330   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2430331   +   end;
MPRINT(EM_DIAGRAM):   end;
2430332   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2430333   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2430334   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2430335   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430336   +   end;
MPRINT(EM_DIAGRAM):   end;
2430337   +end;
MPRINT(EM_DIAGRAM):   end;
2430338   +
2430339   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2430340   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2430341   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2430342   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2430343   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2430344   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430345   +end;
MPRINT(EM_DIAGRAM):   end;
2430346   +else do;
MPRINT(EM_DIAGRAM):   else do;
2430347   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2430348   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2430349   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2430350   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2430351   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2430352   +   end;
MPRINT(EM_DIAGRAM):   end;
2430353   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2430354   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2430355   +   end;
MPRINT(EM_DIAGRAM):   end;
2430356   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2430357   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2430358   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2430359   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430360   +   end;
MPRINT(EM_DIAGRAM):   end;
2430361   +end;
MPRINT(EM_DIAGRAM):   end;
2430362   +
2430363   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2430364   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2430365   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2430366   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2430367   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2430368   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430369   +end;
MPRINT(EM_DIAGRAM):   end;
2430370   +else do;
MPRINT(EM_DIAGRAM):   else do;
2430371   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2430372   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2430373   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2430374   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2430375   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2430376   +   end;
MPRINT(EM_DIAGRAM):   end;
2430377   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2430378   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2430379   +   end;
MPRINT(EM_DIAGRAM):   end;
2430380   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2430381   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2430382   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2430383   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430384   +   end;
MPRINT(EM_DIAGRAM):   end;
2430385   +end;
MPRINT(EM_DIAGRAM):   end;
2430386   +
2430387   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2430388   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2430389   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2430390   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2430391   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2430392   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430393   +end;
MPRINT(EM_DIAGRAM):   end;
2430394   +else do;
MPRINT(EM_DIAGRAM):   else do;
2430395   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2430396   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2430397   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2430398   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2430399   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2430400   +   end;
MPRINT(EM_DIAGRAM):   end;
2430401   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2430402   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2430403   +   end;
MPRINT(EM_DIAGRAM):   end;
2430404   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2430405   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2430406   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2430407   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430408   +   end;
MPRINT(EM_DIAGRAM):   end;
2430409   +end;
MPRINT(EM_DIAGRAM):   end;
2430410   +
2430411   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2430412   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2430413   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2430414   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2430415   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2430416   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430417   +end;
MPRINT(EM_DIAGRAM):   end;
2430418   +else do;
MPRINT(EM_DIAGRAM):   else do;
2430419   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2430420   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2430421   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2430422   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2430423   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2430424   +   end;
MPRINT(EM_DIAGRAM):   end;
2430425   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2430426   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2430427   +   end;
MPRINT(EM_DIAGRAM):   end;
2430428   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2430429   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2430430   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2430431   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430432   +   end;
MPRINT(EM_DIAGRAM):   end;
2430433   +end;
MPRINT(EM_DIAGRAM):   end;
2430434   +
2430435   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2430436   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2430437   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2430438   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2430439   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2430440   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430441   +end;
MPRINT(EM_DIAGRAM):   end;
2430442   +else do;
MPRINT(EM_DIAGRAM):   else do;
2430443   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2430444   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2430445   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2430446   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2430447   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2430448   +   end;
MPRINT(EM_DIAGRAM):   end;
2430449   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2430450   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2430451   +   end;
MPRINT(EM_DIAGRAM):   end;
2430452   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2430453   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2430454   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2430455   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430456   +   end;
MPRINT(EM_DIAGRAM):   end;
2430457   +end;
MPRINT(EM_DIAGRAM):   end;
2430458   +
2430459   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2430460   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2430461   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2430462   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2430463   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2430464   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430465   +end;
MPRINT(EM_DIAGRAM):   end;
2430466   +else do;
MPRINT(EM_DIAGRAM):   else do;
2430467   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2430468   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2430469   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2430470   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2430471   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2430472   +   end;
MPRINT(EM_DIAGRAM):   end;
2430473   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2430474   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2430475   +   end;
MPRINT(EM_DIAGRAM):   end;
2430476   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2430477   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2430478   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2430479   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430480   +   end;
MPRINT(EM_DIAGRAM):   end;
2430481   +end;
MPRINT(EM_DIAGRAM):   end;
2430482   +
2430483   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2430484   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2430485   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2430486   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2430487   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2430488   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2430489   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2430490   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2430491   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2430492   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2430493   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2430494   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2430495   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2430496   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430497   +end;
MPRINT(EM_DIAGRAM):   end;
2430498   +else do;
MPRINT(EM_DIAGRAM):   else do;
2430499   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2430500   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2430501   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2430502   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2430503   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2430504   +   end;
MPRINT(EM_DIAGRAM):   end;
2430505   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2430506   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2430507   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2430508   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2430509   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2430510   +   end;
MPRINT(EM_DIAGRAM):   end;
2430511   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2430512   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2430513   +   end;
MPRINT(EM_DIAGRAM):   end;
2430514   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2430515   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2430516   +   end;
MPRINT(EM_DIAGRAM):   end;
2430517   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2430518   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2430519   +   end;
MPRINT(EM_DIAGRAM):   end;
2430520   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2430521   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2430522   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2430523   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2430524   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2430525   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2430526   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430527   +   end;
MPRINT(EM_DIAGRAM):   end;
2430528   +end;
MPRINT(EM_DIAGRAM):   end;
2430529   +
2430530   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2430531   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2430532   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2430533   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2430534   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2430535   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2430536   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2430537   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2430538   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2430539   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2430540   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2430541   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2430542   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2430543   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2430544   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430545   +end;
MPRINT(EM_DIAGRAM):   end;
2430546   +else do;
MPRINT(EM_DIAGRAM):   else do;
2430547   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2430548   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2430549   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2430550   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2430551   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2430552   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2430553   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2430554   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2430555   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2430556   +         end;
MPRINT(EM_DIAGRAM):   end;
2430557   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2430558   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2430559   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2430560   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2430561   +            end;
MPRINT(EM_DIAGRAM):   end;
2430562   +         end;
MPRINT(EM_DIAGRAM):   end;
2430563   +      end;
MPRINT(EM_DIAGRAM):   end;
2430564   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2430565   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2430566   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2430567   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2430568   +         end;
MPRINT(EM_DIAGRAM):   end;
2430569   +      end;
MPRINT(EM_DIAGRAM):   end;
2430570   +   end;
MPRINT(EM_DIAGRAM):   end;
2430571   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2430572   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2430573   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2430574   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2430575   +      end;
MPRINT(EM_DIAGRAM):   end;
2430576   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2430577   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2430578   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2430579   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2430580   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2430581   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2430582   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2430583   +         end;
MPRINT(EM_DIAGRAM):   end;
2430584   +      end;
MPRINT(EM_DIAGRAM):   end;
2430585   +   end;
MPRINT(EM_DIAGRAM):   end;
2430586   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2430587   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2430588   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2430589   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2430590   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2430591   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2430592   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430593   +   end;
MPRINT(EM_DIAGRAM):   end;
2430594   +end;
MPRINT(EM_DIAGRAM):   end;
2430595   +
2430596   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430597   +*** Checking missing input Interval
2430598   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2430599   +
2430600   +IF NMISS(
2430601   +   AcceptedCmpTotal ,
2430602   +   Age ,
2430603   +   Frq ,
2430604   +   Income ,
2430605   +   Kidhome ,
2430606   +   Mnt ,
2430607   +   MntFishProducts ,
2430608   +   MntFruits ,
2430609   +   MntGoldProds ,
2430610   +   MntMeatProducts ,
2430611   +   MntSweetProducts ,
2430612   +   MntWines ,
2430613   +   MonthsAsCustomer ,
2430614   +   NumCatalogPurchases ,
2430615   +   NumDealsPurchases ,
2430616   +   NumDistPurchases ,
2430617   +   NumStorePurchases ,
2430618   +   NumWebPurchases ,
2430619   +   NumWebVisitsMonth ,
2430620   +   RFMstat ,
2430621   +   RMntFrq ,
2430622   +   Recency ,
2430623   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2430624   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2430625   +
2430626   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2430627   +END;
MPRINT(EM_DIAGRAM):   END;
2430628   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430629   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2430630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430631   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2430632   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2430633   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2430634   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2430635   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2430636   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2430637   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2430638   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2430639   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2430640   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2430641   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2430642   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2430643   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2430644   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2430645   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2430646   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2430647   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2430648   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2430649   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2430650   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2430651   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2430652   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2430653   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2430654   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2430655   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2430656   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2430657   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2430658   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2430659   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2430660   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2430661   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2430662   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2430663   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2430664   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2430665   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2430666   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2430667   +END;
MPRINT(EM_DIAGRAM):   END;
2430668   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2430669   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2430670   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2430671   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2430672   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2430673   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2430674   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2430675   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2430676   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2430677   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2430678   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2430679   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2430680   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2430681   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2430682   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2430683   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2430684   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2430685   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2430686   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2430687   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2430688   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2430689   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2430690   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2430691   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2430692   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2430693   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2430694   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2430695   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2430696   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2430697   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2430698   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2430699   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2430700   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2430701   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2430702   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2430703   +   ELSE S_NumCatalogPurchases
2430704   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2430705   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2430706   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2430707   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2430708   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2430709   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2430710   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2430711   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2430712   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2430713   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2430714   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2430715   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2430716   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2430717   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2430718   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2430719   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2430720   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2430721   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2430722   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2430723   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2430724   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2430725   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2430726   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2430727   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2430728   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2430729   +END;
MPRINT(EM_DIAGRAM):   END;
2430730   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430731   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2430732   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430733   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430734   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2430735   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430736   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430737   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2430738   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430739   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2430740   +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
2430741   +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
2430742   +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
2430743   +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
2430744   +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
2430745   +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
2430746   +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
2430747   +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
2430748   +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
2430749   +          +    -1.12130210731541 * S_NumDealsPurchases
2430750   +          +    -0.12343505299726 * S_NumDistPurchases
2430751   +          +     0.11863092868196 * S_NumStorePurchases
2430752   +          +       0.583917993314 * S_NumWebPurchases
2430753   +          +     0.75529732848146 * S_NumWebVisitsMonth
2430754   +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
2430755   +        S_RMntFrq  +    -0.95519170979342 * S_Recency
2430756   +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 * 
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome 
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 * 
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts + 
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 * 
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 * 
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 * 
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 * 
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq + 
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
2430757   +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
2430758   +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
2430759   +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
2430760   +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
2430761   +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
2430762   +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
2430763   +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
2430764   +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
2430765   +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
2430766   +          +    -0.84113790640734 * S_NumDealsPurchases
2430767   +          +    -0.10512672747147 * S_NumDistPurchases
2430768   +          +     0.07268711782494 * S_NumStorePurchases
2430769   +          +     0.57578331257439 * S_NumWebPurchases
2430770   +          +    -1.34334433506558 * S_NumWebVisitsMonth
2430771   +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
2430772   +        S_RMntFrq  +      1.2759588366983 * S_Recency
2430773   +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 * 
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 * 
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts + 
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 * 
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines + 
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases + 
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases + 
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases + 
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 * 
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
2430774   +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
2430775   +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
2430776   +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
2430777   +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
2430778   +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
2430779   +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
2430780   +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
2430781   +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
2430782   +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
2430783   +          +     0.45924983504762 * S_NumDealsPurchases
2430784   +          +    -0.25508041581692 * S_NumDistPurchases
2430785   +          +    -1.34901283858526 * S_NumStorePurchases
2430786   +          +    -0.86388975031663 * S_NumWebPurchases
2430787   +          +     1.86136110391797 * S_NumWebVisitsMonth
2430788   +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
2430789   +        S_RMntFrq  +    -2.06955456943047 * S_Recency
2430790   +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age 
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome + 
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 * 
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts + 
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 * 
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 * 
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 * 
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 * 
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq + 
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
2430791   +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
2430792   +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
2430793   +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
2430794   +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
2430795   +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 * 
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 + 
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 * 
HigherEducationBinary0 ;
2430796   +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
2430797   +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
2430798   +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
2430799   +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
2430800   +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984 
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 + 
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 * 
HigherEducationBinary0 ;
2430801   +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
2430802   +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
2430803   +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
2430804   +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
2430805   +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507 
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 + 
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 * 
HigherEducationBinary0 ;
2430806   +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
2430807   +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
2430808   +        EducationGraduation  +    -0.59708578424036 * EducationMaster
2430809   +          +     0.48853068455666 * Marital_StatusDivorced
2430810   +          +    -0.54903474026465 * Marital_StatusMarried
2430811   +          +    -0.34079188373939 * Marital_StatusSingle
2430812   +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle + 
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation + 
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced + 
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle + 
-0.64602969938868 * Marital_StatusTogether ;
2430813   +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
2430814   +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
2430815   +        EducationGraduation  +     0.19038549912088 * EducationMaster
2430816   +          +    -1.03547689902027 * Marital_StatusDivorced
2430817   +          +     2.42164864610471 * Marital_StatusMarried
2430818   +          +    -1.95342561304942 * Marital_StatusSingle
2430819   +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle + 
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088 
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 * 
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 * 
Marital_StatusTogether ;
2430820   +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
2430821   +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
2430822   +        EducationGraduation  +    -0.31867831184924 * EducationMaster
2430823   +          +      0.4337638747935 * Marital_StatusDivorced
2430824   +          +    -0.38508657017615 * Marital_StatusMarried
2430825   +          +     -0.0160269708326 * Marital_StatusSingle
2430826   +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle + 
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation + 
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced + 
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle + 
-0.57491004270903 * Marital_StatusTogether ;
2430827   +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
2430828   +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
2430829   +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
2430830   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2430831   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2430832   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2430833   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2430834   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2430835   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2430836   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2430837   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2430838   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2430839   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2430840   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2430841   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2430842   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2430843   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2430844   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2430845   +END;
MPRINT(EM_DIAGRAM):   END;
2430846   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2430847   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2430848   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2430849   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2430850   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2430851   +END;
MPRINT(EM_DIAGRAM):   END;
2430852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430853   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2430854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430855   +
2430856   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2430857   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2430858   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2430859   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2430860   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2430861   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2430862   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2430863   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2430864   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2430865   +end;
MPRINT(EM_DIAGRAM):   end;
2430866   +else do;
MPRINT(EM_DIAGRAM):   else do;
2430867   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2430868   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2430869   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2430870   +   end;
MPRINT(EM_DIAGRAM):   end;
2430871   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2430872   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2430873   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2430874   +   end;
MPRINT(EM_DIAGRAM):   end;
2430875   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2430876   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2430877   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2430878   +   end;
MPRINT(EM_DIAGRAM):   end;
2430879   +end;
MPRINT(EM_DIAGRAM):   end;
2430880   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2430881   +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
2430882   +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 + 
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
2430883   +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
2430884   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2430885   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2430886   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2430887   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2430888   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2430889   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2430890   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2430891   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2430892   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2430893   +END;
MPRINT(EM_DIAGRAM):   END;
2430894   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2430895   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2430896   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2430897   +END;
MPRINT(EM_DIAGRAM):   END;
2430898   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2430899   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2430900   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2430901   +END;
MPRINT(EM_DIAGRAM):   END;
2430902   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2430903   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2430904   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2430905   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2430906   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2430907   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2430908   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2430909   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430910   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2430911   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2430912   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2430913   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2430914   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2430915   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2430916   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2430917   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2430918   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2430919   +END;
MPRINT(EM_DIAGRAM):   END;
2430920   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2430921   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2430922   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2430923   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2430924   +* Renaming variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural9;
2430925   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430926   +* Renaming Posterior variables for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural9;
2430927   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430928   +drop AutoNeural9_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar1;
2430929   +AutoNeural9_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar1 = P_DepVar1;
2430930   +drop AutoNeural9_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_P_DepVar0;
2430931   +AutoNeural9_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural9_P_DepVar0 = P_DepVar0;
2430932   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430933   +* Renaming _WARN_ variable for AutoNeural9;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural9;
2430934   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430935   +length AutoNeural9_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural9_WARN_ $4;
2430936   +drop AutoNeural9_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural9_WARN_;
2430937   +AutoNeural9_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural9_WARN_ = _WARN_;
2430938   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430939   +* Ensmbl45: Scoring Code of model 2 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 2 of 5;
2430940   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430941   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430942   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2430943   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2430944   +* NODE: AutoNeural11;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural11;
2430945   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2430946   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2430947   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2430948   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2430949   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2430950   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2430951   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2430952   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2430953   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2430954   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2430955   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2430956   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2430957   +LENGTH _WARN_ $4
2430958   +      F_DepVar  $ 12
2430959   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2430960   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2430961   +
2430962   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2430963   +
2430964   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2430965   +
2430966   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2430967   +
2430968   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2430969   +
2430970   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2430971   +
2430972   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2430973   +
2430974   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2430975   +
2430976   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2430977   +
2430978   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2430979   +
2430980   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2430981   +
2430982   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2430983   +
2430984   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2430985   +
2430986   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2430987   +
2430988   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2430989   +
2430990   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2430991   +
2430992   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2430993   +
2430994   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2430995   +
2430996   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2430997   +
2430998   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2430999   +
2431000   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2431001   +
2431002   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2431003   +
2431004   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2431005   +
2431006   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2431007   +
2431008   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2431009   +
2431010   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2431011   +
2431012   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2431013   +
2431014   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2431015   +
2431016   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2431017   +
2431018   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2431019   +
2431020   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2431021   +
2431022   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2431023   +
2431024   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2431025   +
2431026   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2431027   +
2431028   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2431029   +
2431030   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2431031   +
2431032   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2431033   +
2431034   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2431035   +
2431036   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2431037   +
2431038   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2431039   +
2431040   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2431041   +
2431042   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2431043   +
2431044   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2431045   +
2431046   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2431047   +
2431048   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2431049   +
2431050   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2431051   +
2431052   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2431053   +
2431054   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2431055   +
2431056   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2431057   +
2431058   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2431059   +
2431060   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2431061   +
2431062   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2431063   +
2431064   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2431065   +
2431066   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2431067   +
2431068   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2431069   +
2431070   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2431071   +
2431072   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2431073   +
2431074   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2431075   +
2431076   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2431077   +
2431078   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2431079   +
2431080   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2431081   +
2431082   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2431083   +
2431084   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2431085   +
2431086   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2431087   +
2431088   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2431089   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2431090   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2431091   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2431092   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2431093   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431094   +end;
MPRINT(EM_DIAGRAM):   end;
2431095   +else do;
MPRINT(EM_DIAGRAM):   else do;
2431096   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2431097   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2431098   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2431099   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2431100   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2431101   +   end;
MPRINT(EM_DIAGRAM):   end;
2431102   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2431103   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2431104   +   end;
MPRINT(EM_DIAGRAM):   end;
2431105   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2431106   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2431107   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2431108   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431109   +   end;
MPRINT(EM_DIAGRAM):   end;
2431110   +end;
MPRINT(EM_DIAGRAM):   end;
2431111   +
2431112   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2431113   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2431114   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2431115   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2431116   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2431117   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431118   +end;
MPRINT(EM_DIAGRAM):   end;
2431119   +else do;
MPRINT(EM_DIAGRAM):   else do;
2431120   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2431121   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2431122   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2431123   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2431124   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2431125   +   end;
MPRINT(EM_DIAGRAM):   end;
2431126   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2431127   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2431128   +   end;
MPRINT(EM_DIAGRAM):   end;
2431129   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2431130   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2431131   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2431132   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431133   +   end;
MPRINT(EM_DIAGRAM):   end;
2431134   +end;
MPRINT(EM_DIAGRAM):   end;
2431135   +
2431136   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2431137   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2431138   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2431139   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2431140   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2431141   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431142   +end;
MPRINT(EM_DIAGRAM):   end;
2431143   +else do;
MPRINT(EM_DIAGRAM):   else do;
2431144   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2431145   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2431146   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2431147   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2431148   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2431149   +   end;
MPRINT(EM_DIAGRAM):   end;
2431150   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2431151   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2431152   +   end;
MPRINT(EM_DIAGRAM):   end;
2431153   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2431154   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2431155   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2431156   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431157   +   end;
MPRINT(EM_DIAGRAM):   end;
2431158   +end;
MPRINT(EM_DIAGRAM):   end;
2431159   +
2431160   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2431161   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2431162   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2431163   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2431164   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2431165   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431166   +end;
MPRINT(EM_DIAGRAM):   end;
2431167   +else do;
MPRINT(EM_DIAGRAM):   else do;
2431168   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2431169   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2431170   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2431171   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2431172   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2431173   +   end;
MPRINT(EM_DIAGRAM):   end;
2431174   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2431175   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2431176   +   end;
MPRINT(EM_DIAGRAM):   end;
2431177   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2431178   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2431179   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2431180   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431181   +   end;
MPRINT(EM_DIAGRAM):   end;
2431182   +end;
MPRINT(EM_DIAGRAM):   end;
2431183   +
2431184   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2431185   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2431186   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2431187   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2431188   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2431189   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431190   +end;
MPRINT(EM_DIAGRAM):   end;
2431191   +else do;
MPRINT(EM_DIAGRAM):   else do;
2431192   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2431193   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2431194   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2431195   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2431196   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2431197   +   end;
MPRINT(EM_DIAGRAM):   end;
2431198   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2431199   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2431200   +   end;
MPRINT(EM_DIAGRAM):   end;
2431201   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2431202   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2431203   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2431204   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431205   +   end;
MPRINT(EM_DIAGRAM):   end;
2431206   +end;
MPRINT(EM_DIAGRAM):   end;
2431207   +
2431208   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2431209   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2431210   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2431211   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2431212   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2431213   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431214   +end;
MPRINT(EM_DIAGRAM):   end;
2431215   +else do;
MPRINT(EM_DIAGRAM):   else do;
2431216   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2431217   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2431218   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2431219   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2431220   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2431221   +   end;
MPRINT(EM_DIAGRAM):   end;
2431222   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2431223   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2431224   +   end;
MPRINT(EM_DIAGRAM):   end;
2431225   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2431226   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2431227   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2431228   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431229   +   end;
MPRINT(EM_DIAGRAM):   end;
2431230   +end;
MPRINT(EM_DIAGRAM):   end;
2431231   +
2431232   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2431233   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2431234   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2431235   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2431236   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2431237   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431238   +end;
MPRINT(EM_DIAGRAM):   end;
2431239   +else do;
MPRINT(EM_DIAGRAM):   else do;
2431240   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2431241   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2431242   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2431243   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2431244   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2431245   +   end;
MPRINT(EM_DIAGRAM):   end;
2431246   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2431247   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2431248   +   end;
MPRINT(EM_DIAGRAM):   end;
2431249   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2431250   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2431251   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2431252   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431253   +   end;
MPRINT(EM_DIAGRAM):   end;
2431254   +end;
MPRINT(EM_DIAGRAM):   end;
2431255   +
2431256   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2431257   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2431258   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2431259   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2431260   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2431261   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2431262   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2431263   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2431264   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2431265   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2431266   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2431267   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2431268   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2431269   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431270   +end;
MPRINT(EM_DIAGRAM):   end;
2431271   +else do;
MPRINT(EM_DIAGRAM):   else do;
2431272   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2431273   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2431274   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2431275   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2431276   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2431277   +   end;
MPRINT(EM_DIAGRAM):   end;
2431278   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2431279   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2431280   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2431281   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2431282   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2431283   +   end;
MPRINT(EM_DIAGRAM):   end;
2431284   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2431285   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2431286   +   end;
MPRINT(EM_DIAGRAM):   end;
2431287   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2431288   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2431289   +   end;
MPRINT(EM_DIAGRAM):   end;
2431290   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2431291   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2431292   +   end;
MPRINT(EM_DIAGRAM):   end;
2431293   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2431294   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2431295   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2431296   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2431297   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2431298   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2431299   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431300   +   end;
MPRINT(EM_DIAGRAM):   end;
2431301   +end;
MPRINT(EM_DIAGRAM):   end;
2431302   +
2431303   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2431304   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2431305   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2431306   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2431307   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2431308   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2431309   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2431310   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2431311   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2431312   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2431313   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2431314   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2431315   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2431316   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2431317   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431318   +end;
MPRINT(EM_DIAGRAM):   end;
2431319   +else do;
MPRINT(EM_DIAGRAM):   else do;
2431320   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2431321   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2431322   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2431323   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2431324   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2431325   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2431326   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2431327   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2431328   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2431329   +         end;
MPRINT(EM_DIAGRAM):   end;
2431330   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2431331   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2431332   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2431333   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2431334   +            end;
MPRINT(EM_DIAGRAM):   end;
2431335   +         end;
MPRINT(EM_DIAGRAM):   end;
2431336   +      end;
MPRINT(EM_DIAGRAM):   end;
2431337   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2431338   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2431339   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2431340   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2431341   +         end;
MPRINT(EM_DIAGRAM):   end;
2431342   +      end;
MPRINT(EM_DIAGRAM):   end;
2431343   +   end;
MPRINT(EM_DIAGRAM):   end;
2431344   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2431345   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2431346   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2431347   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2431348   +      end;
MPRINT(EM_DIAGRAM):   end;
2431349   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2431350   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2431351   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2431352   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2431353   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2431354   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2431355   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2431356   +         end;
MPRINT(EM_DIAGRAM):   end;
2431357   +      end;
MPRINT(EM_DIAGRAM):   end;
2431358   +   end;
MPRINT(EM_DIAGRAM):   end;
2431359   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2431360   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2431361   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2431362   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2431363   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2431364   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2431365   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431366   +   end;
MPRINT(EM_DIAGRAM):   end;
2431367   +end;
MPRINT(EM_DIAGRAM):   end;
2431368   +
2431369   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431370   +*** Checking missing input Interval
2431371   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2431372   +
2431373   +IF NMISS(
2431374   +   AcceptedCmpTotal ,
2431375   +   Age ,
2431376   +   Frq ,
2431377   +   Income ,
2431378   +   Kidhome ,
2431379   +   Mnt ,
2431380   +   MntFishProducts ,
2431381   +   MntFruits ,
2431382   +   MntGoldProds ,
2431383   +   MntMeatProducts ,
2431384   +   MntSweetProducts ,
2431385   +   MntWines ,
2431386   +   MonthsAsCustomer ,
2431387   +   NumCatalogPurchases ,
2431388   +   NumDealsPurchases ,
2431389   +   NumDistPurchases ,
2431390   +   NumStorePurchases ,
2431391   +   NumWebPurchases ,
2431392   +   NumWebVisitsMonth ,
2431393   +   RFMstat ,
2431394   +   RMntFrq ,
2431395   +   Recency ,
2431396   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2431397   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2431398   +
2431399   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2431400   +END;
MPRINT(EM_DIAGRAM):   END;
2431401   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431402   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2431403   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431404   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2431405   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2431406   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2431407   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2431408   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2431409   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2431410   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2431411   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2431412   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2431413   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2431414   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2431415   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2431416   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2431417   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2431418   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2431419   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2431420   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2431421   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2431422   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2431423   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2431424   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2431425   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2431426   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2431427   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2431428   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2431429   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2431430   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2431431   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2431432   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2431433   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2431434   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2431435   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2431436   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2431437   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2431438   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2431439   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2431440   +END;
MPRINT(EM_DIAGRAM):   END;
2431441   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2431442   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2431443   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2431444   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2431445   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2431446   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2431447   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2431448   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2431449   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2431450   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2431451   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2431452   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2431453   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2431454   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2431455   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2431456   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2431457   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2431458   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2431459   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2431460   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2431461   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2431462   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2431463   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2431464   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2431465   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2431466   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2431467   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2431468   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2431469   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2431470   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2431471   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2431472   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2431473   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2431474   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2431475   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2431476   +   ELSE S_NumCatalogPurchases
2431477   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2431478   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2431479   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2431480   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2431481   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2431482   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2431483   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2431484   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2431485   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2431486   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2431487   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2431488   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2431489   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2431490   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2431491   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2431492   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2431493   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2431494   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2431495   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2431496   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2431497   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2431498   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2431499   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2431500   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2431501   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2431502   +END;
MPRINT(EM_DIAGRAM):   END;
2431503   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431504   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2431505   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431506   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431507   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2431508   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431509   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431510   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2431511   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431512   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2431513   +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
2431514   +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
2431515   +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
2431516   +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
2431517   +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
2431518   +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
2431519   +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
2431520   +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
2431521   +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
2431522   +          +     1.32037113020393 * S_NumDealsPurchases
2431523   +          +     0.42879249227132 * S_NumDistPurchases
2431524   +          +    -0.89190172778783 * S_NumStorePurchases
2431525   +          +    -0.87975442613962 * S_NumWebPurchases
2431526   +          +     2.98977282825831 * S_NumWebVisitsMonth
2431527   +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
2431528   +        S_RMntFrq  +    -2.53833222281652 * S_Recency
2431529   +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 * 
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 * 
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts + 
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 * 
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines + 
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases + 
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases + 
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases + 
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 * 
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
2431530   +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
2431531   +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
2431532   +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
2431533   +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
2431534   +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
2431535   +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
2431536   +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
2431537   +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
2431538   +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
2431539   +          +    -1.16737670931605 * S_NumDealsPurchases
2431540   +          +     0.08205195039242 * S_NumDistPurchases
2431541   +          +    -0.65367044520084 * S_NumStorePurchases
2431542   +          +     2.39693083674757 * S_NumWebPurchases
2431543   +          +     0.18432526469897 * S_NumWebVisitsMonth
2431544   +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
2431545   +        S_RMntFrq  +    -0.12214066685673 * S_Recency
2431546   +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 * 
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 * 
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts + 
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 * 
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines + 
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases + 
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases + 
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases + 
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 * 
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
2431547   +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
2431548   +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
2431549   +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
2431550   +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
2431551   +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
2431552   +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
2431553   +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
2431554   +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
2431555   +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
2431556   +          +     0.76616480025024 * S_NumDealsPurchases
2431557   +          +     0.42823368706255 * S_NumDistPurchases
2431558   +          +    -1.16998364854907 * S_NumStorePurchases
2431559   +          +     -1.0841896541746 * S_NumWebPurchases
2431560   +          +     2.74837744375079 * S_NumWebVisitsMonth
2431561   +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
2431562   +        S_RMntFrq  +    -5.13438280616518 * S_Recency
2431563   +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 * 
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 * 
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts + 
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 * 
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines + 
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases + 
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases + 
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases + 
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 * 
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
2431564   +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
2431565   +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
2431566   +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
2431567   +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
2431568   +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
2431569   +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
2431570   +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
2431571   +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
2431572   +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
2431573   +          +     0.78421010501058 * S_NumDealsPurchases
2431574   +          +     0.01075885160671 * S_NumDistPurchases
2431575   +          +    -1.99395040717832 * S_NumStorePurchases
2431576   +          +    -1.02908330834262 * S_NumWebPurchases
2431577   +          +     2.79163466516477 * S_NumWebVisitsMonth
2431578   +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
2431579   +        S_RMntFrq  +     -2.0907247135068 * S_Recency
2431580   +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 * 
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 * 
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts + 
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 * 
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines + 
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases + 
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases + 
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases + 
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 * 
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
2431581   +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
2431582   +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
2431583   +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
2431584   +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
2431585   +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
2431586   +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
2431587   +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
2431588   +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
2431589   +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
2431590   +          +    -1.04219068390022 * S_NumDealsPurchases
2431591   +          +    -0.45770204483973 * S_NumDistPurchases
2431592   +          +    -0.04941442229195 * S_NumStorePurchases
2431593   +          +     0.67187353161183 * S_NumWebPurchases
2431594   +          +     2.01907760553871 * S_NumWebVisitsMonth
2431595   +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
2431596   +        S_RMntFrq  +    -1.12913051410394 * S_Recency
2431597   +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 * 
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 * 
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332 
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts + 
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 * 
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 * 
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 * 
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 * 
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq + 
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
2431598   +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
2431599   +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
2431600   +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
2431601   +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
2431602   +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168 
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 + 
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 * 
HigherEducationBinary0 ;
2431603   +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
2431604   +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
2431605   +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
2431606   +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
2431607   +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 * 
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 + 
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 * 
HigherEducationBinary0 ;
2431608   +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
2431609   +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
2431610   +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
2431611   +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
2431612   +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388 
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 + 
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 * 
HigherEducationBinary0 ;
2431613   +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
2431614   +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
2431615   +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
2431616   +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
2431617   +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387 
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 + 
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 * 
HigherEducationBinary0 ;
2431618   +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
2431619   +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
2431620   +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
2431621   +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
2431622   +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 * 
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 + 
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 * 
HigherEducationBinary0 ;
2431623   +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
2431624   +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
2431625   +        EducationGraduation  +     0.09596442360106 * EducationMaster
2431626   +          +     2.58907527032049 * Marital_StatusDivorced
2431627   +          +    -2.45549008158921 * Marital_StatusMarried
2431628   +          +     2.56223650840768 * Marital_StatusSingle
2431629   +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle + 
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106 
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 * 
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 * 
Marital_StatusTogether ;
2431630   +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
2431631   +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
2431632   +        EducationGraduation  +     0.29249899969052 * EducationMaster
2431633   +          +     0.83917299191368 * Marital_StatusDivorced
2431634   +          +    -0.62624692699191 * Marital_StatusMarried
2431635   +          +    -0.22585060624911 * Marital_StatusSingle
2431636   +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle + 
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052 
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 * 
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 * 
Marital_StatusTogether ;
2431637   +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
2431638   +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
2431639   +        EducationGraduation  +     -1.3163356801876 * EducationMaster
2431640   +          +    -0.65063506696715 * Marital_StatusDivorced
2431641   +          +    -2.37495865381256 * Marital_StatusMarried
2431642   +          +    -0.54954654146904 * Marital_StatusSingle
2431643   +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle + 
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876 
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 * 
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 * 
Marital_StatusTogether ;
2431644   +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
2431645   +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
2431646   +        EducationGraduation  +     0.07916018399549 * EducationMaster
2431647   +          +     0.16185824798364 * Marital_StatusDivorced
2431648   +          +    -0.08142416735136 * Marital_StatusMarried
2431649   +          +    -0.20392270385969 * Marital_StatusSingle
2431650   +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle + 
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation + 
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced + 
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle + 
-0.16702436233017 * Marital_StatusTogether ;
2431651   +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
2431652   +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
2431653   +        EducationGraduation  +     0.28107355175103 * EducationMaster
2431654   +          +      -0.516522631078 * Marital_StatusDivorced
2431655   +          +    -0.61661247789976 * Marital_StatusMarried
2431656   +          +    -0.99533130308294 * Marital_StatusSingle
2431657   +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle + 
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation + 
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced + 
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle + 
-0.36897004084592 * Marital_StatusTogether ;
2431658   +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
2431659   +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
2431660   +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
2431661   +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
2431662   +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
2431663   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2431664   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2431665   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2431666   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2431667   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2431668   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2431669   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2431670   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2431671   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2431672   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2431673   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2431674   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2431675   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2431676   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2431677   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2431678   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2431679   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2431680   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2431681   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2431682   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2431683   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2431684   +END;
MPRINT(EM_DIAGRAM):   END;
2431685   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2431686   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2431687   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2431688   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2431689   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2431690   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2431691   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2431692   +END;
MPRINT(EM_DIAGRAM):   END;
2431693   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431694   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2431695   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431696   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2431697   +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
2431698   +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
2431699   +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
2431700   +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
2431701   +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
2431702   +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
2431703   +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
2431704   +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
2431705   +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
2431706   +          +    -0.03801022287706 * S_NumDealsPurchases
2431707   +          +    -1.50723574966419 * S_NumDistPurchases
2431708   +          +    -0.21514545448485 * S_NumStorePurchases
2431709   +          +    -0.50179555233865 * S_NumWebPurchases
2431710   +          +    -0.68226572560161 * S_NumWebVisitsMonth
2431711   +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
2431712   +        S_RMntFrq  +     0.78178939203913 * S_Recency
2431713   +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 * 
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome 
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 * 
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts + 
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 * 
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 * 
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 * 
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 * 
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq + 
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
2431714   +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
2431715   +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
2431716   +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
2431717   +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
2431718   +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
2431719   +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
2431720   +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
2431721   +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
2431722   +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
2431723   +          +     0.70551335536975 * S_NumDealsPurchases
2431724   +          +     0.02824488988803 * S_NumDistPurchases
2431725   +          +    -0.47958123842808 * S_NumStorePurchases
2431726   +          +     1.04559003239583 * S_NumWebPurchases
2431727   +          +    -0.58386087813772 * S_NumWebVisitsMonth
2431728   +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
2431729   +        S_RMntFrq  +    -0.05848082255965 * S_Recency
2431730   +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 * 
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 * 
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298 
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts + 
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 * 
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 * 
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 * 
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 * 
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq + 
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
2431731   +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
2431732   +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
2431733   +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
2431734   +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
2431735   +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
2431736   +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
2431737   +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
2431738   +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
2431739   +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
2431740   +          +    -0.28907339261907 * S_NumDealsPurchases
2431741   +          +     0.04310505858352 * S_NumDistPurchases
2431742   +          +    -0.99594604666889 * S_NumStorePurchases
2431743   +          +    -0.58870940220114 * S_NumWebPurchases
2431744   +          +     0.84018399925148 * S_NumWebVisitsMonth
2431745   +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
2431746   +        S_RMntFrq  +    -1.47730936960999 * S_Recency
2431747   +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 * 
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome 
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 * 
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts + 
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 * 
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 * 
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 * 
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 * 
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq + 
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
2431748   +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
2431749   +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
2431750   +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
2431751   +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
2431752   +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
2431753   +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
2431754   +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
2431755   +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
2431756   +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
2431757   +          +     0.52917289878604 * S_NumDealsPurchases
2431758   +          +     0.30974142545809 * S_NumDistPurchases
2431759   +          +    -0.36081450643799 * S_NumStorePurchases
2431760   +          +    -0.28418053386759 * S_NumWebPurchases
2431761   +          +    -0.80759462497096 * S_NumWebVisitsMonth
2431762   +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
2431763   +        S_RMntFrq  +    -0.02418118976368 * S_Recency
2431764   +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 * 
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome 
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 * 
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts + 
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 * 
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 * 
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 * 
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 * 
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq + 
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
2431765   +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
2431766   +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
2431767   +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
2431768   +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
2431769   +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
2431770   +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
2431771   +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
2431772   +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
2431773   +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
2431774   +          +    -0.47500053723253 * S_NumDealsPurchases
2431775   +          +     0.41421086319635 * S_NumDistPurchases
2431776   +          +     0.69664835428137 * S_NumStorePurchases
2431777   +          +     0.66359306812968 * S_NumWebPurchases
2431778   +          +     0.77931462528741 * S_NumWebVisitsMonth
2431779   +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
2431780   +        S_RMntFrq  +    -1.91226042675868 * S_Recency
2431781   +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 * 
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome 
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 * 
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts + 
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 * 
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 * 
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 * 
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 * 
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq + 
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
2431782   +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
2431783   +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
2431784   +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
2431785   +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
2431786   +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 * 
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 + 
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 * 
HigherEducationBinary0 ;
2431787   +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
2431788   +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
2431789   +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
2431790   +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
2431791   +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 * 
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 + 
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 * 
HigherEducationBinary0 ;
2431792   +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
2431793   +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
2431794   +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
2431795   +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
2431796   +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 * 
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 + 
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 * 
HigherEducationBinary0 ;
2431797   +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
2431798   +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
2431799   +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
2431800   +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
2431801   +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 * 
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 + 
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 * 
HigherEducationBinary0 ;
2431802   +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
2431803   +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
2431804   +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
2431805   +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
2431806   +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 * 
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 + 
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 * 
HigherEducationBinary0 ;
2431807   +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
2431808   +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
2431809   +        EducationGraduation  +     0.89392741557091 * EducationMaster
2431810   +          +    -1.34742914042312 * Marital_StatusDivorced
2431811   +          +    -0.75378934918763 * Marital_StatusMarried
2431812   +          +    -1.85411678929217 * Marital_StatusSingle
2431813   +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle + 
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091 
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 * 
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 * 
Marital_StatusTogether ;
2431814   +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
2431815   +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
2431816   +        EducationGraduation  +      1.4602485898642 * EducationMaster
2431817   +          +     0.47958659206261 * Marital_StatusDivorced
2431818   +          +     -0.9665584294045 * Marital_StatusMarried
2431819   +          +      0.9733784530538 * Marital_StatusSingle
2431820   +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle + 
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642 
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 * 
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 * 
Marital_StatusTogether ;
2431821   +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
2431822   +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
2431823   +        EducationGraduation  +     1.49772418974753 * EducationMaster
2431824   +          +    -0.56894207908284 * Marital_StatusDivorced
2431825   +          +    -0.96715106987195 * Marital_StatusMarried
2431826   +          +     1.18678144721443 * Marital_StatusSingle
2431827   +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle + 
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation + 
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced + 
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle + 
1.05940264255347 * Marital_StatusTogether ;
2431828   +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
2431829   +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
2431830   +        EducationGraduation  +    -2.01250798855133 * EducationMaster
2431831   +          +     -0.6061959224661 * Marital_StatusDivorced
2431832   +          +     0.03495844244684 * Marital_StatusMarried
2431833   +          +    -0.63896361063244 * Marital_StatusSingle
2431834   +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle + 
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation + 
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced + 
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle + 
0.74357887057422 * Marital_StatusTogether ;
2431835   +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
2431836   +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
2431837   +        EducationGraduation  +     -0.1598988619204 * EducationMaster
2431838   +          +     0.82178907301319 * Marital_StatusDivorced
2431839   +          +     1.69543553114589 * Marital_StatusMarried
2431840   +          +     -2.1272067363559 * Marital_StatusSingle
2431841   +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle + 
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204 
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 * 
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 * 
Marital_StatusTogether ;
2431842   +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
2431843   +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
2431844   +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
2431845   +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
2431846   +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
2431847   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2431848   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2431849   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2431850   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2431851   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2431852   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2431853   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2431854   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2431855   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2431856   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2431857   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2431858   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2431859   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2431860   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2431861   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2431862   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2431863   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2431864   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2431865   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2431866   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2431867   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2431868   +END;
MPRINT(EM_DIAGRAM):   END;
2431869   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2431870   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2431871   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2431872   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2431873   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2431874   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2431875   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2431876   +END;
MPRINT(EM_DIAGRAM):   END;
2431877   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431878   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2431879   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431880   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2431881   +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
2431882   +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
2431883   +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 + 
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 + 
-1.38760297105319 * H1x1_6 ;
2431884   +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
2431885   +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
2431886   +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 + 
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 + 
2.71965753640902 * H1x1_6 ;
2431887   +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
2431888   +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
2431889   +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 + 
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 + 
-0.94725163293394 * H1x1_6 ;
2431890   +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
2431891   +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
2431892   +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 + 
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 + 
0.66585878141635 * H1x1_6 ;
2431893   +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
2431894   +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
2431895   +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 + 
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 + 
3.57592566919388 * H1x1_6 ;
2431896   +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
2431897   +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
2431898   +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 + 
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 + 
-0.32006241006585 * H1x1_6 ;
2431899   +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
2431900   +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
2431901   +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
2431902   +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 * 
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 + 
-0.07237646966438 * H1x2_6 ;
2431903   +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
2431904   +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
2431905   +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
2431906   +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2 
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 + 
0.35471332651631 * H1x2_6 ;
2431907   +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
2431908   +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
2431909   +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
2431910   +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2 
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 + 
0.5218140468737 * H1x2_6 ;
2431911   +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
2431912   +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
2431913   +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
2431914   +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2 
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 + 
-0.67920869444907 * H1x2_6 ;
2431915   +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
2431916   +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
2431917   +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
2431918   +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2 
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 + 
1.1175989027563 * H1x2_6 ;
2431919   +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
2431920   +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
2431921   +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
2431922   +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 * 
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5 
+ 1.54589390085972 * H1x2_6 ;
2431923   +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
2431924   +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
2431925   +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
2431926   +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
2431927   +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
2431928   +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
2431929   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2431930   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2431931   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2431932   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2431933   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2431934   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2431935   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2431936   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2431937   +END;
MPRINT(EM_DIAGRAM):   END;
2431938   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2431939   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2431940   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2431941   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2431942   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2431943   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2431944   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2431945   +END;
MPRINT(EM_DIAGRAM):   END;
2431946   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431947   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2431948   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2431949   +
2431950   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2431951   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2431952   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2431953   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2431954   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2431955   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2431956   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2431957   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2431958   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2431959   +end;
MPRINT(EM_DIAGRAM):   end;
2431960   +else do;
MPRINT(EM_DIAGRAM):   else do;
2431961   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2431962   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2431963   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2431964   +   end;
MPRINT(EM_DIAGRAM):   end;
2431965   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2431966   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2431967   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2431968   +   end;
MPRINT(EM_DIAGRAM):   end;
2431969   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2431970   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2431971   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2431972   +   end;
MPRINT(EM_DIAGRAM):   end;
2431973   +end;
MPRINT(EM_DIAGRAM):   end;
2431974   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2431975   +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
2431976   +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
2431977   +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 + 
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 + 
1.54726164498938 * H2x1_6 ;
2431978   +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
2431979   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2431980   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2431981   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2431982   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2431983   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2431984   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2431985   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2431986   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2431987   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2431988   +END;
MPRINT(EM_DIAGRAM):   END;
2431989   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2431990   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2431991   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2431992   +END;
MPRINT(EM_DIAGRAM):   END;
2431993   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2431994   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2431995   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2431996   +END;
MPRINT(EM_DIAGRAM):   END;
2431997   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2431998   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2431999   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2432000   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2432001   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2432002   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2432003   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2432004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432005   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2432006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432007   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2432008   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2432009   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2432010   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2432011   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2432012   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2432013   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2432014   +END;
MPRINT(EM_DIAGRAM):   END;
2432015   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2432016   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2432017   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2432018   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2432019   +* Renaming variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural11;
2432020   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2432021   +* Renaming Posterior variables for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural11;
2432022   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2432023   +drop AutoNeural11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar1;
2432024   +AutoNeural11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar1 = P_DepVar1;
2432025   +drop AutoNeural11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_P_DepVar0;
2432026   +AutoNeural11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural11_P_DepVar0 = P_DepVar0;
2432027   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2432028   +* Renaming _WARN_ variable for AutoNeural11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural11;
2432029   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2432030   +length AutoNeural11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural11_WARN_ $4;
2432031   +drop AutoNeural11_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural11_WARN_;
2432032   +AutoNeural11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural11_WARN_ = _WARN_;
2432033   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2432034   +* Ensmbl45: Scoring Code of model 3 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 3 of 5;
2432035   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2432036   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2432037   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2432038   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2432039   +* NODE: AutoNeural12;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural12;
2432040   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2432041   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2432042   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2432043   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2432044   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2432045   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2432046   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2432047   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2432048   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2432049   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2432050   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2432051   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2432052   +LENGTH _WARN_ $4
2432053   +      F_DepVar  $ 12
2432054   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2432055   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2432056   +
2432057   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2432058   +
2432059   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2432060   +
2432061   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2432062   +
2432063   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2432064   +
2432065   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2432066   +
2432067   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2432068   +
2432069   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2432070   +
2432071   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2432072   +
2432073   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2432074   +
2432075   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2432076   +
2432077   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2432078   +
2432079   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2432080   +
2432081   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2432082   +
2432083   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2432084   +
2432085   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2432086   +
2432087   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2432088   +
2432089   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2432090   +
2432091   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2432092   +
2432093   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2432094   +
2432095   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2432096   +
2432097   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2432098   +
2432099   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2432100   +
2432101   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2432102   +
2432103   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2432104   +
2432105   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2432106   +
2432107   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2432108   +
2432109   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2432110   +
2432111   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2432112   +
2432113   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2432114   +
2432115   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2432116   +
2432117   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2432118   +
2432119   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2432120   +
2432121   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2432122   +
2432123   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2432124   +
2432125   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2432126   +
2432127   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2432128   +
2432129   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2432130   +
2432131   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2432132   +
2432133   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2432134   +
2432135   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2432136   +
2432137   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2432138   +
2432139   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2432140   +
2432141   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2432142   +
2432143   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2432144   +
2432145   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2432146   +
2432147   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2432148   +
2432149   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2432150   +
2432151   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2432152   +
2432153   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2432154   +
2432155   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2432156   +
2432157   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2432158   +
2432159   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2432160   +
2432161   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2432162   +
2432163   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2432164   +
2432165   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2432166   +
2432167   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2432168   +
2432169   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2432170   +
2432171   +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
2432172   +
2432173   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2432174   +
2432175   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2432176   +
2432177   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2432178   +
2432179   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2432180   +
2432181   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2432182   +
2432183   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2432184   +
2432185   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
2432186   +
2432187   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2432188   +
2432189   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2432190   +
2432191   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2432192   +
2432193   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2432194   +
2432195   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2432196   +
2432197   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2432198   +
2432199   +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
2432200   +
2432201   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2432202   +
2432203   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2432204   +
2432205   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2432206   +
2432207   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2432208   +
2432209   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2432210   +
2432211   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2432212   +
2432213   +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
2432214   +
2432215   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2432216   +
2432217   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2432218   +
2432219   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2432220   +
2432221   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2432222   +
2432223   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2432224   +
2432225   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2432226   +
2432227   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2432228   +
2432229   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2432230   +
2432231   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2432232   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2432233   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2432234   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2432235   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2432236   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432237   +end;
MPRINT(EM_DIAGRAM):   end;
2432238   +else do;
MPRINT(EM_DIAGRAM):   else do;
2432239   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2432240   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2432241   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2432242   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2432243   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2432244   +   end;
MPRINT(EM_DIAGRAM):   end;
2432245   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2432246   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2432247   +   end;
MPRINT(EM_DIAGRAM):   end;
2432248   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2432249   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2432250   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2432251   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432252   +   end;
MPRINT(EM_DIAGRAM):   end;
2432253   +end;
MPRINT(EM_DIAGRAM):   end;
2432254   +
2432255   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2432256   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2432257   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2432258   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2432259   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2432260   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432261   +end;
MPRINT(EM_DIAGRAM):   end;
2432262   +else do;
MPRINT(EM_DIAGRAM):   else do;
2432263   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2432264   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2432265   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2432266   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2432267   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2432268   +   end;
MPRINT(EM_DIAGRAM):   end;
2432269   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2432270   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2432271   +   end;
MPRINT(EM_DIAGRAM):   end;
2432272   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2432273   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2432274   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2432275   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432276   +   end;
MPRINT(EM_DIAGRAM):   end;
2432277   +end;
MPRINT(EM_DIAGRAM):   end;
2432278   +
2432279   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2432280   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2432281   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2432282   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2432283   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2432284   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432285   +end;
MPRINT(EM_DIAGRAM):   end;
2432286   +else do;
MPRINT(EM_DIAGRAM):   else do;
2432287   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2432288   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2432289   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2432290   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2432291   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2432292   +   end;
MPRINT(EM_DIAGRAM):   end;
2432293   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2432294   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2432295   +   end;
MPRINT(EM_DIAGRAM):   end;
2432296   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2432297   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2432298   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2432299   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432300   +   end;
MPRINT(EM_DIAGRAM):   end;
2432301   +end;
MPRINT(EM_DIAGRAM):   end;
2432302   +
2432303   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2432304   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2432305   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2432306   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2432307   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2432308   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432309   +end;
MPRINT(EM_DIAGRAM):   end;
2432310   +else do;
MPRINT(EM_DIAGRAM):   else do;
2432311   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2432312   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2432313   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2432314   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2432315   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2432316   +   end;
MPRINT(EM_DIAGRAM):   end;
2432317   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2432318   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2432319   +   end;
MPRINT(EM_DIAGRAM):   end;
2432320   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2432321   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2432322   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2432323   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432324   +   end;
MPRINT(EM_DIAGRAM):   end;
2432325   +end;
MPRINT(EM_DIAGRAM):   end;
2432326   +
2432327   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2432328   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2432329   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2432330   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2432331   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2432332   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432333   +end;
MPRINT(EM_DIAGRAM):   end;
2432334   +else do;
MPRINT(EM_DIAGRAM):   else do;
2432335   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2432336   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2432337   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2432338   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2432339   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2432340   +   end;
MPRINT(EM_DIAGRAM):   end;
2432341   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2432342   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2432343   +   end;
MPRINT(EM_DIAGRAM):   end;
2432344   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2432345   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2432346   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2432347   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432348   +   end;
MPRINT(EM_DIAGRAM):   end;
2432349   +end;
MPRINT(EM_DIAGRAM):   end;
2432350   +
2432351   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2432352   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2432353   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2432354   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2432355   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2432356   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432357   +end;
MPRINT(EM_DIAGRAM):   end;
2432358   +else do;
MPRINT(EM_DIAGRAM):   else do;
2432359   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2432360   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2432361   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2432362   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2432363   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2432364   +   end;
MPRINT(EM_DIAGRAM):   end;
2432365   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2432366   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2432367   +   end;
MPRINT(EM_DIAGRAM):   end;
2432368   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2432369   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2432370   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2432371   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432372   +   end;
MPRINT(EM_DIAGRAM):   end;
2432373   +end;
MPRINT(EM_DIAGRAM):   end;
2432374   +
2432375   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2432376   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2432377   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2432378   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2432379   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2432380   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432381   +end;
MPRINT(EM_DIAGRAM):   end;
2432382   +else do;
MPRINT(EM_DIAGRAM):   else do;
2432383   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2432384   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2432385   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2432386   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2432387   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2432388   +   end;
MPRINT(EM_DIAGRAM):   end;
2432389   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2432390   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2432391   +   end;
MPRINT(EM_DIAGRAM):   end;
2432392   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2432393   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2432394   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2432395   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432396   +   end;
MPRINT(EM_DIAGRAM):   end;
2432397   +end;
MPRINT(EM_DIAGRAM):   end;
2432398   +
2432399   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2432400   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2432401   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2432402   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2432403   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2432404   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2432405   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2432406   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2432407   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2432408   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2432409   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2432410   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2432411   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2432412   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432413   +end;
MPRINT(EM_DIAGRAM):   end;
2432414   +else do;
MPRINT(EM_DIAGRAM):   else do;
2432415   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2432416   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2432417   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2432418   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2432419   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2432420   +   end;
MPRINT(EM_DIAGRAM):   end;
2432421   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2432422   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2432423   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2432424   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2432425   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2432426   +   end;
MPRINT(EM_DIAGRAM):   end;
2432427   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2432428   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2432429   +   end;
MPRINT(EM_DIAGRAM):   end;
2432430   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2432431   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2432432   +   end;
MPRINT(EM_DIAGRAM):   end;
2432433   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2432434   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2432435   +   end;
MPRINT(EM_DIAGRAM):   end;
2432436   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2432437   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2432438   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2432439   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2432440   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2432441   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2432442   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432443   +   end;
MPRINT(EM_DIAGRAM):   end;
2432444   +end;
MPRINT(EM_DIAGRAM):   end;
2432445   +
2432446   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2432447   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2432448   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2432449   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2432450   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2432451   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2432452   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2432453   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2432454   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2432455   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2432456   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2432457   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2432458   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2432459   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2432460   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432461   +end;
MPRINT(EM_DIAGRAM):   end;
2432462   +else do;
MPRINT(EM_DIAGRAM):   else do;
2432463   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2432464   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2432465   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2432466   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2432467   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2432468   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2432469   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2432470   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2432471   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2432472   +         end;
MPRINT(EM_DIAGRAM):   end;
2432473   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2432474   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2432475   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2432476   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2432477   +            end;
MPRINT(EM_DIAGRAM):   end;
2432478   +         end;
MPRINT(EM_DIAGRAM):   end;
2432479   +      end;
MPRINT(EM_DIAGRAM):   end;
2432480   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2432481   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2432482   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2432483   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2432484   +         end;
MPRINT(EM_DIAGRAM):   end;
2432485   +      end;
MPRINT(EM_DIAGRAM):   end;
2432486   +   end;
MPRINT(EM_DIAGRAM):   end;
2432487   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2432488   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2432489   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2432490   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2432491   +      end;
MPRINT(EM_DIAGRAM):   end;
2432492   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2432493   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2432494   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2432495   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2432496   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2432497   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2432498   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2432499   +         end;
MPRINT(EM_DIAGRAM):   end;
2432500   +      end;
MPRINT(EM_DIAGRAM):   end;
2432501   +   end;
MPRINT(EM_DIAGRAM):   end;
2432502   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2432503   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2432504   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2432505   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2432506   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2432507   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2432508   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432509   +   end;
MPRINT(EM_DIAGRAM):   end;
2432510   +end;
MPRINT(EM_DIAGRAM):   end;
2432511   +
2432512   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432513   +*** Checking missing input Interval
2432514   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2432515   +
2432516   +IF NMISS(
2432517   +   AcceptedCmpTotal ,
2432518   +   Age ,
2432519   +   Frq ,
2432520   +   Income ,
2432521   +   Kidhome ,
2432522   +   Mnt ,
2432523   +   MntFishProducts ,
2432524   +   MntFruits ,
2432525   +   MntGoldProds ,
2432526   +   MntMeatProducts ,
2432527   +   MntSweetProducts ,
2432528   +   MntWines ,
2432529   +   MonthsAsCustomer ,
2432530   +   NumCatalogPurchases ,
2432531   +   NumDealsPurchases ,
2432532   +   NumDistPurchases ,
2432533   +   NumStorePurchases ,
2432534   +   NumWebPurchases ,
2432535   +   NumWebVisitsMonth ,
2432536   +   RFMstat ,
2432537   +   RMntFrq ,
2432538   +   Recency ,
2432539   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2432540   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2432541   +
2432542   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2432543   +END;
MPRINT(EM_DIAGRAM):   END;
2432544   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432545   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2432546   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432547   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2432548   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2432549   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2432550   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2432551   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2432552   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2432553   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2432554   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2432555   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2432556   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2432557   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2432558   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2432559   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2432560   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2432561   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2432562   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2432563   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2432564   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2432565   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2432566   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2432567   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2432568   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2432569   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2432570   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2432571   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2432572   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2432573   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2432574   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2432575   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2432576   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2432577   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2432578   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2432579   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2432580   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2432581   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2432582   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2432583   +END;
MPRINT(EM_DIAGRAM):   END;
2432584   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2432585   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2432586   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2432587   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2432588   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2432589   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2432590   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2432591   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2432592   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2432593   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2432594   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2432595   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2432596   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2432597   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2432598   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2432599   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2432600   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2432601   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2432602   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2432603   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2432604   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2432605   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2432606   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2432607   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2432608   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2432609   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2432610   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2432611   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2432612   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2432613   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2432614   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2432615   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2432616   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2432617   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2432618   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2432619   +   ELSE S_NumCatalogPurchases
2432620   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2432621   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2432622   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2432623   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2432624   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2432625   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2432626   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2432627   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2432628   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2432629   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2432630   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2432631   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2432632   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2432633   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2432634   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2432635   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2432636   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2432637   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2432638   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2432639   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2432640   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2432641   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2432642   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2432643   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2432644   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2432645   +END;
MPRINT(EM_DIAGRAM):   END;
2432646   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432647   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2432648   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432649   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432650   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2432651   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432652   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432653   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2432654   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432655   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2432656   +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
2432657   +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
2432658   +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
2432659   +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
2432660   +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
2432661   +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
2432662   +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
2432663   +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
2432664   +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
2432665   +          +    -1.18466001117424 * S_NumDealsPurchases
2432666   +          +     -0.1371252133567 * S_NumDistPurchases
2432667   +          +     1.92719775731123 * S_NumStorePurchases
2432668   +          +     1.23184249192116 * S_NumWebPurchases
2432669   +          +    -1.55583843197424 * S_NumWebVisitsMonth
2432670   +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
2432671   +        S_RMntFrq  +     1.63863392145333 * S_Recency
2432672   +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 * 
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome 
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 * 
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts + 
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 * 
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 * 
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 * 
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 * 
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq + 
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
2432673   +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
2432674   +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
2432675   +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
2432676   +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
2432677   +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
2432678   +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
2432679   +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
2432680   +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
2432681   +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
2432682   +          +     0.63616523425865 * S_NumDealsPurchases
2432683   +          +     0.45460056261546 * S_NumDistPurchases
2432684   +          +    -0.61009999017225 * S_NumStorePurchases
2432685   +          +     1.85193755731081 * S_NumWebPurchases
2432686   +          +    -2.47698404964319 * S_NumWebVisitsMonth
2432687   +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
2432688   +        S_RMntFrq  +     1.07962222419254 * S_Recency
2432689   +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 * 
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 * 
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts + 
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 * 
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines + 
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases + 
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases + 
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases + 
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 * 
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
2432690   +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
2432691   +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
2432692   +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
2432693   +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
2432694   +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
2432695   +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
2432696   +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
2432697   +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
2432698   +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
2432699   +          +      1.8907968580473 * S_NumDealsPurchases
2432700   +          +     0.01244124801764 * S_NumDistPurchases
2432701   +          +    -2.34409118104622 * S_NumStorePurchases
2432702   +          +    -1.80820043087435 * S_NumWebPurchases
2432703   +          +     2.40219682136039 * S_NumWebVisitsMonth
2432704   +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
2432705   +        S_RMntFrq  +    -2.05893311376628 * S_Recency
2432706   +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 * 
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 * 
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts + 
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 * 
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines + 
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases + 
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases + 
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases + 
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 * 
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
2432707   +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
2432708   +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
2432709   +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
2432710   +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
2432711   +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
2432712   +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
2432713   +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
2432714   +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
2432715   +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
2432716   +          +     0.28209537604198 * S_NumDealsPurchases
2432717   +          +      0.6450277971767 * S_NumDistPurchases
2432718   +          +     0.85050092520609 * S_NumStorePurchases
2432719   +          +    -0.53920307215941 * S_NumWebPurchases
2432720   +          +     3.01106015100147 * S_NumWebVisitsMonth
2432721   +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
2432722   +        S_RMntFrq  +    -3.15497765450512 * S_Recency
2432723   +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 * 
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome 
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 * 
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts + 
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 * 
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 * 
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 * 
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 * 
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq + 
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
2432724   +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
2432725   +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
2432726   +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
2432727   +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
2432728   +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
2432729   +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
2432730   +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
2432731   +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
2432732   +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
2432733   +          +    -0.36642526324451 * S_NumDealsPurchases
2432734   +          +     -0.6091014843932 * S_NumDistPurchases
2432735   +          +    -0.21154626182088 * S_NumStorePurchases
2432736   +          +    -0.10361347071364 * S_NumWebPurchases
2432737   +          +     1.36358817627784 * S_NumWebVisitsMonth
2432738   +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
2432739   +        S_RMntFrq  +    -1.04649498091784 * S_Recency
2432740   +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 * 
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 * 
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts + 
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 * 
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines + 
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases + 
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases + 
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases + 
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 * 
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
2432741   +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
2432742   +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
2432743   +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
2432744   +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
2432745   +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
2432746   +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
2432747   +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
2432748   +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
2432749   +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
2432750   +          +    -0.14868505161718 * S_NumDealsPurchases
2432751   +          +    -0.08395384711805 * S_NumDistPurchases
2432752   +          +     0.60525238179245 * S_NumStorePurchases
2432753   +          +     0.04555100214276 * S_NumWebPurchases
2432754   +          +    -2.31888436784305 * S_NumWebVisitsMonth
2432755   +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
2432756   +        S_RMntFrq  +     3.02439474266744 * S_Recency
2432757   +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 * 
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome + 
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 * 
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts + 
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 * 
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 * 
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 * 
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 * 
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq + 
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
2432758   +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
2432759   +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
2432760   +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
2432761   +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
2432762   +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 * 
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 + 
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 * 
HigherEducationBinary0 ;
2432763   +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
2432764   +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
2432765   +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
2432766   +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
2432767   +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 * 
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 + 
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 * 
HigherEducationBinary0 ;
2432768   +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
2432769   +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
2432770   +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
2432771   +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
2432772   +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 * 
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 + 
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 * 
HigherEducationBinary0 ;
2432773   +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
2432774   +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
2432775   +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
2432776   +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
2432777   +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342 
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 + 
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 * 
HigherEducationBinary0 ;
2432778   +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
2432779   +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
2432780   +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
2432781   +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
2432782   +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 * 
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 + 
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 * 
HigherEducationBinary0 ;
2432783   +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
2432784   +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
2432785   +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
2432786   +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
2432787   +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742 
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 + 
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 * 
HigherEducationBinary0 ;
2432788   +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
2432789   +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
2432790   +        EducationGraduation  +     0.96924197858068 * EducationMaster
2432791   +          +     -0.7180104021039 * Marital_StatusDivorced
2432792   +          +      0.5957373170744 * Marital_StatusMarried
2432793   +          +    -0.86183942803988 * Marital_StatusSingle
2432794   +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle + 
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068 
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 * 
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 * 
Marital_StatusTogether ;
2432795   +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
2432796   +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
2432797   +        EducationGraduation  +    -1.23733321574678 * EducationMaster
2432798   +          +     0.84772700244021 * Marital_StatusDivorced
2432799   +          +    -0.37049970188511 * Marital_StatusMarried
2432800   +          +     1.54291641732063 * Marital_StatusSingle
2432801   +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle + 
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation + 
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced + 
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle + 
0.2036514883055 * Marital_StatusTogether ;
2432802   +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
2432803   +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
2432804   +        EducationGraduation  +     0.02093123351397 * EducationMaster
2432805   +          +     0.73222548496385 * Marital_StatusDivorced
2432806   +          +    -0.50102202656102 * Marital_StatusMarried
2432807   +          +    -0.07207130428422 * Marital_StatusSingle
2432808   +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle + 
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation + 
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced + 
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle + 
0.17349558515949 * Marital_StatusTogether ;
2432809   +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
2432810   +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
2432811   +        EducationGraduation  +     0.65366032471107 * EducationMaster
2432812   +          +     0.25894719464799 * Marital_StatusDivorced
2432813   +          +    -1.95576501275834 * Marital_StatusMarried
2432814   +          +     2.65422185276746 * Marital_StatusSingle
2432815   +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle + 
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107 
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 * 
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 * 
Marital_StatusTogether ;
2432816   +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
2432817   +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
2432818   +        EducationGraduation  +    -0.28683119112285 * EducationMaster
2432819   +          +     0.60936191204707 * Marital_StatusDivorced
2432820   +          +    -0.52190111190458 * Marital_StatusMarried
2432821   +          +    -0.60982305233136 * Marital_StatusSingle
2432822   +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle + 
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation + 
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced + 
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle + 
0.44659686388318 * Marital_StatusTogether ;
2432823   +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
2432824   +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
2432825   +        EducationGraduation  +     0.51538853297606 * EducationMaster
2432826   +          +    -1.44614502228294 * Marital_StatusDivorced
2432827   +          +      2.9001493892928 * Marital_StatusMarried
2432828   +          +    -2.60467399972513 * Marital_StatusSingle
2432829   +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle + 
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606 
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 * 
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 * 
Marital_StatusTogether ;
2432830   +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
2432831   +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
2432832   +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
2432833   +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
2432834   +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
2432835   +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
2432836   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
2432837   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
2432838   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
2432839   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2432840   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2432841   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2432842   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2432843   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2432844   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2432845   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2432846   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2432847   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2432848   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2432849   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2432850   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2432851   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2432852   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
2432853   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
2432854   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2432855   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2432856   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2432857   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2432858   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2432859   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2432860   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
2432861   +END;
MPRINT(EM_DIAGRAM):   END;
2432862   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2432863   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2432864   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2432865   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2432866   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2432867   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2432868   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2432869   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2432870   +END;
MPRINT(EM_DIAGRAM):   END;
2432871   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432872   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2432873   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2432874   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2432875   +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
2432876   +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
2432877   +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
2432878   +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
2432879   +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
2432880   +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
2432881   +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
2432882   +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
2432883   +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
2432884   +          +    -0.46483717253931 * S_NumDealsPurchases
2432885   +          +    -0.53329008421157 * S_NumDistPurchases
2432886   +          +      0.2490774300193 * S_NumStorePurchases
2432887   +          +    -0.82755150673885 * S_NumWebPurchases
2432888   +          +     0.04007223822389 * S_NumWebVisitsMonth
2432889   +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
2432890   +        S_RMntFrq  +     0.43434806411249 * S_Recency
2432891   +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 * 
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome 
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 * 
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts + 
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 * 
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 * 
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 * 
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 * 
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq + 
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
2432892   +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
2432893   +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
2432894   +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
2432895   +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
2432896   +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
2432897   +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
2432898   +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
2432899   +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
2432900   +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
2432901   +          +     0.75855101382458 * S_NumDealsPurchases
2432902   +          +     1.61754951768262 * S_NumDistPurchases
2432903   +          +    -0.48146714929729 * S_NumStorePurchases
2432904   +          +    -0.76460728035552 * S_NumWebPurchases
2432905   +          +    -0.71146787112442 * S_NumWebVisitsMonth
2432906   +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
2432907   +        S_RMntFrq  +    -0.01528916550509 * S_Recency
2432908   +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 * 
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 * 
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 * 
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts + 
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 * 
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 * 
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 * 
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 * 
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq + 
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
2432909   +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
2432910   +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
2432911   +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
2432912   +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
2432913   +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
2432914   +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
2432915   +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
2432916   +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
2432917   +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
2432918   +          +     0.75255317965748 * S_NumDealsPurchases
2432919   +          +     1.34900588315783 * S_NumDistPurchases
2432920   +          +    -0.17717469778048 * S_NumStorePurchases
2432921   +          +    -0.01560551546553 * S_NumWebPurchases
2432922   +          +     1.24315988674343 * S_NumWebVisitsMonth
2432923   +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
2432924   +        S_RMntFrq  +    -2.01558015490584 * S_Recency
2432925   +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 * 
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome 
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 * 
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts + 
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 * 
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 * 
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 * 
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 * 
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq + 
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
2432926   +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
2432927   +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
2432928   +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
2432929   +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
2432930   +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
2432931   +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
2432932   +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
2432933   +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
2432934   +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
2432935   +          +    -1.71127148178768 * S_NumDealsPurchases
2432936   +          +    -1.77527355221308 * S_NumDistPurchases
2432937   +          +    -1.40009594349363 * S_NumStorePurchases
2432938   +          +    -0.46471012062697 * S_NumWebPurchases
2432939   +          +     0.04619891083228 * S_NumWebVisitsMonth
2432940   +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
2432941   +        S_RMntFrq  +     0.84880186653433 * S_Recency
2432942   +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 * 
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome 
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 * 
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts + 
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 * 
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 * 
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 * 
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 * 
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq + 
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
2432943   +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
2432944   +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
2432945   +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
2432946   +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
2432947   +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
2432948   +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
2432949   +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
2432950   +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
2432951   +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
2432952   +          +    -0.22204470395056 * S_NumDealsPurchases
2432953   +          +    -1.74490476011984 * S_NumDistPurchases
2432954   +          +     1.93538420108324 * S_NumStorePurchases
2432955   +          +     1.04892631742152 * S_NumWebPurchases
2432956   +          +     1.50717841566047 * S_NumWebVisitsMonth
2432957   +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
2432958   +        S_RMntFrq  +      1.9918829185386 * S_Recency
2432959   +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 * 
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome 
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 * 
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts + 
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 * 
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 * 
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 * 
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 * 
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq + 
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
2432960   +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
2432961   +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
2432962   +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
2432963   +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
2432964   +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
2432965   +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
2432966   +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
2432967   +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
2432968   +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
2432969   +          +    -0.94690420785776 * S_NumDealsPurchases
2432970   +          +     1.87932706342204 * S_NumDistPurchases
2432971   +          +     0.31232717416487 * S_NumStorePurchases
2432972   +          +     1.51889492693355 * S_NumWebPurchases
2432973   +          +     0.04376853689795 * S_NumWebVisitsMonth
2432974   +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
2432975   +        S_RMntFrq  +    -1.21983510008829 * S_Recency
2432976   +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 * 
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome 
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 * 
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts + 
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 * 
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 * 
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 * 
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 * 
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq + 
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
2432977   +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
2432978   +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
2432979   +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
2432980   +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
2432981   +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 * 
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 + 
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 * 
HigherEducationBinary0 ;
2432982   +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
2432983   +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
2432984   +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
2432985   +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
2432986   +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 * 
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 + 
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 * 
HigherEducationBinary0 ;
2432987   +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
2432988   +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
2432989   +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
2432990   +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
2432991   +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 * 
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 + 
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 * 
HigherEducationBinary0 ;
2432992   +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
2432993   +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
2432994   +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
2432995   +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
2432996   +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 * 
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 + 
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 * 
HigherEducationBinary0 ;
2432997   +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
2432998   +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
2432999   +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
2433000   +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
2433001   +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 * 
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 + 
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 * 
HigherEducationBinary0 ;
2433002   +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
2433003   +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
2433004   +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
2433005   +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
2433006   +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937 
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 + 
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 * 
HigherEducationBinary0 ;
2433007   +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
2433008   +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
2433009   +        EducationGraduation  +    -0.11344307008943 * EducationMaster
2433010   +          +     0.56030871857835 * Marital_StatusDivorced
2433011   +          +    -1.22448534379831 * Marital_StatusMarried
2433012   +          +     0.78141783495855 * Marital_StatusSingle
2433013   +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle + 
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943 
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 * 
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 * 
Marital_StatusTogether ;
2433014   +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
2433015   +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
2433016   +        EducationGraduation  +     0.69607179798453 * EducationMaster
2433017   +          +    -2.63452071552997 * Marital_StatusDivorced
2433018   +          +     0.61829054779121 * Marital_StatusMarried
2433019   +          +    -2.20743370246315 * Marital_StatusSingle
2433020   +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle + 
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453 
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 * 
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 * 
Marital_StatusTogether ;
2433021   +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
2433022   +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
2433023   +        EducationGraduation  +    -1.68638824011899 * EducationMaster
2433024   +          +      -1.454102516731 * Marital_StatusDivorced
2433025   +          +     0.71488291465759 * Marital_StatusMarried
2433026   +          +     0.96038830049792 * Marital_StatusSingle
2433027   +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle + 
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899 
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 * 
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 * 
Marital_StatusTogether ;
2433028   +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
2433029   +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
2433030   +        EducationGraduation  +    -1.12481097095571 * EducationMaster
2433031   +          +    -0.01160394891598 * Marital_StatusDivorced
2433032   +          +    -1.09054636482951 * Marital_StatusMarried
2433033   +          +      0.7793855479379 * Marital_StatusSingle
2433034   +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle + 
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation + 
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced + 
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle + 
-0.40649435490654 * Marital_StatusTogether ;
2433035   +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
2433036   +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
2433037   +        EducationGraduation  +     0.09666597691691 * EducationMaster
2433038   +          +    -0.73414854875115 * Marital_StatusDivorced
2433039   +          +     0.46421425621114 * Marital_StatusMarried
2433040   +          +    -0.54512730625469 * Marital_StatusSingle
2433041   +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle + 
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691 
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 * 
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 * 
Marital_StatusTogether ;
2433042   +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
2433043   +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
2433044   +        EducationGraduation  +     0.56518194582557 * EducationMaster
2433045   +          +     0.25131188683384 * Marital_StatusDivorced
2433046   +          +     2.38279806963807 * Marital_StatusMarried
2433047   +          +     0.28897706448348 * Marital_StatusSingle
2433048   +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle + 
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557 
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 * 
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 * 
Marital_StatusTogether ;
2433049   +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
2433050   +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
2433051   +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
2433052   +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
2433053   +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
2433054   +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
2433055   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
2433056   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
2433057   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
2433058   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2433059   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2433060   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2433061   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2433062   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2433063   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2433064   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2433065   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2433066   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2433067   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2433068   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2433069   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2433070   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2433071   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
2433072   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
2433073   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2433074   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2433075   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2433076   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2433077   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2433078   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2433079   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
2433080   +END;
MPRINT(EM_DIAGRAM):   END;
2433081   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2433082   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2433083   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2433084   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2433085   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2433086   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2433087   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2433088   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2433089   +END;
MPRINT(EM_DIAGRAM):   END;
2433090   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433091   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2433092   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433093   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2433094   +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
2433095   +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
2433096   +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
2433097   +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
2433098   +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
2433099   +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
2433100   +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
2433101   +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
2433102   +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
2433103   +          +     1.11855402225797 * S_NumDealsPurchases
2433104   +          +     0.39150287442005 * S_NumDistPurchases
2433105   +          +     0.00160244551627 * S_NumStorePurchases
2433106   +          +     1.54380043731879 * S_NumWebPurchases
2433107   +          +      0.6462755347813 * S_NumWebVisitsMonth
2433108   +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
2433109   +        S_RMntFrq  +     0.91533450209744 * S_Recency
2433110   +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 * 
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome 
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 * 
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts + 
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 * 
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 * 
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 * 
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 * 
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq + 
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
2433111   +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
2433112   +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
2433113   +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
2433114   +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
2433115   +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
2433116   +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
2433117   +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
2433118   +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
2433119   +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
2433120   +          +     0.01911815525287 * S_NumDealsPurchases
2433121   +          +    -1.07196707915227 * S_NumDistPurchases
2433122   +          +      0.6452048321682 * S_NumStorePurchases
2433123   +          +    -0.15818575353955 * S_NumWebPurchases
2433124   +          +    -0.82586162051382 * S_NumWebVisitsMonth
2433125   +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
2433126   +        S_RMntFrq  +     0.23398669008843 * S_Recency
2433127   +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 * 
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome 
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 * 
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts + 
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 * 
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 * 
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 * 
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 * 
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq + 
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
2433128   +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
2433129   +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
2433130   +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
2433131   +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
2433132   +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
2433133   +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
2433134   +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
2433135   +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
2433136   +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
2433137   +          +     1.56893739271853 * S_NumDealsPurchases
2433138   +          +      0.6745865425238 * S_NumDistPurchases
2433139   +          +    -0.26848765783548 * S_NumStorePurchases
2433140   +          +     0.79227081430227 * S_NumWebPurchases
2433141   +          +     0.83054874267768 * S_NumWebVisitsMonth
2433142   +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
2433143   +        S_RMntFrq  +     0.80917480816898 * S_Recency
2433144   +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age 
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome + 
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 * 
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts + 
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 * 
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 * 
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 * 
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 * 
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq + 
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
2433145   +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
2433146   +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
2433147   +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
2433148   +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
2433149   +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
2433150   +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
2433151   +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
2433152   +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
2433153   +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
2433154   +          +    -0.23954856030467 * S_NumDealsPurchases
2433155   +          +    -1.61914390483829 * S_NumDistPurchases
2433156   +          +      -1.014570623016 * S_NumStorePurchases
2433157   +          +    -0.36828642098701 * S_NumWebPurchases
2433158   +          +    -0.04976922659227 * S_NumWebVisitsMonth
2433159   +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
2433160   +        S_RMntFrq  +    -0.40880481304369 * S_Recency
2433161   +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 * 
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome 
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 * 
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts + 
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 * 
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 * 
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 * 
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 * 
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq + 
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
2433162   +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
2433163   +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
2433164   +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
2433165   +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
2433166   +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
2433167   +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
2433168   +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
2433169   +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
2433170   +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
2433171   +          +     1.00094082424204 * S_NumDealsPurchases
2433172   +          +      0.2724785290725 * S_NumDistPurchases
2433173   +          +     0.13170237783486 * S_NumStorePurchases
2433174   +          +    -1.31447792523743 * S_NumWebPurchases
2433175   +          +    -0.09121088371438 * S_NumWebVisitsMonth
2433176   +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
2433177   +        S_RMntFrq  +      0.6767512513985 * S_Recency
2433178   +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 * 
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 * 
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts + 
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 * 
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines + 
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases + 
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases + 
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases + 
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 * 
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
2433179   +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
2433180   +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
2433181   +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
2433182   +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
2433183   +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
2433184   +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
2433185   +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
2433186   +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
2433187   +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
2433188   +          +    -0.73198872336344 * S_NumDealsPurchases
2433189   +          +     0.29368958872361 * S_NumDistPurchases
2433190   +          +     1.52772046446908 * S_NumStorePurchases
2433191   +          +    -1.75065469134874 * S_NumWebPurchases
2433192   +          +      0.0264954621772 * S_NumWebVisitsMonth
2433193   +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
2433194   +        S_RMntFrq  +     1.14219878739476 * S_Recency
2433195   +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 * 
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 * 
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts + 
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 * 
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines + 
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases + 
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases + 
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases + 
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 * 
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
2433196   +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
2433197   +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
2433198   +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
2433199   +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
2433200   +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 * 
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 + 
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 * 
HigherEducationBinary0 ;
2433201   +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
2433202   +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
2433203   +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
2433204   +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
2433205   +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 * 
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 + 
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 * 
HigherEducationBinary0 ;
2433206   +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
2433207   +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
2433208   +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
2433209   +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
2433210   +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 * 
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 + 
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 * 
HigherEducationBinary0 ;
2433211   +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
2433212   +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
2433213   +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
2433214   +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
2433215   +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 * 
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 + 
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 * 
HigherEducationBinary0 ;
2433216   +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
2433217   +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
2433218   +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
2433219   +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
2433220   +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 * 
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 + 
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 * 
HigherEducationBinary0 ;
2433221   +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
2433222   +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
2433223   +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
2433224   +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
2433225   +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 * 
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 + 
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 * 
HigherEducationBinary0 ;
2433226   +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
2433227   +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
2433228   +        EducationGraduation  +     1.49476669226441 * EducationMaster
2433229   +          +     0.32207432513904 * Marital_StatusDivorced
2433230   +          +      0.6397913221395 * Marital_StatusMarried
2433231   +          +    -0.25330032559918 * Marital_StatusSingle
2433232   +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle + 
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441 
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 * 
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 * 
Marital_StatusTogether ;
2433233   +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
2433234   +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
2433235   +        EducationGraduation  +      0.0913616986494 * EducationMaster
2433236   +          +     0.79430904713493 * Marital_StatusDivorced
2433237   +          +     2.54456429102799 * Marital_StatusMarried
2433238   +          +     0.59410742352499 * Marital_StatusSingle
2433239   +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle + 
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494 
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 * 
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 * 
Marital_StatusTogether ;
2433240   +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
2433241   +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
2433242   +        EducationGraduation  +    -0.07080985966069 * EducationMaster
2433243   +          +    -0.43081775693595 * Marital_StatusDivorced
2433244   +          +    -0.78485102174552 * Marital_StatusMarried
2433245   +          +    -1.56581090110813 * Marital_StatusSingle
2433246   +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle + 
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation + 
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced + 
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle + 
1.31552735466691 * Marital_StatusTogether ;
2433247   +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
2433248   +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
2433249   +        EducationGraduation  +     1.01633562820676 * EducationMaster
2433250   +          +     0.38226706522151 * Marital_StatusDivorced
2433251   +          +     0.96666958079914 * Marital_StatusMarried
2433252   +          +    -0.07771259761555 * Marital_StatusSingle
2433253   +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle + 
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676 
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 * 
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 * 
Marital_StatusTogether ;
2433254   +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
2433255   +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
2433256   +        EducationGraduation  +     0.05813076059598 * EducationMaster
2433257   +          +    -0.38325393606947 * Marital_StatusDivorced
2433258   +          +    -1.43303056163299 * Marital_StatusMarried
2433259   +          +     0.11571941757387 * Marital_StatusSingle
2433260   +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle + 
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598 
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 * 
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 * 
Marital_StatusTogether ;
2433261   +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
2433262   +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
2433263   +        EducationGraduation  +     0.90837023676142 * EducationMaster
2433264   +          +    -0.36491799765765 * Marital_StatusDivorced
2433265   +          +     0.14142786767503 * Marital_StatusMarried
2433266   +          +     0.22643970468805 * Marital_StatusSingle
2433267   +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454 
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster 
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried + 
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
2433268   +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
2433269   +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
2433270   +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
2433271   +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
2433272   +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
2433273   +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
2433274   +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
2433275   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
2433276   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , 
H1x3_7 );
2433277   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2433278   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2433279   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2433280   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2433281   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2433282   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2433283   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2433284   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2433285   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2433286   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2433287   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2433288   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2433289   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2433290   +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
2433291   +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
2433292   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2433293   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2433294   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2433295   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2433296   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2433297   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2433298   +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
2433299   +END;
MPRINT(EM_DIAGRAM):   END;
2433300   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2433301   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2433302   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2433303   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2433304   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2433305   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2433306   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2433307   +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
2433308   +END;
MPRINT(EM_DIAGRAM):   END;
2433309   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433310   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2433311   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433312   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2433313   +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
2433314   +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
2433315   +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
2433316   +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 + 
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 + 
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
2433317   +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
2433318   +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
2433319   +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
2433320   +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 + 
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 + 
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
2433321   +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
2433322   +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
2433323   +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
2433324   +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 + 
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 + 
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
2433325   +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
2433326   +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
2433327   +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
2433328   +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 + 
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 + 
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
2433329   +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
2433330   +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
2433331   +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
2433332   +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 + 
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 + 
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
2433333   +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
2433334   +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
2433335   +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
2433336   +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 + 
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 + 
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
2433337   +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
2433338   +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
2433339   +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
2433340   +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 * 
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 + 
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
2433341   +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
2433342   +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
2433343   +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
2433344   +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2 
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 + 
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
2433345   +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
2433346   +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
2433347   +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
2433348   +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2 
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 + 
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
2433349   +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
2433350   +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
2433351   +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
2433352   +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2 
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 + 
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
2433353   +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
2433354   +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
2433355   +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
2433356   +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 * 
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 + 
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
2433357   +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
2433358   +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
2433359   +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
2433360   +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2 
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 + 
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
2433361   +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
2433362   +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
2433363   +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
2433364   +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 + 
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 + 
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
2433365   +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
2433366   +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
2433367   +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
2433368   +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2 
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 + 
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
2433369   +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
2433370   +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
2433371   +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
2433372   +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2 
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 + 
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
2433373   +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
2433374   +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
2433375   +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
2433376   +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2 
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 + 
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
2433377   +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
2433378   +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
2433379   +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
2433380   +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2 
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 + 
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
2433381   +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
2433382   +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
2433383   +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
2433384   +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2 
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 + 
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
2433385   +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
2433386   +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
2433387   +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
2433388   +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
2433389   +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
2433390   +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
2433391   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
2433392   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
2433393   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
2433394   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2433395   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
2433396   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
2433397   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
2433398   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
2433399   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
2433400   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
2433401   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
2433402   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
2433403   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
2433404   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
2433405   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
2433406   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
2433407   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
2433408   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
2433409   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
2433410   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
2433411   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
2433412   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
2433413   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
2433414   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
2433415   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
2433416   +END;
MPRINT(EM_DIAGRAM):   END;
2433417   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2433418   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2433419   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2433420   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2433421   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2433422   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2433423   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2433424   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
2433425   +END;
MPRINT(EM_DIAGRAM):   END;
2433426   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433427   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2433428   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433429   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2433430   +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
2433431   +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
2433432   +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
2433433   +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 + 
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 + 
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
2433434   +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
2433435   +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
2433436   +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
2433437   +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 + 
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 + 
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
2433438   +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
2433439   +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
2433440   +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
2433441   +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 + 
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 + 
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
2433442   +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
2433443   +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
2433444   +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
2433445   +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 + 
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 + 
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
2433446   +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
2433447   +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
2433448   +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
2433449   +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 + 
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 + 
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
2433450   +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
2433451   +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
2433452   +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
2433453   +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 + 
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 + 
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
2433454   +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
2433455   +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
2433456   +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
2433457   +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 * 
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 + 
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
2433458   +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
2433459   +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
2433460   +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
2433461   +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2 
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 + 
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
2433462   +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
2433463   +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
2433464   +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
2433465   +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2 
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 + 
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
2433466   +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
2433467   +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
2433468   +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
2433469   +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2 
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 + 
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
2433470   +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
2433471   +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
2433472   +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
2433473   +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2 
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 + 
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
2433474   +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
2433475   +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
2433476   +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
2433477   +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2 
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 + 
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
2433478   +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
2433479   +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
2433480   +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
2433481   +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 + 
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 + 
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
2433482   +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
2433483   +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
2433484   +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
2433485   +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 * 
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 + 
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
2433486   +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
2433487   +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
2433488   +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
2433489   +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 * 
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 + 
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
2433490   +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
2433491   +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
2433492   +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
2433493   +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2 
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 + 
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
2433494   +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
2433495   +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
2433496   +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
2433497   +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 * 
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 + 
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
2433498   +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
2433499   +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
2433500   +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
2433501   +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2 
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 + 
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
2433502   +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
2433503   +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
2433504   +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
2433505   +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
2433506   +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
2433507   +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
2433508   +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
2433509   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
2433510   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , 
H2x2_7 );
2433511   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2433512   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
2433513   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
2433514   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
2433515   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
2433516   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
2433517   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
2433518   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
2433519   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
2433520   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
2433521   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
2433522   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
2433523   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
2433524   +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
2433525   +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
2433526   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
2433527   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
2433528   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
2433529   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
2433530   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
2433531   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
2433532   +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
2433533   +END;
MPRINT(EM_DIAGRAM):   END;
2433534   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2433535   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2433536   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2433537   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2433538   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2433539   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2433540   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2433541   +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
2433542   +END;
MPRINT(EM_DIAGRAM):   END;
2433543   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433544   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2433545   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433546   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2433547   +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
2433548   +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
2433549   +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
2433550   +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 + 
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 + 
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
2433551   +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
2433552   +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
2433553   +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
2433554   +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 + 
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 + 
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
2433555   +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
2433556   +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
2433557   +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
2433558   +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 + 
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 + 
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
2433559   +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
2433560   +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
2433561   +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
2433562   +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 + 
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 + 
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
2433563   +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
2433564   +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
2433565   +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
2433566   +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 + 
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 + 
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
2433567   +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
2433568   +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
2433569   +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
2433570   +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 + 
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 + 
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
2433571   +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
2433572   +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
2433573   +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
2433574   +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 + 
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 + 
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
2433575   +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
2433576   +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
2433577   +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
2433578   +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2 
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 + 
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
2433579   +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
2433580   +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
2433581   +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
2433582   +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2 
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 + 
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
2433583   +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
2433584   +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
2433585   +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
2433586   +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2 
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 + 
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
2433587   +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
2433588   +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
2433589   +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
2433590   +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2 
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 + 
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
2433591   +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
2433592   +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
2433593   +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
2433594   +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 * 
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 + 
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
2433595   +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
2433596   +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
2433597   +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
2433598   +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2 
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 + 
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
2433599   +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
2433600   +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
2433601   +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
2433602   +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2 
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 + 
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
2433603   +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
2433604   +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
2433605   +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
2433606   +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
2433607   +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
2433608   +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
2433609   +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
2433610   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2433611   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2433612   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2433613   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2433614   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2433615   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2433616   +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
2433617   +END;
MPRINT(EM_DIAGRAM):   END;
2433618   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2433619   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2433620   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2433621   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2433622   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2433623   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2433624   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2433625   +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
2433626   +END;
MPRINT(EM_DIAGRAM):   END;
2433627   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433628   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2433629   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433630   +
2433631   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2433632   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2433633   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2433634   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2433635   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2433636   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2433637   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2433638   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2433639   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2433640   +end;
MPRINT(EM_DIAGRAM):   end;
2433641   +else do;
MPRINT(EM_DIAGRAM):   else do;
2433642   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2433643   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2433644   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2433645   +   end;
MPRINT(EM_DIAGRAM):   end;
2433646   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2433647   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2433648   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2433649   +   end;
MPRINT(EM_DIAGRAM):   end;
2433650   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2433651   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2433652   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2433653   +   end;
MPRINT(EM_DIAGRAM):   end;
2433654   +end;
MPRINT(EM_DIAGRAM):   end;
2433655   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2433656   +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
2433657   +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
2433658   +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
2433659   +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 + 
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 + 
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
2433660   +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
2433661   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2433662   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2433663   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2433664   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2433665   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2433666   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2433667   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2433668   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2433669   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2433670   +END;
MPRINT(EM_DIAGRAM):   END;
2433671   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2433672   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2433673   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2433674   +END;
MPRINT(EM_DIAGRAM):   END;
2433675   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2433676   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2433677   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2433678   +END;
MPRINT(EM_DIAGRAM):   END;
2433679   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2433680   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2433681   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2433682   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2433683   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2433684   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2433685   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2433686   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433687   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2433688   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2433689   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2433690   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2433691   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2433692   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2433693   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2433694   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2433695   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2433696   +END;
MPRINT(EM_DIAGRAM):   END;
2433697   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2433698   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2433699   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2433700   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2433701   +* Renaming variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural12;
2433702   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433703   +* Renaming Posterior variables for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural12;
2433704   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433705   +drop AutoNeural12_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar1;
2433706   +AutoNeural12_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar1 = P_DepVar1;
2433707   +drop AutoNeural12_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_P_DepVar0;
2433708   +AutoNeural12_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural12_P_DepVar0 = P_DepVar0;
2433709   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433710   +* Renaming _WARN_ variable for AutoNeural12;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural12;
2433711   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433712   +length AutoNeural12_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural12_WARN_ $4;
2433713   +drop AutoNeural12_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural12_WARN_;
2433714   +AutoNeural12_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural12_WARN_ = _WARN_;
2433715   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433716   +* Ensmbl45: Scoring Code of model 4 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 4 of 5;
2433717   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433718   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433719   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2433720   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2433721   +* NODE: AutoNeural7;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural7;
2433722   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2433723   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2433724   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2433725   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2433726   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2433727   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2433728   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2433729   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2433730   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2433731   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2433732   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2433733   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2433734   +LENGTH _WARN_ $4
2433735   +      F_DepVar  $ 12
2433736   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2433737   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2433738   +
2433739   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2433740   +
2433741   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2433742   +
2433743   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2433744   +
2433745   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2433746   +
2433747   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2433748   +
2433749   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2433750   +
2433751   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2433752   +
2433753   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2433754   +
2433755   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2433756   +
2433757   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2433758   +
2433759   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2433760   +
2433761   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2433762   +
2433763   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2433764   +
2433765   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2433766   +
2433767   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2433768   +
2433769   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2433770   +
2433771   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2433772   +
2433773   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2433774   +
2433775   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2433776   +
2433777   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2433778   +
2433779   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2433780   +
2433781   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2433782   +
The SAS System

2433783   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2433784   +
2433785   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2433786   +
2433787   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2433788   +
2433789   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2433790   +
2433791   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2433792   +
2433793   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2433794   +
2433795   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2433796   +
2433797   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2433798   +
2433799   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2433800   +
2433801   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2433802   +
2433803   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2433804   +
2433805   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2433806   +
2433807   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2433808   +
2433809   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2433810   +
2433811   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2433812   +
2433813   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2433814   +
2433815   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2433816   +
2433817   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2433818   +
2433819   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2433820   +
2433821   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2433822   +
2433823   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2433824   +
2433825   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2433826   +
2433827   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2433828   +
2433829   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2433830   +
2433831   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2433832   +
2433833   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2433834   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2433835   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2433836   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2433837   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2433838   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433839   +end;
MPRINT(EM_DIAGRAM):   end;
2433840   +else do;
MPRINT(EM_DIAGRAM):   else do;
2433841   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2433842   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2433843   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2433844   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2433845   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2433846   +   end;
MPRINT(EM_DIAGRAM):   end;
2433847   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2433848   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2433849   +   end;
MPRINT(EM_DIAGRAM):   end;
2433850   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2433851   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2433852   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2433853   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433854   +   end;
MPRINT(EM_DIAGRAM):   end;
2433855   +end;
MPRINT(EM_DIAGRAM):   end;
2433856   +
2433857   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2433858   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2433859   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2433860   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2433861   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2433862   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433863   +end;
MPRINT(EM_DIAGRAM):   end;
2433864   +else do;
MPRINT(EM_DIAGRAM):   else do;
2433865   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2433866   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2433867   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2433868   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2433869   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2433870   +   end;
MPRINT(EM_DIAGRAM):   end;
2433871   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2433872   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2433873   +   end;
MPRINT(EM_DIAGRAM):   end;
2433874   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2433875   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2433876   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2433877   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433878   +   end;
MPRINT(EM_DIAGRAM):   end;
2433879   +end;
MPRINT(EM_DIAGRAM):   end;
2433880   +
2433881   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2433882   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2433883   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2433884   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2433885   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2433886   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433887   +end;
MPRINT(EM_DIAGRAM):   end;
2433888   +else do;
MPRINT(EM_DIAGRAM):   else do;
2433889   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2433890   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2433891   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2433892   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2433893   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2433894   +   end;
MPRINT(EM_DIAGRAM):   end;
2433895   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2433896   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2433897   +   end;
MPRINT(EM_DIAGRAM):   end;
2433898   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2433899   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2433900   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2433901   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433902   +   end;
MPRINT(EM_DIAGRAM):   end;
2433903   +end;
MPRINT(EM_DIAGRAM):   end;
2433904   +
2433905   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2433906   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2433907   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2433908   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2433909   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2433910   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433911   +end;
MPRINT(EM_DIAGRAM):   end;
2433912   +else do;
MPRINT(EM_DIAGRAM):   else do;
2433913   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2433914   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2433915   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2433916   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2433917   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2433918   +   end;
MPRINT(EM_DIAGRAM):   end;
2433919   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2433920   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2433921   +   end;
MPRINT(EM_DIAGRAM):   end;
2433922   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2433923   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2433924   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2433925   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433926   +   end;
MPRINT(EM_DIAGRAM):   end;
2433927   +end;
MPRINT(EM_DIAGRAM):   end;
2433928   +
2433929   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2433930   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2433931   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2433932   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2433933   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2433934   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433935   +end;
MPRINT(EM_DIAGRAM):   end;
2433936   +else do;
MPRINT(EM_DIAGRAM):   else do;
2433937   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2433938   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2433939   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2433940   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2433941   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2433942   +   end;
MPRINT(EM_DIAGRAM):   end;
2433943   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2433944   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2433945   +   end;
MPRINT(EM_DIAGRAM):   end;
2433946   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2433947   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2433948   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2433949   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433950   +   end;
MPRINT(EM_DIAGRAM):   end;
2433951   +end;
MPRINT(EM_DIAGRAM):   end;
2433952   +
2433953   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2433954   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2433955   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2433956   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2433957   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2433958   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433959   +end;
MPRINT(EM_DIAGRAM):   end;
2433960   +else do;
MPRINT(EM_DIAGRAM):   else do;
2433961   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2433962   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2433963   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2433964   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2433965   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2433966   +   end;
MPRINT(EM_DIAGRAM):   end;
2433967   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2433968   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2433969   +   end;
MPRINT(EM_DIAGRAM):   end;
2433970   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2433971   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2433972   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2433973   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433974   +   end;
MPRINT(EM_DIAGRAM):   end;
2433975   +end;
MPRINT(EM_DIAGRAM):   end;
2433976   +
2433977   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2433978   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2433979   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2433980   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2433981   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2433982   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433983   +end;
MPRINT(EM_DIAGRAM):   end;
2433984   +else do;
MPRINT(EM_DIAGRAM):   else do;
2433985   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2433986   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2433987   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2433988   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2433989   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2433990   +   end;
MPRINT(EM_DIAGRAM):   end;
2433991   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2433992   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2433993   +   end;
MPRINT(EM_DIAGRAM):   end;
2433994   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2433995   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2433996   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2433997   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2433998   +   end;
MPRINT(EM_DIAGRAM):   end;
2433999   +end;
MPRINT(EM_DIAGRAM):   end;
2434000   +
2434001   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2434002   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2434003   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2434004   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2434005   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2434006   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2434007   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2434008   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2434009   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2434010   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2434011   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2434012   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2434013   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2434014   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434015   +end;
MPRINT(EM_DIAGRAM):   end;
2434016   +else do;
MPRINT(EM_DIAGRAM):   else do;
2434017   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2434018   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2434019   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2434020   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2434021   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2434022   +   end;
MPRINT(EM_DIAGRAM):   end;
2434023   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2434024   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2434025   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2434026   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2434027   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2434028   +   end;
MPRINT(EM_DIAGRAM):   end;
2434029   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2434030   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2434031   +   end;
MPRINT(EM_DIAGRAM):   end;
2434032   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2434033   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2434034   +   end;
MPRINT(EM_DIAGRAM):   end;
2434035   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2434036   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2434037   +   end;
MPRINT(EM_DIAGRAM):   end;
2434038   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2434039   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2434040   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2434041   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2434042   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2434043   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2434044   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434045   +   end;
MPRINT(EM_DIAGRAM):   end;
2434046   +end;
MPRINT(EM_DIAGRAM):   end;
2434047   +
2434048   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2434049   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2434050   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2434051   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2434052   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2434053   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2434054   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2434055   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2434056   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2434057   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2434058   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2434059   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2434060   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2434061   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2434062   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434063   +end;
MPRINT(EM_DIAGRAM):   end;
2434064   +else do;
MPRINT(EM_DIAGRAM):   else do;
2434065   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2434066   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2434067   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2434068   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2434069   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2434070   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2434071   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2434072   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2434073   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2434074   +         end;
MPRINT(EM_DIAGRAM):   end;
2434075   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2434076   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2434077   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2434078   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2434079   +            end;
MPRINT(EM_DIAGRAM):   end;
2434080   +         end;
MPRINT(EM_DIAGRAM):   end;
2434081   +      end;
MPRINT(EM_DIAGRAM):   end;
2434082   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2434083   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2434084   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2434085   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2434086   +         end;
MPRINT(EM_DIAGRAM):   end;
2434087   +      end;
MPRINT(EM_DIAGRAM):   end;
2434088   +   end;
MPRINT(EM_DIAGRAM):   end;
2434089   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2434090   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2434091   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2434092   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2434093   +      end;
MPRINT(EM_DIAGRAM):   end;
2434094   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2434095   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2434096   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2434097   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2434098   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2434099   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2434100   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2434101   +         end;
MPRINT(EM_DIAGRAM):   end;
2434102   +      end;
MPRINT(EM_DIAGRAM):   end;
2434103   +   end;
MPRINT(EM_DIAGRAM):   end;
2434104   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2434105   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2434106   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2434107   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2434108   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2434109   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2434110   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434111   +   end;
MPRINT(EM_DIAGRAM):   end;
2434112   +end;
MPRINT(EM_DIAGRAM):   end;
2434113   +
2434114   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434115   +*** Checking missing input Interval
2434116   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2434117   +
2434118   +IF NMISS(
2434119   +   AcceptedCmpTotal ,
2434120   +   Age ,
2434121   +   Frq ,
2434122   +   Income ,
2434123   +   Kidhome ,
2434124   +   Mnt ,
2434125   +   MntFishProducts ,
2434126   +   MntFruits ,
2434127   +   MntGoldProds ,
2434128   +   MntMeatProducts ,
2434129   +   MntSweetProducts ,
2434130   +   MntWines ,
2434131   +   MonthsAsCustomer ,
2434132   +   NumCatalogPurchases ,
2434133   +   NumDealsPurchases ,
2434134   +   NumDistPurchases ,
2434135   +   NumStorePurchases ,
2434136   +   NumWebPurchases ,
2434137   +   NumWebVisitsMonth ,
2434138   +   RFMstat ,
2434139   +   RMntFrq ,
2434140   +   Recency ,
2434141   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2434142   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2434143   +
2434144   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434145   +END;
MPRINT(EM_DIAGRAM):   END;
2434146   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434147   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2434148   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434149   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2434150   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2434151   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2434152   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2434153   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2434154   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2434155   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2434156   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2434157   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2434158   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2434159   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2434160   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2434161   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2434162   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2434163   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2434164   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2434165   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2434166   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2434167   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2434168   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2434169   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2434170   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2434171   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2434172   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2434173   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2434174   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2434175   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2434176   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2434177   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2434178   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2434179   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2434180   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2434181   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2434182   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2434183   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2434184   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2434185   +END;
MPRINT(EM_DIAGRAM):   END;
2434186   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2434187   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2434188   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2434189   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2434190   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2434191   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2434192   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2434193   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2434194   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2434195   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2434196   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2434197   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2434198   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2434199   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2434200   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2434201   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2434202   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2434203   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2434204   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2434205   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2434206   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2434207   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2434208   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2434209   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2434210   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2434211   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2434212   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2434213   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2434214   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2434215   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2434216   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2434217   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2434218   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2434219   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2434220   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2434221   +   ELSE S_NumCatalogPurchases
2434222   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2434223   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2434224   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2434225   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2434226   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2434227   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2434228   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2434229   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2434230   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2434231   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2434232   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2434233   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2434234   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2434235   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2434236   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2434237   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2434238   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2434239   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2434240   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2434241   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2434242   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2434243   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2434244   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2434245   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2434246   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2434247   +END;
MPRINT(EM_DIAGRAM):   END;
2434248   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434249   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2434250   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434251   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434252   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2434253   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434254   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434255   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2434256   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434257   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2434258   +   H1x1_1  =     0.27051750628107 * S_AcceptedCmpTotal
2434259   +          +    -0.01552488999587 * S_Age  +    -0.19918933236131 * S_Frq
2434260   +          +    -0.18053367989037 * S_Income  +     0.17934470816975 *
2434261   +        S_Kidhome  +    -0.27914859130186 * S_Mnt  +    -0.05331142159606 *
2434262   +        S_MntFishProducts  +    -0.03730503814111 * S_MntFruits
2434263   +          +     0.01217897476566 * S_MntGoldProds  +       0.241005967683 *
2434264   +        S_MntMeatProducts  +    -0.02873172523867 * S_MntSweetProducts
2434265   +          +    -0.35773732926132 * S_MntWines  +    -0.00800625524539 *
2434266   +        S_MonthsAsCustomer  +     0.14253720708201 * S_NumCatalogPurchases
2434267   +          +     0.09634439105648 * S_NumDealsPurchases
2434268   +          +     -0.2727389064287 * S_NumDistPurchases
2434269   +          +    -0.14179871978162 * S_NumStorePurchases
2434270   +          +     0.11008049559527 * S_NumWebPurchases
2434271   +          +    -0.16791463027749 * S_NumWebVisitsMonth
2434272   +          +     0.12827091331546 * S_RFMstat  +    -0.05819422771336 *
2434273   +        S_RMntFrq  +     0.17192522504917 * S_Recency
2434274   +          +     0.13379709932247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27051750628107 * S_AcceptedCmpTotal + -0.01552488999587 * 
S_Age + -0.19918933236131 * S_Frq + -0.18053367989037 * S_Income + 0.17934470816975 * 
S_Kidhome + -0.27914859130186 * S_Mnt + -0.05331142159606 * S_MntFishProducts + 
-0.03730503814111 * S_MntFruits + 0.01217897476566 * S_MntGoldProds + 0.241005967683 * 
S_MntMeatProducts + -0.02873172523867 * S_MntSweetProducts + -0.35773732926132 * S_MntWines + 
-0.00800625524539 * S_MonthsAsCustomer + 0.14253720708201 * S_NumCatalogPurchases + 
0.09634439105648 * S_NumDealsPurchases + -0.2727389064287 * S_NumDistPurchases + 
-0.14179871978162 * S_NumStorePurchases + 0.11008049559527 * S_NumWebPurchases + 
-0.16791463027749 * S_NumWebVisitsMonth + 0.12827091331546 * S_RFMstat + -0.05819422771336 * 
S_RMntFrq + 0.17192522504917 * S_Recency + 0.13379709932247 * S_Teenhome ;
2434275   +   H1x1_2  =      0.2625003002792 * S_AcceptedCmpTotal
2434276   +          +    -0.00409648963127 * S_Age  +    -0.08422560024107 * S_Frq
2434277   +          +      0.1678148652095 * S_Income  +      -0.122580580609 *
2434278   +        S_Kidhome  +    -0.41368311141801 * S_Mnt  +     -0.0649787838725 *
2434279   +        S_MntFishProducts  +    -0.06363287766971 * S_MntFruits
2434280   +          +     0.00810850196464 * S_MntGoldProds  +      0.2984971941271 *
2434281   +        S_MntMeatProducts  +     -0.0651075315757 * S_MntSweetProducts
2434282   +          +    -0.42717799596572 * S_MntWines  +    -0.00945771129633 *
2434283   +        S_MonthsAsCustomer  +     0.33346839008681 * S_NumCatalogPurchases
2434284   +          +     0.15835936877168 * S_NumDealsPurchases
2434285   +          +     0.04229992769587 * S_NumDistPurchases
2434286   +          +    -0.04051362547639 * S_NumStorePurchases
2434287   +          +    -0.01791546488406 * S_NumWebPurchases
2434288   +          +     0.28833008597045 * S_NumWebVisitsMonth
2434289   +          +     0.08007709098478 * S_RFMstat  +     0.37677948418886 *
2434290   +        S_RMntFrq  +    -0.32542265112765 * S_Recency
2434291   +          +    -0.10763248273834 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2625003002792 * S_AcceptedCmpTotal + -0.00409648963127 * 
S_Age + -0.08422560024107 * S_Frq + 0.1678148652095 * S_Income + -0.122580580609 * S_Kidhome + 
-0.41368311141801 * S_Mnt + -0.0649787838725 * S_MntFishProducts + -0.06363287766971 * 
S_MntFruits + 0.00810850196464 * S_MntGoldProds + 0.2984971941271 * S_MntMeatProducts + 
-0.0651075315757 * S_MntSweetProducts + -0.42717799596572 * S_MntWines + -0.00945771129633 * 
S_MonthsAsCustomer + 0.33346839008681 * S_NumCatalogPurchases + 0.15835936877168 * 
S_NumDealsPurchases + 0.04229992769587 * S_NumDistPurchases + -0.04051362547639 * 
S_NumStorePurchases + -0.01791546488406 * S_NumWebPurchases + 0.28833008597045 * 
S_NumWebVisitsMonth + 0.08007709098478 * S_RFMstat + 0.37677948418886 * S_RMntFrq + 
-0.32542265112765 * S_Recency + -0.10763248273834 * S_Teenhome ;
2434292   +   H1x1_1  = H1x1_1  +     0.17927888078386 * AcceptedCmp10
2434293   +          +       0.309097592234 * AcceptedCmp20  +     0.30005706470617 *
2434294   +        AcceptedCmp30  +     0.30534843193785 * AcceptedCmp40
2434295   +          +     0.19575142296602 * AcceptedCmp50  +    -0.26930325741881 *
2434296   +        Complain0  +    -0.07193220591551 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.17927888078386 * AcceptedCmp10 + 0.309097592234 * 
AcceptedCmp20 + 0.30005706470617 * AcceptedCmp30 + 0.30534843193785 * AcceptedCmp40 + 
0.19575142296602 * AcceptedCmp50 + -0.26930325741881 * Complain0 + -0.07193220591551 * 
HigherEducationBinary0 ;
2434297   +   H1x1_2  = H1x1_2  +     0.01282806481889 * AcceptedCmp10
2434298   +          +     0.01542710847454 * AcceptedCmp20  +     0.03576476827309 *
2434299   +        AcceptedCmp30  +     0.04230610697529 * AcceptedCmp40
2434300   +          +     0.03405078302469 * AcceptedCmp50  +     0.13002166919554 *
2434301   +        Complain0  +    -0.08203696285033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.01282806481889 * AcceptedCmp10 + 0.01542710847454 * 
AcceptedCmp20 + 0.03576476827309 * AcceptedCmp30 + 0.04230610697529 * AcceptedCmp40 + 
0.03405078302469 * AcceptedCmp50 + 0.13002166919554 * Complain0 + -0.08203696285033 * 
HigherEducationBinary0 ;
2434302   +   H1x1_1  = H1x1_1  +    -0.04471063478028 * Education2n_Cycle
2434303   +          +     0.15571809437849 * EducationBasic  +    -0.00113978624206 *
2434304   +        EducationGraduation  +     0.00750750981266 * EducationMaster
2434305   +          +     -0.0504367274898 * Marital_StatusDivorced
2434306   +          +     0.28345714390306 * Marital_StatusMarried
2434307   +          +     -0.2012923780435 * Marital_StatusSingle
2434308   +          +     0.20022167903492 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04471063478028 * Education2n_Cycle + 
0.15571809437849 * EducationBasic + -0.00113978624206 * EducationGraduation + 0.00750750981266 
* EducationMaster + -0.0504367274898 * Marital_StatusDivorced + 0.28345714390306 * 
Marital_StatusMarried + -0.2012923780435 * Marital_StatusSingle + 0.20022167903492 * 
Marital_StatusTogether ;
2434309   +   H1x1_2  = H1x1_2  +     0.12691361812265 * Education2n_Cycle
2434310   +          +       0.003205191831 * EducationBasic  +    -0.04323354449955 *
2434311   +        EducationGraduation  +    -0.06699429239126 * EducationMaster
2434312   +          +     0.06828937261262 * Marital_StatusDivorced
2434313   +          +     -0.1520862543536 * Marital_StatusMarried
2434314   +          +      0.1392808464716 * Marital_StatusSingle
2434315   +          +    -0.12406922875482 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12691361812265 * Education2n_Cycle + 0.003205191831 
* EducationBasic + -0.04323354449955 * EducationGraduation + -0.06699429239126 * 
EducationMaster + 0.06828937261262 * Marital_StatusDivorced + -0.1520862543536 * 
Marital_StatusMarried + 0.1392808464716 * Marital_StatusSingle + -0.12406922875482 * 
Marital_StatusTogether ;
2434316   +   H1x1_1  =     0.89722634972069 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.89722634972069 + H1x1_1 ;
2434317   +   H1x1_2  =     -0.5979471913364 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5979471913364 + H1x1_2 ;
2434318   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2434319   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2434320   +END;
MPRINT(EM_DIAGRAM):   END;
2434321   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2434322   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2434323   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2434324   +END;
MPRINT(EM_DIAGRAM):   END;
2434325   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434326   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2434327   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434328   +
2434329   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2434330   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2434331   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2434332   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2434333   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2434334   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2434335   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2434336   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2434337   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2434338   +end;
MPRINT(EM_DIAGRAM):   end;
2434339   +else do;
MPRINT(EM_DIAGRAM):   else do;
2434340   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2434341   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2434342   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2434343   +   end;
MPRINT(EM_DIAGRAM):   end;
2434344   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2434345   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2434346   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2434347   +   end;
MPRINT(EM_DIAGRAM):   end;
2434348   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2434349   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2434350   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2434351   +   end;
MPRINT(EM_DIAGRAM):   end;
2434352   +end;
MPRINT(EM_DIAGRAM):   end;
2434353   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2434354   +   P_DepVar1  =     -11.533020189097 * H1x1_1  +     17.2320065402955 * H1x1_2
2434355   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.533020189097 * H1x1_1 + 17.2320065402955 * H1x1_2 ;
2434356   +   P_DepVar1  =     2.37722840752042 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.37722840752042 + P_DepVar1 ;
2434357   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2434358   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2434359   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2434360   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2434361   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2434362   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2434363   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2434364   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2434365   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2434366   +END;
MPRINT(EM_DIAGRAM):   END;
2434367   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2434368   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2434369   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2434370   +END;
MPRINT(EM_DIAGRAM):   END;
2434371   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2434372   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2434373   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2434374   +END;
MPRINT(EM_DIAGRAM):   END;
2434375   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2434376   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2434377   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2434378   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2434379   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2434380   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2434381   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2434382   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434383   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2434384   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434385   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2434386   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2434387   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2434388   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2434389   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2434390   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2434391   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2434392   +END;
MPRINT(EM_DIAGRAM):   END;
2434393   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2434394   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2434395   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2434396   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2434397   +* Renaming variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural7;
2434398   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2434399   +* Renaming Posterior variables for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural7;
2434400   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2434401   +drop AutoNeural7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar1;
2434402   +AutoNeural7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar1 = P_DepVar1;
2434403   +drop AutoNeural7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_P_DepVar0;
2434404   +AutoNeural7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural7_P_DepVar0 = P_DepVar0;
2434405   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2434406   +* Renaming _WARN_ variable for AutoNeural7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural7;
2434407   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2434408   +length AutoNeural7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural7_WARN_ $4;
2434409   +drop AutoNeural7_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural7_WARN_;
2434410   +AutoNeural7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural7_WARN_ = _WARN_;
2434411   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2434412   +* Ensmbl45: Scoring Code of model 5 of 5;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Scoring Code of model 5 of 5;
2434413   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2434414   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2434415   +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
2434416   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
2434417   +* NODE: AutoNeural10;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural10;
2434418   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2434419   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2434420   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2434421   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2434422   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2434423   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2434424   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2434425   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2434426   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2434427   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2434428   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2434429   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2434430   +LENGTH _WARN_ $4
2434431   +      F_DepVar  $ 12
2434432   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
2434433   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2434434   +
2434435   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2434436   +
2434437   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2434438   +
2434439   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2434440   +
2434441   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2434442   +
2434443   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2434444   +
2434445   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2434446   +
2434447   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2434448   +
2434449   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2434450   +
2434451   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2434452   +
2434453   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2434454   +
2434455   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2434456   +
2434457   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2434458   +
2434459   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2434460   +
2434461   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2434462   +
2434463   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2434464   +
2434465   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2434466   +
2434467   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2434468   +
2434469   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2434470   +
2434471   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2434472   +
2434473   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2434474   +
2434475   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2434476   +
2434477   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2434478   +
2434479   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2434480   +
2434481   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2434482   +
2434483   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2434484   +
2434485   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2434486   +
2434487   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2434488   +
2434489   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2434490   +
2434491   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2434492   +
2434493   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2434494   +
2434495   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2434496   +
2434497   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2434498   +
2434499   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2434500   +
2434501   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2434502   +
2434503   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2434504   +
2434505   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2434506   +
2434507   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2434508   +
2434509   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2434510   +
2434511   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2434512   +
2434513   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2434514   +
2434515   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2434516   +
2434517   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2434518   +
2434519   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2434520   +
2434521   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2434522   +
2434523   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2434524   +
2434525   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2434526   +
2434527   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2434528   +
2434529   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2434530   +
2434531   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2434532   +
2434533   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2434534   +
2434535   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2434536   +
2434537   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2434538   +
2434539   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2434540   +
2434541   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2434542   +
2434543   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2434544   +
2434545   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2434546   +
2434547   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
2434548   +
2434549   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2434550   +
2434551   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
2434552   +
2434553   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2434554   +
2434555   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2434556   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2434557   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2434558   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2434559   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2434560   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434561   +end;
MPRINT(EM_DIAGRAM):   end;
2434562   +else do;
MPRINT(EM_DIAGRAM):   else do;
2434563   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2434564   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2434565   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2434566   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2434567   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2434568   +   end;
MPRINT(EM_DIAGRAM):   end;
2434569   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2434570   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2434571   +   end;
MPRINT(EM_DIAGRAM):   end;
2434572   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2434573   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2434574   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2434575   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434576   +   end;
MPRINT(EM_DIAGRAM):   end;
2434577   +end;
MPRINT(EM_DIAGRAM):   end;
2434578   +
2434579   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2434580   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2434581   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2434582   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2434583   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2434584   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434585   +end;
MPRINT(EM_DIAGRAM):   end;
2434586   +else do;
MPRINT(EM_DIAGRAM):   else do;
2434587   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2434588   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2434589   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2434590   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2434591   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2434592   +   end;
MPRINT(EM_DIAGRAM):   end;
2434593   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2434594   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2434595   +   end;
MPRINT(EM_DIAGRAM):   end;
2434596   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2434597   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2434598   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2434599   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434600   +   end;
MPRINT(EM_DIAGRAM):   end;
2434601   +end;
MPRINT(EM_DIAGRAM):   end;
2434602   +
2434603   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2434604   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2434605   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2434606   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2434607   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2434608   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434609   +end;
MPRINT(EM_DIAGRAM):   end;
2434610   +else do;
MPRINT(EM_DIAGRAM):   else do;
2434611   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2434612   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2434613   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2434614   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2434615   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2434616   +   end;
MPRINT(EM_DIAGRAM):   end;
2434617   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2434618   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2434619   +   end;
MPRINT(EM_DIAGRAM):   end;
2434620   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2434621   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2434622   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2434623   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434624   +   end;
MPRINT(EM_DIAGRAM):   end;
2434625   +end;
MPRINT(EM_DIAGRAM):   end;
2434626   +
2434627   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2434628   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2434629   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2434630   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2434631   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2434632   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434633   +end;
MPRINT(EM_DIAGRAM):   end;
2434634   +else do;
MPRINT(EM_DIAGRAM):   else do;
2434635   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2434636   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2434637   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2434638   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2434639   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2434640   +   end;
MPRINT(EM_DIAGRAM):   end;
2434641   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2434642   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2434643   +   end;
MPRINT(EM_DIAGRAM):   end;
2434644   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2434645   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2434646   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2434647   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434648   +   end;
MPRINT(EM_DIAGRAM):   end;
2434649   +end;
MPRINT(EM_DIAGRAM):   end;
2434650   +
2434651   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2434652   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2434653   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2434654   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2434655   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2434656   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434657   +end;
MPRINT(EM_DIAGRAM):   end;
2434658   +else do;
MPRINT(EM_DIAGRAM):   else do;
2434659   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2434660   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2434661   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2434662   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2434663   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2434664   +   end;
MPRINT(EM_DIAGRAM):   end;
2434665   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2434666   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2434667   +   end;
MPRINT(EM_DIAGRAM):   end;
2434668   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2434669   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2434670   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2434671   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434672   +   end;
MPRINT(EM_DIAGRAM):   end;
2434673   +end;
MPRINT(EM_DIAGRAM):   end;
2434674   +
2434675   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2434676   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2434677   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2434678   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2434679   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2434680   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434681   +end;
MPRINT(EM_DIAGRAM):   end;
2434682   +else do;
MPRINT(EM_DIAGRAM):   else do;
2434683   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2434684   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2434685   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2434686   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2434687   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2434688   +   end;
MPRINT(EM_DIAGRAM):   end;
2434689   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2434690   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2434691   +   end;
MPRINT(EM_DIAGRAM):   end;
2434692   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2434693   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2434694   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2434695   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434696   +   end;
MPRINT(EM_DIAGRAM):   end;
2434697   +end;
MPRINT(EM_DIAGRAM):   end;
2434698   +
2434699   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2434700   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2434701   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2434702   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2434703   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2434704   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434705   +end;
MPRINT(EM_DIAGRAM):   end;
2434706   +else do;
MPRINT(EM_DIAGRAM):   else do;
2434707   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2434708   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2434709   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2434710   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2434711   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2434712   +   end;
MPRINT(EM_DIAGRAM):   end;
2434713   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2434714   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2434715   +   end;
MPRINT(EM_DIAGRAM):   end;
2434716   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2434717   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2434718   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2434719   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434720   +   end;
MPRINT(EM_DIAGRAM):   end;
2434721   +end;
MPRINT(EM_DIAGRAM):   end;
2434722   +
2434723   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2434724   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2434725   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2434726   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2434727   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2434728   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2434729   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2434730   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2434731   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2434732   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2434733   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2434734   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2434735   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2434736   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434737   +end;
MPRINT(EM_DIAGRAM):   end;
2434738   +else do;
MPRINT(EM_DIAGRAM):   else do;
2434739   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2434740   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2434741   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2434742   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2434743   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2434744   +   end;
MPRINT(EM_DIAGRAM):   end;
2434745   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2434746   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2434747   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2434748   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2434749   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2434750   +   end;
MPRINT(EM_DIAGRAM):   end;
2434751   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2434752   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2434753   +   end;
MPRINT(EM_DIAGRAM):   end;
2434754   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2434755   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2434756   +   end;
MPRINT(EM_DIAGRAM):   end;
2434757   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2434758   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2434759   +   end;
MPRINT(EM_DIAGRAM):   end;
2434760   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2434761   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2434762   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2434763   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2434764   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2434765   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2434766   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434767   +   end;
MPRINT(EM_DIAGRAM):   end;
2434768   +end;
MPRINT(EM_DIAGRAM):   end;
2434769   +
2434770   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2434771   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2434772   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2434773   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2434774   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2434775   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2434776   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2434777   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2434778   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2434779   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2434780   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2434781   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2434782   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2434783   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2434784   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434785   +end;
MPRINT(EM_DIAGRAM):   end;
2434786   +else do;
MPRINT(EM_DIAGRAM):   else do;
2434787   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2434788   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2434789   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2434790   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2434791   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2434792   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2434793   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2434794   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2434795   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2434796   +         end;
MPRINT(EM_DIAGRAM):   end;
2434797   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2434798   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2434799   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2434800   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2434801   +            end;
MPRINT(EM_DIAGRAM):   end;
2434802   +         end;
MPRINT(EM_DIAGRAM):   end;
2434803   +      end;
MPRINT(EM_DIAGRAM):   end;
2434804   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2434805   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2434806   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2434807   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2434808   +         end;
MPRINT(EM_DIAGRAM):   end;
2434809   +      end;
MPRINT(EM_DIAGRAM):   end;
2434810   +   end;
MPRINT(EM_DIAGRAM):   end;
2434811   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2434812   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2434813   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2434814   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2434815   +      end;
MPRINT(EM_DIAGRAM):   end;
2434816   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2434817   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2434818   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2434819   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2434820   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2434821   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2434822   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2434823   +         end;
MPRINT(EM_DIAGRAM):   end;
2434824   +      end;
MPRINT(EM_DIAGRAM):   end;
2434825   +   end;
MPRINT(EM_DIAGRAM):   end;
2434826   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2434827   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2434828   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2434829   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2434830   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2434831   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2434832   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434833   +   end;
MPRINT(EM_DIAGRAM):   end;
2434834   +end;
MPRINT(EM_DIAGRAM):   end;
2434835   +
2434836   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434837   +*** Checking missing input Interval
2434838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2434839   +
2434840   +IF NMISS(
2434841   +   AcceptedCmpTotal ,
2434842   +   Age ,
2434843   +   Frq ,
2434844   +   Income ,
2434845   +   Kidhome ,
2434846   +   Mnt ,
2434847   +   MntFishProducts ,
2434848   +   MntFruits ,
2434849   +   MntGoldProds ,
2434850   +   MntMeatProducts ,
2434851   +   MntSweetProducts ,
2434852   +   MntWines ,
2434853   +   MonthsAsCustomer ,
2434854   +   NumCatalogPurchases ,
2434855   +   NumDealsPurchases ,
2434856   +   NumDistPurchases ,
2434857   +   NumStorePurchases ,
2434858   +   NumWebPurchases ,
2434859   +   NumWebVisitsMonth ,
2434860   +   RFMstat ,
2434861   +   RMntFrq ,
2434862   +   Recency ,
2434863   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2434864   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2434865   +
2434866   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2434867   +END;
MPRINT(EM_DIAGRAM):   END;
2434868   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434869   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2434870   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434871   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2434872   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2434873   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2434874   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2434875   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2434876   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2434877   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2434878   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2434879   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2434880   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2434881   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2434882   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2434883   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2434884   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2434885   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2434886   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2434887   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2434888   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2434889   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2434890   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2434891   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2434892   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2434893   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2434894   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2434895   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2434896   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2434897   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2434898   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2434899   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2434900   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2434901   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2434902   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2434903   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2434904   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2434905   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2434906   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2434907   +END;
MPRINT(EM_DIAGRAM):   END;
2434908   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2434909   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2434910   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2434911   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2434912   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2434913   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2434914   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2434915   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2434916   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2434917   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2434918   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2434919   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2434920   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2434921   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2434922   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2434923   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2434924   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2434925   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2434926   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2434927   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2434928   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2434929   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2434930   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2434931   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2434932   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2434933   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2434934   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2434935   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2434936   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2434937   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2434938   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2434939   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2434940   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2434941   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2434942   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2434943   +   ELSE S_NumCatalogPurchases
2434944   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2434945   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2434946   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2434947   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2434948   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2434949   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2434950   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2434951   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2434952   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2434953   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2434954   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2434955   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2434956   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2434957   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2434958   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2434959   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2434960   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2434961   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2434962   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2434963   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2434964   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2434965   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2434966   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2434967   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2434968   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2434969   +END;
MPRINT(EM_DIAGRAM):   END;
2434970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434971   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2434972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434974   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2434975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434976   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434977   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2434978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2434979   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2434980   +   H1x1_1  =     -2.0588471958351 * S_AcceptedCmpTotal
2434981   +          +     0.38628980389456 * S_Age  +     -0.8545617733777 * S_Frq
2434982   +          +    -1.37557200210661 * S_Income  +     1.58583945545125 *
2434983   +        S_Kidhome  +    -1.49250871593186 * S_Mnt  +    -2.02986091068301 *
2434984   +        S_MntFishProducts  +     0.28845511703412 * S_MntFruits
2434985   +          +    -0.62495372005095 * S_MntGoldProds  +     3.22144698444712 *
2434986   +        S_MntMeatProducts  +    -2.67158036653801 * S_MntSweetProducts
2434987   +          +    -4.30837863985493 * S_MntWines  +     0.39603200162704 *
2434988   +        S_MonthsAsCustomer  +      1.8259166147951 * S_NumCatalogPurchases
2434989   +          +      3.4758215776031 * S_NumDealsPurchases
2434990   +          +     0.17094021755289 * S_NumDistPurchases
2434991   +          +    -2.72090095694641 * S_NumStorePurchases
2434992   +          +    -0.31877935826328 * S_NumWebPurchases
2434993   +          +    -2.03399974412918 * S_NumWebVisitsMonth
2434994   +          +     2.74309130038659 * S_RFMstat  +    -0.74941844935268 *
2434995   +        S_RMntFrq  +     0.29064555076615 * S_Recency
2434996   +          +    -0.57040700827247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.0588471958351 * S_AcceptedCmpTotal + 0.38628980389456 * 
S_Age + -0.8545617733777 * S_Frq + -1.37557200210661 * S_Income + 1.58583945545125 * S_Kidhome 
+ -1.49250871593186 * S_Mnt + -2.02986091068301 * S_MntFishProducts + 0.28845511703412 * 
S_MntFruits + -0.62495372005095 * S_MntGoldProds + 3.22144698444712 * S_MntMeatProducts + 
-2.67158036653801 * S_MntSweetProducts + -4.30837863985493 * S_MntWines + 0.39603200162704 * 
S_MonthsAsCustomer + 1.8259166147951 * S_NumCatalogPurchases + 3.4758215776031 * 
S_NumDealsPurchases + 0.17094021755289 * S_NumDistPurchases + -2.72090095694641 * 
S_NumStorePurchases + -0.31877935826328 * S_NumWebPurchases + -2.03399974412918 * 
S_NumWebVisitsMonth + 2.74309130038659 * S_RFMstat + -0.74941844935268 * S_RMntFrq + 
0.29064555076615 * S_Recency + -0.57040700827247 * S_Teenhome ;
2434997   +   H1x1_2  =     -0.5995699177824 * S_AcceptedCmpTotal
2434998   +          +    -1.17769485933608 * S_Age  +     0.95998296288295 * S_Frq
2434999   +          +     -2.2343179478513 * S_Income  +     3.17436638275163 *
2435000   +        S_Kidhome  +     0.46987648124346 * S_Mnt  +     0.07213935656698 *
2435001   +        S_MntFishProducts  +    -1.38055808108069 * S_MntFruits
2435002   +          +     0.62140960451545 * S_MntGoldProds  +     -1.9000500396873 *
2435003   +        S_MntMeatProducts  +    -0.35707372583597 * S_MntSweetProducts
2435004   +          +     1.99720917743483 * S_MntWines  +     0.89245096364062 *
2435005   +        S_MonthsAsCustomer  +    -0.61497875715928 * S_NumCatalogPurchases
2435006   +          +    -1.21013804197082 * S_NumDealsPurchases
2435007   +          +     0.59974279122188 * S_NumDistPurchases
2435008   +          +     1.92425710681156 * S_NumStorePurchases
2435009   +          +     1.02413182452324 * S_NumWebPurchases
2435010   +          +    -3.63276285340174 * S_NumWebVisitsMonth
2435011   +          +     0.33919100670479 * S_RFMstat  +     0.84767315208026 *
2435012   +        S_RMntFrq  +     3.87352563099005 * S_Recency
2435013   +          +     2.74174964084917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5995699177824 * S_AcceptedCmpTotal + -1.17769485933608 * 
S_Age + 0.95998296288295 * S_Frq + -2.2343179478513 * S_Income + 3.17436638275163 * S_Kidhome 
+ 0.46987648124346 * S_Mnt + 0.07213935656698 * S_MntFishProducts + -1.38055808108069 * 
S_MntFruits + 0.62140960451545 * S_MntGoldProds + -1.9000500396873 * S_MntMeatProducts + 
-0.35707372583597 * S_MntSweetProducts + 1.99720917743483 * S_MntWines + 0.89245096364062 * 
S_MonthsAsCustomer + -0.61497875715928 * S_NumCatalogPurchases + -1.21013804197082 * 
S_NumDealsPurchases + 0.59974279122188 * S_NumDistPurchases + 1.92425710681156 * 
S_NumStorePurchases + 1.02413182452324 * S_NumWebPurchases + -3.63276285340174 * 
S_NumWebVisitsMonth + 0.33919100670479 * S_RFMstat + 0.84767315208026 * S_RMntFrq + 
3.87352563099005 * S_Recency + 2.74174964084917 * S_Teenhome ;
2435014   +   H1x1_3  =    -2.27029708882419 * S_AcceptedCmpTotal
2435015   +          +     0.57558817521081 * S_Age  +     0.03666022895146 * S_Frq
2435016   +          +    -0.43764949843184 * S_Income  +     0.05202039236868 *
2435017   +        S_Kidhome  +    -0.17515517773197 * S_Mnt  +      2.1454579331563 *
2435018   +        S_MntFishProducts  +     -0.0544472234117 * S_MntFruits
2435019   +          +    -0.24751372889101 * S_MntGoldProds  +    -7.95986512066472 *
2435020   +        S_MntMeatProducts  +    -0.42258869313323 * S_MntSweetProducts
2435021   +          +      4.6542173574208 * S_MntWines  +     0.27973663838423 *
2435022   +        S_MonthsAsCustomer  +    -0.92923468464154 * S_NumCatalogPurchases
2435023   +          +      0.4928343071801 * S_NumDealsPurchases
2435024   +          +     -0.0196677325409 * S_NumDistPurchases
2435025   +          +     0.44395828164873 * S_NumStorePurchases
2435026   +          +     0.86947051591224 * S_NumWebPurchases
2435027   +          +    -0.96787241206077 * S_NumWebVisitsMonth
2435028   +          +     -0.9429396337834 * S_RFMstat  +    -1.69298966254302 *
2435029   +        S_RMntFrq  +     0.24582117217188 * S_Recency
2435030   +          +    -1.08471509540368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.27029708882419 * S_AcceptedCmpTotal + 0.57558817521081 * 
S_Age + 0.03666022895146 * S_Frq + -0.43764949843184 * S_Income + 0.05202039236868 * S_Kidhome 
+ -0.17515517773197 * S_Mnt + 2.1454579331563 * S_MntFishProducts + -0.0544472234117 * 
S_MntFruits + -0.24751372889101 * S_MntGoldProds + -7.95986512066472 * S_MntMeatProducts + 
-0.42258869313323 * S_MntSweetProducts + 4.6542173574208 * S_MntWines + 0.27973663838423 * 
S_MonthsAsCustomer + -0.92923468464154 * S_NumCatalogPurchases + 0.4928343071801 * 
S_NumDealsPurchases + -0.0196677325409 * S_NumDistPurchases + 0.44395828164873 * 
S_NumStorePurchases + 0.86947051591224 * S_NumWebPurchases + -0.96787241206077 * 
S_NumWebVisitsMonth + -0.9429396337834 * S_RFMstat + -1.69298966254302 * S_RMntFrq + 
0.24582117217188 * S_Recency + -1.08471509540368 * S_Teenhome ;
2435031   +   H1x1_4  =     0.54181596412096 * S_AcceptedCmpTotal
2435032   +          +    -1.19331526818752 * S_Age  +     0.79853759822324 * S_Frq
2435033   +          +     0.73370928178794 * S_Income  +     0.38661834479377 *
2435034   +        S_Kidhome  +      0.3442876988888 * S_Mnt  +    -0.58769739655035 *
2435035   +        S_MntFishProducts  +     -0.8703586573687 * S_MntFruits
2435036   +          +    -0.06073044217122 * S_MntGoldProds  +     1.06031608775663 *
2435037   +        S_MntMeatProducts  +      0.1600438561366 * S_MntSweetProducts
2435038   +          +    -0.10937637342015 * S_MntWines  +     0.44423445817796 *
2435039   +        S_MonthsAsCustomer  +     2.20653376632749 * S_NumCatalogPurchases
2435040   +          +     1.10280977051932 * S_NumDealsPurchases
2435041   +          +     0.99310057404036 * S_NumDistPurchases
2435042   +          +    -0.05647459609331 * S_NumStorePurchases
2435043   +          +    -0.89852483938631 * S_NumWebPurchases
2435044   +          +     2.63022480227445 * S_NumWebVisitsMonth
2435045   +          +      0.0081819695781 * S_RFMstat  +     1.19338523211724 *
2435046   +        S_RMntFrq  +    -4.46436997560659 * S_Recency
2435047   +          +    -2.03251171372039 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54181596412096 * S_AcceptedCmpTotal + -1.19331526818752 * 
S_Age + 0.79853759822324 * S_Frq + 0.73370928178794 * S_Income + 0.38661834479377 * S_Kidhome 
+ 0.3442876988888 * S_Mnt + -0.58769739655035 * S_MntFishProducts + -0.8703586573687 * 
S_MntFruits + -0.06073044217122 * S_MntGoldProds + 1.06031608775663 * S_MntMeatProducts + 
0.1600438561366 * S_MntSweetProducts + -0.10937637342015 * S_MntWines + 0.44423445817796 * 
S_MonthsAsCustomer + 2.20653376632749 * S_NumCatalogPurchases + 1.10280977051932 * 
S_NumDealsPurchases + 0.99310057404036 * S_NumDistPurchases + -0.05647459609331 * 
S_NumStorePurchases + -0.89852483938631 * S_NumWebPurchases + 2.63022480227445 * 
S_NumWebVisitsMonth + 0.0081819695781 * S_RFMstat + 1.19338523211724 * S_RMntFrq + 
-4.46436997560659 * S_Recency + -2.03251171372039 * S_Teenhome ;
2435048   +   H1x1_5  =    -1.03227948250072 * S_AcceptedCmpTotal
2435049   +          +     0.25510562405413 * S_Age  +     0.11938172756061 * S_Frq
2435050   +          +    -0.88855927472898 * S_Income  +    -0.98732962014399 *
2435051   +        S_Kidhome  +     0.57537935682752 * S_Mnt  +     0.07702692666996 *
2435052   +        S_MntFishProducts  +     0.69541223905843 * S_MntFruits
2435053   +          +    -0.26720187465927 * S_MntGoldProds  +    -0.03938241662919 *
2435054   +        S_MntMeatProducts  +     1.08781093588885 * S_MntSweetProducts
2435055   +          +     1.16253823123182 * S_MntWines  +    -1.60607722651025 *
2435056   +        S_MonthsAsCustomer  +    -1.69043794225498 * S_NumCatalogPurchases
2435057   +          +    -2.62220616180571 * S_NumDealsPurchases
2435058   +          +    -0.51737930835331 * S_NumDistPurchases
2435059   +          +     0.88655783158133 * S_NumStorePurchases
2435060   +          +     0.35132468809969 * S_NumWebPurchases
2435061   +          +     -1.6320869675862 * S_NumWebVisitsMonth
2435062   +          +     0.33776958473405 * S_RFMstat  +    -0.42290181425075 *
2435063   +        S_RMntFrq  +     1.06226028677401 * S_Recency
2435064   +          +     1.11855899514962 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.03227948250072 * S_AcceptedCmpTotal + 0.25510562405413 * 
S_Age + 0.11938172756061 * S_Frq + -0.88855927472898 * S_Income + -0.98732962014399 * 
S_Kidhome + 0.57537935682752 * S_Mnt + 0.07702692666996 * S_MntFishProducts + 0.69541223905843 
* S_MntFruits + -0.26720187465927 * S_MntGoldProds + -0.03938241662919 * S_MntMeatProducts + 
1.08781093588885 * S_MntSweetProducts + 1.16253823123182 * S_MntWines + -1.60607722651025 * 
S_MonthsAsCustomer + -1.69043794225498 * S_NumCatalogPurchases + -2.62220616180571 * 
S_NumDealsPurchases + -0.51737930835331 * S_NumDistPurchases + 0.88655783158133 * 
S_NumStorePurchases + 0.35132468809969 * S_NumWebPurchases + -1.6320869675862 * 
S_NumWebVisitsMonth + 0.33776958473405 * S_RFMstat + -0.42290181425075 * S_RMntFrq + 
1.06226028677401 * S_Recency + 1.11855899514962 * S_Teenhome ;
2435065   +   H1x1_1  = H1x1_1  +     0.53637737817097 * AcceptedCmp10
2435066   +          +    -1.85405146733588 * AcceptedCmp20  +    -1.47621046566649 *
2435067   +        AcceptedCmp30  +    -1.37767318086242 * AcceptedCmp40
2435068   +          +    -0.96348396070145 * AcceptedCmp50  +    -1.30976546088379 *
2435069   +        Complain0  +    -0.54848314184314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.53637737817097 * AcceptedCmp10 + -1.85405146733588 * 
AcceptedCmp20 + -1.47621046566649 * AcceptedCmp30 + -1.37767318086242 * AcceptedCmp40 + 
-0.96348396070145 * AcceptedCmp50 + -1.30976546088379 * Complain0 + -0.54848314184314 * 
HigherEducationBinary0 ;
2435070   +   H1x1_2  = H1x1_2  +     0.18445380584184 * AcceptedCmp10
2435071   +          +    -0.69257274561716 * AcceptedCmp20  +     0.17226038285159 *
2435072   +        AcceptedCmp30  +    -1.06145995435722 * AcceptedCmp40
2435073   +          +     1.23459262841144 * AcceptedCmp50  +    -0.14674063302587 *
2435074   +        Complain0  +    -1.08422405648698 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.18445380584184 * AcceptedCmp10 + -0.69257274561716 * 
AcceptedCmp20 + 0.17226038285159 * AcceptedCmp30 + -1.06145995435722 * AcceptedCmp40 + 
1.23459262841144 * AcceptedCmp50 + -0.14674063302587 * Complain0 + -1.08422405648698 * 
HigherEducationBinary0 ;
2435075   +   H1x1_3  = H1x1_3  +     0.81272808689375 * AcceptedCmp10
2435076   +          +    -0.37057950605918 * AcceptedCmp20  +    -1.75364708883985 *
2435077   +        AcceptedCmp30  +     -1.9879502333289 * AcceptedCmp40
2435078   +          +     2.82649108460951 * AcceptedCmp50  +    -0.14219031901768 *
2435079   +        Complain0  +     -0.5514346363694 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.81272808689375 * AcceptedCmp10 + -0.37057950605918 * 
AcceptedCmp20 + -1.75364708883985 * AcceptedCmp30 + -1.9879502333289 * AcceptedCmp40 + 
2.82649108460951 * AcceptedCmp50 + -0.14219031901768 * Complain0 + -0.5514346363694 * 
HigherEducationBinary0 ;
2435080   +   H1x1_4  = H1x1_4  +    -1.12354567881562 * AcceptedCmp10
2435081   +          +    -1.64564861831306 * AcceptedCmp20  +    -1.84950171464501 *
2435082   +        AcceptedCmp30  +    -2.60581164673686 * AcceptedCmp40
2435083   +          +    -0.53568003317161 * AcceptedCmp50  +    -0.13929928866767 *
2435084   +        Complain0  +     1.18053116626218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12354567881562 * AcceptedCmp10 + -1.64564861831306 
* AcceptedCmp20 + -1.84950171464501 * AcceptedCmp30 + -2.60581164673686 * AcceptedCmp40 + 
-0.53568003317161 * AcceptedCmp50 + -0.13929928866767 * Complain0 + 1.18053116626218 * 
HigherEducationBinary0 ;
2435085   +   H1x1_5  = H1x1_5  +     -0.3006993305802 * AcceptedCmp10
2435086   +          +    -0.67101949915278 * AcceptedCmp20  +     0.48950637221178 *
2435087   +        AcceptedCmp30  +     0.25937105093078 * AcceptedCmp40
2435088   +          +       0.650714225549 * AcceptedCmp50  +    -0.53543482850089 *
2435089   +        Complain0  +     0.62014708316206 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.3006993305802 * AcceptedCmp10 + -0.67101949915278 * 
AcceptedCmp20 + 0.48950637221178 * AcceptedCmp30 + 0.25937105093078 * AcceptedCmp40 + 
0.650714225549 * AcceptedCmp50 + -0.53543482850089 * Complain0 + 0.62014708316206 * 
HigherEducationBinary0 ;
2435090   +   H1x1_1  = H1x1_1  +     0.78710932360637 * Education2n_Cycle
2435091   +          +    -0.34656604802235 * EducationBasic  +     0.11820082193221 *
2435092   +        EducationGraduation  +     1.42539292513854 * EducationMaster
2435093   +          +     0.34809919741136 * Marital_StatusDivorced
2435094   +          +    -0.26594093535929 * Marital_StatusMarried
2435095   +          +     0.70249715999987 * Marital_StatusSingle
2435096   +          +    -0.45710525283449 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.78710932360637 * Education2n_Cycle + 
-0.34656604802235 * EducationBasic + 0.11820082193221 * EducationGraduation + 1.42539292513854 
* EducationMaster + 0.34809919741136 * Marital_StatusDivorced + -0.26594093535929 * 
Marital_StatusMarried + 0.70249715999987 * Marital_StatusSingle + -0.45710525283449 * 
Marital_StatusTogether ;
2435097   +   H1x1_2  = H1x1_2  +    -1.00496261512915 * Education2n_Cycle
2435098   +          +     0.66783492956492 * EducationBasic  +     0.91185122922538 *
2435099   +        EducationGraduation  +    -0.28204692640004 * EducationMaster
2435100   +          +    -0.20448765627193 * Marital_StatusDivorced
2435101   +          +     1.73231344674733 * Marital_StatusMarried
2435102   +          +    -0.70956480480373 * Marital_StatusSingle
2435103   +          +      1.0926428215879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.00496261512915 * Education2n_Cycle + 
0.66783492956492 * EducationBasic + 0.91185122922538 * EducationGraduation + -0.28204692640004 
* EducationMaster + -0.20448765627193 * Marital_StatusDivorced + 1.73231344674733 * 
Marital_StatusMarried + -0.70956480480373 * Marital_StatusSingle + 1.0926428215879 * 
Marital_StatusTogether ;
2435104   +   H1x1_3  = H1x1_3  +    -0.06222681334412 * Education2n_Cycle
2435105   +          +    -0.00009122618999 * EducationBasic  +    -0.07444046529217 *
2435106   +        EducationGraduation  +     1.01284161768787 * EducationMaster
2435107   +          +     0.30333818684353 * Marital_StatusDivorced
2435108   +          +    -1.44603535988199 * Marital_StatusMarried
2435109   +          +     0.48409598426383 * Marital_StatusSingle
2435110   +          +    -1.14528682521622 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.06222681334412 * Education2n_Cycle + 
-0.00009122618999 * EducationBasic + -0.07444046529217 * EducationGraduation + 
1.01284161768787 * EducationMaster + 0.30333818684353 * Marital_StatusDivorced + 
-1.44603535988199 * Marital_StatusMarried + 0.48409598426383 * Marital_StatusSingle + 
-1.14528682521622 * Marital_StatusTogether ;
2435111   +   H1x1_4  = H1x1_4  +    -0.92316818310935 * Education2n_Cycle
2435112   +          +     0.93590924020503 * EducationBasic  +     0.36762108040277 *
2435113   +        EducationGraduation  +    -1.17735200022013 * EducationMaster
2435114   +          +     -1.5342907846297 * Marital_StatusDivorced
2435115   +          +    -1.79544684592172 * Marital_StatusMarried
2435116   +          +     0.65604313645117 * Marital_StatusSingle
2435117   +          +    -2.08172869142628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.92316818310935 * Education2n_Cycle + 
0.93590924020503 * EducationBasic + 0.36762108040277 * EducationGraduation + -1.17735200022013 
* EducationMaster + -1.5342907846297 * Marital_StatusDivorced + -1.79544684592172 * 
Marital_StatusMarried + 0.65604313645117 * Marital_StatusSingle + -2.08172869142628 * 
Marital_StatusTogether ;
2435118   +   H1x1_5  = H1x1_5  +    -0.56328800945753 * Education2n_Cycle
2435119   +          +    -0.06918346311418 * EducationBasic  +     -1.5176897786776 *
2435120   +        EducationGraduation  +     0.09618331198762 * EducationMaster
2435121   +          +    -3.97940893560267 * Marital_StatusDivorced
2435122   +          +      3.5880254142663 * Marital_StatusMarried
2435123   +          +     -2.9897737730927 * Marital_StatusSingle
2435124   +          +     3.75098376776525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.56328800945753 * Education2n_Cycle + 
-0.06918346311418 * EducationBasic + -1.5176897786776 * EducationGraduation + 0.09618331198762 
* EducationMaster + -3.97940893560267 * Marital_StatusDivorced + 3.5880254142663 * 
Marital_StatusMarried + -2.9897737730927 * Marital_StatusSingle + 3.75098376776525 * 
Marital_StatusTogether ;
2435125   +   H1x1_1  =    -2.89135496095875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.89135496095875 + H1x1_1 ;
2435126   +   H1x1_2  =     0.39943637099295 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.39943637099295 + H1x1_2 ;
2435127   +   H1x1_3  =    -1.08093114818147 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.08093114818147 + H1x1_3 ;
2435128   +   H1x1_4  =    -3.29426643182948 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.29426643182948 + H1x1_4 ;
2435129   +   H1x1_5  =    -1.76822552726746 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.76822552726746 + H1x1_5 ;
2435130   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2435131   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2435132   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2435133   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2435134   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2435135   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2435136   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2435137   +END;
MPRINT(EM_DIAGRAM):   END;
2435138   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2435139   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2435140   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2435141   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2435142   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2435143   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2435144   +END;
MPRINT(EM_DIAGRAM):   END;
2435145   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435146   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2435147   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435148   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2435149   +   H1x2_1  =     1.01981866144831 * S_AcceptedCmpTotal
2435150   +          +    -1.47346125364319 * S_Age  +    -0.08669650492194 * S_Frq
2435151   +          +    -0.51585471637562 * S_Income  +     1.40711190452923 *
2435152   +        S_Kidhome  +    -0.21341957199148 * S_Mnt  +    -0.31211158173505 *
2435153   +        S_MntFishProducts  +    -0.77126486046129 * S_MntFruits
2435154   +          +     -0.4503905849175 * S_MntGoldProds  +     1.01090165857015 *
2435155   +        S_MntMeatProducts  +    -0.05554268249583 * S_MntSweetProducts
2435156   +          +     2.72203992871966 * S_MntWines  +    -0.46212144021719 *
2435157   +        S_MonthsAsCustomer  +    -0.10495120677935 * S_NumCatalogPurchases
2435158   +          +     0.07279889333775 * S_NumDealsPurchases
2435159   +          +     0.07542203992452 * S_NumDistPurchases
2435160   +          +     0.16296239303342 * S_NumStorePurchases
2435161   +          +     1.59193921229231 * S_NumWebPurchases
2435162   +          +    -0.35227839362603 * S_NumWebVisitsMonth
2435163   +          +      1.3224105019117 * S_RFMstat  +    -0.77035988511057 *
2435164   +        S_RMntFrq  +     0.43315770276588 * S_Recency
2435165   +          +     0.43447147039235 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.01981866144831 * S_AcceptedCmpTotal + -1.47346125364319 * 
S_Age + -0.08669650492194 * S_Frq + -0.51585471637562 * S_Income + 1.40711190452923 * 
S_Kidhome + -0.21341957199148 * S_Mnt + -0.31211158173505 * S_MntFishProducts + 
-0.77126486046129 * S_MntFruits + -0.4503905849175 * S_MntGoldProds + 1.01090165857015 * 
S_MntMeatProducts + -0.05554268249583 * S_MntSweetProducts + 2.72203992871966 * S_MntWines + 
-0.46212144021719 * S_MonthsAsCustomer + -0.10495120677935 * S_NumCatalogPurchases + 
0.07279889333775 * S_NumDealsPurchases + 0.07542203992452 * S_NumDistPurchases + 
0.16296239303342 * S_NumStorePurchases + 1.59193921229231 * S_NumWebPurchases + 
-0.35227839362603 * S_NumWebVisitsMonth + 1.3224105019117 * S_RFMstat + -0.77035988511057 * 
S_RMntFrq + 0.43315770276588 * S_Recency + 0.43447147039235 * S_Teenhome ;
2435166   +   H1x2_2  =    -0.07629675162821 * S_AcceptedCmpTotal
2435167   +          +     0.81684969971216 * S_Age  +     0.52870818801428 * S_Frq
2435168   +          +     0.15358022485378 * S_Income  +    -0.64458879887927 *
2435169   +        S_Kidhome  +    -2.12225648421746 * S_Mnt  +     1.05240671673302 *
2435170   +        S_MntFishProducts  +    -0.89595336397918 * S_MntFruits
2435171   +          +    -0.28950558043577 * S_MntGoldProds  +     0.30996043499478 *
2435172   +        S_MntMeatProducts  +     1.27676485470274 * S_MntSweetProducts
2435173   +          +    -1.30045112439384 * S_MntWines  +     1.36110971826862 *
2435174   +        S_MonthsAsCustomer  +     -0.1778244163518 * S_NumCatalogPurchases
2435175   +          +    -0.37456959251084 * S_NumDealsPurchases
2435176   +          +    -1.15252469975668 * S_NumDistPurchases
2435177   +          +    -1.39822501888899 * S_NumStorePurchases
2435178   +          +    -0.32777847360723 * S_NumWebPurchases
2435179   +          +     0.84026499832926 * S_NumWebVisitsMonth
2435180   +          +    -1.47180193258497 * S_RFMstat  +     0.18801983980439 *
2435181   +        S_RMntFrq  +     1.21016626691186 * S_Recency
2435182   +          +    -0.82943594788748 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07629675162821 * S_AcceptedCmpTotal + 0.81684969971216 * 
S_Age + 0.52870818801428 * S_Frq + 0.15358022485378 * S_Income + -0.64458879887927 * S_Kidhome 
+ -2.12225648421746 * S_Mnt + 1.05240671673302 * S_MntFishProducts + -0.89595336397918 * 
S_MntFruits + -0.28950558043577 * S_MntGoldProds + 0.30996043499478 * S_MntMeatProducts + 
1.27676485470274 * S_MntSweetProducts + -1.30045112439384 * S_MntWines + 1.36110971826862 * 
S_MonthsAsCustomer + -0.1778244163518 * S_NumCatalogPurchases + -0.37456959251084 * 
S_NumDealsPurchases + -1.15252469975668 * S_NumDistPurchases + -1.39822501888899 * 
S_NumStorePurchases + -0.32777847360723 * S_NumWebPurchases + 0.84026499832926 * 
S_NumWebVisitsMonth + -1.47180193258497 * S_RFMstat + 0.18801983980439 * S_RMntFrq + 
1.21016626691186 * S_Recency + -0.82943594788748 * S_Teenhome ;
2435183   +   H1x2_3  =    -0.06736000283511 * S_AcceptedCmpTotal
2435184   +          +    -0.47270148030219 * S_Age  +      1.1959707178877 * S_Frq
2435185   +          +    -1.40081626653738 * S_Income  +     0.35085595025526 *
2435186   +        S_Kidhome  +    -0.43652344252181 * S_Mnt  +     1.12197802721591 *
2435187   +        S_MntFishProducts  +     1.27079634537799 * S_MntFruits
2435188   +          +    -0.03023683680758 * S_MntGoldProds  +     0.51289568088141 *
2435189   +        S_MntMeatProducts  +     1.12894900622408 * S_MntSweetProducts
2435190   +          +    -0.66940205871871 * S_MntWines  +    -1.57211003055303 *
2435191   +        S_MonthsAsCustomer  +     1.47778465205569 * S_NumCatalogPurchases
2435192   +          +     1.14090099538367 * S_NumDealsPurchases
2435193   +          +     -0.2600155774492 * S_NumDistPurchases
2435194   +          +     1.31362002392113 * S_NumStorePurchases
2435195   +          +     1.31465307763555 * S_NumWebPurchases
2435196   +          +    -0.18041623858351 * S_NumWebVisitsMonth
2435197   +          +    -0.12685084546738 * S_RFMstat  +     0.43500462904027 *
2435198   +        S_RMntFrq  +    -0.81910738140729 * S_Recency
2435199   +          +    -0.61936793661609 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.06736000283511 * S_AcceptedCmpTotal + -0.47270148030219 * 
S_Age + 1.1959707178877 * S_Frq + -1.40081626653738 * S_Income + 0.35085595025526 * S_Kidhome 
+ -0.43652344252181 * S_Mnt + 1.12197802721591 * S_MntFishProducts + 1.27079634537799 * 
S_MntFruits + -0.03023683680758 * S_MntGoldProds + 0.51289568088141 * S_MntMeatProducts + 
1.12894900622408 * S_MntSweetProducts + -0.66940205871871 * S_MntWines + -1.57211003055303 * 
S_MonthsAsCustomer + 1.47778465205569 * S_NumCatalogPurchases + 1.14090099538367 * 
S_NumDealsPurchases + -0.2600155774492 * S_NumDistPurchases + 1.31362002392113 * 
S_NumStorePurchases + 1.31465307763555 * S_NumWebPurchases + -0.18041623858351 * 
S_NumWebVisitsMonth + -0.12685084546738 * S_RFMstat + 0.43500462904027 * S_RMntFrq + 
-0.81910738140729 * S_Recency + -0.61936793661609 * S_Teenhome ;
2435200   +   H1x2_4  =    -0.31415783692162 * S_AcceptedCmpTotal
2435201   +          +     0.11061423227332 * S_Age  +    -0.65722939551233 * S_Frq
2435202   +          +     -0.9063192568986 * S_Income  +      0.4013752851291 *
2435203   +        S_Kidhome  +    -1.06795963585271 * S_Mnt  +     0.24969441019479 *
2435204   +        S_MntFishProducts  +    -0.63550038240549 * S_MntFruits
2435205   +          +     1.04454010114015 * S_MntGoldProds  +     0.89912571026653 *
2435206   +        S_MntMeatProducts  +    -1.92356868621234 * S_MntSweetProducts
2435207   +          +     -1.8642245725538 * S_MntWines  +     0.13416556054779 *
2435208   +        S_MonthsAsCustomer  +    -1.01272407075887 * S_NumCatalogPurchases
2435209   +          +     1.06486073796679 * S_NumDealsPurchases
2435210   +          +    -0.04890191247577 * S_NumDistPurchases
2435211   +          +     0.86871320720698 * S_NumStorePurchases
2435212   +          +     0.03183587281884 * S_NumWebPurchases
2435213   +          +     -0.4863802923315 * S_NumWebVisitsMonth
2435214   +          +    -1.38034657666878 * S_RFMstat  +    -0.73640242597195 *
2435215   +        S_RMntFrq  +     0.17186861211542 * S_Recency
2435216   +          +    -0.39595339111048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.31415783692162 * S_AcceptedCmpTotal + 0.11061423227332 * 
S_Age + -0.65722939551233 * S_Frq + -0.9063192568986 * S_Income + 0.4013752851291 * S_Kidhome 
+ -1.06795963585271 * S_Mnt + 0.24969441019479 * S_MntFishProducts + -0.63550038240549 * 
S_MntFruits + 1.04454010114015 * S_MntGoldProds + 0.89912571026653 * S_MntMeatProducts + 
-1.92356868621234 * S_MntSweetProducts + -1.8642245725538 * S_MntWines + 0.13416556054779 * 
S_MonthsAsCustomer + -1.01272407075887 * S_NumCatalogPurchases + 1.06486073796679 * 
S_NumDealsPurchases + -0.04890191247577 * S_NumDistPurchases + 0.86871320720698 * 
S_NumStorePurchases + 0.03183587281884 * S_NumWebPurchases + -0.4863802923315 * 
S_NumWebVisitsMonth + -1.38034657666878 * S_RFMstat + -0.73640242597195 * S_RMntFrq + 
0.17186861211542 * S_Recency + -0.39595339111048 * S_Teenhome ;
2435217   +   H1x2_5  =     1.68315669988315 * S_AcceptedCmpTotal
2435218   +          +    -1.67467335764173 * S_Age  +     1.29921539173109 * S_Frq
2435219   +          +    -0.52305600367899 * S_Income  +     1.06261291858944 *
2435220   +        S_Kidhome  +     1.77049882170904 * S_Mnt  +    -0.27692609509601 *
2435221   +        S_MntFishProducts  +    -1.23166107817727 * S_MntFruits
2435222   +          +    -2.21476398466362 * S_MntGoldProds  +     1.02542528622621 *
2435223   +        S_MntMeatProducts  +     1.04913114036094 * S_MntSweetProducts
2435224   +          +     0.30606520702636 * S_MntWines  +    -1.15158074964406 *
2435225   +        S_MonthsAsCustomer  +     0.77918810586275 * S_NumCatalogPurchases
2435226   +          +    -0.01160267590349 * S_NumDealsPurchases
2435227   +          +    -0.92773075463083 * S_NumDistPurchases
2435228   +          +    -0.83326680533995 * S_NumStorePurchases
2435229   +          +    -1.16991058954473 * S_NumWebPurchases
2435230   +          +    -2.07771165573723 * S_NumWebVisitsMonth
2435231   +          +     0.59832456826177 * S_RFMstat  +     0.08151078945291 *
2435232   +        S_RMntFrq  +     0.80165981122986 * S_Recency
2435233   +          +     1.41798811088435 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.68315669988315 * S_AcceptedCmpTotal + -1.67467335764173 * 
S_Age + 1.29921539173109 * S_Frq + -0.52305600367899 * S_Income + 1.06261291858944 * S_Kidhome 
+ 1.77049882170904 * S_Mnt + -0.27692609509601 * S_MntFishProducts + -1.23166107817727 * 
S_MntFruits + -2.21476398466362 * S_MntGoldProds + 1.02542528622621 * S_MntMeatProducts + 
1.04913114036094 * S_MntSweetProducts + 0.30606520702636 * S_MntWines + -1.15158074964406 * 
S_MonthsAsCustomer + 0.77918810586275 * S_NumCatalogPurchases + -0.01160267590349 * 
S_NumDealsPurchases + -0.92773075463083 * S_NumDistPurchases + -0.83326680533995 * 
S_NumStorePurchases + -1.16991058954473 * S_NumWebPurchases + -2.07771165573723 * 
S_NumWebVisitsMonth + 0.59832456826177 * S_RFMstat + 0.08151078945291 * S_RMntFrq + 
0.80165981122986 * S_Recency + 1.41798811088435 * S_Teenhome ;
2435234   +   H1x2_1  = H1x2_1  +    -0.16600737981926 * AcceptedCmp10
2435235   +          +     1.41264623988567 * AcceptedCmp20  +      1.0446306999234 *
2435236   +        AcceptedCmp30  +    -1.00688604631169 * AcceptedCmp40
2435237   +          +     0.64523782235527 * AcceptedCmp50  +    -1.76623980391232 *
2435238   +        Complain0  +     1.64644530449125 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.16600737981926 * AcceptedCmp10 + 1.41264623988567 * 
AcceptedCmp20 + 1.0446306999234 * AcceptedCmp30 + -1.00688604631169 * AcceptedCmp40 + 
0.64523782235527 * AcceptedCmp50 + -1.76623980391232 * Complain0 + 1.64644530449125 * 
HigherEducationBinary0 ;
2435239   +   H1x2_2  = H1x2_2  +    -0.39493094663506 * AcceptedCmp10
2435240   +          +    -0.99095404154277 * AcceptedCmp20  +    -0.81166937096774 *
2435241   +        AcceptedCmp30  +     0.14520361414777 * AcceptedCmp40
2435242   +          +    -1.54302055254785 * AcceptedCmp50  +    -0.60600550413714 *
2435243   +        Complain0  +    -3.04730224174859 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.39493094663506 * AcceptedCmp10 + -0.99095404154277 
* AcceptedCmp20 + -0.81166937096774 * AcceptedCmp30 + 0.14520361414777 * AcceptedCmp40 + 
-1.54302055254785 * AcceptedCmp50 + -0.60600550413714 * Complain0 + -3.04730224174859 * 
HigherEducationBinary0 ;
2435244   +   H1x2_3  = H1x2_3  +      1.8650016934441 * AcceptedCmp10
2435245   +          +     0.85335394099291 * AcceptedCmp20  +     0.47327521312159 *
2435246   +        AcceptedCmp30  +    -2.64862753506152 * AcceptedCmp40
2435247   +          +     0.65827168680229 * AcceptedCmp50  +     0.45516433167059 *
2435248   +        Complain0  +    -0.62891111222764 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.8650016934441 * AcceptedCmp10 + 0.85335394099291 * 
AcceptedCmp20 + 0.47327521312159 * AcceptedCmp30 + -2.64862753506152 * AcceptedCmp40 + 
0.65827168680229 * AcceptedCmp50 + 0.45516433167059 * Complain0 + -0.62891111222764 * 
HigherEducationBinary0 ;
2435249   +   H1x2_4  = H1x2_4  +    -0.31781332022679 * AcceptedCmp10
2435250   +          +    -0.35773084257089 * AcceptedCmp20  +      0.0486072265688 *
2435251   +        AcceptedCmp30  +     1.50494203860483 * AcceptedCmp40
2435252   +          +     0.00499691981651 * AcceptedCmp50  +    -0.29977032190776 *
2435253   +        Complain0  +     0.76473087756218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.31781332022679 * AcceptedCmp10 + -0.35773084257089 
* AcceptedCmp20 + 0.0486072265688 * AcceptedCmp30 + 1.50494203860483 * AcceptedCmp40 + 
0.00499691981651 * AcceptedCmp50 + -0.29977032190776 * Complain0 + 0.76473087756218 * 
HigherEducationBinary0 ;
2435254   +   H1x2_5  = H1x2_5  +     -0.4639041544815 * AcceptedCmp10
2435255   +          +    -1.28977231764453 * AcceptedCmp20  +    -0.03597660273531 *
2435256   +        AcceptedCmp30  +     0.17848986397338 * AcceptedCmp40
2435257   +          +     0.06649914015182 * AcceptedCmp50  +    -0.95633404051563 *
2435258   +        Complain0  +    -0.62555630659121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.4639041544815 * AcceptedCmp10 + -1.28977231764453 * 
AcceptedCmp20 + -0.03597660273531 * AcceptedCmp30 + 0.17848986397338 * AcceptedCmp40 + 
0.06649914015182 * AcceptedCmp50 + -0.95633404051563 * Complain0 + -0.62555630659121 * 
HigherEducationBinary0 ;
2435259   +   H1x2_1  = H1x2_1  +    -1.75926153465974 * Education2n_Cycle
2435260   +          +     0.96255168005018 * EducationBasic  +     -1.2029563052774 *
2435261   +        EducationGraduation  +    -0.22397098444024 * EducationMaster
2435262   +          +    -0.10361472385198 * Marital_StatusDivorced
2435263   +          +     0.05574820877885 * Marital_StatusMarried
2435264   +          +     0.13130988205279 * Marital_StatusSingle
2435265   +          +    -1.51165564425323 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.75926153465974 * Education2n_Cycle + 
0.96255168005018 * EducationBasic + -1.2029563052774 * EducationGraduation + -0.22397098444024 
* EducationMaster + -0.10361472385198 * Marital_StatusDivorced + 0.05574820877885 * 
Marital_StatusMarried + 0.13130988205279 * Marital_StatusSingle + -1.51165564425323 * 
Marital_StatusTogether ;
2435266   +   H1x2_2  = H1x2_2  +     1.73281005101474 * Education2n_Cycle
2435267   +          +    -0.51397811328576 * EducationBasic  +     1.64296402934617 *
2435268   +        EducationGraduation  +     1.44983505587452 * EducationMaster
2435269   +          +      0.0059353523794 * Marital_StatusDivorced
2435270   +          +    -0.59379435051653 * Marital_StatusMarried
2435271   +          +    -1.93587108708999 * Marital_StatusSingle
2435272   +          +     2.02868236823401 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.73281005101474 * Education2n_Cycle + 
-0.51397811328576 * EducationBasic + 1.64296402934617 * EducationGraduation + 1.44983505587452 
* EducationMaster + 0.0059353523794 * Marital_StatusDivorced + -0.59379435051653 * 
Marital_StatusMarried + -1.93587108708999 * Marital_StatusSingle + 2.02868236823401 * 
Marital_StatusTogether ;
2435273   +   H1x2_3  = H1x2_3  +     0.11852280587389 * Education2n_Cycle
2435274   +          +    -0.87963137637159 * EducationBasic  +      0.3212539101977 *
2435275   +        EducationGraduation  +     0.16497026569775 * EducationMaster
2435276   +          +    -0.74333797840386 * Marital_StatusDivorced
2435277   +          +    -0.93061135117658 * Marital_StatusMarried
2435278   +          +     1.04024182655844 * Marital_StatusSingle
2435279   +          +     0.58313569749679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.11852280587389 * Education2n_Cycle + 
-0.87963137637159 * EducationBasic + 0.3212539101977 * EducationGraduation + 0.16497026569775 
* EducationMaster + -0.74333797840386 * Marital_StatusDivorced + -0.93061135117658 * 
Marital_StatusMarried + 1.04024182655844 * Marital_StatusSingle + 0.58313569749679 * 
Marital_StatusTogether ;
2435280   +   H1x2_4  = H1x2_4  +     -1.2170050337036 * Education2n_Cycle
2435281   +          +    -0.83332588435502 * EducationBasic  +     0.43242117148542 *
2435282   +        EducationGraduation  +     1.71196178631559 * EducationMaster
2435283   +          +    -3.01050675344463 * Marital_StatusDivorced
2435284   +          +      0.1638723582239 * Marital_StatusMarried
2435285   +          +     0.94548468360304 * Marital_StatusSingle
2435286   +          +    -0.67333048623615 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.2170050337036 * Education2n_Cycle + 
-0.83332588435502 * EducationBasic + 0.43242117148542 * EducationGraduation + 1.71196178631559 
* EducationMaster + -3.01050675344463 * Marital_StatusDivorced + 0.1638723582239 * 
Marital_StatusMarried + 0.94548468360304 * Marital_StatusSingle + -0.67333048623615 * 
Marital_StatusTogether ;
2435287   +   H1x2_5  = H1x2_5  +    -0.66774344191467 * Education2n_Cycle
2435288   +          +     0.75591270317285 * EducationBasic  +    -0.29337325355435 *
2435289   +        EducationGraduation  +     0.57450456442662 * EducationMaster
2435290   +          +    -1.37013926274158 * Marital_StatusDivorced
2435291   +          +    -0.34168970042779 * Marital_StatusMarried
2435292   +          +     0.63383683543962 * Marital_StatusSingle
2435293   +          +     0.75118887766443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.66774344191467 * Education2n_Cycle + 
0.75591270317285 * EducationBasic + -0.29337325355435 * EducationGraduation + 0.57450456442662 
* EducationMaster + -1.37013926274158 * Marital_StatusDivorced + -0.34168970042779 * 
Marital_StatusMarried + 0.63383683543962 * Marital_StatusSingle + 0.75118887766443 * 
Marital_StatusTogether ;
2435294   +   H1x2_1  =    -1.05245414685459 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.05245414685459 + H1x2_1 ;
2435295   +   H1x2_2  =    -2.03581716915326 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.03581716915326 + H1x2_2 ;
2435296   +   H1x2_3  =    -0.95118365599668 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.95118365599668 + H1x2_3 ;
2435297   +   H1x2_4  =    -1.36171328515396 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.36171328515396 + H1x2_4 ;
2435298   +   H1x2_5  =    -0.09438724866767 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.09438724866767 + H1x2_5 ;
2435299   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2435300   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2435301   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2435302   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
2435303   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
2435304   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
2435305   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
2435306   +END;
MPRINT(EM_DIAGRAM):   END;
2435307   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2435308   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2435309   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2435310   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2435311   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2435312   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2435313   +END;
MPRINT(EM_DIAGRAM):   END;
2435314   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435315   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2435316   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435317   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2435318   +   H2x1_1  =    -3.66869890196477 * H1x1_1  +     3.66276995899936 * H1x1_2
2435319   +          +      4.9852243803889 * H1x1_3  +    -3.40922134517979 * H1x1_4
2435320   +          +     2.26435924995065 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.66869890196477 * H1x1_1 + 3.66276995899936 * H1x1_2 + 
4.9852243803889 * H1x1_3 + -3.40922134517979 * H1x1_4 + 2.26435924995065 * H1x1_5 ;
2435321   +   H2x1_2  =     1.35296027814603 * H1x1_1  +     0.16236277762099 * H1x1_2
2435322   +          +      0.4094634018093 * H1x1_3  +    -1.05233334297087 * H1x1_4
2435323   +          +    -0.51735435825901 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.35296027814603 * H1x1_1 + 0.16236277762099 * H1x1_2 + 
0.4094634018093 * H1x1_3 + -1.05233334297087 * H1x1_4 + -0.51735435825901 * H1x1_5 ;
2435324   +   H2x1_3  =    -3.57467050540101 * H1x1_1  +     1.96738498758928 * H1x1_2
2435325   +          +      3.1519435691133 * H1x1_3  +    -2.73180541318793 * H1x1_4
2435326   +          +     2.53621803266955 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.57467050540101 * H1x1_1 + 1.96738498758928 * H1x1_2 + 
3.1519435691133 * H1x1_3 + -2.73180541318793 * H1x1_4 + 2.53621803266955 * H1x1_5 ;
2435327   +   H2x1_4  =    -1.77897865469649 * H1x1_1  +    -0.34371813002239 * H1x1_2
2435328   +          +     0.97655076671381 * H1x1_3  +    -0.53022688394362 * H1x1_4
2435329   +          +     1.78452647837415 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.77897865469649 * H1x1_1 + -0.34371813002239 * H1x1_2 + 
0.97655076671381 * H1x1_3 + -0.53022688394362 * H1x1_4 + 1.78452647837415 * H1x1_5 ;
2435330   +   H2x1_5  =    -2.37976522756638 * H1x1_1  +     2.07473947277607 * H1x1_2
2435331   +          +      3.6114905073808 * H1x1_3  +    -4.57668209905758 * H1x1_4
2435332   +          +     2.97931581645784 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.37976522756638 * H1x1_1 + 2.07473947277607 * H1x1_2 + 
3.6114905073808 * H1x1_3 + -4.57668209905758 * H1x1_4 + 2.97931581645784 * H1x1_5 ;
2435333   +   H2x1_1  = H2x1_1  +      0.5090021095213 * H1x2_1
2435334   +          +    -0.99996599039586 * H1x2_2  +     0.09317756017156 * H1x2_3
2435335   +          +     0.07646136890595 * H1x2_4  +    -0.86729455140311 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.5090021095213 * H1x2_1 + -0.99996599039586 * H1x2_2 
+ 0.09317756017156 * H1x2_3 + 0.07646136890595 * H1x2_4 + -0.86729455140311 * H1x2_5 ;
2435336   +   H2x1_2  = H2x1_2  +     0.54458122713319 * H1x2_1
2435337   +          +    -1.01527351866283 * H1x2_2  +    -1.05264779960249 * H1x2_3
2435338   +          +     2.00891057398994 * H1x2_4  +     0.23877185330348 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.54458122713319 * H1x2_1 + -1.01527351866283 * H1x2_2 
+ -1.05264779960249 * H1x2_3 + 2.00891057398994 * H1x2_4 + 0.23877185330348 * H1x2_5 ;
2435339   +   H2x1_3  = H2x1_3  +     0.45936122831356 * H1x2_1
2435340   +          +    -0.78158455560098 * H1x2_2  +    -0.93755507764598 * H1x2_3
2435341   +          +    -0.41290092050446 * H1x2_4  +    -1.08076286104858 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.45936122831356 * H1x2_1 + -0.78158455560098 * H1x2_2 
+ -0.93755507764598 * H1x2_3 + -0.41290092050446 * H1x2_4 + -1.08076286104858 * H1x2_5 ;
2435342   +   H2x1_4  = H2x1_4  +     0.95365620475779 * H1x2_1
2435343   +          +    -0.84100294393078 * H1x2_2  +     0.70463413466954 * H1x2_3
2435344   +          +     1.80542761219637 * H1x2_4  +     0.45881360213194 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.95365620475779 * H1x2_1 + -0.84100294393078 * H1x2_2 
+ 0.70463413466954 * H1x2_3 + 1.80542761219637 * H1x2_4 + 0.45881360213194 * H1x2_5 ;
2435345   +   H2x1_5  = H2x1_5  +     0.59629215620441 * H1x2_1
2435346   +          +    -0.66300910076078 * H1x2_2  +     0.53748646350811 * H1x2_3
2435347   +          +     0.40402787748621 * H1x2_4  +    -0.68066387330661 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.59629215620441 * H1x2_1 + -0.66300910076078 * H1x2_2 
+ 0.53748646350811 * H1x2_3 + 0.40402787748621 * H1x2_4 + -0.68066387330661 * H1x2_5 ;
2435348   +   H2x1_1  =    -1.36901208947371 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.36901208947371 + H2x1_1 ;
2435349   +   H2x1_2  =     1.02513270875023 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.02513270875023 + H2x1_2 ;
2435350   +   H2x1_3  =     0.21017025934674 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.21017025934674 + H2x1_3 ;
2435351   +   H2x1_4  =    -1.15214364807652 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.15214364807652 + H2x1_4 ;
2435352   +   H2x1_5  =    -1.32590257108023 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.32590257108023 + H2x1_5 ;
2435353   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2435354   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2435355   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2435356   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2435357   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2435358   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2435359   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2435360   +END;
MPRINT(EM_DIAGRAM):   END;
2435361   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2435362   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2435363   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2435364   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2435365   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2435366   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2435367   +END;
MPRINT(EM_DIAGRAM):   END;
2435368   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435369   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2435370   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435371   +
2435372   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
2435373   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
2435374   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
2435375   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
2435376   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
2435377   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2435378   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
2435379   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2435380   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2435381   +end;
MPRINT(EM_DIAGRAM):   end;
2435382   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435383   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
2435384   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
2435385   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
2435386   +   end;
MPRINT(EM_DIAGRAM):   end;
2435387   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
2435388   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
2435389   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
2435390   +   end;
MPRINT(EM_DIAGRAM):   end;
2435391   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2435392   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
2435393   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
2435394   +   end;
MPRINT(EM_DIAGRAM):   end;
2435395   +end;
MPRINT(EM_DIAGRAM):   end;
2435396   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2435397   +   P_DepVar1  =    -9.23664553457504 * H2x1_1  +     1.34611690798114 * H2x1_2
2435398   +          +    -6.67077102946651 * H2x1_3  +    -1.67245227685142 * H2x1_4
2435399   +          +    -7.67053346287177 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.23664553457504 * H2x1_1 + 1.34611690798114 * H2x1_2 + 
-6.67077102946651 * H2x1_3 + -1.67245227685142 * H2x1_4 + -7.67053346287177 * H2x1_5 ;
2435400   +   P_DepVar1  =      3.4145227149582 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.4145227149582 + P_DepVar1 ;
2435401   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2435402   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2435403   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2435404   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2435405   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2435406   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2435407   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2435408   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2435409   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2435410   +END;
MPRINT(EM_DIAGRAM):   END;
2435411   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2435412   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2435413   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2435414   +END;
MPRINT(EM_DIAGRAM):   END;
2435415   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2435416   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2435417   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2435418   +END;
MPRINT(EM_DIAGRAM):   END;
2435419   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
2435420   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
2435421   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
2435422   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
2435423   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
2435424   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
2435425   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
2435426   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435427   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2435428   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435429   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2435430   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2435431   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2435432   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2435433   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2435434   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2435435   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2435436   +END;
MPRINT(EM_DIAGRAM):   END;
2435437   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2435438   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2435439   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2435440   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
2435441   +* Renaming variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural10;
2435442   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435443   +* Renaming Posterior variables for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural10;
2435444   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435445   +drop AutoNeural10_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar1;
2435446   +AutoNeural10_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar1 = P_DepVar1;
2435447   +drop AutoNeural10_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_P_DepVar0;
2435448   +AutoNeural10_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural10_P_DepVar0 = P_DepVar0;
2435449   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435450   +* Renaming _WARN_ variable for AutoNeural10;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural10;
2435451   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435452   +length AutoNeural10_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural10_WARN_ $4;
2435453   +drop AutoNeural10_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural10_WARN_;
2435454   +AutoNeural10_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural10_WARN_ = _WARN_;
2435455   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435456   +* Ensmbl45: Average Posteriors of 5 models;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Average Posteriors of 5 models;
2435457   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435458   +P_DepVar1 = (
2435459   +AutoNeural9_P_DepVar1 +
2435460   +AutoNeural11_P_DepVar1 +
2435461   +AutoNeural12_P_DepVar1 +
2435462   +AutoNeural7_P_DepVar1 +
2435463   +AutoNeural10_P_DepVar1
2435464   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( AutoNeural9_P_DepVar1 + AutoNeural11_P_DepVar1 + 
AutoNeural12_P_DepVar1 + AutoNeural7_P_DepVar1 + AutoNeural10_P_DepVar1 )/5;
2435465   +P_DepVar0 = (
2435466   +AutoNeural9_P_DepVar0 +
2435467   +AutoNeural11_P_DepVar0 +
2435468   +AutoNeural12_P_DepVar0 +
2435469   +AutoNeural7_P_DepVar0 +
2435470   +AutoNeural10_P_DepVar0
2435471   +)/5;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( AutoNeural9_P_DepVar0 + AutoNeural11_P_DepVar0 + 
AutoNeural12_P_DepVar0 + AutoNeural7_P_DepVar0 + AutoNeural10_P_DepVar0 )/5;
2435472   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435473   +* Ensmbl45: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Computing Classification Vars;
2435474   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435475   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
2435476   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
2435477   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
2435478   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
2435479   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
2435480   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
2435481   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
2435482   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
2435483   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
2435484   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
2435485   +end;
MPRINT(EM_DIAGRAM):   end;
2435486   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
2435487   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
2435488   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
2435489   +end;
MPRINT(EM_DIAGRAM):   end;
2435490   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2435491   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435492   +* Ensmbl45: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Producing Unformatted variable;
2435493   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435494   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
2435495   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
2435496   +else
2435497   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
2435498   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435499   +* Ensmbl45: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Computing _WARN_ Variable;
2435500   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435501   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
2435502   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
2435503   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
2435504   +if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2435504  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2435505   +if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2435505  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2435506   +if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2435506  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2435507   +if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2435507  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL9_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2435508   +if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2435508  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2435509   +if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2435509  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2435510   +if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2435510  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2435511   +if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2435511  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL11_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2435512   +if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2435512  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2435513   +if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2435513  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2435514   +if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2435514  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2435515   +if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2435515  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL12_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2435516   +if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2435516  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2435517   +if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2435517  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2435518   +if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2435518  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2435519   +if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2435519  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL7_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2435520   +if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
2435520  !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
2435521   +if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
2435521  !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
2435522   +if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
2435522  !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
2435523   +if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
2435523  !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL10_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
2435524   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435525   +* Ensmbl45: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Computing Residual Vars;
2435526   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2435527   +if
2435528   +F_DepVar NE '1'
2435529   +AND F_DepVar NE '0'
2435530   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
2435531   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
2435532   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
2435533   +end;
MPRINT(EM_DIAGRAM):   end;
2435534   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435535   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
2435536   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
2435537   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
2435538   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
2435539   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
2435540   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
2435541   +END;
MPRINT(EM_DIAGRAM):   END;
2435542   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2435543    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL45_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.AUTONEURAL9_VALIDATE.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.18 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2435544    quit;
2435545    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl45_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl45_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl45_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl45_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl45_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
2435605    filename _pref
2435605  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas";
2435606    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2435607    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural9\EMPUBLISHSCORE.sas.
2435608   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2435609   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2435610   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2435611   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2435612   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2435613   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2435614   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2435615   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2435616   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2435617   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2435618   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2435619   +LENGTH _WARN_ $4
2435620   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2435621   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2435622   +
2435623   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2435624   +
2435625   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2435626   +
2435627   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2435628   +
2435629   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2435630   +
2435631   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2435632   +
2435633   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2435634   +
2435635   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2435636   +
2435637   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2435638   +
2435639   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2435640   +
2435641   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2435642   +
2435643   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2435644   +
2435645   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2435646   +
2435647   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2435648   +
2435649   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2435650   +
2435651   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2435652   +
2435653   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2435654   +
2435655   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2435656   +
2435657   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2435658   +
2435659   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2435660   +
2435661   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2435662   +
2435663   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2435664   +
2435665   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2435666   +
2435667   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2435668   +
2435669   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2435670   +
2435671   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2435672   +
2435673   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2435674   +
2435675   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2435676   +
2435677   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2435678   +
2435679   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2435680   +
2435681   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2435682   +
2435683   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2435684   +
2435685   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2435686   +
2435687   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2435688   +
2435689   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2435690   +
2435691   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2435692   +
2435693   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2435694   +
2435695   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2435696   +
2435697   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2435698   +
2435699   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2435700   +
2435701   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2435702   +
2435703   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2435704   +
2435705   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2435706   +
2435707   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2435708   +
2435709   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2435710   +
2435711   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2435712   +
2435713   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2435714   +
2435715   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2435716   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2435717   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2435718   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2435719   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2435720   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435721   +end;
MPRINT(EM_DIAGRAM):   end;
2435722   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435723   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2435724   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2435725   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2435726   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2435727   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2435728   +   end;
MPRINT(EM_DIAGRAM):   end;
2435729   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2435730   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2435731   +   end;
MPRINT(EM_DIAGRAM):   end;
2435732   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2435733   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2435734   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2435735   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435736   +   end;
MPRINT(EM_DIAGRAM):   end;
2435737   +end;
MPRINT(EM_DIAGRAM):   end;
2435738   +
2435739   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2435740   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2435741   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2435742   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2435743   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2435744   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435745   +end;
MPRINT(EM_DIAGRAM):   end;
2435746   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435747   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2435748   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2435749   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2435750   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2435751   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2435752   +   end;
MPRINT(EM_DIAGRAM):   end;
2435753   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2435754   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2435755   +   end;
MPRINT(EM_DIAGRAM):   end;
2435756   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2435757   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2435758   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2435759   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435760   +   end;
MPRINT(EM_DIAGRAM):   end;
2435761   +end;
MPRINT(EM_DIAGRAM):   end;
2435762   +
2435763   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2435764   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2435765   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2435766   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2435767   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2435768   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435769   +end;
MPRINT(EM_DIAGRAM):   end;
2435770   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435771   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2435772   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2435773   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2435774   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2435775   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2435776   +   end;
MPRINT(EM_DIAGRAM):   end;
2435777   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2435778   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2435779   +   end;
MPRINT(EM_DIAGRAM):   end;
2435780   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2435781   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2435782   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2435783   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435784   +   end;
MPRINT(EM_DIAGRAM):   end;
2435785   +end;
MPRINT(EM_DIAGRAM):   end;
2435786   +
2435787   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2435788   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2435789   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2435790   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2435791   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2435792   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435793   +end;
MPRINT(EM_DIAGRAM):   end;
2435794   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435795   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2435796   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2435797   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2435798   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2435799   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2435800   +   end;
MPRINT(EM_DIAGRAM):   end;
2435801   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2435802   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2435803   +   end;
MPRINT(EM_DIAGRAM):   end;
2435804   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2435805   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2435806   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2435807   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435808   +   end;
MPRINT(EM_DIAGRAM):   end;
2435809   +end;
MPRINT(EM_DIAGRAM):   end;
2435810   +
2435811   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2435812   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2435813   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2435814   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2435815   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2435816   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435817   +end;
MPRINT(EM_DIAGRAM):   end;
2435818   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435819   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2435820   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2435821   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2435822   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2435823   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2435824   +   end;
MPRINT(EM_DIAGRAM):   end;
2435825   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2435826   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2435827   +   end;
MPRINT(EM_DIAGRAM):   end;
2435828   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2435829   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2435830   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2435831   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435832   +   end;
MPRINT(EM_DIAGRAM):   end;
2435833   +end;
MPRINT(EM_DIAGRAM):   end;
2435834   +
2435835   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2435836   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2435837   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2435838   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2435839   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2435840   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435841   +end;
MPRINT(EM_DIAGRAM):   end;
2435842   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435843   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2435844   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2435845   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2435846   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2435847   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2435848   +   end;
MPRINT(EM_DIAGRAM):   end;
2435849   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2435850   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2435851   +   end;
MPRINT(EM_DIAGRAM):   end;
2435852   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2435853   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2435854   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2435855   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435856   +   end;
MPRINT(EM_DIAGRAM):   end;
2435857   +end;
MPRINT(EM_DIAGRAM):   end;
2435858   +
2435859   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2435860   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2435861   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2435862   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2435863   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2435864   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435865   +end;
MPRINT(EM_DIAGRAM):   end;
2435866   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435867   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2435868   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2435869   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2435870   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2435871   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2435872   +   end;
MPRINT(EM_DIAGRAM):   end;
2435873   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2435874   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2435875   +   end;
MPRINT(EM_DIAGRAM):   end;
2435876   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2435877   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2435878   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2435879   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435880   +   end;
MPRINT(EM_DIAGRAM):   end;
2435881   +end;
MPRINT(EM_DIAGRAM):   end;
2435882   +
2435883   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2435884   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2435885   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2435886   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2435887   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2435888   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2435889   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2435890   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2435891   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2435892   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2435893   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2435894   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2435895   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2435896   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435897   +end;
MPRINT(EM_DIAGRAM):   end;
2435898   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435899   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2435900   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2435901   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2435902   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2435903   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2435904   +   end;
MPRINT(EM_DIAGRAM):   end;
2435905   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2435906   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2435907   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2435908   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2435909   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2435910   +   end;
MPRINT(EM_DIAGRAM):   end;
2435911   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2435912   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2435913   +   end;
MPRINT(EM_DIAGRAM):   end;
2435914   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2435915   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2435916   +   end;
MPRINT(EM_DIAGRAM):   end;
2435917   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2435918   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2435919   +   end;
MPRINT(EM_DIAGRAM):   end;
2435920   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2435921   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2435922   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2435923   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2435924   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2435925   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2435926   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435927   +   end;
MPRINT(EM_DIAGRAM):   end;
2435928   +end;
MPRINT(EM_DIAGRAM):   end;
2435929   +
2435930   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2435931   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2435932   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2435933   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2435934   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2435935   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2435936   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2435937   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2435938   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2435939   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2435940   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2435941   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2435942   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2435943   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2435944   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435945   +end;
MPRINT(EM_DIAGRAM):   end;
2435946   +else do;
MPRINT(EM_DIAGRAM):   else do;
2435947   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2435948   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2435949   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2435950   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2435951   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2435952   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2435953   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2435954   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2435955   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2435956   +         end;
MPRINT(EM_DIAGRAM):   end;
2435957   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2435958   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2435959   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2435960   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2435961   +            end;
MPRINT(EM_DIAGRAM):   end;
2435962   +         end;
MPRINT(EM_DIAGRAM):   end;
2435963   +      end;
MPRINT(EM_DIAGRAM):   end;
2435964   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2435965   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2435966   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2435967   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2435968   +         end;
MPRINT(EM_DIAGRAM):   end;
2435969   +      end;
MPRINT(EM_DIAGRAM):   end;
2435970   +   end;
MPRINT(EM_DIAGRAM):   end;
2435971   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2435972   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2435973   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2435974   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2435975   +      end;
MPRINT(EM_DIAGRAM):   end;
2435976   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2435977   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2435978   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2435979   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2435980   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2435981   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2435982   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2435983   +         end;
MPRINT(EM_DIAGRAM):   end;
2435984   +      end;
MPRINT(EM_DIAGRAM):   end;
2435985   +   end;
MPRINT(EM_DIAGRAM):   end;
2435986   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2435987   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2435988   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2435989   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2435990   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2435991   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2435992   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2435993   +   end;
MPRINT(EM_DIAGRAM):   end;
2435994   +end;
MPRINT(EM_DIAGRAM):   end;
2435995   +
2435996   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2435997   +*** Checking missing input Interval
2435998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2435999   +
2436000   +IF NMISS(
2436001   +   AcceptedCmpTotal ,
2436002   +   Age ,
2436003   +   Frq ,
2436004   +   Income ,
2436005   +   Kidhome ,
2436006   +   Mnt ,
2436007   +   MntFishProducts ,
2436008   +   MntFruits ,
2436009   +   MntGoldProds ,
2436010   +   MntMeatProducts ,
2436011   +   MntSweetProducts ,
2436012   +   MntWines ,
2436013   +   MonthsAsCustomer ,
2436014   +   NumCatalogPurchases ,
2436015   +   NumDealsPurchases ,
2436016   +   NumDistPurchases ,
2436017   +   NumStorePurchases ,
2436018   +   NumWebPurchases ,
2436019   +   NumWebVisitsMonth ,
2436020   +   RFMstat ,
2436021   +   RMntFrq ,
2436022   +   Recency ,
2436023   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2436024   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2436025   +
2436026   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436027   +END;
MPRINT(EM_DIAGRAM):   END;
2436028   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436029   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2436030   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436031   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2436032   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2436033   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2436034   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2436035   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2436036   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2436037   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2436038   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2436039   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2436040   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2436041   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2436042   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2436043   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2436044   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2436045   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2436046   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2436047   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2436048   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2436049   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2436050   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2436051   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2436052   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2436053   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2436054   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2436055   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2436056   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2436057   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2436058   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2436059   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2436060   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2436061   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2436062   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2436063   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2436064   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2436065   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2436066   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2436067   +END;
MPRINT(EM_DIAGRAM):   END;
2436068   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2436069   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2436070   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2436071   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2436072   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2436073   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2436074   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2436075   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2436076   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2436077   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2436078   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2436079   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2436080   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2436081   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2436082   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2436083   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2436084   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2436085   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2436086   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2436087   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2436088   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2436089   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2436090   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2436091   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2436092   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2436093   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2436094   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2436095   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2436096   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2436097   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2436098   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2436099   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2436100   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2436101   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2436102   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2436103   +   ELSE S_NumCatalogPurchases
2436104   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2436105   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2436106   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2436107   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2436108   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2436109   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2436110   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2436111   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2436112   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2436113   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2436114   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2436115   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2436116   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2436117   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2436118   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2436119   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2436120   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2436121   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2436122   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2436123   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2436124   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2436125   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2436126   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2436127   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2436128   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2436129   +END;
MPRINT(EM_DIAGRAM):   END;
2436130   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436131   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2436132   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436133   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436134   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2436135   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436136   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436137   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2436138   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436139   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2436140   +   H1x1_1  =    -0.78941671657664 * S_AcceptedCmpTotal
2436141   +          +     0.31767378900448 * S_Age  +      -0.450304150539 * S_Frq
2436142   +          +     0.13641886985589 * S_Income  +    -0.76390352240561 *
2436143   +        S_Kidhome  +    -0.84654868800943 * S_Mnt  +     0.96945558052651 *
2436144   +        S_MntFishProducts  +     0.16268958674432 * S_MntFruits
2436145   +          +     0.02144447788014 * S_MntGoldProds  +    -3.75090210449464 *
2436146   +        S_MntMeatProducts  +    -0.22086629229442 * S_MntSweetProducts
2436147   +          +      0.8352178457402 * S_MntWines  +     0.16493907873466 *
2436148   +        S_MonthsAsCustomer  +    -1.54607390993048 * S_NumCatalogPurchases
2436149   +          +    -1.12130210731541 * S_NumDealsPurchases
2436150   +          +    -0.12343505299726 * S_NumDistPurchases
2436151   +          +     0.11863092868196 * S_NumStorePurchases
2436152   +          +       0.583917993314 * S_NumWebPurchases
2436153   +          +     0.75529732848146 * S_NumWebVisitsMonth
2436154   +          +    -0.49784215446785 * S_RFMstat  +     0.40580477815146 *
2436155   +        S_RMntFrq  +    -0.95519170979342 * S_Recency
2436156   +          +    -0.44895196625502 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.78941671657664 * S_AcceptedCmpTotal + 0.31767378900448 * 
S_Age + -0.450304150539 * S_Frq + 0.13641886985589 * S_Income + -0.76390352240561 * S_Kidhome 
+ -0.84654868800943 * S_Mnt + 0.96945558052651 * S_MntFishProducts + 0.16268958674432 * 
S_MntFruits + 0.02144447788014 * S_MntGoldProds + -3.75090210449464 * S_MntMeatProducts + 
-0.22086629229442 * S_MntSweetProducts + 0.8352178457402 * S_MntWines + 0.16493907873466 * 
S_MonthsAsCustomer + -1.54607390993048 * S_NumCatalogPurchases + -1.12130210731541 * 
S_NumDealsPurchases + -0.12343505299726 * S_NumDistPurchases + 0.11863092868196 * 
S_NumStorePurchases + 0.583917993314 * S_NumWebPurchases + 0.75529732848146 * 
S_NumWebVisitsMonth + -0.49784215446785 * S_RFMstat + 0.40580477815146 * S_RMntFrq + 
-0.95519170979342 * S_Recency + -0.44895196625502 * S_Teenhome ;
2436157   +   H1x1_2  =    -0.22984864633102 * S_AcceptedCmpTotal
2436158   +          +     0.08901810463204 * S_Age  +    -0.13007664741542 * S_Frq
2436159   +          +    -0.64174617524704 * S_Income  +     0.26599968715733 *
2436160   +        S_Kidhome  +     0.57486260655125 * S_Mnt  +    -0.56033337110694 *
2436161   +        S_MntFishProducts  +     0.16060716517673 * S_MntFruits
2436162   +          +      0.4349197289782 * S_MntGoldProds  +     1.41079767517969 *
2436163   +        S_MntMeatProducts  +      0.0615730534741 * S_MntSweetProducts
2436164   +          +    -0.09057901886639 * S_MntWines  +     0.20260454891291 *
2436165   +        S_MonthsAsCustomer  +    -1.17048742280721 * S_NumCatalogPurchases
2436166   +          +    -0.84113790640734 * S_NumDealsPurchases
2436167   +          +    -0.10512672747147 * S_NumDistPurchases
2436168   +          +     0.07268711782494 * S_NumStorePurchases
2436169   +          +     0.57578331257439 * S_NumWebPurchases
2436170   +          +    -1.34334433506558 * S_NumWebVisitsMonth
2436171   +          +     0.50079465494904 * S_RFMstat  +     0.77329849238514 *
2436172   +        S_RMntFrq  +      1.2759588366983 * S_Recency
2436173   +          +     0.17722493443222 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.22984864633102 * S_AcceptedCmpTotal + 0.08901810463204 * 
S_Age + -0.13007664741542 * S_Frq + -0.64174617524704 * S_Income + 0.26599968715733 * 
S_Kidhome + 0.57486260655125 * S_Mnt + -0.56033337110694 * S_MntFishProducts + 
0.16060716517673 * S_MntFruits + 0.4349197289782 * S_MntGoldProds + 1.41079767517969 * 
S_MntMeatProducts + 0.0615730534741 * S_MntSweetProducts + -0.09057901886639 * S_MntWines + 
0.20260454891291 * S_MonthsAsCustomer + -1.17048742280721 * S_NumCatalogPurchases + 
-0.84113790640734 * S_NumDealsPurchases + -0.10512672747147 * S_NumDistPurchases + 
0.07268711782494 * S_NumStorePurchases + 0.57578331257439 * S_NumWebPurchases + 
-1.34334433506558 * S_NumWebVisitsMonth + 0.50079465494904 * S_RFMstat + 0.77329849238514 * 
S_RMntFrq + 1.2759588366983 * S_Recency + 0.17722493443222 * S_Teenhome ;
2436174   +   H1x1_3  =      1.1751297152411 * S_AcceptedCmpTotal
2436175   +          +     0.14380060376858 * S_Age  +    -0.90459868540245 * S_Frq
2436176   +          +     0.65570498233801 * S_Income  +    -0.66078213466597 *
2436177   +        S_Kidhome  +      0.5364727654141 * S_Mnt  +    -0.56452823521458 *
2436178   +        S_MntFishProducts  +     0.11401811215013 * S_MntFruits
2436179   +          +     0.42809239636494 * S_MntGoldProds  +     3.28485519579047 *
2436180   +        S_MntMeatProducts  +    -0.10959477301368 * S_MntSweetProducts
2436181   +          +     -0.5779524716069 * S_MntWines  +     0.08256957915579 *
2436182   +        S_MonthsAsCustomer  +     0.48195221766948 * S_NumCatalogPurchases
2436183   +          +     0.45924983504762 * S_NumDealsPurchases
2436184   +          +    -0.25508041581692 * S_NumDistPurchases
2436185   +          +    -1.34901283858526 * S_NumStorePurchases
2436186   +          +    -0.86388975031663 * S_NumWebPurchases
2436187   +          +     1.86136110391797 * S_NumWebVisitsMonth
2436188   +          +     0.39724376701426 * S_RFMstat  +    -1.08648755949459 *
2436189   +        S_RMntFrq  +    -2.06955456943047 * S_Recency
2436190   +          +     -0.6524420065858 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.1751297152411 * S_AcceptedCmpTotal + 0.14380060376858 * S_Age 
+ -0.90459868540245 * S_Frq + 0.65570498233801 * S_Income + -0.66078213466597 * S_Kidhome + 
0.5364727654141 * S_Mnt + -0.56452823521458 * S_MntFishProducts + 0.11401811215013 * 
S_MntFruits + 0.42809239636494 * S_MntGoldProds + 3.28485519579047 * S_MntMeatProducts + 
-0.10959477301368 * S_MntSweetProducts + -0.5779524716069 * S_MntWines + 0.08256957915579 * 
S_MonthsAsCustomer + 0.48195221766948 * S_NumCatalogPurchases + 0.45924983504762 * 
S_NumDealsPurchases + -0.25508041581692 * S_NumDistPurchases + -1.34901283858526 * 
S_NumStorePurchases + -0.86388975031663 * S_NumWebPurchases + 1.86136110391797 * 
S_NumWebVisitsMonth + 0.39724376701426 * S_RFMstat + -1.08648755949459 * S_RMntFrq + 
-2.06955456943047 * S_Recency + -0.6524420065858 * S_Teenhome ;
2436191   +   H1x1_1  = H1x1_1  +     0.80545309346785 * AcceptedCmp10
2436192   +          +    -0.33518398776018 * AcceptedCmp20  +    -0.58961939502901 *
2436193   +        AcceptedCmp30  +    -0.89675052404295 * AcceptedCmp40
2436194   +          +     0.75506592249683 * AcceptedCmp50  +    -0.07335613460961 *
2436195   +        Complain0  +     0.34255762261501 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.80545309346785 * AcceptedCmp10 + -0.33518398776018 * 
AcceptedCmp20 + -0.58961939502901 * AcceptedCmp30 + -0.89675052404295 * AcceptedCmp40 + 
0.75506592249683 * AcceptedCmp50 + -0.07335613460961 * Complain0 + 0.34255762261501 * 
HigherEducationBinary0 ;
2436196   +   H1x1_2  = H1x1_2  +    -0.17834267108797 * AcceptedCmp10
2436197   +          +    -0.54414628806984 * AcceptedCmp20  +      0.8037591997808 *
2436198   +        AcceptedCmp30  +     0.37789561997689 * AcceptedCmp40
2436199   +          +    -1.39910847665731 * AcceptedCmp50  +    -0.44783176263268 *
2436200   +        Complain0  +     0.36763760090773 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.17834267108797 * AcceptedCmp10 + -0.54414628806984 
* AcceptedCmp20 + 0.8037591997808 * AcceptedCmp30 + 0.37789561997689 * AcceptedCmp40 + 
-1.39910847665731 * AcceptedCmp50 + -0.44783176263268 * Complain0 + 0.36763760090773 * 
HigherEducationBinary0 ;
2436201   +   H1x1_3  = H1x1_3  +    -0.20323890063703 * AcceptedCmp10
2436202   +          +    -0.08537895761507 * AcceptedCmp20  +     0.22533818089504 *
2436203   +        AcceptedCmp30  +    -0.22195995100127 * AcceptedCmp40
2436204   +          +    -2.01371926977123 * AcceptedCmp50  +    -0.17097719978842 *
2436205   +        Complain0  +     0.34016905753094 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.20323890063703 * AcceptedCmp10 + -0.08537895761507 
* AcceptedCmp20 + 0.22533818089504 * AcceptedCmp30 + -0.22195995100127 * AcceptedCmp40 + 
-2.01371926977123 * AcceptedCmp50 + -0.17097719978842 * Complain0 + 0.34016905753094 * 
HigherEducationBinary0 ;
2436206   +   H1x1_1  = H1x1_1  +    -0.03394180683805 * Education2n_Cycle
2436207   +          +    -0.38224926448988 * EducationBasic  +    -0.42512289883041 *
2436208   +        EducationGraduation  +    -0.59708578424036 * EducationMaster
2436209   +          +     0.48853068455666 * Marital_StatusDivorced
2436210   +          +    -0.54903474026465 * Marital_StatusMarried
2436211   +          +    -0.34079188373939 * Marital_StatusSingle
2436212   +          +    -0.64602969938868 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.03394180683805 * Education2n_Cycle + 
-0.38224926448988 * EducationBasic + -0.42512289883041 * EducationGraduation + 
-0.59708578424036 * EducationMaster + 0.48853068455666 * Marital_StatusDivorced + 
-0.54903474026465 * Marital_StatusMarried + -0.34079188373939 * Marital_StatusSingle + 
-0.64602969938868 * Marital_StatusTogether ;
2436213   +   H1x1_2  = H1x1_2  +    -0.26170943801998 * Education2n_Cycle
2436214   +          +     0.06893871459175 * EducationBasic  +    -0.84123174187664 *
2436215   +        EducationGraduation  +     0.19038549912088 * EducationMaster
2436216   +          +    -1.03547689902027 * Marital_StatusDivorced
2436217   +          +     2.42164864610471 * Marital_StatusMarried
2436218   +          +    -1.95342561304942 * Marital_StatusSingle
2436219   +          +      2.1397185142046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.26170943801998 * Education2n_Cycle + 
0.06893871459175 * EducationBasic + -0.84123174187664 * EducationGraduation + 0.19038549912088 
* EducationMaster + -1.03547689902027 * Marital_StatusDivorced + 2.42164864610471 * 
Marital_StatusMarried + -1.95342561304942 * Marital_StatusSingle + 2.1397185142046 * 
Marital_StatusTogether ;
2436220   +   H1x1_3  = H1x1_3  +    -0.04236694810886 * Education2n_Cycle
2436221   +          +    -0.57404276980591 * EducationBasic  +     -0.1441989834351 *
2436222   +        EducationGraduation  +    -0.31867831184924 * EducationMaster
2436223   +          +      0.4337638747935 * Marital_StatusDivorced
2436224   +          +    -0.38508657017615 * Marital_StatusMarried
2436225   +          +     -0.0160269708326 * Marital_StatusSingle
2436226   +          +    -0.57491004270903 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.04236694810886 * Education2n_Cycle + 
-0.57404276980591 * EducationBasic + -0.1441989834351 * EducationGraduation + 
-0.31867831184924 * EducationMaster + 0.4337638747935 * Marital_StatusDivorced + 
-0.38508657017615 * Marital_StatusMarried + -0.0160269708326 * Marital_StatusSingle + 
-0.57491004270903 * Marital_StatusTogether ;
2436227   +   H1x1_1  =    -0.53426188790968 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.53426188790968 + H1x1_1 ;
2436228   +   H1x1_2  =     0.98557066823746 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.98557066823746 + H1x1_2 ;
2436229   +   H1x1_3  =     1.81937688438175 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.81937688438175 + H1x1_3 ;
2436230   +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
2436231   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
2436232   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2436233   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2436234   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2436235   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2436236   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2436237   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2436238   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2436239   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2436240   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2436241   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2436242   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2436243   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2436244   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2436245   +END;
MPRINT(EM_DIAGRAM):   END;
2436246   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2436247   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2436248   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2436249   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2436250   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2436251   +END;
MPRINT(EM_DIAGRAM):   END;
2436252   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436253   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2436254   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436255   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2436256   +   P_DepVar1  =    -3.43702380277695 * H1x1_1  +    -7.14235896425537 * H1x1_2
2436257   +          +     10.8296305415538 * H1x1_3  +    -2.20824183229369 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.43702380277695 * H1x1_1 + -7.14235896425537 * H1x1_2 + 
10.8296305415538 * H1x1_3 + -2.20824183229369 * H1x1_4 ;
2436258   +   P_DepVar1  =    -3.68304614366462 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.68304614366462 + P_DepVar1 ;
2436259   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2436260   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2436261   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2436262   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2436263   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2436264   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2436265   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2436266   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2436267   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2436268   +END;
MPRINT(EM_DIAGRAM):   END;
2436269   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2436270   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2436271   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2436272   +END;
MPRINT(EM_DIAGRAM):   END;
2436273   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2436274   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2436275   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2436276   +END;
MPRINT(EM_DIAGRAM):   END;
2436277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436278   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2436279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2436280   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2436281   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2436282   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2436283   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2436284   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2436285   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2436286   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2436287   +END;
MPRINT(EM_DIAGRAM):   END;
2436288   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2436289   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2436290   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2436291   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2436292    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2436293    quit;
2436294    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2436295    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2436296    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2436297    retain ID 2 Node "AutoNeural9";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural9";
2436298    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2436299    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436300    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2436301    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2436302    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2632 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2632 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2436303    proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_variableset out=_temp2(keep=NAME 
CREATOR);
2436304    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2436305    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL9_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436306    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2436307    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2436308    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2436309    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436310    proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_train out=_meta(keep=NAME) noprint;
2436311    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2436312    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2436313    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2436314    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436315    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2436316    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2436317    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2436318    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2436319    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2436320    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2436320  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1551 rows and 5 columns.

2436321    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436322    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2436323    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1551 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1551 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2436324    filename _pref
2436324  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2436325    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2436326    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2436327   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2436328   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2436329   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2436330   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2436331   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2436332   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2436333    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2436334    quit;
2436335    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2436336    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2436337    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2436338    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2436339    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2436340    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436341    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2436342    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2436343    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436344    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2436345    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2436346    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2436347    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2436348    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2436349    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2436350    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436351    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2436352    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2436353    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2436354    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2436355    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436356    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2436357    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2436358    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2436359    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436360    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2436361    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2436361  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2436362    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2436363    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2436364    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1555 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436365    filename _pref
2436365  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2436366    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2436367    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2436368   +
2436369   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2436370   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2436370  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2436371   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2436372   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2436373   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2436374   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2436375   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2436376    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2436377    quit;
2436378    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2436379    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2436380    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2436381    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2436382    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2436383    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436384    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2436385    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2436386    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2436387    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2436388    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2436389    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436390    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2436391    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2436392    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2436393    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436394    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2436395    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2436396    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2436397    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2436398    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436399    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2436400    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2436401    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2436402    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436403    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2436404    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2436404  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2436405    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2436406    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2436407    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1594 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436408    filename _pref
2436408  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2436409    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2436410    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2436411   +
2436412   +
2436413   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2436414   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2436415   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2436416   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2436417   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2436418   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2436419   +
2436420   +
2436421   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2436422   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2436423   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2436424   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2436425   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2436426   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2436427   +
2436428   +
2436429   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2436430   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2436431   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2436432   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2436433   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2436434   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2436435   +
2436436   +
2436437   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2436438   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2436439   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2436440   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2436441   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2436442   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2436443   +
2436444   +
2436445   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2436446   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2436447   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2436448   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2436449   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2436450   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2436451   +
2436452   +
2436453   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2436454   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2436455   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2436456   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2436457   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2436458   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2436459   +
2436460   +
2436461   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2436462   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2436463   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2436464   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2436465   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2436466   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2436467   +
2436468   +
2436469   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2436470   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2436471   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2436472   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2436473   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2436474   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2436475   +if
2436476   +_FILTERNORM1 not in ( '.')
2436477   + and
2436478   +_FILTERNORM2 not in ( '.')
2436479   + and
2436480   +_FILTERNORM3 not in ( '.')
2436481   + and
2436482   +_FILTERNORM4 not in ( '.')
2436483   + and
2436484   +_FILTERNORM5 not in ( '.')
2436485   + and
2436486   +_FILTERNORM6 not in ( '.')
2436487   + and
2436488   +_FILTERNORM7 not in ( ' ')
2436489   + and
2436490   +_FILTERNORM8 not in ( ' ')
2436491   +and
2436492   +( Dt_Customer ne .)
2436493   +and ( Income ne . and (Income<=107000))
2436494   +and ( Kidhome ne .)
2436495   +and ( MntFishProducts ne .)
2436496   +and ( MntFruits ne .)
2436497   +and ( MntGoldProds ne .)
2436498   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2436499   +and ( MntSweetProducts ne .)
2436500   +and ( MntWines ne .)
2436501   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2436502   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2436503   +and ( NumStorePurchases ne .)
2436504   +and ( NumWebPurchases ne .)
2436505   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2436506   +and ( Recency ne .)
2436507   +and ( Teenhome ne .)
2436508   +and ( Year_Birth ne .)
2436509   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2436510   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2436511   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2436512   +end;
MPRINT(EM_DIAGRAM):   end;
2436513   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2436514   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2436515    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2436516    quit;
2436517    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2436518    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2436519    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2436520    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2436521    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2436522    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2436523    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2436524    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2436525    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436526    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2436527    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2436528    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436529    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2436530    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2436531    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2436532    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2436533    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2436534    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2436535    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2436536    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2436537    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2436538    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2436539    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2436540    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2436541    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436542    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2436543    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2436543  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2436544    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436545    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2436546    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1660 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436547    %macro varDept(fcmpdata=,id=);
2436548    %global nobs&id scoreFlag&id;
2436549    %let scoreFlag&id = 0;
2436550    %if &id=1 or ^&fcmpStart %then %do;
2436551    proc sort data=&fcmpdata out=_temp&id nodupkey;
2436552    by NAME;
2436553    where id=&id and LHS in( %let j=1;
2436554    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2436555    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2436556    "&var" %let j = %eval(&j+1);
2436557    %end;
2436558    );
2436559    run;
2436560    %let dsid = %sysfunc(open(_temp&id));
2436561    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2436562    %let dsid = %sysfunc(close(&dsid));
2436563    %if &&nobs&id %then %do;
2436564    %let scoreFlag&id = 1;
2436565    %let fcmpStart = 1;
2436566    %end;
2436567    %else %let fcmpStart = 0;
2436568    %end;
2436569    %else %do;
2436570    proc sort data=&fcmpdata out=_tempid;
2436571    where id=&id;
2436572    by LHS;
2436573    run;
2436574    %let dsid = %sysfunc(open(_tempid));
2436575    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2436576    %let dsid = %sysfunc(close(&dsid));
2436577    %if ^&&nobs&id %then %do;
2436578    proc datasets lib=work nolist;
2436579    delete _tempid;
2436580    run;
2436581    quit;
2436582    %end;
2436583    %else %do;
2436584    data _tempAll;
2436585    set %let j=%eval(&id-1);
2436586    %do x=1 %to &j;
2436587    %if &&nobs&x %then %do;
2436588    _temp&x %end;
2436589    %end;
2436590    ;
2436591    run;
2436592    proc sql;
2436593    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2436593  ! work._tempid p2 where p.name=p2.lhs;
2436594    quit;
2436595    data _temp&id;
2436596    set _temp&id;
2436597    where LHS ne '' and NAME ne '' and Node ne '';
2436598    run;
2436599    proc datasets lib=work nolist;
2436600    delete _tempAll;
2436601    run;
2436602    %let dsid = %sysfunc(open(_temp&id));
2436603    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2436604    %let dsid = %sysfunc(close(&dsid));
2436605    %if ^&&nobs&id %then %do;
2436606    proc datasets lib=work nolist;
2436607    delete _temp&id;
2436608    run;
2436609    quit;
2436610    %end;
2436611    %else %do;
2436612    %let scoreFlag&id = 1;
2436613    data _temp&id;
2436614    set _temp&id;
2436615    where LHS ne NAME and node ne '';
2436616    run;
2436617    %let dsid = %sysfunc(open(_temp&id));
2436618    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2436619    %let dsid = %sysfunc(close(&dsid));
2436620    %if ^&&nobs&id %then %do;
2436621    proc datasets lib=work nolist;
2436622    delete _temp&id;
2436623    run;
2436624    quit;
2436625    %end;
2436626    %else %do;
2436627    proc sort data=_temp&id nodupkey;
2436628    by LHS NAME;
2436629    run;
2436630    %end;
2436631    %end;
2436632    %end;
2436633    %end;
2436634    %mend varDept;
2436635    %macro optCode(outdata=fcmpdata);
2436636    %global fcmpStart;
2436637    %let fcmpStart = 0;
2436638    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2436639    %let NumNodes=9;
2436640    %do k=1 %to &NumNodes;
2436641    %vardept(fcmpdata=&outdata, id=&k);
2436642    %end;
2436643    %mend optCode;
2436644    %optcode(outData=EMWS8.Ensmbl45_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 146 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 108 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 38 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 38 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 42 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 38 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 81 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2436645    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2436646    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2436647    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2436648    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436649    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2436650    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2436651    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2436652    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436653    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2436654    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2436654  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2436655    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2436656    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2436657    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2436658    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2436659    filename _pref
2436659  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas";
2436660    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2436661    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural11\EMPUBLISHSCORE.sas.
2436662   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2436663   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2436664   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2436665   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2436666   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2436667   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2436668   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2436669   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2436670   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2436671   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2436672   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2436673   +LENGTH _WARN_ $4
2436674   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2436675   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2436676   +
2436677   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2436678   +
2436679   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2436680   +
2436681   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2436682   +
2436683   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2436684   +
2436685   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2436686   +
2436687   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2436688   +
2436689   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2436690   +
2436691   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2436692   +
2436693   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2436694   +
2436695   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2436696   +
2436697   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2436698   +
2436699   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2436700   +
2436701   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2436702   +
2436703   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2436704   +
2436705   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2436706   +
2436707   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2436708   +
2436709   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2436710   +
2436711   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2436712   +
2436713   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2436714   +
2436715   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2436716   +
2436717   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2436718   +
2436719   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2436720   +
2436721   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2436722   +
2436723   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2436724   +
2436725   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2436726   +
2436727   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2436728   +
2436729   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2436730   +
2436731   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2436732   +
2436733   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2436734   +
2436735   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2436736   +
2436737   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2436738   +
2436739   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2436740   +
2436741   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2436742   +
2436743   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2436744   +
2436745   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2436746   +
2436747   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2436748   +
2436749   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2436750   +
2436751   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2436752   +
2436753   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2436754   +
2436755   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2436756   +
2436757   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2436758   +
2436759   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2436760   +
2436761   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2436762   +
2436763   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2436764   +
2436765   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2436766   +
2436767   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2436768   +
2436769   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2436770   +
2436771   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2436772   +
2436773   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2436774   +
2436775   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2436776   +
2436777   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2436778   +
2436779   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2436780   +
2436781   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2436782   +
2436783   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2436784   +
2436785   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2436786   +
2436787   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2436788   +
2436789   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2436790   +
2436791   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2436792   +
2436793   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2436794   +
2436795   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2436796   +
2436797   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2436798   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2436799   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2436800   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2436801   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2436802   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436803   +end;
MPRINT(EM_DIAGRAM):   end;
2436804   +else do;
MPRINT(EM_DIAGRAM):   else do;
2436805   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2436806   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2436807   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2436808   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2436809   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2436810   +   end;
MPRINT(EM_DIAGRAM):   end;
2436811   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2436812   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2436813   +   end;
MPRINT(EM_DIAGRAM):   end;
2436814   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2436815   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2436816   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2436817   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436818   +   end;
MPRINT(EM_DIAGRAM):   end;
2436819   +end;
MPRINT(EM_DIAGRAM):   end;
2436820   +
2436821   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2436822   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2436823   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2436824   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2436825   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2436826   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436827   +end;
MPRINT(EM_DIAGRAM):   end;
2436828   +else do;
MPRINT(EM_DIAGRAM):   else do;
2436829   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2436830   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2436831   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2436832   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2436833   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2436834   +   end;
MPRINT(EM_DIAGRAM):   end;
2436835   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2436836   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2436837   +   end;
MPRINT(EM_DIAGRAM):   end;
2436838   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2436839   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2436840   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2436841   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436842   +   end;
MPRINT(EM_DIAGRAM):   end;
2436843   +end;
MPRINT(EM_DIAGRAM):   end;
2436844   +
2436845   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2436846   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2436847   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2436848   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2436849   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2436850   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436851   +end;
MPRINT(EM_DIAGRAM):   end;
2436852   +else do;
MPRINT(EM_DIAGRAM):   else do;
2436853   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2436854   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2436855   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2436856   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2436857   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2436858   +   end;
MPRINT(EM_DIAGRAM):   end;
2436859   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2436860   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2436861   +   end;
MPRINT(EM_DIAGRAM):   end;
2436862   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2436863   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2436864   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2436865   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436866   +   end;
MPRINT(EM_DIAGRAM):   end;
2436867   +end;
MPRINT(EM_DIAGRAM):   end;
2436868   +
2436869   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2436870   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2436871   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2436872   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2436873   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2436874   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436875   +end;
MPRINT(EM_DIAGRAM):   end;
2436876   +else do;
MPRINT(EM_DIAGRAM):   else do;
2436877   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2436878   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2436879   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2436880   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2436881   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2436882   +   end;
MPRINT(EM_DIAGRAM):   end;
2436883   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2436884   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2436885   +   end;
MPRINT(EM_DIAGRAM):   end;
2436886   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2436887   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2436888   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2436889   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436890   +   end;
MPRINT(EM_DIAGRAM):   end;
2436891   +end;
MPRINT(EM_DIAGRAM):   end;
2436892   +
2436893   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2436894   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2436895   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2436896   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2436897   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2436898   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436899   +end;
MPRINT(EM_DIAGRAM):   end;
2436900   +else do;
MPRINT(EM_DIAGRAM):   else do;
2436901   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2436902   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2436903   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2436904   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2436905   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2436906   +   end;
MPRINT(EM_DIAGRAM):   end;
2436907   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2436908   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2436909   +   end;
MPRINT(EM_DIAGRAM):   end;
2436910   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2436911   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2436912   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2436913   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436914   +   end;
MPRINT(EM_DIAGRAM):   end;
2436915   +end;
MPRINT(EM_DIAGRAM):   end;
2436916   +
2436917   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2436918   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2436919   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2436920   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2436921   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2436922   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436923   +end;
MPRINT(EM_DIAGRAM):   end;
2436924   +else do;
MPRINT(EM_DIAGRAM):   else do;
2436925   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2436926   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2436927   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2436928   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2436929   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2436930   +   end;
MPRINT(EM_DIAGRAM):   end;
2436931   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2436932   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2436933   +   end;
MPRINT(EM_DIAGRAM):   end;
2436934   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2436935   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2436936   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2436937   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436938   +   end;
MPRINT(EM_DIAGRAM):   end;
2436939   +end;
MPRINT(EM_DIAGRAM):   end;
2436940   +
2436941   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2436942   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2436943   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2436944   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2436945   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2436946   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436947   +end;
MPRINT(EM_DIAGRAM):   end;
2436948   +else do;
MPRINT(EM_DIAGRAM):   else do;
2436949   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2436950   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2436951   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2436952   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2436953   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2436954   +   end;
MPRINT(EM_DIAGRAM):   end;
2436955   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2436956   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2436957   +   end;
MPRINT(EM_DIAGRAM):   end;
2436958   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2436959   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2436960   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2436961   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436962   +   end;
MPRINT(EM_DIAGRAM):   end;
2436963   +end;
MPRINT(EM_DIAGRAM):   end;
2436964   +
2436965   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2436966   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2436967   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2436968   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2436969   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2436970   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2436971   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2436972   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2436973   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2436974   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2436975   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2436976   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2436977   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2436978   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2436979   +end;
MPRINT(EM_DIAGRAM):   end;
2436980   +else do;
MPRINT(EM_DIAGRAM):   else do;
2436981   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2436982   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2436983   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2436984   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2436985   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2436986   +   end;
MPRINT(EM_DIAGRAM):   end;
2436987   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2436988   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2436989   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2436990   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2436991   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2436992   +   end;
MPRINT(EM_DIAGRAM):   end;
2436993   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2436994   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2436995   +   end;
MPRINT(EM_DIAGRAM):   end;
2436996   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2436997   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2436998   +   end;
MPRINT(EM_DIAGRAM):   end;
2436999   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2437000   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2437001   +   end;
MPRINT(EM_DIAGRAM):   end;
2437002   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2437003   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2437004   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2437005   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2437006   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2437007   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2437008   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437009   +   end;
MPRINT(EM_DIAGRAM):   end;
2437010   +end;
MPRINT(EM_DIAGRAM):   end;
2437011   +
2437012   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2437013   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2437014   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2437015   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2437016   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2437017   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2437018   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2437019   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2437020   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2437021   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2437022   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2437023   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2437024   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2437025   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2437026   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437027   +end;
MPRINT(EM_DIAGRAM):   end;
2437028   +else do;
MPRINT(EM_DIAGRAM):   else do;
2437029   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2437030   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2437031   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2437032   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2437033   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2437034   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2437035   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2437036   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2437037   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2437038   +         end;
MPRINT(EM_DIAGRAM):   end;
2437039   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2437040   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2437041   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2437042   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2437043   +            end;
MPRINT(EM_DIAGRAM):   end;
2437044   +         end;
MPRINT(EM_DIAGRAM):   end;
2437045   +      end;
MPRINT(EM_DIAGRAM):   end;
2437046   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2437047   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2437048   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2437049   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2437050   +         end;
MPRINT(EM_DIAGRAM):   end;
2437051   +      end;
MPRINT(EM_DIAGRAM):   end;
2437052   +   end;
MPRINT(EM_DIAGRAM):   end;
2437053   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2437054   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2437055   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2437056   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2437057   +      end;
MPRINT(EM_DIAGRAM):   end;
2437058   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2437059   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2437060   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2437061   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2437062   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2437063   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2437064   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2437065   +         end;
MPRINT(EM_DIAGRAM):   end;
2437066   +      end;
MPRINT(EM_DIAGRAM):   end;
2437067   +   end;
MPRINT(EM_DIAGRAM):   end;
2437068   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2437069   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2437070   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2437071   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2437072   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2437073   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2437074   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437075   +   end;
MPRINT(EM_DIAGRAM):   end;
2437076   +end;
MPRINT(EM_DIAGRAM):   end;
2437077   +
2437078   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437079   +*** Checking missing input Interval
2437080   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2437081   +
2437082   +IF NMISS(
2437083   +   AcceptedCmpTotal ,
2437084   +   Age ,
2437085   +   Frq ,
2437086   +   Income ,
2437087   +   Kidhome ,
2437088   +   Mnt ,
2437089   +   MntFishProducts ,
2437090   +   MntFruits ,
2437091   +   MntGoldProds ,
2437092   +   MntMeatProducts ,
2437093   +   MntSweetProducts ,
2437094   +   MntWines ,
2437095   +   MonthsAsCustomer ,
2437096   +   NumCatalogPurchases ,
2437097   +   NumDealsPurchases ,
2437098   +   NumDistPurchases ,
2437099   +   NumStorePurchases ,
2437100   +   NumWebPurchases ,
2437101   +   NumWebVisitsMonth ,
2437102   +   RFMstat ,
2437103   +   RMntFrq ,
2437104   +   Recency ,
2437105   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2437106   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2437107   +
2437108   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2437109   +END;
MPRINT(EM_DIAGRAM):   END;
2437110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437111   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2437112   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437113   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2437114   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2437115   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2437116   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2437117   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2437118   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2437119   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2437120   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2437121   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2437122   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2437123   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2437124   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2437125   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2437126   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2437127   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2437128   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2437129   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2437130   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2437131   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2437132   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2437133   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2437134   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2437135   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2437136   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2437137   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2437138   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2437139   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2437140   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2437141   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2437142   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2437143   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2437144   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2437145   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2437146   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2437147   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2437148   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2437149   +END;
MPRINT(EM_DIAGRAM):   END;
2437150   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2437151   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2437152   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2437153   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2437154   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2437155   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2437156   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2437157   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2437158   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2437159   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2437160   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2437161   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2437162   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2437163   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2437164   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2437165   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2437166   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2437167   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2437168   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2437169   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2437170   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2437171   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2437172   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2437173   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2437174   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2437175   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2437176   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2437177   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2437178   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2437179   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2437180   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2437181   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2437182   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2437183   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2437184   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2437185   +   ELSE S_NumCatalogPurchases
2437186   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2437187   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2437188   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2437189   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2437190   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2437191   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2437192   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2437193   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2437194   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2437195   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2437196   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2437197   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2437198   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2437199   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2437200   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2437201   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2437202   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2437203   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2437204   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2437205   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2437206   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2437207   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2437208   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2437209   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2437210   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2437211   +END;
MPRINT(EM_DIAGRAM):   END;
2437212   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437213   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2437214   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437215   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437216   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2437217   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437218   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437219   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2437220   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437221   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2437222   +   H1x1_1  =     0.16786131610493 * S_AcceptedCmpTotal
2437223   +          +     0.08150129707008 * S_Age  +    -0.00076335149511 * S_Frq
2437224   +          +     2.37648351383272 * S_Income  +    -1.63260278456818 *
2437225   +        S_Kidhome  +     -0.6720941090663 * S_Mnt  +    -0.03176174297509 *
2437226   +        S_MntFishProducts  +    -0.03796990721617 * S_MntFruits
2437227   +          +    -0.17020485447842 * S_MntGoldProds  +      0.7709093878281 *
2437228   +        S_MntMeatProducts  +    -0.26168538456938 * S_MntSweetProducts
2437229   +          +    -1.36275284328546 * S_MntWines  +    -0.30344694826738 *
2437230   +        S_MonthsAsCustomer  +     1.68662611500615 * S_NumCatalogPurchases
2437231   +          +     1.32037113020393 * S_NumDealsPurchases
2437232   +          +     0.42879249227132 * S_NumDistPurchases
2437233   +          +    -0.89190172778783 * S_NumStorePurchases
2437234   +          +    -0.87975442613962 * S_NumWebPurchases
2437235   +          +     2.98977282825831 * S_NumWebVisitsMonth
2437236   +          +     0.16388418187981 * S_RFMstat  +     0.63858980984599 *
2437237   +        S_RMntFrq  +    -2.53833222281652 * S_Recency
2437238   +          +    -2.72141665283523 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.16786131610493 * S_AcceptedCmpTotal + 0.08150129707008 * 
S_Age + -0.00076335149511 * S_Frq + 2.37648351383272 * S_Income + -1.63260278456818 * 
S_Kidhome + -0.6720941090663 * S_Mnt + -0.03176174297509 * S_MntFishProducts + 
-0.03796990721617 * S_MntFruits + -0.17020485447842 * S_MntGoldProds + 0.7709093878281 * 
S_MntMeatProducts + -0.26168538456938 * S_MntSweetProducts + -1.36275284328546 * S_MntWines + 
-0.30344694826738 * S_MonthsAsCustomer + 1.68662611500615 * S_NumCatalogPurchases + 
1.32037113020393 * S_NumDealsPurchases + 0.42879249227132 * S_NumDistPurchases + 
-0.89190172778783 * S_NumStorePurchases + -0.87975442613962 * S_NumWebPurchases + 
2.98977282825831 * S_NumWebVisitsMonth + 0.16388418187981 * S_RFMstat + 0.63858980984599 * 
S_RMntFrq + -2.53833222281652 * S_Recency + -2.72141665283523 * S_Teenhome ;
2437239   +   H1x1_2  =    -1.16140709294501 * S_AcceptedCmpTotal
2437240   +          +    -0.87210661607894 * S_Age  +    -0.15365607228782 * S_Frq
2437241   +          +    -1.14855351318782 * S_Income  +     -0.3792851632462 *
2437242   +        S_Kidhome  +    -1.20412080219233 * S_Mnt  +     0.98615533034973 *
2437243   +        S_MntFishProducts  +     0.44541456963703 * S_MntFruits
2437244   +          +    -0.86465923336111 * S_MntGoldProds  +    -5.15063925950455 *
2437245   +        S_MntMeatProducts  +     0.54937255903381 * S_MntSweetProducts
2437246   +          +      1.1566197343428 * S_MntWines  +     1.05956341559861 *
2437247   +        S_MonthsAsCustomer  +    -1.51353620179805 * S_NumCatalogPurchases
2437248   +          +    -1.16737670931605 * S_NumDealsPurchases
2437249   +          +     0.08205195039242 * S_NumDistPurchases
2437250   +          +    -0.65367044520084 * S_NumStorePurchases
2437251   +          +     2.39693083674757 * S_NumWebPurchases
2437252   +          +     0.18432526469897 * S_NumWebVisitsMonth
2437253   +          +    -0.81660690569703 * S_RFMstat  +      0.2679378370467 *
2437254   +        S_RMntFrq  +    -0.12214066685673 * S_Recency
2437255   +          +     1.80138107382539 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.16140709294501 * S_AcceptedCmpTotal + -0.87210661607894 * 
S_Age + -0.15365607228782 * S_Frq + -1.14855351318782 * S_Income + -0.3792851632462 * 
S_Kidhome + -1.20412080219233 * S_Mnt + 0.98615533034973 * S_MntFishProducts + 
0.44541456963703 * S_MntFruits + -0.86465923336111 * S_MntGoldProds + -5.15063925950455 * 
S_MntMeatProducts + 0.54937255903381 * S_MntSweetProducts + 1.1566197343428 * S_MntWines + 
1.05956341559861 * S_MonthsAsCustomer + -1.51353620179805 * S_NumCatalogPurchases + 
-1.16737670931605 * S_NumDealsPurchases + 0.08205195039242 * S_NumDistPurchases + 
-0.65367044520084 * S_NumStorePurchases + 2.39693083674757 * S_NumWebPurchases + 
0.18432526469897 * S_NumWebVisitsMonth + -0.81660690569703 * S_RFMstat + 0.2679378370467 * 
S_RMntFrq + -0.12214066685673 * S_Recency + 1.80138107382539 * S_Teenhome ;
2437256   +   H1x1_3  =      2.0905555295419 * S_AcceptedCmpTotal
2437257   +          +    -0.23515107640805 * S_Age  +    -0.34980320997139 * S_Frq
2437258   +          +     0.96612788543649 * S_Income  +    -0.57035066115881 *
2437259   +        S_Kidhome  +     0.22762934410578 * S_Mnt  +    -0.52536382903021 *
2437260   +        S_MntFishProducts  +    -1.18451511831956 * S_MntFruits
2437261   +          +     0.15600368092559 * S_MntGoldProds  +     2.66964572205551 *
2437262   +        S_MntMeatProducts  +    -0.66381928008493 * S_MntSweetProducts
2437263   +          +    -1.34669953562975 * S_MntWines  +     1.35404821514849 *
2437264   +        S_MonthsAsCustomer  +     1.74839628716461 * S_NumCatalogPurchases
2437265   +          +     0.76616480025024 * S_NumDealsPurchases
2437266   +          +     0.42823368706255 * S_NumDistPurchases
2437267   +          +    -1.16998364854907 * S_NumStorePurchases
2437268   +          +     -1.0841896541746 * S_NumWebPurchases
2437269   +          +     2.74837744375079 * S_NumWebVisitsMonth
2437270   +          +    -0.12893804494501 * S_RFMstat  +    -0.62922223536042 *
2437271   +        S_RMntFrq  +    -5.13438280616518 * S_Recency
2437272   +          +    -0.03717013845941 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.0905555295419 * S_AcceptedCmpTotal + -0.23515107640805 * 
S_Age + -0.34980320997139 * S_Frq + 0.96612788543649 * S_Income + -0.57035066115881 * 
S_Kidhome + 0.22762934410578 * S_Mnt + -0.52536382903021 * S_MntFishProducts + 
-1.18451511831956 * S_MntFruits + 0.15600368092559 * S_MntGoldProds + 2.66964572205551 * 
S_MntMeatProducts + -0.66381928008493 * S_MntSweetProducts + -1.34669953562975 * S_MntWines + 
1.35404821514849 * S_MonthsAsCustomer + 1.74839628716461 * S_NumCatalogPurchases + 
0.76616480025024 * S_NumDealsPurchases + 0.42823368706255 * S_NumDistPurchases + 
-1.16998364854907 * S_NumStorePurchases + -1.0841896541746 * S_NumWebPurchases + 
2.74837744375079 * S_NumWebVisitsMonth + -0.12893804494501 * S_RFMstat + -0.62922223536042 * 
S_RMntFrq + -5.13438280616518 * S_Recency + -0.03717013845941 * S_Teenhome ;
2437273   +   H1x1_4  =     0.00721395593412 * S_AcceptedCmpTotal
2437274   +          +    -0.01540387767211 * S_Age  +    -0.84860703860633 * S_Frq
2437275   +          +    -1.02288627805121 * S_Income  +    -1.09101870516967 *
2437276   +        S_Kidhome  +    -0.49364597366691 * S_Mnt  +    -0.46832600024559 *
2437277   +        S_MntFishProducts  +     0.18419647776638 * S_MntFruits
2437278   +          +     0.08548650236624 * S_MntGoldProds  +      3.4353205628246 *
2437279   +        S_MntMeatProducts  +    -0.34836704949861 * S_MntSweetProducts
2437280   +          +    -2.43294028965601 * S_MntWines  +       -0.52018014955 *
2437281   +        S_MonthsAsCustomer  +     0.64700842330282 * S_NumCatalogPurchases
2437282   +          +     0.78421010501058 * S_NumDealsPurchases
2437283   +          +     0.01075885160671 * S_NumDistPurchases
2437284   +          +    -1.99395040717832 * S_NumStorePurchases
2437285   +          +    -1.02908330834262 * S_NumWebPurchases
2437286   +          +     2.79163466516477 * S_NumWebVisitsMonth
2437287   +          +    -0.02537920152644 * S_RFMstat  +    -0.42457000565561 *
2437288   +        S_RMntFrq  +     -2.0907247135068 * S_Recency
2437289   +          +     0.74119954026621 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.00721395593412 * S_AcceptedCmpTotal + -0.01540387767211 * 
S_Age + -0.84860703860633 * S_Frq + -1.02288627805121 * S_Income + -1.09101870516967 * 
S_Kidhome + -0.49364597366691 * S_Mnt + -0.46832600024559 * S_MntFishProducts + 
0.18419647776638 * S_MntFruits + 0.08548650236624 * S_MntGoldProds + 3.4353205628246 * 
S_MntMeatProducts + -0.34836704949861 * S_MntSweetProducts + -2.43294028965601 * S_MntWines + 
-0.52018014955 * S_MonthsAsCustomer + 0.64700842330282 * S_NumCatalogPurchases + 
0.78421010501058 * S_NumDealsPurchases + 0.01075885160671 * S_NumDistPurchases + 
-1.99395040717832 * S_NumStorePurchases + -1.02908330834262 * S_NumWebPurchases + 
2.79163466516477 * S_NumWebVisitsMonth + -0.02537920152644 * S_RFMstat + -0.42457000565561 * 
S_RMntFrq + -2.0907247135068 * S_Recency + 0.74119954026621 * S_Teenhome ;
2437290   +   H1x1_5  =    -1.61701205426558 * S_AcceptedCmpTotal
2437291   +          +     0.08257295395479 * S_Age  +    -0.68185680658717 * S_Frq
2437292   +          +    -1.39465125759406 * S_Income  +    -1.25029109577242 *
2437293   +        S_Kidhome  +    -1.09090107886966 * S_Mnt  +     1.64350195586938 *
2437294   +        S_MntFishProducts  +      0.5087421773332 * S_MntFruits
2437295   +          +      0.4047616469084 * S_MntGoldProds  +    -7.16241250715453 *
2437296   +        S_MntMeatProducts  +    -0.92562420397097 * S_MntSweetProducts
2437297   +          +     1.87307481667927 * S_MntWines  +    -0.53417946416471 *
2437298   +        S_MonthsAsCustomer  +    -1.53123660652072 * S_NumCatalogPurchases
2437299   +          +    -1.04219068390022 * S_NumDealsPurchases
2437300   +          +    -0.45770204483973 * S_NumDistPurchases
2437301   +          +    -0.04941442229195 * S_NumStorePurchases
2437302   +          +     0.67187353161183 * S_NumWebPurchases
2437303   +          +     2.01907760553871 * S_NumWebVisitsMonth
2437304   +          +    -1.68329765100269 * S_RFMstat  +     0.29244142334331 *
2437305   +        S_RMntFrq  +    -1.12913051410394 * S_Recency
2437306   +          +     0.43082751824484 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.61701205426558 * S_AcceptedCmpTotal + 0.08257295395479 * 
S_Age + -0.68185680658717 * S_Frq + -1.39465125759406 * S_Income + -1.25029109577242 * 
S_Kidhome + -1.09090107886966 * S_Mnt + 1.64350195586938 * S_MntFishProducts + 0.5087421773332 
* S_MntFruits + 0.4047616469084 * S_MntGoldProds + -7.16241250715453 * S_MntMeatProducts + 
-0.92562420397097 * S_MntSweetProducts + 1.87307481667927 * S_MntWines + -0.53417946416471 * 
S_MonthsAsCustomer + -1.53123660652072 * S_NumCatalogPurchases + -1.04219068390022 * 
S_NumDealsPurchases + -0.45770204483973 * S_NumDistPurchases + -0.04941442229195 * 
S_NumStorePurchases + 0.67187353161183 * S_NumWebPurchases + 2.01907760553871 * 
S_NumWebVisitsMonth + -1.68329765100269 * S_RFMstat + 0.29244142334331 * S_RMntFrq + 
-1.12913051410394 * S_Recency + 0.43082751824484 * S_Teenhome ;
2437307   +   H1x1_1  = H1x1_1  +    -0.44646416045725 * AcceptedCmp10
2437308   +          +    -0.51992887099168 * AcceptedCmp20  +    -1.12974688442196 *
2437309   +        AcceptedCmp30  +    -0.25247614927616 * AcceptedCmp40
2437310   +          +     -1.0839587453165 * AcceptedCmp50  +    -0.37542128912082 *
2437311   +        Complain0  +     0.50509109375746 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.44646416045725 * AcceptedCmp10 + -0.51992887099168 
* AcceptedCmp20 + -1.12974688442196 * AcceptedCmp30 + -0.25247614927616 * AcceptedCmp40 + 
-1.0839587453165 * AcceptedCmp50 + -0.37542128912082 * Complain0 + 0.50509109375746 * 
HigherEducationBinary0 ;
2437312   +   H1x1_2  = H1x1_2  +     1.41785862418118 * AcceptedCmp10
2437313   +          +     0.14869386732553 * AcceptedCmp20  +    -0.34292007253529 *
2437314   +        AcceptedCmp30  +    -0.46450669830265 * AcceptedCmp40
2437315   +          +    -0.84675597945703 * AcceptedCmp50  +     -0.0664649548734 *
2437316   +        Complain0  +    -0.45532665777266 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.41785862418118 * AcceptedCmp10 + 0.14869386732553 * 
AcceptedCmp20 + -0.34292007253529 * AcceptedCmp30 + -0.46450669830265 * AcceptedCmp40 + 
-0.84675597945703 * AcceptedCmp50 + -0.0664649548734 * Complain0 + -0.45532665777266 * 
HigherEducationBinary0 ;
2437317   +   H1x1_3  = H1x1_3  +    -0.77549230890552 * AcceptedCmp10
2437318   +          +    -1.36005205352388 * AcceptedCmp20  +    -0.77268925112364 *
2437319   +        AcceptedCmp30  +    -1.48651970256564 * AcceptedCmp40
2437320   +          +    -1.49771960438108 * AcceptedCmp50  +     0.05855673938529 *
2437321   +        Complain0  +      0.5650947463497 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.77549230890552 * AcceptedCmp10 + -1.36005205352388 
* AcceptedCmp20 + -0.77268925112364 * AcceptedCmp30 + -1.48651970256564 * AcceptedCmp40 + 
-1.49771960438108 * AcceptedCmp50 + 0.05855673938529 * Complain0 + 0.5650947463497 * 
HigherEducationBinary0 ;
2437322   +   H1x1_4  = H1x1_4  +    -0.67577364181798 * AcceptedCmp10
2437323   +          +    -0.90920539880387 * AcceptedCmp20  +    -0.10856872028934 *
2437324   +        AcceptedCmp30  +    -0.17408320421731 * AcceptedCmp40
2437325   +          +    -0.40718112138881 * AcceptedCmp50  +    -1.15772819875829 *
2437326   +        Complain0  +    -0.63688652305256 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.67577364181798 * AcceptedCmp10 + -0.90920539880387 
* AcceptedCmp20 + -0.10856872028934 * AcceptedCmp30 + -0.17408320421731 * AcceptedCmp40 + 
-0.40718112138881 * AcceptedCmp50 + -1.15772819875829 * Complain0 + -0.63688652305256 * 
HigherEducationBinary0 ;
2437327   +   H1x1_5  = H1x1_5  +      -0.257461635853 * AcceptedCmp10
2437328   +          +    -0.53931888306725 * AcceptedCmp20  +    -0.18314917937273 *
2437329   +        AcceptedCmp30  +    -0.63373606551928 * AcceptedCmp40
2437330   +          +    -0.22117496766649 * AcceptedCmp50  +    -0.96313784449205 *
2437331   +        Complain0  +    -0.42031825118642 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.257461635853 * AcceptedCmp10 + -0.53931888306725 * 
AcceptedCmp20 + -0.18314917937273 * AcceptedCmp30 + -0.63373606551928 * AcceptedCmp40 + 
-0.22117496766649 * AcceptedCmp50 + -0.96313784449205 * Complain0 + -0.42031825118642 * 
HigherEducationBinary0 ;
2437332   +   H1x1_1  = H1x1_1  +    -0.61947659516101 * Education2n_Cycle
2437333   +          +     0.35542867116569 * EducationBasic  +    -0.40115062807285 *
2437334   +        EducationGraduation  +     0.09596442360106 * EducationMaster
2437335   +          +     2.58907527032049 * Marital_StatusDivorced
2437336   +          +    -2.45549008158921 * Marital_StatusMarried
2437337   +          +     2.56223650840768 * Marital_StatusSingle
2437338   +          +    -2.57680442835747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.61947659516101 * Education2n_Cycle + 
0.35542867116569 * EducationBasic + -0.40115062807285 * EducationGraduation + 0.09596442360106 
* EducationMaster + 2.58907527032049 * Marital_StatusDivorced + -2.45549008158921 * 
Marital_StatusMarried + 2.56223650840768 * Marital_StatusSingle + -2.57680442835747 * 
Marital_StatusTogether ;
2437339   +   H1x1_2  = H1x1_2  +    -0.89996232033524 * Education2n_Cycle
2437340   +          +     0.51901949778729 * EducationBasic  +     0.48428543845596 *
2437341   +        EducationGraduation  +     0.29249899969052 * EducationMaster
2437342   +          +     0.83917299191368 * Marital_StatusDivorced
2437343   +          +    -0.62624692699191 * Marital_StatusMarried
2437344   +          +    -0.22585060624911 * Marital_StatusSingle
2437345   +          +    -1.13600554287291 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.89996232033524 * Education2n_Cycle + 
0.51901949778729 * EducationBasic + 0.48428543845596 * EducationGraduation + 0.29249899969052 
* EducationMaster + 0.83917299191368 * Marital_StatusDivorced + -0.62624692699191 * 
Marital_StatusMarried + -0.22585060624911 * Marital_StatusSingle + -1.13600554287291 * 
Marital_StatusTogether ;
2437346   +   H1x1_3  = H1x1_3  +    -0.14267095105584 * Education2n_Cycle
2437347   +          +    -0.02301358792856 * EducationBasic  +     0.52040244367562 *
2437348   +        EducationGraduation  +     -1.3163356801876 * EducationMaster
2437349   +          +    -0.65063506696715 * Marital_StatusDivorced
2437350   +          +    -2.37495865381256 * Marital_StatusMarried
2437351   +          +    -0.54954654146904 * Marital_StatusSingle
2437352   +          +    -2.20184943463859 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.14267095105584 * Education2n_Cycle + 
-0.02301358792856 * EducationBasic + 0.52040244367562 * EducationGraduation + -1.3163356801876 
* EducationMaster + -0.65063506696715 * Marital_StatusDivorced + -2.37495865381256 * 
Marital_StatusMarried + -0.54954654146904 * Marital_StatusSingle + -2.20184943463859 * 
Marital_StatusTogether ;
2437353   +   H1x1_4  = H1x1_4  +     0.07824072331908 * Education2n_Cycle
2437354   +          +    -0.70728597193571 * EducationBasic  +    -0.08522817414387 *
2437355   +        EducationGraduation  +     0.07916018399549 * EducationMaster
2437356   +          +     0.16185824798364 * Marital_StatusDivorced
2437357   +          +    -0.08142416735136 * Marital_StatusMarried
2437358   +          +    -0.20392270385969 * Marital_StatusSingle
2437359   +          +    -0.16702436233017 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + 0.07824072331908 * Education2n_Cycle + 
-0.70728597193571 * EducationBasic + -0.08522817414387 * EducationGraduation + 
0.07916018399549 * EducationMaster + 0.16185824798364 * Marital_StatusDivorced + 
-0.08142416735136 * Marital_StatusMarried + -0.20392270385969 * Marital_StatusSingle + 
-0.16702436233017 * Marital_StatusTogether ;
2437360   +   H1x1_5  = H1x1_5  +    -0.24374540557838 * Education2n_Cycle
2437361   +          +    -0.69820143786999 * EducationBasic  +    -0.60198982003005 *
2437362   +        EducationGraduation  +     0.28107355175103 * EducationMaster
2437363   +          +      -0.516522631078 * Marital_StatusDivorced
2437364   +          +    -0.61661247789976 * Marital_StatusMarried
2437365   +          +    -0.99533130308294 * Marital_StatusSingle
2437366   +          +    -0.36897004084592 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.24374540557838 * Education2n_Cycle + 
-0.69820143786999 * EducationBasic + -0.60198982003005 * EducationGraduation + 
0.28107355175103 * EducationMaster + -0.516522631078 * Marital_StatusDivorced + 
-0.61661247789976 * Marital_StatusMarried + -0.99533130308294 * Marital_StatusSingle + 
-0.36897004084592 * Marital_StatusTogether ;
2437367   +   H1x1_1  =    -2.48464133714558 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.48464133714558 + H1x1_1 ;
2437368   +   H1x1_2  =    -1.27353840480002 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -1.27353840480002 + H1x1_2 ;
2437369   +   H1x1_3  =    -1.74000879961851 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.74000879961851 + H1x1_3 ;
2437370   +   H1x1_4  =    -0.38838285632991 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.38838285632991 + H1x1_4 ;
2437371   +   H1x1_5  =    -0.14124488553728 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -0.14124488553728 + H1x1_5 ;
2437372   +   H1x1_6  = 0;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0;
2437373   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 );
2437374   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2437375   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2437376   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2437377   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2437378   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2437379   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2437380   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2437381   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2437382   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2437383   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2437384   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2437385   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2437386   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2437387   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2437388   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2437389   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2437390   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2437391   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2437392   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2437393   +END;
MPRINT(EM_DIAGRAM):   END;
2437394   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2437395   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2437396   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2437397   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2437398   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2437399   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2437400   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2437401   +END;
MPRINT(EM_DIAGRAM):   END;
2437402   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437403   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2437404   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437405   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2437406   +   H1x2_1  =     0.48404108721156 * S_AcceptedCmpTotal
2437407   +          +    -0.27070568741648 * S_Age  +    -0.78729393257177 * S_Frq
2437408   +          +    -0.22841203379079 * S_Income  +      1.7948359601764 *
2437409   +        S_Kidhome  +     0.16415271082275 * S_Mnt  +     0.68709045116477 *
2437410   +        S_MntFishProducts  +     1.40499150479431 * S_MntFruits
2437411   +          +     1.76690927096327 * S_MntGoldProds  +    -0.47805967324795 *
2437412   +        S_MntMeatProducts  +    -1.98462171861386 * S_MntSweetProducts
2437413   +          +     0.17732042205332 * S_MntWines  +    -2.68647979937092 *
2437414   +        S_MonthsAsCustomer  +     0.66724634672152 * S_NumCatalogPurchases
2437415   +          +    -0.03801022287706 * S_NumDealsPurchases
2437416   +          +    -1.50723574966419 * S_NumDistPurchases
2437417   +          +    -0.21514545448485 * S_NumStorePurchases
2437418   +          +    -0.50179555233865 * S_NumWebPurchases
2437419   +          +    -0.68226572560161 * S_NumWebVisitsMonth
2437420   +          +    -1.16287961930374 * S_RFMstat  +    -0.10835316604382 *
2437421   +        S_RMntFrq  +     0.78178939203913 * S_Recency
2437422   +          +     0.99430928489958 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.48404108721156 * S_AcceptedCmpTotal + -0.27070568741648 * 
S_Age + -0.78729393257177 * S_Frq + -0.22841203379079 * S_Income + 1.7948359601764 * S_Kidhome 
+ 0.16415271082275 * S_Mnt + 0.68709045116477 * S_MntFishProducts + 1.40499150479431 * 
S_MntFruits + 1.76690927096327 * S_MntGoldProds + -0.47805967324795 * S_MntMeatProducts + 
-1.98462171861386 * S_MntSweetProducts + 0.17732042205332 * S_MntWines + -2.68647979937092 * 
S_MonthsAsCustomer + 0.66724634672152 * S_NumCatalogPurchases + -0.03801022287706 * 
S_NumDealsPurchases + -1.50723574966419 * S_NumDistPurchases + -0.21514545448485 * 
S_NumStorePurchases + -0.50179555233865 * S_NumWebPurchases + -0.68226572560161 * 
S_NumWebVisitsMonth + -1.16287961930374 * S_RFMstat + -0.10835316604382 * S_RMntFrq + 
0.78178939203913 * S_Recency + 0.99430928489958 * S_Teenhome ;
2437423   +   H1x2_2  =    -0.36352858735119 * S_AcceptedCmpTotal
2437424   +          +    -0.57224467079409 * S_Age  +    -1.50170848997829 * S_Frq
2437425   +          +    -0.38902839025885 * S_Income  +     -1.1798795668612 *
2437426   +        S_Kidhome  +     -0.1290183198617 * S_Mnt  +     0.76723261406072 *
2437427   +        S_MntFishProducts  +     -0.2940014517298 * S_MntFruits
2437428   +          +     1.10823983171432 * S_MntGoldProds  +    -0.31483479967732 *
2437429   +        S_MntMeatProducts  +     1.52044892546638 * S_MntSweetProducts
2437430   +          +     0.93667207634948 * S_MntWines  +     1.38654947651763 *
2437431   +        S_MonthsAsCustomer  +     0.60618457384701 * S_NumCatalogPurchases
2437432   +          +     0.70551335536975 * S_NumDealsPurchases
2437433   +          +     0.02824488988803 * S_NumDistPurchases
2437434   +          +    -0.47958123842808 * S_NumStorePurchases
2437435   +          +     1.04559003239583 * S_NumWebPurchases
2437436   +          +    -0.58386087813772 * S_NumWebVisitsMonth
2437437   +          +     0.30550498646512 * S_RFMstat  +     0.30157778523343 *
2437438   +        S_RMntFrq  +    -0.05848082255965 * S_Recency
2437439   +          +     1.93017367885145 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.36352858735119 * S_AcceptedCmpTotal + -0.57224467079409 * 
S_Age + -1.50170848997829 * S_Frq + -0.38902839025885 * S_Income + -1.1798795668612 * 
S_Kidhome + -0.1290183198617 * S_Mnt + 0.76723261406072 * S_MntFishProducts + -0.2940014517298 
* S_MntFruits + 1.10823983171432 * S_MntGoldProds + -0.31483479967732 * S_MntMeatProducts + 
1.52044892546638 * S_MntSweetProducts + 0.93667207634948 * S_MntWines + 1.38654947651763 * 
S_MonthsAsCustomer + 0.60618457384701 * S_NumCatalogPurchases + 0.70551335536975 * 
S_NumDealsPurchases + 0.02824488988803 * S_NumDistPurchases + -0.47958123842808 * 
S_NumStorePurchases + 1.04559003239583 * S_NumWebPurchases + -0.58386087813772 * 
S_NumWebVisitsMonth + 0.30550498646512 * S_RFMstat + 0.30157778523343 * S_RMntFrq + 
-0.05848082255965 * S_Recency + 1.93017367885145 * S_Teenhome ;
2437440   +   H1x2_3  =    -1.42573562358231 * S_AcceptedCmpTotal
2437441   +          +    -1.32139459670271 * S_Age  +    -0.65089374259133 * S_Frq
2437442   +          +     0.40762251828155 * S_Income  +     0.07844400105703 *
2437443   +        S_Kidhome  +     0.50965373569965 * S_Mnt  +     0.16029734923155 *
2437444   +        S_MntFishProducts  +     0.09920766855666 * S_MntFruits
2437445   +          +     1.72613699296152 * S_MntGoldProds  +    -0.05634715837952 *
2437446   +        S_MntMeatProducts  +    -0.46288044931269 * S_MntSweetProducts
2437447   +          +    -1.56275217321856 * S_MntWines  +     0.47573724745363 *
2437448   +        S_MonthsAsCustomer  +     0.24362096681468 * S_NumCatalogPurchases
2437449   +          +    -0.28907339261907 * S_NumDealsPurchases
2437450   +          +     0.04310505858352 * S_NumDistPurchases
2437451   +          +    -0.99594604666889 * S_NumStorePurchases
2437452   +          +    -0.58870940220114 * S_NumWebPurchases
2437453   +          +     0.84018399925148 * S_NumWebVisitsMonth
2437454   +          +    -0.19517311010454 * S_RFMstat  +     -0.3463233802461 *
2437455   +        S_RMntFrq  +    -1.47730936960999 * S_Recency
2437456   +          +    -0.88597688046705 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.42573562358231 * S_AcceptedCmpTotal + -1.32139459670271 * 
S_Age + -0.65089374259133 * S_Frq + 0.40762251828155 * S_Income + 0.07844400105703 * S_Kidhome 
+ 0.50965373569965 * S_Mnt + 0.16029734923155 * S_MntFishProducts + 0.09920766855666 * 
S_MntFruits + 1.72613699296152 * S_MntGoldProds + -0.05634715837952 * S_MntMeatProducts + 
-0.46288044931269 * S_MntSweetProducts + -1.56275217321856 * S_MntWines + 0.47573724745363 * 
S_MonthsAsCustomer + 0.24362096681468 * S_NumCatalogPurchases + -0.28907339261907 * 
S_NumDealsPurchases + 0.04310505858352 * S_NumDistPurchases + -0.99594604666889 * 
S_NumStorePurchases + -0.58870940220114 * S_NumWebPurchases + 0.84018399925148 * 
S_NumWebVisitsMonth + -0.19517311010454 * S_RFMstat + -0.3463233802461 * S_RMntFrq + 
-1.47730936960999 * S_Recency + -0.88597688046705 * S_Teenhome ;
2437457   +   H1x2_4  =     0.11016580381662 * S_AcceptedCmpTotal
2437458   +          +     0.30908576425954 * S_Age  +     0.34179480828109 * S_Frq
2437459   +          +     0.40584056795753 * S_Income  +    -0.45712899846476 *
2437460   +        S_Kidhome  +     1.12080510316382 * S_Mnt  +     0.48988466623601 *
2437461   +        S_MntFishProducts  +    -0.33589219598754 * S_MntFruits
2437462   +          +     0.89305356089927 * S_MntGoldProds  +    -2.00512215642683 *
2437463   +        S_MntMeatProducts  +     1.10859074670332 * S_MntSweetProducts
2437464   +          +     -1.0064133988839 * S_MntWines  +      0.7768603559605 *
2437465   +        S_MonthsAsCustomer  +     0.97922554259242 * S_NumCatalogPurchases
2437466   +          +     0.52917289878604 * S_NumDealsPurchases
2437467   +          +     0.30974142545809 * S_NumDistPurchases
2437468   +          +    -0.36081450643799 * S_NumStorePurchases
2437469   +          +    -0.28418053386759 * S_NumWebPurchases
2437470   +          +    -0.80759462497096 * S_NumWebVisitsMonth
2437471   +          +    -1.12633439579018 * S_RFMstat  +    -0.14662678398603 *
2437472   +        S_RMntFrq  +    -0.02418118976368 * S_Recency
2437473   +          +    -0.46548253671298 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 0.11016580381662 * S_AcceptedCmpTotal + 0.30908576425954 * 
S_Age + 0.34179480828109 * S_Frq + 0.40584056795753 * S_Income + -0.45712899846476 * S_Kidhome 
+ 1.12080510316382 * S_Mnt + 0.48988466623601 * S_MntFishProducts + -0.33589219598754 * 
S_MntFruits + 0.89305356089927 * S_MntGoldProds + -2.00512215642683 * S_MntMeatProducts + 
1.10859074670332 * S_MntSweetProducts + -1.0064133988839 * S_MntWines + 0.7768603559605 * 
S_MonthsAsCustomer + 0.97922554259242 * S_NumCatalogPurchases + 0.52917289878604 * 
S_NumDealsPurchases + 0.30974142545809 * S_NumDistPurchases + -0.36081450643799 * 
S_NumStorePurchases + -0.28418053386759 * S_NumWebPurchases + -0.80759462497096 * 
S_NumWebVisitsMonth + -1.12633439579018 * S_RFMstat + -0.14662678398603 * S_RMntFrq + 
-0.02418118976368 * S_Recency + -0.46548253671298 * S_Teenhome ;
2437474   +   H1x2_5  =    -0.55551536908819 * S_AcceptedCmpTotal
2437475   +          +    -0.09163465220674 * S_Age  +    -0.35937602626275 * S_Frq
2437476   +          +     0.61145646041534 * S_Income  +     0.28920493959955 *
2437477   +        S_Kidhome  +     0.71661843805688 * S_Mnt  +     0.25254041554237 *
2437478   +        S_MntFishProducts  +    -0.38704785732563 * S_MntFruits
2437479   +          +    -0.16912995068939 * S_MntGoldProds  +     0.21440191729631 *
2437480   +        S_MntMeatProducts  +    -0.49507693220329 * S_MntSweetProducts
2437481   +          +      0.3153765288287 * S_MntWines  +    -0.15329574285112 *
2437482   +        S_MonthsAsCustomer  +     1.28722879296429 * S_NumCatalogPurchases
2437483   +          +    -0.47500053723253 * S_NumDealsPurchases
2437484   +          +     0.41421086319635 * S_NumDistPurchases
2437485   +          +     0.69664835428137 * S_NumStorePurchases
2437486   +          +     0.66359306812968 * S_NumWebPurchases
2437487   +          +     0.77931462528741 * S_NumWebVisitsMonth
2437488   +          +     0.05868786291548 * S_RFMstat  +     0.77672802649379 *
2437489   +        S_RMntFrq  +    -1.91226042675868 * S_Recency
2437490   +          +     1.79227856637688 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.55551536908819 * S_AcceptedCmpTotal + -0.09163465220674 * 
S_Age + -0.35937602626275 * S_Frq + 0.61145646041534 * S_Income + 0.28920493959955 * S_Kidhome 
+ 0.71661843805688 * S_Mnt + 0.25254041554237 * S_MntFishProducts + -0.38704785732563 * 
S_MntFruits + -0.16912995068939 * S_MntGoldProds + 0.21440191729631 * S_MntMeatProducts + 
-0.49507693220329 * S_MntSweetProducts + 0.3153765288287 * S_MntWines + -0.15329574285112 * 
S_MonthsAsCustomer + 1.28722879296429 * S_NumCatalogPurchases + -0.47500053723253 * 
S_NumDealsPurchases + 0.41421086319635 * S_NumDistPurchases + 0.69664835428137 * 
S_NumStorePurchases + 0.66359306812968 * S_NumWebPurchases + 0.77931462528741 * 
S_NumWebVisitsMonth + 0.05868786291548 * S_RFMstat + 0.77672802649379 * S_RMntFrq + 
-1.91226042675868 * S_Recency + 1.79227856637688 * S_Teenhome ;
2437491   +   H1x2_1  = H1x2_1  +     1.13471289065691 * AcceptedCmp10
2437492   +          +     0.65974383309652 * AcceptedCmp20  +    -1.87292531678796 *
2437493   +        AcceptedCmp30  +      -1.353797047409 * AcceptedCmp40
2437494   +          +     0.20616786486771 * AcceptedCmp50  +    -0.38264326101775 *
2437495   +        Complain0  +    -0.17807638061615 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.13471289065691 * AcceptedCmp10 + 0.65974383309652 * 
AcceptedCmp20 + -1.87292531678796 * AcceptedCmp30 + -1.353797047409 * AcceptedCmp40 + 
0.20616786486771 * AcceptedCmp50 + -0.38264326101775 * Complain0 + -0.17807638061615 * 
HigherEducationBinary0 ;
2437496   +   H1x2_2  = H1x2_2  +     1.21347348622419 * AcceptedCmp10
2437497   +          +    -0.25372740217388 * AcceptedCmp20  +     1.86937589112006 *
2437498   +        AcceptedCmp30  +    -0.04754722838516 * AcceptedCmp40
2437499   +          +    -0.08078800460742 * AcceptedCmp50  +     1.62387969342769 *
2437500   +        Complain0  +    -0.78004732229344 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.21347348622419 * AcceptedCmp10 + -0.25372740217388 * 
AcceptedCmp20 + 1.86937589112006 * AcceptedCmp30 + -0.04754722838516 * AcceptedCmp40 + 
-0.08078800460742 * AcceptedCmp50 + 1.62387969342769 * Complain0 + -0.78004732229344 * 
HigherEducationBinary0 ;
2437501   +   H1x2_3  = H1x2_3  +    -0.02152665189186 * AcceptedCmp10
2437502   +          +     0.57207081192818 * AcceptedCmp20  +      0.6212177562119 *
2437503   +        AcceptedCmp30  +    -0.73691462528053 * AcceptedCmp40
2437504   +          +    -0.35326427815838 * AcceptedCmp50  +     0.14875513793176 *
2437505   +        Complain0  +    -0.13978395235915 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + -0.02152665189186 * AcceptedCmp10 + 0.57207081192818 * 
AcceptedCmp20 + 0.6212177562119 * AcceptedCmp30 + -0.73691462528053 * AcceptedCmp40 + 
-0.35326427815838 * AcceptedCmp50 + 0.14875513793176 * Complain0 + -0.13978395235915 * 
HigherEducationBinary0 ;
2437506   +   H1x2_4  = H1x2_4  +     0.87315450122595 * AcceptedCmp10
2437507   +          +      0.7868322457627 * AcceptedCmp20  +    -0.23332719513906 *
2437508   +        AcceptedCmp30  +    -0.68817918979928 * AcceptedCmp40
2437509   +          +    -0.57204462412445 * AcceptedCmp50  +    -0.86223238269616 *
2437510   +        Complain0  +     -0.3126348645458 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.87315450122595 * AcceptedCmp10 + 0.7868322457627 * 
AcceptedCmp20 + -0.23332719513906 * AcceptedCmp30 + -0.68817918979928 * AcceptedCmp40 + 
-0.57204462412445 * AcceptedCmp50 + -0.86223238269616 * Complain0 + -0.3126348645458 * 
HigherEducationBinary0 ;
2437511   +   H1x2_5  = H1x2_5  +     0.29282165496733 * AcceptedCmp10
2437512   +          +     1.51708756092369 * AcceptedCmp20  +     1.20268215158483 *
2437513   +        AcceptedCmp30  +     0.30521477351547 * AcceptedCmp40
2437514   +          +    -0.58691162701837 * AcceptedCmp50  +     0.75641665624817 *
2437515   +        Complain0  +      0.7018761099345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.29282165496733 * AcceptedCmp10 + 1.51708756092369 * 
AcceptedCmp20 + 1.20268215158483 * AcceptedCmp30 + 0.30521477351547 * AcceptedCmp40 + 
-0.58691162701837 * AcceptedCmp50 + 0.75641665624817 * Complain0 + 0.7018761099345 * 
HigherEducationBinary0 ;
2437516   +   H1x2_1  = H1x2_1  +    -0.68955031483686 * Education2n_Cycle
2437517   +          +    -1.63162976419312 * EducationBasic  +     1.58569020932253 *
2437518   +        EducationGraduation  +     0.89392741557091 * EducationMaster
2437519   +          +    -1.34742914042312 * Marital_StatusDivorced
2437520   +          +    -0.75378934918763 * Marital_StatusMarried
2437521   +          +    -1.85411678929217 * Marital_StatusSingle
2437522   +          +     0.34579160965376 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.68955031483686 * Education2n_Cycle + 
-1.63162976419312 * EducationBasic + 1.58569020932253 * EducationGraduation + 0.89392741557091 
* EducationMaster + -1.34742914042312 * Marital_StatusDivorced + -0.75378934918763 * 
Marital_StatusMarried + -1.85411678929217 * Marital_StatusSingle + 0.34579160965376 * 
Marital_StatusTogether ;
2437523   +   H1x2_2  = H1x2_2  +     0.91842441316819 * Education2n_Cycle
2437524   +          +    -0.10372785737624 * EducationBasic  +     1.79022097342125 *
2437525   +        EducationGraduation  +      1.4602485898642 * EducationMaster
2437526   +          +     0.47958659206261 * Marital_StatusDivorced
2437527   +          +     -0.9665584294045 * Marital_StatusMarried
2437528   +          +      0.9733784530538 * Marital_StatusSingle
2437529   +          +     0.19258101270915 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.91842441316819 * Education2n_Cycle + 
-0.10372785737624 * EducationBasic + 1.79022097342125 * EducationGraduation + 1.4602485898642 
* EducationMaster + 0.47958659206261 * Marital_StatusDivorced + -0.9665584294045 * 
Marital_StatusMarried + 0.9733784530538 * Marital_StatusSingle + 0.19258101270915 * 
Marital_StatusTogether ;
2437530   +   H1x2_3  = H1x2_3  +     1.26817216331303 * Education2n_Cycle
2437531   +          +    -1.60153781162075 * EducationBasic  +    -0.32068567398782 *
2437532   +        EducationGraduation  +     1.49772418974753 * EducationMaster
2437533   +          +    -0.56894207908284 * Marital_StatusDivorced
2437534   +          +    -0.96715106987195 * Marital_StatusMarried
2437535   +          +     1.18678144721443 * Marital_StatusSingle
2437536   +          +     1.05940264255347 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.26817216331303 * Education2n_Cycle + 
-1.60153781162075 * EducationBasic + -0.32068567398782 * EducationGraduation + 
1.49772418974753 * EducationMaster + -0.56894207908284 * Marital_StatusDivorced + 
-0.96715106987195 * Marital_StatusMarried + 1.18678144721443 * Marital_StatusSingle + 
1.05940264255347 * Marital_StatusTogether ;
2437537   +   H1x2_4  = H1x2_4  +    -1.19824707240276 * Education2n_Cycle
2437538   +          +     0.43905907692169 * EducationBasic  +    -1.18279972023424 *
2437539   +        EducationGraduation  +    -2.01250798855133 * EducationMaster
2437540   +          +     -0.6061959224661 * Marital_StatusDivorced
2437541   +          +     0.03495844244684 * Marital_StatusMarried
2437542   +          +    -0.63896361063244 * Marital_StatusSingle
2437543   +          +     0.74357887057422 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.19824707240276 * Education2n_Cycle + 
0.43905907692169 * EducationBasic + -1.18279972023424 * EducationGraduation + 
-2.01250798855133 * EducationMaster + -0.6061959224661 * Marital_StatusDivorced + 
0.03495844244684 * Marital_StatusMarried + -0.63896361063244 * Marital_StatusSingle + 
0.74357887057422 * Marital_StatusTogether ;
2437544   +   H1x2_5  = H1x2_5  +     -0.6530237200396 * Education2n_Cycle
2437545   +          +     0.90062473169279 * EducationBasic  +    -3.01933913602199 *
2437546   +        EducationGraduation  +     -0.1598988619204 * EducationMaster
2437547   +          +     0.82178907301319 * Marital_StatusDivorced
2437548   +          +     1.69543553114589 * Marital_StatusMarried
2437549   +          +     -2.1272067363559 * Marital_StatusSingle
2437550   +          +     0.24274508474634 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.6530237200396 * Education2n_Cycle + 
0.90062473169279 * EducationBasic + -3.01933913602199 * EducationGraduation + -0.1598988619204 
* EducationMaster + 0.82178907301319 * Marital_StatusDivorced + 1.69543553114589 * 
Marital_StatusMarried + -2.1272067363559 * Marital_StatusSingle + 0.24274508474634 * 
Marital_StatusTogether ;
2437551   +   H1x2_1  =     0.30842509451224 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.30842509451224 + H1x2_1 ;
2437552   +   H1x2_2  =     1.79200699407075 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.79200699407075 + H1x2_2 ;
2437553   +   H1x2_3  =     0.66706944906809 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.66706944906809 + H1x2_3 ;
2437554   +   H1x2_4  =     -0.7356254138015 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.7356254138015 + H1x2_4 ;
2437555   +   H1x2_5  =    -0.68066575174095 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.68066575174095 + H1x2_5 ;
2437556   +   H1x2_6  = 0;
MPRINT(EM_DIAGRAM):   H1x2_6 = 0;
2437557   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 );
2437558   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2437559   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2437560   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2437561   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2437562   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2437563   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2437564   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2437565   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2437566   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2437567   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2437568   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2437569   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2437570   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2437571   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2437572   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2437573   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2437574   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2437575   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2437576   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2437577   +END;
MPRINT(EM_DIAGRAM):   END;
2437578   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2437579   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2437580   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2437581   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2437582   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2437583   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2437584   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2437585   +END;
MPRINT(EM_DIAGRAM):   END;
2437586   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437587   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2437588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437589   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2437590   +   H2x1_1  =      0.7656278374321 * H1x1_1  +     1.18988619460831 * H1x1_2
2437591   +          +    -0.68458045558713 * H1x1_3  +     0.49093980591245 * H1x1_4
2437592   +          +    -1.27959429919804 * H1x1_5  +    -1.38760297105319 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.7656278374321 * H1x1_1 + 1.18988619460831 * H1x1_2 + 
-0.68458045558713 * H1x1_3 + 0.49093980591245 * H1x1_4 + -1.27959429919804 * H1x1_5 + 
-1.38760297105319 * H1x1_6 ;
2437593   +   H2x1_2  =    -1.48941810274544 * H1x1_1  +     1.75443095464294 * H1x1_2
2437594   +          +    -1.63478694878031 * H1x1_3  +    -0.69296364459258 * H1x1_4
2437595   +          +     3.14007823471691 * H1x1_5  +     2.71965753640902 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.48941810274544 * H1x1_1 + 1.75443095464294 * H1x1_2 + 
-1.63478694878031 * H1x1_3 + -0.69296364459258 * H1x1_4 + 3.14007823471691 * H1x1_5 + 
2.71965753640902 * H1x1_6 ;
2437596   +   H2x1_3  =     1.07426996100463 * H1x1_1  +    -1.76796943416489 * H1x1_2
2437597   +          +    -0.11946940948224 * H1x1_3  +     1.25457449221991 * H1x1_4
2437598   +          +     -1.4079980040852 * H1x1_5  +    -0.94725163293394 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.07426996100463 * H1x1_1 + -1.76796943416489 * H1x1_2 + 
-0.11946940948224 * H1x1_3 + 1.25457449221991 * H1x1_4 + -1.4079980040852 * H1x1_5 + 
-0.94725163293394 * H1x1_6 ;
2437599   +   H2x1_4  =    -0.00078893231548 * H1x1_1  +     0.06396324179717 * H1x1_2
2437600   +          +    -0.13674165204668 * H1x1_3  +    -0.26576379023249 * H1x1_4
2437601   +          +     0.44513643867194 * H1x1_5  +     0.66585878141635 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -0.00078893231548 * H1x1_1 + 0.06396324179717 * H1x1_2 + 
-0.13674165204668 * H1x1_3 + -0.26576379023249 * H1x1_4 + 0.44513643867194 * H1x1_5 + 
0.66585878141635 * H1x1_6 ;
2437602   +   H2x1_5  =     -2.8467581879118 * H1x1_1  +     2.94182061339515 * H1x1_2
2437603   +          +    -3.43021438685063 * H1x1_3  +    -4.00045607730935 * H1x1_4
2437604   +          +     3.09230566797337 * H1x1_5  +     3.57592566919388 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.8467581879118 * H1x1_1 + 2.94182061339515 * H1x1_2 + 
-3.43021438685063 * H1x1_3 + -4.00045607730935 * H1x1_4 + 3.09230566797337 * H1x1_5 + 
3.57592566919388 * H1x1_6 ;
2437605   +   H2x1_6  =    -0.29912975132561 * H1x1_1  +     0.25554634262501 * H1x1_2
2437606   +          +    -0.62666868576544 * H1x1_3  +     1.54567563696489 * H1x1_4
2437607   +          +     1.87530466579189 * H1x1_5  +    -0.32006241006585 * H1x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -0.29912975132561 * H1x1_1 + 0.25554634262501 * H1x1_2 + 
-0.62666868576544 * H1x1_3 + 1.54567563696489 * H1x1_4 + 1.87530466579189 * H1x1_5 + 
-0.32006241006585 * H1x1_6 ;
2437608   +   H2x1_1  = H2x1_1  +    -0.53923803948063 * H1x2_1
2437609   +          +    -0.14551996067575 * H1x2_2  +     1.15730137448351 * H1x2_3
2437610   +          +     0.02585401686791 * H1x2_4  +     -0.9274056409194 * H1x2_5
2437611   +          +    -0.07237646966438 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.53923803948063 * H1x2_1 + -0.14551996067575 * 
H1x2_2 + 1.15730137448351 * H1x2_3 + 0.02585401686791 * H1x2_4 + -0.9274056409194 * H1x2_5 + 
-0.07237646966438 * H1x2_6 ;
2437612   +   H2x1_2  = H2x1_2  +     -0.1441321293455 * H1x2_1
2437613   +          +    -0.53271770203833 * H1x2_2  +    -2.80064282115477 * H1x2_3
2437614   +          +    -1.05759395901612 * H1x2_4  +    -0.55127059339304 * H1x2_5
2437615   +          +     0.35471332651631 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.1441321293455 * H1x2_1 + -0.53271770203833 * H1x2_2 
+ -2.80064282115477 * H1x2_3 + -1.05759395901612 * H1x2_4 + -0.55127059339304 * H1x2_5 + 
0.35471332651631 * H1x2_6 ;
2437616   +   H2x1_3  = H2x1_3  +     -0.5351190580444 * H1x2_1
2437617   +          +    -0.02107048725988 * H1x2_2  +    -0.83389437376968 * H1x2_3
2437618   +          +    -0.80183937400902 * H1x2_4  +    -0.66588385104453 * H1x2_5
2437619   +          +      0.5218140468737 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.5351190580444 * H1x2_1 + -0.02107048725988 * H1x2_2 
+ -0.83389437376968 * H1x2_3 + -0.80183937400902 * H1x2_4 + -0.66588385104453 * H1x2_5 + 
0.5218140468737 * H1x2_6 ;
2437620   +   H2x1_4  = H2x1_4  +     1.89050022127485 * H1x2_1
2437621   +          +     -2.6557601537516 * H1x2_2  +     0.99126360053411 * H1x2_3
2437622   +          +    -0.44091776054792 * H1x2_4  +    -1.48547403065153 * H1x2_5
2437623   +          +    -0.67920869444907 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 1.89050022127485 * H1x2_1 + -2.6557601537516 * H1x2_2 
+ 0.99126360053411 * H1x2_3 + -0.44091776054792 * H1x2_4 + -1.48547403065153 * H1x2_5 + 
-0.67920869444907 * H1x2_6 ;
2437624   +   H2x1_5  = H2x1_5  +      0.2827883572995 * H1x2_1
2437625   +          +    -0.68177519072226 * H1x2_2  +    -1.62062483607713 * H1x2_3
2437626   +          +     0.24454579481466 * H1x2_4  +    -0.07591553404219 * H1x2_5
2437627   +          +      1.1175989027563 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.2827883572995 * H1x2_1 + -0.68177519072226 * H1x2_2 
+ -1.62062483607713 * H1x2_3 + 0.24454579481466 * H1x2_4 + -0.07591553404219 * H1x2_5 + 
1.1175989027563 * H1x2_6 ;
2437628   +   H2x1_6  = H2x1_6  +    -0.00603649892235 * H1x2_1
2437629   +          +    -1.39053357060307 * H1x2_2  +    -1.34023350990878 * H1x2_3
2437630   +          +    -0.76811804565852 * H1x2_4  +    -1.40869786147662 * H1x2_5
2437631   +          +     1.54589390085972 * H1x2_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.00603649892235 * H1x2_1 + -1.39053357060307 * 
H1x2_2 + -1.34023350990878 * H1x2_3 + -0.76811804565852 * H1x2_4 + -1.40869786147662 * H1x2_5 
+ 1.54589390085972 * H1x2_6 ;
2437632   +   H2x1_1  =     0.47873396703524 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 0.47873396703524 + H2x1_1 ;
2437633   +   H2x1_2  =     -0.0000340630035 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.0000340630035 + H2x1_2 ;
2437634   +   H2x1_3  =     0.35556259592214 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.35556259592214 + H2x1_3 ;
2437635   +   H2x1_4  =     1.01896219314016 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.01896219314016 + H2x1_4 ;
2437636   +   H2x1_5  =     0.72195082860145 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = 0.72195082860145 + H2x1_5 ;
2437637   +   H2x1_6  =     0.24171639764515 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 0.24171639764515 + H2x1_6 ;
2437638   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2437639   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2437640   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2437641   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2437642   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2437643   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2437644   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2437645   +   H2x1_6  = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.0 / (1.0 + EXP(MIN( - H2x1_6 , _EXP_BAR)));
2437646   +END;
MPRINT(EM_DIAGRAM):   END;
2437647   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2437648   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2437649   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2437650   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2437651   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2437652   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2437653   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2437654   +END;
MPRINT(EM_DIAGRAM):   END;
2437655   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437656   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2437657   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437658   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2437659   +   P_DepVar1  =     7.13056975005701 * H2x1_1  +    -9.26714696465882 * H2x1_2
2437660   +          +     9.36351037194964 * H2x1_3  +     2.76582940055979 * H2x1_4
2437661   +          +    -20.1354182036801 * H2x1_5  +     1.54726164498938 * H2x1_6 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 7.13056975005701 * H2x1_1 + -9.26714696465882 * H2x1_2 + 
9.36351037194964 * H2x1_3 + 2.76582940055979 * H2x1_4 + -20.1354182036801 * H2x1_5 + 
1.54726164498938 * H2x1_6 ;
2437662   +   P_DepVar1  =     5.03726079820845 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.03726079820845 + P_DepVar1 ;
2437663   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2437664   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2437665   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2437666   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2437667   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2437668   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2437669   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2437670   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2437671   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2437672   +END;
MPRINT(EM_DIAGRAM):   END;
2437673   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2437674   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2437675   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2437676   +END;
MPRINT(EM_DIAGRAM):   END;
2437677   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2437678   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2437679   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2437680   +END;
MPRINT(EM_DIAGRAM):   END;
2437681   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437682   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2437683   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2437684   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2437685   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2437686   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2437687   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2437688   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2437689   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2437690   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2437691   +END;
MPRINT(EM_DIAGRAM):   END;
2437692   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2437693   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2437694   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2437695   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2437696    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2437697    quit;
2437698    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2437699    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2437700    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2437701    retain ID 2 Node "AutoNeural11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural11";
2437702    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2437703    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437704    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2437705    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2437706    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 6523 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 6523 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2437707    proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural11_variableset out=_temp2(keep=NAME 
CREATOR);
2437708    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2437709    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437710    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2437711    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2437712    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2437713    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2437714    proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural11_train out=_meta(keep=NAME) noprint;
2437715    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2437716    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2437717    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2437718    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 71 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 71 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437719    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2437720    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2437721    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2437722    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 71 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 71 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437723    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2437724    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2437724  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3291 rows and 5 columns.

2437725    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2437726    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2437727    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 3291 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 3291 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437728    filename _pref
2437728  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2437729    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2437730    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2437731   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2437732   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2437733   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2437734   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2437735   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2437736   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2437737    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2437738    quit;
2437739    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2437740    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2437741    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2437742    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2437743    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2437744    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2437745    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2437746    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2437747    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437748    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2437749    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2437750    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437751    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2437752    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2437753    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2437754    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437755    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2437756    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2437757    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2437758    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2437759    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437760    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2437761    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2437762    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2437763    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437764    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2437765    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2437765  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2437766    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2437767    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2437768    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 3295 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437769    filename _pref
2437769  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2437770    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2437771    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2437772   +
2437773   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2437774   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2437774  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2437775   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2437776   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2437777   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2437778   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2437779   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2437780    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2437781    quit;
2437782    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2437783    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2437784    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2437785    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2437786    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2437787    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437788    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2437789    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2437790    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437791    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2437792    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2437793    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437794    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2437795    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2437796    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2437797    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437798    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2437799    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2437800    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2437801    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2437802    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437803    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2437804    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2437805    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2437806    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437807    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2437808    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2437808  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2437809    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2437810    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2437811    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 3334 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437812    filename _pref
2437812  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2437813    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2437814    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2437815   +
2437816   +
2437817   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2437818   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2437819   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2437820   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2437821   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2437822   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2437823   +
2437824   +
2437825   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2437826   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2437827   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2437828   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2437829   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2437830   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2437831   +
2437832   +
2437833   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2437834   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2437835   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2437836   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2437837   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2437838   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2437839   +
2437840   +
2437841   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2437842   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2437843   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2437844   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2437845   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2437846   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2437847   +
2437848   +
2437849   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2437850   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2437851   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2437852   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2437853   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2437854   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2437855   +
2437856   +
2437857   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2437858   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2437859   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2437860   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2437861   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2437862   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2437863   +
2437864   +
2437865   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2437866   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2437867   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2437868   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2437869   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2437870   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2437871   +
2437872   +
2437873   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2437874   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2437875   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2437876   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2437877   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2437878   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2437879   +if
2437880   +_FILTERNORM1 not in ( '.')
2437881   + and
2437882   +_FILTERNORM2 not in ( '.')
2437883   + and
2437884   +_FILTERNORM3 not in ( '.')
2437885   + and
2437886   +_FILTERNORM4 not in ( '.')
2437887   + and
2437888   +_FILTERNORM5 not in ( '.')
2437889   + and
2437890   +_FILTERNORM6 not in ( '.')
2437891   + and
2437892   +_FILTERNORM7 not in ( ' ')
2437893   + and
2437894   +_FILTERNORM8 not in ( ' ')
2437895   +and
2437896   +( Dt_Customer ne .)
2437897   +and ( Income ne . and (Income<=107000))
2437898   +and ( Kidhome ne .)
2437899   +and ( MntFishProducts ne .)
2437900   +and ( MntFruits ne .)
2437901   +and ( MntGoldProds ne .)
2437902   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2437903   +and ( MntSweetProducts ne .)
2437904   +and ( MntWines ne .)
2437905   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2437906   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2437907   +and ( NumStorePurchases ne .)
2437908   +and ( NumWebPurchases ne .)
2437909   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2437910   +and ( Recency ne .)
2437911   +and ( Teenhome ne .)
2437912   +and ( Year_Birth ne .)
2437913   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2437914   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2437915   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2437916   +end;
MPRINT(EM_DIAGRAM):   end;
2437917   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2437918   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2437919    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2437920    quit;
2437921    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2437922    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2437923    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2437924    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2437925    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2437926    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437927    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2437928    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2437929    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2437930    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2437931    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2437932    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437933    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2437934    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2437935    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2437936    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437937    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2437938    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2437939    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2437940    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2437941    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2437942    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2437943    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2437944    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2437945    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437946    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2437947    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2437947  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2437948    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2437949    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2437950    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 3400 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2437951    %macro varDept(fcmpdata=,id=);
2437952    %global nobs&id scoreFlag&id;
2437953    %let scoreFlag&id = 0;
2437954    %if &id=1 or ^&fcmpStart %then %do;
2437955    proc sort data=&fcmpdata out=_temp&id nodupkey;
2437956    by NAME;
2437957    where id=&id and LHS in( %let j=1;
2437958    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2437959    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2437960    "&var" %let j = %eval(&j+1);
2437961    %end;
2437962    );
2437963    run;
2437964    %let dsid = %sysfunc(open(_temp&id));
2437965    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2437966    %let dsid = %sysfunc(close(&dsid));
2437967    %if &&nobs&id %then %do;
2437968    %let scoreFlag&id = 1;
2437969    %let fcmpStart = 1;
2437970    %end;
2437971    %else %let fcmpStart = 0;
2437972    %end;
2437973    %else %do;
2437974    proc sort data=&fcmpdata out=_tempid;
2437975    where id=&id;
2437976    by LHS;
2437977    run;
2437978    %let dsid = %sysfunc(open(_tempid));
2437979    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2437980    %let dsid = %sysfunc(close(&dsid));
2437981    %if ^&&nobs&id %then %do;
2437982    proc datasets lib=work nolist;
2437983    delete _tempid;
2437984    run;
2437985    quit;
2437986    %end;
2437987    %else %do;
2437988    data _tempAll;
2437989    set %let j=%eval(&id-1);
2437990    %do x=1 %to &j;
2437991    %if &&nobs&x %then %do;
2437992    _temp&x %end;
2437993    %end;
2437994    ;
2437995    run;
2437996    proc sql;
2437997    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2437997  ! work._tempid p2 where p.name=p2.lhs;
2437998    quit;
2437999    data _temp&id;
2438000    set _temp&id;
2438001    where LHS ne '' and NAME ne '' and Node ne '';
2438002    run;
2438003    proc datasets lib=work nolist;
2438004    delete _tempAll;
2438005    run;
2438006    %let dsid = %sysfunc(open(_temp&id));
2438007    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2438008    %let dsid = %sysfunc(close(&dsid));
2438009    %if ^&&nobs&id %then %do;
2438010    proc datasets lib=work nolist;
2438011    delete _temp&id;
2438012    run;
2438013    quit;
2438014    %end;
2438015    %else %do;
2438016    %let scoreFlag&id = 1;
2438017    data _temp&id;
2438018    set _temp&id;
2438019    where LHS ne NAME and node ne '';
2438020    run;
2438021    %let dsid = %sysfunc(open(_temp&id));
2438022    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2438023    %let dsid = %sysfunc(close(&dsid));
2438024    %if ^&&nobs&id %then %do;
2438025    proc datasets lib=work nolist;
2438026    delete _temp&id;
2438027    run;
2438028    quit;
2438029    %end;
2438030    %else %do;
2438031    proc sort data=_temp&id nodupkey;
2438032    by LHS NAME;
2438033    run;
2438034    %end;
2438035    %end;
2438036    %end;
2438037    %end;
2438038    %mend varDept;
2438039    %macro optCode(outdata=fcmpdata);
2438040    %global fcmpStart;
2438041    %let fcmpStart = 0;
2438042    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2438043    %let NumNodes=9;
2438044    %do k=1 %to &NumNodes;
2438045    %vardept(fcmpdata=&outdata, id=&k);
2438046    %end;
2438047    %mend optCode;
2438048    %optcode(outData=EMWS8.Ensmbl45_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 188 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 136 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 52 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 52 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 56 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 95 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2438049    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2438050    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2438051    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2438052    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2438053    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2438054    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2438055    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2438056    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2438057    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2438058    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2438058  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2438059    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2438060    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2438061    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2438062    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2438063    filename _pref
2438063  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas";
2438064    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2438065    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural12\EMPUBLISHSCORE.sas.
2438066   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2438067   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2438068   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2438069   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2438070   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2438071   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2438072   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2438073   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2438074   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2438075   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2438076   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2438077   +LENGTH _WARN_ $4
2438078   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2438079   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2438080   +
2438081   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2438082   +
2438083   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2438084   +
2438085   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2438086   +
2438087   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2438088   +
2438089   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2438090   +
2438091   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2438092   +
2438093   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2438094   +
2438095   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2438096   +
2438097   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2438098   +
2438099   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2438100   +
2438101   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2438102   +
2438103   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2438104   +
2438105   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2438106   +
2438107   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2438108   +
2438109   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2438110   +
2438111   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2438112   +
2438113   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2438114   +
2438115   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2438116   +
2438117   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2438118   +
2438119   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2438120   +
2438121   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2438122   +
2438123   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2438124   +
2438125   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2438126   +
2438127   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2438128   +
2438129   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2438130   +
2438131   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2438132   +
2438133   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2438134   +
2438135   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2438136   +
2438137   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2438138   +
2438139   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2438140   +
2438141   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2438142   +
2438143   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2438144   +
2438145   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2438146   +
2438147   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2438148   +
2438149   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2438150   +
2438151   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2438152   +
2438153   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2438154   +
2438155   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2438156   +
2438157   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2438158   +
2438159   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2438160   +
2438161   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2438162   +
2438163   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2438164   +
2438165   +      label H1x1_6 = 'Hidden: H1x1_=6' ;
MPRINT(EM_DIAGRAM):   label H1x1_6 = 'Hidden: H1x1_=6' ;
2438166   +
2438167   +      label H1x1_7 = 'Hidden: H1x1_=7' ;
MPRINT(EM_DIAGRAM):   label H1x1_7 = 'Hidden: H1x1_=7' ;
2438168   +
2438169   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2438170   +
2438171   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2438172   +
2438173   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2438174   +
2438175   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2438176   +
2438177   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2438178   +
2438179   +      label H1x2_6 = 'Hidden: H1x2_=6' ;
MPRINT(EM_DIAGRAM):   label H1x2_6 = 'Hidden: H1x2_=6' ;
2438180   +
2438181   +      label H1x2_7 = 'Hidden: H1x2_=7' ;
MPRINT(EM_DIAGRAM):   label H1x2_7 = 'Hidden: H1x2_=7' ;
2438182   +
2438183   +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
2438184   +
2438185   +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
2438186   +
2438187   +      label H1x3_3 = 'Hidden: H1x3_=3' ;
MPRINT(EM_DIAGRAM):   label H1x3_3 = 'Hidden: H1x3_=3' ;
2438188   +
2438189   +      label H1x3_4 = 'Hidden: H1x3_=4' ;
MPRINT(EM_DIAGRAM):   label H1x3_4 = 'Hidden: H1x3_=4' ;
2438190   +
2438191   +      label H1x3_5 = 'Hidden: H1x3_=5' ;
MPRINT(EM_DIAGRAM):   label H1x3_5 = 'Hidden: H1x3_=5' ;
2438192   +
2438193   +      label H1x3_6 = 'Hidden: H1x3_=6' ;
MPRINT(EM_DIAGRAM):   label H1x3_6 = 'Hidden: H1x3_=6' ;
2438194   +
2438195   +      label H1x3_7 = 'Hidden: H1x3_=7' ;
MPRINT(EM_DIAGRAM):   label H1x3_7 = 'Hidden: H1x3_=7' ;
2438196   +
2438197   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2438198   +
2438199   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2438200   +
2438201   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2438202   +
2438203   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2438204   +
2438205   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2438206   +
2438207   +      label H2x1_6 = 'Hidden: H2x1_=6' ;
MPRINT(EM_DIAGRAM):   label H2x1_6 = 'Hidden: H2x1_=6' ;
2438208   +
2438209   +      label H2x1_7 = 'Hidden: H2x1_=7' ;
MPRINT(EM_DIAGRAM):   label H2x1_7 = 'Hidden: H2x1_=7' ;
2438210   +
2438211   +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
2438212   +
2438213   +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
2438214   +
2438215   +      label H2x2_3 = 'Hidden: H2x2_=3' ;
MPRINT(EM_DIAGRAM):   label H2x2_3 = 'Hidden: H2x2_=3' ;
2438216   +
2438217   +      label H2x2_4 = 'Hidden: H2x2_=4' ;
MPRINT(EM_DIAGRAM):   label H2x2_4 = 'Hidden: H2x2_=4' ;
2438218   +
2438219   +      label H2x2_5 = 'Hidden: H2x2_=5' ;
MPRINT(EM_DIAGRAM):   label H2x2_5 = 'Hidden: H2x2_=5' ;
2438220   +
2438221   +      label H2x2_6 = 'Hidden: H2x2_=6' ;
MPRINT(EM_DIAGRAM):   label H2x2_6 = 'Hidden: H2x2_=6' ;
2438222   +
2438223   +      label H2x2_7 = 'Hidden: H2x2_=7' ;
MPRINT(EM_DIAGRAM):   label H2x2_7 = 'Hidden: H2x2_=7' ;
2438224   +
2438225   +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
2438226   +
2438227   +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
2438228   +
2438229   +      label H3x1_3 = 'Hidden: H3x1_=3' ;
MPRINT(EM_DIAGRAM):   label H3x1_3 = 'Hidden: H3x1_=3' ;
2438230   +
2438231   +      label H3x1_4 = 'Hidden: H3x1_=4' ;
MPRINT(EM_DIAGRAM):   label H3x1_4 = 'Hidden: H3x1_=4' ;
2438232   +
2438233   +      label H3x1_5 = 'Hidden: H3x1_=5' ;
MPRINT(EM_DIAGRAM):   label H3x1_5 = 'Hidden: H3x1_=5' ;
2438234   +
2438235   +      label H3x1_6 = 'Hidden: H3x1_=6' ;
MPRINT(EM_DIAGRAM):   label H3x1_6 = 'Hidden: H3x1_=6' ;
2438236   +
2438237   +      label H3x1_7 = 'Hidden: H3x1_=7' ;
MPRINT(EM_DIAGRAM):   label H3x1_7 = 'Hidden: H3x1_=7' ;
2438238   +
2438239   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2438240   +
2438241   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2438242   +
2438243   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2438244   +
2438245   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2438246   +
2438247   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2438248   +
2438249   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2438250   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2438251   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2438252   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2438253   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2438254   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438255   +end;
MPRINT(EM_DIAGRAM):   end;
2438256   +else do;
MPRINT(EM_DIAGRAM):   else do;
2438257   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2438258   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2438259   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2438260   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2438261   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2438262   +   end;
MPRINT(EM_DIAGRAM):   end;
2438263   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2438264   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2438265   +   end;
MPRINT(EM_DIAGRAM):   end;
2438266   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2438267   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2438268   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2438269   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438270   +   end;
MPRINT(EM_DIAGRAM):   end;
2438271   +end;
MPRINT(EM_DIAGRAM):   end;
2438272   +
2438273   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2438274   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2438275   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2438276   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2438277   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2438278   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438279   +end;
MPRINT(EM_DIAGRAM):   end;
2438280   +else do;
MPRINT(EM_DIAGRAM):   else do;
2438281   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2438282   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2438283   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2438284   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2438285   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2438286   +   end;
MPRINT(EM_DIAGRAM):   end;
2438287   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2438288   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2438289   +   end;
MPRINT(EM_DIAGRAM):   end;
2438290   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2438291   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2438292   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2438293   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438294   +   end;
MPRINT(EM_DIAGRAM):   end;
2438295   +end;
MPRINT(EM_DIAGRAM):   end;
2438296   +
2438297   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2438298   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2438299   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2438300   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2438301   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2438302   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438303   +end;
MPRINT(EM_DIAGRAM):   end;
2438304   +else do;
MPRINT(EM_DIAGRAM):   else do;
2438305   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2438306   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2438307   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2438308   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2438309   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2438310   +   end;
MPRINT(EM_DIAGRAM):   end;
2438311   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2438312   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2438313   +   end;
MPRINT(EM_DIAGRAM):   end;
2438314   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2438315   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2438316   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2438317   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438318   +   end;
MPRINT(EM_DIAGRAM):   end;
2438319   +end;
MPRINT(EM_DIAGRAM):   end;
2438320   +
2438321   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2438322   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2438323   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2438324   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2438325   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2438326   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438327   +end;
MPRINT(EM_DIAGRAM):   end;
2438328   +else do;
MPRINT(EM_DIAGRAM):   else do;
2438329   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2438330   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2438331   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2438332   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2438333   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2438334   +   end;
MPRINT(EM_DIAGRAM):   end;
2438335   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2438336   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2438337   +   end;
MPRINT(EM_DIAGRAM):   end;
2438338   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2438339   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2438340   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2438341   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438342   +   end;
MPRINT(EM_DIAGRAM):   end;
2438343   +end;
MPRINT(EM_DIAGRAM):   end;
2438344   +
2438345   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2438346   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2438347   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2438348   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2438349   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2438350   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438351   +end;
MPRINT(EM_DIAGRAM):   end;
2438352   +else do;
MPRINT(EM_DIAGRAM):   else do;
2438353   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2438354   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2438355   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2438356   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2438357   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2438358   +   end;
MPRINT(EM_DIAGRAM):   end;
2438359   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2438360   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2438361   +   end;
MPRINT(EM_DIAGRAM):   end;
2438362   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2438363   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2438364   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2438365   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438366   +   end;
MPRINT(EM_DIAGRAM):   end;
2438367   +end;
MPRINT(EM_DIAGRAM):   end;
2438368   +
2438369   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2438370   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2438371   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2438372   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2438373   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2438374   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438375   +end;
MPRINT(EM_DIAGRAM):   end;
2438376   +else do;
MPRINT(EM_DIAGRAM):   else do;
2438377   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2438378   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2438379   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2438380   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2438381   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2438382   +   end;
MPRINT(EM_DIAGRAM):   end;
2438383   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2438384   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2438385   +   end;
MPRINT(EM_DIAGRAM):   end;
2438386   +   else do;
MPRINT(EM_DIAGRAM):   else do;
The SAS System

2438387   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2438388   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2438389   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438390   +   end;
MPRINT(EM_DIAGRAM):   end;
2438391   +end;
MPRINT(EM_DIAGRAM):   end;
2438392   +
2438393   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2438394   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2438395   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2438396   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2438397   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2438398   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438399   +end;
MPRINT(EM_DIAGRAM):   end;
2438400   +else do;
MPRINT(EM_DIAGRAM):   else do;
2438401   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2438402   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2438403   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2438404   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2438405   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2438406   +   end;
MPRINT(EM_DIAGRAM):   end;
2438407   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2438408   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2438409   +   end;
MPRINT(EM_DIAGRAM):   end;
2438410   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2438411   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2438412   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2438413   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438414   +   end;
MPRINT(EM_DIAGRAM):   end;
2438415   +end;
MPRINT(EM_DIAGRAM):   end;
2438416   +
2438417   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2438418   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2438419   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2438420   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2438421   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2438422   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2438423   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2438424   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2438425   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2438426   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2438427   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2438428   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2438429   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2438430   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438431   +end;
MPRINT(EM_DIAGRAM):   end;
2438432   +else do;
MPRINT(EM_DIAGRAM):   else do;
2438433   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2438434   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2438435   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2438436   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2438437   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2438438   +   end;
MPRINT(EM_DIAGRAM):   end;
2438439   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2438440   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2438441   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2438442   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2438443   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2438444   +   end;
MPRINT(EM_DIAGRAM):   end;
2438445   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2438446   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2438447   +   end;
MPRINT(EM_DIAGRAM):   end;
2438448   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2438449   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2438450   +   end;
MPRINT(EM_DIAGRAM):   end;
2438451   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2438452   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2438453   +   end;
MPRINT(EM_DIAGRAM):   end;
2438454   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2438455   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2438456   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2438457   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2438458   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2438459   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2438460   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438461   +   end;
MPRINT(EM_DIAGRAM):   end;
2438462   +end;
MPRINT(EM_DIAGRAM):   end;
2438463   +
2438464   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2438465   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2438466   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2438467   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2438468   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2438469   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2438470   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2438471   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2438472   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2438473   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2438474   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2438475   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2438476   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2438477   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2438478   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438479   +end;
MPRINT(EM_DIAGRAM):   end;
2438480   +else do;
MPRINT(EM_DIAGRAM):   else do;
2438481   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2438482   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2438483   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2438484   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2438485   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2438486   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2438487   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2438488   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2438489   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2438490   +         end;
MPRINT(EM_DIAGRAM):   end;
2438491   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2438492   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2438493   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2438494   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2438495   +            end;
MPRINT(EM_DIAGRAM):   end;
2438496   +         end;
MPRINT(EM_DIAGRAM):   end;
2438497   +      end;
MPRINT(EM_DIAGRAM):   end;
2438498   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2438499   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2438500   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2438501   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2438502   +         end;
MPRINT(EM_DIAGRAM):   end;
2438503   +      end;
MPRINT(EM_DIAGRAM):   end;
2438504   +   end;
MPRINT(EM_DIAGRAM):   end;
2438505   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2438506   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2438507   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2438508   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2438509   +      end;
MPRINT(EM_DIAGRAM):   end;
2438510   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2438511   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2438512   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2438513   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2438514   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2438515   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2438516   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2438517   +         end;
MPRINT(EM_DIAGRAM):   end;
2438518   +      end;
MPRINT(EM_DIAGRAM):   end;
2438519   +   end;
MPRINT(EM_DIAGRAM):   end;
2438520   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2438521   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2438522   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2438523   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2438524   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2438525   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2438526   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438527   +   end;
MPRINT(EM_DIAGRAM):   end;
2438528   +end;
MPRINT(EM_DIAGRAM):   end;
2438529   +
2438530   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438531   +*** Checking missing input Interval
2438532   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2438533   +
2438534   +IF NMISS(
2438535   +   AcceptedCmpTotal ,
2438536   +   Age ,
2438537   +   Frq ,
2438538   +   Income ,
2438539   +   Kidhome ,
2438540   +   Mnt ,
2438541   +   MntFishProducts ,
2438542   +   MntFruits ,
2438543   +   MntGoldProds ,
2438544   +   MntMeatProducts ,
2438545   +   MntSweetProducts ,
2438546   +   MntWines ,
2438547   +   MonthsAsCustomer ,
2438548   +   NumCatalogPurchases ,
2438549   +   NumDealsPurchases ,
2438550   +   NumDistPurchases ,
2438551   +   NumStorePurchases ,
2438552   +   NumWebPurchases ,
2438553   +   NumWebVisitsMonth ,
2438554   +   RFMstat ,
2438555   +   RMntFrq ,
2438556   +   Recency ,
2438557   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2438558   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2438559   +
2438560   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2438561   +END;
MPRINT(EM_DIAGRAM):   END;
2438562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438563   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2438564   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438565   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2438566   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2438567   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2438568   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2438569   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2438570   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2438571   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2438572   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2438573   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2438574   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2438575   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2438576   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2438577   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2438578   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2438579   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2438580   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2438581   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2438582   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2438583   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2438584   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2438585   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2438586   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2438587   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2438588   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2438589   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2438590   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2438591   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2438592   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2438593   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2438594   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2438595   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2438596   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2438597   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2438598   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2438599   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2438600   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2438601   +END;
MPRINT(EM_DIAGRAM):   END;
2438602   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2438603   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2438604   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2438605   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2438606   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2438607   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2438608   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2438609   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2438610   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2438611   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2438612   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2438613   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2438614   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2438615   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2438616   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2438617   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2438618   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2438619   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2438620   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2438621   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2438622   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2438623   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2438624   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2438625   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2438626   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2438627   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2438628   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2438629   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2438630   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2438631   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2438632   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2438633   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2438634   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2438635   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2438636   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2438637   +   ELSE S_NumCatalogPurchases
2438638   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2438639   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2438640   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2438641   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2438642   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2438643   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2438644   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2438645   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2438646   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2438647   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2438648   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2438649   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2438650   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2438651   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2438652   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2438653   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2438654   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2438655   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2438656   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2438657   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2438658   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2438659   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2438660   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2438661   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2438662   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2438663   +END;
MPRINT(EM_DIAGRAM):   END;
2438664   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438665   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2438666   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438667   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438668   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2438669   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438670   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438671   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2438672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438673   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2438674   +   H1x1_1  =    -1.22979702388871 * S_AcceptedCmpTotal
2438675   +          +    -0.43104795266139 * S_Age  +     0.86889278443529 * S_Frq
2438676   +          +    -1.60769879195759 * S_Income  +     0.50863205564081 *
2438677   +        S_Kidhome  +     0.63485396330815 * S_Mnt  +     1.54715964931126 *
2438678   +        S_MntFishProducts  +     0.75185279130369 * S_MntFruits
2438679   +          +    -0.00997586610757 * S_MntGoldProds  +    -2.37203493907401 *
2438680   +        S_MntMeatProducts  +     0.38638626403468 * S_MntSweetProducts
2438681   +          +     2.26121903773395 * S_MntWines  +    -0.59651789183067 *
2438682   +        S_MonthsAsCustomer  +    -1.52699943820196 * S_NumCatalogPurchases
2438683   +          +    -1.18466001117424 * S_NumDealsPurchases
2438684   +          +     -0.1371252133567 * S_NumDistPurchases
2438685   +          +     1.92719775731123 * S_NumStorePurchases
2438686   +          +     1.23184249192116 * S_NumWebPurchases
2438687   +          +    -1.55583843197424 * S_NumWebVisitsMonth
2438688   +          +    -0.47773207532121 * S_RFMstat  +    -0.35513231558649 *
2438689   +        S_RMntFrq  +     1.63863392145333 * S_Recency
2438690   +          +     0.67173275608308 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.22979702388871 * S_AcceptedCmpTotal + -0.43104795266139 * 
S_Age + 0.86889278443529 * S_Frq + -1.60769879195759 * S_Income + 0.50863205564081 * S_Kidhome 
+ 0.63485396330815 * S_Mnt + 1.54715964931126 * S_MntFishProducts + 0.75185279130369 * 
S_MntFruits + -0.00997586610757 * S_MntGoldProds + -2.37203493907401 * S_MntMeatProducts + 
0.38638626403468 * S_MntSweetProducts + 2.26121903773395 * S_MntWines + -0.59651789183067 * 
S_MonthsAsCustomer + -1.52699943820196 * S_NumCatalogPurchases + -1.18466001117424 * 
S_NumDealsPurchases + -0.1371252133567 * S_NumDistPurchases + 1.92719775731123 * 
S_NumStorePurchases + 1.23184249192116 * S_NumWebPurchases + -1.55583843197424 * 
S_NumWebVisitsMonth + -0.47773207532121 * S_RFMstat + -0.35513231558649 * S_RMntFrq + 
1.63863392145333 * S_Recency + 0.67173275608308 * S_Teenhome ;
2438691   +   H1x1_2  =    -0.02716121128584 * S_AcceptedCmpTotal
2438692   +          +     0.11518566588792 * S_Age  +    -0.03446898150571 * S_Frq
2438693   +          +    -0.19022324523346 * S_Income  +     1.06549395713708 *
2438694   +        S_Kidhome  +    -0.75490876357951 * S_Mnt  +    -0.25515163712879 *
2438695   +        S_MntFishProducts  +    -0.33372388118122 * S_MntFruits
2438696   +          +    -1.35673933518218 * S_MntGoldProds  +    -2.95766948640442 *
2438697   +        S_MntMeatProducts  +      0.2681792093191 * S_MntSweetProducts
2438698   +          +     0.68376629766032 * S_MntWines  +     1.19853579057819 *
2438699   +        S_MonthsAsCustomer  +    -1.27282116370987 * S_NumCatalogPurchases
2438700   +          +     0.63616523425865 * S_NumDealsPurchases
2438701   +          +     0.45460056261546 * S_NumDistPurchases
2438702   +          +    -0.61009999017225 * S_NumStorePurchases
2438703   +          +     1.85193755731081 * S_NumWebPurchases
2438704   +          +    -2.47698404964319 * S_NumWebVisitsMonth
2438705   +          +     -0.6995834208607 * S_RFMstat  +    -0.25646177956568 *
2438706   +        S_RMntFrq  +     1.07962222419254 * S_Recency
2438707   +          +     0.63257022999179 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.02716121128584 * S_AcceptedCmpTotal + 0.11518566588792 * 
S_Age + -0.03446898150571 * S_Frq + -0.19022324523346 * S_Income + 1.06549395713708 * 
S_Kidhome + -0.75490876357951 * S_Mnt + -0.25515163712879 * S_MntFishProducts + 
-0.33372388118122 * S_MntFruits + -1.35673933518218 * S_MntGoldProds + -2.95766948640442 * 
S_MntMeatProducts + 0.2681792093191 * S_MntSweetProducts + 0.68376629766032 * S_MntWines + 
1.19853579057819 * S_MonthsAsCustomer + -1.27282116370987 * S_NumCatalogPurchases + 
0.63616523425865 * S_NumDealsPurchases + 0.45460056261546 * S_NumDistPurchases + 
-0.61009999017225 * S_NumStorePurchases + 1.85193755731081 * S_NumWebPurchases + 
-2.47698404964319 * S_NumWebVisitsMonth + -0.6995834208607 * S_RFMstat + -0.25646177956568 * 
S_RMntFrq + 1.07962222419254 * S_Recency + 0.63257022999179 * S_Teenhome ;
2438708   +   H1x1_3  =     2.21390028099752 * S_AcceptedCmpTotal
2438709   +          +     0.05331556426178 * S_Age  +    -0.65514579137956 * S_Frq
2438710   +          +     0.64307304324121 * S_Income  +    -0.74572098598993 *
2438711   +        S_Kidhome  +     0.72146088814601 * S_Mnt  +    -0.35292583888573 *
2438712   +        S_MntFishProducts  +    -0.60011862194755 * S_MntFruits
2438713   +          +     0.41187011131735 * S_MntGoldProds  +     6.59297713742725 *
2438714   +        S_MntMeatProducts  +    -0.24427365286575 * S_MntSweetProducts
2438715   +          +    -2.72258930476853 * S_MntWines  +     0.14880721485001 *
2438716   +        S_MonthsAsCustomer  +     1.43710120897606 * S_NumCatalogPurchases
2438717   +          +      1.8907968580473 * S_NumDealsPurchases
2438718   +          +     0.01244124801764 * S_NumDistPurchases
2438719   +          +    -2.34409118104622 * S_NumStorePurchases
2438720   +          +    -1.80820043087435 * S_NumWebPurchases
2438721   +          +     2.40219682136039 * S_NumWebVisitsMonth
2438722   +          +     0.64272295101175 * S_RFMstat  +    -2.37583346151401 *
2438723   +        S_RMntFrq  +    -2.05893311376628 * S_Recency
2438724   +          +    -0.09539892763273 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 2.21390028099752 * S_AcceptedCmpTotal + 0.05331556426178 * 
S_Age + -0.65514579137956 * S_Frq + 0.64307304324121 * S_Income + -0.74572098598993 * 
S_Kidhome + 0.72146088814601 * S_Mnt + -0.35292583888573 * S_MntFishProducts + 
-0.60011862194755 * S_MntFruits + 0.41187011131735 * S_MntGoldProds + 6.59297713742725 * 
S_MntMeatProducts + -0.24427365286575 * S_MntSweetProducts + -2.72258930476853 * S_MntWines + 
0.14880721485001 * S_MonthsAsCustomer + 1.43710120897606 * S_NumCatalogPurchases + 
1.8907968580473 * S_NumDealsPurchases + 0.01244124801764 * S_NumDistPurchases + 
-2.34409118104622 * S_NumStorePurchases + -1.80820043087435 * S_NumWebPurchases + 
2.40219682136039 * S_NumWebVisitsMonth + 0.64272295101175 * S_RFMstat + -2.37583346151401 * 
S_RMntFrq + -2.05893311376628 * S_Recency + -0.09539892763273 * S_Teenhome ;
2438725   +   H1x1_4  =     0.39967052173479 * S_AcceptedCmpTotal
2438726   +          +    -0.07923444459672 * S_Age  +     0.62339138041893 * S_Frq
2438727   +          +     1.61789948058771 * S_Income  +     -1.4543646851274 *
2438728   +        S_Kidhome  +      0.0674362517919 * S_Mnt  +    -0.01747401903722 *
2438729   +        S_MntFishProducts  +     0.35122931976599 * S_MntFruits
2438730   +          +     0.49479569666837 * S_MntGoldProds  +     0.96598079382568 *
2438731   +        S_MntMeatProducts  +     0.00966238843619 * S_MntSweetProducts
2438732   +          +    -1.04781861730336 * S_MntWines  +    -0.60232527705864 *
2438733   +        S_MonthsAsCustomer  +     1.64183850526139 * S_NumCatalogPurchases
2438734   +          +     0.28209537604198 * S_NumDealsPurchases
2438735   +          +      0.6450277971767 * S_NumDistPurchases
2438736   +          +     0.85050092520609 * S_NumStorePurchases
2438737   +          +    -0.53920307215941 * S_NumWebPurchases
2438738   +          +     3.01106015100147 * S_NumWebVisitsMonth
2438739   +          +     0.35454480730832 * S_RFMstat  +     2.44126135489059 *
2438740   +        S_RMntFrq  +    -3.15497765450512 * S_Recency
2438741   +          +    -1.52912100940198 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.39967052173479 * S_AcceptedCmpTotal + -0.07923444459672 * 
S_Age + 0.62339138041893 * S_Frq + 1.61789948058771 * S_Income + -1.4543646851274 * S_Kidhome 
+ 0.0674362517919 * S_Mnt + -0.01747401903722 * S_MntFishProducts + 0.35122931976599 * 
S_MntFruits + 0.49479569666837 * S_MntGoldProds + 0.96598079382568 * S_MntMeatProducts + 
0.00966238843619 * S_MntSweetProducts + -1.04781861730336 * S_MntWines + -0.60232527705864 * 
S_MonthsAsCustomer + 1.64183850526139 * S_NumCatalogPurchases + 0.28209537604198 * 
S_NumDealsPurchases + 0.6450277971767 * S_NumDistPurchases + 0.85050092520609 * 
S_NumStorePurchases + -0.53920307215941 * S_NumWebPurchases + 3.01106015100147 * 
S_NumWebVisitsMonth + 0.35454480730832 * S_RFMstat + 2.44126135489059 * S_RMntFrq + 
-3.15497765450512 * S_Recency + -1.52912100940198 * S_Teenhome ;
2438742   +   H1x1_5  =    -1.36246601888598 * S_AcceptedCmpTotal
2438743   +          +     0.18494970680372 * S_Age  +    -0.48239316237012 * S_Frq
2438744   +          +    -0.07754710635082 * S_Income  +    -1.12988783865284 *
2438745   +        S_Kidhome  +    -0.99389820487435 * S_Mnt  +     0.97730928948588 *
2438746   +        S_MntFishProducts  +     0.22400827772102 * S_MntFruits
2438747   +          +     0.74486626223136 * S_MntGoldProds  +    -5.09299340099429 *
2438748   +        S_MntMeatProducts  +     -0.9293665551505 * S_MntSweetProducts
2438749   +          +     2.05621056740754 * S_MntWines  +     0.13751326047818 *
2438750   +        S_MonthsAsCustomer  +    -0.78748700520409 * S_NumCatalogPurchases
2438751   +          +    -0.36642526324451 * S_NumDealsPurchases
2438752   +          +     -0.6091014843932 * S_NumDistPurchases
2438753   +          +    -0.21154626182088 * S_NumStorePurchases
2438754   +          +    -0.10361347071364 * S_NumWebPurchases
2438755   +          +     1.36358817627784 * S_NumWebVisitsMonth
2438756   +          +    -1.12999319551924 * S_RFMstat  +    -0.19491430019245 *
2438757   +        S_RMntFrq  +    -1.04649498091784 * S_Recency
2438758   +          +     0.17452738843544 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.36246601888598 * S_AcceptedCmpTotal + 0.18494970680372 * 
S_Age + -0.48239316237012 * S_Frq + -0.07754710635082 * S_Income + -1.12988783865284 * 
S_Kidhome + -0.99389820487435 * S_Mnt + 0.97730928948588 * S_MntFishProducts + 
0.22400827772102 * S_MntFruits + 0.74486626223136 * S_MntGoldProds + -5.09299340099429 * 
S_MntMeatProducts + -0.9293665551505 * S_MntSweetProducts + 2.05621056740754 * S_MntWines + 
0.13751326047818 * S_MonthsAsCustomer + -0.78748700520409 * S_NumCatalogPurchases + 
-0.36642526324451 * S_NumDealsPurchases + -0.6091014843932 * S_NumDistPurchases + 
-0.21154626182088 * S_NumStorePurchases + -0.10361347071364 * S_NumWebPurchases + 
1.36358817627784 * S_NumWebVisitsMonth + -1.12999319551924 * S_RFMstat + -0.19491430019245 * 
S_RMntFrq + -1.04649498091784 * S_Recency + 0.17452738843544 * S_Teenhome ;
2438759   +   H1x1_6  =    -0.61844696407508 * S_AcceptedCmpTotal
2438760   +          +    -0.13181297602063 * S_Age  +        0.68456903056 * S_Frq
2438761   +          +    -0.34991774042788 * S_Income  +     1.46159955002315 *
2438762   +        S_Kidhome  +     0.21200077233877 * S_Mnt  +    -1.25754094670769 *
2438763   +        S_MntFishProducts  +    -0.09204195787339 * S_MntFruits
2438764   +          +     0.30860507694466 * S_MntGoldProds  +     2.47956356836605 *
2438765   +        S_MntMeatProducts  +     0.40882561010395 * S_MntSweetProducts
2438766   +          +    -0.31319819026957 * S_MntWines  +    -0.35678594664106 *
2438767   +        S_MonthsAsCustomer  +     0.01690494248971 * S_NumCatalogPurchases
2438768   +          +    -0.14868505161718 * S_NumDealsPurchases
2438769   +          +    -0.08395384711805 * S_NumDistPurchases
2438770   +          +     0.60525238179245 * S_NumStorePurchases
2438771   +          +     0.04555100214276 * S_NumWebPurchases
2438772   +          +    -2.31888436784305 * S_NumWebVisitsMonth
2438773   +          +     0.04533094777373 * S_RFMstat  +     1.45047684433196 *
2438774   +        S_RMntFrq  +     3.02439474266744 * S_Recency
2438775   +          +     1.00458920115313 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_6 = -0.61844696407508 * S_AcceptedCmpTotal + -0.13181297602063 * 
S_Age + 0.68456903056 * S_Frq + -0.34991774042788 * S_Income + 1.46159955002315 * S_Kidhome + 
0.21200077233877 * S_Mnt + -1.25754094670769 * S_MntFishProducts + -0.09204195787339 * 
S_MntFruits + 0.30860507694466 * S_MntGoldProds + 2.47956356836605 * S_MntMeatProducts + 
0.40882561010395 * S_MntSweetProducts + -0.31319819026957 * S_MntWines + -0.35678594664106 * 
S_MonthsAsCustomer + 0.01690494248971 * S_NumCatalogPurchases + -0.14868505161718 * 
S_NumDealsPurchases + -0.08395384711805 * S_NumDistPurchases + 0.60525238179245 * 
S_NumStorePurchases + 0.04555100214276 * S_NumWebPurchases + -2.31888436784305 * 
S_NumWebVisitsMonth + 0.04533094777373 * S_RFMstat + 1.45047684433196 * S_RMntFrq + 
3.02439474266744 * S_Recency + 1.00458920115313 * S_Teenhome ;
2438776   +   H1x1_1  = H1x1_1  +     1.44647846478949 * AcceptedCmp10
2438777   +          +     0.96385529143297 * AcceptedCmp20  +     0.80013060089317 *
2438778   +        AcceptedCmp30  +     1.84770198014032 * AcceptedCmp40
2438779   +          +     0.80401446607714 * AcceptedCmp50  +     0.54049538978821 *
2438780   +        Complain0  +     0.10087163212641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 1.44647846478949 * AcceptedCmp10 + 0.96385529143297 * 
AcceptedCmp20 + 0.80013060089317 * AcceptedCmp30 + 1.84770198014032 * AcceptedCmp40 + 
0.80401446607714 * AcceptedCmp50 + 0.54049538978821 * Complain0 + 0.10087163212641 * 
HigherEducationBinary0 ;
2438781   +   H1x1_2  = H1x1_2  +    -1.68777270512099 * AcceptedCmp10
2438782   +          +     0.54885195015877 * AcceptedCmp20  +    -0.90402264974928 *
2438783   +        AcceptedCmp30  +    -0.42358682267334 * AcceptedCmp40
2438784   +          +     0.87016183962004 * AcceptedCmp50  +     0.42082407002478 *
2438785   +        Complain0  +    -0.37999025234308 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.68777270512099 * AcceptedCmp10 + 0.54885195015877 * 
AcceptedCmp20 + -0.90402264974928 * AcceptedCmp30 + -0.42358682267334 * AcceptedCmp40 + 
0.87016183962004 * AcceptedCmp50 + 0.42082407002478 * Complain0 + -0.37999025234308 * 
HigherEducationBinary0 ;
2438786   +   H1x1_3  = H1x1_3  +    -0.40437631159129 * AcceptedCmp10
2438787   +          +      0.0972205308159 * AcceptedCmp20  +     0.81983130325412 *
2438788   +        AcceptedCmp30  +     0.11521626741585 * AcceptedCmp40
2438789   +          +    -0.67384158900854 * AcceptedCmp50  +    -0.08888648111628 *
2438790   +        Complain0  +    -0.12489144574555 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.40437631159129 * AcceptedCmp10 + 0.0972205308159 * 
AcceptedCmp20 + 0.81983130325412 * AcceptedCmp30 + 0.11521626741585 * AcceptedCmp40 + 
-0.67384158900854 * AcceptedCmp50 + -0.08888648111628 * Complain0 + -0.12489144574555 * 
HigherEducationBinary0 ;
2438791   +   H1x1_4  = H1x1_4  +    -0.11861456940351 * AcceptedCmp10
2438792   +          +    -0.84401831403342 * AcceptedCmp20  +    -0.99900514370547 *
2438793   +        AcceptedCmp30  +     0.03311277744337 * AcceptedCmp40
2438794   +          +    -0.89369182681709 * AcceptedCmp50  +    -0.46321923883787 *
2438795   +        Complain0  +     0.73698890563732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.11861456940351 * AcceptedCmp10 + -0.84401831403342 
* AcceptedCmp20 + -0.99900514370547 * AcceptedCmp30 + 0.03311277744337 * AcceptedCmp40 + 
-0.89369182681709 * AcceptedCmp50 + -0.46321923883787 * Complain0 + 0.73698890563732 * 
HigherEducationBinary0 ;
2438796   +   H1x1_5  = H1x1_5  +     1.36740346673871 * AcceptedCmp10
2438797   +          +    -0.09307995102939 * AcceptedCmp20  +    -0.99727975675265 *
2438798   +        AcceptedCmp30  +    -1.64006559974507 * AcceptedCmp40
2438799   +          +    -0.12164496778613 * AcceptedCmp50  +    -0.20852398947217 *
2438800   +        Complain0  +    -0.12903157145588 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 1.36740346673871 * AcceptedCmp10 + -0.09307995102939 * 
AcceptedCmp20 + -0.99727975675265 * AcceptedCmp30 + -1.64006559974507 * AcceptedCmp40 + 
-0.12164496778613 * AcceptedCmp50 + -0.20852398947217 * Complain0 + -0.12903157145588 * 
HigherEducationBinary0 ;
2438801   +   H1x1_6  = H1x1_6  +    -0.18375336439178 * AcceptedCmp10
2438802   +          +    -0.61320886099742 * AcceptedCmp20  +     1.46384578641555 *
2438803   +        AcceptedCmp30  +     1.07211075480456 * AcceptedCmp40
2438804   +          +      0.1814894663676 * AcceptedCmp50  +     0.61050756961671 *
2438805   +        Complain0  +     0.18598381049052 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + -0.18375336439178 * AcceptedCmp10 + -0.61320886099742 
* AcceptedCmp20 + 1.46384578641555 * AcceptedCmp30 + 1.07211075480456 * AcceptedCmp40 + 
0.1814894663676 * AcceptedCmp50 + 0.61050756961671 * Complain0 + 0.18598381049052 * 
HigherEducationBinary0 ;
2438806   +   H1x1_1  = H1x1_1  +    -0.85219855086228 * Education2n_Cycle
2438807   +          +     0.72409647993559 * EducationBasic  +    -1.69896726220399 *
2438808   +        EducationGraduation  +     0.96924197858068 * EducationMaster
2438809   +          +     -0.7180104021039 * Marital_StatusDivorced
2438810   +          +      0.5957373170744 * Marital_StatusMarried
2438811   +          +    -0.86183942803988 * Marital_StatusSingle
2438812   +          +     0.92994743994713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.85219855086228 * Education2n_Cycle + 
0.72409647993559 * EducationBasic + -1.69896726220399 * EducationGraduation + 0.96924197858068 
* EducationMaster + -0.7180104021039 * Marital_StatusDivorced + 0.5957373170744 * 
Marital_StatusMarried + -0.86183942803988 * Marital_StatusSingle + 0.92994743994713 * 
Marital_StatusTogether ;
2438813   +   H1x1_2  = H1x1_2  +    -0.29863788783823 * Education2n_Cycle
2438814   +          +    -0.03492398661463 * EducationBasic  +     1.96491183828121 *
2438815   +        EducationGraduation  +    -1.23733321574678 * EducationMaster
2438816   +          +     0.84772700244021 * Marital_StatusDivorced
2438817   +          +    -0.37049970188511 * Marital_StatusMarried
2438818   +          +     1.54291641732063 * Marital_StatusSingle
2438819   +          +      0.2036514883055 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.29863788783823 * Education2n_Cycle + 
-0.03492398661463 * EducationBasic + 1.96491183828121 * EducationGraduation + 
-1.23733321574678 * EducationMaster + 0.84772700244021 * Marital_StatusDivorced + 
-0.37049970188511 * Marital_StatusMarried + 1.54291641732063 * Marital_StatusSingle + 
0.2036514883055 * Marital_StatusTogether ;
2438820   +   H1x1_3  = H1x1_3  +     0.21600870420184 * Education2n_Cycle
2438821   +          +    -0.41247138958506 * EducationBasic  +    -0.04710356650237 *
2438822   +        EducationGraduation  +     0.02093123351397 * EducationMaster
2438823   +          +     0.73222548496385 * Marital_StatusDivorced
2438824   +          +    -0.50102202656102 * Marital_StatusMarried
2438825   +          +    -0.07207130428422 * Marital_StatusSingle
2438826   +          +     0.17349558515949 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.21600870420184 * Education2n_Cycle + 
-0.41247138958506 * EducationBasic + -0.04710356650237 * EducationGraduation + 
0.02093123351397 * EducationMaster + 0.73222548496385 * Marital_StatusDivorced + 
-0.50102202656102 * Marital_StatusMarried + -0.07207130428422 * Marital_StatusSingle + 
0.17349558515949 * Marital_StatusTogether ;
2438827   +   H1x1_4  = H1x1_4  +    -0.26695942691152 * Education2n_Cycle
2438828   +          +     0.08346486410021 * EducationBasic  +    -1.19880044804188 *
2438829   +        EducationGraduation  +     0.65366032471107 * EducationMaster
2438830   +          +     0.25894719464799 * Marital_StatusDivorced
2438831   +          +    -1.95576501275834 * Marital_StatusMarried
2438832   +          +     2.65422185276746 * Marital_StatusSingle
2438833   +          +    -3.75373924980398 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.26695942691152 * Education2n_Cycle + 
0.08346486410021 * EducationBasic + -1.19880044804188 * EducationGraduation + 0.65366032471107 
* EducationMaster + 0.25894719464799 * Marital_StatusDivorced + -1.95576501275834 * 
Marital_StatusMarried + 2.65422185276746 * Marital_StatusSingle + -3.75373924980398 * 
Marital_StatusTogether ;
2438834   +   H1x1_5  = H1x1_5  +     0.17586479935526 * Education2n_Cycle
2438835   +          +    -0.60926722758624 * EducationBasic  +    -0.09613529218096 *
2438836   +        EducationGraduation  +    -0.28683119112285 * EducationMaster
2438837   +          +     0.60936191204707 * Marital_StatusDivorced
2438838   +          +    -0.52190111190458 * Marital_StatusMarried
2438839   +          +    -0.60982305233136 * Marital_StatusSingle
2438840   +          +     0.44659686388318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + 0.17586479935526 * Education2n_Cycle + 
-0.60926722758624 * EducationBasic + -0.09613529218096 * EducationGraduation + 
-0.28683119112285 * EducationMaster + 0.60936191204707 * Marital_StatusDivorced + 
-0.52190111190458 * Marital_StatusMarried + -0.60982305233136 * Marital_StatusSingle + 
0.44659686388318 * Marital_StatusTogether ;
2438841   +   H1x1_6  = H1x1_6  +     0.16067502362228 * Education2n_Cycle
2438842   +          +     0.18937855703296 * EducationBasic  +     0.06386817095607 *
2438843   +        EducationGraduation  +     0.51538853297606 * EducationMaster
2438844   +          +    -1.44614502228294 * Marital_StatusDivorced
2438845   +          +      2.9001493892928 * Marital_StatusMarried
2438846   +          +    -2.60467399972513 * Marital_StatusSingle
2438847   +          +     2.31815156650258 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 + 0.16067502362228 * Education2n_Cycle + 
0.18937855703296 * EducationBasic + 0.06386817095607 * EducationGraduation + 0.51538853297606 
* EducationMaster + -1.44614502228294 * Marital_StatusDivorced + 2.9001493892928 * 
Marital_StatusMarried + -2.60467399972513 * Marital_StatusSingle + 2.31815156650258 * 
Marital_StatusTogether ;
2438848   +   H1x1_1  =     2.01245018737649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 2.01245018737649 + H1x1_1 ;
2438849   +   H1x1_2  =    -0.13724223857423 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.13724223857423 + H1x1_2 ;
2438850   +   H1x1_3  =     0.82934879006547 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.82934879006547 + H1x1_3 ;
2438851   +   H1x1_4  =    -0.21545557935699 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -0.21545557935699 + H1x1_4 ;
2438852   +   H1x1_5  =     0.44835497486542 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = 0.44835497486542 + H1x1_5 ;
2438853   +   H1x1_6  =     0.11792774897936 + H1x1_6 ;
MPRINT(EM_DIAGRAM):   H1x1_6 = 0.11792774897936 + H1x1_6 ;
2438854   +   H1x1_7  = 0;
MPRINT(EM_DIAGRAM):   H1x1_7 = 0;
2438855   +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , H1x1_7
2438856   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 , H1x1_5 , H1x1_6 , 
H1x1_7 );
2438857   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2438858   +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
2438859   +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
2438860   +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
2438861   +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
2438862   +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
2438863   +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
2438864   +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
2438865   +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
2438866   +   H1x1_5  = EXP(H1x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_5 = EXP(H1x1_5 - _MAX_);
2438867   +   _SUM_ = _SUM_ + H1x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_5 ;
2438868   +   H1x1_6  = EXP(H1x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_6 = EXP(H1x1_6 - _MAX_);
2438869   +   _SUM_ = _SUM_ + H1x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_6 ;
2438870   +   H1x1_7  = EXP(H1x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_7 = EXP(H1x1_7 - _MAX_);
2438871   +   _SUM_ = _SUM_ + H1x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_7 ;
2438872   +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
2438873   +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
2438874   +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
2438875   +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
2438876   +   H1x1_5  = H1x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 / _SUM_;
2438877   +   H1x1_6  = H1x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_6 = H1x1_6 / _SUM_;
2438878   +   H1x1_7  = H1x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_7 = H1x1_7 / _SUM_;
2438879   +END;
MPRINT(EM_DIAGRAM):   END;
2438880   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2438881   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2438882   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2438883   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2438884   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2438885   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2438886   +   H1x1_6  = .;
MPRINT(EM_DIAGRAM):   H1x1_6 = .;
2438887   +   H1x1_7  = .;
MPRINT(EM_DIAGRAM):   H1x1_7 = .;
2438888   +END;
MPRINT(EM_DIAGRAM):   END;
2438889   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438890   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2438891   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2438892   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2438893   +   H1x2_1  =    -0.51245281628488 * S_AcceptedCmpTotal
2438894   +          +     0.29586551487242 * S_Age  +     1.34531593814589 * S_Frq
2438895   +          +     1.40753230099536 * S_Income  +    -1.01979935776675 *
2438896   +        S_Kidhome  +      1.0655533203194 * S_Mnt  +     0.74171867275429 *
2438897   +        S_MntFishProducts  +    -0.77881282886264 * S_MntFruits
2438898   +          +    -0.58546798489474 * S_MntGoldProds  +     0.93410444049208 *
2438899   +        S_MntMeatProducts  +     1.10536507959221 * S_MntSweetProducts
2438900   +          +     2.08723894920384 * S_MntWines  +    -0.64437193401661 *
2438901   +        S_MonthsAsCustomer  +     1.49880648713252 * S_NumCatalogPurchases
2438902   +          +    -0.46483717253931 * S_NumDealsPurchases
2438903   +          +    -0.53329008421157 * S_NumDistPurchases
2438904   +          +      0.2490774300193 * S_NumStorePurchases
2438905   +          +    -0.82755150673885 * S_NumWebPurchases
2438906   +          +     0.04007223822389 * S_NumWebVisitsMonth
2438907   +          +    -0.21044923749124 * S_RFMstat  +     0.27791352512351 *
2438908   +        S_RMntFrq  +     0.43434806411249 * S_Recency
2438909   +          +    -1.25974784572932 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.51245281628488 * S_AcceptedCmpTotal + 0.29586551487242 * 
S_Age + 1.34531593814589 * S_Frq + 1.40753230099536 * S_Income + -1.01979935776675 * S_Kidhome 
+ 1.0655533203194 * S_Mnt + 0.74171867275429 * S_MntFishProducts + -0.77881282886264 * 
S_MntFruits + -0.58546798489474 * S_MntGoldProds + 0.93410444049208 * S_MntMeatProducts + 
1.10536507959221 * S_MntSweetProducts + 2.08723894920384 * S_MntWines + -0.64437193401661 * 
S_MonthsAsCustomer + 1.49880648713252 * S_NumCatalogPurchases + -0.46483717253931 * 
S_NumDealsPurchases + -0.53329008421157 * S_NumDistPurchases + 0.2490774300193 * 
S_NumStorePurchases + -0.82755150673885 * S_NumWebPurchases + 0.04007223822389 * 
S_NumWebVisitsMonth + -0.21044923749124 * S_RFMstat + 0.27791352512351 * S_RMntFrq + 
0.43434806411249 * S_Recency + -1.25974784572932 * S_Teenhome ;
2438910   +   H1x2_2  =     0.30117516029562 * S_AcceptedCmpTotal
2438911   +          +     0.16042149118905 * S_Age  +    -2.59350323749407 * S_Frq
2438912   +          +    -0.29940842910223 * S_Income  +    -0.09168883019219 *
2438913   +        S_Kidhome  +    -0.39758312303322 * S_Mnt  +     -0.4138816285287 *
2438914   +        S_MntFishProducts  +        0.18555623351 * S_MntFruits
2438915   +          +    -0.28024159914959 * S_MntGoldProds  +     1.08084875123781 *
2438916   +        S_MntMeatProducts  +     0.29032828446632 * S_MntSweetProducts
2438917   +          +     0.47556687393839 * S_MntWines  +    -0.89795441591329 *
2438918   +        S_MonthsAsCustomer  +    -0.47081176716106 * S_NumCatalogPurchases
2438919   +          +     0.75855101382458 * S_NumDealsPurchases
2438920   +          +     1.61754951768262 * S_NumDistPurchases
2438921   +          +    -0.48146714929729 * S_NumStorePurchases
2438922   +          +    -0.76460728035552 * S_NumWebPurchases
2438923   +          +    -0.71146787112442 * S_NumWebVisitsMonth
2438924   +          +     0.42381866124588 * S_RFMstat  +     -0.3894818400451 *
2438925   +        S_RMntFrq  +    -0.01528916550509 * S_Recency
2438926   +          +     0.38823136254948 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.30117516029562 * S_AcceptedCmpTotal + 0.16042149118905 * 
S_Age + -2.59350323749407 * S_Frq + -0.29940842910223 * S_Income + -0.09168883019219 * 
S_Kidhome + -0.39758312303322 * S_Mnt + -0.4138816285287 * S_MntFishProducts + 0.18555623351 * 
S_MntFruits + -0.28024159914959 * S_MntGoldProds + 1.08084875123781 * S_MntMeatProducts + 
0.29032828446632 * S_MntSweetProducts + 0.47556687393839 * S_MntWines + -0.89795441591329 * 
S_MonthsAsCustomer + -0.47081176716106 * S_NumCatalogPurchases + 0.75855101382458 * 
S_NumDealsPurchases + 1.61754951768262 * S_NumDistPurchases + -0.48146714929729 * 
S_NumStorePurchases + -0.76460728035552 * S_NumWebPurchases + -0.71146787112442 * 
S_NumWebVisitsMonth + 0.42381866124588 * S_RFMstat + -0.3894818400451 * S_RMntFrq + 
-0.01528916550509 * S_Recency + 0.38823136254948 * S_Teenhome ;
2438927   +   H1x2_3  =    -1.28283712556699 * S_AcceptedCmpTotal
2438928   +          +    -0.62214066983867 * S_Age  +      0.0675653313166 * S_Frq
2438929   +          +     0.77098495841918 * S_Income  +    -1.36225954388119 *
2438930   +        S_Kidhome  +      0.0552831076081 * S_Mnt  +    -0.21387512812296 *
2438931   +        S_MntFishProducts  +    -1.14715718471691 * S_MntFruits
2438932   +          +    -1.15507787000433 * S_MntGoldProds  +     0.87571107504211 *
2438933   +        S_MntMeatProducts  +     0.28274178198443 * S_MntSweetProducts
2438934   +          +     0.23070204507311 * S_MntWines  +    -1.88342889522874 *
2438935   +        S_MonthsAsCustomer  +    -0.19127945486903 * S_NumCatalogPurchases
2438936   +          +     0.75255317965748 * S_NumDealsPurchases
2438937   +          +     1.34900588315783 * S_NumDistPurchases
2438938   +          +    -0.17717469778048 * S_NumStorePurchases
2438939   +          +    -0.01560551546553 * S_NumWebPurchases
2438940   +          +     1.24315988674343 * S_NumWebVisitsMonth
2438941   +          +     2.23854910235018 * S_RFMstat  +     0.55516131558838 *
2438942   +        S_RMntFrq  +    -2.01558015490584 * S_Recency
2438943   +          +     1.34178435587014 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -1.28283712556699 * S_AcceptedCmpTotal + -0.62214066983867 * 
S_Age + 0.0675653313166 * S_Frq + 0.77098495841918 * S_Income + -1.36225954388119 * S_Kidhome 
+ 0.0552831076081 * S_Mnt + -0.21387512812296 * S_MntFishProducts + -1.14715718471691 * 
S_MntFruits + -1.15507787000433 * S_MntGoldProds + 0.87571107504211 * S_MntMeatProducts + 
0.28274178198443 * S_MntSweetProducts + 0.23070204507311 * S_MntWines + -1.88342889522874 * 
S_MonthsAsCustomer + -0.19127945486903 * S_NumCatalogPurchases + 0.75255317965748 * 
S_NumDealsPurchases + 1.34900588315783 * S_NumDistPurchases + -0.17717469778048 * 
S_NumStorePurchases + -0.01560551546553 * S_NumWebPurchases + 1.24315988674343 * 
S_NumWebVisitsMonth + 2.23854910235018 * S_RFMstat + 0.55516131558838 * S_RMntFrq + 
-2.01558015490584 * S_Recency + 1.34178435587014 * S_Teenhome ;
2438944   +   H1x2_4  =     1.35706411211536 * S_AcceptedCmpTotal
2438945   +          +    -0.73374940975123 * S_Age  +     2.10445428870671 * S_Frq
2438946   +          +    -1.60133766439775 * S_Income  +     0.02861907512789 *
2438947   +        S_Kidhome  +    -1.61837693250001 * S_Mnt  +       0.209751533263 *
2438948   +        S_MntFishProducts  +     1.82411973889656 * S_MntFruits
2438949   +          +     1.12172774431408 * S_MntGoldProds  +     1.09610288046573 *
2438950   +        S_MntMeatProducts  +    -0.86671874280949 * S_MntSweetProducts
2438951   +          +    -0.11602638812541 * S_MntWines  +    -0.30074020863435 *
2438952   +        S_MonthsAsCustomer  +     0.46044258716085 * S_NumCatalogPurchases
2438953   +          +    -1.71127148178768 * S_NumDealsPurchases
2438954   +          +    -1.77527355221308 * S_NumDistPurchases
2438955   +          +    -1.40009594349363 * S_NumStorePurchases
2438956   +          +    -0.46471012062697 * S_NumWebPurchases
2438957   +          +     0.04619891083228 * S_NumWebVisitsMonth
2438958   +          +     0.34715614649891 * S_RFMstat  +    -0.74983051176564 *
2438959   +        S_RMntFrq  +     0.84880186653433 * S_Recency
2438960   +          +     0.20218341857265 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.35706411211536 * S_AcceptedCmpTotal + -0.73374940975123 * 
S_Age + 2.10445428870671 * S_Frq + -1.60133766439775 * S_Income + 0.02861907512789 * S_Kidhome 
+ -1.61837693250001 * S_Mnt + 0.209751533263 * S_MntFishProducts + 1.82411973889656 * 
S_MntFruits + 1.12172774431408 * S_MntGoldProds + 1.09610288046573 * S_MntMeatProducts + 
-0.86671874280949 * S_MntSweetProducts + -0.11602638812541 * S_MntWines + -0.30074020863435 * 
S_MonthsAsCustomer + 0.46044258716085 * S_NumCatalogPurchases + -1.71127148178768 * 
S_NumDealsPurchases + -1.77527355221308 * S_NumDistPurchases + -1.40009594349363 * 
S_NumStorePurchases + -0.46471012062697 * S_NumWebPurchases + 0.04619891083228 * 
S_NumWebVisitsMonth + 0.34715614649891 * S_RFMstat + -0.74983051176564 * S_RMntFrq + 
0.84880186653433 * S_Recency + 0.20218341857265 * S_Teenhome ;
2438961   +   H1x2_5  =     1.79452363233333 * S_AcceptedCmpTotal
2438962   +          +     1.70826835028511 * S_Age  +     0.08241717907016 * S_Frq
2438963   +          +    -1.15275600314196 * S_Income  +     0.87736096074094 *
2438964   +        S_Kidhome  +     0.90821427722502 * S_Mnt  +    -0.84055732556964 *
2438965   +        S_MntFishProducts  +    -0.74245639083939 * S_MntFruits
2438966   +          +     0.00204325095854 * S_MntGoldProds  +     0.37597102500134 *
2438967   +        S_MntMeatProducts  +     0.28586076288454 * S_MntSweetProducts
2438968   +          +    -1.38194310174269 * S_MntWines  +     0.10286181254259 *
2438969   +        S_MonthsAsCustomer  +    -0.82469018226034 * S_NumCatalogPurchases
2438970   +          +    -0.22204470395056 * S_NumDealsPurchases
2438971   +          +    -1.74490476011984 * S_NumDistPurchases
2438972   +          +     1.93538420108324 * S_NumStorePurchases
2438973   +          +     1.04892631742152 * S_NumWebPurchases
2438974   +          +     1.50717841566047 * S_NumWebVisitsMonth
2438975   +          +     0.61249250909375 * S_RFMstat  +    -0.54764212165911 *
2438976   +        S_RMntFrq  +      1.9918829185386 * S_Recency
2438977   +          +     0.64908540313947 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.79452363233333 * S_AcceptedCmpTotal + 1.70826835028511 * 
S_Age + 0.08241717907016 * S_Frq + -1.15275600314196 * S_Income + 0.87736096074094 * S_Kidhome 
+ 0.90821427722502 * S_Mnt + -0.84055732556964 * S_MntFishProducts + -0.74245639083939 * 
S_MntFruits + 0.00204325095854 * S_MntGoldProds + 0.37597102500134 * S_MntMeatProducts + 
0.28586076288454 * S_MntSweetProducts + -1.38194310174269 * S_MntWines + 0.10286181254259 * 
S_MonthsAsCustomer + -0.82469018226034 * S_NumCatalogPurchases + -0.22204470395056 * 
S_NumDealsPurchases + -1.74490476011984 * S_NumDistPurchases + 1.93538420108324 * 
S_NumStorePurchases + 1.04892631742152 * S_NumWebPurchases + 1.50717841566047 * 
S_NumWebVisitsMonth + 0.61249250909375 * S_RFMstat + -0.54764212165911 * S_RMntFrq + 
1.9918829185386 * S_Recency + 0.64908540313947 * S_Teenhome ;
2438978   +   H1x2_6  =     1.38705263280369 * S_AcceptedCmpTotal
2438979   +          +    -0.70531523704191 * S_Age  +     0.59125500807205 * S_Frq
2438980   +          +     0.89549490842249 * S_Income  +     1.07240562425698 *
2438981   +        S_Kidhome  +    -0.25050185694258 * S_Mnt  +    -0.77552207934024 *
2438982   +        S_MntFishProducts  +     0.18087757744856 * S_MntFruits
2438983   +          +    -1.37618517481144 * S_MntGoldProds  +      0.6557488228355 *
2438984   +        S_MntMeatProducts  +    -1.40834207395949 * S_MntSweetProducts
2438985   +          +    -0.76196689750388 * S_MntWines  +     0.85144735274506 *
2438986   +        S_MonthsAsCustomer  +     0.66349954778428 * S_NumCatalogPurchases
2438987   +          +    -0.94690420785776 * S_NumDealsPurchases
2438988   +          +     1.87932706342204 * S_NumDistPurchases
2438989   +          +     0.31232717416487 * S_NumStorePurchases
2438990   +          +     1.51889492693355 * S_NumWebPurchases
2438991   +          +     0.04376853689795 * S_NumWebVisitsMonth
2438992   +          +    -2.53979043374029 * S_RFMstat  +     1.33915580029494 *
2438993   +        S_RMntFrq  +    -1.21983510008829 * S_Recency
2438994   +          +     0.36122230024433 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.38705263280369 * S_AcceptedCmpTotal + -0.70531523704191 * 
S_Age + 0.59125500807205 * S_Frq + 0.89549490842249 * S_Income + 1.07240562425698 * S_Kidhome 
+ -0.25050185694258 * S_Mnt + -0.77552207934024 * S_MntFishProducts + 0.18087757744856 * 
S_MntFruits + -1.37618517481144 * S_MntGoldProds + 0.6557488228355 * S_MntMeatProducts + 
-1.40834207395949 * S_MntSweetProducts + -0.76196689750388 * S_MntWines + 0.85144735274506 * 
S_MonthsAsCustomer + 0.66349954778428 * S_NumCatalogPurchases + -0.94690420785776 * 
S_NumDealsPurchases + 1.87932706342204 * S_NumDistPurchases + 0.31232717416487 * 
S_NumStorePurchases + 1.51889492693355 * S_NumWebPurchases + 0.04376853689795 * 
S_NumWebVisitsMonth + -2.53979043374029 * S_RFMstat + 1.33915580029494 * S_RMntFrq + 
-1.21983510008829 * S_Recency + 0.36122230024433 * S_Teenhome ;
2438995   +   H1x2_1  = H1x2_1  +     1.89852147155601 * AcceptedCmp10
2438996   +          +     0.03501265764204 * AcceptedCmp20  +    -0.45070218241239 *
2438997   +        AcceptedCmp30  +    -1.27257966336041 * AcceptedCmp40
2438998   +          +     0.86175125820023 * AcceptedCmp50  +     1.42864024461581 *
2438999   +        Complain0  +     0.34417315915901 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + 1.89852147155601 * AcceptedCmp10 + 0.03501265764204 * 
AcceptedCmp20 + -0.45070218241239 * AcceptedCmp30 + -1.27257966336041 * AcceptedCmp40 + 
0.86175125820023 * AcceptedCmp50 + 1.42864024461581 * Complain0 + 0.34417315915901 * 
HigherEducationBinary0 ;
2439000   +   H1x2_2  = H1x2_2  +     0.41672679168374 * AcceptedCmp10
2439001   +          +     0.10769233314512 * AcceptedCmp20  +     0.42374549876289 *
2439002   +        AcceptedCmp30  +     0.65697535989046 * AcceptedCmp40
2439003   +          +     1.49817201460948 * AcceptedCmp50  +     0.46039378640249 *
2439004   +        Complain0  +     1.34709525059573 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.41672679168374 * AcceptedCmp10 + 0.10769233314512 * 
AcceptedCmp20 + 0.42374549876289 * AcceptedCmp30 + 0.65697535989046 * AcceptedCmp40 + 
1.49817201460948 * AcceptedCmp50 + 0.46039378640249 * Complain0 + 1.34709525059573 * 
HigherEducationBinary0 ;
2439005   +   H1x2_3  = H1x2_3  +     0.75388522027745 * AcceptedCmp10
2439006   +          +     2.63069611253058 * AcceptedCmp20  +     0.30907626174766 *
2439007   +        AcceptedCmp30  +     1.10100873408666 * AcceptedCmp40
2439008   +          +    -1.08824297693055 * AcceptedCmp50  +     1.05059014395924 *
2439009   +        Complain0  +     0.67869922391732 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.75388522027745 * AcceptedCmp10 + 2.63069611253058 * 
AcceptedCmp20 + 0.30907626174766 * AcceptedCmp30 + 1.10100873408666 * AcceptedCmp40 + 
-1.08824297693055 * AcceptedCmp50 + 1.05059014395924 * Complain0 + 0.67869922391732 * 
HigherEducationBinary0 ;
2439010   +   H1x2_4  = H1x2_4  +    -0.22033664091288 * AcceptedCmp10
2439011   +          +     1.34914301916376 * AcceptedCmp20  +    -0.91465085581504 *
2439012   +        AcceptedCmp30  +    -0.19686441685837 * AcceptedCmp40
2439013   +          +     0.10683331864009 * AcceptedCmp50  +    -0.00754824810979 *
2439014   +        Complain0  +     1.52033864172921 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.22033664091288 * AcceptedCmp10 + 1.34914301916376 * 
AcceptedCmp20 + -0.91465085581504 * AcceptedCmp30 + -0.19686441685837 * AcceptedCmp40 + 
0.10683331864009 * AcceptedCmp50 + -0.00754824810979 * Complain0 + 1.52033864172921 * 
HigherEducationBinary0 ;
2439015   +   H1x2_5  = H1x2_5  +     0.83049886541915 * AcceptedCmp10
2439016   +          +    -0.74079162208987 * AcceptedCmp20  +    -0.67792505698297 *
2439017   +        AcceptedCmp30  +     0.07081190269168 * AcceptedCmp40
2439018   +          +     0.18720033568684 * AcceptedCmp50  +      2.6531318197812 *
2439019   +        Complain0  +     0.89741230471087 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + 0.83049886541915 * AcceptedCmp10 + -0.74079162208987 * 
AcceptedCmp20 + -0.67792505698297 * AcceptedCmp30 + 0.07081190269168 * AcceptedCmp40 + 
0.18720033568684 * AcceptedCmp50 + 2.6531318197812 * Complain0 + 0.89741230471087 * 
HigherEducationBinary0 ;
2439020   +   H1x2_6  = H1x2_6  +    -0.56781516290501 * AcceptedCmp10
2439021   +          +    -1.51874938874937 * AcceptedCmp20  +     1.28621778326033 *
2439022   +        AcceptedCmp30  +    -0.68769482686243 * AcceptedCmp40
2439023   +          +     0.35592893389946 * AcceptedCmp50  +    -1.30827608061077 *
2439024   +        Complain0  +     0.32980103195099 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -0.56781516290501 * AcceptedCmp10 + -1.51874938874937 
* AcceptedCmp20 + 1.28621778326033 * AcceptedCmp30 + -0.68769482686243 * AcceptedCmp40 + 
0.35592893389946 * AcceptedCmp50 + -1.30827608061077 * Complain0 + 0.32980103195099 * 
HigherEducationBinary0 ;
2439025   +   H1x2_1  = H1x2_1  +     -1.3799101073197 * Education2n_Cycle
2439026   +          +     0.02501135207931 * EducationBasic  +     1.13490660748682 *
2439027   +        EducationGraduation  +    -0.11344307008943 * EducationMaster
2439028   +          +     0.56030871857835 * Marital_StatusDivorced
2439029   +          +    -1.22448534379831 * Marital_StatusMarried
2439030   +          +     0.78141783495855 * Marital_StatusSingle
2439031   +          +    -1.35807438297575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.3799101073197 * Education2n_Cycle + 
0.02501135207931 * EducationBasic + 1.13490660748682 * EducationGraduation + -0.11344307008943 
* EducationMaster + 0.56030871857835 * Marital_StatusDivorced + -1.22448534379831 * 
Marital_StatusMarried + 0.78141783495855 * Marital_StatusSingle + -1.35807438297575 * 
Marital_StatusTogether ;
2439032   +   H1x2_2  = H1x2_2  +    -0.29912132201198 * Education2n_Cycle
2439033   +          +    -0.97227735746604 * EducationBasic  +     1.05541395347718 *
2439034   +        EducationGraduation  +     0.69607179798453 * EducationMaster
2439035   +          +    -2.63452071552997 * Marital_StatusDivorced
2439036   +          +     0.61829054779121 * Marital_StatusMarried
2439037   +          +    -2.20743370246315 * Marital_StatusSingle
2439038   +          +     0.56930072654252 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.29912132201198 * Education2n_Cycle + 
-0.97227735746604 * EducationBasic + 1.05541395347718 * EducationGraduation + 0.69607179798453 
* EducationMaster + -2.63452071552997 * Marital_StatusDivorced + 0.61829054779121 * 
Marital_StatusMarried + -2.20743370246315 * Marital_StatusSingle + 0.56930072654252 * 
Marital_StatusTogether ;
2439039   +   H1x2_3  = H1x2_3  +     0.65046688904352 * Education2n_Cycle
2439040   +          +     0.03854232912474 * EducationBasic  +     0.59545004622858 *
2439041   +        EducationGraduation  +    -1.68638824011899 * EducationMaster
2439042   +          +      -1.454102516731 * Marital_StatusDivorced
2439043   +          +     0.71488291465759 * Marital_StatusMarried
2439044   +          +     0.96038830049792 * Marital_StatusSingle
2439045   +          +    -0.85244216490853 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.65046688904352 * Education2n_Cycle + 
0.03854232912474 * EducationBasic + 0.59545004622858 * EducationGraduation + -1.68638824011899 
* EducationMaster + -1.454102516731 * Marital_StatusDivorced + 0.71488291465759 * 
Marital_StatusMarried + 0.96038830049792 * Marital_StatusSingle + -0.85244216490853 * 
Marital_StatusTogether ;
2439046   +   H1x2_4  = H1x2_4  +     0.37430673318658 * Education2n_Cycle
2439047   +          +    -0.25373979771478 * EducationBasic  +    -1.65617377693247 *
2439048   +        EducationGraduation  +    -1.12481097095571 * EducationMaster
2439049   +          +    -0.01160394891598 * Marital_StatusDivorced
2439050   +          +    -1.09054636482951 * Marital_StatusMarried
2439051   +          +      0.7793855479379 * Marital_StatusSingle
2439052   +          +    -0.40649435490654 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + 0.37430673318658 * Education2n_Cycle + 
-0.25373979771478 * EducationBasic + -1.65617377693247 * EducationGraduation + 
-1.12481097095571 * EducationMaster + -0.01160394891598 * Marital_StatusDivorced + 
-1.09054636482951 * Marital_StatusMarried + 0.7793855479379 * Marital_StatusSingle + 
-0.40649435490654 * Marital_StatusTogether ;
2439053   +   H1x2_5  = H1x2_5  +     -0.1016827992735 * Education2n_Cycle
2439054   +          +     1.07194596228219 * EducationBasic  +    -1.05800808905557 *
2439055   +        EducationGraduation  +     0.09666597691691 * EducationMaster
2439056   +          +    -0.73414854875115 * Marital_StatusDivorced
2439057   +          +     0.46421425621114 * Marital_StatusMarried
2439058   +          +    -0.54512730625469 * Marital_StatusSingle
2439059   +          +     0.76568726267448 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.1016827992735 * Education2n_Cycle + 
1.07194596228219 * EducationBasic + -1.05800808905557 * EducationGraduation + 0.09666597691691 
* EducationMaster + -0.73414854875115 * Marital_StatusDivorced + 0.46421425621114 * 
Marital_StatusMarried + -0.54512730625469 * Marital_StatusSingle + 0.76568726267448 * 
Marital_StatusTogether ;
2439060   +   H1x2_6  = H1x2_6  +    -1.15957084181454 * Education2n_Cycle
2439061   +          +     0.00847667341235 * EducationBasic  +    -1.58463832529749 *
2439062   +        EducationGraduation  +     0.56518194582557 * EducationMaster
2439063   +          +     0.25131188683384 * Marital_StatusDivorced
2439064   +          +     2.38279806963807 * Marital_StatusMarried
2439065   +          +     0.28897706448348 * Marital_StatusSingle
2439066   +          +     0.89118497255856 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 + -1.15957084181454 * Education2n_Cycle + 
0.00847667341235 * EducationBasic + -1.58463832529749 * EducationGraduation + 0.56518194582557 
* EducationMaster + 0.25131188683384 * Marital_StatusDivorced + 2.38279806963807 * 
Marital_StatusMarried + 0.28897706448348 * Marital_StatusSingle + 0.89118497255856 * 
Marital_StatusTogether ;
2439067   +   H1x2_1  =    -1.58113759763481 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.58113759763481 + H1x2_1 ;
2439068   +   H1x2_2  =    -1.19307731012977 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -1.19307731012977 + H1x2_2 ;
2439069   +   H1x2_3  =     0.35767811974231 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = 0.35767811974231 + H1x2_3 ;
2439070   +   H1x2_4  =    -0.20241610577527 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.20241610577527 + H1x2_4 ;
2439071   +   H1x2_5  =     0.30120348602955 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 0.30120348602955 + H1x2_5 ;
2439072   +   H1x2_6  =     1.04145053611779 + H1x2_6 ;
MPRINT(EM_DIAGRAM):   H1x2_6 = 1.04145053611779 + H1x2_6 ;
2439073   +   H1x2_7  = 0;
MPRINT(EM_DIAGRAM):   H1x2_7 = 0;
2439074   +   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , H1x2_7
2439075   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x2_1 , H1x2_2 , H1x2_3 , H1x2_4 , H1x2_5 , H1x2_6 , 
H1x2_7 );
2439076   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2439077   +   H1x2_1  = EXP(H1x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_1 = EXP(H1x2_1 - _MAX_);
2439078   +   _SUM_ = _SUM_ + H1x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_1 ;
2439079   +   H1x2_2  = EXP(H1x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_2 = EXP(H1x2_2 - _MAX_);
2439080   +   _SUM_ = _SUM_ + H1x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_2 ;
2439081   +   H1x2_3  = EXP(H1x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_3 = EXP(H1x2_3 - _MAX_);
2439082   +   _SUM_ = _SUM_ + H1x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_3 ;
2439083   +   H1x2_4  = EXP(H1x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_4 = EXP(H1x2_4 - _MAX_);
2439084   +   _SUM_ = _SUM_ + H1x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_4 ;
2439085   +   H1x2_5  = EXP(H1x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_5 = EXP(H1x2_5 - _MAX_);
2439086   +   _SUM_ = _SUM_ + H1x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_5 ;
2439087   +   H1x2_6  = EXP(H1x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_6 = EXP(H1x2_6 - _MAX_);
2439088   +   _SUM_ = _SUM_ + H1x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_6 ;
2439089   +   H1x2_7  = EXP(H1x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x2_7 = EXP(H1x2_7 - _MAX_);
2439090   +   _SUM_ = _SUM_ + H1x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x2_7 ;
2439091   +   H1x2_1  = H1x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 / _SUM_;
2439092   +   H1x2_2  = H1x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 / _SUM_;
2439093   +   H1x2_3  = H1x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 / _SUM_;
2439094   +   H1x2_4  = H1x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 / _SUM_;
2439095   +   H1x2_5  = H1x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 / _SUM_;
2439096   +   H1x2_6  = H1x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_6 = H1x2_6 / _SUM_;
2439097   +   H1x2_7  = H1x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x2_7 = H1x2_7 / _SUM_;
2439098   +END;
MPRINT(EM_DIAGRAM):   END;
2439099   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2439100   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2439101   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2439102   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2439103   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2439104   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2439105   +   H1x2_6  = .;
MPRINT(EM_DIAGRAM):   H1x2_6 = .;
2439106   +   H1x2_7  = .;
MPRINT(EM_DIAGRAM):   H1x2_7 = .;
2439107   +END;
MPRINT(EM_DIAGRAM):   END;
2439108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439109   +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
2439110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439111   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2439112   +   H1x3_1  =    -0.17891338426869 * S_AcceptedCmpTotal
2439113   +          +     0.25935021287808 * S_Age  +     -0.4211584261256 * S_Frq
2439114   +          +    -1.91007620895221 * S_Income  +     0.38954955842314 *
2439115   +        S_Kidhome  +     0.07674351412771 * S_Mnt  +    -0.00193662324959 *
2439116   +        S_MntFishProducts  +    -0.05912563364557 * S_MntFruits
2439117   +          +     0.34447908349796 * S_MntGoldProds  +      1.8146796379351 *
2439118   +        S_MntMeatProducts  +    -0.28617584915758 * S_MntSweetProducts
2439119   +          +    -0.25003395507837 * S_MntWines  +     2.70698456342857 *
2439120   +        S_MonthsAsCustomer  +     0.61560315312621 * S_NumCatalogPurchases
2439121   +          +     1.11855402225797 * S_NumDealsPurchases
2439122   +          +     0.39150287442005 * S_NumDistPurchases
2439123   +          +     0.00160244551627 * S_NumStorePurchases
2439124   +          +     1.54380043731879 * S_NumWebPurchases
2439125   +          +      0.6462755347813 * S_NumWebVisitsMonth
2439126   +          +      0.3712356571744 * S_RFMstat  +     0.31930000498313 *
2439127   +        S_RMntFrq  +     0.91533450209744 * S_Recency
2439128   +          +    -1.15144971921837 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -0.17891338426869 * S_AcceptedCmpTotal + 0.25935021287808 * 
S_Age + -0.4211584261256 * S_Frq + -1.91007620895221 * S_Income + 0.38954955842314 * S_Kidhome 
+ 0.07674351412771 * S_Mnt + -0.00193662324959 * S_MntFishProducts + -0.05912563364557 * 
S_MntFruits + 0.34447908349796 * S_MntGoldProds + 1.8146796379351 * S_MntMeatProducts + 
-0.28617584915758 * S_MntSweetProducts + -0.25003395507837 * S_MntWines + 2.70698456342857 * 
S_MonthsAsCustomer + 0.61560315312621 * S_NumCatalogPurchases + 1.11855402225797 * 
S_NumDealsPurchases + 0.39150287442005 * S_NumDistPurchases + 0.00160244551627 * 
S_NumStorePurchases + 1.54380043731879 * S_NumWebPurchases + 0.6462755347813 * 
S_NumWebVisitsMonth + 0.3712356571744 * S_RFMstat + 0.31930000498313 * S_RMntFrq + 
0.91533450209744 * S_Recency + -1.15144971921837 * S_Teenhome ;
2439129   +   H1x3_2  =     0.70342217458269 * S_AcceptedCmpTotal
2439130   +          +     1.00269567168731 * S_Age  +     0.28237778780972 * S_Frq
2439131   +          +     1.85610950568833 * S_Income  +    -0.88627540559449 *
2439132   +        S_Kidhome  +      -0.681406495446 * S_Mnt  +    -0.52884566607488 *
2439133   +        S_MntFishProducts  +    -1.55540056999822 * S_MntFruits
2439134   +          +    -0.86530238267543 * S_MntGoldProds  +     0.50288889191395 *
2439135   +        S_MntMeatProducts  +     0.42795025747297 * S_MntSweetProducts
2439136   +          +     1.65622561769832 * S_MntWines  +    -0.40506757052255 *
2439137   +        S_MonthsAsCustomer  +    -0.45283667973478 * S_NumCatalogPurchases
2439138   +          +     0.01911815525287 * S_NumDealsPurchases
2439139   +          +    -1.07196707915227 * S_NumDistPurchases
2439140   +          +      0.6452048321682 * S_NumStorePurchases
2439141   +          +    -0.15818575353955 * S_NumWebPurchases
2439142   +          +    -0.82586162051382 * S_NumWebVisitsMonth
2439143   +          +     0.35914598433318 * S_RFMstat  +     0.14754646817335 *
2439144   +        S_RMntFrq  +     0.23398669008843 * S_Recency
2439145   +          +      0.1494741245474 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.70342217458269 * S_AcceptedCmpTotal + 1.00269567168731 * 
S_Age + 0.28237778780972 * S_Frq + 1.85610950568833 * S_Income + -0.88627540559449 * S_Kidhome 
+ -0.681406495446 * S_Mnt + -0.52884566607488 * S_MntFishProducts + -1.55540056999822 * 
S_MntFruits + -0.86530238267543 * S_MntGoldProds + 0.50288889191395 * S_MntMeatProducts + 
0.42795025747297 * S_MntSweetProducts + 1.65622561769832 * S_MntWines + -0.40506757052255 * 
S_MonthsAsCustomer + -0.45283667973478 * S_NumCatalogPurchases + 0.01911815525287 * 
S_NumDealsPurchases + -1.07196707915227 * S_NumDistPurchases + 0.6452048321682 * 
S_NumStorePurchases + -0.15818575353955 * S_NumWebPurchases + -0.82586162051382 * 
S_NumWebVisitsMonth + 0.35914598433318 * S_RFMstat + 0.14754646817335 * S_RMntFrq + 
0.23398669008843 * S_Recency + 0.1494741245474 * S_Teenhome ;
2439146   +   H1x3_3  =     0.54929571619315 * S_AcceptedCmpTotal
2439147   +          +      -0.751329127583 * S_Age  +    -0.94592306727941 * S_Frq
2439148   +          +    -1.17625421122138 * S_Income  +     0.74760015734698 *
2439149   +        S_Kidhome  +    -1.31055967085841 * S_Mnt  +     -0.5844789069547 *
2439150   +        S_MntFishProducts  +     0.29563811382096 * S_MntFruits
2439151   +          +      2.0486671645084 * S_MntGoldProds  +      0.4596153519541 *
2439152   +        S_MntMeatProducts  +     0.43182048706593 * S_MntSweetProducts
2439153   +          +     0.06319773540648 * S_MntWines  +     -0.9320658068644 *
2439154   +        S_MonthsAsCustomer  +     0.97208201647088 * S_NumCatalogPurchases
2439155   +          +     1.56893739271853 * S_NumDealsPurchases
2439156   +          +      0.6745865425238 * S_NumDistPurchases
2439157   +          +    -0.26848765783548 * S_NumStorePurchases
2439158   +          +     0.79227081430227 * S_NumWebPurchases
2439159   +          +     0.83054874267768 * S_NumWebVisitsMonth
2439160   +          +    -0.28363014203077 * S_RFMstat  +    -0.71879552423951 *
2439161   +        S_RMntFrq  +     0.80917480816898 * S_Recency
2439162   +          +    -0.52052715034272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_3 = 0.54929571619315 * S_AcceptedCmpTotal + -0.751329127583 * S_Age 
+ -0.94592306727941 * S_Frq + -1.17625421122138 * S_Income + 0.74760015734698 * S_Kidhome + 
-1.31055967085841 * S_Mnt + -0.5844789069547 * S_MntFishProducts + 0.29563811382096 * 
S_MntFruits + 2.0486671645084 * S_MntGoldProds + 0.4596153519541 * S_MntMeatProducts + 
0.43182048706593 * S_MntSweetProducts + 0.06319773540648 * S_MntWines + -0.9320658068644 * 
S_MonthsAsCustomer + 0.97208201647088 * S_NumCatalogPurchases + 1.56893739271853 * 
S_NumDealsPurchases + 0.6745865425238 * S_NumDistPurchases + -0.26848765783548 * 
S_NumStorePurchases + 0.79227081430227 * S_NumWebPurchases + 0.83054874267768 * 
S_NumWebVisitsMonth + -0.28363014203077 * S_RFMstat + -0.71879552423951 * S_RMntFrq + 
0.80917480816898 * S_Recency + -0.52052715034272 * S_Teenhome ;
2439163   +   H1x3_4  =     1.71480641781959 * S_AcceptedCmpTotal
2439164   +          +    -0.98495603767618 * S_Age  +     -0.0459665945886 * S_Frq
2439165   +          +     1.19396539246615 * S_Income  +     0.51326452746824 *
2439166   +        S_Kidhome  +    -0.22663230333642 * S_Mnt  +     0.27256846012963 *
2439167   +        S_MntFishProducts  +    -0.50661455153622 * S_MntFruits
2439168   +          +     -0.3498057126965 * S_MntGoldProds  +    -2.87000075082987 *
2439169   +        S_MntMeatProducts  +    -0.09413391100844 * S_MntSweetProducts
2439170   +          +     1.15010664811376 * S_MntWines  +    -0.48501392658783 *
2439171   +        S_MonthsAsCustomer  +      0.2688077310392 * S_NumCatalogPurchases
2439172   +          +    -0.23954856030467 * S_NumDealsPurchases
2439173   +          +    -1.61914390483829 * S_NumDistPurchases
2439174   +          +      -1.014570623016 * S_NumStorePurchases
2439175   +          +    -0.36828642098701 * S_NumWebPurchases
2439176   +          +    -0.04976922659227 * S_NumWebVisitsMonth
2439177   +          +     0.87811344320757 * S_RFMstat  +    -1.70999928232532 *
2439178   +        S_RMntFrq  +    -0.40880481304369 * S_Recency
2439179   +          +     0.75806578113158 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 1.71480641781959 * S_AcceptedCmpTotal + -0.98495603767618 * 
S_Age + -0.0459665945886 * S_Frq + 1.19396539246615 * S_Income + 0.51326452746824 * S_Kidhome 
+ -0.22663230333642 * S_Mnt + 0.27256846012963 * S_MntFishProducts + -0.50661455153622 * 
S_MntFruits + -0.3498057126965 * S_MntGoldProds + -2.87000075082987 * S_MntMeatProducts + 
-0.09413391100844 * S_MntSweetProducts + 1.15010664811376 * S_MntWines + -0.48501392658783 * 
S_MonthsAsCustomer + 0.2688077310392 * S_NumCatalogPurchases + -0.23954856030467 * 
S_NumDealsPurchases + -1.61914390483829 * S_NumDistPurchases + -1.014570623016 * 
S_NumStorePurchases + -0.36828642098701 * S_NumWebPurchases + -0.04976922659227 * 
S_NumWebVisitsMonth + 0.87811344320757 * S_RFMstat + -1.70999928232532 * S_RMntFrq + 
-0.40880481304369 * S_Recency + 0.75806578113158 * S_Teenhome ;
2439180   +   H1x3_5  =    -0.35033091531835 * S_AcceptedCmpTotal
2439181   +          +    -1.18148775203733 * S_Age  +    -0.17374293038138 * S_Frq
2439182   +          +    -0.36680516767012 * S_Income  +     0.57186890691757 *
2439183   +        S_Kidhome  +    -0.02612042491922 * S_Mnt  +     0.84551697375819 *
2439184   +        S_MntFishProducts  +     0.44255296354709 * S_MntFruits
2439185   +          +    -1.35259485807243 * S_MntGoldProds  +      0.3377329409199 *
2439186   +        S_MntMeatProducts  +    -1.06135100840202 * S_MntSweetProducts
2439187   +          +     0.15771394796649 * S_MntWines  +     1.55754960780486 *
2439188   +        S_MonthsAsCustomer  +    -0.76896921785988 * S_NumCatalogPurchases
2439189   +          +     1.00094082424204 * S_NumDealsPurchases
2439190   +          +      0.2724785290725 * S_NumDistPurchases
2439191   +          +     0.13170237783486 * S_NumStorePurchases
2439192   +          +    -1.31447792523743 * S_NumWebPurchases
2439193   +          +    -0.09121088371438 * S_NumWebVisitsMonth
2439194   +          +     1.46860488573551 * S_RFMstat  +     0.46491504994651 *
2439195   +        S_RMntFrq  +      0.6767512513985 * S_Recency
2439196   +          +    -1.74995034763966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.35033091531835 * S_AcceptedCmpTotal + -1.18148775203733 * 
S_Age + -0.17374293038138 * S_Frq + -0.36680516767012 * S_Income + 0.57186890691757 * 
S_Kidhome + -0.02612042491922 * S_Mnt + 0.84551697375819 * S_MntFishProducts + 
0.44255296354709 * S_MntFruits + -1.35259485807243 * S_MntGoldProds + 0.3377329409199 * 
S_MntMeatProducts + -1.06135100840202 * S_MntSweetProducts + 0.15771394796649 * S_MntWines + 
1.55754960780486 * S_MonthsAsCustomer + -0.76896921785988 * S_NumCatalogPurchases + 
1.00094082424204 * S_NumDealsPurchases + 0.2724785290725 * S_NumDistPurchases + 
0.13170237783486 * S_NumStorePurchases + -1.31447792523743 * S_NumWebPurchases + 
-0.09121088371438 * S_NumWebVisitsMonth + 1.46860488573551 * S_RFMstat + 0.46491504994651 * 
S_RMntFrq + 0.6767512513985 * S_Recency + -1.74995034763966 * S_Teenhome ;
2439197   +   H1x3_6  =     1.05520309715672 * S_AcceptedCmpTotal
2439198   +          +    -1.05930507843633 * S_Age  +     0.07032294102853 * S_Frq
2439199   +          +    -0.05932294137503 * S_Income  +    -1.47206442598932 *
2439200   +        S_Kidhome  +     0.56661112816398 * S_Mnt  +    -0.11340132210258 *
2439201   +        S_MntFishProducts  +    -0.32177484313741 * S_MntFruits
2439202   +          +    -0.32378384178804 * S_MntGoldProds  +     0.00540737819175 *
2439203   +        S_MntMeatProducts  +     0.14834467568566 * S_MntSweetProducts
2439204   +          +    -0.95841169333668 * S_MntWines  +    -0.62902099823048 *
2439205   +        S_MonthsAsCustomer  +    -0.67434201898155 * S_NumCatalogPurchases
2439206   +          +    -0.73198872336344 * S_NumDealsPurchases
2439207   +          +     0.29368958872361 * S_NumDistPurchases
2439208   +          +     1.52772046446908 * S_NumStorePurchases
2439209   +          +    -1.75065469134874 * S_NumWebPurchases
2439210   +          +      0.0264954621772 * S_NumWebVisitsMonth
2439211   +          +    -0.88054137065815 * S_RFMstat  +     0.70371760194946 *
2439212   +        S_RMntFrq  +     1.14219878739476 * S_Recency
2439213   +          +    -1.15240998118906 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 1.05520309715672 * S_AcceptedCmpTotal + -1.05930507843633 * 
S_Age + 0.07032294102853 * S_Frq + -0.05932294137503 * S_Income + -1.47206442598932 * 
S_Kidhome + 0.56661112816398 * S_Mnt + -0.11340132210258 * S_MntFishProducts + 
-0.32177484313741 * S_MntFruits + -0.32378384178804 * S_MntGoldProds + 0.00540737819175 * 
S_MntMeatProducts + 0.14834467568566 * S_MntSweetProducts + -0.95841169333668 * S_MntWines + 
-0.62902099823048 * S_MonthsAsCustomer + -0.67434201898155 * S_NumCatalogPurchases + 
-0.73198872336344 * S_NumDealsPurchases + 0.29368958872361 * S_NumDistPurchases + 
1.52772046446908 * S_NumStorePurchases + -1.75065469134874 * S_NumWebPurchases + 
0.0264954621772 * S_NumWebVisitsMonth + -0.88054137065815 * S_RFMstat + 0.70371760194946 * 
S_RMntFrq + 1.14219878739476 * S_Recency + -1.15240998118906 * S_Teenhome ;
2439214   +   H1x3_1  = H1x3_1  +     0.60800466481517 * AcceptedCmp10
2439215   +          +     0.33187245535701 * AcceptedCmp20  +    -0.13888343551044 *
2439216   +        AcceptedCmp30  +     0.93663925029857 * AcceptedCmp40
2439217   +          +     1.09340622621085 * AcceptedCmp50  +    -0.49132743156126 *
2439218   +        Complain0  +     0.45196197584946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.60800466481517 * AcceptedCmp10 + 0.33187245535701 * 
AcceptedCmp20 + -0.13888343551044 * AcceptedCmp30 + 0.93663925029857 * AcceptedCmp40 + 
1.09340622621085 * AcceptedCmp50 + -0.49132743156126 * Complain0 + 0.45196197584946 * 
HigherEducationBinary0 ;
2439219   +   H1x3_2  = H1x3_2  +     1.40275485940553 * AcceptedCmp10
2439220   +          +    -0.15035102140746 * AcceptedCmp20  +    -0.53574064147206 *
2439221   +        AcceptedCmp30  +    -1.67324904853563 * AcceptedCmp40
2439222   +          +     0.05636486780046 * AcceptedCmp50  +    -0.39032867538703 *
2439223   +        Complain0  +    -0.74980603736258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.40275485940553 * AcceptedCmp10 + -0.15035102140746 * 
AcceptedCmp20 + -0.53574064147206 * AcceptedCmp30 + -1.67324904853563 * AcceptedCmp40 + 
0.05636486780046 * AcceptedCmp50 + -0.39032867538703 * Complain0 + -0.74980603736258 * 
HigherEducationBinary0 ;
2439224   +   H1x3_3  = H1x3_3  +     0.26722647672682 * AcceptedCmp10
2439225   +          +      0.6216449242511 * AcceptedCmp20  +     0.76635966126463 *
2439226   +        AcceptedCmp30  +    -2.48978919706551 * AcceptedCmp40
2439227   +          +     0.98619070514978 * AcceptedCmp50  +    -0.19244215041297 *
2439228   +        Complain0  +    -1.19045127506692 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.26722647672682 * AcceptedCmp10 + 0.6216449242511 * 
AcceptedCmp20 + 0.76635966126463 * AcceptedCmp30 + -2.48978919706551 * AcceptedCmp40 + 
0.98619070514978 * AcceptedCmp50 + -0.19244215041297 * Complain0 + -1.19045127506692 * 
HigherEducationBinary0 ;
2439229   +   H1x3_4  = H1x3_4  +    -1.73915810074841 * AcceptedCmp10
2439230   +          +     0.72244354389321 * AcceptedCmp20  +     1.07200246076684 *
2439231   +        AcceptedCmp30  +     0.24242315318429 * AcceptedCmp40
2439232   +          +     0.48717202781909 * AcceptedCmp50  +    -1.18600714935645 *
2439233   +        Complain0  +     -1.0752062632729 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.73915810074841 * AcceptedCmp10 + 0.72244354389321 * 
AcceptedCmp20 + 1.07200246076684 * AcceptedCmp30 + 0.24242315318429 * AcceptedCmp40 + 
0.48717202781909 * AcceptedCmp50 + -1.18600714935645 * Complain0 + -1.0752062632729 * 
HigherEducationBinary0 ;
2439234   +   H1x3_5  = H1x3_5  +     1.07972020322696 * AcceptedCmp10
2439235   +          +     0.38275266830165 * AcceptedCmp20  +     0.45959913551609 *
2439236   +        AcceptedCmp30  +    -0.30891288234597 * AcceptedCmp40
2439237   +          +    -0.35568820567134 * AcceptedCmp50  +     -1.8045223309162 *
2439238   +        Complain0  +    -0.29380313969195 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 1.07972020322696 * AcceptedCmp10 + 0.38275266830165 * 
AcceptedCmp20 + 0.45959913551609 * AcceptedCmp30 + -0.30891288234597 * AcceptedCmp40 + 
-0.35568820567134 * AcceptedCmp50 + -1.8045223309162 * Complain0 + -0.29380313969195 * 
HigherEducationBinary0 ;
2439239   +   H1x3_6  = H1x3_6  +    -2.40002597755125 * AcceptedCmp10
2439240   +          +     0.61725427642794 * AcceptedCmp20  +      1.3438972982524 *
2439241   +        AcceptedCmp30  +    -0.66766212489049 * AcceptedCmp40
2439242   +          +     1.10709227053258 * AcceptedCmp50  +    -0.98301865424423 *
2439243   +        Complain0  +     0.83512874944952 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + -2.40002597755125 * AcceptedCmp10 + 0.61725427642794 * 
AcceptedCmp20 + 1.3438972982524 * AcceptedCmp30 + -0.66766212489049 * AcceptedCmp40 + 
1.10709227053258 * AcceptedCmp50 + -0.98301865424423 * Complain0 + 0.83512874944952 * 
HigherEducationBinary0 ;
2439244   +   H1x3_1  = H1x3_1  +    -0.49604077640433 * Education2n_Cycle
2439245   +          +    -0.60803139475446 * EducationBasic  +     0.39029834300888 *
2439246   +        EducationGraduation  +     1.49476669226441 * EducationMaster
2439247   +          +     0.32207432513904 * Marital_StatusDivorced
2439248   +          +      0.6397913221395 * Marital_StatusMarried
2439249   +          +    -0.25330032559918 * Marital_StatusSingle
2439250   +          +      0.6826963146507 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -0.49604077640433 * Education2n_Cycle + 
-0.60803139475446 * EducationBasic + 0.39029834300888 * EducationGraduation + 1.49476669226441 
* EducationMaster + 0.32207432513904 * Marital_StatusDivorced + 0.6397913221395 * 
Marital_StatusMarried + -0.25330032559918 * Marital_StatusSingle + 0.6826963146507 * 
Marital_StatusTogether ;
2439251   +   H1x3_2  = H1x3_2  +     0.70727271276171 * Education2n_Cycle
2439252   +          +    -0.74539861835467 * EducationBasic  +    -1.09813520505203 *
2439253   +        EducationGraduation  +      0.0913616986494 * EducationMaster
2439254   +          +     0.79430904713493 * Marital_StatusDivorced
2439255   +          +     2.54456429102799 * Marital_StatusMarried
2439256   +          +     0.59410742352499 * Marital_StatusSingle
2439257   +          +     0.62339810371964 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 0.70727271276171 * Education2n_Cycle + 
-0.74539861835467 * EducationBasic + -1.09813520505203 * EducationGraduation + 0.0913616986494 
* EducationMaster + 0.79430904713493 * Marital_StatusDivorced + 2.54456429102799 * 
Marital_StatusMarried + 0.59410742352499 * Marital_StatusSingle + 0.62339810371964 * 
Marital_StatusTogether ;
2439258   +   H1x3_3  = H1x3_3  +     0.41739931776571 * Education2n_Cycle
2439259   +          +     0.90042318812458 * EducationBasic  +    -0.30863999735161 *
2439260   +        EducationGraduation  +    -0.07080985966069 * EducationMaster
2439261   +          +    -0.43081775693595 * Marital_StatusDivorced
2439262   +          +    -0.78485102174552 * Marital_StatusMarried
2439263   +          +    -1.56581090110813 * Marital_StatusSingle
2439264   +          +     1.31552735466691 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 + 0.41739931776571 * Education2n_Cycle + 
0.90042318812458 * EducationBasic + -0.30863999735161 * EducationGraduation + 
-0.07080985966069 * EducationMaster + -0.43081775693595 * Marital_StatusDivorced + 
-0.78485102174552 * Marital_StatusMarried + -1.56581090110813 * Marital_StatusSingle + 
1.31552735466691 * Marital_StatusTogether ;
2439265   +   H1x3_4  = H1x3_4  +    -1.03450070870223 * Education2n_Cycle
2439266   +          +     0.12962104594991 * EducationBasic  +    -2.08320982697158 *
2439267   +        EducationGraduation  +     1.01633562820676 * EducationMaster
2439268   +          +     0.38226706522151 * Marital_StatusDivorced
2439269   +          +     0.96666958079914 * Marital_StatusMarried
2439270   +          +    -0.07771259761555 * Marital_StatusSingle
2439271   +          +    -0.15667080607342 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 + -1.03450070870223 * Education2n_Cycle + 
0.12962104594991 * EducationBasic + -2.08320982697158 * EducationGraduation + 1.01633562820676 
* EducationMaster + 0.38226706522151 * Marital_StatusDivorced + 0.96666958079914 * 
Marital_StatusMarried + -0.07771259761555 * Marital_StatusSingle + -0.15667080607342 * 
Marital_StatusTogether ;
2439272   +   H1x3_5  = H1x3_5  +     0.42350784953316 * Education2n_Cycle
2439273   +          +    -0.47409869250049 * EducationBasic  +     0.22752853959532 *
2439274   +        EducationGraduation  +     0.05813076059598 * EducationMaster
2439275   +          +    -0.38325393606947 * Marital_StatusDivorced
2439276   +          +    -1.43303056163299 * Marital_StatusMarried
2439277   +          +     0.11571941757387 * Marital_StatusSingle
2439278   +          +     0.42633042000729 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 + 0.42350784953316 * Education2n_Cycle + 
-0.47409869250049 * EducationBasic + 0.22752853959532 * EducationGraduation + 0.05813076059598 
* EducationMaster + -0.38325393606947 * Marital_StatusDivorced + -1.43303056163299 * 
Marital_StatusMarried + 0.11571941757387 * Marital_StatusSingle + 0.42633042000729 * 
Marital_StatusTogether ;
2439279   +   H1x3_6  = H1x3_6  +     1.11214831415741 * Education2n_Cycle
2439280   +          +      0.8877309144454 * EducationBasic  +     0.87390674413956 *
2439281   +        EducationGraduation  +     0.90837023676142 * EducationMaster
2439282   +          +    -0.36491799765765 * Marital_StatusDivorced
2439283   +          +     0.14142786767503 * Marital_StatusMarried
2439284   +          +     0.22643970468805 * Marital_StatusSingle
2439285   +          +     0.74162870756295 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 + 1.11214831415741 * Education2n_Cycle + 0.8877309144454 
* EducationBasic + 0.87390674413956 * EducationGraduation + 0.90837023676142 * EducationMaster 
+ -0.36491799765765 * Marital_StatusDivorced + 0.14142786767503 * Marital_StatusMarried + 
0.22643970468805 * Marital_StatusSingle + 0.74162870756295 * Marital_StatusTogether ;
2439286   +   H1x3_1  =        0.17121674502 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.17121674502 + H1x3_1 ;
2439287   +   H1x3_2  =    -0.07858073871761 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.07858073871761 + H1x3_2 ;
2439288   +   H1x3_3  =     -0.1687483376367 + H1x3_3 ;
MPRINT(EM_DIAGRAM):   H1x3_3 = -0.1687483376367 + H1x3_3 ;
2439289   +   H1x3_4  =     0.92501573900148 + H1x3_4 ;
MPRINT(EM_DIAGRAM):   H1x3_4 = 0.92501573900148 + H1x3_4 ;
2439290   +   H1x3_5  =    -0.04765930254307 + H1x3_5 ;
MPRINT(EM_DIAGRAM):   H1x3_5 = -0.04765930254307 + H1x3_5 ;
2439291   +   H1x3_6  =     0.29532221854366 + H1x3_6 ;
MPRINT(EM_DIAGRAM):   H1x3_6 = 0.29532221854366 + H1x3_6 ;
2439292   +   H1x3_7  = 0;
MPRINT(EM_DIAGRAM):   H1x3_7 = 0;
2439293   +   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , H1x3_7
2439294   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x3_1 , H1x3_2 , H1x3_3 , H1x3_4 , H1x3_5 , H1x3_6 , 
H1x3_7 );
2439295   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2439296   +   H1x3_1  = EXP(H1x3_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_1 = EXP(H1x3_1 - _MAX_);
2439297   +   _SUM_ = _SUM_ + H1x3_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_1 ;
2439298   +   H1x3_2  = EXP(H1x3_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_2 = EXP(H1x3_2 - _MAX_);
2439299   +   _SUM_ = _SUM_ + H1x3_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_2 ;
2439300   +   H1x3_3  = EXP(H1x3_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_3 = EXP(H1x3_3 - _MAX_);
2439301   +   _SUM_ = _SUM_ + H1x3_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_3 ;
2439302   +   H1x3_4  = EXP(H1x3_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_4 = EXP(H1x3_4 - _MAX_);
2439303   +   _SUM_ = _SUM_ + H1x3_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_4 ;
2439304   +   H1x3_5  = EXP(H1x3_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_5 = EXP(H1x3_5 - _MAX_);
2439305   +   _SUM_ = _SUM_ + H1x3_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_5 ;
2439306   +   H1x3_6  = EXP(H1x3_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_6 = EXP(H1x3_6 - _MAX_);
2439307   +   _SUM_ = _SUM_ + H1x3_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_6 ;
2439308   +   H1x3_7  = EXP(H1x3_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x3_7 = EXP(H1x3_7 - _MAX_);
2439309   +   _SUM_ = _SUM_ + H1x3_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x3_7 ;
2439310   +   H1x3_1  = H1x3_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 / _SUM_;
2439311   +   H1x3_2  = H1x3_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 / _SUM_;
2439312   +   H1x3_3  = H1x3_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_3 = H1x3_3 / _SUM_;
2439313   +   H1x3_4  = H1x3_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_4 = H1x3_4 / _SUM_;
2439314   +   H1x3_5  = H1x3_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_5 = H1x3_5 / _SUM_;
2439315   +   H1x3_6  = H1x3_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_6 = H1x3_6 / _SUM_;
2439316   +   H1x3_7  = H1x3_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x3_7 = H1x3_7 / _SUM_;
2439317   +END;
MPRINT(EM_DIAGRAM):   END;
2439318   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2439319   +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
2439320   +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
2439321   +   H1x3_3  = .;
MPRINT(EM_DIAGRAM):   H1x3_3 = .;
2439322   +   H1x3_4  = .;
MPRINT(EM_DIAGRAM):   H1x3_4 = .;
2439323   +   H1x3_5  = .;
MPRINT(EM_DIAGRAM):   H1x3_5 = .;
2439324   +   H1x3_6  = .;
MPRINT(EM_DIAGRAM):   H1x3_6 = .;
2439325   +   H1x3_7  = .;
MPRINT(EM_DIAGRAM):   H1x3_7 = .;
2439326   +END;
MPRINT(EM_DIAGRAM):   END;
2439327   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439328   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2439329   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439330   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2439331   +   H2x1_1  =    -0.59397690687549 * H1x1_1  +     0.10790242485513 * H1x1_2
2439332   +          +     1.34957997338147 * H1x1_3  +     0.98783879769831 * H1x1_4
2439333   +          +    -1.73131698691915 * H1x1_5  +    -0.04920424431591 * H1x1_6
2439334   +          +    -0.75229173661277 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -0.59397690687549 * H1x1_1 + 0.10790242485513 * H1x1_2 + 
1.34957997338147 * H1x1_3 + 0.98783879769831 * H1x1_4 + -1.73131698691915 * H1x1_5 + 
-0.04920424431591 * H1x1_6 + -0.75229173661277 * H1x1_7 ;
2439335   +   H2x1_2  =    -0.98729009516736 * H1x1_1  +     0.08491210993613 * H1x1_2
2439336   +          +     0.08027654554575 * H1x1_3  +     0.06189432860142 * H1x1_4
2439337   +          +    -1.23526842489276 * H1x1_5  +    -0.17600169070197 * H1x1_6
2439338   +          +     0.70746372975481 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -0.98729009516736 * H1x1_1 + 0.08491210993613 * H1x1_2 + 
0.08027654554575 * H1x1_3 + 0.06189432860142 * H1x1_4 + -1.23526842489276 * H1x1_5 + 
-0.17600169070197 * H1x1_6 + 0.70746372975481 * H1x1_7 ;
2439339   +   H2x1_3  =    -0.91861478701429 * H1x1_1  +     0.18513565366261 * H1x1_2
2439340   +          +    -0.18629587955963 * H1x1_3  +     0.76802660507034 * H1x1_4
2439341   +          +    -0.47979525657638 * H1x1_5  +     0.06968142422923 * H1x1_6
2439342   +          +     2.18264864713501 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.91861478701429 * H1x1_1 + 0.18513565366261 * H1x1_2 + 
-0.18629587955963 * H1x1_3 + 0.76802660507034 * H1x1_4 + -0.47979525657638 * H1x1_5 + 
0.06968142422923 * H1x1_6 + 2.18264864713501 * H1x1_7 ;
2439343   +   H2x1_4  =     1.02774363171853 * H1x1_1  +     1.08006636098136 * H1x1_2
2439344   +          +    -2.27078540572539 * H1x1_3  +    -0.54968089382258 * H1x1_4
2439345   +          +     2.11477012099075 * H1x1_5  +     1.91368944483056 * H1x1_6
2439346   +          +     0.22313799249268 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.02774363171853 * H1x1_1 + 1.08006636098136 * H1x1_2 + 
-2.27078540572539 * H1x1_3 + -0.54968089382258 * H1x1_4 + 2.11477012099075 * H1x1_5 + 
1.91368944483056 * H1x1_6 + 0.22313799249268 * H1x1_7 ;
2439347   +   H2x1_5  =    -1.06933000183778 * H1x1_1  +     0.73081558484415 * H1x1_2
2439348   +          +    -0.78012012951065 * H1x1_3  +     0.81916081920412 * H1x1_4
2439349   +          +    -1.46358608086032 * H1x1_5  +     1.83492870022704 * H1x1_6
2439350   +          +     0.75554005406859 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.06933000183778 * H1x1_1 + 0.73081558484415 * H1x1_2 + 
-0.78012012951065 * H1x1_3 + 0.81916081920412 * H1x1_4 + -1.46358608086032 * H1x1_5 + 
1.83492870022704 * H1x1_6 + 0.75554005406859 * H1x1_7 ;
2439351   +   H2x1_6  =    -2.28576277725334 * H1x1_1  +    -0.32249555333061 * H1x1_2
2439352   +          +     3.41388795688866 * H1x1_3  +     3.30305437699117 * H1x1_4
2439353   +          +    -1.49237136034665 * H1x1_5  +    -1.64329313023006 * H1x1_6
2439354   +          +     3.08746595768905 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = -2.28576277725334 * H1x1_1 + -0.32249555333061 * H1x1_2 + 
3.41388795688866 * H1x1_3 + 3.30305437699117 * H1x1_4 + -1.49237136034665 * H1x1_5 + 
-1.64329313023006 * H1x1_6 + 3.08746595768905 * H1x1_7 ;
2439355   +   H2x1_1  = H2x1_1  +    -2.56424783943845 * H1x2_1
2439356   +          +    -1.00213973107436 * H1x2_2  +    -0.47445930434013 * H1x2_3
2439357   +          +    -1.62372689856618 * H1x2_4  +     -1.1856250348479 * H1x2_5
2439358   +          +     0.04266758405533 * H1x2_6  +    -0.60071538153471 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.56424783943845 * H1x2_1 + -1.00213973107436 * 
H1x2_2 + -0.47445930434013 * H1x2_3 + -1.62372689856618 * H1x2_4 + -1.1856250348479 * H1x2_5 + 
0.04266758405533 * H1x2_6 + -0.60071538153471 * H1x2_7 ;
2439359   +   H2x1_2  = H2x1_2  +     0.00935939453146 * H1x2_1
2439360   +          +     0.55542862749222 * H1x2_2  +     -0.6066128025675 * H1x2_3
2439361   +          +    -0.53196514301497 * H1x2_4  +    -1.40549473181231 * H1x2_5
2439362   +          +    -0.08595621526876 * H1x2_6  +    -1.03953618328756 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.00935939453146 * H1x2_1 + 0.55542862749222 * H1x2_2 
+ -0.6066128025675 * H1x2_3 + -0.53196514301497 * H1x2_4 + -1.40549473181231 * H1x2_5 + 
-0.08595621526876 * H1x2_6 + -1.03953618328756 * H1x2_7 ;
2439363   +   H2x1_3  = H2x1_3  +    -1.41069312035355 * H1x2_1
2439364   +          +     0.56124490780446 * H1x2_2  +    -0.00472279335297 * H1x2_3
2439365   +          +    -1.10441771442377 * H1x2_4  +    -0.27090019786185 * H1x2_5
2439366   +          +    -0.15206855618217 * H1x2_6  +     -1.6035395520507 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -1.41069312035355 * H1x2_1 + 0.56124490780446 * H1x2_2 
+ -0.00472279335297 * H1x2_3 + -1.10441771442377 * H1x2_4 + -0.27090019786185 * H1x2_5 + 
-0.15206855618217 * H1x2_6 + -1.6035395520507 * H1x2_7 ;
2439367   +   H2x1_4  = H2x1_4  +    -0.55045399339183 * H1x2_1
2439368   +          +     0.02477552373088 * H1x2_2  +     0.19400769235958 * H1x2_3
2439369   +          +    -0.38264537483702 * H1x2_4  +     0.63479720884458 * H1x2_5
2439370   +          +    -0.60194629301645 * H1x2_6  +    -0.83490097285651 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + -0.55045399339183 * H1x2_1 + 0.02477552373088 * H1x2_2 
+ 0.19400769235958 * H1x2_3 + -0.38264537483702 * H1x2_4 + 0.63479720884458 * H1x2_5 + 
-0.60194629301645 * H1x2_6 + -0.83490097285651 * H1x2_7 ;
2439371   +   H2x1_5  = H2x1_5  +    -1.03176133074695 * H1x2_1
2439372   +          +    -0.59926889064506 * H1x2_2  +    -1.07077012847053 * H1x2_3
2439373   +          +    -1.18998920291096 * H1x2_4  +     0.39150574258439 * H1x2_5
2439374   +          +     0.05580574741832 * H1x2_6  +    -0.32272109045259 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + -1.03176133074695 * H1x2_1 + -0.59926889064506 * 
H1x2_2 + -1.07077012847053 * H1x2_3 + -1.18998920291096 * H1x2_4 + 0.39150574258439 * H1x2_5 + 
0.05580574741832 * H1x2_6 + -0.32272109045259 * H1x2_7 ;
2439375   +   H2x1_6  = H2x1_6  +    -0.61952040538587 * H1x2_1
2439376   +          +     0.35510185028829 * H1x2_2  +    -0.23901935720129 * H1x2_3
2439377   +          +     0.31752417497209 * H1x2_4  +    -1.20101515562967 * H1x2_5
2439378   +          +     0.95004398218762 * H1x2_6  +    -0.60363955740244 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + -0.61952040538587 * H1x2_1 + 0.35510185028829 * H1x2_2 
+ -0.23901935720129 * H1x2_3 + 0.31752417497209 * H1x2_4 + -1.20101515562967 * H1x2_5 + 
0.95004398218762 * H1x2_6 + -0.60363955740244 * H1x2_7 ;
2439379   +   H2x1_1  = H2x1_1  +     0.74378922258523 * H1x3_1
2439380   +          +      0.4693103426831 * H1x3_2  +     0.82071786194731 * H1x3_3
2439381   +          +     0.46432194238141 * H1x3_4  +    -1.39760250161206 * H1x3_5
2439382   +          +     0.68725250578779 * H1x3_6  +    -0.98986331205144 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.74378922258523 * H1x3_1 + 0.4693103426831 * H1x3_2 + 
0.82071786194731 * H1x3_3 + 0.46432194238141 * H1x3_4 + -1.39760250161206 * H1x3_5 + 
0.68725250578779 * H1x3_6 + -0.98986331205144 * H1x3_7 ;
2439383   +   H2x1_2  = H2x1_2  +     0.48406734142754 * H1x3_1
2439384   +          +     1.24032575331626 * H1x3_2  +     0.10072816620895 * H1x3_3
2439385   +          +     -2.4915795108808 * H1x3_4  +    -1.20085587739472 * H1x3_5
2439386   +          +     2.57480977795816 * H1x3_6  +    -0.36127801521801 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.48406734142754 * H1x3_1 + 1.24032575331626 * H1x3_2 
+ 0.10072816620895 * H1x3_3 + -2.4915795108808 * H1x3_4 + -1.20085587739472 * H1x3_5 + 
2.57480977795816 * H1x3_6 + -0.36127801521801 * H1x3_7 ;
2439387   +   H2x1_3  = H2x1_3  +    -0.29392518978638 * H1x3_1
2439388   +          +     0.02884163093827 * H1x3_2  +     -0.7595494999576 * H1x3_3
2439389   +          +     0.32536537321799 * H1x3_4  +    -0.01283695014976 * H1x3_5
2439390   +          +     0.76895275927405 * H1x3_6  +     -0.2802859993784 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + -0.29392518978638 * H1x3_1 + 0.02884163093827 * H1x3_2 
+ -0.7595494999576 * H1x3_3 + 0.32536537321799 * H1x3_4 + -0.01283695014976 * H1x3_5 + 
0.76895275927405 * H1x3_6 + -0.2802859993784 * H1x3_7 ;
2439391   +   H2x1_4  = H2x1_4  +     2.19833784150068 * H1x3_1
2439392   +          +     0.25528651098746 * H1x3_2  +    -0.72296156297186 * H1x3_3
2439393   +          +    -0.14360138590872 * H1x3_4  +     0.77657569331577 * H1x3_5
2439394   +          +    -1.57969278343415 * H1x3_6  +    -0.92288304588247 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 2.19833784150068 * H1x3_1 + 0.25528651098746 * H1x3_2 
+ -0.72296156297186 * H1x3_3 + -0.14360138590872 * H1x3_4 + 0.77657569331577 * H1x3_5 + 
-1.57969278343415 * H1x3_6 + -0.92288304588247 * H1x3_7 ;
2439395   +   H2x1_5  = H2x1_5  +     2.11753865409831 * H1x3_1
2439396   +          +     0.83654766112935 * H1x3_2  +     0.97472534941535 * H1x3_3
2439397   +          +     1.35030042962655 * H1x3_4  +     1.24680664824079 * H1x3_5
2439398   +          +     0.19234112612264 * H1x3_6  +    -0.90680244689294 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 2.11753865409831 * H1x3_1 + 0.83654766112935 * H1x3_2 
+ 0.97472534941535 * H1x3_3 + 1.35030042962655 * H1x3_4 + 1.24680664824079 * H1x3_5 + 
0.19234112612264 * H1x3_6 + -0.90680244689294 * H1x3_7 ;
2439399   +   H2x1_6  = H2x1_6  +     2.07923724911848 * H1x3_1
2439400   +          +     1.62526758922217 * H1x3_2  +    -0.68837627923045 * H1x3_3
2439401   +          +    -0.21127837456631 * H1x3_4  +    -1.47138526111866 * H1x3_5
2439402   +          +    -0.52275521204408 * H1x3_6  +    -0.36639952580044 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 + 2.07923724911848 * H1x3_1 + 1.62526758922217 * H1x3_2 
+ -0.68837627923045 * H1x3_3 + -0.21127837456631 * H1x3_4 + -1.47138526111866 * H1x3_5 + 
-0.52275521204408 * H1x3_6 + -0.36639952580044 * H1x3_7 ;
2439403   +   H2x1_1  =    -1.05059672372056 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.05059672372056 + H2x1_1 ;
2439404   +   H2x1_2  =    -1.18404209429335 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = -1.18404209429335 + H2x1_2 ;
2439405   +   H2x1_3  =    -0.76285494175137 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -0.76285494175137 + H2x1_3 ;
2439406   +   H2x1_4  =     2.22362261707253 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = 2.22362261707253 + H2x1_4 ;
2439407   +   H2x1_5  =    -0.98793149966854 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -0.98793149966854 + H2x1_5 ;
2439408   +   H2x1_6  =     1.51370254076672 + H2x1_6 ;
MPRINT(EM_DIAGRAM):   H2x1_6 = 1.51370254076672 + H2x1_6 ;
2439409   +   H2x1_7  = 0;
MPRINT(EM_DIAGRAM):   H2x1_7 = 0;
2439410   +   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , H2x1_7
2439411   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x1_1 , H2x1_2 , H2x1_3 , H2x1_4 , H2x1_5 , H2x1_6 , 
H2x1_7 );
2439412   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2439413   +   H2x1_1  = EXP(H2x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_1 = EXP(H2x1_1 - _MAX_);
2439414   +   _SUM_ = _SUM_ + H2x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_1 ;
2439415   +   H2x1_2  = EXP(H2x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_2 = EXP(H2x1_2 - _MAX_);
2439416   +   _SUM_ = _SUM_ + H2x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_2 ;
2439417   +   H2x1_3  = EXP(H2x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_3 = EXP(H2x1_3 - _MAX_);
2439418   +   _SUM_ = _SUM_ + H2x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_3 ;
2439419   +   H2x1_4  = EXP(H2x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_4 = EXP(H2x1_4 - _MAX_);
2439420   +   _SUM_ = _SUM_ + H2x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_4 ;
2439421   +   H2x1_5  = EXP(H2x1_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_5 = EXP(H2x1_5 - _MAX_);
2439422   +   _SUM_ = _SUM_ + H2x1_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_5 ;
2439423   +   H2x1_6  = EXP(H2x1_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_6 = EXP(H2x1_6 - _MAX_);
2439424   +   _SUM_ = _SUM_ + H2x1_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_6 ;
2439425   +   H2x1_7  = EXP(H2x1_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x1_7 = EXP(H2x1_7 - _MAX_);
2439426   +   _SUM_ = _SUM_ + H2x1_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x1_7 ;
2439427   +   H2x1_1  = H2x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 / _SUM_;
2439428   +   H2x1_2  = H2x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 / _SUM_;
2439429   +   H2x1_3  = H2x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 / _SUM_;
2439430   +   H2x1_4  = H2x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 / _SUM_;
2439431   +   H2x1_5  = H2x1_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 / _SUM_;
2439432   +   H2x1_6  = H2x1_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_6 = H2x1_6 / _SUM_;
2439433   +   H2x1_7  = H2x1_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x1_7 = H2x1_7 / _SUM_;
2439434   +END;
MPRINT(EM_DIAGRAM):   END;
2439435   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2439436   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2439437   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2439438   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2439439   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2439440   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2439441   +   H2x1_6  = .;
MPRINT(EM_DIAGRAM):   H2x1_6 = .;
2439442   +   H2x1_7  = .;
MPRINT(EM_DIAGRAM):   H2x1_7 = .;
2439443   +END;
MPRINT(EM_DIAGRAM):   END;
2439444   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439445   +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
2439446   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439447   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2439448   +   H2x2_1  =    -0.47079896252387 * H1x1_1  +      0.6132734714958 * H1x1_2
2439449   +          +     1.50300753820512 * H1x1_3  +     -0.1812621169129 * H1x1_4
2439450   +          +    -0.18531614991208 * H1x1_5  +     -0.2905105845089 * H1x1_6
2439451   +          +     1.33158539183491 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.47079896252387 * H1x1_1 + 0.6132734714958 * H1x1_2 + 
1.50300753820512 * H1x1_3 + -0.1812621169129 * H1x1_4 + -0.18531614991208 * H1x1_5 + 
-0.2905105845089 * H1x1_6 + 1.33158539183491 * H1x1_7 ;
2439452   +   H2x2_2  =    -1.90834701790953 * H1x1_1  +      0.6177658514697 * H1x1_2
2439453   +          +     0.36465199316418 * H1x1_3  +     0.85911870587838 * H1x1_4
2439454   +          +     0.02147610114602 * H1x1_5  +     0.32326590534391 * H1x1_6
2439455   +          +    -1.04241581652278 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -1.90834701790953 * H1x1_1 + 0.6177658514697 * H1x1_2 + 
0.36465199316418 * H1x1_3 + 0.85911870587838 * H1x1_4 + 0.02147610114602 * H1x1_5 + 
0.32326590534391 * H1x1_6 + -1.04241581652278 * H1x1_7 ;
2439456   +   H2x2_3  =       0.471130277999 * H1x1_1  +     0.96694465336161 * H1x1_2
2439457   +          +       0.141582035067 * H1x1_3  +     0.53325844993783 * H1x1_4
2439458   +          +     -0.0659115060565 * H1x1_5  +     0.38141753021852 * H1x1_6
2439459   +          +    -1.14139437080586 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.471130277999 * H1x1_1 + 0.96694465336161 * H1x1_2 + 
0.141582035067 * H1x1_3 + 0.53325844993783 * H1x1_4 + -0.0659115060565 * H1x1_5 + 
0.38141753021852 * H1x1_6 + -1.14139437080586 * H1x1_7 ;
2439460   +   H2x2_4  =     0.97070926632973 * H1x1_1  +    -0.13619191199121 * H1x1_2
2439461   +          +       0.111155554391 * H1x1_3  +    -0.50119055939436 * H1x1_4
2439462   +          +     -0.4478264228864 * H1x1_5  +    -0.07373167561096 * H1x1_6
2439463   +          +    -0.48838853015257 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = 0.97070926632973 * H1x1_1 + -0.13619191199121 * H1x1_2 + 
0.111155554391 * H1x1_3 + -0.50119055939436 * H1x1_4 + -0.4478264228864 * H1x1_5 + 
-0.07373167561096 * H1x1_6 + -0.48838853015257 * H1x1_7 ;
2439464   +   H2x2_5  =    -0.97151785477215 * H1x1_1  +     0.21189203541458 * H1x1_2
2439465   +          +    -0.19596886882434 * H1x1_3  +      1.3474130560719 * H1x1_4
2439466   +          +     1.73119417991798 * H1x1_5  +    -0.03726270753922 * H1x1_6
2439467   +          +    -1.41850405567364 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.97151785477215 * H1x1_1 + 0.21189203541458 * H1x1_2 + 
-0.19596886882434 * H1x1_3 + 1.3474130560719 * H1x1_4 + 1.73119417991798 * H1x1_5 + 
-0.03726270753922 * H1x1_6 + -1.41850405567364 * H1x1_7 ;
2439468   +   H2x2_6  =     0.64188298957992 * H1x1_1  +     0.87835723870887 * H1x1_2
2439469   +          +     0.65705195530326 * H1x1_3  +    -1.37039626769544 * H1x1_4
2439470   +          +    -0.32238737127781 * H1x1_5  +     0.33986547881641 * H1x1_6
2439471   +          +    -0.39788950643812 * H1x1_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = 0.64188298957992 * H1x1_1 + 0.87835723870887 * H1x1_2 + 
0.65705195530326 * H1x1_3 + -1.37039626769544 * H1x1_4 + -0.32238737127781 * H1x1_5 + 
0.33986547881641 * H1x1_6 + -0.39788950643812 * H1x1_7 ;
2439472   +   H2x2_1  = H2x2_1  +    -0.69934298550944 * H1x2_1
2439473   +          +    -0.34972890643898 * H1x2_2  +     0.13067071374168 * H1x2_3
2439474   +          +    -0.35163870866778 * H1x2_4  +     0.68739106758866 * H1x2_5
2439475   +          +    -0.13482628170329 * H1x2_6  +    -0.03659282127619 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -0.69934298550944 * H1x2_1 + -0.34972890643898 * 
H1x2_2 + 0.13067071374168 * H1x2_3 + -0.35163870866778 * H1x2_4 + 0.68739106758866 * H1x2_5 + 
-0.13482628170329 * H1x2_6 + -0.03659282127619 * H1x2_7 ;
2439476   +   H2x2_2  = H2x2_2  +    -0.16537065948373 * H1x2_1
2439477   +          +     1.88602375412723 * H1x2_2  +     0.00246313998608 * H1x2_3
2439478   +          +    -0.38678545162214 * H1x2_4  +     1.62314892910576 * H1x2_5
2439479   +          +     1.14369813266427 * H1x2_6  +    -0.04547589616076 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.16537065948373 * H1x2_1 + 1.88602375412723 * H1x2_2 
+ 0.00246313998608 * H1x2_3 + -0.38678545162214 * H1x2_4 + 1.62314892910576 * H1x2_5 + 
1.14369813266427 * H1x2_6 + -0.04547589616076 * H1x2_7 ;
2439480   +   H2x2_3  = H2x2_3  +     0.25040248389011 * H1x2_1
2439481   +          +    -1.56534319969402 * H1x2_2  +     0.07686150326519 * H1x2_3
2439482   +          +     -0.9279505919723 * H1x2_4  +    -0.40426942169792 * H1x2_5
2439483   +          +      0.0625082015929 * H1x2_6  +    -1.06140294711643 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + 0.25040248389011 * H1x2_1 + -1.56534319969402 * H1x2_2 
+ 0.07686150326519 * H1x2_3 + -0.9279505919723 * H1x2_4 + -0.40426942169792 * H1x2_5 + 
0.0625082015929 * H1x2_6 + -1.06140294711643 * H1x2_7 ;
2439484   +   H2x2_4  = H2x2_4  +     -0.4384763018657 * H1x2_1
2439485   +          +    -1.45966734038116 * H1x2_2  +      -2.034771072409 * H1x2_3
2439486   +          +    -0.09055740067076 * H1x2_4  +     1.51504299287048 * H1x2_5
2439487   +          +     0.15439799867788 * H1x2_6  +    -1.11828371545771 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + -0.4384763018657 * H1x2_1 + -1.45966734038116 * H1x2_2 
+ -2.034771072409 * H1x2_3 + -0.09055740067076 * H1x2_4 + 1.51504299287048 * H1x2_5 + 
0.15439799867788 * H1x2_6 + -1.11828371545771 * H1x2_7 ;
2439488   +   H2x2_5  = H2x2_5  +     1.25750321874643 * H1x2_1
2439489   +          +    -0.65639925770112 * H1x2_2  +     -1.7659580690496 * H1x2_3
2439490   +          +       0.375442412611 * H1x2_4  +     0.00802128415855 * H1x2_5
2439491   +          +     0.75342656671485 * H1x2_6  +     1.64939805941174 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + 1.25750321874643 * H1x2_1 + -0.65639925770112 * H1x2_2 
+ -1.7659580690496 * H1x2_3 + 0.375442412611 * H1x2_4 + 0.00802128415855 * H1x2_5 + 
0.75342656671485 * H1x2_6 + 1.64939805941174 * H1x2_7 ;
2439492   +   H2x2_6  = H2x2_6  +     1.32293752617916 * H1x2_1
2439493   +          +     0.48969975153948 * H1x2_2  +    -0.72928783660254 * H1x2_3
2439494   +          +     0.84727905047749 * H1x2_4  +     0.04670520107938 * H1x2_5
2439495   +          +     2.02862934142232 * H1x2_6  +    -0.56510756043393 * H1x2_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 1.32293752617916 * H1x2_1 + 0.48969975153948 * H1x2_2 
+ -0.72928783660254 * H1x2_3 + 0.84727905047749 * H1x2_4 + 0.04670520107938 * H1x2_5 + 
2.02862934142232 * H1x2_6 + -0.56510756043393 * H1x2_7 ;
2439496   +   H2x2_1  = H2x2_1  +       1.744725276854 * H1x3_1
2439497   +          +     0.13060858789431 * H1x3_2  +    -0.96737787454303 * H1x3_3
2439498   +          +    -0.33966254732699 * H1x3_4  +     2.39360262119688 * H1x3_5
2439499   +          +     2.58016170780679 * H1x3_6  +    -0.61611732156494 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 1.744725276854 * H1x3_1 + 0.13060858789431 * H1x3_2 + 
-0.96737787454303 * H1x3_3 + -0.33966254732699 * H1x3_4 + 2.39360262119688 * H1x3_5 + 
2.58016170780679 * H1x3_6 + -0.61611732156494 * H1x3_7 ;
2439500   +   H2x2_2  = H2x2_2  +    -0.81180308935434 * H1x3_1
2439501   +          +    -1.15566778124471 * H1x3_2  +     0.08550916456261 * H1x3_3
2439502   +          +     0.54919117407314 * H1x3_4  +     0.18927188150893 * H1x3_5
2439503   +          +    -0.15464567766004 * H1x3_6  +     0.22152383228096 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -0.81180308935434 * H1x3_1 + -1.15566778124471 * 
H1x3_2 + 0.08550916456261 * H1x3_3 + 0.54919117407314 * H1x3_4 + 0.18927188150893 * H1x3_5 + 
-0.15464567766004 * H1x3_6 + 0.22152383228096 * H1x3_7 ;
2439504   +   H2x2_3  = H2x2_3  +    -0.57155391194888 * H1x3_1
2439505   +          +    -0.80109748621438 * H1x3_2  +     -1.0755749661031 * H1x3_3
2439506   +          +     1.03082070302539 * H1x3_4  +    -2.00320570042417 * H1x3_5
2439507   +          +    -1.96298435256616 * H1x3_6  +     1.02097262601001 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 + -0.57155391194888 * H1x3_1 + -0.80109748621438 * 
H1x3_2 + -1.0755749661031 * H1x3_3 + 1.03082070302539 * H1x3_4 + -2.00320570042417 * H1x3_5 + 
-1.96298435256616 * H1x3_6 + 1.02097262601001 * H1x3_7 ;
2439508   +   H2x2_4  = H2x2_4  +     0.24801772968599 * H1x3_1
2439509   +          +    -2.13175914157416 * H1x3_2  +    -0.52172370749235 * H1x3_3
2439510   +          +     2.04158456409986 * H1x3_4  +     1.02332318578438 * H1x3_5
2439511   +          +      -0.428263055638 * H1x3_6  +    -0.10602300040145 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 + 0.24801772968599 * H1x3_1 + -2.13175914157416 * H1x3_2 
+ -0.52172370749235 * H1x3_3 + 2.04158456409986 * H1x3_4 + 1.02332318578438 * H1x3_5 + 
-0.428263055638 * H1x3_6 + -0.10602300040145 * H1x3_7 ;
2439512   +   H2x2_5  = H2x2_5  +    -1.00177979562809 * H1x3_1
2439513   +          +    -0.45285333413007 * H1x3_2  +    -0.35882884863392 * H1x3_3
2439514   +          +     0.23001711273663 * H1x3_4  +     0.77235765656369 * H1x3_5
2439515   +          +    -0.04383242140243 * H1x3_6  +    -0.25926963615252 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 + -1.00177979562809 * H1x3_1 + -0.45285333413007 * 
H1x3_2 + -0.35882884863392 * H1x3_3 + 0.23001711273663 * H1x3_4 + 0.77235765656369 * H1x3_5 + 
-0.04383242140243 * H1x3_6 + -0.25926963615252 * H1x3_7 ;
2439516   +   H2x2_6  = H2x2_6  +     0.84797826043534 * H1x3_1
2439517   +          +    -0.46927154831713 * H1x3_2  +    -1.09865845985096 * H1x3_3
2439518   +          +     0.59699123454307 * H1x3_4  +     1.59564014754161 * H1x3_5
2439519   +          +     1.33413776227036 * H1x3_6  +     0.33047800872361 * H1x3_7 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 + 0.84797826043534 * H1x3_1 + -0.46927154831713 * H1x3_2 
+ -1.09865845985096 * H1x3_3 + 0.59699123454307 * H1x3_4 + 1.59564014754161 * H1x3_5 + 
1.33413776227036 * H1x3_6 + 0.33047800872361 * H1x3_7 ;
2439520   +   H2x2_1  =    -3.05344936388855 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -3.05344936388855 + H2x2_1 ;
2439521   +   H2x2_2  =     0.31382645894355 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = 0.31382645894355 + H2x2_2 ;
2439522   +   H2x2_3  =     0.31718668306888 + H2x2_3 ;
MPRINT(EM_DIAGRAM):   H2x2_3 = 0.31718668306888 + H2x2_3 ;
2439523   +   H2x2_4  =    -0.72340666209054 + H2x2_4 ;
MPRINT(EM_DIAGRAM):   H2x2_4 = -0.72340666209054 + H2x2_4 ;
2439524   +   H2x2_5  =    -0.59585228872544 + H2x2_5 ;
MPRINT(EM_DIAGRAM):   H2x2_5 = -0.59585228872544 + H2x2_5 ;
2439525   +   H2x2_6  =    -1.34027540207713 + H2x2_6 ;
MPRINT(EM_DIAGRAM):   H2x2_6 = -1.34027540207713 + H2x2_6 ;
2439526   +   H2x2_7  = 0;
MPRINT(EM_DIAGRAM):   H2x2_7 = 0;
2439527   +   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , H2x2_7
2439528   +         );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H2x2_1 , H2x2_2 , H2x2_3 , H2x2_4 , H2x2_5 , H2x2_6 , 
H2x2_7 );
2439529   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2439530   +   H2x2_1  = EXP(H2x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_1 = EXP(H2x2_1 - _MAX_);
2439531   +   _SUM_ = _SUM_ + H2x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_1 ;
2439532   +   H2x2_2  = EXP(H2x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_2 = EXP(H2x2_2 - _MAX_);
2439533   +   _SUM_ = _SUM_ + H2x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_2 ;
2439534   +   H2x2_3  = EXP(H2x2_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_3 = EXP(H2x2_3 - _MAX_);
2439535   +   _SUM_ = _SUM_ + H2x2_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_3 ;
2439536   +   H2x2_4  = EXP(H2x2_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_4 = EXP(H2x2_4 - _MAX_);
2439537   +   _SUM_ = _SUM_ + H2x2_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_4 ;
2439538   +   H2x2_5  = EXP(H2x2_5  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_5 = EXP(H2x2_5 - _MAX_);
2439539   +   _SUM_ = _SUM_ + H2x2_5 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_5 ;
2439540   +   H2x2_6  = EXP(H2x2_6  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_6 = EXP(H2x2_6 - _MAX_);
2439541   +   _SUM_ = _SUM_ + H2x2_6 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_6 ;
2439542   +   H2x2_7  = EXP(H2x2_7  - _MAX_);
MPRINT(EM_DIAGRAM):   H2x2_7 = EXP(H2x2_7 - _MAX_);
2439543   +   _SUM_ = _SUM_ + H2x2_7 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H2x2_7 ;
2439544   +   H2x2_1  = H2x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 / _SUM_;
2439545   +   H2x2_2  = H2x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 / _SUM_;
2439546   +   H2x2_3  = H2x2_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_3 = H2x2_3 / _SUM_;
2439547   +   H2x2_4  = H2x2_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_4 = H2x2_4 / _SUM_;
2439548   +   H2x2_5  = H2x2_5  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_5 = H2x2_5 / _SUM_;
2439549   +   H2x2_6  = H2x2_6  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_6 = H2x2_6 / _SUM_;
2439550   +   H2x2_7  = H2x2_7  / _SUM_;
MPRINT(EM_DIAGRAM):   H2x2_7 = H2x2_7 / _SUM_;
2439551   +END;
MPRINT(EM_DIAGRAM):   END;
2439552   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2439553   +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
2439554   +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
2439555   +   H2x2_3  = .;
MPRINT(EM_DIAGRAM):   H2x2_3 = .;
2439556   +   H2x2_4  = .;
MPRINT(EM_DIAGRAM):   H2x2_4 = .;
2439557   +   H2x2_5  = .;
MPRINT(EM_DIAGRAM):   H2x2_5 = .;
2439558   +   H2x2_6  = .;
MPRINT(EM_DIAGRAM):   H2x2_6 = .;
2439559   +   H2x2_7  = .;
MPRINT(EM_DIAGRAM):   H2x2_7 = .;
2439560   +END;
MPRINT(EM_DIAGRAM):   END;
2439561   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439562   +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
2439563   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439564   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2439565   +   H3x1_1  =    -0.39436867680464 * H2x1_1  +    -0.20604911710368 * H2x1_2
2439566   +          +     0.29458107927185 * H2x1_3  +     0.66102662477481 * H2x1_4
2439567   +          +     0.62143406345506 * H2x1_5  +     2.63969484891539 * H2x1_6
2439568   +          +     2.03785323055294 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.39436867680464 * H2x1_1 + -0.20604911710368 * H2x1_2 + 
0.29458107927185 * H2x1_3 + 0.66102662477481 * H2x1_4 + 0.62143406345506 * H2x1_5 + 
2.63969484891539 * H2x1_6 + 2.03785323055294 * H2x1_7 ;
2439569   +   H3x1_2  =     0.14668618790671 * H2x1_1  +     0.53251535375334 * H2x1_2
2439570   +          +     1.73802487245889 * H2x1_3  +    -0.48818058655944 * H2x1_4
2439571   +          +     -0.6987810213409 * H2x1_5  +     1.61216865707221 * H2x1_6
2439572   +          +     0.02086486846601 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0.14668618790671 * H2x1_1 + 0.53251535375334 * H2x1_2 + 
1.73802487245889 * H2x1_3 + -0.48818058655944 * H2x1_4 + -0.6987810213409 * H2x1_5 + 
1.61216865707221 * H2x1_6 + 0.02086486846601 * H2x1_7 ;
2439573   +   H3x1_3  =    -1.14054963328594 * H2x1_1  +    -0.75433574423253 * H2x1_2
2439574   +          +     0.06268113862558 * H2x1_3  +     -0.3981826777811 * H2x1_4
2439575   +          +    -0.04081627474016 * H2x1_5  +    -0.18547979458266 * H2x1_6
2439576   +          +     0.40248247309716 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = -1.14054963328594 * H2x1_1 + -0.75433574423253 * H2x1_2 + 
0.06268113862558 * H2x1_3 + -0.3981826777811 * H2x1_4 + -0.04081627474016 * H2x1_5 + 
-0.18547979458266 * H2x1_6 + 0.40248247309716 * H2x1_7 ;
2439577   +   H3x1_4  =    -0.41046431364634 * H2x1_1  +     0.53558649664528 * H2x1_2
2439578   +          +     0.25426413492282 * H2x1_3  +     2.32537388539524 * H2x1_4
2439579   +          +    -0.95624400041487 * H2x1_5  +     -2.1423043357326 * H2x1_6
2439580   +          +     0.70189203885946 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.41046431364634 * H2x1_1 + 0.53558649664528 * H2x1_2 + 
0.25426413492282 * H2x1_3 + 2.32537388539524 * H2x1_4 + -0.95624400041487 * H2x1_5 + 
-2.1423043357326 * H2x1_6 + 0.70189203885946 * H2x1_7 ;
2439581   +   H3x1_5  =    -0.21139932639331 * H2x1_1  +      0.8853172209881 * H2x1_2
2439582   +          +    -0.23025284278478 * H2x1_3  +     1.30433450594503 * H2x1_4
2439583   +          +     1.26145590014333 * H2x1_5  +     0.63126627865104 * H2x1_6
2439584   +          +    -1.88455429451452 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -0.21139932639331 * H2x1_1 + 0.8853172209881 * H2x1_2 + 
-0.23025284278478 * H2x1_3 + 1.30433450594503 * H2x1_4 + 1.26145590014333 * H2x1_5 + 
0.63126627865104 * H2x1_6 + -1.88455429451452 * H2x1_7 ;
2439585   +   H3x1_6  =     0.99645242104414 * H2x1_1  +    -0.17835964967148 * H2x1_2
2439586   +          +     0.06539648561603 * H2x1_3  +     0.97412284078325 * H2x1_4
2439587   +          +     -1.3247680635275 * H2x1_5  +      0.8723025918678 * H2x1_6
2439588   +          +    -0.04328836172134 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.99645242104414 * H2x1_1 + -0.17835964967148 * H2x1_2 + 
0.06539648561603 * H2x1_3 + 0.97412284078325 * H2x1_4 + -1.3247680635275 * H2x1_5 + 
0.8723025918678 * H2x1_6 + -0.04328836172134 * H2x1_7 ;
2439589   +   H3x1_7  =     2.66887548952929 * H2x1_1  +    -0.86289888310949 * H2x1_2
2439590   +          +     1.58137421487648 * H2x1_3  +    -1.37105839507635 * H2x1_4
2439591   +          +    -0.65069986041129 * H2x1_5  +     2.50322156288062 * H2x1_6
2439592   +          +     0.75157328436087 * H2x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = 2.66887548952929 * H2x1_1 + -0.86289888310949 * H2x1_2 + 
1.58137421487648 * H2x1_3 + -1.37105839507635 * H2x1_4 + -0.65069986041129 * H2x1_5 + 
2.50322156288062 * H2x1_6 + 0.75157328436087 * H2x1_7 ;
2439593   +   H3x1_1  = H3x1_1  +     1.55317132694755 * H2x2_1
2439594   +          +     1.75656976582641 * H2x2_2  +    -1.25361089552085 * H2x2_3
2439595   +          +    -0.52984461837677 * H2x2_4  +     1.29915117873447 * H2x2_5
2439596   +          +    -1.03942372926622 * H2x2_6  +     0.13722887717178 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.55317132694755 * H2x2_1 + 1.75656976582641 * H2x2_2 
+ -1.25361089552085 * H2x2_3 + -0.52984461837677 * H2x2_4 + 1.29915117873447 * H2x2_5 + 
-1.03942372926622 * H2x2_6 + 0.13722887717178 * H2x2_7 ;
2439597   +   H3x1_2  = H3x1_2  +     0.88902418392614 * H2x2_1
2439598   +          +     1.35198205638356 * H2x2_2  +     1.49845421410078 * H2x2_3
2439599   +          +    -1.22318137674998 * H2x2_4  +     1.03485654068494 * H2x2_5
2439600   +          +    -0.88760495649169 * H2x2_6  +    -1.94135868960024 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 + 0.88902418392614 * H2x2_1 + 1.35198205638356 * H2x2_2 
+ 1.49845421410078 * H2x2_3 + -1.22318137674998 * H2x2_4 + 1.03485654068494 * H2x2_5 + 
-0.88760495649169 * H2x2_6 + -1.94135868960024 * H2x2_7 ;
2439601   +   H3x1_3  = H3x1_3  +     -0.5232166311723 * H2x2_1
2439602   +          +    -0.49154441995792 * H2x2_2  +     1.21222773866672 * H2x2_3
2439603   +          +     0.88954765096374 * H2x2_4  +     0.32666743913318 * H2x2_5
2439604   +          +     1.26201705110892 * H2x2_6  +    -2.46564869578322 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = H3x1_3 + -0.5232166311723 * H2x2_1 + -0.49154441995792 * H2x2_2 
+ 1.21222773866672 * H2x2_3 + 0.88954765096374 * H2x2_4 + 0.32666743913318 * H2x2_5 + 
1.26201705110892 * H2x2_6 + -2.46564869578322 * H2x2_7 ;
2439605   +   H3x1_4  = H3x1_4  +     0.93897688204524 * H2x2_1
2439606   +          +    -0.56396325682963 * H2x2_2  +     0.60312223662348 * H2x2_3
2439607   +          +     0.05506195666559 * H2x2_4  +    -1.19478701476792 * H2x2_5
2439608   +          +     1.11111060864544 * H2x2_6  +     0.07602420470068 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = H3x1_4 + 0.93897688204524 * H2x2_1 + -0.56396325682963 * H2x2_2 
+ 0.60312223662348 * H2x2_3 + 0.05506195666559 * H2x2_4 + -1.19478701476792 * H2x2_5 + 
1.11111060864544 * H2x2_6 + 0.07602420470068 * H2x2_7 ;
2439609   +   H3x1_5  = H3x1_5  +    -2.04067007195299 * H2x2_1
2439610   +          +    -0.24511447740547 * H2x2_2  +      1.1403782608351 * H2x2_3
2439611   +          +     0.28313253531571 * H2x2_4  +    -0.31001305293935 * H2x2_5
2439612   +          +     1.43972694265244 * H2x2_6  +     0.27081966717726 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = H3x1_5 + -2.04067007195299 * H2x2_1 + -0.24511447740547 * 
H2x2_2 + 1.1403782608351 * H2x2_3 + 0.28313253531571 * H2x2_4 + -0.31001305293935 * H2x2_5 + 
1.43972694265244 * H2x2_6 + 0.27081966717726 * H2x2_7 ;
2439613   +   H3x1_6  = H3x1_6  +     1.53918759970091 * H2x2_1
2439614   +          +    -1.36834652818881 * H2x2_2  +    -0.97354088259421 * H2x2_3
2439615   +          +     0.73052173697294 * H2x2_4  +     1.34716412811946 * H2x2_5
2439616   +          +     1.66261041249676 * H2x2_6  +    -0.99719318696356 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = H3x1_6 + 1.53918759970091 * H2x2_1 + -1.36834652818881 * H2x2_2 
+ -0.97354088259421 * H2x2_3 + 0.73052173697294 * H2x2_4 + 1.34716412811946 * H2x2_5 + 
1.66261041249676 * H2x2_6 + -0.99719318696356 * H2x2_7 ;
2439617   +   H3x1_7  = H3x1_7  +     1.11994694673604 * H2x2_1
2439618   +          +     -1.6803356528873 * H2x2_2  +    -0.12962793678977 * H2x2_3
2439619   +          +    -0.71896094589725 * H2x2_4  +     0.46037684620833 * H2x2_5
2439620   +          +     0.25911483872618 * H2x2_6  +     1.00876479730932 * H2x2_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = H3x1_7 + 1.11994694673604 * H2x2_1 + -1.6803356528873 * H2x2_2 
+ -0.12962793678977 * H2x2_3 + -0.71896094589725 * H2x2_4 + 0.46037684620833 * H2x2_5 + 
0.25911483872618 * H2x2_6 + 1.00876479730932 * H2x2_7 ;
2439621   +   H3x1_1  =     1.52228889950912 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.52228889950912 + H3x1_1 ;
2439622   +   H3x1_2  =    -0.46625781761332 + H3x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_2 = -0.46625781761332 + H3x1_2 ;
2439623   +   H3x1_3  =     0.11008388635615 + H3x1_3 ;
MPRINT(EM_DIAGRAM):   H3x1_3 = 0.11008388635615 + H3x1_3 ;
2439624   +   H3x1_4  =    -0.38333236869719 + H3x1_4 ;
MPRINT(EM_DIAGRAM):   H3x1_4 = -0.38333236869719 + H3x1_4 ;
2439625   +   H3x1_5  =    -1.36620648378402 + H3x1_5 ;
MPRINT(EM_DIAGRAM):   H3x1_5 = -1.36620648378402 + H3x1_5 ;
2439626   +   H3x1_6  =     0.41780608126276 + H3x1_6 ;
MPRINT(EM_DIAGRAM):   H3x1_6 = 0.41780608126276 + H3x1_6 ;
2439627   +   H3x1_7  =    -0.69490040783623 + H3x1_7 ;
MPRINT(EM_DIAGRAM):   H3x1_7 = -0.69490040783623 + H3x1_7 ;
2439628   +   H3x1_1  = SIN(H3x1_1 );
MPRINT(EM_DIAGRAM):   H3x1_1 = SIN(H3x1_1 );
2439629   +   H3x1_2  = SIN(H3x1_2 );
MPRINT(EM_DIAGRAM):   H3x1_2 = SIN(H3x1_2 );
2439630   +   H3x1_3  = SIN(H3x1_3 );
MPRINT(EM_DIAGRAM):   H3x1_3 = SIN(H3x1_3 );
2439631   +   H3x1_4  = SIN(H3x1_4 );
MPRINT(EM_DIAGRAM):   H3x1_4 = SIN(H3x1_4 );
2439632   +   H3x1_5  = SIN(H3x1_5 );
MPRINT(EM_DIAGRAM):   H3x1_5 = SIN(H3x1_5 );
2439633   +   H3x1_6  = SIN(H3x1_6 );
MPRINT(EM_DIAGRAM):   H3x1_6 = SIN(H3x1_6 );
2439634   +   H3x1_7  = SIN(H3x1_7 );
MPRINT(EM_DIAGRAM):   H3x1_7 = SIN(H3x1_7 );
2439635   +END;
MPRINT(EM_DIAGRAM):   END;
2439636   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2439637   +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
2439638   +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
2439639   +   H3x1_3  = .;
MPRINT(EM_DIAGRAM):   H3x1_3 = .;
2439640   +   H3x1_4  = .;
MPRINT(EM_DIAGRAM):   H3x1_4 = .;
2439641   +   H3x1_5  = .;
MPRINT(EM_DIAGRAM):   H3x1_5 = .;
2439642   +   H3x1_6  = .;
MPRINT(EM_DIAGRAM):   H3x1_6 = .;
2439643   +   H3x1_7  = .;
MPRINT(EM_DIAGRAM):   H3x1_7 = .;
2439644   +END;
MPRINT(EM_DIAGRAM):   END;
2439645   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439646   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2439647   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439648   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2439649   +   P_DepVar1  =    -2.07102874283902 * H3x1_1  +     2.04799607124649 * H3x1_2
2439650   +          +    -0.05444449856749 * H3x1_3  +    -3.76440287030853 * H3x1_4
2439651   +          +    -0.62776678498994 * H3x1_5  +    -1.00383135301243 * H3x1_6
2439652   +          +     2.26027843968818 * H3x1_7 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.07102874283902 * H3x1_1 + 2.04799607124649 * H3x1_2 + 
-0.05444449856749 * H3x1_3 + -3.76440287030853 * H3x1_4 + -0.62776678498994 * H3x1_5 + 
-1.00383135301243 * H3x1_6 + 2.26027843968818 * H3x1_7 ;
2439653   +   P_DepVar1  =     0.51137297979162 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.51137297979162 + P_DepVar1 ;
2439654   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2439655   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2439656   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2439657   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2439658   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2439659   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2439660   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2439661   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2439662   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2439663   +END;
MPRINT(EM_DIAGRAM):   END;
2439664   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2439665   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2439666   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2439667   +END;
MPRINT(EM_DIAGRAM):   END;
2439668   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2439669   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2439670   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2439671   +END;
MPRINT(EM_DIAGRAM):   END;
2439672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439673   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2439674   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2439675   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2439676   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2439677   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2439678   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2439679   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2439680   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2439681   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2439682   +END;
MPRINT(EM_DIAGRAM):   END;
2439683   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2439684   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2439685   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2439686   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2439687    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2439688    quit;
2439689    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2439690    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2439691    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2439692    retain ID 2 Node "AutoNeural12";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural12";
2439693    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2439694    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16616 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16616 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2439695    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2439696    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2439697    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 16616 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16616 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2439698    proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural12_variableset out=_temp2(keep=NAME 
CREATOR);
2439699    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2439700    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL12_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2439701    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2439702    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2439703    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2439704    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2439705    proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural12_train out=_meta(keep=NAME) noprint;
2439706    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 95 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2439707    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2439708    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2439709    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 95 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 95 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2439710    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2439711    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2439712    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2439713    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 95 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 95 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2439714    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2439715    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2439715  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 8011 rows and 5 columns.

2439716    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2439717    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2439718    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 8011 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 8011 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2439719    filename _pref
2439719  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2439720    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2439721    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2439722   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2439723   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2439724   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2439725   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2439726   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2439727   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2439728    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2439729    quit;
2439730    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2439731    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2439732    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2439733    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2439734    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2439735    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2439736    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2439737    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2439738    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2439739    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2439740    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2439741    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2439742    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2439743    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2439744    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2439745    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2439746    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2439747    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2439748    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2439749    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2439750    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2439751    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2439752    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2439753    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2439754    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2439755    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2439756    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2439756  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2439757    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2439758    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2439759    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 8015 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2439760    filename _pref
2439760  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2439761    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2439762    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2439763   +
2439764   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2439765   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2439765  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2439766   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2439767   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2439768   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2439769   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2439770   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2439771    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2439772    quit;
2439773    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2439774    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2439775    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2439776    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2439777    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2439778    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2439779    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2439780    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2439781    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2439782    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2439783    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2439784    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2439785    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2439786    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2439787    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2439788    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2439789    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2439790    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2439791    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2439792    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2439793    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2439794    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2439795    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2439796    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2439797    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2439798    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2439799    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2439799  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2439800    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2439801    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2439802    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 8054 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2439803    filename _pref
2439803  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2439804    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2439805    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2439806   +
2439807   +
2439808   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2439809   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2439810   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2439811   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2439812   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2439813   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2439814   +
2439815   +
2439816   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2439817   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2439818   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2439819   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2439820   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2439821   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2439822   +
2439823   +
2439824   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2439825   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2439826   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2439827   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2439828   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2439829   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2439830   +
2439831   +
2439832   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2439833   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2439834   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2439835   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2439836   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2439837   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2439838   +
2439839   +
2439840   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2439841   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2439842   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2439843   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2439844   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2439845   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2439846   +
2439847   +
2439848   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2439849   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2439850   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2439851   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2439852   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2439853   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2439854   +
2439855   +
2439856   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2439857   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2439858   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2439859   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2439860   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2439861   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2439862   +
2439863   +
2439864   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2439865   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2439866   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2439867   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2439868   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2439869   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2439870   +if
2439871   +_FILTERNORM1 not in ( '.')
2439872   + and
2439873   +_FILTERNORM2 not in ( '.')
2439874   + and
2439875   +_FILTERNORM3 not in ( '.')
2439876   + and
2439877   +_FILTERNORM4 not in ( '.')
2439878   + and
2439879   +_FILTERNORM5 not in ( '.')
2439880   + and
2439881   +_FILTERNORM6 not in ( '.')
2439882   + and
2439883   +_FILTERNORM7 not in ( ' ')
2439884   + and
2439885   +_FILTERNORM8 not in ( ' ')
2439886   +and
2439887   +( Dt_Customer ne .)
2439888   +and ( Income ne . and (Income<=107000))
2439889   +and ( Kidhome ne .)
2439890   +and ( MntFishProducts ne .)
2439891   +and ( MntFruits ne .)
2439892   +and ( MntGoldProds ne .)
2439893   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2439894   +and ( MntSweetProducts ne .)
2439895   +and ( MntWines ne .)
2439896   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2439897   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2439898   +and ( NumStorePurchases ne .)
2439899   +and ( NumWebPurchases ne .)
2439900   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2439901   +and ( Recency ne .)
2439902   +and ( Teenhome ne .)
2439903   +and ( Year_Birth ne .)
2439904   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2439905   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2439906   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2439907   +end;
MPRINT(EM_DIAGRAM):   end;
2439908   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2439909   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2439910    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2439911    quit;
2439912    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2439913    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2439914    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2439915    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2439916    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2439917    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2439918    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2439919    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2439920    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2439921    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2439922    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2439923    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2439924    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2439925    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2439926    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2439927    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2439928    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2439929    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2439930    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2439931    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2439932    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2439933    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2439934    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2439935    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2439936    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2439937    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2439938    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2439938  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2439939    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2439940    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2439941    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 8120 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2439942    %macro varDept(fcmpdata=,id=);
2439943    %global nobs&id scoreFlag&id;
2439944    %let scoreFlag&id = 0;
2439945    %if &id=1 or ^&fcmpStart %then %do;
2439946    proc sort data=&fcmpdata out=_temp&id nodupkey;
2439947    by NAME;
2439948    where id=&id and LHS in( %let j=1;
2439949    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2439950    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2439951    "&var" %let j = %eval(&j+1);
2439952    %end;
2439953    );
2439954    run;
2439955    %let dsid = %sysfunc(open(_temp&id));
2439956    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2439957    %let dsid = %sysfunc(close(&dsid));
2439958    %if &&nobs&id %then %do;
2439959    %let scoreFlag&id = 1;
2439960    %let fcmpStart = 1;
2439961    %end;
2439962    %else %let fcmpStart = 0;
2439963    %end;
2439964    %else %do;
2439965    proc sort data=&fcmpdata out=_tempid;
2439966    where id=&id;
2439967    by LHS;
2439968    run;
2439969    %let dsid = %sysfunc(open(_tempid));
2439970    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2439971    %let dsid = %sysfunc(close(&dsid));
2439972    %if ^&&nobs&id %then %do;
2439973    proc datasets lib=work nolist;
2439974    delete _tempid;
2439975    run;
2439976    quit;
2439977    %end;
2439978    %else %do;
2439979    data _tempAll;
2439980    set %let j=%eval(&id-1);
2439981    %do x=1 %to &j;
2439982    %if &&nobs&x %then %do;
2439983    _temp&x %end;
2439984    %end;
2439985    ;
2439986    run;
2439987    proc sql;
2439988    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2439988  ! work._tempid p2 where p.name=p2.lhs;
2439989    quit;
2439990    data _temp&id;
2439991    set _temp&id;
2439992    where LHS ne '' and NAME ne '' and Node ne '';
2439993    run;
2439994    proc datasets lib=work nolist;
2439995    delete _tempAll;
2439996    run;
2439997    %let dsid = %sysfunc(open(_temp&id));
2439998    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2439999    %let dsid = %sysfunc(close(&dsid));
2440000    %if ^&&nobs&id %then %do;
2440001    proc datasets lib=work nolist;
2440002    delete _temp&id;
2440003    run;
2440004    quit;
2440005    %end;
2440006    %else %do;
2440007    %let scoreFlag&id = 1;
2440008    data _temp&id;
2440009    set _temp&id;
2440010    where LHS ne NAME and node ne '';
2440011    run;
2440012    %let dsid = %sysfunc(open(_temp&id));
2440013    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2440014    %let dsid = %sysfunc(close(&dsid));
2440015    %if ^&&nobs&id %then %do;
2440016    proc datasets lib=work nolist;
2440017    delete _temp&id;
2440018    run;
2440019    quit;
2440020    %end;
2440021    %else %do;
2440022    proc sort data=_temp&id nodupkey;
2440023    by LHS NAME;
2440024    run;
2440025    %end;
2440026    %end;
2440027    %end;
2440028    %end;
2440029    %mend varDept;
2440030    %macro optCode(outdata=fcmpdata);
2440031    %global fcmpStart;
2440032    %let fcmpStart = 0;
2440033    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2440034    %let NumNodes=9;
2440035    %do k=1 %to &NumNodes;
2440036    %vardept(fcmpdata=&outdata, id=&k);
2440037    %end;
2440038    %mend optCode;
2440039    %optcode(outData=EMWS8.Ensmbl45_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 260 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 184 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 76 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 76 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 76 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 76 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 80 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 76 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 119 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.17 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2440040    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2440041    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2440042    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2440043    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440044    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2440045    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2440046    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2440047    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440048    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2440049    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2440049  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2440050    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440051    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2440052    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2440053    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2440054    filename _pref
2440054  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas";
2440055    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2440056    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural7\EMPUBLISHSCORE.sas.
2440057   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2440058   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2440059   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2440060   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2440061   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2440062   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2440063   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2440064   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2440065   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2440066   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2440067   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2440068   +LENGTH _WARN_ $4
2440069   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2440070   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2440071   +
2440072   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2440073   +
2440074   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2440075   +
2440076   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2440077   +
2440078   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2440079   +
2440080   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2440081   +
2440082   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2440083   +
2440084   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2440085   +
2440086   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2440087   +
2440088   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2440089   +
2440090   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2440091   +
2440092   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2440093   +
2440094   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2440095   +
2440096   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2440097   +
2440098   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2440099   +
2440100   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2440101   +
2440102   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2440103   +
2440104   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2440105   +
2440106   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2440107   +
2440108   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2440109   +
2440110   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2440111   +
2440112   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2440113   +
2440114   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2440115   +
2440116   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2440117   +
2440118   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2440119   +
2440120   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2440121   +
2440122   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2440123   +
2440124   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2440125   +
2440126   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2440127   +
2440128   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2440129   +
2440130   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2440131   +
2440132   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2440133   +
2440134   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2440135   +
2440136   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2440137   +
2440138   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2440139   +
2440140   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2440141   +
2440142   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2440143   +
2440144   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2440145   +
2440146   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2440147   +
2440148   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2440149   +
2440150   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2440151   +
2440152   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2440153   +
2440154   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2440155   +
2440156   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2440157   +
2440158   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2440159   +
2440160   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2440161   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2440162   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2440163   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2440164   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2440165   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440166   +end;
MPRINT(EM_DIAGRAM):   end;
2440167   +else do;
MPRINT(EM_DIAGRAM):   else do;
2440168   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2440169   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2440170   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2440171   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2440172   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2440173   +   end;
MPRINT(EM_DIAGRAM):   end;
2440174   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2440175   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2440176   +   end;
MPRINT(EM_DIAGRAM):   end;
2440177   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2440178   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2440179   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2440180   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440181   +   end;
MPRINT(EM_DIAGRAM):   end;
2440182   +end;
MPRINT(EM_DIAGRAM):   end;
2440183   +
2440184   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2440185   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2440186   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2440187   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2440188   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2440189   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440190   +end;
MPRINT(EM_DIAGRAM):   end;
2440191   +else do;
MPRINT(EM_DIAGRAM):   else do;
2440192   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2440193   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2440194   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2440195   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2440196   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2440197   +   end;
MPRINT(EM_DIAGRAM):   end;
2440198   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2440199   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2440200   +   end;
MPRINT(EM_DIAGRAM):   end;
2440201   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2440202   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2440203   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2440204   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440205   +   end;
MPRINT(EM_DIAGRAM):   end;
2440206   +end;
MPRINT(EM_DIAGRAM):   end;
2440207   +
2440208   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2440209   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2440210   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2440211   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2440212   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2440213   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440214   +end;
MPRINT(EM_DIAGRAM):   end;
2440215   +else do;
MPRINT(EM_DIAGRAM):   else do;
2440216   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2440217   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2440218   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2440219   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2440220   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2440221   +   end;
MPRINT(EM_DIAGRAM):   end;
2440222   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2440223   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2440224   +   end;
MPRINT(EM_DIAGRAM):   end;
2440225   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2440226   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2440227   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2440228   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440229   +   end;
MPRINT(EM_DIAGRAM):   end;
2440230   +end;
MPRINT(EM_DIAGRAM):   end;
2440231   +
2440232   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2440233   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2440234   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2440235   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2440236   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2440237   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440238   +end;
MPRINT(EM_DIAGRAM):   end;
2440239   +else do;
MPRINT(EM_DIAGRAM):   else do;
2440240   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2440241   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2440242   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2440243   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2440244   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2440245   +   end;
MPRINT(EM_DIAGRAM):   end;
2440246   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2440247   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2440248   +   end;
MPRINT(EM_DIAGRAM):   end;
2440249   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2440250   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2440251   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2440252   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440253   +   end;
MPRINT(EM_DIAGRAM):   end;
2440254   +end;
MPRINT(EM_DIAGRAM):   end;
2440255   +
2440256   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2440257   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2440258   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2440259   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2440260   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2440261   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440262   +end;
MPRINT(EM_DIAGRAM):   end;
2440263   +else do;
MPRINT(EM_DIAGRAM):   else do;
2440264   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2440265   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2440266   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2440267   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2440268   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2440269   +   end;
MPRINT(EM_DIAGRAM):   end;
2440270   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2440271   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2440272   +   end;
MPRINT(EM_DIAGRAM):   end;
2440273   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2440274   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2440275   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2440276   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440277   +   end;
MPRINT(EM_DIAGRAM):   end;
2440278   +end;
MPRINT(EM_DIAGRAM):   end;
2440279   +
2440280   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2440281   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2440282   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2440283   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2440284   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2440285   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440286   +end;
MPRINT(EM_DIAGRAM):   end;
2440287   +else do;
MPRINT(EM_DIAGRAM):   else do;
2440288   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2440289   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2440290   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2440291   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2440292   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2440293   +   end;
MPRINT(EM_DIAGRAM):   end;
2440294   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2440295   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2440296   +   end;
MPRINT(EM_DIAGRAM):   end;
2440297   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2440298   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2440299   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2440300   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440301   +   end;
MPRINT(EM_DIAGRAM):   end;
2440302   +end;
MPRINT(EM_DIAGRAM):   end;
2440303   +
2440304   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2440305   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2440306   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2440307   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2440308   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2440309   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440310   +end;
MPRINT(EM_DIAGRAM):   end;
2440311   +else do;
MPRINT(EM_DIAGRAM):   else do;
2440312   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2440313   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2440314   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2440315   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2440316   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2440317   +   end;
MPRINT(EM_DIAGRAM):   end;
2440318   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2440319   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2440320   +   end;
MPRINT(EM_DIAGRAM):   end;
2440321   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2440322   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2440323   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2440324   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440325   +   end;
MPRINT(EM_DIAGRAM):   end;
2440326   +end;
MPRINT(EM_DIAGRAM):   end;
2440327   +
2440328   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2440329   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2440330   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2440331   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2440332   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2440333   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2440334   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2440335   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2440336   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2440337   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2440338   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2440339   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2440340   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2440341   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440342   +end;
MPRINT(EM_DIAGRAM):   end;
2440343   +else do;
MPRINT(EM_DIAGRAM):   else do;
2440344   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2440345   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2440346   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2440347   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2440348   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2440349   +   end;
MPRINT(EM_DIAGRAM):   end;
2440350   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2440351   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2440352   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2440353   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2440354   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2440355   +   end;
MPRINT(EM_DIAGRAM):   end;
2440356   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2440357   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2440358   +   end;
MPRINT(EM_DIAGRAM):   end;
2440359   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2440360   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2440361   +   end;
MPRINT(EM_DIAGRAM):   end;
2440362   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2440363   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2440364   +   end;
MPRINT(EM_DIAGRAM):   end;
2440365   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2440366   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2440367   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2440368   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2440369   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2440370   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2440371   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440372   +   end;
MPRINT(EM_DIAGRAM):   end;
2440373   +end;
MPRINT(EM_DIAGRAM):   end;
2440374   +
2440375   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2440376   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2440377   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2440378   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2440379   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2440380   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2440381   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2440382   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2440383   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2440384   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2440385   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2440386   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2440387   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2440388   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2440389   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440390   +end;
MPRINT(EM_DIAGRAM):   end;
2440391   +else do;
MPRINT(EM_DIAGRAM):   else do;
2440392   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2440393   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2440394   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2440395   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2440396   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2440397   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2440398   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2440399   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2440400   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2440401   +         end;
MPRINT(EM_DIAGRAM):   end;
2440402   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2440403   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2440404   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2440405   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2440406   +            end;
MPRINT(EM_DIAGRAM):   end;
2440407   +         end;
MPRINT(EM_DIAGRAM):   end;
2440408   +      end;
MPRINT(EM_DIAGRAM):   end;
2440409   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2440410   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2440411   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2440412   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2440413   +         end;
MPRINT(EM_DIAGRAM):   end;
2440414   +      end;
MPRINT(EM_DIAGRAM):   end;
2440415   +   end;
MPRINT(EM_DIAGRAM):   end;
2440416   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2440417   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2440418   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2440419   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2440420   +      end;
MPRINT(EM_DIAGRAM):   end;
2440421   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2440422   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2440423   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2440424   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2440425   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2440426   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2440427   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2440428   +         end;
MPRINT(EM_DIAGRAM):   end;
2440429   +      end;
MPRINT(EM_DIAGRAM):   end;
2440430   +   end;
MPRINT(EM_DIAGRAM):   end;
2440431   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2440432   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2440433   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2440434   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2440435   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2440436   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2440437   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440438   +   end;
MPRINT(EM_DIAGRAM):   end;
2440439   +end;
MPRINT(EM_DIAGRAM):   end;
2440440   +
2440441   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440442   +*** Checking missing input Interval
2440443   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2440444   +
2440445   +IF NMISS(
2440446   +   AcceptedCmpTotal ,
2440447   +   Age ,
2440448   +   Frq ,
2440449   +   Income ,
2440450   +   Kidhome ,
2440451   +   Mnt ,
2440452   +   MntFishProducts ,
2440453   +   MntFruits ,
2440454   +   MntGoldProds ,
2440455   +   MntMeatProducts ,
2440456   +   MntSweetProducts ,
2440457   +   MntWines ,
2440458   +   MonthsAsCustomer ,
2440459   +   NumCatalogPurchases ,
2440460   +   NumDealsPurchases ,
2440461   +   NumDistPurchases ,
2440462   +   NumStorePurchases ,
2440463   +   NumWebPurchases ,
2440464   +   NumWebVisitsMonth ,
2440465   +   RFMstat ,
2440466   +   RMntFrq ,
2440467   +   Recency ,
2440468   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2440469   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2440470   +
2440471   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2440472   +END;
MPRINT(EM_DIAGRAM):   END;
2440473   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440474   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2440475   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440476   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2440477   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2440478   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2440479   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2440480   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2440481   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2440482   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2440483   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2440484   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2440485   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2440486   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2440487   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2440488   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2440489   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2440490   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2440491   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2440492   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2440493   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2440494   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2440495   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2440496   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2440497   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2440498   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2440499   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2440500   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2440501   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2440502   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2440503   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2440504   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2440505   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2440506   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2440507   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2440508   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2440509   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2440510   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2440511   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2440512   +END;
MPRINT(EM_DIAGRAM):   END;
2440513   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2440514   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2440515   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2440516   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2440517   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2440518   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2440519   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2440520   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2440521   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2440522   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2440523   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2440524   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2440525   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2440526   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2440527   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2440528   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2440529   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2440530   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2440531   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2440532   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2440533   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2440534   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2440535   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2440536   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2440537   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2440538   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2440539   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2440540   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2440541   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2440542   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2440543   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2440544   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2440545   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2440546   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2440547   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2440548   +   ELSE S_NumCatalogPurchases
2440549   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2440550   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2440551   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2440552   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2440553   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2440554   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2440555   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2440556   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2440557   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2440558   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2440559   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2440560   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2440561   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2440562   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2440563   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2440564   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2440565   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2440566   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2440567   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2440568   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2440569   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2440570   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2440571   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2440572   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2440573   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2440574   +END;
MPRINT(EM_DIAGRAM):   END;
2440575   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440576   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2440577   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440578   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440579   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2440580   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440581   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440582   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2440583   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440584   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2440585   +   H1x1_1  =     0.27051750628107 * S_AcceptedCmpTotal
2440586   +          +    -0.01552488999587 * S_Age  +    -0.19918933236131 * S_Frq
2440587   +          +    -0.18053367989037 * S_Income  +     0.17934470816975 *
2440588   +        S_Kidhome  +    -0.27914859130186 * S_Mnt  +    -0.05331142159606 *
2440589   +        S_MntFishProducts  +    -0.03730503814111 * S_MntFruits
2440590   +          +     0.01217897476566 * S_MntGoldProds  +       0.241005967683 *
2440591   +        S_MntMeatProducts  +    -0.02873172523867 * S_MntSweetProducts
2440592   +          +    -0.35773732926132 * S_MntWines  +    -0.00800625524539 *
2440593   +        S_MonthsAsCustomer  +     0.14253720708201 * S_NumCatalogPurchases
2440594   +          +     0.09634439105648 * S_NumDealsPurchases
2440595   +          +     -0.2727389064287 * S_NumDistPurchases
2440596   +          +    -0.14179871978162 * S_NumStorePurchases
2440597   +          +     0.11008049559527 * S_NumWebPurchases
2440598   +          +    -0.16791463027749 * S_NumWebVisitsMonth
2440599   +          +     0.12827091331546 * S_RFMstat  +    -0.05819422771336 *
2440600   +        S_RMntFrq  +     0.17192522504917 * S_Recency
2440601   +          +     0.13379709932247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.27051750628107 * S_AcceptedCmpTotal + -0.01552488999587 * 
S_Age + -0.19918933236131 * S_Frq + -0.18053367989037 * S_Income + 0.17934470816975 * 
S_Kidhome + -0.27914859130186 * S_Mnt + -0.05331142159606 * S_MntFishProducts + 
-0.03730503814111 * S_MntFruits + 0.01217897476566 * S_MntGoldProds + 0.241005967683 * 
S_MntMeatProducts + -0.02873172523867 * S_MntSweetProducts + -0.35773732926132 * S_MntWines + 
-0.00800625524539 * S_MonthsAsCustomer + 0.14253720708201 * S_NumCatalogPurchases + 
0.09634439105648 * S_NumDealsPurchases + -0.2727389064287 * S_NumDistPurchases + 
-0.14179871978162 * S_NumStorePurchases + 0.11008049559527 * S_NumWebPurchases + 
-0.16791463027749 * S_NumWebVisitsMonth + 0.12827091331546 * S_RFMstat + -0.05819422771336 * 
S_RMntFrq + 0.17192522504917 * S_Recency + 0.13379709932247 * S_Teenhome ;
2440602   +   H1x1_2  =      0.2625003002792 * S_AcceptedCmpTotal
2440603   +          +    -0.00409648963127 * S_Age  +    -0.08422560024107 * S_Frq
2440604   +          +      0.1678148652095 * S_Income  +      -0.122580580609 *
2440605   +        S_Kidhome  +    -0.41368311141801 * S_Mnt  +     -0.0649787838725 *
2440606   +        S_MntFishProducts  +    -0.06363287766971 * S_MntFruits
2440607   +          +     0.00810850196464 * S_MntGoldProds  +      0.2984971941271 *
2440608   +        S_MntMeatProducts  +     -0.0651075315757 * S_MntSweetProducts
2440609   +          +    -0.42717799596572 * S_MntWines  +    -0.00945771129633 *
2440610   +        S_MonthsAsCustomer  +     0.33346839008681 * S_NumCatalogPurchases
2440611   +          +     0.15835936877168 * S_NumDealsPurchases
2440612   +          +     0.04229992769587 * S_NumDistPurchases
2440613   +          +    -0.04051362547639 * S_NumStorePurchases
2440614   +          +    -0.01791546488406 * S_NumWebPurchases
2440615   +          +     0.28833008597045 * S_NumWebVisitsMonth
2440616   +          +     0.08007709098478 * S_RFMstat  +     0.37677948418886 *
2440617   +        S_RMntFrq  +    -0.32542265112765 * S_Recency
2440618   +          +    -0.10763248273834 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.2625003002792 * S_AcceptedCmpTotal + -0.00409648963127 * 
S_Age + -0.08422560024107 * S_Frq + 0.1678148652095 * S_Income + -0.122580580609 * S_Kidhome + 
-0.41368311141801 * S_Mnt + -0.0649787838725 * S_MntFishProducts + -0.06363287766971 * 
S_MntFruits + 0.00810850196464 * S_MntGoldProds + 0.2984971941271 * S_MntMeatProducts + 
-0.0651075315757 * S_MntSweetProducts + -0.42717799596572 * S_MntWines + -0.00945771129633 * 
S_MonthsAsCustomer + 0.33346839008681 * S_NumCatalogPurchases + 0.15835936877168 * 
S_NumDealsPurchases + 0.04229992769587 * S_NumDistPurchases + -0.04051362547639 * 
S_NumStorePurchases + -0.01791546488406 * S_NumWebPurchases + 0.28833008597045 * 
S_NumWebVisitsMonth + 0.08007709098478 * S_RFMstat + 0.37677948418886 * S_RMntFrq + 
-0.32542265112765 * S_Recency + -0.10763248273834 * S_Teenhome ;
2440619   +   H1x1_1  = H1x1_1  +     0.17927888078386 * AcceptedCmp10
2440620   +          +       0.309097592234 * AcceptedCmp20  +     0.30005706470617 *
2440621   +        AcceptedCmp30  +     0.30534843193785 * AcceptedCmp40
2440622   +          +     0.19575142296602 * AcceptedCmp50  +    -0.26930325741881 *
2440623   +        Complain0  +    -0.07193220591551 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.17927888078386 * AcceptedCmp10 + 0.309097592234 * 
AcceptedCmp20 + 0.30005706470617 * AcceptedCmp30 + 0.30534843193785 * AcceptedCmp40 + 
0.19575142296602 * AcceptedCmp50 + -0.26930325741881 * Complain0 + -0.07193220591551 * 
HigherEducationBinary0 ;
2440624   +   H1x1_2  = H1x1_2  +     0.01282806481889 * AcceptedCmp10
2440625   +          +     0.01542710847454 * AcceptedCmp20  +     0.03576476827309 *
2440626   +        AcceptedCmp30  +     0.04230610697529 * AcceptedCmp40
2440627   +          +     0.03405078302469 * AcceptedCmp50  +     0.13002166919554 *
2440628   +        Complain0  +    -0.08203696285033 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.01282806481889 * AcceptedCmp10 + 0.01542710847454 * 
AcceptedCmp20 + 0.03576476827309 * AcceptedCmp30 + 0.04230610697529 * AcceptedCmp40 + 
0.03405078302469 * AcceptedCmp50 + 0.13002166919554 * Complain0 + -0.08203696285033 * 
HigherEducationBinary0 ;
2440629   +   H1x1_1  = H1x1_1  +    -0.04471063478028 * Education2n_Cycle
2440630   +          +     0.15571809437849 * EducationBasic  +    -0.00113978624206 *
2440631   +        EducationGraduation  +     0.00750750981266 * EducationMaster
2440632   +          +     -0.0504367274898 * Marital_StatusDivorced
2440633   +          +     0.28345714390306 * Marital_StatusMarried
2440634   +          +     -0.2012923780435 * Marital_StatusSingle
2440635   +          +     0.20022167903492 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.04471063478028 * Education2n_Cycle + 
0.15571809437849 * EducationBasic + -0.00113978624206 * EducationGraduation + 0.00750750981266 
* EducationMaster + -0.0504367274898 * Marital_StatusDivorced + 0.28345714390306 * 
Marital_StatusMarried + -0.2012923780435 * Marital_StatusSingle + 0.20022167903492 * 
Marital_StatusTogether ;
2440636   +   H1x1_2  = H1x1_2  +     0.12691361812265 * Education2n_Cycle
2440637   +          +       0.003205191831 * EducationBasic  +    -0.04323354449955 *
2440638   +        EducationGraduation  +    -0.06699429239126 * EducationMaster
2440639   +          +     0.06828937261262 * Marital_StatusDivorced
2440640   +          +     -0.1520862543536 * Marital_StatusMarried
2440641   +          +      0.1392808464716 * Marital_StatusSingle
2440642   +          +    -0.12406922875482 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.12691361812265 * Education2n_Cycle + 0.003205191831 
* EducationBasic + -0.04323354449955 * EducationGraduation + -0.06699429239126 * 
EducationMaster + 0.06828937261262 * Marital_StatusDivorced + -0.1520862543536 * 
Marital_StatusMarried + 0.1392808464716 * Marital_StatusSingle + -0.12406922875482 * 
Marital_StatusTogether ;
2440643   +   H1x1_1  =     0.89722634972069 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.89722634972069 + H1x1_1 ;
2440644   +   H1x1_2  =     -0.5979471913364 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5979471913364 + H1x1_2 ;
2440645   +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
2440646   +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
2440647   +END;
MPRINT(EM_DIAGRAM):   END;
2440648   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2440649   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2440650   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2440651   +END;
MPRINT(EM_DIAGRAM):   END;
2440652   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440653   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2440654   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440655   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2440656   +   P_DepVar1  =     -11.533020189097 * H1x1_1  +     17.2320065402955 * H1x1_2
2440657   +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -11.533020189097 * H1x1_1 + 17.2320065402955 * H1x1_2 ;
2440658   +   P_DepVar1  =     2.37722840752042 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.37722840752042 + P_DepVar1 ;
2440659   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2440660   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2440661   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2440662   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2440663   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2440664   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2440665   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2440666   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2440667   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2440668   +END;
MPRINT(EM_DIAGRAM):   END;
2440669   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2440670   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2440671   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2440672   +END;
MPRINT(EM_DIAGRAM):   END;
2440673   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2440674   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2440675   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2440676   +END;
MPRINT(EM_DIAGRAM):   END;
2440677   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440678   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2440679   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2440680   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2440681   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2440682   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2440683   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2440684   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2440685   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2440686   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2440687   +END;
MPRINT(EM_DIAGRAM):   END;
2440688   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2440689   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2440690   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2440691   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2440692    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2440693    quit;
2440694    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2440695    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2440696    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2440697    retain ID 2 Node "AutoNeural7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural7";
2440698    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2440699    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440700    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2440701    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440702    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2180 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2180 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2440703    proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural7_variableset out=_temp2(keep=NAME 
CREATOR);
2440704    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440705    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440706    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2440707    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2440708    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2440709    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2440710    proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural7_train out=_meta(keep=NAME) noprint;
2440711    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2440712    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2440713    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440714    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2440715    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2440716    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2440717    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440718    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440719    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2440720    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2440720  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1359 rows and 5 columns.

2440721    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2440722    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2440723    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1359 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1359 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440724    filename _pref
2440724  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2440725    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2440726    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2440727   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2440728   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2440729   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2440730   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2440731   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2440732   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2440733    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2440734    quit;
2440735    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2440736    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2440737    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2440738    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2440739    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2440740    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440741    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2440742    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440743    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440744    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2440745    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440746    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440747    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2440748    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2440749    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2440750    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440751    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2440752    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2440753    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2440754    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440755    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440756    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2440757    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2440758    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440759    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2440760    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2440761    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2440761  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2440762    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440763    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2440764    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1363 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440765    filename _pref
2440765  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2440766    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2440767    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2440768   +
2440769   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2440770   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2440770  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2440771   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2440772   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2440773   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2440774   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2440775   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2440776    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2440777    quit;
2440778    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2440779    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2440780    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2440781    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2440782    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2440783    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2440784    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2440785    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440786    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440787    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2440788    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440789    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440790    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2440791    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2440792    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2440793    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2440794    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2440795    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440796    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2440797    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440798    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440799    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2440800    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2440801    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440802    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2440803    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2440804    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2440804  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2440805    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440806    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2440807    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1402 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440808    filename _pref
2440808  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2440809    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2440810    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2440811   +
2440812   +
2440813   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2440814   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2440815   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2440816   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2440817   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2440818   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2440819   +
2440820   +
2440821   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2440822   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2440823   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2440824   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2440825   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2440826   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2440827   +
2440828   +
2440829   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2440830   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2440831   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2440832   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2440833   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2440834   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2440835   +
2440836   +
2440837   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2440838   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2440839   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2440840   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2440841   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2440842   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2440843   +
2440844   +
2440845   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2440846   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2440847   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2440848   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2440849   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2440850   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2440851   +
2440852   +
2440853   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2440854   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2440855   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2440856   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2440857   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2440858   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2440859   +
2440860   +
2440861   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2440862   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2440863   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2440864   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2440865   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2440866   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2440867   +
2440868   +
2440869   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2440870   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2440871   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2440872   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2440873   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2440874   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2440875   +if
2440876   +_FILTERNORM1 not in ( '.')
2440877   + and
2440878   +_FILTERNORM2 not in ( '.')
2440879   + and
2440880   +_FILTERNORM3 not in ( '.')
2440881   + and
2440882   +_FILTERNORM4 not in ( '.')
2440883   + and
2440884   +_FILTERNORM5 not in ( '.')
2440885   + and
2440886   +_FILTERNORM6 not in ( '.')
2440887   + and
2440888   +_FILTERNORM7 not in ( ' ')
2440889   + and
2440890   +_FILTERNORM8 not in ( ' ')
2440891   +and
2440892   +( Dt_Customer ne .)
2440893   +and ( Income ne . and (Income<=107000))
2440894   +and ( Kidhome ne .)
2440895   +and ( MntFishProducts ne .)
2440896   +and ( MntFruits ne .)
2440897   +and ( MntGoldProds ne .)
2440898   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2440899   +and ( MntSweetProducts ne .)
2440900   +and ( MntWines ne .)
2440901   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2440902   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2440903   +and ( NumStorePurchases ne .)
2440904   +and ( NumWebPurchases ne .)
2440905   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2440906   +and ( Recency ne .)
2440907   +and ( Teenhome ne .)
2440908   +and ( Year_Birth ne .)
2440909   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2440910   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2440911   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2440912   +end;
MPRINT(EM_DIAGRAM):   end;
2440913   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2440914   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2440915    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2440916    quit;
2440917    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2440918    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2440919    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2440920    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2440921    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2440922    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440923    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2440924    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440925    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2440926    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2440927    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440928    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440929    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2440930    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2440931    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2440932    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440933    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2440934    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2440935    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2440936    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440937    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440938    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2440939    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2440940    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2440941    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2440942    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2440943    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2440943  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2440944    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440945    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2440946    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 1468 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2440947    %macro varDept(fcmpdata=,id=);
2440948    %global nobs&id scoreFlag&id;
2440949    %let scoreFlag&id = 0;
2440950    %if &id=1 or ^&fcmpStart %then %do;
2440951    proc sort data=&fcmpdata out=_temp&id nodupkey;
2440952    by NAME;
2440953    where id=&id and LHS in( %let j=1;
2440954    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2440955    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2440956    "&var" %let j = %eval(&j+1);
2440957    %end;
2440958    );
2440959    run;
2440960    %let dsid = %sysfunc(open(_temp&id));
2440961    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2440962    %let dsid = %sysfunc(close(&dsid));
2440963    %if &&nobs&id %then %do;
2440964    %let scoreFlag&id = 1;
2440965    %let fcmpStart = 1;
2440966    %end;
2440967    %else %let fcmpStart = 0;
2440968    %end;
2440969    %else %do;
2440970    proc sort data=&fcmpdata out=_tempid;
2440971    where id=&id;
2440972    by LHS;
2440973    run;
2440974    %let dsid = %sysfunc(open(_tempid));
2440975    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2440976    %let dsid = %sysfunc(close(&dsid));
2440977    %if ^&&nobs&id %then %do;
2440978    proc datasets lib=work nolist;
2440979    delete _tempid;
2440980    run;
2440981    quit;
2440982    %end;
2440983    %else %do;
2440984    data _tempAll;
2440985    set %let j=%eval(&id-1);
2440986    %do x=1 %to &j;
2440987    %if &&nobs&x %then %do;
2440988    _temp&x %end;
2440989    %end;
2440990    ;
2440991    run;
2440992    proc sql;
2440993    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2440993  ! work._tempid p2 where p.name=p2.lhs;
2440994    quit;
2440995    data _temp&id;
2440996    set _temp&id;
2440997    where LHS ne '' and NAME ne '' and Node ne '';
2440998    run;
2440999    proc datasets lib=work nolist;
2441000    delete _tempAll;
2441001    run;
2441002    %let dsid = %sysfunc(open(_temp&id));
2441003    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2441004    %let dsid = %sysfunc(close(&dsid));
2441005    %if ^&&nobs&id %then %do;
2441006    proc datasets lib=work nolist;
2441007    delete _temp&id;
2441008    run;
2441009    quit;
2441010    %end;
2441011    %else %do;
2441012    %let scoreFlag&id = 1;
2441013    data _temp&id;
2441014    set _temp&id;
2441015    where LHS ne NAME and node ne '';
2441016    run;
2441017    %let dsid = %sysfunc(open(_temp&id));
2441018    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2441019    %let dsid = %sysfunc(close(&dsid));
2441020    %if ^&&nobs&id %then %do;
2441021    proc datasets lib=work nolist;
2441022    delete _temp&id;
2441023    run;
2441024    quit;
2441025    %end;
2441026    %else %do;
2441027    proc sort data=_temp&id nodupkey;
2441028    by LHS NAME;
2441029    run;
2441030    %end;
2441031    %end;
2441032    %end;
2441033    %end;
2441034    %mend varDept;
2441035    %macro optCode(outdata=fcmpdata);
2441036    %global fcmpStart;
2441037    %let fcmpStart = 0;
2441038    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2441039    %let NumNodes=9;
2441040    %do k=1 %to &NumNodes;
2441041    %vardept(fcmpdata=&outdata, id=&k);
2441042    %end;
2441043    %mend optCode;
2441044    %optcode(outData=EMWS8.Ensmbl45_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 140 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 104 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 36 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 36 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 40 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 79 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2441045    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2441046    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2441047    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2441048    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2441049    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2441050    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2441051    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2441052    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2441053    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2441054    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2441054  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2441055    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

2441056    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2441057    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2441058    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2441059    filename _pref
2441059  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas";
2441060    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2441061    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural10\EMPUBLISHSCORE.sas.
2441062   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2441063   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
2441064   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
2441065   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
2441066   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
2441067   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
2441068   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
2441069   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
2441070   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
2441071   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
2441072   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
2441073   +LENGTH _WARN_ $4
2441074   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
2441075   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
2441076   +
2441077   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
2441078   +
2441079   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
2441080   +
2441081   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
2441082   +
2441083   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
2441084   +
2441085   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
2441086   +
2441087   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
2441088   +
2441089   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
2441090   +
2441091   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
2441092   +
2441093   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
2441094   +
2441095   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
2441096   +
2441097   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
2441098   +
2441099   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
2441100   +
2441101   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
2441102   +
2441103   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
2441104   +
2441105   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
2441106   +
2441107   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
2441108   +
2441109   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
2441110   +
2441111   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
2441112   +
2441113   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
2441114   +
2441115   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
2441116   +
2441117   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
2441118   +
2441119   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
2441120   +
2441121   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
2441122   +
2441123   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
2441124   +
2441125   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
2441126   +
2441127   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
2441128   +
2441129   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
2441130   +
2441131   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
2441132   +
2441133   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
2441134   +
2441135   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
2441136   +
2441137   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
2441138   +
2441139   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
2441140   +
2441141   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
2441142   +
2441143   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
2441144   +
2441145   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
2441146   +
2441147   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
2441148   +
2441149   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
2441150   +
2441151   +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
2441152   +
2441153   +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
2441154   +
2441155   +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
2441156   +
2441157   +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
2441158   +
2441159   +      label H1x1_5 = 'Hidden: H1x1_=5' ;
MPRINT(EM_DIAGRAM):   label H1x1_5 = 'Hidden: H1x1_=5' ;
2441160   +
2441161   +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
2441162   +
2441163   +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
2441164   +
2441165   +      label H1x2_3 = 'Hidden: H1x2_=3' ;
MPRINT(EM_DIAGRAM):   label H1x2_3 = 'Hidden: H1x2_=3' ;
2441166   +
2441167   +      label H1x2_4 = 'Hidden: H1x2_=4' ;
MPRINT(EM_DIAGRAM):   label H1x2_4 = 'Hidden: H1x2_=4' ;
2441168   +
2441169   +      label H1x2_5 = 'Hidden: H1x2_=5' ;
MPRINT(EM_DIAGRAM):   label H1x2_5 = 'Hidden: H1x2_=5' ;
2441170   +
2441171   +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
2441172   +
2441173   +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
2441174   +
2441175   +      label H2x1_3 = 'Hidden: H2x1_=3' ;
MPRINT(EM_DIAGRAM):   label H2x1_3 = 'Hidden: H2x1_=3' ;
2441176   +
2441177   +      label H2x1_4 = 'Hidden: H2x1_=4' ;
MPRINT(EM_DIAGRAM):   label H2x1_4 = 'Hidden: H2x1_=4' ;
2441178   +
2441179   +      label H2x1_5 = 'Hidden: H2x1_=5' ;
MPRINT(EM_DIAGRAM):   label H2x1_5 = 'Hidden: H2x1_=5' ;
2441180   +
2441181   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
2441182   +
2441183   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
2441184   +
2441185   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
2441186   +
2441187   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
2441188   +
2441189   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
2441190   +
2441191   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
2441192   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
2441193   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
2441194   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2441195   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2441196   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441197   +end;
MPRINT(EM_DIAGRAM):   end;
2441198   +else do;
MPRINT(EM_DIAGRAM):   else do;
2441199   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2441200   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
2441201   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2441202   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2441203   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
2441204   +   end;
MPRINT(EM_DIAGRAM):   end;
2441205   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2441206   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
2441207   +   end;
MPRINT(EM_DIAGRAM):   end;
2441208   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2441209   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
2441210   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2441211   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441212   +   end;
MPRINT(EM_DIAGRAM):   end;
2441213   +end;
MPRINT(EM_DIAGRAM):   end;
2441214   +
2441215   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
2441216   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
2441217   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
2441218   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2441219   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2441220   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441221   +end;
MPRINT(EM_DIAGRAM):   end;
2441222   +else do;
MPRINT(EM_DIAGRAM):   else do;
2441223   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2441224   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
2441225   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2441226   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2441227   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
2441228   +   end;
MPRINT(EM_DIAGRAM):   end;
2441229   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2441230   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
2441231   +   end;
MPRINT(EM_DIAGRAM):   end;
2441232   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2441233   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
2441234   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2441235   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441236   +   end;
MPRINT(EM_DIAGRAM):   end;
2441237   +end;
MPRINT(EM_DIAGRAM):   end;
2441238   +
2441239   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
2441240   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
2441241   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
2441242   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2441243   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2441244   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441245   +end;
MPRINT(EM_DIAGRAM):   end;
2441246   +else do;
MPRINT(EM_DIAGRAM):   else do;
2441247   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2441248   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
2441249   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2441250   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2441251   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
2441252   +   end;
MPRINT(EM_DIAGRAM):   end;
2441253   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2441254   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
2441255   +   end;
MPRINT(EM_DIAGRAM):   end;
2441256   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2441257   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
2441258   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2441259   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441260   +   end;
MPRINT(EM_DIAGRAM):   end;
2441261   +end;
MPRINT(EM_DIAGRAM):   end;
2441262   +
2441263   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
2441264   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
2441265   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
2441266   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2441267   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2441268   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441269   +end;
MPRINT(EM_DIAGRAM):   end;
2441270   +else do;
MPRINT(EM_DIAGRAM):   else do;
2441271   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2441272   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
2441273   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2441274   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2441275   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
2441276   +   end;
MPRINT(EM_DIAGRAM):   end;
2441277   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2441278   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
2441279   +   end;
MPRINT(EM_DIAGRAM):   end;
2441280   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2441281   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
2441282   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2441283   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441284   +   end;
MPRINT(EM_DIAGRAM):   end;
2441285   +end;
MPRINT(EM_DIAGRAM):   end;
2441286   +
2441287   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
2441288   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
2441289   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
2441290   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2441291   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2441292   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441293   +end;
MPRINT(EM_DIAGRAM):   end;
2441294   +else do;
MPRINT(EM_DIAGRAM):   else do;
2441295   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2441296   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
2441297   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2441298   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2441299   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
2441300   +   end;
MPRINT(EM_DIAGRAM):   end;
2441301   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2441302   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
2441303   +   end;
MPRINT(EM_DIAGRAM):   end;
2441304   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2441305   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
2441306   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2441307   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441308   +   end;
MPRINT(EM_DIAGRAM):   end;
2441309   +end;
MPRINT(EM_DIAGRAM):   end;
2441310   +
2441311   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
2441312   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
2441313   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
2441314   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2441315   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2441316   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441317   +end;
MPRINT(EM_DIAGRAM):   end;
2441318   +else do;
MPRINT(EM_DIAGRAM):   else do;
2441319   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2441320   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
2441321   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2441322   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
2441323   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
2441324   +   end;
MPRINT(EM_DIAGRAM):   end;
2441325   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
2441326   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
2441327   +   end;
MPRINT(EM_DIAGRAM):   end;
2441328   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2441329   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
2441330   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2441331   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441332   +   end;
MPRINT(EM_DIAGRAM):   end;
2441333   +end;
MPRINT(EM_DIAGRAM):   end;
2441334   +
2441335   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
2441336   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
2441337   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
2441338   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2441339   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2441340   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441341   +end;
MPRINT(EM_DIAGRAM):   end;
2441342   +else do;
MPRINT(EM_DIAGRAM):   else do;
2441343   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
2441344   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
2441345   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2441346   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
2441347   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
2441348   +   end;
MPRINT(EM_DIAGRAM):   end;
2441349   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
2441350   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
2441351   +   end;
MPRINT(EM_DIAGRAM):   end;
2441352   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2441353   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
2441354   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2441355   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441356   +   end;
MPRINT(EM_DIAGRAM):   end;
2441357   +end;
MPRINT(EM_DIAGRAM):   end;
2441358   +
2441359   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
2441360   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
2441361   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2441362   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
2441363   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
2441364   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
2441365   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
2441366   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
2441367   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2441368   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2441369   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2441370   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2441371   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2441372   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441373   +end;
MPRINT(EM_DIAGRAM):   end;
2441374   +else do;
MPRINT(EM_DIAGRAM):   else do;
2441375   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
2441376   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
2441377   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2441378   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
2441379   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
2441380   +   end;
MPRINT(EM_DIAGRAM):   end;
2441381   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
2441382   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
2441383   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
2441384   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
2441385   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
2441386   +   end;
MPRINT(EM_DIAGRAM):   end;
2441387   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
2441388   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
2441389   +   end;
MPRINT(EM_DIAGRAM):   end;
2441390   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
2441391   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
2441392   +   end;
MPRINT(EM_DIAGRAM):   end;
2441393   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
2441394   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
2441395   +   end;
MPRINT(EM_DIAGRAM):   end;
2441396   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2441397   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
2441398   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
2441399   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
2441400   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
2441401   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2441402   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441403   +   end;
MPRINT(EM_DIAGRAM):   end;
2441404   +end;
MPRINT(EM_DIAGRAM):   end;
2441405   +
2441406   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
2441407   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
2441408   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
2441409   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
2441410   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
2441411   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
2441412   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
2441413   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
2441414   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
2441415   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2441416   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2441417   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2441418   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2441419   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
2441420   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441421   +end;
MPRINT(EM_DIAGRAM):   end;
2441422   +else do;
MPRINT(EM_DIAGRAM):   else do;
2441423   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
2441424   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
2441425   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
2441426   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
2441427   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
2441428   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
2441429   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
2441430   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
2441431   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2441432   +         end;
MPRINT(EM_DIAGRAM):   end;
2441433   +         else do;
MPRINT(EM_DIAGRAM):   else do;
2441434   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
2441435   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
2441436   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2441437   +            end;
MPRINT(EM_DIAGRAM):   end;
2441438   +         end;
MPRINT(EM_DIAGRAM):   end;
2441439   +      end;
MPRINT(EM_DIAGRAM):   end;
2441440   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2441441   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
2441442   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
2441443   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2441444   +         end;
MPRINT(EM_DIAGRAM):   end;
2441445   +      end;
MPRINT(EM_DIAGRAM):   end;
2441446   +   end;
MPRINT(EM_DIAGRAM):   end;
2441447   +   else do;
MPRINT(EM_DIAGRAM):   else do;
2441448   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
2441449   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
2441450   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2441451   +      end;
MPRINT(EM_DIAGRAM):   end;
2441452   +      else do;
MPRINT(EM_DIAGRAM):   else do;
2441453   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
2441454   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
2441455   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
2441456   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
2441457   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
2441458   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
2441459   +         end;
MPRINT(EM_DIAGRAM):   end;
2441460   +      end;
MPRINT(EM_DIAGRAM):   end;
2441461   +   end;
MPRINT(EM_DIAGRAM):   end;
2441462   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
2441463   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
2441464   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
2441465   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
2441466   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
2441467   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
2441468   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441469   +   end;
MPRINT(EM_DIAGRAM):   end;
2441470   +end;
MPRINT(EM_DIAGRAM):   end;
2441471   +
2441472   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2441473   +*** Checking missing input Interval
2441474   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
2441475   +
2441476   +IF NMISS(
2441477   +   AcceptedCmpTotal ,
2441478   +   Age ,
2441479   +   Frq ,
2441480   +   Income ,
2441481   +   Kidhome ,
2441482   +   Mnt ,
2441483   +   MntFishProducts ,
2441484   +   MntFruits ,
2441485   +   MntGoldProds ,
2441486   +   MntMeatProducts ,
2441487   +   MntSweetProducts ,
2441488   +   MntWines ,
2441489   +   MonthsAsCustomer ,
2441490   +   NumCatalogPurchases ,
2441491   +   NumDealsPurchases ,
2441492   +   NumDistPurchases ,
2441493   +   NumStorePurchases ,
2441494   +   NumWebPurchases ,
2441495   +   NumWebVisitsMonth ,
2441496   +   RFMstat ,
2441497   +   RMntFrq ,
2441498   +   Recency ,
2441499   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , Mnt , 
MntFishProducts , MntFruits , MntGoldProds , MntMeatProducts , MntSweetProducts , MntWines , 
MonthsAsCustomer , NumCatalogPurchases , NumDealsPurchases , NumDistPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , 
Teenhome ) THEN DO;
2441500   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
2441501   +
2441502   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
2441503   +END;
MPRINT(EM_DIAGRAM):   END;
2441504   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2441505   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
2441506   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2441507   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2441508   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2441509   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2441510   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2441511   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2441512   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2441513   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2441514   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2441515   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2441516   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2441517   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2441518   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2441519   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
2441520   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2441521   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2441522   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2441523   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2441524   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2441525   +   S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2441526   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2441527   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
2441528   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2441529   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2441530   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2441531   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2441532   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2441533   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2441534   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2441535   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2441536   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2441537   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2441538   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2441539   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2441540   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2441541   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2441542   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2441543   +END;
MPRINT(EM_DIAGRAM):   END;
2441544   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2441545   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
2441546   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
2441547   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
2441548   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
2441549   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
2441550   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
2441551   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
2441552   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
2441553   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
2441554   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
2441555   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
2441556   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
2441557   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
2441558   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
2441559   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
2441560   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
2441561   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
2441562   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
2441563   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
2441564   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
2441565   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
2441566   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
2441567   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
2441568   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
2441569   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
2441570   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
2441571   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
2441572   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
2441573   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
2441574   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
2441575   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
2441576   +   ELSE S_MonthsAsCustomer  =    -4.93910929907081 +      0.0590440785747 *
2441577   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93910929907081 + 0.0590440785747 * 
MonthsAsCustomer ;
2441578   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
2441579   +   ELSE S_NumCatalogPurchases
2441580   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
2441581   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
2441582   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
2441583   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
2441584   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
2441585   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
2441586   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
2441587   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 * 
NumDistPurchases ;
2441588   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
2441589   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
2441590   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
2441591   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
2441592   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
2441593   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
2441594   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
2441595   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
2441596   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
2441597   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
2441598   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
2441599   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
2441600   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
2441601   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
2441602   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
2441603   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
2441604   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
2441605   +END;
MPRINT(EM_DIAGRAM):   END;
2441606   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2441607   +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
2441608   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2441609   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2441610   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
2441611   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2441612   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2441613   +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
2441614   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2441615   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2441616   +   H1x1_1  =     -2.0588471958351 * S_AcceptedCmpTotal
2441617   +          +     0.38628980389456 * S_Age  +     -0.8545617733777 * S_Frq
2441618   +          +    -1.37557200210661 * S_Income  +     1.58583945545125 *
2441619   +        S_Kidhome  +    -1.49250871593186 * S_Mnt  +    -2.02986091068301 *
2441620   +        S_MntFishProducts  +     0.28845511703412 * S_MntFruits
2441621   +          +    -0.62495372005095 * S_MntGoldProds  +     3.22144698444712 *
2441622   +        S_MntMeatProducts  +    -2.67158036653801 * S_MntSweetProducts
2441623   +          +    -4.30837863985493 * S_MntWines  +     0.39603200162704 *
2441624   +        S_MonthsAsCustomer  +      1.8259166147951 * S_NumCatalogPurchases
2441625   +          +      3.4758215776031 * S_NumDealsPurchases
2441626   +          +     0.17094021755289 * S_NumDistPurchases
2441627   +          +    -2.72090095694641 * S_NumStorePurchases
2441628   +          +    -0.31877935826328 * S_NumWebPurchases
2441629   +          +    -2.03399974412918 * S_NumWebVisitsMonth
2441630   +          +     2.74309130038659 * S_RFMstat  +    -0.74941844935268 *
2441631   +        S_RMntFrq  +     0.29064555076615 * S_Recency
2441632   +          +    -0.57040700827247 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.0588471958351 * S_AcceptedCmpTotal + 0.38628980389456 * 
S_Age + -0.8545617733777 * S_Frq + -1.37557200210661 * S_Income + 1.58583945545125 * S_Kidhome 
+ -1.49250871593186 * S_Mnt + -2.02986091068301 * S_MntFishProducts + 0.28845511703412 * 
S_MntFruits + -0.62495372005095 * S_MntGoldProds + 3.22144698444712 * S_MntMeatProducts + 
-2.67158036653801 * S_MntSweetProducts + -4.30837863985493 * S_MntWines + 0.39603200162704 * 
S_MonthsAsCustomer + 1.8259166147951 * S_NumCatalogPurchases + 3.4758215776031 * 
S_NumDealsPurchases + 0.17094021755289 * S_NumDistPurchases + -2.72090095694641 * 
S_NumStorePurchases + -0.31877935826328 * S_NumWebPurchases + -2.03399974412918 * 
S_NumWebVisitsMonth + 2.74309130038659 * S_RFMstat + -0.74941844935268 * S_RMntFrq + 
0.29064555076615 * S_Recency + -0.57040700827247 * S_Teenhome ;
2441633   +   H1x1_2  =     -0.5995699177824 * S_AcceptedCmpTotal
2441634   +          +    -1.17769485933608 * S_Age  +     0.95998296288295 * S_Frq
2441635   +          +     -2.2343179478513 * S_Income  +     3.17436638275163 *
2441636   +        S_Kidhome  +     0.46987648124346 * S_Mnt  +     0.07213935656698 *
2441637   +        S_MntFishProducts  +    -1.38055808108069 * S_MntFruits
2441638   +          +     0.62140960451545 * S_MntGoldProds  +     -1.9000500396873 *
2441639   +        S_MntMeatProducts  +    -0.35707372583597 * S_MntSweetProducts
2441640   +          +     1.99720917743483 * S_MntWines  +     0.89245096364062 *
2441641   +        S_MonthsAsCustomer  +    -0.61497875715928 * S_NumCatalogPurchases
2441642   +          +    -1.21013804197082 * S_NumDealsPurchases
2441643   +          +     0.59974279122188 * S_NumDistPurchases
2441644   +          +     1.92425710681156 * S_NumStorePurchases
2441645   +          +     1.02413182452324 * S_NumWebPurchases
2441646   +          +    -3.63276285340174 * S_NumWebVisitsMonth
2441647   +          +     0.33919100670479 * S_RFMstat  +     0.84767315208026 *
2441648   +        S_RMntFrq  +     3.87352563099005 * S_Recency
2441649   +          +     2.74174964084917 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.5995699177824 * S_AcceptedCmpTotal + -1.17769485933608 * 
S_Age + 0.95998296288295 * S_Frq + -2.2343179478513 * S_Income + 3.17436638275163 * S_Kidhome 
+ 0.46987648124346 * S_Mnt + 0.07213935656698 * S_MntFishProducts + -1.38055808108069 * 
S_MntFruits + 0.62140960451545 * S_MntGoldProds + -1.9000500396873 * S_MntMeatProducts + 
-0.35707372583597 * S_MntSweetProducts + 1.99720917743483 * S_MntWines + 0.89245096364062 * 
S_MonthsAsCustomer + -0.61497875715928 * S_NumCatalogPurchases + -1.21013804197082 * 
S_NumDealsPurchases + 0.59974279122188 * S_NumDistPurchases + 1.92425710681156 * 
S_NumStorePurchases + 1.02413182452324 * S_NumWebPurchases + -3.63276285340174 * 
S_NumWebVisitsMonth + 0.33919100670479 * S_RFMstat + 0.84767315208026 * S_RMntFrq + 
3.87352563099005 * S_Recency + 2.74174964084917 * S_Teenhome ;
2441650   +   H1x1_3  =    -2.27029708882419 * S_AcceptedCmpTotal
2441651   +          +     0.57558817521081 * S_Age  +     0.03666022895146 * S_Frq
2441652   +          +    -0.43764949843184 * S_Income  +     0.05202039236868 *
2441653   +        S_Kidhome  +    -0.17515517773197 * S_Mnt  +      2.1454579331563 *
2441654   +        S_MntFishProducts  +     -0.0544472234117 * S_MntFruits
2441655   +          +    -0.24751372889101 * S_MntGoldProds  +    -7.95986512066472 *
2441656   +        S_MntMeatProducts  +    -0.42258869313323 * S_MntSweetProducts
2441657   +          +      4.6542173574208 * S_MntWines  +     0.27973663838423 *
2441658   +        S_MonthsAsCustomer  +    -0.92923468464154 * S_NumCatalogPurchases
2441659   +          +      0.4928343071801 * S_NumDealsPurchases
2441660   +          +     -0.0196677325409 * S_NumDistPurchases
2441661   +          +     0.44395828164873 * S_NumStorePurchases
2441662   +          +     0.86947051591224 * S_NumWebPurchases
2441663   +          +    -0.96787241206077 * S_NumWebVisitsMonth
2441664   +          +     -0.9429396337834 * S_RFMstat  +    -1.69298966254302 *
2441665   +        S_RMntFrq  +     0.24582117217188 * S_Recency
2441666   +          +    -1.08471509540368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -2.27029708882419 * S_AcceptedCmpTotal + 0.57558817521081 * 
S_Age + 0.03666022895146 * S_Frq + -0.43764949843184 * S_Income + 0.05202039236868 * S_Kidhome 
+ -0.17515517773197 * S_Mnt + 2.1454579331563 * S_MntFishProducts + -0.0544472234117 * 
S_MntFruits + -0.24751372889101 * S_MntGoldProds + -7.95986512066472 * S_MntMeatProducts + 
-0.42258869313323 * S_MntSweetProducts + 4.6542173574208 * S_MntWines + 0.27973663838423 * 
S_MonthsAsCustomer + -0.92923468464154 * S_NumCatalogPurchases + 0.4928343071801 * 
S_NumDealsPurchases + -0.0196677325409 * S_NumDistPurchases + 0.44395828164873 * 
S_NumStorePurchases + 0.86947051591224 * S_NumWebPurchases + -0.96787241206077 * 
S_NumWebVisitsMonth + -0.9429396337834 * S_RFMstat + -1.69298966254302 * S_RMntFrq + 
0.24582117217188 * S_Recency + -1.08471509540368 * S_Teenhome ;
2441667   +   H1x1_4  =     0.54181596412096 * S_AcceptedCmpTotal
2441668   +          +    -1.19331526818752 * S_Age  +     0.79853759822324 * S_Frq
2441669   +          +     0.73370928178794 * S_Income  +     0.38661834479377 *
2441670   +        S_Kidhome  +      0.3442876988888 * S_Mnt  +    -0.58769739655035 *
2441671   +        S_MntFishProducts  +     -0.8703586573687 * S_MntFruits
2441672   +          +    -0.06073044217122 * S_MntGoldProds  +     1.06031608775663 *
2441673   +        S_MntMeatProducts  +      0.1600438561366 * S_MntSweetProducts
2441674   +          +    -0.10937637342015 * S_MntWines  +     0.44423445817796 *
2441675   +        S_MonthsAsCustomer  +     2.20653376632749 * S_NumCatalogPurchases
2441676   +          +     1.10280977051932 * S_NumDealsPurchases
2441677   +          +     0.99310057404036 * S_NumDistPurchases
2441678   +          +    -0.05647459609331 * S_NumStorePurchases
2441679   +          +    -0.89852483938631 * S_NumWebPurchases
2441680   +          +     2.63022480227445 * S_NumWebVisitsMonth
2441681   +          +      0.0081819695781 * S_RFMstat  +     1.19338523211724 *
2441682   +        S_RMntFrq  +    -4.46436997560659 * S_Recency
2441683   +          +    -2.03251171372039 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.54181596412096 * S_AcceptedCmpTotal + -1.19331526818752 * 
S_Age + 0.79853759822324 * S_Frq + 0.73370928178794 * S_Income + 0.38661834479377 * S_Kidhome 
+ 0.3442876988888 * S_Mnt + -0.58769739655035 * S_MntFishProducts + -0.8703586573687 * 
S_MntFruits + -0.06073044217122 * S_MntGoldProds + 1.06031608775663 * S_MntMeatProducts + 
0.1600438561366 * S_MntSweetProducts + -0.10937637342015 * S_MntWines + 0.44423445817796 * 
S_MonthsAsCustomer + 2.20653376632749 * S_NumCatalogPurchases + 1.10280977051932 * 
S_NumDealsPurchases + 0.99310057404036 * S_NumDistPurchases + -0.05647459609331 * 
S_NumStorePurchases + -0.89852483938631 * S_NumWebPurchases + 2.63022480227445 * 
S_NumWebVisitsMonth + 0.0081819695781 * S_RFMstat + 1.19338523211724 * S_RMntFrq + 
-4.46436997560659 * S_Recency + -2.03251171372039 * S_Teenhome ;
2441684   +   H1x1_5  =    -1.03227948250072 * S_AcceptedCmpTotal
2441685   +          +     0.25510562405413 * S_Age  +     0.11938172756061 * S_Frq
2441686   +          +    -0.88855927472898 * S_Income  +    -0.98732962014399 *
2441687   +        S_Kidhome  +     0.57537935682752 * S_Mnt  +     0.07702692666996 *
2441688   +        S_MntFishProducts  +     0.69541223905843 * S_MntFruits
2441689   +          +    -0.26720187465927 * S_MntGoldProds  +    -0.03938241662919 *
2441690   +        S_MntMeatProducts  +     1.08781093588885 * S_MntSweetProducts
2441691   +          +     1.16253823123182 * S_MntWines  +    -1.60607722651025 *
2441692   +        S_MonthsAsCustomer  +    -1.69043794225498 * S_NumCatalogPurchases
2441693   +          +    -2.62220616180571 * S_NumDealsPurchases
2441694   +          +    -0.51737930835331 * S_NumDistPurchases
2441695   +          +     0.88655783158133 * S_NumStorePurchases
2441696   +          +     0.35132468809969 * S_NumWebPurchases
2441697   +          +     -1.6320869675862 * S_NumWebVisitsMonth
2441698   +          +     0.33776958473405 * S_RFMstat  +    -0.42290181425075 *
2441699   +        S_RMntFrq  +     1.06226028677401 * S_Recency
2441700   +          +     1.11855899514962 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.03227948250072 * S_AcceptedCmpTotal + 0.25510562405413 * 
S_Age + 0.11938172756061 * S_Frq + -0.88855927472898 * S_Income + -0.98732962014399 * 
S_Kidhome + 0.57537935682752 * S_Mnt + 0.07702692666996 * S_MntFishProducts + 0.69541223905843 
* S_MntFruits + -0.26720187465927 * S_MntGoldProds + -0.03938241662919 * S_MntMeatProducts + 
1.08781093588885 * S_MntSweetProducts + 1.16253823123182 * S_MntWines + -1.60607722651025 * 
S_MonthsAsCustomer + -1.69043794225498 * S_NumCatalogPurchases + -2.62220616180571 * 
S_NumDealsPurchases + -0.51737930835331 * S_NumDistPurchases + 0.88655783158133 * 
S_NumStorePurchases + 0.35132468809969 * S_NumWebPurchases + -1.6320869675862 * 
S_NumWebVisitsMonth + 0.33776958473405 * S_RFMstat + -0.42290181425075 * S_RMntFrq + 
1.06226028677401 * S_Recency + 1.11855899514962 * S_Teenhome ;
2441701   +   H1x1_1  = H1x1_1  +     0.53637737817097 * AcceptedCmp10
2441702   +          +    -1.85405146733588 * AcceptedCmp20  +    -1.47621046566649 *
2441703   +        AcceptedCmp30  +    -1.37767318086242 * AcceptedCmp40
2441704   +          +    -0.96348396070145 * AcceptedCmp50  +    -1.30976546088379 *
2441705   +        Complain0  +    -0.54848314184314 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.53637737817097 * AcceptedCmp10 + -1.85405146733588 * 
AcceptedCmp20 + -1.47621046566649 * AcceptedCmp30 + -1.37767318086242 * AcceptedCmp40 + 
-0.96348396070145 * AcceptedCmp50 + -1.30976546088379 * Complain0 + -0.54848314184314 * 
HigherEducationBinary0 ;
2441706   +   H1x1_2  = H1x1_2  +     0.18445380584184 * AcceptedCmp10
2441707   +          +    -0.69257274561716 * AcceptedCmp20  +     0.17226038285159 *
2441708   +        AcceptedCmp30  +    -1.06145995435722 * AcceptedCmp40
2441709   +          +     1.23459262841144 * AcceptedCmp50  +    -0.14674063302587 *
2441710   +        Complain0  +    -1.08422405648698 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.18445380584184 * AcceptedCmp10 + -0.69257274561716 * 
AcceptedCmp20 + 0.17226038285159 * AcceptedCmp30 + -1.06145995435722 * AcceptedCmp40 + 
1.23459262841144 * AcceptedCmp50 + -0.14674063302587 * Complain0 + -1.08422405648698 * 
HigherEducationBinary0 ;
2441711   +   H1x1_3  = H1x1_3  +     0.81272808689375 * AcceptedCmp10
2441712   +          +    -0.37057950605918 * AcceptedCmp20  +    -1.75364708883985 *
2441713   +        AcceptedCmp30  +     -1.9879502333289 * AcceptedCmp40
2441714   +          +     2.82649108460951 * AcceptedCmp50  +    -0.14219031901768 *
2441715   +        Complain0  +     -0.5514346363694 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.81272808689375 * AcceptedCmp10 + -0.37057950605918 * 
AcceptedCmp20 + -1.75364708883985 * AcceptedCmp30 + -1.9879502333289 * AcceptedCmp40 + 
2.82649108460951 * AcceptedCmp50 + -0.14219031901768 * Complain0 + -0.5514346363694 * 
HigherEducationBinary0 ;
2441716   +   H1x1_4  = H1x1_4  +    -1.12354567881562 * AcceptedCmp10
2441717   +          +    -1.64564861831306 * AcceptedCmp20  +    -1.84950171464501 *
2441718   +        AcceptedCmp30  +    -2.60581164673686 * AcceptedCmp40
2441719   +          +    -0.53568003317161 * AcceptedCmp50  +    -0.13929928866767 *
2441720   +        Complain0  +     1.18053116626218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -1.12354567881562 * AcceptedCmp10 + -1.64564861831306 
* AcceptedCmp20 + -1.84950171464501 * AcceptedCmp30 + -2.60581164673686 * AcceptedCmp40 + 
-0.53568003317161 * AcceptedCmp50 + -0.13929928866767 * Complain0 + 1.18053116626218 * 
HigherEducationBinary0 ;
2441721   +   H1x1_5  = H1x1_5  +     -0.3006993305802 * AcceptedCmp10
2441722   +          +    -0.67101949915278 * AcceptedCmp20  +     0.48950637221178 *
2441723   +        AcceptedCmp30  +     0.25937105093078 * AcceptedCmp40
2441724   +          +       0.650714225549 * AcceptedCmp50  +    -0.53543482850089 *
2441725   +        Complain0  +     0.62014708316206 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.3006993305802 * AcceptedCmp10 + -0.67101949915278 * 
AcceptedCmp20 + 0.48950637221178 * AcceptedCmp30 + 0.25937105093078 * AcceptedCmp40 + 
0.650714225549 * AcceptedCmp50 + -0.53543482850089 * Complain0 + 0.62014708316206 * 
HigherEducationBinary0 ;
2441726   +   H1x1_1  = H1x1_1  +     0.78710932360637 * Education2n_Cycle
2441727   +          +    -0.34656604802235 * EducationBasic  +     0.11820082193221 *
2441728   +        EducationGraduation  +     1.42539292513854 * EducationMaster
2441729   +          +     0.34809919741136 * Marital_StatusDivorced
2441730   +          +    -0.26594093535929 * Marital_StatusMarried
2441731   +          +     0.70249715999987 * Marital_StatusSingle
2441732   +          +    -0.45710525283449 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.78710932360637 * Education2n_Cycle + 
-0.34656604802235 * EducationBasic + 0.11820082193221 * EducationGraduation + 1.42539292513854 
* EducationMaster + 0.34809919741136 * Marital_StatusDivorced + -0.26594093535929 * 
Marital_StatusMarried + 0.70249715999987 * Marital_StatusSingle + -0.45710525283449 * 
Marital_StatusTogether ;
2441733   +   H1x1_2  = H1x1_2  +    -1.00496261512915 * Education2n_Cycle
2441734   +          +     0.66783492956492 * EducationBasic  +     0.91185122922538 *
2441735   +        EducationGraduation  +    -0.28204692640004 * EducationMaster
2441736   +          +    -0.20448765627193 * Marital_StatusDivorced
2441737   +          +     1.73231344674733 * Marital_StatusMarried
2441738   +          +    -0.70956480480373 * Marital_StatusSingle
2441739   +          +      1.0926428215879 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -1.00496261512915 * Education2n_Cycle + 
0.66783492956492 * EducationBasic + 0.91185122922538 * EducationGraduation + -0.28204692640004 
* EducationMaster + -0.20448765627193 * Marital_StatusDivorced + 1.73231344674733 * 
Marital_StatusMarried + -0.70956480480373 * Marital_StatusSingle + 1.0926428215879 * 
Marital_StatusTogether ;
2441740   +   H1x1_3  = H1x1_3  +    -0.06222681334412 * Education2n_Cycle
2441741   +          +    -0.00009122618999 * EducationBasic  +    -0.07444046529217 *
2441742   +        EducationGraduation  +     1.01284161768787 * EducationMaster
2441743   +          +     0.30333818684353 * Marital_StatusDivorced
2441744   +          +    -1.44603535988199 * Marital_StatusMarried
2441745   +          +     0.48409598426383 * Marital_StatusSingle
2441746   +          +    -1.14528682521622 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.06222681334412 * Education2n_Cycle + 
-0.00009122618999 * EducationBasic + -0.07444046529217 * EducationGraduation + 
1.01284161768787 * EducationMaster + 0.30333818684353 * Marital_StatusDivorced + 
-1.44603535988199 * Marital_StatusMarried + 0.48409598426383 * Marital_StatusSingle + 
-1.14528682521622 * Marital_StatusTogether ;
2441747   +   H1x1_4  = H1x1_4  +    -0.92316818310935 * Education2n_Cycle
2441748   +          +     0.93590924020503 * EducationBasic  +     0.36762108040277 *
2441749   +        EducationGraduation  +    -1.17735200022013 * EducationMaster
2441750   +          +     -1.5342907846297 * Marital_StatusDivorced
2441751   +          +    -1.79544684592172 * Marital_StatusMarried
2441752   +          +     0.65604313645117 * Marital_StatusSingle
2441753   +          +    -2.08172869142628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.92316818310935 * Education2n_Cycle + 
0.93590924020503 * EducationBasic + 0.36762108040277 * EducationGraduation + -1.17735200022013 
* EducationMaster + -1.5342907846297 * Marital_StatusDivorced + -1.79544684592172 * 
Marital_StatusMarried + 0.65604313645117 * Marital_StatusSingle + -2.08172869142628 * 
Marital_StatusTogether ;
2441754   +   H1x1_5  = H1x1_5  +    -0.56328800945753 * Education2n_Cycle
2441755   +          +    -0.06918346311418 * EducationBasic  +     -1.5176897786776 *
2441756   +        EducationGraduation  +     0.09618331198762 * EducationMaster
2441757   +          +    -3.97940893560267 * Marital_StatusDivorced
2441758   +          +      3.5880254142663 * Marital_StatusMarried
2441759   +          +     -2.9897737730927 * Marital_StatusSingle
2441760   +          +     3.75098376776525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_5 = H1x1_5 + -0.56328800945753 * Education2n_Cycle + 
-0.06918346311418 * EducationBasic + -1.5176897786776 * EducationGraduation + 0.09618331198762 
* EducationMaster + -3.97940893560267 * Marital_StatusDivorced + 3.5880254142663 * 
Marital_StatusMarried + -2.9897737730927 * Marital_StatusSingle + 3.75098376776525 * 
Marital_StatusTogether ;
2441761   +   H1x1_1  =    -2.89135496095875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -2.89135496095875 + H1x1_1 ;
2441762   +   H1x1_2  =     0.39943637099295 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.39943637099295 + H1x1_2 ;
2441763   +   H1x1_3  =    -1.08093114818147 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -1.08093114818147 + H1x1_3 ;
2441764   +   H1x1_4  =    -3.29426643182948 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -3.29426643182948 + H1x1_4 ;
2441765   +   H1x1_5  =    -1.76822552726746 + H1x1_5 ;
MPRINT(EM_DIAGRAM):   H1x1_5 = -1.76822552726746 + H1x1_5 ;
2441766   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2441767   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2441768   +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
2441769   +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
2441770   +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
2441771   +   H1x1_4  = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_4 = 1.0 / (1.0 + EXP(MIN( - H1x1_4 , _EXP_BAR)));
2441772   +   H1x1_5  = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_5 = 1.0 / (1.0 + EXP(MIN( - H1x1_5 , _EXP_BAR)));
2441773   +END;
MPRINT(EM_DIAGRAM):   END;
2441774   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2441775   +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
2441776   +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
2441777   +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
2441778   +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
2441779   +   H1x1_5  = .;
MPRINT(EM_DIAGRAM):   H1x1_5 = .;
2441780   +END;
MPRINT(EM_DIAGRAM):   END;
2441781   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2441782   +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
2441783   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2441784   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2441785   +   H1x2_1  =     1.01981866144831 * S_AcceptedCmpTotal
2441786   +          +    -1.47346125364319 * S_Age  +    -0.08669650492194 * S_Frq
2441787   +          +    -0.51585471637562 * S_Income  +     1.40711190452923 *
2441788   +        S_Kidhome  +    -0.21341957199148 * S_Mnt  +    -0.31211158173505 *
2441789   +        S_MntFishProducts  +    -0.77126486046129 * S_MntFruits
2441790   +          +     -0.4503905849175 * S_MntGoldProds  +     1.01090165857015 *
2441791   +        S_MntMeatProducts  +    -0.05554268249583 * S_MntSweetProducts
2441792   +          +     2.72203992871966 * S_MntWines  +    -0.46212144021719 *
2441793   +        S_MonthsAsCustomer  +    -0.10495120677935 * S_NumCatalogPurchases
2441794   +          +     0.07279889333775 * S_NumDealsPurchases
2441795   +          +     0.07542203992452 * S_NumDistPurchases
2441796   +          +     0.16296239303342 * S_NumStorePurchases
2441797   +          +     1.59193921229231 * S_NumWebPurchases
2441798   +          +    -0.35227839362603 * S_NumWebVisitsMonth
2441799   +          +      1.3224105019117 * S_RFMstat  +    -0.77035988511057 *
2441800   +        S_RMntFrq  +     0.43315770276588 * S_Recency
2441801   +          +     0.43447147039235 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.01981866144831 * S_AcceptedCmpTotal + -1.47346125364319 * 
S_Age + -0.08669650492194 * S_Frq + -0.51585471637562 * S_Income + 1.40711190452923 * 
S_Kidhome + -0.21341957199148 * S_Mnt + -0.31211158173505 * S_MntFishProducts + 
-0.77126486046129 * S_MntFruits + -0.4503905849175 * S_MntGoldProds + 1.01090165857015 * 
S_MntMeatProducts + -0.05554268249583 * S_MntSweetProducts + 2.72203992871966 * S_MntWines + 
-0.46212144021719 * S_MonthsAsCustomer + -0.10495120677935 * S_NumCatalogPurchases + 
0.07279889333775 * S_NumDealsPurchases + 0.07542203992452 * S_NumDistPurchases + 
0.16296239303342 * S_NumStorePurchases + 1.59193921229231 * S_NumWebPurchases + 
-0.35227839362603 * S_NumWebVisitsMonth + 1.3224105019117 * S_RFMstat + -0.77035988511057 * 
S_RMntFrq + 0.43315770276588 * S_Recency + 0.43447147039235 * S_Teenhome ;
2441802   +   H1x2_2  =    -0.07629675162821 * S_AcceptedCmpTotal
2441803   +          +     0.81684969971216 * S_Age  +     0.52870818801428 * S_Frq
2441804   +          +     0.15358022485378 * S_Income  +    -0.64458879887927 *
2441805   +        S_Kidhome  +    -2.12225648421746 * S_Mnt  +     1.05240671673302 *
2441806   +        S_MntFishProducts  +    -0.89595336397918 * S_MntFruits
2441807   +          +    -0.28950558043577 * S_MntGoldProds  +     0.30996043499478 *
2441808   +        S_MntMeatProducts  +     1.27676485470274 * S_MntSweetProducts
2441809   +          +    -1.30045112439384 * S_MntWines  +     1.36110971826862 *
2441810   +        S_MonthsAsCustomer  +     -0.1778244163518 * S_NumCatalogPurchases
2441811   +          +    -0.37456959251084 * S_NumDealsPurchases
2441812   +          +    -1.15252469975668 * S_NumDistPurchases
2441813   +          +    -1.39822501888899 * S_NumStorePurchases
2441814   +          +    -0.32777847360723 * S_NumWebPurchases
2441815   +          +     0.84026499832926 * S_NumWebVisitsMonth
2441816   +          +    -1.47180193258497 * S_RFMstat  +     0.18801983980439 *
2441817   +        S_RMntFrq  +     1.21016626691186 * S_Recency
2441818   +          +    -0.82943594788748 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -0.07629675162821 * S_AcceptedCmpTotal + 0.81684969971216 * 
S_Age + 0.52870818801428 * S_Frq + 0.15358022485378 * S_Income + -0.64458879887927 * S_Kidhome 
+ -2.12225648421746 * S_Mnt + 1.05240671673302 * S_MntFishProducts + -0.89595336397918 * 
S_MntFruits + -0.28950558043577 * S_MntGoldProds + 0.30996043499478 * S_MntMeatProducts + 
1.27676485470274 * S_MntSweetProducts + -1.30045112439384 * S_MntWines + 1.36110971826862 * 
S_MonthsAsCustomer + -0.1778244163518 * S_NumCatalogPurchases + -0.37456959251084 * 
S_NumDealsPurchases + -1.15252469975668 * S_NumDistPurchases + -1.39822501888899 * 
S_NumStorePurchases + -0.32777847360723 * S_NumWebPurchases + 0.84026499832926 * 
S_NumWebVisitsMonth + -1.47180193258497 * S_RFMstat + 0.18801983980439 * S_RMntFrq + 
1.21016626691186 * S_Recency + -0.82943594788748 * S_Teenhome ;
2441819   +   H1x2_3  =    -0.06736000283511 * S_AcceptedCmpTotal
2441820   +          +    -0.47270148030219 * S_Age  +      1.1959707178877 * S_Frq
2441821   +          +    -1.40081626653738 * S_Income  +     0.35085595025526 *
2441822   +        S_Kidhome  +    -0.43652344252181 * S_Mnt  +     1.12197802721591 *
2441823   +        S_MntFishProducts  +     1.27079634537799 * S_MntFruits
2441824   +          +    -0.03023683680758 * S_MntGoldProds  +     0.51289568088141 *
2441825   +        S_MntMeatProducts  +     1.12894900622408 * S_MntSweetProducts
2441826   +          +    -0.66940205871871 * S_MntWines  +    -1.57211003055303 *
2441827   +        S_MonthsAsCustomer  +     1.47778465205569 * S_NumCatalogPurchases
2441828   +          +     1.14090099538367 * S_NumDealsPurchases
2441829   +          +     -0.2600155774492 * S_NumDistPurchases
2441830   +          +     1.31362002392113 * S_NumStorePurchases
2441831   +          +     1.31465307763555 * S_NumWebPurchases
2441832   +          +    -0.18041623858351 * S_NumWebVisitsMonth
2441833   +          +    -0.12685084546738 * S_RFMstat  +     0.43500462904027 *
2441834   +        S_RMntFrq  +    -0.81910738140729 * S_Recency
2441835   +          +    -0.61936793661609 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.06736000283511 * S_AcceptedCmpTotal + -0.47270148030219 * 
S_Age + 1.1959707178877 * S_Frq + -1.40081626653738 * S_Income + 0.35085595025526 * S_Kidhome 
+ -0.43652344252181 * S_Mnt + 1.12197802721591 * S_MntFishProducts + 1.27079634537799 * 
S_MntFruits + -0.03023683680758 * S_MntGoldProds + 0.51289568088141 * S_MntMeatProducts + 
1.12894900622408 * S_MntSweetProducts + -0.66940205871871 * S_MntWines + -1.57211003055303 * 
S_MonthsAsCustomer + 1.47778465205569 * S_NumCatalogPurchases + 1.14090099538367 * 
S_NumDealsPurchases + -0.2600155774492 * S_NumDistPurchases + 1.31362002392113 * 
S_NumStorePurchases + 1.31465307763555 * S_NumWebPurchases + -0.18041623858351 * 
S_NumWebVisitsMonth + -0.12685084546738 * S_RFMstat + 0.43500462904027 * S_RMntFrq + 
-0.81910738140729 * S_Recency + -0.61936793661609 * S_Teenhome ;
2441836   +   H1x2_4  =    -0.31415783692162 * S_AcceptedCmpTotal
2441837   +          +     0.11061423227332 * S_Age  +    -0.65722939551233 * S_Frq
2441838   +          +     -0.9063192568986 * S_Income  +      0.4013752851291 *
2441839   +        S_Kidhome  +    -1.06795963585271 * S_Mnt  +     0.24969441019479 *
2441840   +        S_MntFishProducts  +    -0.63550038240549 * S_MntFruits
2441841   +          +     1.04454010114015 * S_MntGoldProds  +     0.89912571026653 *
2441842   +        S_MntMeatProducts  +    -1.92356868621234 * S_MntSweetProducts
2441843   +          +     -1.8642245725538 * S_MntWines  +     0.13416556054779 *
2441844   +        S_MonthsAsCustomer  +    -1.01272407075887 * S_NumCatalogPurchases
2441845   +          +     1.06486073796679 * S_NumDealsPurchases
2441846   +          +    -0.04890191247577 * S_NumDistPurchases
2441847   +          +     0.86871320720698 * S_NumStorePurchases
2441848   +          +     0.03183587281884 * S_NumWebPurchases
2441849   +          +     -0.4863802923315 * S_NumWebVisitsMonth
2441850   +          +    -1.38034657666878 * S_RFMstat  +    -0.73640242597195 *
2441851   +        S_RMntFrq  +     0.17186861211542 * S_Recency
2441852   +          +    -0.39595339111048 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -0.31415783692162 * S_AcceptedCmpTotal + 0.11061423227332 * 
S_Age + -0.65722939551233 * S_Frq + -0.9063192568986 * S_Income + 0.4013752851291 * S_Kidhome 
+ -1.06795963585271 * S_Mnt + 0.24969441019479 * S_MntFishProducts + -0.63550038240549 * 
S_MntFruits + 1.04454010114015 * S_MntGoldProds + 0.89912571026653 * S_MntMeatProducts + 
-1.92356868621234 * S_MntSweetProducts + -1.8642245725538 * S_MntWines + 0.13416556054779 * 
S_MonthsAsCustomer + -1.01272407075887 * S_NumCatalogPurchases + 1.06486073796679 * 
S_NumDealsPurchases + -0.04890191247577 * S_NumDistPurchases + 0.86871320720698 * 
S_NumStorePurchases + 0.03183587281884 * S_NumWebPurchases + -0.4863802923315 * 
S_NumWebVisitsMonth + -1.38034657666878 * S_RFMstat + -0.73640242597195 * S_RMntFrq + 
0.17186861211542 * S_Recency + -0.39595339111048 * S_Teenhome ;
2441853   +   H1x2_5  =     1.68315669988315 * S_AcceptedCmpTotal
2441854   +          +    -1.67467335764173 * S_Age  +     1.29921539173109 * S_Frq
2441855   +          +    -0.52305600367899 * S_Income  +     1.06261291858944 *
2441856   +        S_Kidhome  +     1.77049882170904 * S_Mnt  +    -0.27692609509601 *
2441857   +        S_MntFishProducts  +    -1.23166107817727 * S_MntFruits
2441858   +          +    -2.21476398466362 * S_MntGoldProds  +     1.02542528622621 *
2441859   +        S_MntMeatProducts  +     1.04913114036094 * S_MntSweetProducts
2441860   +          +     0.30606520702636 * S_MntWines  +    -1.15158074964406 *
2441861   +        S_MonthsAsCustomer  +     0.77918810586275 * S_NumCatalogPurchases
2441862   +          +    -0.01160267590349 * S_NumDealsPurchases
2441863   +          +    -0.92773075463083 * S_NumDistPurchases
2441864   +          +    -0.83326680533995 * S_NumStorePurchases
2441865   +          +    -1.16991058954473 * S_NumWebPurchases
2441866   +          +    -2.07771165573723 * S_NumWebVisitsMonth
2441867   +          +     0.59832456826177 * S_RFMstat  +     0.08151078945291 *
2441868   +        S_RMntFrq  +     0.80165981122986 * S_Recency
2441869   +          +     1.41798811088435 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.68315669988315 * S_AcceptedCmpTotal + -1.67467335764173 * 
S_Age + 1.29921539173109 * S_Frq + -0.52305600367899 * S_Income + 1.06261291858944 * S_Kidhome 
+ 1.77049882170904 * S_Mnt + -0.27692609509601 * S_MntFishProducts + -1.23166107817727 * 
S_MntFruits + -2.21476398466362 * S_MntGoldProds + 1.02542528622621 * S_MntMeatProducts + 
1.04913114036094 * S_MntSweetProducts + 0.30606520702636 * S_MntWines + -1.15158074964406 * 
S_MonthsAsCustomer + 0.77918810586275 * S_NumCatalogPurchases + -0.01160267590349 * 
S_NumDealsPurchases + -0.92773075463083 * S_NumDistPurchases + -0.83326680533995 * 
S_NumStorePurchases + -1.16991058954473 * S_NumWebPurchases + -2.07771165573723 * 
S_NumWebVisitsMonth + 0.59832456826177 * S_RFMstat + 0.08151078945291 * S_RMntFrq + 
0.80165981122986 * S_Recency + 1.41798811088435 * S_Teenhome ;
2441870   +   H1x2_1  = H1x2_1  +    -0.16600737981926 * AcceptedCmp10
2441871   +          +     1.41264623988567 * AcceptedCmp20  +      1.0446306999234 *
2441872   +        AcceptedCmp30  +    -1.00688604631169 * AcceptedCmp40
2441873   +          +     0.64523782235527 * AcceptedCmp50  +    -1.76623980391232 *
2441874   +        Complain0  +     1.64644530449125 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.16600737981926 * AcceptedCmp10 + 1.41264623988567 * 
AcceptedCmp20 + 1.0446306999234 * AcceptedCmp30 + -1.00688604631169 * AcceptedCmp40 + 
0.64523782235527 * AcceptedCmp50 + -1.76623980391232 * Complain0 + 1.64644530449125 * 
HigherEducationBinary0 ;
2441875   +   H1x2_2  = H1x2_2  +    -0.39493094663506 * AcceptedCmp10
2441876   +          +    -0.99095404154277 * AcceptedCmp20  +    -0.81166937096774 *
2441877   +        AcceptedCmp30  +     0.14520361414777 * AcceptedCmp40
2441878   +          +    -1.54302055254785 * AcceptedCmp50  +    -0.60600550413714 *
2441879   +        Complain0  +    -3.04730224174859 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + -0.39493094663506 * AcceptedCmp10 + -0.99095404154277 
* AcceptedCmp20 + -0.81166937096774 * AcceptedCmp30 + 0.14520361414777 * AcceptedCmp40 + 
-1.54302055254785 * AcceptedCmp50 + -0.60600550413714 * Complain0 + -3.04730224174859 * 
HigherEducationBinary0 ;
2441880   +   H1x2_3  = H1x2_3  +      1.8650016934441 * AcceptedCmp10
2441881   +          +     0.85335394099291 * AcceptedCmp20  +     0.47327521312159 *
2441882   +        AcceptedCmp30  +    -2.64862753506152 * AcceptedCmp40
2441883   +          +     0.65827168680229 * AcceptedCmp50  +     0.45516433167059 *
2441884   +        Complain0  +    -0.62891111222764 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 1.8650016934441 * AcceptedCmp10 + 0.85335394099291 * 
AcceptedCmp20 + 0.47327521312159 * AcceptedCmp30 + -2.64862753506152 * AcceptedCmp40 + 
0.65827168680229 * AcceptedCmp50 + 0.45516433167059 * Complain0 + -0.62891111222764 * 
HigherEducationBinary0 ;
2441885   +   H1x2_4  = H1x2_4  +    -0.31781332022679 * AcceptedCmp10
2441886   +          +    -0.35773084257089 * AcceptedCmp20  +      0.0486072265688 *
2441887   +        AcceptedCmp30  +     1.50494203860483 * AcceptedCmp40
2441888   +          +     0.00499691981651 * AcceptedCmp50  +    -0.29977032190776 *
2441889   +        Complain0  +     0.76473087756218 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -0.31781332022679 * AcceptedCmp10 + -0.35773084257089 
* AcceptedCmp20 + 0.0486072265688 * AcceptedCmp30 + 1.50494203860483 * AcceptedCmp40 + 
0.00499691981651 * AcceptedCmp50 + -0.29977032190776 * Complain0 + 0.76473087756218 * 
HigherEducationBinary0 ;
2441890   +   H1x2_5  = H1x2_5  +     -0.4639041544815 * AcceptedCmp10
2441891   +          +    -1.28977231764453 * AcceptedCmp20  +    -0.03597660273531 *
2441892   +        AcceptedCmp30  +     0.17848986397338 * AcceptedCmp40
2441893   +          +     0.06649914015182 * AcceptedCmp50  +    -0.95633404051563 *
2441894   +        Complain0  +    -0.62555630659121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.4639041544815 * AcceptedCmp10 + -1.28977231764453 * 
AcceptedCmp20 + -0.03597660273531 * AcceptedCmp30 + 0.17848986397338 * AcceptedCmp40 + 
0.06649914015182 * AcceptedCmp50 + -0.95633404051563 * Complain0 + -0.62555630659121 * 
HigherEducationBinary0 ;
2441895   +   H1x2_1  = H1x2_1  +    -1.75926153465974 * Education2n_Cycle
2441896   +          +     0.96255168005018 * EducationBasic  +     -1.2029563052774 *
2441897   +        EducationGraduation  +    -0.22397098444024 * EducationMaster
2441898   +          +    -0.10361472385198 * Marital_StatusDivorced
2441899   +          +     0.05574820877885 * Marital_StatusMarried
2441900   +          +     0.13130988205279 * Marital_StatusSingle
2441901   +          +    -1.51165564425323 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -1.75926153465974 * Education2n_Cycle + 
0.96255168005018 * EducationBasic + -1.2029563052774 * EducationGraduation + -0.22397098444024 
* EducationMaster + -0.10361472385198 * Marital_StatusDivorced + 0.05574820877885 * 
Marital_StatusMarried + 0.13130988205279 * Marital_StatusSingle + -1.51165564425323 * 
Marital_StatusTogether ;
2441902   +   H1x2_2  = H1x2_2  +     1.73281005101474 * Education2n_Cycle
2441903   +          +    -0.51397811328576 * EducationBasic  +     1.64296402934617 *
2441904   +        EducationGraduation  +     1.44983505587452 * EducationMaster
2441905   +          +      0.0059353523794 * Marital_StatusDivorced
2441906   +          +    -0.59379435051653 * Marital_StatusMarried
2441907   +          +    -1.93587108708999 * Marital_StatusSingle
2441908   +          +     2.02868236823401 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 1.73281005101474 * Education2n_Cycle + 
-0.51397811328576 * EducationBasic + 1.64296402934617 * EducationGraduation + 1.44983505587452 
* EducationMaster + 0.0059353523794 * Marital_StatusDivorced + -0.59379435051653 * 
Marital_StatusMarried + -1.93587108708999 * Marital_StatusSingle + 2.02868236823401 * 
Marital_StatusTogether ;
2441909   +   H1x2_3  = H1x2_3  +     0.11852280587389 * Education2n_Cycle
2441910   +          +    -0.87963137637159 * EducationBasic  +      0.3212539101977 *
2441911   +        EducationGraduation  +     0.16497026569775 * EducationMaster
2441912   +          +    -0.74333797840386 * Marital_StatusDivorced
2441913   +          +    -0.93061135117658 * Marital_StatusMarried
2441914   +          +     1.04024182655844 * Marital_StatusSingle
2441915   +          +     0.58313569749679 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_3 = H1x2_3 + 0.11852280587389 * Education2n_Cycle + 
-0.87963137637159 * EducationBasic + 0.3212539101977 * EducationGraduation + 0.16497026569775 
* EducationMaster + -0.74333797840386 * Marital_StatusDivorced + -0.93061135117658 * 
Marital_StatusMarried + 1.04024182655844 * Marital_StatusSingle + 0.58313569749679 * 
Marital_StatusTogether ;
2441916   +   H1x2_4  = H1x2_4  +     -1.2170050337036 * Education2n_Cycle
2441917   +          +    -0.83332588435502 * EducationBasic  +     0.43242117148542 *
2441918   +        EducationGraduation  +     1.71196178631559 * EducationMaster
2441919   +          +    -3.01050675344463 * Marital_StatusDivorced
2441920   +          +      0.1638723582239 * Marital_StatusMarried
2441921   +          +     0.94548468360304 * Marital_StatusSingle
2441922   +          +    -0.67333048623615 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_4 = H1x2_4 + -1.2170050337036 * Education2n_Cycle + 
-0.83332588435502 * EducationBasic + 0.43242117148542 * EducationGraduation + 1.71196178631559 
* EducationMaster + -3.01050675344463 * Marital_StatusDivorced + 0.1638723582239 * 
Marital_StatusMarried + 0.94548468360304 * Marital_StatusSingle + -0.67333048623615 * 
Marital_StatusTogether ;
2441923   +   H1x2_5  = H1x2_5  +    -0.66774344191467 * Education2n_Cycle
2441924   +          +     0.75591270317285 * EducationBasic  +    -0.29337325355435 *
2441925   +        EducationGraduation  +     0.57450456442662 * EducationMaster
2441926   +          +    -1.37013926274158 * Marital_StatusDivorced
2441927   +          +    -0.34168970042779 * Marital_StatusMarried
2441928   +          +     0.63383683543962 * Marital_StatusSingle
2441929   +          +     0.75118887766443 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_5 = H1x2_5 + -0.66774344191467 * Education2n_Cycle + 
0.75591270317285 * EducationBasic + -0.29337325355435 * EducationGraduation + 0.57450456442662 
* EducationMaster + -1.37013926274158 * Marital_StatusDivorced + -0.34168970042779 * 
Marital_StatusMarried + 0.63383683543962 * Marital_StatusSingle + 0.75118887766443 * 
Marital_StatusTogether ;
2441930   +   H1x2_1  =    -1.05245414685459 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -1.05245414685459 + H1x2_1 ;
2441931   +   H1x2_2  =    -2.03581716915326 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.03581716915326 + H1x2_2 ;
2441932   +   H1x2_3  =    -0.95118365599668 + H1x2_3 ;
MPRINT(EM_DIAGRAM):   H1x2_3 = -0.95118365599668 + H1x2_3 ;
2441933   +   H1x2_4  =    -1.36171328515396 + H1x2_4 ;
MPRINT(EM_DIAGRAM):   H1x2_4 = -1.36171328515396 + H1x2_4 ;
2441934   +   H1x2_5  =    -0.09438724866767 + H1x2_5 ;
MPRINT(EM_DIAGRAM):   H1x2_5 = -0.09438724866767 + H1x2_5 ;
2441935   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2441936   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2441937   +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
2441938   +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
2441939   +   H1x2_3  = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_3 = 1.0 / (1.0 + EXP(MIN( - H1x2_3 , _EXP_BAR)));
2441940   +   H1x2_4  = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_4 = 1.0 / (1.0 + EXP(MIN( - H1x2_4 , _EXP_BAR)));
2441941   +   H1x2_5  = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_5 = 1.0 / (1.0 + EXP(MIN( - H1x2_5 , _EXP_BAR)));
2441942   +END;
MPRINT(EM_DIAGRAM):   END;
2441943   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2441944   +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
2441945   +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
2441946   +   H1x2_3  = .;
MPRINT(EM_DIAGRAM):   H1x2_3 = .;
2441947   +   H1x2_4  = .;
MPRINT(EM_DIAGRAM):   H1x2_4 = .;
2441948   +   H1x2_5  = .;
MPRINT(EM_DIAGRAM):   H1x2_5 = .;
2441949   +END;
MPRINT(EM_DIAGRAM):   END;
2441950   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2441951   +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
2441952   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2441953   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2441954   +   H2x1_1  =    -3.66869890196477 * H1x1_1  +     3.66276995899936 * H1x1_2
2441955   +          +      4.9852243803889 * H1x1_3  +    -3.40922134517979 * H1x1_4
2441956   +          +     2.26435924995065 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -3.66869890196477 * H1x1_1 + 3.66276995899936 * H1x1_2 + 
4.9852243803889 * H1x1_3 + -3.40922134517979 * H1x1_4 + 2.26435924995065 * H1x1_5 ;
2441957   +   H2x1_2  =     1.35296027814603 * H1x1_1  +     0.16236277762099 * H1x1_2
2441958   +          +      0.4094634018093 * H1x1_3  +    -1.05233334297087 * H1x1_4
2441959   +          +    -0.51735435825901 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.35296027814603 * H1x1_1 + 0.16236277762099 * H1x1_2 + 
0.4094634018093 * H1x1_3 + -1.05233334297087 * H1x1_4 + -0.51735435825901 * H1x1_5 ;
2441960   +   H2x1_3  =    -3.57467050540101 * H1x1_1  +     1.96738498758928 * H1x1_2
2441961   +          +      3.1519435691133 * H1x1_3  +    -2.73180541318793 * H1x1_4
2441962   +          +     2.53621803266955 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = -3.57467050540101 * H1x1_1 + 1.96738498758928 * H1x1_2 + 
3.1519435691133 * H1x1_3 + -2.73180541318793 * H1x1_4 + 2.53621803266955 * H1x1_5 ;
2441963   +   H2x1_4  =    -1.77897865469649 * H1x1_1  +    -0.34371813002239 * H1x1_2
2441964   +          +     0.97655076671381 * H1x1_3  +    -0.53022688394362 * H1x1_4
2441965   +          +     1.78452647837415 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.77897865469649 * H1x1_1 + -0.34371813002239 * H1x1_2 + 
0.97655076671381 * H1x1_3 + -0.53022688394362 * H1x1_4 + 1.78452647837415 * H1x1_5 ;
2441966   +   H2x1_5  =    -2.37976522756638 * H1x1_1  +     2.07473947277607 * H1x1_2
2441967   +          +      3.6114905073808 * H1x1_3  +    -4.57668209905758 * H1x1_4
2441968   +          +     2.97931581645784 * H1x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -2.37976522756638 * H1x1_1 + 2.07473947277607 * H1x1_2 + 
3.6114905073808 * H1x1_3 + -4.57668209905758 * H1x1_4 + 2.97931581645784 * H1x1_5 ;
2441969   +   H2x1_1  = H2x1_1  +      0.5090021095213 * H1x2_1
2441970   +          +    -0.99996599039586 * H1x2_2  +     0.09317756017156 * H1x2_3
2441971   +          +     0.07646136890595 * H1x2_4  +    -0.86729455140311 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + 0.5090021095213 * H1x2_1 + -0.99996599039586 * H1x2_2 
+ 0.09317756017156 * H1x2_3 + 0.07646136890595 * H1x2_4 + -0.86729455140311 * H1x2_5 ;
2441972   +   H2x1_2  = H2x1_2  +     0.54458122713319 * H1x2_1
2441973   +          +    -1.01527351866283 * H1x2_2  +    -1.05264779960249 * H1x2_3
2441974   +          +     2.00891057398994 * H1x2_4  +     0.23877185330348 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.54458122713319 * H1x2_1 + -1.01527351866283 * H1x2_2 
+ -1.05264779960249 * H1x2_3 + 2.00891057398994 * H1x2_4 + 0.23877185330348 * H1x2_5 ;
2441975   +   H2x1_3  = H2x1_3  +     0.45936122831356 * H1x2_1
2441976   +          +    -0.78158455560098 * H1x2_2  +    -0.93755507764598 * H1x2_3
2441977   +          +    -0.41290092050446 * H1x2_4  +    -1.08076286104858 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = H2x1_3 + 0.45936122831356 * H1x2_1 + -0.78158455560098 * H1x2_2 
+ -0.93755507764598 * H1x2_3 + -0.41290092050446 * H1x2_4 + -1.08076286104858 * H1x2_5 ;
2441978   +   H2x1_4  = H2x1_4  +     0.95365620475779 * H1x2_1
2441979   +          +    -0.84100294393078 * H1x2_2  +     0.70463413466954 * H1x2_3
2441980   +          +     1.80542761219637 * H1x2_4  +     0.45881360213194 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = H2x1_4 + 0.95365620475779 * H1x2_1 + -0.84100294393078 * H1x2_2 
+ 0.70463413466954 * H1x2_3 + 1.80542761219637 * H1x2_4 + 0.45881360213194 * H1x2_5 ;
2441981   +   H2x1_5  = H2x1_5  +     0.59629215620441 * H1x2_1
2441982   +          +    -0.66300910076078 * H1x2_2  +     0.53748646350811 * H1x2_3
2441983   +          +     0.40402787748621 * H1x2_4  +    -0.68066387330661 * H1x2_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = H2x1_5 + 0.59629215620441 * H1x2_1 + -0.66300910076078 * H1x2_2 
+ 0.53748646350811 * H1x2_3 + 0.40402787748621 * H1x2_4 + -0.68066387330661 * H1x2_5 ;
2441984   +   H2x1_1  =    -1.36901208947371 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.36901208947371 + H2x1_1 ;
2441985   +   H2x1_2  =     1.02513270875023 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.02513270875023 + H2x1_2 ;
2441986   +   H2x1_3  =     0.21017025934674 + H2x1_3 ;
MPRINT(EM_DIAGRAM):   H2x1_3 = 0.21017025934674 + H2x1_3 ;
2441987   +   H2x1_4  =    -1.15214364807652 + H2x1_4 ;
MPRINT(EM_DIAGRAM):   H2x1_4 = -1.15214364807652 + H2x1_4 ;
2441988   +   H2x1_5  =    -1.32590257108023 + H2x1_5 ;
MPRINT(EM_DIAGRAM):   H2x1_5 = -1.32590257108023 + H2x1_5 ;
2441989   +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
2441990   +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
2441991   +   H2x1_1  = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_1 = 1.0 / (1.0 + EXP(MIN( - H2x1_1 , _EXP_BAR)));
2441992   +   H2x1_2  = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_2 = 1.0 / (1.0 + EXP(MIN( - H2x1_2 , _EXP_BAR)));
2441993   +   H2x1_3  = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_3 = 1.0 / (1.0 + EXP(MIN( - H2x1_3 , _EXP_BAR)));
2441994   +   H2x1_4  = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_4 = 1.0 / (1.0 + EXP(MIN( - H2x1_4 , _EXP_BAR)));
2441995   +   H2x1_5  = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H2x1_5 = 1.0 / (1.0 + EXP(MIN( - H2x1_5 , _EXP_BAR)));
2441996   +END;
MPRINT(EM_DIAGRAM):   END;
2441997   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2441998   +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
2441999   +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
2442000   +   H2x1_3  = .;
MPRINT(EM_DIAGRAM):   H2x1_3 = .;
2442001   +   H2x1_4  = .;
MPRINT(EM_DIAGRAM):   H2x1_4 = .;
2442002   +   H2x1_5  = .;
MPRINT(EM_DIAGRAM):   H2x1_5 = .;
2442003   +END;
MPRINT(EM_DIAGRAM):   END;
2442004   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2442005   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
2442006   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2442007   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
2442008   +   P_DepVar1  =    -9.23664553457504 * H2x1_1  +     1.34611690798114 * H2x1_2
2442009   +          +    -6.67077102946651 * H2x1_3  +    -1.67245227685142 * H2x1_4
2442010   +          +    -7.67053346287177 * H2x1_5 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.23664553457504 * H2x1_1 + 1.34611690798114 * H2x1_2 + 
-6.67077102946651 * H2x1_3 + -1.67245227685142 * H2x1_4 + -7.67053346287177 * H2x1_5 ;
2442011   +   P_DepVar1  =      3.4145227149582 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.4145227149582 + P_DepVar1 ;
2442012   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
2442013   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
2442014   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
2442015   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
2442016   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
2442017   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
2442018   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
2442019   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
2442020   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
2442021   +END;
MPRINT(EM_DIAGRAM):   END;
2442022   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
2442023   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
2442024   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
2442025   +END;
MPRINT(EM_DIAGRAM):   END;
2442026   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
2442027   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
2442028   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
2442029   +END;
MPRINT(EM_DIAGRAM):   END;
2442030   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2442031   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
2442032   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
2442033   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
2442034   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
2442035   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
2442036   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
2442037   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
2442038   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
2442039   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
2442040   +END;
MPRINT(EM_DIAGRAM):   END;
2442041   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2442042   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
2442043   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
2442044   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2442045    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2442046    quit;
2442047    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2442048    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2442049    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2442050    retain ID 2 Node "AutoNeural10";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural10";
2442051    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2442052    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4719 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4719 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442053    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2442054    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442055    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4719 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4719 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442056    proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural10_variableset out=_temp2(keep=NAME 
CREATOR);
2442057    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442058    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL10_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442059    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2442060    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2442061    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2442062    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442063    proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural10_train out=_meta(keep=NAME) noprint;
2442064    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 68 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2442065    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2442066    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442067    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 68 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 68 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442068    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2442069    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2442070    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442071    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 68 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 68 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442072    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2442073    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2442073  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 2479 rows and 5 columns.

2442074    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442075    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2442076    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 2479 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 2479 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442077    filename _pref
2442077  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
2442078    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2442079    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
2442080   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2442081   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
2442082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
2442083   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
2442084   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
2442085   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2442086    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2442087    quit;
2442088    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2442089    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2442090    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2442091    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
2442092    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2442093    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442094    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2442095    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442096    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442097    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
2442098    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442099    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442100    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2442101    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2442102    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2442103    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442104    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
2442105    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

2442106    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2442107    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442108    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442109    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2442110    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2442111    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442112    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442113    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2442114    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2442114  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

2442115    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442116    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2442117    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 2483 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442118    filename _pref
2442118  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
2442119    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2442120    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
2442121   +
2442122   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
2442123   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
2442123  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
2442124   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
2442125   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
2442126   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
2442127   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
2442128   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2442129    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2442130    quit;
2442131    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2442132    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2442133    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2442134    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
2442135    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2442136    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442137    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2442138    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442139    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442140    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
2442141    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442142    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442143    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2442144    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2442145    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2442146    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442147    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
2442148    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442149    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2442150    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442151    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442152    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2442153    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2442154    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442155    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442156    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2442157    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2442157  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

2442158    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442159    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2442160    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 2522 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442161    filename _pref
2442161  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
2442162    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
2442163    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
2442164   +
2442165   +
2442166   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
2442167   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
2442168   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
2442169   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
2442170   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
2442171   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2442172   +
2442173   +
2442174   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
2442175   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
2442176   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
2442177   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
2442178   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
2442179   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2442180   +
2442181   +
2442182   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
2442183   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
2442184   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
2442185   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
2442186   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
2442187   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2442188   +
2442189   +
2442190   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
2442191   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
2442192   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
2442193   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
2442194   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
2442195   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2442196   +
2442197   +
2442198   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
2442199   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
2442200   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
2442201   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
2442202   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
2442203   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2442204   +
2442205   +
2442206   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
2442207   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
2442208   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
2442209   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
2442210   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
2442211   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2442212   +
2442213   +
2442214   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
2442215   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
2442216   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
2442217   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
2442218   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
2442219   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2442220   +
2442221   +
2442222   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
2442223   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
2442224   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
2442225   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
2442226   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
2442227   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
2442228   +if
2442229   +_FILTERNORM1 not in ( '.')
2442230   + and
2442231   +_FILTERNORM2 not in ( '.')
2442232   + and
2442233   +_FILTERNORM3 not in ( '.')
2442234   + and
2442235   +_FILTERNORM4 not in ( '.')
2442236   + and
2442237   +_FILTERNORM5 not in ( '.')
2442238   + and
2442239   +_FILTERNORM6 not in ( '.')
2442240   + and
2442241   +_FILTERNORM7 not in ( ' ')
2442242   + and
2442243   +_FILTERNORM8 not in ( ' ')
2442244   +and
2442245   +( Dt_Customer ne .)
2442246   +and ( Income ne . and (Income<=107000))
2442247   +and ( Kidhome ne .)
2442248   +and ( MntFishProducts ne .)
2442249   +and ( MntFruits ne .)
2442250   +and ( MntGoldProds ne .)
2442251   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
2442252   +and ( MntSweetProducts ne .)
2442253   +and ( MntWines ne .)
2442254   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
2442255   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
2442256   +and ( NumStorePurchases ne .)
2442257   +and ( NumWebPurchases ne .)
2442258   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
2442259   +and ( Recency ne .)
2442260   +and ( Teenhome ne .)
2442261   +and ( Year_Birth ne .)
2442262   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
2442263   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
2442264   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
2442265   +end;
MPRINT(EM_DIAGRAM):   end;
2442266   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
2442267   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
2442268    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
2442269    quit;
2442270    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
2442271    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
2442272    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
2442273    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
2442274    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
2442275    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442276    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
2442277    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442278    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442279    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
2442280    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442281    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442282    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2442283    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
2442284    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
2442285    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442286    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
2442287    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

2442288    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
2442289    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442290    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442291    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
2442292    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
2442293    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
2442294    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442295    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2442296    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
2442296  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

2442297    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442298    proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl45_FCMP data=_tempx;
2442299    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL45_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL45_FCMP has 2588 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442300    %macro varDept(fcmpdata=,id=);
2442301    %global nobs&id scoreFlag&id;
2442302    %let scoreFlag&id = 0;
2442303    %if &id=1 or ^&fcmpStart %then %do;
2442304    proc sort data=&fcmpdata out=_temp&id nodupkey;
2442305    by NAME;
2442306    where id=&id and LHS in( %let j=1;
2442307    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
2442308    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
2442309    "&var" %let j = %eval(&j+1);
2442310    %end;
2442311    );
2442312    run;
2442313    %let dsid = %sysfunc(open(_temp&id));
2442314    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2442315    %let dsid = %sysfunc(close(&dsid));
2442316    %if &&nobs&id %then %do;
2442317    %let scoreFlag&id = 1;
2442318    %let fcmpStart = 1;
2442319    %end;
2442320    %else %let fcmpStart = 0;
2442321    %end;
2442322    %else %do;
2442323    proc sort data=&fcmpdata out=_tempid;
2442324    where id=&id;
2442325    by LHS;
2442326    run;
2442327    %let dsid = %sysfunc(open(_tempid));
2442328    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2442329    %let dsid = %sysfunc(close(&dsid));
2442330    %if ^&&nobs&id %then %do;
2442331    proc datasets lib=work nolist;
2442332    delete _tempid;
2442333    run;
2442334    quit;
2442335    %end;
2442336    %else %do;
2442337    data _tempAll;
2442338    set %let j=%eval(&id-1);
2442339    %do x=1 %to &j;
2442340    %if &&nobs&x %then %do;
2442341    _temp&x %end;
2442342    %end;
2442343    ;
2442344    run;
2442345    proc sql;
2442346    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
2442346  ! work._tempid p2 where p.name=p2.lhs;
2442347    quit;
2442348    data _temp&id;
2442349    set _temp&id;
2442350    where LHS ne '' and NAME ne '' and Node ne '';
2442351    run;
2442352    proc datasets lib=work nolist;
2442353    delete _tempAll;
2442354    run;
2442355    %let dsid = %sysfunc(open(_temp&id));
2442356    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2442357    %let dsid = %sysfunc(close(&dsid));
2442358    %if ^&&nobs&id %then %do;
2442359    proc datasets lib=work nolist;
2442360    delete _temp&id;
2442361    run;
2442362    quit;
2442363    %end;
2442364    %else %do;
2442365    %let scoreFlag&id = 1;
2442366    data _temp&id;
2442367    set _temp&id;
2442368    where LHS ne NAME and node ne '';
2442369    run;
2442370    %let dsid = %sysfunc(open(_temp&id));
2442371    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
2442372    %let dsid = %sysfunc(close(&dsid));
2442373    %if ^&&nobs&id %then %do;
2442374    proc datasets lib=work nolist;
2442375    delete _temp&id;
2442376    run;
2442377    quit;
2442378    %end;
2442379    %else %do;
2442380    proc sort data=_temp&id nodupkey;
2442381    by LHS NAME;
2442382    run;
2442383    %end;
2442384    %end;
2442385    %end;
2442386    %end;
2442387    %mend varDept;
2442388    %macro optCode(outdata=fcmpdata);
2442389    %global fcmpStart;
2442390    %let fcmpStart = 0;
2442391    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
2442392    %let NumNodes=9;
2442393    %do k=1 %to &NumNodes;
2442394    %vardept(fcmpdata=&outdata, id=&k);
2442395    %end;
2442396    %mend optCode;
2442397    %optcode(outData=EMWS8.Ensmbl45_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 179 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 130 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 49 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 49 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 49 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 4 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 49 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 53 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 39 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 39 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 49 observations read from the data set WORK._TEMP2.
NOTE: There were 4 observations read from the data set WORK._TEMP5.
NOTE: There were 39 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 92 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl45_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

2442398    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
2442399    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2442400    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
2442401    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442402    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
2442403    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
2442404    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
2442405    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442406    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
2442407    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
2442407  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 4 rows and 3 columns.

2442408    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

2442409    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
2442410    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
2442411    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 4 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442412    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
2442413    * Ensmbl45: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Computing metadata for TRAIN data;
2442414    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL45_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl45\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl45_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl45_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl45_TRAIN out=WORK.M0_XP616 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0_XP616;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0_XP616(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0_XP616;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0_XP616;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M1A3ZR05 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1A3ZR05;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M1A3ZR05;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M22M6UIE(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M1A3ZR05;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1A3ZR05;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M1A3ZR05;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1A3ZR05;
MPRINT(EMADVISECOLUMNS):   set WORK.M1A3ZR05;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural9_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural9_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl45_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl45";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl45";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl45: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl45";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
2442734    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
2442735    set EMWS8.Ensmbl45_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl45_EMINFO;
2442736    where DATA='Ensmbl45' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl45' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
2442737    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL45_EMINFO.
      WHERE (DATA='Ensmbl45') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442738    data EMWS8.Ensmbl45_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl45_EMINFO;
2442739    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
2442740    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
2442741    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL45_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
2442745    run;
2442746    data EMWS8.Ensmbl45_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl45_EMINFO;
2442747    set EMWS8.Ensmbl45_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl45_EMINFO WORK.MODELTEMP_INFO;
2442748    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL45_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL45_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442749    proc sort data = EMWS8.Ensmbl45_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl45_EMINFO NOTHREADS;
2442750    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2442751    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL45_EMINFO.
NOTE: The data set EMWS8.ENSMBL45_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442752    proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural9_EMINFO OUT=WORK.SORTEDEMINFO 
NOTHREADS;
2442753    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2442754    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.AUTONEURAL9_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442755    proc sort data = EMWS8.Ensmbl45_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl45_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
2442756    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2442757    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL45_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

2442758    data EMWS8.Ensmbl45_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl45_EMINFO;
2442759    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
2442760    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
2442761    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL45_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

2442762    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
2442763    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
2442764    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
2442765    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.ENSMBL45_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL45_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
