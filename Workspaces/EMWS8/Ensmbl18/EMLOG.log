*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                13.34 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.34 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                13.34 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O26ET0YP
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl18\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O26ET0YP new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl18\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.34 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl18\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl18\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl18\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl18\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.34 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl18\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl18\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl18\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl18\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[95909] MAX=1 EXCEEDMAXVALUE='' )[95913] )[95907]
VALIDCHOICES=(CHOICE1='Y' )[95911] )[96195] INPUTREJECT=(WHERE='ROLE in("INPUT", "REJECTED")'
DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[95917]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[95921] )[95919] )[95915] TARGET=(WHERE='ROLE =
"TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[95925]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[95931] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[95929] )[95927] )[95923] )[95905]
202683     proc freq data=EMWS8.Ensmbl18_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl18_VariableSet noprint;
202684     table ROLE*LEVEL/out=WORK.Ensmbl18META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl18META;
202685     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.ENSMBL18_VARIABLESET.
NOTE: The data set WORK.ENSMBL18META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
202686     proc print data=WORK.Ensmbl18META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl18META label noobs;
202687     var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
202688     label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
202688   ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
202688   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
202689     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
202690     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
202691     run;
 
NOTE: There were 6 observations read from the data set WORK.ENSMBL18META.
NOTE: The PROCEDURE PRINT printed page 55.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
202692     title10;
MPRINT(EM_DIAGRAM):   title10;
202693     %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Neural21_TRAIN EMWS8.Neural21_TRAIN
EMWS8.Neural21_TRAIN EMWS8.Neural21_TRAIN EMWS8 Neural21_TRAIN
EMWS8.Neural21_TRAIN EMWS8.Neural21_TRAIN
EMWS8.Neural21_TRAIN EMWS8.Neural21_TRAIN EMWS8 Neural21_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Neural21_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural21_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
202722     data WORK.Ensmbl18_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl18_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
202723     length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
202724     label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
202724   ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
202724   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
202725        "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
202725   ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
202725   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
202726     set EMWS8.NEURAL21_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.NEURAL21_DEPVAR_DM( where=(_TYPE_="TARGET"));
202727     NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
202728     select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
202729     when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
202730     when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
202731     when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
202732     when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
202733     otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
202734     end;
MPRINT(EM_DIAGRAM):   end;
202735     output;
MPRINT(EM_DIAGRAM):   output;
202736     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL21_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL18_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
202737     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
202738     proc print data=WORK.Ensmbl18_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl18_EVENT noobs label;
202739     var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
202740     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
202741     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
202742     run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL18_EVENT.
NOTE: The PROCEDURE PRINT printed page 56.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
202743     title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
202744     proc print data = EMWS8.Neural21_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Neural21_DepVar_DM noobs label;
202745     var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
202746     where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
202747     label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
202747   ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
202747   ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
202748     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
202749     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
202750     run;
 
NOTE: There were 7 observations read from the data set EMWS8.NEURAL21_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 57.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
202751     title10;
MPRINT(EM_DIAGRAM):   title10;
202752     %let groupid =;
202753     %let endGroupid =;
202754     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
202755     set EMWS8.Neural22_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_EMINFO;
202756     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
202756   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
202757     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
202758     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
202759     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL22_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
202760     %let groupid =;
202761     %let endGroupid =;
202762     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
202763     set EMWS8.Neural21_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural21_EMINFO;
202764     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
202764   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
202765     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
202766     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
202767     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL21_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
202768     %let groupid =;
202769     %let endGroupid =;
202770     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
202771     set EMWS8.Neural18_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural18_EMINFO;
202772     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
202772   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
202773     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
202774     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
202775     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL18_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
202776     %let groupid =;
202777     %let endGroupid =;
202778     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
202779     set EMWS8.Reg7_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg7_EMINFO;
202780     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
202780   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
202781     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
202782     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
202783     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.REG7_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
202784     %let groupid =;
202785     %let endGroupid =;
202786     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
202787     set EMWS8.Reg3_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg3_EMINFO;
202788     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
202788   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
202789     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
202790     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
202791     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.REG3_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
202792     %let groupid =;
202793     %let endGroupid =;
202794     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
202795     set EMWS8.Neural5_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural5_EMINFO;
202796     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
202796   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
202797     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
202798     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
202799     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL5_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
202800     %let groupid =;
202801     %let endGroupid =;
202802     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
202803     set EMWS8.AutoNeural26_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural26_EMINFO;
202804     where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
202804   ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
202805     if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
202806     else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
202807     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL26_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
202808     data WORK.Ensmbl18;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl18;
202809     length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
202810     label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
202810   ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
202811     nodeid="NEURAL22";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL22";
202812     model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
202813     output;
MPRINT(EM_DIAGRAM):   output;
202814     nodeid="NEURAL21";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL21";
202815     model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
202816     output;
MPRINT(EM_DIAGRAM):   output;
202817     nodeid="NEURAL18";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL18";
202818     model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
202819     output;
MPRINT(EM_DIAGRAM):   output;
202820     nodeid="REG7";
MPRINT(EM_DIAGRAM):   nodeid="REG7";
202821     model="Regression";
MPRINT(EM_DIAGRAM):   model="Regression";
202822     output;
MPRINT(EM_DIAGRAM):   output;
202823     nodeid="REG3";
MPRINT(EM_DIAGRAM):   nodeid="REG3";
202824     model="Regression";
MPRINT(EM_DIAGRAM):   model="Regression";
202825     output;
MPRINT(EM_DIAGRAM):   output;
202826     nodeid="NEURAL5";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL5";
202827     model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
202828     output;
MPRINT(EM_DIAGRAM):   output;
202829     nodeid="AUTONEURAL26";
MPRINT(EM_DIAGRAM):   nodeid="AUTONEURAL26";
202830     model="AutoNeural";
MPRINT(EM_DIAGRAM):   model="AutoNeural";
202831     output;
MPRINT(EM_DIAGRAM):   output;
202832     ;
MPRINT(EM_DIAGRAM):   ;
202833     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL18 has 7 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
202834     title;
MPRINT(EM_DIAGRAM):   title;
202835     proc print data=WORK.Ensmbl18 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl18 label noobs;
202836     title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
202837     title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   run;
202838     run;
 
NOTE: There were 7 observations read from the data set WORK.ENSMBL18.
NOTE: The PROCEDURE PRINT printed page 58.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
202839     title9;
MPRINT(EM_DIAGRAM):   title9;
202840     title10;
MPRINT(EM_DIAGRAM):   title10;
202841     data WORK.M3L2S__C;
MPRINT(EM_DIAGRAM):    data WORK.M3L2S__C;
202842     set WORK.M3L2S__C;
MPRINT(EM_DIAGRAM):   set WORK.M3L2S__C;
202843     where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
202844     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M3L2S__C.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M3L2S__C has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
202845     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
202846     * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
202847     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
202848     %macro DMDBClass;
202849         DepVar(DESC)
202850     %mend DMDBClass;
202851     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
202852     * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
202853     *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
202854     %macro DMDBVar;
202855
202856     %mend DMDBVar;
202857     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202858     * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
202859     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202860     proc dmdb batch data=EMWS8.Neural22_TRAIN
202861     dmdbcat=WORK.EM_DMDB
202862     maxlevel = 513
202863     ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Neural22_TRAIN dmdbcat=WORK.EM_DMDB maxlevel
= 513 ;
MPRINT(EM_DIAGRAM):   class
202864     class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
202865     target
202866     DepVar
202867     ;
MPRINT(EM_DIAGRAM):   target DepVar ;
202868     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.NEURAL22_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL22_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
202869     quit;
202870     *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.34 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                13.34 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O339LNCT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl18\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O339LNCT new;
MPRINT(EM_DIAGRAM):   run;
202972     filename emflow
202972   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl18\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl18\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Scoring NEURAL22_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202973     *------------------------------------------------------------*;
202974     * Ensmbl18: Scoring NEURAL22_TRAIN data;
202975     *------------------------------------------------------------*;
202976     data EMWS8.Ensmbl18_TRAIN
202977     / view=EMWS8.Ensmbl18_TRAIN
202978     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl18_TRAIN / view=EMWS8.Ensmbl18_TRAIN ;
202979     set EMWS8.Neural22_TRAIN
202980     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_TRAIN ;
202981     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl18\EMFLOWSCORE.sas.
202982    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202983    +* Ensmbl18: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Combine model for DepVar;
202984    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202985    +* Ensmbl18: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Scoring Code of model 1 of 7;
202986    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202987    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202988    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
202989    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
202990    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
202991    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202992    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202993    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
202994    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
202995    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
202996    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202997    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
202998    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
202999    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
203000    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
203001    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203002    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203003    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
203004    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
203005    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
203006    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203007    +
203008    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
203009    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
203009   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
203010    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
203011    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
203012    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
203013    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
203014    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
203015    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203016    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
203017    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
203018    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
203019    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203020    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203021    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
203022    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203023    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
203024    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
203025    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
203026    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203027    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
203028    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
203029    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
203030    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203031    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203032    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
203033    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
203034    +* NODE: BINNING;
MPRINT(EM_DIAGRAM):   * NODE: BINNING;
203035    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203036    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
203037    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
203038    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
203039    +
203040    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203041    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
203042    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203043    +LABEL GRP_AcceptedCmp5 =
203044    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
203045    +
203046    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
203047    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
203048    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
203049    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
203050    +end;
MPRINT(EM_DIAGRAM):   end;
203051    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
203052    +if (_UFORMAT eq '0'
203053    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
203054    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
203055    +end;
MPRINT(EM_DIAGRAM):   end;
203056    +else
203057    +if (_UFORMAT eq '1'
203058    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
203059    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
203060    +end;
MPRINT(EM_DIAGRAM):   end;
203061    +else do;
MPRINT(EM_DIAGRAM):   else do;
203062    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
203063    +end;
MPRINT(EM_DIAGRAM):   end;
203064    +end;
MPRINT(EM_DIAGRAM):   end;
203065    +
203066    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203067    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
203068    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203069    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
203070    +
203071    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
203072    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
203073    +end;
MPRINT(EM_DIAGRAM):   end;
203074    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
203075    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
203076    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
203077    +end;
MPRINT(EM_DIAGRAM):   end;
203078    +else
203079    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
203080    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
203081    +end;
MPRINT(EM_DIAGRAM):   end;
203082    +else
203083    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
203084    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
203085    +end;
MPRINT(EM_DIAGRAM):   end;
203086    +else
203087    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
203088    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
203089    +end;
MPRINT(EM_DIAGRAM):   end;
203090    +end;
MPRINT(EM_DIAGRAM):   end;
203091    +
203092    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203093    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
203094    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203095    +LABEL GRP_Income =
203096    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
203097    +
203098    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
203099    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
203100    +end;
MPRINT(EM_DIAGRAM):   end;
203101    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
203102    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
203103    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
203104    +end;
MPRINT(EM_DIAGRAM):   end;
203105    +else
203106    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
203107    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
203108    +end;
MPRINT(EM_DIAGRAM):   end;
203109    +else
203110    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
203111    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
203112    +end;
MPRINT(EM_DIAGRAM):   end;
203113    +else
203114    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
203115    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
203116    +end;
MPRINT(EM_DIAGRAM):   end;
203117    +end;
MPRINT(EM_DIAGRAM):   end;
203118    +
203119    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203120    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
203121    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203122    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
203123    +
203124    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
203125    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
203126    +end;
MPRINT(EM_DIAGRAM):   end;
203127    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
203128    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
203129    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
203130    +end;
MPRINT(EM_DIAGRAM):   end;
203131    +else
203132    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
203133    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
203134    +end;
MPRINT(EM_DIAGRAM):   end;
203135    +else
203136    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
203137    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
203138    +end;
MPRINT(EM_DIAGRAM):   end;
203139    +else
203140    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
203141    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
203142    +end;
MPRINT(EM_DIAGRAM):   end;
203143    +end;
MPRINT(EM_DIAGRAM):   end;
203144    +
203145    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203146    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
203147    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203148    +LABEL GRP_MntFishProducts =
203149    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
203150    +
203151    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
203152    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
203153    +end;
MPRINT(EM_DIAGRAM):   end;
203154    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
203155    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
203156    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
203157    +end;
MPRINT(EM_DIAGRAM):   end;
203158    +else
203159    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
203160    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
203161    +end;
MPRINT(EM_DIAGRAM):   end;
203162    +else
203163    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
203164    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
203165    +end;
MPRINT(EM_DIAGRAM):   end;
203166    +else
203167    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
203168    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
203169    +end;
MPRINT(EM_DIAGRAM):   end;
203170    +end;
MPRINT(EM_DIAGRAM):   end;
203171    +
203172    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203173    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
203174    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203175    +LABEL GRP_MntGoldProds =
203176    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
203177    +
203178    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
203179    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
203180    +end;
MPRINT(EM_DIAGRAM):   end;
203181    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
203182    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
203183    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
203184    +end;
MPRINT(EM_DIAGRAM):   end;
203185    +else
203186    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
203187    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
203188    +end;
MPRINT(EM_DIAGRAM):   end;
203189    +else
203190    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
203191    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
203192    +end;
MPRINT(EM_DIAGRAM):   end;
203193    +else
203194    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
203195    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
203196    +end;
MPRINT(EM_DIAGRAM):   end;
203197    +end;
MPRINT(EM_DIAGRAM):   end;
203198    +
203199    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203200    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
203201    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203202    +LABEL GRP_MntMeatProducts =
203203    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
203204    +
203205    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
203206    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
203207    +end;
MPRINT(EM_DIAGRAM):   end;
203208    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
203209    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
203210    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
203211    +end;
MPRINT(EM_DIAGRAM):   end;
203212    +else
203213    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
203214    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
203215    +end;
MPRINT(EM_DIAGRAM):   end;
203216    +else
203217    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
203218    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
203219    +end;
MPRINT(EM_DIAGRAM):   end;
203220    +else
203221    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
203222    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
203223    +end;
MPRINT(EM_DIAGRAM):   end;
203224    +end;
MPRINT(EM_DIAGRAM):   end;
203225    +
203226    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203227    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
203228    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203229    +LABEL GRP_MntWines =
203230    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
203231    +
203232    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
203233    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
203234    +end;
MPRINT(EM_DIAGRAM):   end;
203235    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
203236    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
203237    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
203238    +end;
MPRINT(EM_DIAGRAM):   end;
203239    +else
203240    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
203241    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
203242    +end;
MPRINT(EM_DIAGRAM):   end;
203243    +else
203244    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
203245    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
203246    +end;
MPRINT(EM_DIAGRAM):   end;
203247    +else
203248    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
203249    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
203250    +end;
MPRINT(EM_DIAGRAM):   end;
203251    +end;
MPRINT(EM_DIAGRAM):   end;
203252    +
203253    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203254    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
203255    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203256    +LABEL GRP_NumCatalogPurchases =
203257    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
203258    +
203259    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
203260    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
203261    +end;
MPRINT(EM_DIAGRAM):   end;
203262    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
203263    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
203264    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
203265    +end;
MPRINT(EM_DIAGRAM):   end;
203266    +else
203267    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
203268    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
203269    +end;
MPRINT(EM_DIAGRAM):   end;
203270    +else
203271    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
203272    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
203273    +end;
MPRINT(EM_DIAGRAM):   end;
203274    +else
203275    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
203276    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
203277    +end;
MPRINT(EM_DIAGRAM):   end;
203278    +end;
MPRINT(EM_DIAGRAM):   end;
203279    +
203280    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203281    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
203282    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203283    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
203284    +
203285    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
203286    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
203287    +end;
MPRINT(EM_DIAGRAM):   end;
203288    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
203289    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
203290    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
203291    +end;
MPRINT(EM_DIAGRAM):   end;
203292    +else
203293    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
203294    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
203295    +end;
MPRINT(EM_DIAGRAM):   end;
203296    +else
203297    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
203298    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
203299    +end;
MPRINT(EM_DIAGRAM):   end;
203300    +else
203301    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
203302    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
203303    +end;
MPRINT(EM_DIAGRAM):   end;
203304    +end;
MPRINT(EM_DIAGRAM):   end;
203305    +
203306    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203307    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
203308    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203309    +LABEL GRP_NumWebPurchases =
203310    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
203311    +
203312    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
203313    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
203314    +end;
MPRINT(EM_DIAGRAM):   end;
203315    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
203316    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
203317    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
203318    +end;
MPRINT(EM_DIAGRAM):   end;
203319    +else
203320    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
203321    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
203322    +end;
MPRINT(EM_DIAGRAM):   end;
203323    +else
203324    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
203325    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
203326    +end;
MPRINT(EM_DIAGRAM):   end;
203327    +else
203328    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
203329    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
203330    +end;
MPRINT(EM_DIAGRAM):   end;
203331    +end;
MPRINT(EM_DIAGRAM):   end;
203332    +
203333    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203334    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
203335    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203336    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
203337    +
203338    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
203339    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
203340    +end;
MPRINT(EM_DIAGRAM):   end;
203341    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
203342    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
203343    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
203344    +end;
MPRINT(EM_DIAGRAM):   end;
203345    +else
203346    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
203347    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
203348    +end;
MPRINT(EM_DIAGRAM):   end;
203349    +else
203350    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
203351    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
203352    +end;
MPRINT(EM_DIAGRAM):   end;
203353    +else
203354    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
203355    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
203356    +end;
MPRINT(EM_DIAGRAM):   end;
203357    +end;
MPRINT(EM_DIAGRAM):   end;
203358    +
203359    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203360    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
203361    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203362    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
203363    +
The SAS System
 
203364    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
203365    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
203366    +end;
MPRINT(EM_DIAGRAM):   end;
203367    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
203368    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
203369    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
203370    +end;
MPRINT(EM_DIAGRAM):   end;
203371    +else
203372    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
203373    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
203374    +end;
MPRINT(EM_DIAGRAM):   end;
203375    +else
203376    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
203377    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
203378    +end;
MPRINT(EM_DIAGRAM):   end;
203379    +else
203380    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
203381    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
203382    +end;
MPRINT(EM_DIAGRAM):   end;
203383    +end;
MPRINT(EM_DIAGRAM):   end;
203384    +
203385    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203386    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
203387    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203388    +LABEL GRP_Recency =
203389    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
203390    +
203391    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
203392    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
203393    +end;
MPRINT(EM_DIAGRAM):   end;
203394    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
203395    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
203396    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
203397    +end;
MPRINT(EM_DIAGRAM):   end;
203398    +else
203399    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
203400    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
203401    +end;
MPRINT(EM_DIAGRAM):   end;
203402    +else
203403    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
203404    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
203405    +end;
MPRINT(EM_DIAGRAM):   end;
203406    +else
203407    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
203408    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
203409    +end;
MPRINT(EM_DIAGRAM):   end;
203410    +end;
MPRINT(EM_DIAGRAM):   end;
203411    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203412    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
203413    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
203414    +* NODE: Neural22;
MPRINT(EM_DIAGRAM):   * NODE: Neural22;
203415    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
203416    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
203417    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
203418    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
203419    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
203420    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
203421    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
203422    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
203423    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
203424    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
203425    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
203426    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
203427    +LENGTH _WARN_ $4
203428    +      F_DepVar  $ 12
203429    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
203430    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
203431    +
203432    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
203433    +
203434    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
203435    +
203436    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
203437    +
203438    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
203439    +
203440    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
203441    +
203442    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
203443    +
203444    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
203445    +
203446    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
203447    +
203448    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
203449    +
203450    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
203451    +
203452    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
203453    +
203454    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
203455    +
203456    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
203457    +
203458    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
203459    +
203460    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
203461    +
203462    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
203463    +
203464    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
203465    +
203466    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
203467    +
203468    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
203469    +
203470    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
203471    +
203472    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
203473    +
203474    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
203475    +
203476    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
203477    +
203478    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
203479    +
203480    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
203481    +
203482    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
203483    +
203484    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
203485    +
203486    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
203487    +
203488    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
203489    +
203490    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
203491    +
203492    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
203493    +
203494    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
203495    +
203496    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
203497    +
203498    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
203499    +
203500    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
203501    +
203502    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
203503    +
203504    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
203505    +
203506    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
203507    +
203508    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
203509    +
203510    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
203511    +
203512    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
203513    +
203514    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
203515    +
203516    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
203517    +
203518    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
203519    +
203520    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
203521    +
203522    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
203523    +
203524    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
203525    +
203526    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
203527    +
203528    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
203529    +
203530    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
203531    +
203532    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
203533    +
203534    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
203535    +
203536    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
203537    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
203538    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
203539    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
203540    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203541    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203542    +end;
MPRINT(EM_DIAGRAM):   end;
203543    +else do;
MPRINT(EM_DIAGRAM):   else do;
203544    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
203545    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
203546    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203547    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
203548    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
203549    +   end;
MPRINT(EM_DIAGRAM):   end;
203550    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
203551    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
203552    +   end;
MPRINT(EM_DIAGRAM):   end;
203553    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203554    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
203555    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203556    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203557    +   end;
MPRINT(EM_DIAGRAM):   end;
203558    +end;
MPRINT(EM_DIAGRAM):   end;
203559    +
203560    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
203561    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
203562    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
203563    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
203564    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
203565    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
203566    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203567    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203568    +end;
MPRINT(EM_DIAGRAM):   end;
203569    +else do;
MPRINT(EM_DIAGRAM):   else do;
203570    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
203571    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
203572    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203573    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
203574    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
203575    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
203576    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
203577    +   end;
MPRINT(EM_DIAGRAM):   end;
203578    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
203579    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
203580    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
203581    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
203582    +   end;
MPRINT(EM_DIAGRAM):   end;
203583    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
203584    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
203585    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
203586    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
203587    +   end;
MPRINT(EM_DIAGRAM):   end;
203588    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
203589    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
203590    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
203591    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
203592    +   end;
MPRINT(EM_DIAGRAM):   end;
203593    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203594    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
203595    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
203596    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
203597    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203598    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203599    +   end;
MPRINT(EM_DIAGRAM):   end;
203600    +end;
MPRINT(EM_DIAGRAM):   end;
203601    +
203602    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
203603    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
203604    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
203605    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
203606    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
203607    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
203608    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203609    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203610    +end;
MPRINT(EM_DIAGRAM):   end;
203611    +else do;
MPRINT(EM_DIAGRAM):   else do;
203612    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
203613    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
203614    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203615    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
203616    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
203617    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
203618    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
203619    +   end;
MPRINT(EM_DIAGRAM):   end;
203620    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
203621    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
203622    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
203623    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
203624    +   end;
MPRINT(EM_DIAGRAM):   end;
203625    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
203626    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
203627    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
203628    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
203629    +   end;
MPRINT(EM_DIAGRAM):   end;
203630    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
203631    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
203632    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
203633    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
203634    +   end;
MPRINT(EM_DIAGRAM):   end;
203635    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203636    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
203637    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
203638    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
203639    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203640    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203641    +   end;
MPRINT(EM_DIAGRAM):   end;
203642    +end;
MPRINT(EM_DIAGRAM):   end;
203643    +
203644    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
203645    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
203646    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
203647    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
203648    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
203649    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
203650    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203651    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203652    +end;
MPRINT(EM_DIAGRAM):   end;
203653    +else do;
MPRINT(EM_DIAGRAM):   else do;
203654    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
203655    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
203656    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203657    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
203658    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
203659    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
203660    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
203661    +   end;
MPRINT(EM_DIAGRAM):   end;
203662    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
203663    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
203664    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
203665    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
203666    +   end;
MPRINT(EM_DIAGRAM):   end;
203667    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
203668    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
203669    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
203670    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
203671    +   end;
MPRINT(EM_DIAGRAM):   end;
203672    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
203673    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
203674    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
203675    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
203676    +   end;
MPRINT(EM_DIAGRAM):   end;
203677    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203678    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
203679    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
203680    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
203681    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203682    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203683    +   end;
MPRINT(EM_DIAGRAM):   end;
203684    +end;
MPRINT(EM_DIAGRAM):   end;
203685    +
203686    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
203687    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
203688    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
203689    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
203690    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
203691    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
203692    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203693    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203694    +end;
MPRINT(EM_DIAGRAM):   end;
203695    +else do;
MPRINT(EM_DIAGRAM):   else do;
203696    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
203697    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
203698    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203699    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
203700    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
203701    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
203702    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
203703    +   end;
MPRINT(EM_DIAGRAM):   end;
203704    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
203705    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
203706    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
203707    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
203708    +   end;
MPRINT(EM_DIAGRAM):   end;
203709    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
203710    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
203711    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
203712    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
203713    +   end;
MPRINT(EM_DIAGRAM):   end;
203714    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
203715    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
203716    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
203717    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
203718    +   end;
MPRINT(EM_DIAGRAM):   end;
203719    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203720    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
203721    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
203722    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
203723    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203724    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203725    +   end;
MPRINT(EM_DIAGRAM):   end;
203726    +end;
MPRINT(EM_DIAGRAM):   end;
203727    +
203728    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
203729    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
203730    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
203731    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
203732    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
203733    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
203734    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203735    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203736    +end;
MPRINT(EM_DIAGRAM):   end;
203737    +else do;
MPRINT(EM_DIAGRAM):   else do;
203738    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
203739    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
203740    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203741    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
203742    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
203743    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
203744    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
203745    +   end;
MPRINT(EM_DIAGRAM):   end;
203746    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
203747    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
203748    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
203749    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
203750    +   end;
MPRINT(EM_DIAGRAM):   end;
203751    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
203752    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
203753    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
203754    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
203755    +   end;
MPRINT(EM_DIAGRAM):   end;
203756    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
203757    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
203758    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
203759    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
203760    +   end;
MPRINT(EM_DIAGRAM):   end;
203761    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203762    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
203763    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
203764    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
203765    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203766    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203767    +   end;
MPRINT(EM_DIAGRAM):   end;
203768    +end;
MPRINT(EM_DIAGRAM):   end;
203769    +
203770    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
203771    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
203772    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
203773    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
203774    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
203775    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
203776    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203777    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203778    +end;
MPRINT(EM_DIAGRAM):   end;
203779    +else do;
MPRINT(EM_DIAGRAM):   else do;
203780    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
203781    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
203782    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203783    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
203784    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
203785    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
203786    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
203787    +   end;
MPRINT(EM_DIAGRAM):   end;
203788    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
203789    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
203790    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
203791    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
203792    +   end;
MPRINT(EM_DIAGRAM):   end;
203793    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
203794    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
203795    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
203796    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
203797    +   end;
MPRINT(EM_DIAGRAM):   end;
203798    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
203799    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
203800    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
203801    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
203802    +   end;
MPRINT(EM_DIAGRAM):   end;
203803    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203804    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
203805    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
203806    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
203807    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203808    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203809    +   end;
MPRINT(EM_DIAGRAM):   end;
203810    +end;
MPRINT(EM_DIAGRAM):   end;
203811    +
203812    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
203813    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
203814    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
203815    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
203816    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
203817    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
203818    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203819    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203820    +end;
MPRINT(EM_DIAGRAM):   end;
203821    +else do;
MPRINT(EM_DIAGRAM):   else do;
203822    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
203823    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
203824    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203825    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
203826    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
203827    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
203828    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
203829    +   end;
MPRINT(EM_DIAGRAM):   end;
203830    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
203831    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
203832    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
203833    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
203834    +   end;
MPRINT(EM_DIAGRAM):   end;
203835    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
203836    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
203837    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
203838    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
203839    +   end;
MPRINT(EM_DIAGRAM):   end;
203840    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
203841    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
203842    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
203843    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
203844    +   end;
MPRINT(EM_DIAGRAM):   end;
203845    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203846    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
203847    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
203848    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
203849    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203850    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203851    +   end;
MPRINT(EM_DIAGRAM):   end;
203852    +end;
MPRINT(EM_DIAGRAM):   end;
203853    +
203854    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
203855    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
203856    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
203857    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
203858    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
203859    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203860    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203861    +end;
MPRINT(EM_DIAGRAM):   end;
203862    +else do;
MPRINT(EM_DIAGRAM):   else do;
203863    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
203864    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
203865    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203866    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
203867    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
203868    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
203869    +   end;
MPRINT(EM_DIAGRAM):   end;
203870    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
203871    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
203872    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
203873    +   end;
MPRINT(EM_DIAGRAM):   end;
203874    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
203875    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
203876    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
203877    +   end;
MPRINT(EM_DIAGRAM):   end;
203878    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203879    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
203880    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
203881    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203882    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203883    +   end;
MPRINT(EM_DIAGRAM):   end;
203884    +end;
MPRINT(EM_DIAGRAM):   end;
203885    +
203886    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
203887    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
203888    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
203889    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
203890    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
203891    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
203892    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203893    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203894    +end;
MPRINT(EM_DIAGRAM):   end;
203895    +else do;
MPRINT(EM_DIAGRAM):   else do;
203896    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
203897    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
203898    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203899    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
203900    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
203901    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
203902    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
203903    +   end;
MPRINT(EM_DIAGRAM):   end;
203904    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
203905    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
203906    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
203907    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
203908    +   end;
MPRINT(EM_DIAGRAM):   end;
203909    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
203910    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
203911    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
203912    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
203913    +   end;
MPRINT(EM_DIAGRAM):   end;
203914    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
203915    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
203916    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
203917    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
203918    +   end;
MPRINT(EM_DIAGRAM):   end;
203919    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203920    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
203921    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
203922    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
203923    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203924    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203925    +   end;
MPRINT(EM_DIAGRAM):   end;
203926    +end;
MPRINT(EM_DIAGRAM):   end;
203927    +
203928    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
203929    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
203930    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
203931    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
203932    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
203933    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
203934    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203935    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203936    +end;
MPRINT(EM_DIAGRAM):   end;
203937    +else do;
MPRINT(EM_DIAGRAM):   else do;
203938    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
203939    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
203940    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203941    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
203942    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
203943    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
203944    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
203945    +   end;
MPRINT(EM_DIAGRAM):   end;
203946    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
203947    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
203948    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
203949    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
203950    +   end;
MPRINT(EM_DIAGRAM):   end;
203951    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
203952    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
203953    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
203954    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
203955    +   end;
MPRINT(EM_DIAGRAM):   end;
203956    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
203957    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
203958    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
203959    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
203960    +   end;
MPRINT(EM_DIAGRAM):   end;
203961    +   else do;
MPRINT(EM_DIAGRAM):   else do;
203962    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
203963    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
203964    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
203965    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
203966    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203967    +   end;
MPRINT(EM_DIAGRAM):   end;
203968    +end;
MPRINT(EM_DIAGRAM):   end;
203969    +
203970    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
203971    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
203972    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
203973    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
203974    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
203975    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
203976    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
203977    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
203978    +end;
MPRINT(EM_DIAGRAM):   end;
203979    +else do;
MPRINT(EM_DIAGRAM):   else do;
203980    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
203981    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
203982    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
203983    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
203984    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
203985    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
203986    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
203987    +   end;
MPRINT(EM_DIAGRAM):   end;
203988    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
203989    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
203990    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
203991    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
203992    +   end;
MPRINT(EM_DIAGRAM):   end;
203993    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
203994    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
203995    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
203996    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
203997    +   end;
MPRINT(EM_DIAGRAM):   end;
203998    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
203999    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
204000    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
204001    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
204002    +   end;
MPRINT(EM_DIAGRAM):   end;
204003    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204004    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
204005    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
204006    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
204007    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204008    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204009    +   end;
MPRINT(EM_DIAGRAM):   end;
204010    +end;
MPRINT(EM_DIAGRAM):   end;
204011    +
204012    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
204013    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
204014    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
204015    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
204016    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
204017    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
204018    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204019    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204020    +end;
MPRINT(EM_DIAGRAM):   end;
204021    +else do;
MPRINT(EM_DIAGRAM):   else do;
204022    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
204023    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
204024    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204025    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
204026    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
204027    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
204028    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
204029    +   end;
MPRINT(EM_DIAGRAM):   end;
204030    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
204031    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
204032    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
204033    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
204034    +   end;
MPRINT(EM_DIAGRAM):   end;
204035    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
204036    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
204037    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
204038    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
204039    +   end;
MPRINT(EM_DIAGRAM):   end;
204040    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
204041    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
204042    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
204043    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
204044    +   end;
MPRINT(EM_DIAGRAM):   end;
204045    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204046    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
204047    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
204048    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
204049    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204050    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204051    +   end;
MPRINT(EM_DIAGRAM):   end;
204052    +end;
MPRINT(EM_DIAGRAM):   end;
204053    +
204054    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
204055    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
204056    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
204057    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
204058    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
204059    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
204060    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204061    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204062    +end;
MPRINT(EM_DIAGRAM):   end;
204063    +else do;
MPRINT(EM_DIAGRAM):   else do;
204064    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
204065    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
204066    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204067    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
204068    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
204069    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
204070    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
204071    +   end;
MPRINT(EM_DIAGRAM):   end;
204072    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
204073    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
204074    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
204075    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
204076    +   end;
MPRINT(EM_DIAGRAM):   end;
204077    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
204078    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
204079    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
204080    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
204081    +   end;
MPRINT(EM_DIAGRAM):   end;
204082    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
204083    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
204084    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
204085    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
204086    +   end;
MPRINT(EM_DIAGRAM):   end;
204087    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204088    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
204089    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
204090    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
204091    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204092    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204093    +   end;
MPRINT(EM_DIAGRAM):   end;
204094    +end;
MPRINT(EM_DIAGRAM):   end;
204095    +
204096    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204097    +*** Checking missing input Interval
204098    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
204099    +
204100    +IF NMISS(
204101    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
204102    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
204103    +
204104    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204105    +END;
MPRINT(EM_DIAGRAM):   END;
204106    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204107    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
204108    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204109    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
204110    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
204111    +END;
MPRINT(EM_DIAGRAM):   END;
204112    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
204113    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
204114    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
204115    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
204116    +END;
MPRINT(EM_DIAGRAM):   END;
204117    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204118    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
204119    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204120    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204121    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
204122    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204123    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
204124    +   H11  =     0.04727192845675 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.04727192845675 * S_Year_Birth ;
204125    +   H12  =    -0.03499603197831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.03499603197831 * S_Year_Birth ;
204126    +   H13  =      -0.249387333167 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.249387333167 * S_Year_Birth ;
204127    +   H14  =    -0.18145230662582 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.18145230662582 * S_Year_Birth ;
204128    +   H15  =    -0.07744416350216 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.07744416350216 * S_Year_Birth ;
204129    +   H11  = H11  +    -0.25371698668168 * GRP_AcceptedCmp52
204130    +          +     0.38185615945621 * GRP_Frq2  +     0.03545555759423 * GRP_Frq3
204131    +          +    -0.00061660249238 * GRP_Frq4  +     0.41779261820045 *
204132    +        GRP_Income2  +     0.51800912898069 * GRP_Income3
204133    +          +    -0.36427548932695 * GRP_Income4  +    -0.06433979614617 *
204134    +        GRP_Mnt2  +     0.00045120565293 * GRP_Mnt3  +    -0.13992317322759 *
204135    +        GRP_Mnt4  +     0.34207391538024 * GRP_MntFishProducts2
204136    +          +     0.03411739869638 * GRP_MntFishProducts3
204137    +          +      -0.083693402353 * GRP_MntFishProducts4
204138    +          +     -0.1318128730187 * GRP_MntGoldProds2
204139    +          +     -0.0614737729382 * GRP_MntGoldProds3
204140    +          +    -0.00372986687449 * GRP_MntGoldProds4
204141    +          +     -0.3129171829017 * GRP_MntMeatProducts2
204142    +          +     0.01519664718127 * GRP_MntMeatProducts3
204143    +          +     0.29997111548812 * GRP_MntMeatProducts4
204144    +          +       0.389673942682 * GRP_MntWines2  +     0.21159785789434 *
204145    +        GRP_MntWines3  +    -0.26921349986988 * GRP_MntWines4
204146    +          +    -0.47013218092095 * GRP_NumCatalogPurchases3
204147    +          +     0.23943411636141 * GRP_NumCatalogPurchases4
204148    +          +    -0.68715024477164 * GRP_NumDistPurchases2
204149    +          +    -0.09178471992122 * GRP_NumDistPurchases3
204150    +          +    -0.01170225640351 * GRP_NumDistPurchases4
204151    +          +    -0.14760833919227 * GRP_NumWebPurchases2
204152    +          +     0.02966820025811 * GRP_NumWebPurchases3
204153    +          +    -0.04127892210576 * GRP_NumWebPurchases4
204154    +          +    -0.45467119970502 * GRP_RFMstat2  +    -0.14644406995031 *
204155    +        GRP_RFMstat3  +    -0.12660007404037 * GRP_RFMstat4
204156    +          +     0.04829215694488 * GRP_RMntFrq2  +     0.10137738373353 *
204157    +        GRP_RMntFrq3  +     -0.2873514159435 * GRP_RMntFrq4
204158    +          +     0.61737333380878 * GRP_Recency2  +     0.16651370318087 *
204159    +        GRP_Recency3  +    -0.15382569411658 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25371698668168 * GRP_AcceptedCmp52 + 0.38185615945621 *
GRP_Frq2 + 0.03545555759423 * GRP_Frq3 + -0.00061660249238 * GRP_Frq4 + 0.41779261820045 *
GRP_Income2 + 0.51800912898069 * GRP_Income3 + -0.36427548932695 * GRP_Income4 +
-0.06433979614617 * GRP_Mnt2 + 0.00045120565293 * GRP_Mnt3 + -0.13992317322759 * GRP_Mnt4 +
0.34207391538024 * GRP_MntFishProducts2 + 0.03411739869638 * GRP_MntFishProducts3 +
-0.083693402353 * GRP_MntFishProducts4 + -0.1318128730187 * GRP_MntGoldProds2 +
-0.0614737729382 * GRP_MntGoldProds3 + -0.00372986687449 * GRP_MntGoldProds4 +
-0.3129171829017 * GRP_MntMeatProducts2 + 0.01519664718127 * GRP_MntMeatProducts3 +
0.29997111548812 * GRP_MntMeatProducts4 + 0.389673942682 * GRP_MntWines2 + 0.21159785789434 *
GRP_MntWines3 + -0.26921349986988 * GRP_MntWines4 + -0.47013218092095 *
GRP_NumCatalogPurchases3 + 0.23943411636141 * GRP_NumCatalogPurchases4 + -0.68715024477164 *
GRP_NumDistPurchases2 + -0.09178471992122 * GRP_NumDistPurchases3 + -0.01170225640351 *
GRP_NumDistPurchases4 + -0.14760833919227 * GRP_NumWebPurchases2 + 0.02966820025811 *
GRP_NumWebPurchases3 + -0.04127892210576 * GRP_NumWebPurchases4 + -0.45467119970502 *
GRP_RFMstat2 + -0.14644406995031 * GRP_RFMstat3 + -0.12660007404037 * GRP_RFMstat4 +
0.04829215694488 * GRP_RMntFrq2 + 0.10137738373353 * GRP_RMntFrq3 + -0.2873514159435 *
GRP_RMntFrq4 + 0.61737333380878 * GRP_Recency2 + 0.16651370318087 * GRP_Recency3 +
-0.15382569411658 * GRP_Recency4 ;
204160    +   H12  = H12  +    -0.00960598895677 * GRP_AcceptedCmp52
204161    +          +    -0.13877780492855 * GRP_Frq2  +    -0.12078849771739 * GRP_Frq3
204162    +          +     0.25058833013238 * GRP_Frq4  +     0.13932014454657 *
204163    +        GRP_Income2  +    -0.11560599273748 * GRP_Income3
204164    +          +    -0.36622829757109 * GRP_Income4  +     0.12796853065131 *
204165    +        GRP_Mnt2  +    -0.15829126446209 * GRP_Mnt3  +    -0.35779207872654 *
204166    +        GRP_Mnt4  +     0.06590491513415 * GRP_MntFishProducts2
204167    +          +     0.00842475350903 * GRP_MntFishProducts3
204168    +          +     -0.1623103908885 * GRP_MntFishProducts4
204169    +          +    -0.23845524931139 * GRP_MntGoldProds2
204170    +          +    -0.07128567155438 * GRP_MntGoldProds3
204171    +          +     0.25778887379163 * GRP_MntGoldProds4
204172    +          +    -0.12224351227219 * GRP_MntMeatProducts2
204173    +          +     0.06269922653052 * GRP_MntMeatProducts3
204174    +          +      0.2587215409794 * GRP_MntMeatProducts4
204175    +          +     0.20096090232239 * GRP_MntWines2  +    -0.16858917844476 *
204176    +        GRP_MntWines3  +     0.03815809499779 * GRP_MntWines4
204177    +          +     0.05177526225067 * GRP_NumCatalogPurchases3
204178    +          +    -0.18831777813313 * GRP_NumCatalogPurchases4
204179    +          +     0.12374838743082 * GRP_NumDistPurchases2
204180    +          +    -0.19910688422086 * GRP_NumDistPurchases3
204181    +          +    -0.03804569737208 * GRP_NumDistPurchases4
204182    +          +    -0.17179633678901 * GRP_NumWebPurchases2
204183    +          +    -0.08560184232365 * GRP_NumWebPurchases3
204184    +          +     0.09237237622553 * GRP_NumWebPurchases4
204185    +          +     0.01544327143979 * GRP_RFMstat2  +      0.1127818122444 *
204186    +        GRP_RFMstat3  +    -0.21371736650143 * GRP_RFMstat4
204187    +          +    -0.14005478166078 * GRP_RMntFrq2  +     0.07954568858907 *
204188    +        GRP_RMntFrq3  +    -0.02313269086836 * GRP_RMntFrq4
204189    +          +     0.04358116545272 * GRP_Recency2  +    -0.02969695172962 *
204190    +        GRP_Recency3  +     0.00206593904485 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00960598895677 * GRP_AcceptedCmp52 + -0.13877780492855 *
GRP_Frq2 + -0.12078849771739 * GRP_Frq3 + 0.25058833013238 * GRP_Frq4 + 0.13932014454657 *
GRP_Income2 + -0.11560599273748 * GRP_Income3 + -0.36622829757109 * GRP_Income4 +
0.12796853065131 * GRP_Mnt2 + -0.15829126446209 * GRP_Mnt3 + -0.35779207872654 * GRP_Mnt4 +
0.06590491513415 * GRP_MntFishProducts2 + 0.00842475350903 * GRP_MntFishProducts3 +
-0.1623103908885 * GRP_MntFishProducts4 + -0.23845524931139 * GRP_MntGoldProds2 +
-0.07128567155438 * GRP_MntGoldProds3 + 0.25778887379163 * GRP_MntGoldProds4 +
-0.12224351227219 * GRP_MntMeatProducts2 + 0.06269922653052 * GRP_MntMeatProducts3 +
0.2587215409794 * GRP_MntMeatProducts4 + 0.20096090232239 * GRP_MntWines2 + -0.16858917844476
* GRP_MntWines3 + 0.03815809499779 * GRP_MntWines4 + 0.05177526225067 *
GRP_NumCatalogPurchases3 + -0.18831777813313 * GRP_NumCatalogPurchases4 + 0.12374838743082 *
GRP_NumDistPurchases2 + -0.19910688422086 * GRP_NumDistPurchases3 + -0.03804569737208 *
GRP_NumDistPurchases4 + -0.17179633678901 * GRP_NumWebPurchases2 + -0.08560184232365 *
GRP_NumWebPurchases3 + 0.09237237622553 * GRP_NumWebPurchases4 + 0.01544327143979 *
GRP_RFMstat2 + 0.1127818122444 * GRP_RFMstat3 + -0.21371736650143 * GRP_RFMstat4 +
-0.14005478166078 * GRP_RMntFrq2 + 0.07954568858907 * GRP_RMntFrq3 + -0.02313269086836 *
GRP_RMntFrq4 + 0.04358116545272 * GRP_Recency2 + -0.02969695172962 * GRP_Recency3 +
0.00206593904485 * GRP_Recency4 ;
204191    +   H13  = H13  +     0.11273135858209 * GRP_AcceptedCmp52
204192    +          +    -0.15015665173608 * GRP_Frq2  +    -0.20454924588356 * GRP_Frq3
204193    +          +    -0.04047998964496 * GRP_Frq4  +    -0.29897237144541 *
204194    +        GRP_Income2  +      -0.028464296882 * GRP_Income3
204195    +          +     0.24836294191696 * GRP_Income4  +     0.08738925553158 *
204196    +        GRP_Mnt2  +     0.00962293230168 * GRP_Mnt3  +    -0.12661643514597 *
204197    +        GRP_Mnt4  +    -0.03747719154948 * GRP_MntFishProducts2
204198    +          +    -0.07078012229572 * GRP_MntFishProducts3
204199    +          +    -0.14569186671189 * GRP_MntFishProducts4
204200    +          +     0.14963390032413 * GRP_MntGoldProds2
204201    +          +    -0.11869917970226 * GRP_MntGoldProds3
204202    +          +     0.25943105626615 * GRP_MntGoldProds4
204203    +          +     0.36609689271233 * GRP_MntMeatProducts2
204204    +          +     0.10969864655073 * GRP_MntMeatProducts3
204205    +          +    -0.03446779336952 * GRP_MntMeatProducts4
204206    +          +    -0.16882321573662 * GRP_MntWines2  +     0.07914922328232 *
204207    +        GRP_MntWines3  +     0.13243594484158 * GRP_MntWines4
204208    +          +     0.39758714937962 * GRP_NumCatalogPurchases3
204209    +          +     0.31434011051179 * GRP_NumCatalogPurchases4
204210    +          +     0.08068432649382 * GRP_NumDistPurchases2
204211    +          +    -0.08875599058351 * GRP_NumDistPurchases3
204212    +          +     0.26738740475822 * GRP_NumDistPurchases4
204213    +          +     -0.0916247468051 * GRP_NumWebPurchases2
204214    +          +    -0.17267741073665 * GRP_NumWebPurchases3
204215    +          +     0.01349113315351 * GRP_NumWebPurchases4
204216    +          +    -0.19075973281592 * GRP_RFMstat2  +    -0.20146461162283 *
204217    +        GRP_RFMstat3  +    -0.13097471458987 * GRP_RFMstat4
204218    +          +     0.06761773631631 * GRP_RMntFrq2  +     0.27576244694442 *
204219    +        GRP_RMntFrq3  +      0.1281788430307 * GRP_RMntFrq4
204220    +          +    -0.15939599795679 * GRP_Recency2  +    -0.00210397286084 *
204221    +        GRP_Recency3  +     0.28490847560375 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.11273135858209 * GRP_AcceptedCmp52 + -0.15015665173608 *
GRP_Frq2 + -0.20454924588356 * GRP_Frq3 + -0.04047998964496 * GRP_Frq4 + -0.29897237144541 *
GRP_Income2 + -0.028464296882 * GRP_Income3 + 0.24836294191696 * GRP_Income4 +
0.08738925553158 * GRP_Mnt2 + 0.00962293230168 * GRP_Mnt3 + -0.12661643514597 * GRP_Mnt4 +
-0.03747719154948 * GRP_MntFishProducts2 + -0.07078012229572 * GRP_MntFishProducts3 +
-0.14569186671189 * GRP_MntFishProducts4 + 0.14963390032413 * GRP_MntGoldProds2 +
-0.11869917970226 * GRP_MntGoldProds3 + 0.25943105626615 * GRP_MntGoldProds4 +
0.36609689271233 * GRP_MntMeatProducts2 + 0.10969864655073 * GRP_MntMeatProducts3 +
-0.03446779336952 * GRP_MntMeatProducts4 + -0.16882321573662 * GRP_MntWines2 +
0.07914922328232 * GRP_MntWines3 + 0.13243594484158 * GRP_MntWines4 + 0.39758714937962 *
GRP_NumCatalogPurchases3 + 0.31434011051179 * GRP_NumCatalogPurchases4 + 0.08068432649382 *
GRP_NumDistPurchases2 + -0.08875599058351 * GRP_NumDistPurchases3 + 0.26738740475822 *
GRP_NumDistPurchases4 + -0.0916247468051 * GRP_NumWebPurchases2 + -0.17267741073665 *
GRP_NumWebPurchases3 + 0.01349113315351 * GRP_NumWebPurchases4 + -0.19075973281592 *
GRP_RFMstat2 + -0.20146461162283 * GRP_RFMstat3 + -0.13097471458987 * GRP_RFMstat4 +
0.06761773631631 * GRP_RMntFrq2 + 0.27576244694442 * GRP_RMntFrq3 + 0.1281788430307 *
GRP_RMntFrq4 + -0.15939599795679 * GRP_Recency2 + -0.00210397286084 * GRP_Recency3 +
0.28490847560375 * GRP_Recency4 ;
204222    +   H14  = H14  +     0.27713596853764 * GRP_AcceptedCmp52
204223    +          +    -0.11480256849934 * GRP_Frq2  +      0.0285240312455 * GRP_Frq3
204224    +          +     0.09416065239682 * GRP_Frq4  +     -0.1229961422993 *
204225    +        GRP_Income2  +     0.01867364051002 * GRP_Income3
204226    +          +     0.05820105400306 * GRP_Income4  +    -0.16873429334819 *
204227    +        GRP_Mnt2  +    -0.01221085891741 * GRP_Mnt3  +    -0.10225236565235 *
204228    +        GRP_Mnt4  +    -0.09613387975858 * GRP_MntFishProducts2
204229    +          +    -0.18334484867808 * GRP_MntFishProducts3
204230    +          +     0.13484477561766 * GRP_MntFishProducts4
204231    +          +    -0.05145913380692 * GRP_MntGoldProds2
204232    +          +     0.04459987080173 * GRP_MntGoldProds3
204233    +          +     0.01539767655772 * GRP_MntGoldProds4
204234    +          +     0.26537148543352 * GRP_MntMeatProducts2
204235    +          +     0.22913678530176 * GRP_MntMeatProducts3
204236    +          +     0.21262490658374 * GRP_MntMeatProducts4
204237    +          +    -0.11513521401249 * GRP_MntWines2  +    -0.14420673462527 *
204238    +        GRP_MntWines3  +     0.11949691312637 * GRP_MntWines4
204239    +          +    -0.02289734111038 * GRP_NumCatalogPurchases3
204240    +          +    -0.12014539185275 * GRP_NumCatalogPurchases4
204241    +          +     0.09224372228857 * GRP_NumDistPurchases2
204242    +          +    -0.14205094961773 * GRP_NumDistPurchases3
204243    +          +    -0.27160467877541 * GRP_NumDistPurchases4
204244    +          +    -0.15428446875019 * GRP_NumWebPurchases2
204245    +          +    -0.36914157795453 * GRP_NumWebPurchases3
204246    +          +    -0.41610537355059 * GRP_NumWebPurchases4
204247    +          +    -0.29442656678388 * GRP_RFMstat2  +     0.03961235509827 *
204248    +        GRP_RFMstat3  +    -0.18322878380243 * GRP_RFMstat4
204249    +          +     0.06857495854453 * GRP_RMntFrq2  +     0.08325769999442 *
204250    +        GRP_RMntFrq3  +     0.24334424933749 * GRP_RMntFrq4
204251    +          +    -0.50963259840069 * GRP_Recency2  +    -0.24163634485458 *
204252    +        GRP_Recency3  +     -0.1023689653207 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.27713596853764 * GRP_AcceptedCmp52 + -0.11480256849934 *
GRP_Frq2 + 0.0285240312455 * GRP_Frq3 + 0.09416065239682 * GRP_Frq4 + -0.1229961422993 *
GRP_Income2 + 0.01867364051002 * GRP_Income3 + 0.05820105400306 * GRP_Income4 +
-0.16873429334819 * GRP_Mnt2 + -0.01221085891741 * GRP_Mnt3 + -0.10225236565235 * GRP_Mnt4 +
-0.09613387975858 * GRP_MntFishProducts2 + -0.18334484867808 * GRP_MntFishProducts3 +
0.13484477561766 * GRP_MntFishProducts4 + -0.05145913380692 * GRP_MntGoldProds2 +
0.04459987080173 * GRP_MntGoldProds3 + 0.01539767655772 * GRP_MntGoldProds4 + 0.26537148543352
* GRP_MntMeatProducts2 + 0.22913678530176 * GRP_MntMeatProducts3 + 0.21262490658374 *
GRP_MntMeatProducts4 + -0.11513521401249 * GRP_MntWines2 + -0.14420673462527 * GRP_MntWines3 +
0.11949691312637 * GRP_MntWines4 + -0.02289734111038 * GRP_NumCatalogPurchases3 +
-0.12014539185275 * GRP_NumCatalogPurchases4 + 0.09224372228857 * GRP_NumDistPurchases2 +
-0.14205094961773 * GRP_NumDistPurchases3 + -0.27160467877541 * GRP_NumDistPurchases4 +
-0.15428446875019 * GRP_NumWebPurchases2 + -0.36914157795453 * GRP_NumWebPurchases3 +
-0.41610537355059 * GRP_NumWebPurchases4 + -0.29442656678388 * GRP_RFMstat2 + 0.03961235509827
* GRP_RFMstat3 + -0.18322878380243 * GRP_RFMstat4 + 0.06857495854453 * GRP_RMntFrq2 +
0.08325769999442 * GRP_RMntFrq3 + 0.24334424933749 * GRP_RMntFrq4 + -0.50963259840069 *
GRP_Recency2 + -0.24163634485458 * GRP_Recency3 + -0.1023689653207 * GRP_Recency4 ;
204253    +   H15  = H15  +    -0.58071728739803 * GRP_AcceptedCmp52
204254    +          +    -0.33803120859672 * GRP_Frq2  +    -0.08690701614481 * GRP_Frq3
204255    +          +     0.06107334775294 * GRP_Frq4  +     0.00751374071999 *
204256    +        GRP_Income2  +     0.20911873861779 * GRP_Income3
204257    +          +    -0.14977199160976 * GRP_Income4  +     0.15427447371686 *
204258    +        GRP_Mnt2  +    -0.24298277669059 * GRP_Mnt3  +    -0.02935492111499 *
204259    +        GRP_Mnt4  +     0.04923982061963 * GRP_MntFishProducts2
204260    +          +    -0.08952948139975 * GRP_MntFishProducts3
204261    +          +     0.15338133379465 * GRP_MntFishProducts4
204262    +          +     0.04821845492824 * GRP_MntGoldProds2
204263    +          +     0.20117781904284 * GRP_MntGoldProds3
204264    +          +     0.13013396690778 * GRP_MntGoldProds4
204265    +          +    -0.03940841472157 * GRP_MntMeatProducts2
204266    +          +     0.03161017721112 * GRP_MntMeatProducts3
204267    +          +    -0.21938330779867 * GRP_MntMeatProducts4
204268    +          +      0.3039864690076 * GRP_MntWines2  +     0.33038690291786 *
204269    +        GRP_MntWines3  +     0.03314465135063 * GRP_MntWines4
204270    +          +    -0.07655889365033 * GRP_NumCatalogPurchases3
204271    +          +    -0.17353955777897 * GRP_NumCatalogPurchases4
204272    +          +    -0.16058154480995 * GRP_NumDistPurchases2
204273    +          +    -0.30101518928361 * GRP_NumDistPurchases3
204274    +          +      0.0473480026433 * GRP_NumDistPurchases4
204275    +          +     0.03132883547053 * GRP_NumWebPurchases2
204276    +          +    -0.29425936985479 * GRP_NumWebPurchases3
204277    +          +    -0.12527625315403 * GRP_NumWebPurchases4
204278    +          +     0.30683805591766 * GRP_RFMstat2  +    -0.21275334469197 *
204279    +        GRP_RFMstat3  +     0.32474239840607 * GRP_RFMstat4
204280    +          +     0.09289841520091 * GRP_RMntFrq2  +     0.22137778862379 *
204281    +        GRP_RMntFrq3  +     0.12254524703503 * GRP_RMntFrq4
204282    +          +     0.46836624272095 * GRP_Recency2  +     0.01747843890017 *
204283    +        GRP_Recency3  +    -0.28363324780869 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.58071728739803 * GRP_AcceptedCmp52 + -0.33803120859672 *
GRP_Frq2 + -0.08690701614481 * GRP_Frq3 + 0.06107334775294 * GRP_Frq4 + 0.00751374071999 *
GRP_Income2 + 0.20911873861779 * GRP_Income3 + -0.14977199160976 * GRP_Income4 +
0.15427447371686 * GRP_Mnt2 + -0.24298277669059 * GRP_Mnt3 + -0.02935492111499 * GRP_Mnt4 +
0.04923982061963 * GRP_MntFishProducts2 + -0.08952948139975 * GRP_MntFishProducts3 +
0.15338133379465 * GRP_MntFishProducts4 + 0.04821845492824 * GRP_MntGoldProds2 +
0.20117781904284 * GRP_MntGoldProds3 + 0.13013396690778 * GRP_MntGoldProds4 +
-0.03940841472157 * GRP_MntMeatProducts2 + 0.03161017721112 * GRP_MntMeatProducts3 +
-0.21938330779867 * GRP_MntMeatProducts4 + 0.3039864690076 * GRP_MntWines2 + 0.33038690291786
* GRP_MntWines3 + 0.03314465135063 * GRP_MntWines4 + -0.07655889365033 *
GRP_NumCatalogPurchases3 + -0.17353955777897 * GRP_NumCatalogPurchases4 + -0.16058154480995 *
GRP_NumDistPurchases2 + -0.30101518928361 * GRP_NumDistPurchases3 + 0.0473480026433 *
GRP_NumDistPurchases4 + 0.03132883547053 * GRP_NumWebPurchases2 + -0.29425936985479 *
GRP_NumWebPurchases3 + -0.12527625315403 * GRP_NumWebPurchases4 + 0.30683805591766 *
GRP_RFMstat2 + -0.21275334469197 * GRP_RFMstat3 + 0.32474239840607 * GRP_RFMstat4 +
0.09289841520091 * GRP_RMntFrq2 + 0.22137778862379 * GRP_RMntFrq3 + 0.12254524703503 *
GRP_RMntFrq4 + 0.46836624272095 * GRP_Recency2 + 0.01747843890017 * GRP_Recency3 +
-0.28363324780869 * GRP_Recency4 ;
204284    +   H11  =    -0.09329902916762 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.09329902916762 + H11 ;
204285    +   H12  =     0.21894996952826 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.21894996952826 + H12 ;
204286    +   H13  =    -0.97210428395662 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.97210428395662 + H13 ;
204287    +   H14  =    -0.47241372860242 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.47241372860242 + H14 ;
204288    +   H15  =    -0.89551869986721 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.89551869986721 + H15 ;
204289    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
204290    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
204291    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
204292    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
204293    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
204294    +END;
MPRINT(EM_DIAGRAM):   END;
204295    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
204296    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
204297    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
204298    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
204299    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
204300    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
204301    +END;
MPRINT(EM_DIAGRAM):   END;
204302    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204303    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
204304    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204305    +
204306    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
204307    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
204308    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
204309    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
204310    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
204311    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204312    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
204313    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
204314    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
204315    +end;
MPRINT(EM_DIAGRAM):   end;
204316    +else do;
MPRINT(EM_DIAGRAM):   else do;
204317    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
204318    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
204319    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
204320    +   end;
MPRINT(EM_DIAGRAM):   end;
204321    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
204322    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
204323    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
204324    +   end;
MPRINT(EM_DIAGRAM):   end;
204325    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204326    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
204327    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
204328    +   end;
MPRINT(EM_DIAGRAM):   end;
204329    +end;
MPRINT(EM_DIAGRAM):   end;
204330    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
204331    +   P_DepVar1  =     2.68876927057109 * H11  +     0.34381275178608 * H12
204332    +          +    -1.13153750790029 * H13  +    -0.93563986714952 * H14
204333    +          +     1.84382077322412 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.68876927057109 * H11 + 0.34381275178608 * H12 +
-1.13153750790029 * H13 + -0.93563986714952 * H14 + 1.84382077322412 * H15 ;
204334    +   P_DepVar1  =    -1.53169022796223 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53169022796223 + P_DepVar1 ;
204335    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
204336    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
204337    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
204338    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
204339    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
204340    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
204341    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
204342    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
204343    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
204344    +END;
MPRINT(EM_DIAGRAM):   END;
204345    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
204346    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
204347    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
204348    +END;
MPRINT(EM_DIAGRAM):   END;
204349    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
204350    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
204351    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
204352    +END;
MPRINT(EM_DIAGRAM):   END;
204353    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
204354    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
204355    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
204356    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
204357    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
204358    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
204359    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
204360    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204361    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
204362    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
204363    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
204364    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
204365    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
204366    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
204367    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
204368    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
204369    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
204370    +END;
MPRINT(EM_DIAGRAM):   END;
204371    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
204372    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
204373    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
204374    +drop
204375    +H11
204376    +H12
204377    +H13
204378    +H14
204379    +H15
204380    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
204381    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
204382    +* Renaming variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural22;
204383    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204384    +* Renaming Posterior variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural22;
204385    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204386    +drop Neural22_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar1;
204387    +Neural22_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar1 = P_DepVar1;
204388    +drop Neural22_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar0;
204389    +Neural22_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar0 = P_DepVar0;
204390    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204391    +* Renaming _WARN_ variable for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural22;
204392    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204393    +length Neural22_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural22_WARN_ $4;
204394    +drop Neural22_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural22_WARN_;
204395    +Neural22_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural22_WARN_ = _WARN_;
204396    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204397    +* Ensmbl18: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Scoring Code of model 2 of 7;
204398    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204399    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204400    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
204401    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
204402    +* NODE: Neural21;
MPRINT(EM_DIAGRAM):   * NODE: Neural21;
204403    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
204404    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
204405    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
204406    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
204407    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
204408    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
204409    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
204410    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
204411    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
204412    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
204413    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
204414    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
204415    +LENGTH _WARN_ $4
204416    +      F_DepVar  $ 12
204417    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
204418    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
204419    +
204420    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
204421    +
204422    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
204423    +
204424    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
204425    +
204426    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
204427    +
204428    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
204429    +
204430    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
204431    +
204432    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
204433    +
204434    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
204435    +
204436    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
204437    +
204438    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
204439    +
204440    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
204441    +
204442    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
204443    +
204444    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
204445    +
204446    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
204447    +
204448    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
204449    +
204450    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
204451    +
204452    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
204453    +
204454    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
204455    +
204456    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
204457    +
204458    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
204459    +
204460    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
204461    +
204462    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
204463    +
204464    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
204465    +
204466    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
204467    +
204468    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
204469    +
204470    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
204471    +
204472    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
204473    +
204474    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
204475    +
204476    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
204477    +
204478    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
204479    +
204480    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
204481    +
204482    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
204483    +
204484    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
204485    +
204486    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
204487    +
204488    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
204489    +
204490    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
204491    +
204492    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
204493    +
204494    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
204495    +
204496    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
204497    +
204498    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
204499    +
204500    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
204501    +
204502    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
204503    +
204504    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
204505    +
204506    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
204507    +
204508    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
204509    +
204510    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
204511    +
204512    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
204513    +
204514    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
204515    +
204516    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
204517    +
204518    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
204519    +
204520    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
204521    +
204522    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
204523    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
204524    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
204525    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
204526    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204527    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204528    +end;
MPRINT(EM_DIAGRAM):   end;
204529    +else do;
MPRINT(EM_DIAGRAM):   else do;
204530    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
204531    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
204532    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204533    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
204534    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
204535    +   end;
MPRINT(EM_DIAGRAM):   end;
204536    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
204537    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
204538    +   end;
MPRINT(EM_DIAGRAM):   end;
204539    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204540    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
204541    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204542    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204543    +   end;
MPRINT(EM_DIAGRAM):   end;
204544    +end;
MPRINT(EM_DIAGRAM):   end;
204545    +
204546    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
204547    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
204548    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
204549    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
204550    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
204551    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
204552    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204553    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204554    +end;
MPRINT(EM_DIAGRAM):   end;
204555    +else do;
MPRINT(EM_DIAGRAM):   else do;
204556    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
204557    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
204558    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204559    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
204560    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
204561    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
204562    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
204563    +   end;
MPRINT(EM_DIAGRAM):   end;
204564    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
204565    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
204566    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
204567    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
204568    +   end;
MPRINT(EM_DIAGRAM):   end;
204569    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
204570    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
204571    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
204572    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
204573    +   end;
MPRINT(EM_DIAGRAM):   end;
204574    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
204575    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
204576    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
204577    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
204578    +   end;
MPRINT(EM_DIAGRAM):   end;
204579    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204580    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
204581    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
204582    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
204583    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204584    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204585    +   end;
MPRINT(EM_DIAGRAM):   end;
204586    +end;
MPRINT(EM_DIAGRAM):   end;
204587    +
204588    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
204589    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
204590    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
204591    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
204592    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
204593    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
204594    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204595    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204596    +end;
MPRINT(EM_DIAGRAM):   end;
204597    +else do;
MPRINT(EM_DIAGRAM):   else do;
204598    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
204599    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
204600    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204601    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
204602    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
204603    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
204604    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
204605    +   end;
MPRINT(EM_DIAGRAM):   end;
204606    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
204607    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
204608    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
204609    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
204610    +   end;
MPRINT(EM_DIAGRAM):   end;
204611    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
204612    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
204613    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
204614    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
204615    +   end;
MPRINT(EM_DIAGRAM):   end;
204616    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
204617    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
204618    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
204619    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
204620    +   end;
MPRINT(EM_DIAGRAM):   end;
204621    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204622    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
204623    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
204624    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
204625    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204626    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204627    +   end;
MPRINT(EM_DIAGRAM):   end;
204628    +end;
MPRINT(EM_DIAGRAM):   end;
204629    +
204630    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
204631    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
204632    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
204633    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
204634    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
204635    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
204636    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204637    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204638    +end;
MPRINT(EM_DIAGRAM):   end;
204639    +else do;
MPRINT(EM_DIAGRAM):   else do;
204640    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
204641    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
204642    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204643    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
204644    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
204645    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
204646    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
204647    +   end;
MPRINT(EM_DIAGRAM):   end;
204648    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
204649    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
204650    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
204651    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
204652    +   end;
MPRINT(EM_DIAGRAM):   end;
204653    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
204654    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
204655    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
204656    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
204657    +   end;
MPRINT(EM_DIAGRAM):   end;
204658    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
204659    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
204660    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
204661    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
204662    +   end;
MPRINT(EM_DIAGRAM):   end;
204663    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204664    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
204665    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
204666    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
204667    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204668    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204669    +   end;
MPRINT(EM_DIAGRAM):   end;
204670    +end;
MPRINT(EM_DIAGRAM):   end;
204671    +
204672    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
204673    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
204674    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
204675    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
204676    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
204677    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
204678    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204679    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204680    +end;
MPRINT(EM_DIAGRAM):   end;
204681    +else do;
MPRINT(EM_DIAGRAM):   else do;
204682    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
204683    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
204684    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204685    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
204686    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
204687    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
204688    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
204689    +   end;
MPRINT(EM_DIAGRAM):   end;
204690    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
204691    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
204692    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
204693    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
204694    +   end;
MPRINT(EM_DIAGRAM):   end;
204695    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
204696    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
204697    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
204698    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
204699    +   end;
MPRINT(EM_DIAGRAM):   end;
204700    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
204701    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
204702    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
204703    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
204704    +   end;
MPRINT(EM_DIAGRAM):   end;
204705    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204706    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
204707    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
204708    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
204709    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204710    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204711    +   end;
MPRINT(EM_DIAGRAM):   end;
204712    +end;
MPRINT(EM_DIAGRAM):   end;
204713    +
204714    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
204715    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
204716    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
204717    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
204718    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
204719    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
204720    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204721    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204722    +end;
MPRINT(EM_DIAGRAM):   end;
204723    +else do;
MPRINT(EM_DIAGRAM):   else do;
204724    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
204725    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
204726    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204727    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
204728    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
204729    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
204730    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
204731    +   end;
MPRINT(EM_DIAGRAM):   end;
204732    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
204733    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
204734    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
204735    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
204736    +   end;
MPRINT(EM_DIAGRAM):   end;
204737    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
204738    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
204739    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
204740    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
204741    +   end;
MPRINT(EM_DIAGRAM):   end;
204742    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
204743    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
204744    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
204745    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
204746    +   end;
MPRINT(EM_DIAGRAM):   end;
204747    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204748    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
204749    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
204750    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
204751    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204752    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204753    +   end;
MPRINT(EM_DIAGRAM):   end;
204754    +end;
MPRINT(EM_DIAGRAM):   end;
204755    +
204756    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
204757    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
204758    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
204759    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
204760    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
204761    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
204762    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204763    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204764    +end;
MPRINT(EM_DIAGRAM):   end;
204765    +else do;
MPRINT(EM_DIAGRAM):   else do;
204766    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
204767    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
204768    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204769    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
204770    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
204771    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
204772    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
204773    +   end;
MPRINT(EM_DIAGRAM):   end;
204774    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
204775    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
204776    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
204777    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
204778    +   end;
MPRINT(EM_DIAGRAM):   end;
204779    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
204780    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
204781    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
204782    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
204783    +   end;
MPRINT(EM_DIAGRAM):   end;
204784    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
204785    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
204786    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
204787    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
204788    +   end;
MPRINT(EM_DIAGRAM):   end;
204789    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204790    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
204791    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
204792    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
204793    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204794    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204795    +   end;
MPRINT(EM_DIAGRAM):   end;
204796    +end;
MPRINT(EM_DIAGRAM):   end;
204797    +
204798    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
204799    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
204800    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
204801    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
204802    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
204803    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
204804    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204805    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204806    +end;
MPRINT(EM_DIAGRAM):   end;
204807    +else do;
MPRINT(EM_DIAGRAM):   else do;
204808    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
204809    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
204810    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204811    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
204812    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
204813    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
204814    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
204815    +   end;
MPRINT(EM_DIAGRAM):   end;
204816    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
204817    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
204818    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
204819    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
204820    +   end;
MPRINT(EM_DIAGRAM):   end;
204821    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
204822    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
204823    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
204824    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
204825    +   end;
MPRINT(EM_DIAGRAM):   end;
204826    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
204827    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
204828    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
204829    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
204830    +   end;
MPRINT(EM_DIAGRAM):   end;
204831    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204832    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
204833    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
204834    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
204835    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204836    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204837    +   end;
MPRINT(EM_DIAGRAM):   end;
204838    +end;
MPRINT(EM_DIAGRAM):   end;
204839    +
204840    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
204841    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
204842    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
204843    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
204844    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
204845    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204846    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204847    +end;
MPRINT(EM_DIAGRAM):   end;
204848    +else do;
MPRINT(EM_DIAGRAM):   else do;
204849    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
204850    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
204851    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204852    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
204853    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
204854    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
204855    +   end;
MPRINT(EM_DIAGRAM):   end;
204856    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
204857    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
204858    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
204859    +   end;
MPRINT(EM_DIAGRAM):   end;
204860    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
204861    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
204862    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
204863    +   end;
MPRINT(EM_DIAGRAM):   end;
204864    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204865    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
204866    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
204867    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204868    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204869    +   end;
MPRINT(EM_DIAGRAM):   end;
204870    +end;
MPRINT(EM_DIAGRAM):   end;
204871    +
204872    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
204873    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
204874    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
204875    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
204876    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
204877    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
204878    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204879    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204880    +end;
MPRINT(EM_DIAGRAM):   end;
204881    +else do;
MPRINT(EM_DIAGRAM):   else do;
204882    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
204883    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
204884    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204885    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
204886    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
204887    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
204888    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
204889    +   end;
MPRINT(EM_DIAGRAM):   end;
204890    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
204891    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
204892    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
204893    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
204894    +   end;
MPRINT(EM_DIAGRAM):   end;
204895    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
204896    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
204897    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
204898    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
204899    +   end;
MPRINT(EM_DIAGRAM):   end;
204900    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
204901    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
204902    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
204903    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
204904    +   end;
MPRINT(EM_DIAGRAM):   end;
204905    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204906    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
204907    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
204908    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
204909    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204910    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204911    +   end;
MPRINT(EM_DIAGRAM):   end;
204912    +end;
MPRINT(EM_DIAGRAM):   end;
204913    +
204914    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
204915    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
204916    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
204917    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
204918    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
204919    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
204920    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204921    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204922    +end;
MPRINT(EM_DIAGRAM):   end;
204923    +else do;
MPRINT(EM_DIAGRAM):   else do;
204924    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
204925    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
204926    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204927    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
204928    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
204929    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
204930    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
204931    +   end;
MPRINT(EM_DIAGRAM):   end;
204932    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
204933    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
204934    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
204935    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
204936    +   end;
MPRINT(EM_DIAGRAM):   end;
204937    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
204938    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
204939    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
204940    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
204941    +   end;
MPRINT(EM_DIAGRAM):   end;
204942    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
204943    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
204944    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
204945    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
204946    +   end;
MPRINT(EM_DIAGRAM):   end;
204947    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204948    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
204949    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
204950    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
204951    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204952    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204953    +   end;
MPRINT(EM_DIAGRAM):   end;
204954    +end;
MPRINT(EM_DIAGRAM):   end;
204955    +
204956    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
204957    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
204958    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
204959    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
204960    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
204961    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
204962    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
204963    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204964    +end;
MPRINT(EM_DIAGRAM):   end;
204965    +else do;
MPRINT(EM_DIAGRAM):   else do;
204966    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
204967    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
204968    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
204969    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
204970    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
204971    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
204972    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
204973    +   end;
MPRINT(EM_DIAGRAM):   end;
204974    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
204975    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
204976    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
204977    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
204978    +   end;
MPRINT(EM_DIAGRAM):   end;
204979    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
204980    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
204981    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
204982    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
204983    +   end;
MPRINT(EM_DIAGRAM):   end;
204984    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
204985    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
204986    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
204987    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
204988    +   end;
MPRINT(EM_DIAGRAM):   end;
204989    +   else do;
MPRINT(EM_DIAGRAM):   else do;
204990    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
204991    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
204992    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
204993    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
204994    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
204995    +   end;
MPRINT(EM_DIAGRAM):   end;
204996    +end;
MPRINT(EM_DIAGRAM):   end;
204997    +
204998    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
204999    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
205000    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
205001    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
205002    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
205003    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
205004    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205005    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205006    +end;
MPRINT(EM_DIAGRAM):   end;
205007    +else do;
MPRINT(EM_DIAGRAM):   else do;
205008    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205009    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
205010    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205011    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
205012    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
205013    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
205014    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
205015    +   end;
MPRINT(EM_DIAGRAM):   end;
205016    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
205017    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
205018    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
205019    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
205020    +   end;
MPRINT(EM_DIAGRAM):   end;
205021    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
205022    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
205023    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
205024    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
205025    +   end;
MPRINT(EM_DIAGRAM):   end;
205026    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
205027    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
205028    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
205029    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
205030    +   end;
MPRINT(EM_DIAGRAM):   end;
205031    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205032    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
205033    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
205034    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
205035    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205036    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205037    +   end;
MPRINT(EM_DIAGRAM):   end;
205038    +end;
MPRINT(EM_DIAGRAM):   end;
205039    +
205040    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
205041    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
205042    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
205043    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
205044    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
205045    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
205046    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205047    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205048    +end;
MPRINT(EM_DIAGRAM):   end;
205049    +else do;
MPRINT(EM_DIAGRAM):   else do;
205050    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205051    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
205052    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205053    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
205054    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
205055    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
205056    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
205057    +   end;
MPRINT(EM_DIAGRAM):   end;
205058    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
205059    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
205060    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
205061    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
205062    +   end;
MPRINT(EM_DIAGRAM):   end;
205063    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
205064    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
205065    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
205066    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
205067    +   end;
MPRINT(EM_DIAGRAM):   end;
205068    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
205069    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
205070    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
205071    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
205072    +   end;
MPRINT(EM_DIAGRAM):   end;
205073    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205074    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
205075    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
205076    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
205077    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205078    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205079    +   end;
MPRINT(EM_DIAGRAM):   end;
205080    +end;
MPRINT(EM_DIAGRAM):   end;
205081    +
205082    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205083    +*** Checking missing input Interval
205084    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
205085    +
205086    +IF NMISS(
205087    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
205088    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
205089    +
205090    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205091    +END;
MPRINT(EM_DIAGRAM):   END;
205092    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205093    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
205094    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205095    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
205096    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
205097    +END;
MPRINT(EM_DIAGRAM):   END;
205098    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
205099    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
205100    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
205101    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
205102    +END;
MPRINT(EM_DIAGRAM):   END;
205103    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205104    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
205105    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205106    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205107    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
205108    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205109    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
205110    +   H11  =      0.0668146440452 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.0668146440452 * S_Year_Birth ;
205111    +   H12  =     0.02918236951724 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.02918236951724 * S_Year_Birth ;
205112    +   H13  =     0.52122974180208 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.52122974180208 * S_Year_Birth ;
205113    +   H14  =     -0.1823800721103 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.1823800721103 * S_Year_Birth ;
205114    +   H11  = H11  +    -0.48347630033708 * GRP_AcceptedCmp52
205115    +          +     0.37100635990339 * GRP_Frq2  +     0.04377799127913 * GRP_Frq3
205116    +          +     -0.1974477050613 * GRP_Frq4  +     0.10700887225506 *
205117    +        GRP_Income2  +      0.3291591268929 * GRP_Income3
205118    +          +     0.00612929517663 * GRP_Income4  +    -0.23329153390557 *
205119    +        GRP_Mnt2  +    -0.08800204437411 * GRP_Mnt3  +    -0.08445529701198 *
205120    +        GRP_Mnt4  +     0.28673732624133 * GRP_MntFishProducts2
205121    +          +    -0.14978605827752 * GRP_MntFishProducts3
205122    +          +     0.22642470616542 * GRP_MntFishProducts4
205123    +          +     0.07604404821672 * GRP_MntGoldProds2
205124    +          +     0.04745212568332 * GRP_MntGoldProds3
205125    +          +    -0.10028215217028 * GRP_MntGoldProds4
205126    +          +    -0.07377682497053 * GRP_MntMeatProducts2
205127    +          +    -0.09960214357487 * GRP_MntMeatProducts3
205128    +          +    -0.25438120582859 * GRP_MntMeatProducts4
205129    +          +     0.42639299324809 * GRP_MntWines2  +     0.31089292559786 *
205130    +        GRP_MntWines3  +    -0.26826041457934 * GRP_MntWines4
205131    +          +    -0.53742609478771 * GRP_NumCatalogPurchases3
205132    +          +    -0.03023603128161 * GRP_NumCatalogPurchases4
205133    +          +    -0.37743946252805 * GRP_NumDistPurchases2
205134    +          +    -0.01872647257623 * GRP_NumDistPurchases3
205135    +          +    -0.31993024737958 * GRP_NumDistPurchases4
205136    +          +    -0.11078713164327 * GRP_NumWebPurchases2
205137    +          +     0.24754701690398 * GRP_NumWebPurchases3
205138    +          +     0.01530465573539 * GRP_NumWebPurchases4
205139    +          +    -0.17630256491744 * GRP_RFMstat2  +    -0.47929093118323 *
205140    +        GRP_RFMstat3  +     0.26729201021061 * GRP_RFMstat4
205141    +          +    -0.20197995708067 * GRP_RMntFrq2  +    -0.07138949090838 *
205142    +        GRP_RMntFrq3  +    -0.08653988697814 * GRP_RMntFrq4
205143    +          +     1.10790516734526 * GRP_Recency2  +     0.22440369463671 *
205144    +        GRP_Recency3  +    -0.44624012521308 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.48347630033708 * GRP_AcceptedCmp52 + 0.37100635990339 *
GRP_Frq2 + 0.04377799127913 * GRP_Frq3 + -0.1974477050613 * GRP_Frq4 + 0.10700887225506 *
GRP_Income2 + 0.3291591268929 * GRP_Income3 + 0.00612929517663 * GRP_Income4 +
-0.23329153390557 * GRP_Mnt2 + -0.08800204437411 * GRP_Mnt3 + -0.08445529701198 * GRP_Mnt4 +
0.28673732624133 * GRP_MntFishProducts2 + -0.14978605827752 * GRP_MntFishProducts3 +
0.22642470616542 * GRP_MntFishProducts4 + 0.07604404821672 * GRP_MntGoldProds2 +
0.04745212568332 * GRP_MntGoldProds3 + -0.10028215217028 * GRP_MntGoldProds4 +
-0.07377682497053 * GRP_MntMeatProducts2 + -0.09960214357487 * GRP_MntMeatProducts3 +
-0.25438120582859 * GRP_MntMeatProducts4 + 0.42639299324809 * GRP_MntWines2 + 0.31089292559786
* GRP_MntWines3 + -0.26826041457934 * GRP_MntWines4 + -0.53742609478771 *
GRP_NumCatalogPurchases3 + -0.03023603128161 * GRP_NumCatalogPurchases4 + -0.37743946252805 *
GRP_NumDistPurchases2 + -0.01872647257623 * GRP_NumDistPurchases3 + -0.31993024737958 *
GRP_NumDistPurchases4 + -0.11078713164327 * GRP_NumWebPurchases2 + 0.24754701690398 *
GRP_NumWebPurchases3 + 0.01530465573539 * GRP_NumWebPurchases4 + -0.17630256491744 *
GRP_RFMstat2 + -0.47929093118323 * GRP_RFMstat3 + 0.26729201021061 * GRP_RFMstat4 +
-0.20197995708067 * GRP_RMntFrq2 + -0.07138949090838 * GRP_RMntFrq3 + -0.08653988697814 *
GRP_RMntFrq4 + 1.10790516734526 * GRP_Recency2 + 0.22440369463671 * GRP_Recency3 +
-0.44624012521308 * GRP_Recency4 ;
205145    +   H12  = H12  +    -0.39171353947494 * GRP_AcceptedCmp52
205146    +          +     0.47539355981113 * GRP_Frq2  +     0.13865083322043 * GRP_Frq3
205147    +          +     0.07826446095659 * GRP_Frq4  +     0.08299165408218 *
205148    +        GRP_Income2  +     0.19385348399904 * GRP_Income3
205149    +          +     -0.4686130167393 * GRP_Income4  +     0.07036992149948 *
205150    +        GRP_Mnt2  +     0.03891677493503 * GRP_Mnt3  +     0.07820077346387 *
205151    +        GRP_Mnt4  +     0.36400126236983 * GRP_MntFishProducts2
205152    +          +    -0.12626287803422 * GRP_MntFishProducts3
205153    +          +    -0.42885022606866 * GRP_MntFishProducts4
205154    +          +    -0.08312331608509 * GRP_MntGoldProds2
205155    +          +    -0.20061238652989 * GRP_MntGoldProds3
205156    +          +      0.2540651659901 * GRP_MntGoldProds4
205157    +          +    -0.05377938516186 * GRP_MntMeatProducts2
205158    +          +    -0.20960578757846 * GRP_MntMeatProducts3
205159    +          +     0.40616704937625 * GRP_MntMeatProducts4
205160    +          +     0.10444770584156 * GRP_MntWines2  +     0.28632714955895 *
205161    +        GRP_MntWines3  +     -0.0752487603973 * GRP_MntWines4
205162    +          +    -0.34375303246386 * GRP_NumCatalogPurchases3
205163    +          +     0.09580710843179 * GRP_NumCatalogPurchases4
205164    +          +    -0.07273864038222 * GRP_NumDistPurchases2
205165    +          +     0.10966715611059 * GRP_NumDistPurchases3
205166    +          +      -0.043035493739 * GRP_NumDistPurchases4
205167    +          +    -0.11780256604927 * GRP_NumWebPurchases2
205168    +          +    -0.18165047164828 * GRP_NumWebPurchases3
205169    +          +     0.26936545488609 * GRP_NumWebPurchases4
205170    +          +    -0.06874165804548 * GRP_RFMstat2  +     0.09298117986488 *
205171    +        GRP_RFMstat3  +    -0.24177720125931 * GRP_RFMstat4
205172    +          +    -0.06280623207978 * GRP_RMntFrq2  +     0.01871815739589 *
205173    +        GRP_RMntFrq3  +    -0.14308267957716 * GRP_RMntFrq4
205174    +          +     0.34467425877566 * GRP_Recency2  +     0.05820913643645 *
205175    +        GRP_Recency3  +     -0.0454148085012 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.39171353947494 * GRP_AcceptedCmp52 + 0.47539355981113 *
GRP_Frq2 + 0.13865083322043 * GRP_Frq3 + 0.07826446095659 * GRP_Frq4 + 0.08299165408218 *
GRP_Income2 + 0.19385348399904 * GRP_Income3 + -0.4686130167393 * GRP_Income4 +
0.07036992149948 * GRP_Mnt2 + 0.03891677493503 * GRP_Mnt3 + 0.07820077346387 * GRP_Mnt4 +
0.36400126236983 * GRP_MntFishProducts2 + -0.12626287803422 * GRP_MntFishProducts3 +
-0.42885022606866 * GRP_MntFishProducts4 + -0.08312331608509 * GRP_MntGoldProds2 +
-0.20061238652989 * GRP_MntGoldProds3 + 0.2540651659901 * GRP_MntGoldProds4 +
-0.05377938516186 * GRP_MntMeatProducts2 + -0.20960578757846 * GRP_MntMeatProducts3 +
0.40616704937625 * GRP_MntMeatProducts4 + 0.10444770584156 * GRP_MntWines2 + 0.28632714955895
* GRP_MntWines3 + -0.0752487603973 * GRP_MntWines4 + -0.34375303246386 *
GRP_NumCatalogPurchases3 + 0.09580710843179 * GRP_NumCatalogPurchases4 + -0.07273864038222 *
GRP_NumDistPurchases2 + 0.10966715611059 * GRP_NumDistPurchases3 + -0.043035493739 *
GRP_NumDistPurchases4 + -0.11780256604927 * GRP_NumWebPurchases2 + -0.18165047164828 *
GRP_NumWebPurchases3 + 0.26936545488609 * GRP_NumWebPurchases4 + -0.06874165804548 *
GRP_RFMstat2 + 0.09298117986488 * GRP_RFMstat3 + -0.24177720125931 * GRP_RFMstat4 +
-0.06280623207978 * GRP_RMntFrq2 + 0.01871815739589 * GRP_RMntFrq3 + -0.14308267957716 *
GRP_RMntFrq4 + 0.34467425877566 * GRP_Recency2 + 0.05820913643645 * GRP_Recency3 +
-0.0454148085012 * GRP_Recency4 ;
205176    +   H13  = H13  +    -0.08768819217047 * GRP_AcceptedCmp52
205177    +          +     0.44895652806962 * GRP_Frq2  +      0.3800586670059 * GRP_Frq3
205178    +          +    -0.07849333722318 * GRP_Frq4  +     0.61398939980043 *
205179    +        GRP_Income2  +     0.47732933105902 * GRP_Income3
205180    +          +    -0.46767598050409 * GRP_Income4  +     0.00119742402812 *
205181    +        GRP_Mnt2  +     0.28434487319801 * GRP_Mnt3  +    -0.16337373090226 *
205182    +        GRP_Mnt4  +     0.24731982804653 * GRP_MntFishProducts2
205183    +          +     0.07001619920815 * GRP_MntFishProducts3
205184    +          +     0.07735498521359 * GRP_MntFishProducts4
205185    +          +    -0.15884098938162 * GRP_MntGoldProds2
205186    +          +    -0.27657428867783 * GRP_MntGoldProds3
205187    +          +     -0.1812542301124 * GRP_MntGoldProds4
205188    +          +    -0.05299867036647 * GRP_MntMeatProducts2
205189    +          +     0.00010942539908 * GRP_MntMeatProducts3
205190    +          +     0.03587382246671 * GRP_MntMeatProducts4
205191    +          +      0.1756484217323 * GRP_MntWines2  +     0.00289944116976 *
205192    +        GRP_MntWines3  +    -0.03752905583429 * GRP_MntWines4
205193    +          +     0.14681010085531 * GRP_NumCatalogPurchases3
205194    +          +    -0.23177792190553 * GRP_NumCatalogPurchases4
205195    +          +      -0.481887498986 * GRP_NumDistPurchases2
205196    +          +    -0.09943718589693 * GRP_NumDistPurchases3
205197    +          +     0.21760620991618 * GRP_NumDistPurchases4
205198    +          +    -0.09523799103665 * GRP_NumWebPurchases2
205199    +          +     0.06245025753157 * GRP_NumWebPurchases3
205200    +          +     0.11312469123111 * GRP_NumWebPurchases4
205201    +          +     -0.0156924842698 * GRP_RFMstat2  +     0.04329307564553 *
205202    +        GRP_RFMstat3  +    -0.06522539538042 * GRP_RFMstat4
205203    +          +     0.03130432577469 * GRP_RMntFrq2  +     0.15385182155627 *
205204    +        GRP_RMntFrq3  +    -0.05116322369837 * GRP_RMntFrq4
205205    +          +     0.52385840277978 * GRP_Recency2  +     0.44348058106283 *
205206    +        GRP_Recency3  +    -0.30003743891847 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.08768819217047 * GRP_AcceptedCmp52 + 0.44895652806962 *
GRP_Frq2 + 0.3800586670059 * GRP_Frq3 + -0.07849333722318 * GRP_Frq4 + 0.61398939980043 *
GRP_Income2 + 0.47732933105902 * GRP_Income3 + -0.46767598050409 * GRP_Income4 +
0.00119742402812 * GRP_Mnt2 + 0.28434487319801 * GRP_Mnt3 + -0.16337373090226 * GRP_Mnt4 +
0.24731982804653 * GRP_MntFishProducts2 + 0.07001619920815 * GRP_MntFishProducts3 +
0.07735498521359 * GRP_MntFishProducts4 + -0.15884098938162 * GRP_MntGoldProds2 +
-0.27657428867783 * GRP_MntGoldProds3 + -0.1812542301124 * GRP_MntGoldProds4 +
-0.05299867036647 * GRP_MntMeatProducts2 + 0.00010942539908 * GRP_MntMeatProducts3 +
0.03587382246671 * GRP_MntMeatProducts4 + 0.1756484217323 * GRP_MntWines2 + 0.00289944116976 *
GRP_MntWines3 + -0.03752905583429 * GRP_MntWines4 + 0.14681010085531 *
GRP_NumCatalogPurchases3 + -0.23177792190553 * GRP_NumCatalogPurchases4 + -0.481887498986 *
GRP_NumDistPurchases2 + -0.09943718589693 * GRP_NumDistPurchases3 + 0.21760620991618 *
GRP_NumDistPurchases4 + -0.09523799103665 * GRP_NumWebPurchases2 + 0.06245025753157 *
GRP_NumWebPurchases3 + 0.11312469123111 * GRP_NumWebPurchases4 + -0.0156924842698 *
GRP_RFMstat2 + 0.04329307564553 * GRP_RFMstat3 + -0.06522539538042 * GRP_RFMstat4 +
0.03130432577469 * GRP_RMntFrq2 + 0.15385182155627 * GRP_RMntFrq3 + -0.05116322369837 *
GRP_RMntFrq4 + 0.52385840277978 * GRP_Recency2 + 0.44348058106283 * GRP_Recency3 +
-0.30003743891847 * GRP_Recency4 ;
205207    +   H14  = H14  +    -0.30891588421078 * GRP_AcceptedCmp52
205208    +          +     0.10101143238536 * GRP_Frq2  +    -0.03148220138998 * GRP_Frq3
205209    +          +     0.09807803608029 * GRP_Frq4  +     0.11294471318052 *
205210    +        GRP_Income2  +      0.0433560034099 * GRP_Income3
205211    +          +    -0.35503487261838 * GRP_Income4  +     0.15199410100967 *
205212    +        GRP_Mnt2  +    -0.15675008677561 * GRP_Mnt3  +    -0.06110606567063 *
205213    +        GRP_Mnt4  +     0.10272197664106 * GRP_MntFishProducts2
205214    +          +     0.33369645018356 * GRP_MntFishProducts3
205215    +          +     0.08427214551103 * GRP_MntFishProducts4
205216    +          +    -0.36187933889617 * GRP_MntGoldProds2
205217    +          +      0.1522584097588 * GRP_MntGoldProds3
205218    +          +    -0.18069803129722 * GRP_MntGoldProds4
205219    +          +    -0.39829328143793 * GRP_MntMeatProducts2
205220    +          +     0.00511939388608 * GRP_MntMeatProducts3
205221    +          +      0.0518722466688 * GRP_MntMeatProducts4
205222    +          +     0.10413724420858 * GRP_MntWines2  +    -0.30183392073068 *
205223    +        GRP_MntWines3  +    -0.40546180997599 * GRP_MntWines4
205224    +          +    -0.73564355192687 * GRP_NumCatalogPurchases3
205225    +          +     0.04239157662699 * GRP_NumCatalogPurchases4
205226    +          +    -0.61448773428482 * GRP_NumDistPurchases2
205227    +          +    -0.10817170519054 * GRP_NumDistPurchases3
205228    +          +    -0.00883878051452 * GRP_NumDistPurchases4
205229    +          +      0.0024401108853 * GRP_NumWebPurchases2
205230    +          +     -0.1066188825276 * GRP_NumWebPurchases3
205231    +          +     -0.2845728776007 * GRP_NumWebPurchases4
205232    +          +    -0.46846387193519 * GRP_RFMstat2  +     0.01548835288752 *
205233    +        GRP_RFMstat3  +     0.29056719482503 * GRP_RFMstat4
205234    +          +     0.13283388675843 * GRP_RMntFrq2  +    -0.01179035894062 *
205235    +        GRP_RMntFrq3  +    -0.40979674551139 * GRP_RMntFrq4
205236    +          +     0.39674687653317 * GRP_Recency2  +     0.48674783005161 *
205237    +        GRP_Recency3  +     0.19384397786172 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30891588421078 * GRP_AcceptedCmp52 + 0.10101143238536 *
GRP_Frq2 + -0.03148220138998 * GRP_Frq3 + 0.09807803608029 * GRP_Frq4 + 0.11294471318052 *
GRP_Income2 + 0.0433560034099 * GRP_Income3 + -0.35503487261838 * GRP_Income4 +
0.15199410100967 * GRP_Mnt2 + -0.15675008677561 * GRP_Mnt3 + -0.06110606567063 * GRP_Mnt4 +
0.10272197664106 * GRP_MntFishProducts2 + 0.33369645018356 * GRP_MntFishProducts3 +
0.08427214551103 * GRP_MntFishProducts4 + -0.36187933889617 * GRP_MntGoldProds2 +
0.1522584097588 * GRP_MntGoldProds3 + -0.18069803129722 * GRP_MntGoldProds4 +
-0.39829328143793 * GRP_MntMeatProducts2 + 0.00511939388608 * GRP_MntMeatProducts3 +
0.0518722466688 * GRP_MntMeatProducts4 + 0.10413724420858 * GRP_MntWines2 + -0.30183392073068
* GRP_MntWines3 + -0.40546180997599 * GRP_MntWines4 + -0.73564355192687 *
GRP_NumCatalogPurchases3 + 0.04239157662699 * GRP_NumCatalogPurchases4 + -0.61448773428482 *
GRP_NumDistPurchases2 + -0.10817170519054 * GRP_NumDistPurchases3 + -0.00883878051452 *
GRP_NumDistPurchases4 + 0.0024401108853 * GRP_NumWebPurchases2 + -0.1066188825276 *
GRP_NumWebPurchases3 + -0.2845728776007 * GRP_NumWebPurchases4 + -0.46846387193519 *
GRP_RFMstat2 + 0.01548835288752 * GRP_RFMstat3 + 0.29056719482503 * GRP_RFMstat4 +
0.13283388675843 * GRP_RMntFrq2 + -0.01179035894062 * GRP_RMntFrq3 + -0.40979674551139 *
GRP_RMntFrq4 + 0.39674687653317 * GRP_Recency2 + 0.48674783005161 * GRP_Recency3 +
0.19384397786172 * GRP_Recency4 ;
205238    +   H11  =    -1.18381596942405 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.18381596942405 + H11 ;
205239    +   H12  =     0.86336963287203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.86336963287203 + H12 ;
205240    +   H13  =     -0.9724199391604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.9724199391604 + H13 ;
205241    +   H14  =     1.35533016839911 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.35533016839911 + H14 ;
205242    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
205243    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
205244    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
205245    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
205246    +END;
MPRINT(EM_DIAGRAM):   END;
205247    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
205248    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
205249    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
205250    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
205251    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
205252    +END;
MPRINT(EM_DIAGRAM):   END;
205253    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205254    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
205255    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205256    +
205257    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
205258    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
205259    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
205260    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
205261    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
205262    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205263    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
205264    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
205265    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
205266    +end;
MPRINT(EM_DIAGRAM):   end;
205267    +else do;
MPRINT(EM_DIAGRAM):   else do;
205268    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
205269    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
205270    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
205271    +   end;
MPRINT(EM_DIAGRAM):   end;
205272    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
205273    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
205274    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
205275    +   end;
MPRINT(EM_DIAGRAM):   end;
205276    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205277    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
205278    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
205279    +   end;
MPRINT(EM_DIAGRAM):   end;
205280    +end;
MPRINT(EM_DIAGRAM):   end;
205281    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
205282    +   P_DepVar1  =     2.12648206014408 * H11  +      1.4206902210932 * H12
205283    +          +     1.21164854880393 * H13  +      1.5803543453738 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.12648206014408 * H11 + 1.4206902210932 * H12 +
1.21164854880393 * H13 + 1.5803543453738 * H14 ;
205284    +   P_DepVar1  =    -1.66515506353131 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66515506353131 + P_DepVar1 ;
205285    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
205286    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
205287    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
205288    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
205289    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
205290    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
205291    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
205292    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
205293    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
205294    +END;
MPRINT(EM_DIAGRAM):   END;
205295    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
205296    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
205297    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
205298    +END;
MPRINT(EM_DIAGRAM):   END;
205299    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
205300    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
205301    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
205302    +END;
MPRINT(EM_DIAGRAM):   END;
205303    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
205304    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
205305    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
205306    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
205307    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
205308    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
205309    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
205310    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205311    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
205312    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
205313    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
205314    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
205315    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
205316    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
205317    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
205318    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
205319    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
205320    +END;
MPRINT(EM_DIAGRAM):   END;
205321    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
205322    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
205323    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
205324    +drop
205325    +H11
205326    +H12
205327    +H13
205328    +H14
205329    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
205330    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
205331    +* Renaming variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural21;
205332    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
205333    +* Renaming Posterior variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural21;
205334    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
205335    +drop Neural21_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar1;
205336    +Neural21_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar1 = P_DepVar1;
205337    +drop Neural21_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar0;
205338    +Neural21_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar0 = P_DepVar0;
205339    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
205340    +* Renaming _WARN_ variable for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural21;
205341    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
205342    +length Neural21_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural21_WARN_ $4;
205343    +drop Neural21_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural21_WARN_;
205344    +Neural21_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural21_WARN_ = _WARN_;
205345    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
205346    +* Ensmbl18: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Scoring Code of model 3 of 7;
205347    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
205348    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
205349    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
205350    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
205351    +* NODE: Neural18;
MPRINT(EM_DIAGRAM):   * NODE: Neural18;
205352    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
205353    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
205354    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
205355    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
205356    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
205357    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
205358    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
205359    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
205360    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
205361    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
205362    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
205363    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
205364    +LENGTH _WARN_ $4
205365    +      F_DepVar  $ 12
205366    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
205367    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
205368    +
205369    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
205370    +
205371    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
205372    +
205373    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
205374    +
205375    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
205376    +
205377    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
205378    +
205379    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
205380    +
205381    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
205382    +
205383    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
205384    +
205385    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
205386    +
205387    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
205388    +
205389    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
205390    +
205391    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
205392    +
205393    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
205394    +
205395    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
205396    +
205397    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
205398    +
205399    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
205400    +
205401    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
205402    +
205403    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
205404    +
205405    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
205406    +
205407    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
205408    +
205409    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
205410    +
205411    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
205412    +
205413    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
205414    +
205415    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
205416    +
205417    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
205418    +
205419    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
205420    +
205421    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
205422    +
205423    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
205424    +
205425    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
205426    +
205427    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
205428    +
205429    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
205430    +
205431    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
205432    +
205433    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
205434    +
205435    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
205436    +
205437    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
205438    +
205439    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
205440    +
205441    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
205442    +
205443    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
205444    +
205445    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
205446    +
205447    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
205448    +
205449    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
205450    +
205451    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
205452    +
205453    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
205454    +
205455    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
205456    +
205457    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
205458    +
205459    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
205460    +
205461    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
205462    +
205463    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
205464    +
205465    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
205466    +
205467    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
205468    +
205469    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
205470    +
205471    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
205472    +
205473    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
205474    +
205475    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
205476    +
205477    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
205478    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
205479    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
205480    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
205481    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205482    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205483    +end;
MPRINT(EM_DIAGRAM):   end;
205484    +else do;
MPRINT(EM_DIAGRAM):   else do;
205485    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205486    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
205487    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205488    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
205489    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
205490    +   end;
MPRINT(EM_DIAGRAM):   end;
205491    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
205492    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
205493    +   end;
MPRINT(EM_DIAGRAM):   end;
205494    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205495    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
205496    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205497    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205498    +   end;
MPRINT(EM_DIAGRAM):   end;
205499    +end;
MPRINT(EM_DIAGRAM):   end;
205500    +
205501    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
205502    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
205503    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
205504    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
205505    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
205506    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
205507    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205508    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205509    +end;
MPRINT(EM_DIAGRAM):   end;
205510    +else do;
MPRINT(EM_DIAGRAM):   else do;
205511    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205512    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
205513    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205514    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
205515    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
205516    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
205517    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
205518    +   end;
MPRINT(EM_DIAGRAM):   end;
205519    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
205520    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
205521    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
205522    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
205523    +   end;
MPRINT(EM_DIAGRAM):   end;
205524    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
205525    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
205526    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
205527    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
205528    +   end;
MPRINT(EM_DIAGRAM):   end;
205529    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
205530    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
205531    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
205532    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
205533    +   end;
MPRINT(EM_DIAGRAM):   end;
205534    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205535    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
205536    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
205537    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
205538    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205539    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205540    +   end;
MPRINT(EM_DIAGRAM):   end;
205541    +end;
MPRINT(EM_DIAGRAM):   end;
205542    +
205543    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
205544    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
205545    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
205546    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
205547    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
205548    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
205549    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205550    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205551    +end;
MPRINT(EM_DIAGRAM):   end;
205552    +else do;
MPRINT(EM_DIAGRAM):   else do;
205553    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205554    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
205555    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205556    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
205557    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
205558    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
205559    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
205560    +   end;
MPRINT(EM_DIAGRAM):   end;
205561    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
205562    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
205563    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
205564    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
205565    +   end;
MPRINT(EM_DIAGRAM):   end;
205566    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
205567    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
205568    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
205569    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
205570    +   end;
MPRINT(EM_DIAGRAM):   end;
205571    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
205572    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
205573    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
205574    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
205575    +   end;
MPRINT(EM_DIAGRAM):   end;
205576    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205577    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
205578    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
205579    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
205580    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205581    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205582    +   end;
MPRINT(EM_DIAGRAM):   end;
205583    +end;
MPRINT(EM_DIAGRAM):   end;
205584    +
205585    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
205586    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
205587    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
205588    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
205589    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
205590    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
205591    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205592    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205593    +end;
MPRINT(EM_DIAGRAM):   end;
205594    +else do;
MPRINT(EM_DIAGRAM):   else do;
205595    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205596    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
205597    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205598    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
205599    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
205600    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
205601    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
205602    +   end;
MPRINT(EM_DIAGRAM):   end;
205603    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
205604    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
205605    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
205606    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
205607    +   end;
MPRINT(EM_DIAGRAM):   end;
205608    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
205609    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
205610    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
205611    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
205612    +   end;
MPRINT(EM_DIAGRAM):   end;
205613    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
205614    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
205615    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
205616    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
205617    +   end;
MPRINT(EM_DIAGRAM):   end;
205618    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205619    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
205620    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
205621    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
205622    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205623    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205624    +   end;
MPRINT(EM_DIAGRAM):   end;
205625    +end;
MPRINT(EM_DIAGRAM):   end;
205626    +
205627    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
205628    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
205629    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
205630    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
205631    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
205632    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
205633    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205634    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205635    +end;
MPRINT(EM_DIAGRAM):   end;
205636    +else do;
MPRINT(EM_DIAGRAM):   else do;
205637    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205638    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
205639    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205640    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
205641    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
205642    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
205643    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
205644    +   end;
MPRINT(EM_DIAGRAM):   end;
205645    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
205646    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
205647    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
205648    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
205649    +   end;
MPRINT(EM_DIAGRAM):   end;
205650    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
205651    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
205652    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
205653    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
205654    +   end;
MPRINT(EM_DIAGRAM):   end;
205655    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
205656    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
205657    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
205658    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
205659    +   end;
MPRINT(EM_DIAGRAM):   end;
205660    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205661    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
205662    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
205663    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
205664    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205665    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205666    +   end;
MPRINT(EM_DIAGRAM):   end;
205667    +end;
MPRINT(EM_DIAGRAM):   end;
205668    +
205669    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
205670    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
205671    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
205672    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
205673    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
205674    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
205675    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205676    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205677    +end;
MPRINT(EM_DIAGRAM):   end;
205678    +else do;
MPRINT(EM_DIAGRAM):   else do;
205679    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205680    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
205681    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205682    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
205683    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
205684    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
205685    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
205686    +   end;
MPRINT(EM_DIAGRAM):   end;
205687    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
205688    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
205689    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
205690    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
205691    +   end;
MPRINT(EM_DIAGRAM):   end;
205692    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
205693    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
205694    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
205695    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
205696    +   end;
MPRINT(EM_DIAGRAM):   end;
205697    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
205698    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
205699    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
205700    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
205701    +   end;
MPRINT(EM_DIAGRAM):   end;
205702    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205703    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
205704    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
205705    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
205706    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205707    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205708    +   end;
MPRINT(EM_DIAGRAM):   end;
205709    +end;
MPRINT(EM_DIAGRAM):   end;
205710    +
205711    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
205712    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
205713    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
205714    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
205715    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
205716    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
205717    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205718    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205719    +end;
MPRINT(EM_DIAGRAM):   end;
205720    +else do;
MPRINT(EM_DIAGRAM):   else do;
205721    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205722    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
205723    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205724    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
205725    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
205726    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
205727    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
205728    +   end;
MPRINT(EM_DIAGRAM):   end;
205729    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
205730    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
205731    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
205732    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
205733    +   end;
MPRINT(EM_DIAGRAM):   end;
205734    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
205735    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
205736    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
205737    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
205738    +   end;
MPRINT(EM_DIAGRAM):   end;
205739    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
205740    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
205741    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
205742    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
205743    +   end;
MPRINT(EM_DIAGRAM):   end;
205744    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205745    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
205746    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
205747    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
205748    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205749    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205750    +   end;
MPRINT(EM_DIAGRAM):   end;
205751    +end;
MPRINT(EM_DIAGRAM):   end;
205752    +
205753    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
205754    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
205755    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
205756    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
205757    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
205758    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
205759    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205760    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205761    +end;
MPRINT(EM_DIAGRAM):   end;
205762    +else do;
MPRINT(EM_DIAGRAM):   else do;
205763    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205764    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
205765    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205766    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
205767    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
205768    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
205769    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
205770    +   end;
MPRINT(EM_DIAGRAM):   end;
205771    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
205772    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
205773    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
205774    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
205775    +   end;
MPRINT(EM_DIAGRAM):   end;
205776    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
205777    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
205778    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
205779    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
205780    +   end;
MPRINT(EM_DIAGRAM):   end;
205781    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
205782    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
205783    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
205784    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
205785    +   end;
MPRINT(EM_DIAGRAM):   end;
205786    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205787    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
205788    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
205789    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
205790    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205791    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205792    +   end;
MPRINT(EM_DIAGRAM):   end;
205793    +end;
MPRINT(EM_DIAGRAM):   end;
205794    +
205795    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
205796    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
205797    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
205798    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
205799    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
205800    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205801    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205802    +end;
MPRINT(EM_DIAGRAM):   end;
205803    +else do;
MPRINT(EM_DIAGRAM):   else do;
205804    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205805    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
205806    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205807    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
205808    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
205809    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
205810    +   end;
MPRINT(EM_DIAGRAM):   end;
205811    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
205812    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
205813    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
205814    +   end;
MPRINT(EM_DIAGRAM):   end;
205815    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
205816    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
205817    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
205818    +   end;
MPRINT(EM_DIAGRAM):   end;
205819    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205820    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
205821    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
205822    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205823    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205824    +   end;
MPRINT(EM_DIAGRAM):   end;
205825    +end;
MPRINT(EM_DIAGRAM):   end;
205826    +
205827    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
205828    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
205829    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
205830    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
205831    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
205832    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
205833    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205834    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205835    +end;
MPRINT(EM_DIAGRAM):   end;
205836    +else do;
MPRINT(EM_DIAGRAM):   else do;
205837    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205838    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
205839    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205840    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
205841    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
205842    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
205843    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
205844    +   end;
MPRINT(EM_DIAGRAM):   end;
205845    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
205846    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
205847    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
205848    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
205849    +   end;
MPRINT(EM_DIAGRAM):   end;
205850    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
205851    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
205852    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
205853    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
205854    +   end;
MPRINT(EM_DIAGRAM):   end;
205855    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
205856    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
205857    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
205858    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
205859    +   end;
MPRINT(EM_DIAGRAM):   end;
205860    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205861    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
205862    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
205863    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
205864    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205865    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205866    +   end;
MPRINT(EM_DIAGRAM):   end;
205867    +end;
MPRINT(EM_DIAGRAM):   end;
205868    +
205869    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
205870    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
205871    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
205872    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
205873    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
205874    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
205875    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205876    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205877    +end;
MPRINT(EM_DIAGRAM):   end;
205878    +else do;
MPRINT(EM_DIAGRAM):   else do;
205879    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205880    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
205881    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205882    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
205883    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
205884    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
205885    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
205886    +   end;
MPRINT(EM_DIAGRAM):   end;
205887    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
205888    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
205889    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
205890    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
205891    +   end;
MPRINT(EM_DIAGRAM):   end;
205892    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
205893    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
205894    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
205895    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
205896    +   end;
MPRINT(EM_DIAGRAM):   end;
205897    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
205898    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
205899    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
205900    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
205901    +   end;
MPRINT(EM_DIAGRAM):   end;
205902    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205903    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
205904    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
205905    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
205906    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205907    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205908    +   end;
MPRINT(EM_DIAGRAM):   end;
205909    +end;
MPRINT(EM_DIAGRAM):   end;
205910    +
205911    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
205912    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
205913    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
205914    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
205915    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
205916    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
205917    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205918    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205919    +end;
MPRINT(EM_DIAGRAM):   end;
205920    +else do;
MPRINT(EM_DIAGRAM):   else do;
205921    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205922    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
205923    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205924    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
205925    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
205926    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
205927    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
205928    +   end;
MPRINT(EM_DIAGRAM):   end;
205929    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
205930    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
205931    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
205932    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
205933    +   end;
MPRINT(EM_DIAGRAM):   end;
205934    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
205935    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
205936    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
205937    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
205938    +   end;
MPRINT(EM_DIAGRAM):   end;
205939    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
205940    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
205941    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
205942    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
205943    +   end;
MPRINT(EM_DIAGRAM):   end;
205944    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205945    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
205946    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
205947    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
205948    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205949    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205950    +   end;
MPRINT(EM_DIAGRAM):   end;
205951    +end;
MPRINT(EM_DIAGRAM):   end;
205952    +
205953    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
205954    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
205955    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
205956    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
205957    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
205958    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
205959    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
205960    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205961    +end;
MPRINT(EM_DIAGRAM):   end;
205962    +else do;
MPRINT(EM_DIAGRAM):   else do;
205963    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
205964    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
205965    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
205966    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
205967    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
205968    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
205969    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
205970    +   end;
MPRINT(EM_DIAGRAM):   end;
205971    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
205972    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
205973    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
205974    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
205975    +   end;
MPRINT(EM_DIAGRAM):   end;
205976    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
205977    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
205978    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
205979    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
205980    +   end;
MPRINT(EM_DIAGRAM):   end;
205981    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
205982    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
205983    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
205984    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
205985    +   end;
MPRINT(EM_DIAGRAM):   end;
205986    +   else do;
MPRINT(EM_DIAGRAM):   else do;
205987    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
205988    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
205989    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
205990    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
205991    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
205992    +   end;
MPRINT(EM_DIAGRAM):   end;
205993    +end;
MPRINT(EM_DIAGRAM):   end;
205994    +
205995    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
205996    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
205997    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
205998    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
205999    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
206000    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
206001    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206002    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206003    +end;
MPRINT(EM_DIAGRAM):   end;
206004    +else do;
MPRINT(EM_DIAGRAM):   else do;
206005    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
206006    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
206007    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206008    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
206009    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
206010    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
206011    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
206012    +   end;
MPRINT(EM_DIAGRAM):   end;
206013    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
206014    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
206015    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
206016    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
206017    +   end;
MPRINT(EM_DIAGRAM):   end;
206018    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
206019    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
206020    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
206021    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
206022    +   end;
MPRINT(EM_DIAGRAM):   end;
206023    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
206024    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
206025    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
206026    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
206027    +   end;
MPRINT(EM_DIAGRAM):   end;
206028    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206029    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
206030    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
206031    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
206032    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206033    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206034    +   end;
MPRINT(EM_DIAGRAM):   end;
206035    +end;
MPRINT(EM_DIAGRAM):   end;
206036    +
206037    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206038    +*** Checking missing input Interval
206039    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
206040    +
206041    +IF NMISS(
206042    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
206043    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
206044    +
206045    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206046    +END;
MPRINT(EM_DIAGRAM):   END;
206047    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206048    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
206049    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206050    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
206051    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
206052    +END;
MPRINT(EM_DIAGRAM):   END;
206053    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
206054    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
206055    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
206056    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
206057    +END;
MPRINT(EM_DIAGRAM):   END;
206058    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206059    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
206060    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206061    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206062    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
206063    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206064    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
206065    +   H11  =     0.03855897145156 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.03855897145156 * S_Year_Birth ;
206066    +   H12  =      0.4940754340088 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.4940754340088 * S_Year_Birth ;
206067    +   H13  =     0.17524137660647 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.17524137660647 * S_Year_Birth ;
206068    +   H14  =     0.27270757044038 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.27270757044038 * S_Year_Birth ;
206069    +   H15  =    -0.02127353119313 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.02127353119313 * S_Year_Birth ;
206070    +   H16  =    -0.10595973365564 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = -0.10595973365564 * S_Year_Birth ;
206071    +   H17  =    -0.11271332681901 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = -0.11271332681901 * S_Year_Birth ;
206072    +   H11  = H11  +     0.21558790598329 * GRP_AcceptedCmp52
206073    +          +    -0.07145572032882 * GRP_Frq2  +     0.09268595548153 * GRP_Frq3
206074    +          +    -0.20765463263399 * GRP_Frq4  +    -0.00887637988838 *
206075    +        GRP_Income2  +    -0.34198008097003 * GRP_Income3
206076    +          +     0.00518173450113 * GRP_Income4  +     0.17153998784849 *
206077    +        GRP_Mnt2  +    -0.03282863464194 * GRP_Mnt3  +     0.15479242768387 *
206078    +        GRP_Mnt4  +    -0.14566682947772 * GRP_MntFishProducts2
206079    +          +    -0.04697385312971 * GRP_MntFishProducts3
206080    +          +     0.05477300056491 * GRP_MntFishProducts4
206081    +          +    -0.21182877070793 * GRP_MntGoldProds2
206082    +          +    -0.06202001203906 * GRP_MntGoldProds3
206083    +          +    -0.23297283739715 * GRP_MntGoldProds4
206084    +          +    -0.27072080481215 * GRP_MntMeatProducts2
206085    +          +     -0.0879595975531 * GRP_MntMeatProducts3
206086    +          +     0.01711044358319 * GRP_MntMeatProducts4
206087    +          +     0.01568057691806 * GRP_MntWines2  +    -0.14454572309741 *
206088    +        GRP_MntWines3  +      0.1665968837033 * GRP_MntWines4
206089    +          +    -0.24980039994544 * GRP_NumCatalogPurchases3
206090    +          +    -0.00199030871063 * GRP_NumCatalogPurchases4
206091    +          +     0.11565917560156 * GRP_NumDistPurchases2
206092    +          +      0.1678532898895 * GRP_NumDistPurchases3
206093    +          +     -0.0338568889009 * GRP_NumDistPurchases4
206094    +          +     0.09970745707934 * GRP_NumWebPurchases2
206095    +          +     0.02961221360107 * GRP_NumWebPurchases3
206096    +          +     0.02261054892411 * GRP_NumWebPurchases4
206097    +          +     0.22891892518291 * GRP_RFMstat2  +     0.30720492174411 *
206098    +        GRP_RFMstat3  +     0.02558392907316 * GRP_RFMstat4
206099    +          +    -0.22752513596954 * GRP_RMntFrq2  +    -0.11010023712096 *
206100    +        GRP_RMntFrq3  +    -0.29294961809478 * GRP_RMntFrq4
206101    +          +     0.17323450297234 * GRP_Recency2  +    -0.02999008104866 *
206102    +        GRP_Recency3  +    -0.07522056103469 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21558790598329 * GRP_AcceptedCmp52 + -0.07145572032882 *
GRP_Frq2 + 0.09268595548153 * GRP_Frq3 + -0.20765463263399 * GRP_Frq4 + -0.00887637988838 *
GRP_Income2 + -0.34198008097003 * GRP_Income3 + 0.00518173450113 * GRP_Income4 +
0.17153998784849 * GRP_Mnt2 + -0.03282863464194 * GRP_Mnt3 + 0.15479242768387 * GRP_Mnt4 +
-0.14566682947772 * GRP_MntFishProducts2 + -0.04697385312971 * GRP_MntFishProducts3 +
0.05477300056491 * GRP_MntFishProducts4 + -0.21182877070793 * GRP_MntGoldProds2 +
-0.06202001203906 * GRP_MntGoldProds3 + -0.23297283739715 * GRP_MntGoldProds4 +
-0.27072080481215 * GRP_MntMeatProducts2 + -0.0879595975531 * GRP_MntMeatProducts3 +
0.01711044358319 * GRP_MntMeatProducts4 + 0.01568057691806 * GRP_MntWines2 + -0.14454572309741
* GRP_MntWines3 + 0.1665968837033 * GRP_MntWines4 + -0.24980039994544 *
GRP_NumCatalogPurchases3 + -0.00199030871063 * GRP_NumCatalogPurchases4 + 0.11565917560156 *
GRP_NumDistPurchases2 + 0.1678532898895 * GRP_NumDistPurchases3 + -0.0338568889009 *
GRP_NumDistPurchases4 + 0.09970745707934 * GRP_NumWebPurchases2 + 0.02961221360107 *
GRP_NumWebPurchases3 + 0.02261054892411 * GRP_NumWebPurchases4 + 0.22891892518291 *
GRP_RFMstat2 + 0.30720492174411 * GRP_RFMstat3 + 0.02558392907316 * GRP_RFMstat4 +
-0.22752513596954 * GRP_RMntFrq2 + -0.11010023712096 * GRP_RMntFrq3 + -0.29294961809478 *
GRP_RMntFrq4 + 0.17323450297234 * GRP_Recency2 + -0.02999008104866 * GRP_Recency3 +
-0.07522056103469 * GRP_Recency4 ;
206103    +   H12  = H12  +    -0.17475665685155 * GRP_AcceptedCmp52
206104    +          +     0.39850686717751 * GRP_Frq2  +     0.21273190324396 * GRP_Frq3
206105    +          +    -0.04292229763335 * GRP_Frq4  +     0.48189221687125 *
206106    +        GRP_Income2  +       0.757675062227 * GRP_Income3
206107    +          +    -0.31438345261512 * GRP_Income4  +     0.08884755999997 *
206108    +        GRP_Mnt2  +     0.02891204793625 * GRP_Mnt3  +    -0.11500381143203 *
206109    +        GRP_Mnt4  +     0.47755891441547 * GRP_MntFishProducts2
206110    +          +     0.26645530981311 * GRP_MntFishProducts3
206111    +          +    -0.17631072283513 * GRP_MntFishProducts4
206112    +          +    -0.35439521021691 * GRP_MntGoldProds2
206113    +          +     0.11419663880206 * GRP_MntGoldProds3
206114    +          +     0.07288749113866 * GRP_MntGoldProds4
206115    +          +    -0.52191822126159 * GRP_MntMeatProducts2
206116    +          +    -0.08421627788812 * GRP_MntMeatProducts3
206117    +          +    -0.15930642038763 * GRP_MntMeatProducts4
206118    +          +     0.17420985773045 * GRP_MntWines2  +     0.21257483876123 *
206119    +        GRP_MntWines3  +    -0.13198840161443 * GRP_MntWines4
206120    +          +    -0.24725403471973 * GRP_NumCatalogPurchases3
206121    +          +     0.28574938745998 * GRP_NumCatalogPurchases4
206122    +          +     -0.4878996299474 * GRP_NumDistPurchases2
206123    +          +     0.10139595392447 * GRP_NumDistPurchases3
206124    +          +     0.05251891244468 * GRP_NumDistPurchases4
206125    +          +    -0.18486003226007 * GRP_NumWebPurchases2
206126    +          +      0.0263831646971 * GRP_NumWebPurchases3
206127    +          +     0.26495059708503 * GRP_NumWebPurchases4
206128    +          +    -0.16580006605432 * GRP_RFMstat2  +    -0.12537703875848 *
206129    +        GRP_RFMstat3  +      -0.100652416931 * GRP_RFMstat4
206130    +          +    -0.00913931308958 * GRP_RMntFrq2  +    -0.15758837200974 *
206131    +        GRP_RMntFrq3  +     -0.1198225533702 * GRP_RMntFrq4
206132    +          +       1.075902392162 * GRP_Recency2  +     0.44926983542925 *
206133    +        GRP_Recency3  +     -0.4970729472837 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.17475665685155 * GRP_AcceptedCmp52 + 0.39850686717751 *
GRP_Frq2 + 0.21273190324396 * GRP_Frq3 + -0.04292229763335 * GRP_Frq4 + 0.48189221687125 *
GRP_Income2 + 0.757675062227 * GRP_Income3 + -0.31438345261512 * GRP_Income4 +
0.08884755999997 * GRP_Mnt2 + 0.02891204793625 * GRP_Mnt3 + -0.11500381143203 * GRP_Mnt4 +
0.47755891441547 * GRP_MntFishProducts2 + 0.26645530981311 * GRP_MntFishProducts3 +
-0.17631072283513 * GRP_MntFishProducts4 + -0.35439521021691 * GRP_MntGoldProds2 +
0.11419663880206 * GRP_MntGoldProds3 + 0.07288749113866 * GRP_MntGoldProds4 +
-0.52191822126159 * GRP_MntMeatProducts2 + -0.08421627788812 * GRP_MntMeatProducts3 +
-0.15930642038763 * GRP_MntMeatProducts4 + 0.17420985773045 * GRP_MntWines2 + 0.21257483876123
* GRP_MntWines3 + -0.13198840161443 * GRP_MntWines4 + -0.24725403471973 *
GRP_NumCatalogPurchases3 + 0.28574938745998 * GRP_NumCatalogPurchases4 + -0.4878996299474 *
GRP_NumDistPurchases2 + 0.10139595392447 * GRP_NumDistPurchases3 + 0.05251891244468 *
GRP_NumDistPurchases4 + -0.18486003226007 * GRP_NumWebPurchases2 + 0.0263831646971 *
GRP_NumWebPurchases3 + 0.26495059708503 * GRP_NumWebPurchases4 + -0.16580006605432 *
GRP_RFMstat2 + -0.12537703875848 * GRP_RFMstat3 + -0.100652416931 * GRP_RFMstat4 +
-0.00913931308958 * GRP_RMntFrq2 + -0.15758837200974 * GRP_RMntFrq3 + -0.1198225533702 *
GRP_RMntFrq4 + 1.075902392162 * GRP_Recency2 + 0.44926983542925 * GRP_Recency3 +
-0.4970729472837 * GRP_Recency4 ;
206134    +   H13  = H13  +     0.00215688122529 * GRP_AcceptedCmp52
206135    +          +    -0.01427589791379 * GRP_Frq2  +    -0.13098496868755 * GRP_Frq3
206136    +          +    -0.30502313457201 * GRP_Frq4  +    -0.37973462663051 *
206137    +        GRP_Income2  +     0.00732780844057 * GRP_Income3
206138    +          +     0.53278328894406 * GRP_Income4  +     0.29819966041309 *
206139    +        GRP_Mnt2  +     0.25349727466129 * GRP_Mnt3  +     0.10579488290769 *
206140    +        GRP_Mnt4  +    -0.09288921771048 * GRP_MntFishProducts2
206141    +          +     0.02714802509094 * GRP_MntFishProducts3
206142    +          +     0.27119078554613 * GRP_MntFishProducts4
206143    +          +     0.19322428614339 * GRP_MntGoldProds2
206144    +          +     0.34778546410632 * GRP_MntGoldProds3
206145    +          +    -0.06570146779096 * GRP_MntGoldProds4
206146    +          +     0.44935275650977 * GRP_MntMeatProducts2
206147    +          +     0.00805794344265 * GRP_MntMeatProducts3
206148    +          +     0.02445782833023 * GRP_MntMeatProducts4
206149    +          +    -0.12082391878766 * GRP_MntWines2  +    -0.28739181733976 *
206150    +        GRP_MntWines3  +    -0.12417307544408 * GRP_MntWines4
206151    +          +     0.33901531634752 * GRP_NumCatalogPurchases3
206152    +          +     -0.0519425405532 * GRP_NumCatalogPurchases4
206153    +          +     0.03481806823908 * GRP_NumDistPurchases2
206154    +          +      0.0546202479864 * GRP_NumDistPurchases3
206155    +          +    -0.05240296080421 * GRP_NumDistPurchases4
206156    +          +     0.28307550964921 * GRP_NumWebPurchases2
206157    +          +     0.31503543231591 * GRP_NumWebPurchases3
206158    +          +     0.24817135719308 * GRP_NumWebPurchases4
206159    +          +    -0.05017370187238 * GRP_RFMstat2  +     0.08161239885611 *
206160    +        GRP_RFMstat3  +    -0.14085507706312 * GRP_RFMstat4
206161    +          +     0.11738278568714 * GRP_RMntFrq2  +     0.28471680928269 *
206162    +        GRP_RMntFrq3  +     0.46590886050772 * GRP_RMntFrq4
206163    +          +     -0.2318556486679 * GRP_Recency2  +    -0.37508297533514 *
206164    +        GRP_Recency3  +     0.05823801065489 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00215688122529 * GRP_AcceptedCmp52 + -0.01427589791379 *
GRP_Frq2 + -0.13098496868755 * GRP_Frq3 + -0.30502313457201 * GRP_Frq4 + -0.37973462663051 *
GRP_Income2 + 0.00732780844057 * GRP_Income3 + 0.53278328894406 * GRP_Income4 +
0.29819966041309 * GRP_Mnt2 + 0.25349727466129 * GRP_Mnt3 + 0.10579488290769 * GRP_Mnt4 +
-0.09288921771048 * GRP_MntFishProducts2 + 0.02714802509094 * GRP_MntFishProducts3 +
0.27119078554613 * GRP_MntFishProducts4 + 0.19322428614339 * GRP_MntGoldProds2 +
0.34778546410632 * GRP_MntGoldProds3 + -0.06570146779096 * GRP_MntGoldProds4 +
0.44935275650977 * GRP_MntMeatProducts2 + 0.00805794344265 * GRP_MntMeatProducts3 +
0.02445782833023 * GRP_MntMeatProducts4 + -0.12082391878766 * GRP_MntWines2 +
-0.28739181733976 * GRP_MntWines3 + -0.12417307544408 * GRP_MntWines4 + 0.33901531634752 *
GRP_NumCatalogPurchases3 + -0.0519425405532 * GRP_NumCatalogPurchases4 + 0.03481806823908 *
GRP_NumDistPurchases2 + 0.0546202479864 * GRP_NumDistPurchases3 + -0.05240296080421 *
GRP_NumDistPurchases4 + 0.28307550964921 * GRP_NumWebPurchases2 + 0.31503543231591 *
GRP_NumWebPurchases3 + 0.24817135719308 * GRP_NumWebPurchases4 + -0.05017370187238 *
GRP_RFMstat2 + 0.08161239885611 * GRP_RFMstat3 + -0.14085507706312 * GRP_RFMstat4 +
0.11738278568714 * GRP_RMntFrq2 + 0.28471680928269 * GRP_RMntFrq3 + 0.46590886050772 *
GRP_RMntFrq4 + -0.2318556486679 * GRP_Recency2 + -0.37508297533514 * GRP_Recency3 +
0.05823801065489 * GRP_Recency4 ;
206165    +   H14  = H14  +      0.4684617848987 * GRP_AcceptedCmp52
206166    +          +    -0.10078363733095 * GRP_Frq2  +     0.12187262992305 * GRP_Frq3
206167    +          +     0.06615581853287 * GRP_Frq4  +    -0.37438533196327 *
206168    +        GRP_Income2  +    -0.54951239852844 * GRP_Income3
206169    +          +     0.42517426076684 * GRP_Income4  +     0.01160451666213 *
206170    +        GRP_Mnt2  +    -0.19046851266656 * GRP_Mnt3  +    -0.22599863084471 *
206171    +        GRP_Mnt4  +     0.02252915755857 * GRP_MntFishProducts2
206172    +          +    -0.08997232581072 * GRP_MntFishProducts3
206173    +          +    -0.05669599356928 * GRP_MntFishProducts4
206174    +          +      0.2199150131909 * GRP_MntGoldProds2
206175    +          +     0.05584571259838 * GRP_MntGoldProds3
206176    +          +    -0.13160142309505 * GRP_MntGoldProds4
206177    +          +      0.2539849640816 * GRP_MntMeatProducts2
206178    +          +     0.29448191059312 * GRP_MntMeatProducts3
206179    +          +    -0.33946200154351 * GRP_MntMeatProducts4
206180    +          +    -0.47231816370111 * GRP_MntWines2  +    -0.35916844796743 *
206181    +        GRP_MntWines3  +     0.15578356288597 * GRP_MntWines4
206182    +          +     0.35913140014848 * GRP_NumCatalogPurchases3
206183    +          +    -0.07798422379681 * GRP_NumCatalogPurchases4
206184    +          +     0.38206153529506 * GRP_NumDistPurchases2
206185    +          +     0.08642998303162 * GRP_NumDistPurchases3
206186    +          +    -0.00375635377885 * GRP_NumDistPurchases4
206187    +          +    -0.04352529411419 * GRP_NumWebPurchases2
206188    +          +    -0.17285172586868 * GRP_NumWebPurchases3
206189    +          +     0.23030028338396 * GRP_NumWebPurchases4
206190    +          +     0.16194254582104 * GRP_RFMstat2  +    -0.03413270353062 *
206191    +        GRP_RFMstat3  +    -0.32516629559317 * GRP_RFMstat4
206192    +          +    -0.16070809362515 * GRP_RMntFrq2  +    -0.17716471899416 *
206193    +        GRP_RMntFrq3  +     0.09335047904411 * GRP_RMntFrq4
206194    +          +    -0.92875393407697 * GRP_Recency2  +     0.16068827585896 *
206195    +        GRP_Recency3  +     0.41807637211453 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.4684617848987 * GRP_AcceptedCmp52 + -0.10078363733095 *
GRP_Frq2 + 0.12187262992305 * GRP_Frq3 + 0.06615581853287 * GRP_Frq4 + -0.37438533196327 *
GRP_Income2 + -0.54951239852844 * GRP_Income3 + 0.42517426076684 * GRP_Income4 +
0.01160451666213 * GRP_Mnt2 + -0.19046851266656 * GRP_Mnt3 + -0.22599863084471 * GRP_Mnt4 +
0.02252915755857 * GRP_MntFishProducts2 + -0.08997232581072 * GRP_MntFishProducts3 +
-0.05669599356928 * GRP_MntFishProducts4 + 0.2199150131909 * GRP_MntGoldProds2 +
0.05584571259838 * GRP_MntGoldProds3 + -0.13160142309505 * GRP_MntGoldProds4 + 0.2539849640816
* GRP_MntMeatProducts2 + 0.29448191059312 * GRP_MntMeatProducts3 + -0.33946200154351 *
GRP_MntMeatProducts4 + -0.47231816370111 * GRP_MntWines2 + -0.35916844796743 * GRP_MntWines3 +
0.15578356288597 * GRP_MntWines4 + 0.35913140014848 * GRP_NumCatalogPurchases3 +
-0.07798422379681 * GRP_NumCatalogPurchases4 + 0.38206153529506 * GRP_NumDistPurchases2 +
0.08642998303162 * GRP_NumDistPurchases3 + -0.00375635377885 * GRP_NumDistPurchases4 +
-0.04352529411419 * GRP_NumWebPurchases2 + -0.17285172586868 * GRP_NumWebPurchases3 +
0.23030028338396 * GRP_NumWebPurchases4 + 0.16194254582104 * GRP_RFMstat2 + -0.03413270353062
* GRP_RFMstat3 + -0.32516629559317 * GRP_RFMstat4 + -0.16070809362515 * GRP_RMntFrq2 +
-0.17716471899416 * GRP_RMntFrq3 + 0.09335047904411 * GRP_RMntFrq4 + -0.92875393407697 *
GRP_Recency2 + 0.16068827585896 * GRP_Recency3 + 0.41807637211453 * GRP_Recency4 ;
206196    +   H15  = H15  +    -0.78481953865912 * GRP_AcceptedCmp52
206197    +          +     0.05211963408638 * GRP_Frq2  +     0.24938737986681 * GRP_Frq3
206198    +          +    -0.07347952562846 * GRP_Frq4  +    -0.15741135518664 *
206199    +        GRP_Income2  +     0.01909378686442 * GRP_Income3
206200    +          +    -0.15898085757789 * GRP_Income4  +     0.09202012507046 *
206201    +        GRP_Mnt2  +    -0.39641738573024 * GRP_Mnt3  +     0.02885484069701 *
206202    +        GRP_Mnt4  +     0.29554161293423 * GRP_MntFishProducts2
206203    +          +    -0.04439366722112 * GRP_MntFishProducts3
206204    +          +    -0.22939355735301 * GRP_MntFishProducts4
206205    +          +    -0.00367144103801 * GRP_MntGoldProds2
206206    +          +      -0.033315128385 * GRP_MntGoldProds3
206207    +          +     0.10655545066126 * GRP_MntGoldProds4
206208    +          +     0.04927093675686 * GRP_MntMeatProducts2
206209    +          +    -0.20156680946257 * GRP_MntMeatProducts3
206210    +          +     0.29394273234417 * GRP_MntMeatProducts4
206211    +          +     0.27324472738231 * GRP_MntWines2  +       0.398830803883 *
206212    +        GRP_MntWines3  +    -0.16588038849208 * GRP_MntWines4
206213    +          +     -0.3438340194477 * GRP_NumCatalogPurchases3
206214    +          +    -0.37438590488645 * GRP_NumCatalogPurchases4
206215    +          +    -0.42285816542086 * GRP_NumDistPurchases2
206216    +          +     -0.1008716650505 * GRP_NumDistPurchases3
206217    +          +    -0.42793112700917 * GRP_NumDistPurchases4
206218    +          +    -0.06792665579186 * GRP_NumWebPurchases2
206219    +          +     0.37113277513001 * GRP_NumWebPurchases3
206220    +          +     0.05720653023952 * GRP_NumWebPurchases4
206221    +          +    -0.30997814005221 * GRP_RFMstat2  +     0.06219993861842 *
206222    +        GRP_RFMstat3  +    -0.22600753085668 * GRP_RFMstat4
206223    +          +    -0.31041957734532 * GRP_RMntFrq2  +     0.25053172234721 *
206224    +        GRP_RMntFrq3  +     0.15983683107051 * GRP_RMntFrq4
206225    +          +     0.52797823019932 * GRP_Recency2  +     0.11382874879823 *
206226    +        GRP_Recency3  +    -0.22166533511817 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.78481953865912 * GRP_AcceptedCmp52 + 0.05211963408638 *
GRP_Frq2 + 0.24938737986681 * GRP_Frq3 + -0.07347952562846 * GRP_Frq4 + -0.15741135518664 *
GRP_Income2 + 0.01909378686442 * GRP_Income3 + -0.15898085757789 * GRP_Income4 +
0.09202012507046 * GRP_Mnt2 + -0.39641738573024 * GRP_Mnt3 + 0.02885484069701 * GRP_Mnt4 +
0.29554161293423 * GRP_MntFishProducts2 + -0.04439366722112 * GRP_MntFishProducts3 +
-0.22939355735301 * GRP_MntFishProducts4 + -0.00367144103801 * GRP_MntGoldProds2 +
-0.033315128385 * GRP_MntGoldProds3 + 0.10655545066126 * GRP_MntGoldProds4 + 0.04927093675686
* GRP_MntMeatProducts2 + -0.20156680946257 * GRP_MntMeatProducts3 + 0.29394273234417 *
GRP_MntMeatProducts4 + 0.27324472738231 * GRP_MntWines2 + 0.398830803883 * GRP_MntWines3 +
-0.16588038849208 * GRP_MntWines4 + -0.3438340194477 * GRP_NumCatalogPurchases3 +
-0.37438590488645 * GRP_NumCatalogPurchases4 + -0.42285816542086 * GRP_NumDistPurchases2 +
-0.1008716650505 * GRP_NumDistPurchases3 + -0.42793112700917 * GRP_NumDistPurchases4 +
-0.06792665579186 * GRP_NumWebPurchases2 + 0.37113277513001 * GRP_NumWebPurchases3 +
0.05720653023952 * GRP_NumWebPurchases4 + -0.30997814005221 * GRP_RFMstat2 + 0.06219993861842
* GRP_RFMstat3 + -0.22600753085668 * GRP_RFMstat4 + -0.31041957734532 * GRP_RMntFrq2 +
0.25053172234721 * GRP_RMntFrq3 + 0.15983683107051 * GRP_RMntFrq4 + 0.52797823019932 *
GRP_Recency2 + 0.11382874879823 * GRP_Recency3 + -0.22166533511817 * GRP_Recency4 ;
206227    +   H16  = H16  +      0.7107136456569 * GRP_AcceptedCmp52
206228    +          +     -0.4751898387651 * GRP_Frq2  +    -0.11277060686411 * GRP_Frq3
206229    +          +     0.15821547082299 * GRP_Frq4  +    -0.45945049231995 *
206230    +        GRP_Income2  +    -0.18413512635176 * GRP_Income3
206231    +          +     0.39594738835509 * GRP_Income4  +    -0.15472205523822 *
206232    +        GRP_Mnt2  +     0.02844181224363 * GRP_Mnt3  +     0.45435843401555 *
206233    +        GRP_Mnt4  +    -0.29220588593813 * GRP_MntFishProducts2
206234    +          +     0.04340555393469 * GRP_MntFishProducts3
206235    +          +    -0.20048219926361 * GRP_MntFishProducts4
206236    +          +     0.16101452165456 * GRP_MntGoldProds2
206237    +          +    -0.04467647211336 * GRP_MntGoldProds3
206238    +          +     0.32142013598241 * GRP_MntGoldProds4
206239    +          +     0.29741565154233 * GRP_MntMeatProducts2
206240    +          +    -0.00264678222241 * GRP_MntMeatProducts3
206241    +          +    -0.11596499325048 * GRP_MntMeatProducts4
206242    +          +    -0.29849043995136 * GRP_MntWines2  +     0.14756452272338 *
206243    +        GRP_MntWines3  +     0.48995265672675 * GRP_MntWines4
206244    +          +     0.80854583627117 * GRP_NumCatalogPurchases3
206245    +          +     0.14001888431357 * GRP_NumCatalogPurchases4
206246    +          +     0.36107050137299 * GRP_NumDistPurchases2
206247    +          +    -0.10375572120121 * GRP_NumDistPurchases3
206248    +          +     0.10557004956787 * GRP_NumDistPurchases4
206249    +          +     0.04608069099876 * GRP_NumWebPurchases2
206250    +          +     0.15561947954396 * GRP_NumWebPurchases3
206251    +          +    -0.01081470092004 * GRP_NumWebPurchases4
206252    +          +     0.21994454623245 * GRP_RFMstat2  +    -0.08858421895818 *
206253    +        GRP_RFMstat3  +    -0.13608887793525 * GRP_RFMstat4
206254    +          +     0.07482010458977 * GRP_RMntFrq2  +    -0.11874760292742 *
206255    +        GRP_RMntFrq3  +     0.56887215594366 * GRP_RMntFrq4
206256    +          +    -0.13548983954455 * GRP_Recency2  +    -0.25036935235639 *
206257    +        GRP_Recency3  +     -0.0282277663071 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.7107136456569 * GRP_AcceptedCmp52 + -0.4751898387651 *
GRP_Frq2 + -0.11277060686411 * GRP_Frq3 + 0.15821547082299 * GRP_Frq4 + -0.45945049231995 *
GRP_Income2 + -0.18413512635176 * GRP_Income3 + 0.39594738835509 * GRP_Income4 +
-0.15472205523822 * GRP_Mnt2 + 0.02844181224363 * GRP_Mnt3 + 0.45435843401555 * GRP_Mnt4 +
-0.29220588593813 * GRP_MntFishProducts2 + 0.04340555393469 * GRP_MntFishProducts3 +
-0.20048219926361 * GRP_MntFishProducts4 + 0.16101452165456 * GRP_MntGoldProds2 +
-0.04467647211336 * GRP_MntGoldProds3 + 0.32142013598241 * GRP_MntGoldProds4 +
0.29741565154233 * GRP_MntMeatProducts2 + -0.00264678222241 * GRP_MntMeatProducts3 +
-0.11596499325048 * GRP_MntMeatProducts4 + -0.29849043995136 * GRP_MntWines2 +
0.14756452272338 * GRP_MntWines3 + 0.48995265672675 * GRP_MntWines4 + 0.80854583627117 *
GRP_NumCatalogPurchases3 + 0.14001888431357 * GRP_NumCatalogPurchases4 + 0.36107050137299 *
GRP_NumDistPurchases2 + -0.10375572120121 * GRP_NumDistPurchases3 + 0.10557004956787 *
GRP_NumDistPurchases4 + 0.04608069099876 * GRP_NumWebPurchases2 + 0.15561947954396 *
GRP_NumWebPurchases3 + -0.01081470092004 * GRP_NumWebPurchases4 + 0.21994454623245 *
GRP_RFMstat2 + -0.08858421895818 * GRP_RFMstat3 + -0.13608887793525 * GRP_RFMstat4 +
0.07482010458977 * GRP_RMntFrq2 + -0.11874760292742 * GRP_RMntFrq3 + 0.56887215594366 *
GRP_RMntFrq4 + -0.13548983954455 * GRP_Recency2 + -0.25036935235639 * GRP_Recency3 +
-0.0282277663071 * GRP_Recency4 ;
206258    +   H17  = H17  +    -0.06745892596619 * GRP_AcceptedCmp52
206259    +          +    -0.09506194345469 * GRP_Frq2  +    -0.29707644715885 * GRP_Frq3
206260    +          +    -0.06874693052001 * GRP_Frq4  +    -0.08949373241741 *
206261    +        GRP_Income2  +     0.02965579603049 * GRP_Income3
206262    +          +    -0.02192829727213 * GRP_Income4  +     0.30180973300088 *
206263    +        GRP_Mnt2  +    -0.10648502526616 * GRP_Mnt3  +     0.07588844839465 *
206264    +        GRP_Mnt4  +    -0.30524623655199 * GRP_MntFishProducts2
206265    +          +    -0.20032703571491 * GRP_MntFishProducts3
206266    +          +    -0.08348811352746 * GRP_MntFishProducts4
206267    +          +    -0.00744131870881 * GRP_MntGoldProds2
206268    +          +    -0.27347309859096 * GRP_MntGoldProds3
206269    +          +    -0.04458870469416 * GRP_MntGoldProds4
206270    +          +     0.17538261434498 * GRP_MntMeatProducts2
206271    +          +    -0.08059547298843 * GRP_MntMeatProducts3
206272    +          +     0.03113249898233 * GRP_MntMeatProducts4
206273    +          +    -0.23690909413276 * GRP_MntWines2  +    -0.01511980231776 *
206274    +        GRP_MntWines3  +     -0.2825327824317 * GRP_MntWines4
206275    +          +     0.13919784888607 * GRP_NumCatalogPurchases3
206276    +          +    -0.10871281978714 * GRP_NumCatalogPurchases4
206277    +          +     0.20540014620209 * GRP_NumDistPurchases2
206278    +          +     0.17744784873298 * GRP_NumDistPurchases3
206279    +          +      -0.003486430833 * GRP_NumDistPurchases4
206280    +          +    -0.04863967797645 * GRP_NumWebPurchases2
206281    +          +     0.07245829152192 * GRP_NumWebPurchases3
206282    +          +    -0.27395606297099 * GRP_NumWebPurchases4
206283    +          +    -0.14496279180087 * GRP_RFMstat2  +     0.28224463929838 *
206284    +        GRP_RFMstat3  +     0.26720059295202 * GRP_RFMstat4
206285    +          +    -0.07120881723264 * GRP_RMntFrq2  +     0.16350065828319 *
206286    +        GRP_RMntFrq3  +      0.3117297070285 * GRP_RMntFrq4
206287    +          +    -0.52884474877094 * GRP_Recency2  +    -0.17937099376746 *
206288    +        GRP_Recency3  +     -0.0157357289132 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.06745892596619 * GRP_AcceptedCmp52 + -0.09506194345469 *
GRP_Frq2 + -0.29707644715885 * GRP_Frq3 + -0.06874693052001 * GRP_Frq4 + -0.08949373241741 *
GRP_Income2 + 0.02965579603049 * GRP_Income3 + -0.02192829727213 * GRP_Income4 +
0.30180973300088 * GRP_Mnt2 + -0.10648502526616 * GRP_Mnt3 + 0.07588844839465 * GRP_Mnt4 +
-0.30524623655199 * GRP_MntFishProducts2 + -0.20032703571491 * GRP_MntFishProducts3 +
-0.08348811352746 * GRP_MntFishProducts4 + -0.00744131870881 * GRP_MntGoldProds2 +
-0.27347309859096 * GRP_MntGoldProds3 + -0.04458870469416 * GRP_MntGoldProds4 +
0.17538261434498 * GRP_MntMeatProducts2 + -0.08059547298843 * GRP_MntMeatProducts3 +
0.03113249898233 * GRP_MntMeatProducts4 + -0.23690909413276 * GRP_MntWines2 +
-0.01511980231776 * GRP_MntWines3 + -0.2825327824317 * GRP_MntWines4 + 0.13919784888607 *
GRP_NumCatalogPurchases3 + -0.10871281978714 * GRP_NumCatalogPurchases4 + 0.20540014620209 *
GRP_NumDistPurchases2 + 0.17744784873298 * GRP_NumDistPurchases3 + -0.003486430833 *
GRP_NumDistPurchases4 + -0.04863967797645 * GRP_NumWebPurchases2 + 0.07245829152192 *
GRP_NumWebPurchases3 + -0.27395606297099 * GRP_NumWebPurchases4 + -0.14496279180087 *
GRP_RFMstat2 + 0.28224463929838 * GRP_RFMstat3 + 0.26720059295202 * GRP_RFMstat4 +
-0.07120881723264 * GRP_RMntFrq2 + 0.16350065828319 * GRP_RMntFrq3 + 0.3117297070285 *
GRP_RMntFrq4 + -0.52884474877094 * GRP_Recency2 + -0.17937099376746 * GRP_Recency3 +
-0.0157357289132 * GRP_Recency4 ;
206289    +   H11  =    -0.76467628027618 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.76467628027618 + H11 ;
206290    +   H12  =    -0.03405517571825 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.03405517571825 + H12 ;
206291    +   H13  =    -0.32845676351839 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.32845676351839 + H13 ;
206292    +   H14  =     0.08379615404181 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.08379615404181 + H14 ;
206293    +   H15  =    -0.77228291932436 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.77228291932436 + H15 ;
206294    +   H16  =    -0.77356855332279 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.77356855332279 + H16 ;
206295    +   H17  =     0.45067845230796 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.45067845230796 + H17 ;
206296    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
206297    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
206298    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
206299    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
206300    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
206301    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
206302    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
206303    +END;
MPRINT(EM_DIAGRAM):   END;
206304    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
206305    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
206306    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
206307    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
206308    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
206309    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
206310    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
206311    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
206312    +END;
MPRINT(EM_DIAGRAM):   END;
206313    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206314    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
206315    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206316    +
206317    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
206318    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
206319    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
206320    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
206321    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
206322    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206323    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
206324    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
206325    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
206326    +end;
MPRINT(EM_DIAGRAM):   end;
206327    +else do;
MPRINT(EM_DIAGRAM):   else do;
206328    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
206329    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
206330    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
206331    +   end;
MPRINT(EM_DIAGRAM):   end;
206332    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
206333    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
206334    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
206335    +   end;
MPRINT(EM_DIAGRAM):   end;
206336    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206337    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
206338    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
206339    +   end;
MPRINT(EM_DIAGRAM):   end;
206340    +end;
MPRINT(EM_DIAGRAM):   end;
206341    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
206342    +   P_DepVar1  =    -0.15999450347654 * H11  +     1.35667407296837 * H12
206343    +          +    -0.71419530867579 * H13  +     -1.0947746264744 * H14
206344    +          +     0.98315214007209 * H15  +    -1.32163386678746 * H16
206345    +          +    -0.29329090231091 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.15999450347654 * H11 + 1.35667407296837 * H12 +
-0.71419530867579 * H13 + -1.0947746264744 * H14 + 0.98315214007209 * H15 + -1.32163386678746
* H16 + -0.29329090231091 * H17 ;
206346    +   P_DepVar1  =    -1.66210022161101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66210022161101 + P_DepVar1 ;
206347    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
206348    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
206349    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
206350    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
206351    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
206352    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
206353    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
206354    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
206355    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
206356    +END;
MPRINT(EM_DIAGRAM):   END;
206357    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
206358    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
206359    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
206360    +END;
MPRINT(EM_DIAGRAM):   END;
206361    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
206362    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
206363    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
206364    +END;
MPRINT(EM_DIAGRAM):   END;
206365    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
206366    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
206367    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
206368    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
206369    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
206370    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
206371    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
206372    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206373    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
206374    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
206375    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
206376    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
206377    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
206378    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
206379    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
206380    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
206381    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
206382    +END;
MPRINT(EM_DIAGRAM):   END;
206383    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
206384    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
206385    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
206386    +drop
206387    +H11
206388    +H12
206389    +H13
206390    +H14
206391    +H15
206392    +H16
206393    +H17
206394    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
206395    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
206396    +* Renaming variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural18;
206397    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206398    +* Renaming Posterior variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural18;
206399    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206400    +drop Neural18_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar1;
206401    +Neural18_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar1 = P_DepVar1;
206402    +drop Neural18_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar0;
206403    +Neural18_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar0 = P_DepVar0;
206404    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206405    +* Renaming _WARN_ variable for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural18;
206406    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206407    +length Neural18_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural18_WARN_ $4;
206408    +drop Neural18_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural18_WARN_;
206409    +Neural18_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural18_WARN_ = _WARN_;
206410    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206411    +* Ensmbl18: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Scoring Code of model 4 of 7;
206412    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206413    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206414    +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
206415    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
206416    +* NODE: Reg7;
MPRINT(EM_DIAGRAM):   * NODE: Reg7;
206417    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206418    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
206419    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
206420    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
206421    +
206422    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
206423    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
206424    +
206425    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
206426    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
206427    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
206428    +array REG7DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG7DRF [2] $12 _temporary_ ('1' '0' );
206429    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
206430    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
206431    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
206432    +ARRAY REG7DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG7DRU[2] _TEMPORARY_ (1 0);
206433    +
206434    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
206435    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
206436    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
206437    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
206438    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
206439    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206440    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
206441    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
206442    +end;
MPRINT(EM_DIAGRAM):   end;
206443    +else do;
MPRINT(EM_DIAGRAM):   else do;
206444    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
206445    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
206446    +   end;
MPRINT(EM_DIAGRAM):   end;
206447    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
206448    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
206449    +   end;
MPRINT(EM_DIAGRAM):   end;
206450    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206451    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
206452    +   end;
MPRINT(EM_DIAGRAM):   end;
206453    +end;
MPRINT(EM_DIAGRAM):   end;
206454    +
206455    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
206456    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
206457    +
206458    +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
206459    +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
206460    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206461    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206462    +end;
MPRINT(EM_DIAGRAM):   end;
206463    +
206464    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
206465    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
206466    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
206467    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
206468    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206469    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206470    +end;
MPRINT(EM_DIAGRAM):   end;
206471    +else do;
MPRINT(EM_DIAGRAM):   else do;
206472    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
206473    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
206474    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206475    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
206476    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
206477    +   end;
MPRINT(EM_DIAGRAM):   end;
206478    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
206479    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
206480    +   end;
MPRINT(EM_DIAGRAM):   end;
206481    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206482    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
206483    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206484    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206485    +   end;
MPRINT(EM_DIAGRAM):   end;
206486    +end;
MPRINT(EM_DIAGRAM):   end;
206487    +
206488    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
206489    +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
206490    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
206491    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
206492    +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
206493    +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
206494    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206495    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206496    +end;
MPRINT(EM_DIAGRAM):   end;
206497    +else do;
MPRINT(EM_DIAGRAM):   else do;
206498    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
206499    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
206500    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206501    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
206502    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
206503    +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
206504    +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
206505    +   end;
MPRINT(EM_DIAGRAM):   end;
206506    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
206507    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
206508    +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
206509    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
206510    +   end;
MPRINT(EM_DIAGRAM):   end;
206511    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
206512    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
206513    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
206514    +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
206515    +   end;
MPRINT(EM_DIAGRAM):   end;
206516    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
206517    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
206518    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
206519    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
206520    +   end;
MPRINT(EM_DIAGRAM):   end;
206521    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206522    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
206523    +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
206524    +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
206525    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206526    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206527    +   end;
MPRINT(EM_DIAGRAM):   end;
206528    +end;
MPRINT(EM_DIAGRAM):   end;
206529    +
206530    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
206531    +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
206532    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
206533    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
206534    +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
206535    +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
206536    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206537    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206538    +end;
MPRINT(EM_DIAGRAM):   end;
206539    +else do;
MPRINT(EM_DIAGRAM):   else do;
206540    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
206541    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
206542    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206543    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
206544    +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
206545    +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
206546    +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
206547    +   end;
MPRINT(EM_DIAGRAM):   end;
206548    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
206549    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
206550    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
206551    +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
206552    +   end;
MPRINT(EM_DIAGRAM):   end;
206553    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
206554    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
206555    +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
206556    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
206557    +   end;
MPRINT(EM_DIAGRAM):   end;
206558    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
206559    +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
206560    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
206561    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
206562    +   end;
MPRINT(EM_DIAGRAM):   end;
206563    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206564    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
206565    +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
206566    +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
206567    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206568    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206569    +   end;
MPRINT(EM_DIAGRAM):   end;
206570    +end;
MPRINT(EM_DIAGRAM):   end;
206571    +
206572    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
206573    +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
206574    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
206575    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
206576    +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
206577    +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
206578    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206579    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206580    +end;
MPRINT(EM_DIAGRAM):   end;
206581    +else do;
MPRINT(EM_DIAGRAM):   else do;
206582    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
206583    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
206584    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206585    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
206586    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
206587    +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
206588    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
206589    +   end;
MPRINT(EM_DIAGRAM):   end;
206590    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
206591    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
206592    +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
206593    +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
206594    +   end;
MPRINT(EM_DIAGRAM):   end;
206595    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
206596    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
206597    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
206598    +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
206599    +   end;
MPRINT(EM_DIAGRAM):   end;
206600    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
206601    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
206602    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
206603    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
206604    +   end;
MPRINT(EM_DIAGRAM):   end;
206605    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206606    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
206607    +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
206608    +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
206609    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206610    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206611    +   end;
MPRINT(EM_DIAGRAM):   end;
206612    +end;
MPRINT(EM_DIAGRAM):   end;
206613    +
206614    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
206615    +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
206616    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
206617    +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
206618    +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
206619    +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
206620    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206621    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206622    +end;
MPRINT(EM_DIAGRAM):   end;
206623    +else do;
MPRINT(EM_DIAGRAM):   else do;
206624    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
206625    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
206626    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206627    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
206628    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
206629    +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
206630    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
206631    +   end;
MPRINT(EM_DIAGRAM):   end;
206632    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
206633    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
206634    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
206635    +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
206636    +   end;
MPRINT(EM_DIAGRAM):   end;
206637    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
206638    +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
206639    +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
206640    +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
206641    +   end;
MPRINT(EM_DIAGRAM):   end;
206642    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
206643    +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
206644    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
206645    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
206646    +   end;
MPRINT(EM_DIAGRAM):   end;
206647    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206648    +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
206649    +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
206650    +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
206651    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206652    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206653    +   end;
MPRINT(EM_DIAGRAM):   end;
206654    +end;
MPRINT(EM_DIAGRAM):   end;
206655    +
206656    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
206657    +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
206658    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
206659    +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
206660    +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
206661    +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
206662    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206663    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206664    +end;
MPRINT(EM_DIAGRAM):   end;
206665    +else do;
MPRINT(EM_DIAGRAM):   else do;
206666    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
206667    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
206668    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206669    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
206670    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
206671    +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
206672    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
206673    +   end;
MPRINT(EM_DIAGRAM):   end;
206674    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
206675    +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
206676    +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
206677    +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
206678    +   end;
MPRINT(EM_DIAGRAM):   end;
206679    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
206680    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
206681    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
206682    +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
206683    +   end;
MPRINT(EM_DIAGRAM):   end;
206684    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
206685    +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
206686    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
206687    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
206688    +   end;
MPRINT(EM_DIAGRAM):   end;
206689    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206690    +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
206691    +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
206692    +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
206693    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206694    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206695    +   end;
MPRINT(EM_DIAGRAM):   end;
206696    +end;
MPRINT(EM_DIAGRAM):   end;
206697    +
206698    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
206699    +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
206700    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
206701    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
206702    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
206703    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206704    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206705    +end;
MPRINT(EM_DIAGRAM):   end;
206706    +else do;
MPRINT(EM_DIAGRAM):   else do;
206707    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
206708    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
206709    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206710    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
206711    +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
206712    +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
206713    +   end;
MPRINT(EM_DIAGRAM):   end;
206714    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
206715    +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
206716    +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
206717    +   end;
MPRINT(EM_DIAGRAM):   end;
206718    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
206719    +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
206720    +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
206721    +   end;
MPRINT(EM_DIAGRAM):   end;
206722    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206723    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
206724    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
206725    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206726    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206727    +   end;
MPRINT(EM_DIAGRAM):   end;
206728    +end;
MPRINT(EM_DIAGRAM):   end;
206729    +
206730    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
206731    +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
206732    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
206733    +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
206734    +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
206735    +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
206736    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206737    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206738    +end;
MPRINT(EM_DIAGRAM):   end;
206739    +else do;
MPRINT(EM_DIAGRAM):   else do;
206740    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
206741    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
206742    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206743    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
206744    +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
206745    +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
206746    +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
206747    +   end;
MPRINT(EM_DIAGRAM):   end;
206748    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
206749    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
206750    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
206751    +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
206752    +   end;
MPRINT(EM_DIAGRAM):   end;
206753    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
206754    +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
206755    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
206756    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
206757    +   end;
MPRINT(EM_DIAGRAM):   end;
206758    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
206759    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
206760    +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
206761    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
206762    +   end;
MPRINT(EM_DIAGRAM):   end;
206763    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206764    +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
206765    +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
206766    +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
206767    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206768    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206769    +   end;
MPRINT(EM_DIAGRAM):   end;
206770    +end;
MPRINT(EM_DIAGRAM):   end;
206771    +
206772    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
206773    +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
206774    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
206775    +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
206776    +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
206777    +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
206778    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206779    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206780    +end;
MPRINT(EM_DIAGRAM):   end;
206781    +else do;
MPRINT(EM_DIAGRAM):   else do;
206782    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
206783    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
206784    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206785    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
206786    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
206787    +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
206788    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
206789    +   end;
MPRINT(EM_DIAGRAM):   end;
206790    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
206791    +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
206792    +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
206793    +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
206794    +   end;
MPRINT(EM_DIAGRAM):   end;
206795    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
206796    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
206797    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
206798    +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
206799    +   end;
MPRINT(EM_DIAGRAM):   end;
206800    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
206801    +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
206802    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
206803    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
206804    +   end;
MPRINT(EM_DIAGRAM):   end;
206805    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206806    +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
206807    +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
206808    +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
206809    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206810    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206811    +   end;
MPRINT(EM_DIAGRAM):   end;
206812    +end;
MPRINT(EM_DIAGRAM):   end;
206813    +
206814    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
206815    +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
206816    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
206817    +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
206818    +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
206819    +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
206820    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
206821    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206822    +end;
MPRINT(EM_DIAGRAM):   end;
206823    +else do;
MPRINT(EM_DIAGRAM):   else do;
206824    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
206825    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
206826    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
206827    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
206828    +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
206829    +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
206830    +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
206831    +   end;
MPRINT(EM_DIAGRAM):   end;
206832    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
206833    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
206834    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
206835    +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
206836    +   end;
MPRINT(EM_DIAGRAM):   end;
206837    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
206838    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
206839    +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
206840    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
206841    +   end;
MPRINT(EM_DIAGRAM):   end;
206842    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
206843    +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
206844    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
206845    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
206846    +   end;
MPRINT(EM_DIAGRAM):   end;
206847    +   else do;
MPRINT(EM_DIAGRAM):   else do;
206848    +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
206849    +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
206850    +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
206851    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
206852    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
206853    +   end;
MPRINT(EM_DIAGRAM):   end;
206854    +end;
MPRINT(EM_DIAGRAM):   end;
206855    +
206856    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
206857    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
206858    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
206859    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
206860    +   goto REG7DR1;
MPRINT(EM_DIAGRAM):   goto REG7DR1;
206861    +end;
MPRINT(EM_DIAGRAM):   end;
206862    +
206863    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
206864    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
206865    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
206866    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
206867    +
206868    +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
206869    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
206870    +_LP0 = _LP0 + (    -0.5862337869734) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5862337869734) * _TEMP * _1_0;
206871    +
206872    +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
206873    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
206874    +_LP0 = _LP0 + (     1.0565693238421) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.0565693238421) * _TEMP * _2_0;
206875    +_LP0 = _LP0 + (     0.0911336121088) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0911336121088) * _TEMP * _2_1;
206876    +_LP0 = _LP0 + (   -0.37448220273968) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.37448220273968) * _TEMP * _2_2;
206877    +
206878    +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
206879    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
206880    +_LP0 = _LP0 + (    0.51658584340625) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51658584340625) * _TEMP * _3_0;
206881    +_LP0 = _LP0 + (    0.48505772489262) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.48505772489262) * _TEMP * _3_1;
206882    +_LP0 = _LP0 + (   -0.50854630566525) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.50854630566525) * _TEMP * _3_2;
206883    +
206884    +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
206885    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
206886    +_LP0 = _LP0 + (    0.38994498659965) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38994498659965) * _TEMP * _5_0;
206887    +_LP0 = _LP0 + (    0.03146325606998) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03146325606998) * _TEMP * _5_1;
206888    +_LP0 = _LP0 + (   -0.05372169204837) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05372169204837) * _TEMP * _5_2;
206889    +
206890    +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
206891    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
206892    +_LP0 = _LP0 + (   -0.79733877870259) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.79733877870259) * _TEMP * _7_0;
206893    +_LP0 = _LP0 + (   -0.15003183676105) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.15003183676105) * _TEMP * _7_1;
206894    +_LP0 = _LP0 + (    0.31191597751128) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.31191597751128) * _TEMP * _7_2;
206895    +
206896    +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
206897    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
206898    +_LP0 = _LP0 + (    0.53434964580952) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53434964580952) * _TEMP * _8_0;
206899    +_LP0 = _LP0 + (    0.22167667253067) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.22167667253067) * _TEMP * _8_1;
206900    +_LP0 = _LP0 + (     -0.305489910536) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.305489910536) * _TEMP * _8_2;
206901    +
206902    +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
206903    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
206904    +_LP0 = _LP0 + (     -0.629899271763) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.629899271763) * _TEMP * _9_0;
206905    +_LP0 = _LP0 + (    0.03240844395355) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03240844395355) * _TEMP * _9_1;
206906    +
206907    +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
206908    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
206909    +_LP0 = _LP0 + (   -1.42622019893988) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.42622019893988) * _TEMP * _10_0;
206910    +_LP0 = _LP0 + (    0.05466498093201) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.05466498093201) * _TEMP * _10_1;
206911    +_LP0 = _LP0 + (    0.25182489000571) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25182489000571) * _TEMP * _10_2;
206912    +
206913    +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
206914    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
206915    +_LP0 = _LP0 + (   -0.14979245852204) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14979245852204) * _TEMP * _13_0;
206916    +_LP0 = _LP0 + (     0.0056028143187) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0056028143187) * _TEMP * _13_1;
206917    +_LP0 = _LP0 + (   -0.23315930182624) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.23315930182624) * _TEMP * _13_2;
206918    +
206919    +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
206920    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
206921    +_LP0 = _LP0 + (    1.06974976023651) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.06974976023651) * _TEMP * _14_0;
206922    +_LP0 = _LP0 + (    0.29139327664531) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.29139327664531) * _TEMP * _14_1;
206923    +_LP0 = _LP0 + (   -0.34742570667526) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.34742570667526) * _TEMP * _14_2;
206924    +
206925    +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
206926    +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
206927    +_LP0 = _LP0 + (    0.01045707390649 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01045707390649 * _TEMP);
206928    +
206929    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
206930    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
206931    +_P0 = probnorm((   -21.5603180840073) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -21.5603180840073) + _LP0);
206932    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
206933    +
206934    +REG7DR1:
206935    +
206936    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG7DR1: *** Residuals;
206937    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
206938    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
206939    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
206940    +end;
MPRINT(EM_DIAGRAM):   end;
206941    +else do;
MPRINT(EM_DIAGRAM):   else do;
206942    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
206943    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
206944    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
206945    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
206946    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
206947    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
206948    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
206949    +   end;
MPRINT(EM_DIAGRAM):   end;
206950    +end;
MPRINT(EM_DIAGRAM):   end;
206951    +
206952    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
206953    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
206954    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
206955    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
206956    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
206957    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
206958    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
206959    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
206960    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
206961    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
206962    +end;
MPRINT(EM_DIAGRAM):   end;
206963    +I_DepVar = REG7DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG7DRF[_IY];
206964    +U_DepVar = REG7DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG7DRU[_IY];
206965    +
206966    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
206967    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
206968    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
206969    +* Renaming variables for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg7;
206970    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206971    +* Renaming Posterior variables for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg7;
206972    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206973    +drop Reg7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg7_P_DepVar1;
206974    +Reg7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg7_P_DepVar1 = P_DepVar1;
206975    +drop Reg7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg7_P_DepVar0;
206976    +Reg7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg7_P_DepVar0 = P_DepVar0;
206977    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206978    +* Renaming _WARN_ variable for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg7;
206979    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206980    +length Reg7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg7_WARN_ $4;
206981    +drop Reg7_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg7_WARN_;
206982    +Reg7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg7_WARN_ = _WARN_;
206983    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206984    +* Ensmbl18: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Scoring Code of model 5 of 7;
206985    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206986    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206987    +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
206988    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
206989    +* NODE: Reg3;
MPRINT(EM_DIAGRAM):   * NODE: Reg3;
206990    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
206991    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
206992    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
206993    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
206994    +
206995    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
206996    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
206997    +
206998    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
206999    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
207000    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
207001    +array REG3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3DRF [2] $12 _temporary_ ('1' '0' );
207002    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
207003    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
207004    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
207005    +ARRAY REG3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3DRU[2] _TEMPORARY_ (1 0);
207006    +
207007    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
207008    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
207009    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
207010    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
207011    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
207012    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207013    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
207014    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
207015    +end;
MPRINT(EM_DIAGRAM):   end;
207016    +else do;
MPRINT(EM_DIAGRAM):   else do;
207017    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
207018    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
207019    +   end;
MPRINT(EM_DIAGRAM):   end;
207020    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
207021    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
207022    +   end;
MPRINT(EM_DIAGRAM):   end;
207023    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207024    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
207025    +   end;
MPRINT(EM_DIAGRAM):   end;
207026    +end;
MPRINT(EM_DIAGRAM):   end;
207027    +
207028    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
207029    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
207030    +
207031    +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
207032    +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
207033    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207034    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207035    +end;
MPRINT(EM_DIAGRAM):   end;
207036    +
207037    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
207038    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
207039    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
207040    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
207041    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207042    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207043    +end;
MPRINT(EM_DIAGRAM):   end;
207044    +else do;
MPRINT(EM_DIAGRAM):   else do;
207045    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207046    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
207047    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207048    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
207049    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
207050    +   end;
MPRINT(EM_DIAGRAM):   end;
207051    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
207052    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
207053    +   end;
MPRINT(EM_DIAGRAM):   end;
207054    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207055    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
207056    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207057    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207058    +   end;
MPRINT(EM_DIAGRAM):   end;
207059    +end;
MPRINT(EM_DIAGRAM):   end;
207060    +
207061    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
207062    +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
207063    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
207064    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
207065    +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
207066    +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
207067    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207068    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207069    +end;
MPRINT(EM_DIAGRAM):   end;
207070    +else do;
MPRINT(EM_DIAGRAM):   else do;
207071    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207072    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
207073    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207074    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
207075    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
207076    +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
207077    +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
207078    +   end;
MPRINT(EM_DIAGRAM):   end;
207079    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
207080    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
207081    +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
207082    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
207083    +   end;
MPRINT(EM_DIAGRAM):   end;
207084    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
207085    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
207086    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
207087    +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
207088    +   end;
MPRINT(EM_DIAGRAM):   end;
207089    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
207090    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
207091    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
207092    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
207093    +   end;
MPRINT(EM_DIAGRAM):   end;
207094    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207095    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
207096    +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
207097    +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
207098    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207099    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207100    +   end;
MPRINT(EM_DIAGRAM):   end;
207101    +end;
MPRINT(EM_DIAGRAM):   end;
207102    +
207103    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
207104    +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
207105    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
207106    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
207107    +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
207108    +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
207109    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207110    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207111    +end;
MPRINT(EM_DIAGRAM):   end;
207112    +else do;
MPRINT(EM_DIAGRAM):   else do;
207113    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207114    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
207115    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207116    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
207117    +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
207118    +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
207119    +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
207120    +   end;
MPRINT(EM_DIAGRAM):   end;
207121    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
207122    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
207123    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
207124    +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
207125    +   end;
MPRINT(EM_DIAGRAM):   end;
207126    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
207127    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
207128    +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
207129    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
207130    +   end;
MPRINT(EM_DIAGRAM):   end;
207131    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
207132    +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
207133    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
207134    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
207135    +   end;
MPRINT(EM_DIAGRAM):   end;
207136    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207137    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
207138    +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
207139    +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
207140    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207141    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207142    +   end;
MPRINT(EM_DIAGRAM):   end;
207143    +end;
MPRINT(EM_DIAGRAM):   end;
207144    +
207145    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
207146    +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
207147    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
207148    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
207149    +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
207150    +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
207151    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207152    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207153    +end;
MPRINT(EM_DIAGRAM):   end;
207154    +else do;
MPRINT(EM_DIAGRAM):   else do;
207155    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207156    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
207157    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207158    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
207159    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
207160    +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
207161    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
207162    +   end;
MPRINT(EM_DIAGRAM):   end;
207163    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
207164    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
207165    +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
207166    +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
207167    +   end;
MPRINT(EM_DIAGRAM):   end;
207168    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
207169    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
207170    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
207171    +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
207172    +   end;
MPRINT(EM_DIAGRAM):   end;
207173    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
207174    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
207175    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
207176    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
207177    +   end;
MPRINT(EM_DIAGRAM):   end;
207178    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207179    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
207180    +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
207181    +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
207182    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207183    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207184    +   end;
MPRINT(EM_DIAGRAM):   end;
207185    +end;
MPRINT(EM_DIAGRAM):   end;
207186    +
207187    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
207188    +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
207189    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
207190    +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
207191    +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
207192    +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
207193    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207194    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207195    +end;
MPRINT(EM_DIAGRAM):   end;
207196    +else do;
MPRINT(EM_DIAGRAM):   else do;
207197    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207198    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
207199    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207200    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
207201    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
207202    +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
207203    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
207204    +   end;
MPRINT(EM_DIAGRAM):   end;
207205    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
207206    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
207207    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
207208    +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
207209    +   end;
MPRINT(EM_DIAGRAM):   end;
207210    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
207211    +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
207212    +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
207213    +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
207214    +   end;
MPRINT(EM_DIAGRAM):   end;
207215    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
207216    +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
207217    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
207218    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
207219    +   end;
MPRINT(EM_DIAGRAM):   end;
207220    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207221    +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
207222    +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
207223    +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
207224    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207225    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207226    +   end;
MPRINT(EM_DIAGRAM):   end;
207227    +end;
MPRINT(EM_DIAGRAM):   end;
207228    +
207229    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
207230    +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
207231    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
207232    +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
207233    +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
207234    +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
207235    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207236    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207237    +end;
MPRINT(EM_DIAGRAM):   end;
207238    +else do;
MPRINT(EM_DIAGRAM):   else do;
207239    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207240    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
207241    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207242    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
207243    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
207244    +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
207245    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
207246    +   end;
MPRINT(EM_DIAGRAM):   end;
207247    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
207248    +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
207249    +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
207250    +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
207251    +   end;
MPRINT(EM_DIAGRAM):   end;
207252    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
207253    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
207254    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
207255    +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
207256    +   end;
MPRINT(EM_DIAGRAM):   end;
207257    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
207258    +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
207259    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
207260    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
207261    +   end;
MPRINT(EM_DIAGRAM):   end;
207262    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207263    +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
207264    +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
207265    +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
207266    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207267    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207268    +   end;
MPRINT(EM_DIAGRAM):   end;
207269    +end;
MPRINT(EM_DIAGRAM):   end;
207270    +
207271    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
207272    +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
207273    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
207274    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
207275    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
207276    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207277    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207278    +end;
MPRINT(EM_DIAGRAM):   end;
207279    +else do;
MPRINT(EM_DIAGRAM):   else do;
207280    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207281    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
207282    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207283    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
207284    +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
207285    +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
207286    +   end;
MPRINT(EM_DIAGRAM):   end;
207287    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
207288    +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
207289    +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
207290    +   end;
MPRINT(EM_DIAGRAM):   end;
207291    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
207292    +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
207293    +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
207294    +   end;
MPRINT(EM_DIAGRAM):   end;
207295    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207296    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
207297    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
207298    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207299    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207300    +   end;
MPRINT(EM_DIAGRAM):   end;
207301    +end;
MPRINT(EM_DIAGRAM):   end;
207302    +
207303    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
207304    +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
207305    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
207306    +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
207307    +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
207308    +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
207309    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207310    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207311    +end;
MPRINT(EM_DIAGRAM):   end;
207312    +else do;
MPRINT(EM_DIAGRAM):   else do;
207313    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207314    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
207315    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207316    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
207317    +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
207318    +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
207319    +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
207320    +   end;
MPRINT(EM_DIAGRAM):   end;
207321    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
207322    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
207323    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
207324    +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
207325    +   end;
MPRINT(EM_DIAGRAM):   end;
207326    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
207327    +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
207328    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
207329    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
207330    +   end;
MPRINT(EM_DIAGRAM):   end;
207331    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
207332    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
207333    +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
207334    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
207335    +   end;
MPRINT(EM_DIAGRAM):   end;
207336    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207337    +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
207338    +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
207339    +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
207340    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207341    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207342    +   end;
MPRINT(EM_DIAGRAM):   end;
207343    +end;
MPRINT(EM_DIAGRAM):   end;
207344    +
207345    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
207346    +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
207347    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
207348    +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
207349    +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
207350    +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
207351    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207352    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207353    +end;
MPRINT(EM_DIAGRAM):   end;
207354    +else do;
MPRINT(EM_DIAGRAM):   else do;
207355    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207356    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
207357    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207358    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
207359    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
207360    +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
207361    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
207362    +   end;
MPRINT(EM_DIAGRAM):   end;
207363    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
207364    +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
207365    +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
207366    +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
207367    +   end;
MPRINT(EM_DIAGRAM):   end;
207368    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
207369    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
207370    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
207371    +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
207372    +   end;
MPRINT(EM_DIAGRAM):   end;
207373    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
207374    +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
207375    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
207376    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
207377    +   end;
MPRINT(EM_DIAGRAM):   end;
207378    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207379    +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
207380    +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
207381    +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
207382    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207383    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207384    +   end;
MPRINT(EM_DIAGRAM):   end;
207385    +end;
MPRINT(EM_DIAGRAM):   end;
207386    +
207387    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
207388    +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
207389    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
207390    +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
207391    +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
207392    +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
207393    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207394    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207395    +end;
MPRINT(EM_DIAGRAM):   end;
207396    +else do;
MPRINT(EM_DIAGRAM):   else do;
207397    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207398    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
207399    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207400    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
207401    +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
207402    +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
207403    +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
207404    +   end;
MPRINT(EM_DIAGRAM):   end;
207405    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
207406    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
207407    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
207408    +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
207409    +   end;
MPRINT(EM_DIAGRAM):   end;
207410    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
207411    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
207412    +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
207413    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
207414    +   end;
MPRINT(EM_DIAGRAM):   end;
207415    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
207416    +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
207417    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
207418    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
207419    +   end;
MPRINT(EM_DIAGRAM):   end;
207420    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207421    +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
207422    +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
207423    +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
207424    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207425    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207426    +   end;
MPRINT(EM_DIAGRAM):   end;
207427    +end;
MPRINT(EM_DIAGRAM):   end;
207428    +
207429    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
207430    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
207431    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
207432    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
207433    +   goto REG3DR1;
MPRINT(EM_DIAGRAM):   goto REG3DR1;
207434    +end;
MPRINT(EM_DIAGRAM):   end;
207435    +
207436    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
207437    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
207438    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
207439    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
207440    +
207441    +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
207442    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
207443    +_LP0 = _LP0 + (    -1.0202735142883) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0202735142883) * _TEMP * _1_0;
207444    +
207445    +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
207446    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
207447    +_LP0 = _LP0 + (    1.96135216788678) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.96135216788678) * _TEMP * _2_0;
207448    +_LP0 = _LP0 + (    0.16052598190077) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16052598190077) * _TEMP * _2_1;
207449    +_LP0 = _LP0 + (   -0.70902116030282) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70902116030282) * _TEMP * _2_2;
207450    +
207451    +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
207452    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
207453    +_LP0 = _LP0 + (    0.93791732843579) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.93791732843579) * _TEMP * _3_0;
207454    +_LP0 = _LP0 + (    0.86323578315443) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.86323578315443) * _TEMP * _3_1;
207455    +_LP0 = _LP0 + (   -0.93701763797667) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.93701763797667) * _TEMP * _3_2;
207456    +
207457    +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
207458    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
207459    +_LP0 = _LP0 + (     0.6826557743697) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.6826557743697) * _TEMP * _5_0;
207460    +_LP0 = _LP0 + (    0.02285788144903) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02285788144903) * _TEMP * _5_1;
207461    +_LP0 = _LP0 + (   -0.06609528477722) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06609528477722) * _TEMP * _5_2;
207462    +
207463    +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
207464    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
207465    +_LP0 = _LP0 + (   -1.44582935530291) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.44582935530291) * _TEMP * _7_0;
207466    +_LP0 = _LP0 + (   -0.21318741203534) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21318741203534) * _TEMP * _7_1;
207467    +_LP0 = _LP0 + (    0.53364168349885) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53364168349885) * _TEMP * _7_2;
207468    +
207469    +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
207470    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
207471    +_LP0 = _LP0 + (    0.98273321190928) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.98273321190928) * _TEMP * _8_0;
207472    +_LP0 = _LP0 + (      0.432298434838) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.432298434838) * _TEMP * _8_1;
207473    +_LP0 = _LP0 + (   -0.57365050311778) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.57365050311778) * _TEMP * _8_2;
207474    +
207475    +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
207476    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
207477    +_LP0 = _LP0 + (   -1.15145054763997) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.15145054763997) * _TEMP * _9_0;
207478    +_LP0 = _LP0 + (    0.03505087718511) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03505087718511) * _TEMP * _9_1;
207479    +
207480    +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
207481    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
207482    +_LP0 = _LP0 + (   -2.65890505222228) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.65890505222228) * _TEMP * _10_0;
207483    +_LP0 = _LP0 + (     0.0545239904585) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0545239904585) * _TEMP * _10_1;
207484    +_LP0 = _LP0 + (    0.51990032635141) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51990032635141) * _TEMP * _10_2;
207485    +
207486    +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
207487    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
207488    +_LP0 = _LP0 + (   -0.25494301084801) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.25494301084801) * _TEMP * _13_0;
207489    +_LP0 = _LP0 + (    0.02802747054775) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02802747054775) * _TEMP * _13_1;
207490    +_LP0 = _LP0 + (   -0.40273598284868) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40273598284868) * _TEMP * _13_2;
207491    +
207492    +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
207493    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
207494    +_LP0 = _LP0 + (    1.94607798996867) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.94607798996867) * _TEMP * _14_0;
207495    +_LP0 = _LP0 + (    0.53257949184685) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53257949184685) * _TEMP * _14_1;
207496    +_LP0 = _LP0 + (   -0.62881974341908) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.62881974341908) * _TEMP * _14_2;
207497    +
207498    +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
207499    +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
207500    +_LP0 = _LP0 + (    0.01824806947783 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01824806947783 * _TEMP);
207501    +
207502    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
207503    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
207504    +_TEMP =    -37.6992883159803 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -37.6992883159803 + _LP0;
207505    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
207506    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
207507    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
207508    +end;
MPRINT(EM_DIAGRAM):   end;
207509    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
207510    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
207511    +
207512    +REG3DR1:
207513    +
207514    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3DR1: *** Residuals;
207515    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
207516    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
207517    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
207518    +end;
MPRINT(EM_DIAGRAM):   end;
207519    +else do;
MPRINT(EM_DIAGRAM):   else do;
207520    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
207521    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
207522    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
207523    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
207524    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
207525    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
207526    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
207527    +   end;
MPRINT(EM_DIAGRAM):   end;
207528    +end;
MPRINT(EM_DIAGRAM):   end;
207529    +
207530    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
207531    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
207532    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
207533    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
207534    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
207535    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
207536    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
207537    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
207538    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
207539    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
207540    +end;
MPRINT(EM_DIAGRAM):   end;
207541    +I_DepVar = REG3DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3DRF[_IY];
207542    +U_DepVar = REG3DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3DRU[_IY];
207543    +
207544    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
207545    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
207546    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
207547    +* Renaming variables for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg3;
207548    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207549    +* Renaming Posterior variables for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg3;
207550    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207551    +drop Reg3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg3_P_DepVar1;
207552    +Reg3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg3_P_DepVar1 = P_DepVar1;
207553    +drop Reg3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg3_P_DepVar0;
207554    +Reg3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg3_P_DepVar0 = P_DepVar0;
207555    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207556    +* Renaming _WARN_ variable for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg3;
207557    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207558    +length Reg3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg3_WARN_ $4;
207559    +drop Reg3_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg3_WARN_;
207560    +Reg3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg3_WARN_ = _WARN_;
207561    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207562    +* Ensmbl18: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Scoring Code of model 6 of 7;
207563    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207564    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207565    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
207566    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
207567    +* NODE: Neural5;
MPRINT(EM_DIAGRAM):   * NODE: Neural5;
207568    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
207569    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
207570    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
207571    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
207572    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
207573    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
207574    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
207575    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
207576    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
207577    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
207578    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
207579    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
207580    +LENGTH _WARN_ $4
207581    +      F_DepVar  $ 12
207582    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
207583    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
207584    +
207585    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
207586    +
207587    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
207588    +
207589    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
207590    +
207591    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
207592    +
207593    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
207594    +
207595    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
207596    +
207597    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
207598    +
207599    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
207600    +
207601    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
207602    +
207603    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
207604    +
207605    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
207606    +
207607    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
207608    +
207609    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
207610    +
207611    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
207612    +
207613    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
207614    +
207615    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
207616    +
207617    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
207618    +
207619    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
207620    +
207621    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
207622    +
207623    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
207624    +
207625    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
207626    +
207627    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
207628    +
207629    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
207630    +
207631    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
207632    +
207633    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
207634    +
207635    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
207636    +
207637    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
207638    +
207639    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
207640    +
207641    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
207642    +
207643    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
207644    +
207645    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
207646    +
207647    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
207648    +
207649    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
207650    +
207651    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
207652    +
207653    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
207654    +
207655    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
207656    +
207657    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
207658    +
207659    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
207660    +
207661    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
207662    +
207663    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
207664    +
207665    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
207666    +
207667    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
207668    +
207669    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
207670    +
207671    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
207672    +
207673    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
207674    +
207675    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
207676    +
207677    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
207678    +
207679    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
207680    +
207681    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
207682    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
207683    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
207684    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
207685    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207686    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207687    +end;
MPRINT(EM_DIAGRAM):   end;
207688    +else do;
MPRINT(EM_DIAGRAM):   else do;
207689    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207690    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
207691    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207692    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
207693    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
207694    +   end;
MPRINT(EM_DIAGRAM):   end;
207695    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
207696    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
207697    +   end;
MPRINT(EM_DIAGRAM):   end;
207698    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207699    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
207700    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207701    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207702    +   end;
MPRINT(EM_DIAGRAM):   end;
207703    +end;
MPRINT(EM_DIAGRAM):   end;
207704    +
207705    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
207706    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
207707    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
207708    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
207709    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
207710    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
207711    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207712    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207713    +end;
MPRINT(EM_DIAGRAM):   end;
207714    +else do;
MPRINT(EM_DIAGRAM):   else do;
207715    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207716    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
207717    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207718    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
207719    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
207720    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
207721    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
207722    +   end;
MPRINT(EM_DIAGRAM):   end;
207723    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
207724    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
207725    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
207726    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
207727    +   end;
MPRINT(EM_DIAGRAM):   end;
207728    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
207729    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
207730    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
207731    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
207732    +   end;
MPRINT(EM_DIAGRAM):   end;
207733    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
207734    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
207735    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
207736    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
207737    +   end;
MPRINT(EM_DIAGRAM):   end;
207738    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207739    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
207740    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
207741    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
207742    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207743    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207744    +   end;
MPRINT(EM_DIAGRAM):   end;
207745    +end;
MPRINT(EM_DIAGRAM):   end;
207746    +
207747    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
207748    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
207749    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
207750    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
207751    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
207752    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
207753    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207754    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207755    +end;
MPRINT(EM_DIAGRAM):   end;
207756    +else do;
MPRINT(EM_DIAGRAM):   else do;
207757    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207758    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
207759    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207760    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
207761    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
207762    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
207763    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
207764    +   end;
MPRINT(EM_DIAGRAM):   end;
207765    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
207766    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
207767    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
207768    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
207769    +   end;
MPRINT(EM_DIAGRAM):   end;
207770    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
207771    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
207772    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
207773    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
207774    +   end;
MPRINT(EM_DIAGRAM):   end;
207775    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
207776    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
207777    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
207778    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
207779    +   end;
MPRINT(EM_DIAGRAM):   end;
207780    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207781    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
207782    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
207783    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
207784    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207785    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207786    +   end;
MPRINT(EM_DIAGRAM):   end;
207787    +end;
MPRINT(EM_DIAGRAM):   end;
207788    +
207789    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
207790    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
207791    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
207792    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
207793    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
207794    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
207795    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207796    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207797    +end;
MPRINT(EM_DIAGRAM):   end;
207798    +else do;
MPRINT(EM_DIAGRAM):   else do;
207799    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207800    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
207801    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207802    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
207803    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
207804    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
207805    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
207806    +   end;
MPRINT(EM_DIAGRAM):   end;
207807    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
207808    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
207809    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
207810    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
207811    +   end;
MPRINT(EM_DIAGRAM):   end;
207812    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
207813    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
207814    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
207815    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
207816    +   end;
MPRINT(EM_DIAGRAM):   end;
207817    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
207818    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
207819    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
207820    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
207821    +   end;
MPRINT(EM_DIAGRAM):   end;
207822    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207823    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
207824    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
207825    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
207826    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207827    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207828    +   end;
MPRINT(EM_DIAGRAM):   end;
207829    +end;
MPRINT(EM_DIAGRAM):   end;
207830    +
207831    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
207832    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
207833    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
207834    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
207835    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
207836    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
207837    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207838    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207839    +end;
MPRINT(EM_DIAGRAM):   end;
207840    +else do;
MPRINT(EM_DIAGRAM):   else do;
207841    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207842    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
207843    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207844    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
207845    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
207846    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
207847    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
207848    +   end;
MPRINT(EM_DIAGRAM):   end;
207849    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
207850    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
207851    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
207852    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
207853    +   end;
MPRINT(EM_DIAGRAM):   end;
207854    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
207855    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
207856    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
207857    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
207858    +   end;
MPRINT(EM_DIAGRAM):   end;
207859    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
207860    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
207861    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
207862    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
207863    +   end;
MPRINT(EM_DIAGRAM):   end;
207864    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207865    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
207866    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
207867    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
207868    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207869    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207870    +   end;
MPRINT(EM_DIAGRAM):   end;
207871    +end;
MPRINT(EM_DIAGRAM):   end;
207872    +
207873    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
207874    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
207875    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
207876    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
207877    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
207878    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
207879    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207880    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207881    +end;
MPRINT(EM_DIAGRAM):   end;
207882    +else do;
MPRINT(EM_DIAGRAM):   else do;
207883    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207884    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
207885    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207886    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
207887    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
207888    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
207889    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
207890    +   end;
MPRINT(EM_DIAGRAM):   end;
207891    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
207892    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
207893    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
207894    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
207895    +   end;
MPRINT(EM_DIAGRAM):   end;
207896    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
207897    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
207898    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
207899    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
207900    +   end;
MPRINT(EM_DIAGRAM):   end;
207901    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
207902    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
207903    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
207904    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
207905    +   end;
MPRINT(EM_DIAGRAM):   end;
207906    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207907    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
207908    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
207909    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
207910    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207911    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207912    +   end;
MPRINT(EM_DIAGRAM):   end;
207913    +end;
MPRINT(EM_DIAGRAM):   end;
207914    +
207915    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
207916    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
207917    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
207918    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
207919    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
207920    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
207921    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207922    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207923    +end;
MPRINT(EM_DIAGRAM):   end;
207924    +else do;
MPRINT(EM_DIAGRAM):   else do;
207925    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207926    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
207927    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207928    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
207929    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
207930    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
207931    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
207932    +   end;
MPRINT(EM_DIAGRAM):   end;
207933    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
207934    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
207935    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
207936    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
207937    +   end;
MPRINT(EM_DIAGRAM):   end;
207938    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
207939    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
207940    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
207941    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
207942    +   end;
MPRINT(EM_DIAGRAM):   end;
207943    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
207944    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
207945    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
207946    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
207947    +   end;
MPRINT(EM_DIAGRAM):   end;
207948    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207949    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
207950    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
207951    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
207952    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207953    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207954    +   end;
MPRINT(EM_DIAGRAM):   end;
207955    +end;
MPRINT(EM_DIAGRAM):   end;
207956    +
207957    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
207958    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
207959    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
207960    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
207961    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
207962    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
207963    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
207964    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207965    +end;
MPRINT(EM_DIAGRAM):   end;
207966    +else do;
MPRINT(EM_DIAGRAM):   else do;
207967    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
207968    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
207969    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
207970    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
207971    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
207972    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
207973    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
207974    +   end;
MPRINT(EM_DIAGRAM):   end;
207975    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
207976    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
207977    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
207978    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
207979    +   end;
MPRINT(EM_DIAGRAM):   end;
207980    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
207981    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
207982    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
207983    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
207984    +   end;
MPRINT(EM_DIAGRAM):   end;
207985    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
207986    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
207987    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
207988    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
207989    +   end;
MPRINT(EM_DIAGRAM):   end;
207990    +   else do;
MPRINT(EM_DIAGRAM):   else do;
207991    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
207992    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
207993    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
207994    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
207995    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
207996    +   end;
MPRINT(EM_DIAGRAM):   end;
207997    +end;
MPRINT(EM_DIAGRAM):   end;
207998    +
207999    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
208000    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
208001    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
208002    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
208003    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
208004    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208005    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208006    +end;
MPRINT(EM_DIAGRAM):   end;
208007    +else do;
MPRINT(EM_DIAGRAM):   else do;
208008    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208009    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
208010    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208011    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
208012    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
208013    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
208014    +   end;
MPRINT(EM_DIAGRAM):   end;
208015    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
208016    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
208017    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
208018    +   end;
MPRINT(EM_DIAGRAM):   end;
208019    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
208020    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
208021    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
208022    +   end;
MPRINT(EM_DIAGRAM):   end;
208023    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208024    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
208025    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
208026    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208027    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208028    +   end;
MPRINT(EM_DIAGRAM):   end;
208029    +end;
MPRINT(EM_DIAGRAM):   end;
208030    +
208031    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
208032    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
208033    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
208034    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
208035    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
208036    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
208037    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208038    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208039    +end;
MPRINT(EM_DIAGRAM):   end;
208040    +else do;
MPRINT(EM_DIAGRAM):   else do;
208041    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208042    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
208043    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208044    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
208045    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
208046    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
208047    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
208048    +   end;
MPRINT(EM_DIAGRAM):   end;
208049    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
208050    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
208051    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
208052    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
208053    +   end;
MPRINT(EM_DIAGRAM):   end;
208054    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
208055    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
208056    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
208057    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
208058    +   end;
MPRINT(EM_DIAGRAM):   end;
208059    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
208060    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
208061    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
208062    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
208063    +   end;
MPRINT(EM_DIAGRAM):   end;
208064    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208065    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
208066    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
208067    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
208068    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208069    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208070    +   end;
MPRINT(EM_DIAGRAM):   end;
208071    +end;
MPRINT(EM_DIAGRAM):   end;
208072    +
208073    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
208074    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
208075    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
208076    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
208077    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
208078    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
208079    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208080    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208081    +end;
MPRINT(EM_DIAGRAM):   end;
208082    +else do;
MPRINT(EM_DIAGRAM):   else do;
208083    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208084    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
208085    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208086    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
208087    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
208088    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
208089    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
208090    +   end;
MPRINT(EM_DIAGRAM):   end;
208091    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
208092    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
208093    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
208094    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
208095    +   end;
MPRINT(EM_DIAGRAM):   end;
208096    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
208097    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
208098    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
208099    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
208100    +   end;
MPRINT(EM_DIAGRAM):   end;
208101    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
208102    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
208103    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
208104    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
208105    +   end;
MPRINT(EM_DIAGRAM):   end;
208106    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208107    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
208108    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
208109    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
208110    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208111    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208112    +   end;
MPRINT(EM_DIAGRAM):   end;
208113    +end;
MPRINT(EM_DIAGRAM):   end;
208114    +
208115    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
208116    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
208117    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
208118    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
208119    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
208120    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
208121    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208122    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208123    +end;
MPRINT(EM_DIAGRAM):   end;
208124    +else do;
MPRINT(EM_DIAGRAM):   else do;
208125    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208126    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
208127    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208128    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
208129    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
208130    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
208131    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
208132    +   end;
MPRINT(EM_DIAGRAM):   end;
208133    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
208134    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
208135    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
208136    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
208137    +   end;
MPRINT(EM_DIAGRAM):   end;
208138    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
208139    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
208140    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
208141    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
208142    +   end;
MPRINT(EM_DIAGRAM):   end;
208143    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
208144    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
208145    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
208146    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
208147    +   end;
MPRINT(EM_DIAGRAM):   end;
208148    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208149    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
208150    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
208151    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
208152    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208153    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208154    +   end;
MPRINT(EM_DIAGRAM):   end;
208155    +end;
MPRINT(EM_DIAGRAM):   end;
208156    +
208157    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
208158    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
208159    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
208160    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
208161    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
208162    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
208163    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208164    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208165    +end;
MPRINT(EM_DIAGRAM):   end;
208166    +else do;
MPRINT(EM_DIAGRAM):   else do;
208167    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208168    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
208169    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208170    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
208171    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
208172    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
208173    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
208174    +   end;
MPRINT(EM_DIAGRAM):   end;
208175    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
208176    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
208177    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
208178    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
208179    +   end;
MPRINT(EM_DIAGRAM):   end;
208180    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
208181    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
208182    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
208183    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
208184    +   end;
MPRINT(EM_DIAGRAM):   end;
208185    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
208186    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
208187    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
208188    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
208189    +   end;
MPRINT(EM_DIAGRAM):   end;
208190    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208191    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
208192    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
208193    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
208194    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208195    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208196    +   end;
MPRINT(EM_DIAGRAM):   end;
208197    +end;
MPRINT(EM_DIAGRAM):   end;
208198    +
208199    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
208200    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
208201    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
208202    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
208203    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
208204    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
208205    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208206    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208207    +end;
MPRINT(EM_DIAGRAM):   end;
208208    +else do;
MPRINT(EM_DIAGRAM):   else do;
208209    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208210    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
208211    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208212    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
208213    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
208214    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
208215    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
208216    +   end;
MPRINT(EM_DIAGRAM):   end;
208217    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
208218    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
208219    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
208220    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
208221    +   end;
MPRINT(EM_DIAGRAM):   end;
208222    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
208223    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
208224    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
208225    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
208226    +   end;
MPRINT(EM_DIAGRAM):   end;
208227    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
208228    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
208229    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
208230    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
208231    +   end;
MPRINT(EM_DIAGRAM):   end;
208232    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208233    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
208234    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
208235    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
208236    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208237    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208238    +   end;
MPRINT(EM_DIAGRAM):   end;
208239    +end;
MPRINT(EM_DIAGRAM):   end;
208240    +
208241    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208242    +*** Checking missing input Interval
208243    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
208244    +
208245    +IF NMISS(
208246    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
208247    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
208248    +
208249    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208250    +END;
MPRINT(EM_DIAGRAM):   END;
208251    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208252    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
208253    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208254    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
208255    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
208256    +END;
MPRINT(EM_DIAGRAM):   END;
208257    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
208258    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
208259    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
208260    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
208261    +END;
MPRINT(EM_DIAGRAM):   END;
208262    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208263    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
208264    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208265    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208266    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
208267    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208268    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
208269    +   H11  =     -0.0249129843743 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.0249129843743 * S_Year_Birth ;
208270    +   H11  = H11  +     0.12725616992691 * GRP_AcceptedCmp52
208271    +          +    -0.26945372540537 * GRP_Frq2  +    -0.02807540638783 * GRP_Frq3
208272    +          +     0.09639274822287 * GRP_Frq4  +    -0.12205097466688 *
208273    +        GRP_Income2  +    -0.11081339105891 * GRP_Income3
208274    +          +     0.11708983682544 * GRP_Income4  +     0.08213996698973 *
208275    +        GRP_Mnt2  +     0.04755736117379 * GRP_Mnt3  +    -0.04386204709619 *
208276    +        GRP_Mnt4  +    -0.08900126769754 * GRP_MntFishProducts2
208277    +          +    -0.01139329678589 * GRP_MntFishProducts3
208278    +          +     0.01080020635436 * GRP_MntFishProducts4
208279    +          +     0.03276801167604 * GRP_MntGoldProds2
208280    +          +     0.00684607145566 * GRP_MntGoldProds3
208281    +          +     0.00079341373044 * GRP_MntGoldProds4
208282    +          +     0.17029271800291 * GRP_MntMeatProducts2
208283    +          +     0.03003718456752 * GRP_MntMeatProducts3
208284    +          +    -0.06730384984954 * GRP_MntMeatProducts4
208285    +          +    -0.12738653189788 * GRP_MntWines2  +    -0.05870095101029 *
208286    +        GRP_MntWines3  +     0.07315089663035 * GRP_MntWines4
208287    +          +      0.1241456955943 * GRP_NumCatalogPurchases3
208288    +          +    -0.00574720008996 * GRP_NumCatalogPurchases4
208289    +          +     0.32158219504705 * GRP_NumDistPurchases2
208290    +          +      0.0000285685731 * GRP_NumDistPurchases3
208291    +          +    -0.05920668594102 * GRP_NumDistPurchases4
208292    +          +    -0.02186462965936 * GRP_NumWebPurchases2
208293    +          +    -0.01225939075207 * GRP_NumWebPurchases3
208294    +          +     0.00325978185796 * GRP_NumWebPurchases4
208295    +          +     0.08029400003818 * GRP_RFMstat2  +     0.01517552489443 *
208296    +        GRP_RFMstat3  +    -0.02560149548828 * GRP_RFMstat4
208297    +          +    -0.06091086754789 * GRP_RMntFrq2  +    -0.03720166216597 *
208298    +        GRP_RMntFrq3  +     0.09749105098352 * GRP_RMntFrq4
208299    +          +    -0.21514477253983 * GRP_Recency2  +    -0.05786796429946 *
208300    +        GRP_Recency3  +     0.06630148536635 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.12725616992691 * GRP_AcceptedCmp52 + -0.26945372540537 *
GRP_Frq2 + -0.02807540638783 * GRP_Frq3 + 0.09639274822287 * GRP_Frq4 + -0.12205097466688 *
GRP_Income2 + -0.11081339105891 * GRP_Income3 + 0.11708983682544 * GRP_Income4 +
0.08213996698973 * GRP_Mnt2 + 0.04755736117379 * GRP_Mnt3 + -0.04386204709619 * GRP_Mnt4 +
-0.08900126769754 * GRP_MntFishProducts2 + -0.01139329678589 * GRP_MntFishProducts3 +
0.01080020635436 * GRP_MntFishProducts4 + 0.03276801167604 * GRP_MntGoldProds2 +
0.00684607145566 * GRP_MntGoldProds3 + 0.00079341373044 * GRP_MntGoldProds4 + 0.17029271800291
* GRP_MntMeatProducts2 + 0.03003718456752 * GRP_MntMeatProducts3 + -0.06730384984954 *
GRP_MntMeatProducts4 + -0.12738653189788 * GRP_MntWines2 + -0.05870095101029 * GRP_MntWines3 +
0.07315089663035 * GRP_MntWines4 + 0.1241456955943 * GRP_NumCatalogPurchases3 +
-0.00574720008996 * GRP_NumCatalogPurchases4 + 0.32158219504705 * GRP_NumDistPurchases2 +
0.0000285685731 * GRP_NumDistPurchases3 + -0.05920668594102 * GRP_NumDistPurchases4 +
-0.02186462965936 * GRP_NumWebPurchases2 + -0.01225939075207 * GRP_NumWebPurchases3 +
0.00325978185796 * GRP_NumWebPurchases4 + 0.08029400003818 * GRP_RFMstat2 + 0.01517552489443 *
GRP_RFMstat3 + -0.02560149548828 * GRP_RFMstat4 + -0.06091086754789 * GRP_RMntFrq2 +
-0.03720166216597 * GRP_RMntFrq3 + 0.09749105098352 * GRP_RMntFrq4 + -0.21514477253983 *
GRP_Recency2 + -0.05786796429946 * GRP_Recency3 + 0.06630148536635 * GRP_Recency4 ;
208301    +   H11  =     -0.2495737283502 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.2495737283502 + H11 ;
208302    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
208303    +END;
MPRINT(EM_DIAGRAM):   END;
208304    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
208305    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
208306    +END;
MPRINT(EM_DIAGRAM):   END;
208307    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208308    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
208309    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208310    +
208311    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
208312    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
208313    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
208314    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
208315    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
208316    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208317    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
208318    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
208319    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
208320    +end;
MPRINT(EM_DIAGRAM):   end;
208321    +else do;
MPRINT(EM_DIAGRAM):   else do;
208322    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
208323    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
208324    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
208325    +   end;
MPRINT(EM_DIAGRAM):   end;
208326    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
208327    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
208328    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
208329    +   end;
MPRINT(EM_DIAGRAM):   end;
208330    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208331    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
208332    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
208333    +   end;
MPRINT(EM_DIAGRAM):   end;
208334    +end;
MPRINT(EM_DIAGRAM):   end;
208335    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
208336    +   P_DepVar1  =    -9.21655554427872 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.21655554427872 * H11 ;
208337    +   P_DepVar1  =    -3.98078306870422 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.98078306870422 + P_DepVar1 ;
208338    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
208339    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
208340    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
208341    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
208342    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
208343    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
208344    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
208345    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
208346    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
208347    +END;
MPRINT(EM_DIAGRAM):   END;
208348    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
208349    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
208350    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
208351    +END;
MPRINT(EM_DIAGRAM):   END;
208352    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
208353    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
208354    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
208355    +END;
MPRINT(EM_DIAGRAM):   END;
208356    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
208357    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
208358    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
208359    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
208360    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
208361    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
208362    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
208363    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208364    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
208365    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
208366    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
208367    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
208368    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
208369    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
208370    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
208371    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
208372    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
208373    +END;
MPRINT(EM_DIAGRAM):   END;
208374    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
208375    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
208376    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
208377    +drop
208378    +H11
208379    +;
MPRINT(EM_DIAGRAM):   drop H11 ;
208380    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
208381    +* Renaming variables for Neural5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural5;
208382    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
208383    +* Renaming Posterior variables for Neural5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural5;
208384    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
208385    +drop Neural5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural5_P_DepVar1;
208386    +Neural5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural5_P_DepVar1 = P_DepVar1;
208387    +drop Neural5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural5_P_DepVar0;
208388    +Neural5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural5_P_DepVar0 = P_DepVar0;
208389    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
208390    +* Renaming _WARN_ variable for Neural5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural5;
208391    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
208392    +length Neural5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural5_WARN_ $4;
208393    +drop Neural5_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural5_WARN_;
208394    +Neural5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural5_WARN_ = _WARN_;
208395    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
208396    +* Ensmbl18: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Scoring Code of model 7 of 7;
208397    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
208398    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
208399    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
208400    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
208401    +* NODE: AutoNeural26;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural26;
208402    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
208403    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
208404    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
208405    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
208406    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
208407    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
208408    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
208409    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
208410    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
208411    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
208412    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
208413    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
208414    +LENGTH _WARN_ $4
208415    +      F_DepVar  $ 12
208416    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
208417    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
208418    +
208419    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
208420    +
208421    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
208422    +
208423    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
208424    +
208425    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
208426    +
208427    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
208428    +
208429    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
208430    +
208431    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
208432    +
208433    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
208434    +
208435    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
208436    +
208437    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
208438    +
208439    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
208440    +
208441    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
208442    +
208443    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
208444    +
208445    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
208446    +
208447    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
208448    +
208449    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
208450    +
208451    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
208452    +
208453    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
208454    +
208455    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
208456    +
208457    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
208458    +
208459    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
208460    +
208461    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
208462    +
208463    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
208464    +
208465    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
208466    +
208467    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
208468    +
208469    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
208470    +
208471    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
208472    +
208473    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
208474    +
208475    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
208476    +
208477    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
208478    +
208479    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
208480    +
208481    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
208482    +
208483    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
208484    +
208485    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
208486    +
208487    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
208488    +
208489    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
208490    +
208491    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
208492    +
208493    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
208494    +
208495    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
208496    +
208497    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
208498    +
208499    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
208500    +
208501    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
208502    +
208503    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
208504    +
208505    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
208506    +
208507    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
208508    +
208509    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
208510    +
208511    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
208512    +
208513    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
208514    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
208515    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
208516    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
208517    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208518    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208519    +end;
MPRINT(EM_DIAGRAM):   end;
208520    +else do;
MPRINT(EM_DIAGRAM):   else do;
208521    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208522    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
208523    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208524    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
208525    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
208526    +   end;
MPRINT(EM_DIAGRAM):   end;
208527    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
208528    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
208529    +   end;
MPRINT(EM_DIAGRAM):   end;
208530    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208531    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
208532    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208533    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208534    +   end;
MPRINT(EM_DIAGRAM):   end;
208535    +end;
MPRINT(EM_DIAGRAM):   end;
208536    +
208537    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
208538    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
208539    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
208540    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
208541    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
208542    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
208543    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208544    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208545    +end;
MPRINT(EM_DIAGRAM):   end;
208546    +else do;
MPRINT(EM_DIAGRAM):   else do;
208547    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208548    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
208549    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208550    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
208551    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
208552    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
208553    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
208554    +   end;
MPRINT(EM_DIAGRAM):   end;
208555    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
208556    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
208557    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
208558    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
208559    +   end;
MPRINT(EM_DIAGRAM):   end;
208560    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
208561    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
208562    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
208563    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
208564    +   end;
MPRINT(EM_DIAGRAM):   end;
208565    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
208566    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
208567    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
208568    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
208569    +   end;
MPRINT(EM_DIAGRAM):   end;
208570    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208571    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
208572    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
208573    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
208574    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208575    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208576    +   end;
The SAS System
 
MPRINT(EM_DIAGRAM):   end;
208577    +end;
MPRINT(EM_DIAGRAM):   end;
208578    +
208579    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
208580    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
208581    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
208582    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
208583    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
208584    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
208585    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208586    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208587    +end;
MPRINT(EM_DIAGRAM):   end;
208588    +else do;
MPRINT(EM_DIAGRAM):   else do;
208589    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208590    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
208591    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208592    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
208593    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
208594    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
208595    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
208596    +   end;
MPRINT(EM_DIAGRAM):   end;
208597    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
208598    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
208599    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
208600    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
208601    +   end;
MPRINT(EM_DIAGRAM):   end;
208602    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
208603    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
208604    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
208605    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
208606    +   end;
MPRINT(EM_DIAGRAM):   end;
208607    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
208608    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
208609    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
208610    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
208611    +   end;
MPRINT(EM_DIAGRAM):   end;
208612    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208613    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
208614    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
208615    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
208616    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208617    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208618    +   end;
MPRINT(EM_DIAGRAM):   end;
208619    +end;
MPRINT(EM_DIAGRAM):   end;
208620    +
208621    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
208622    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
208623    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
208624    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
208625    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
208626    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
208627    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208628    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208629    +end;
MPRINT(EM_DIAGRAM):   end;
208630    +else do;
MPRINT(EM_DIAGRAM):   else do;
208631    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208632    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
208633    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208634    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
208635    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
208636    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
208637    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
208638    +   end;
MPRINT(EM_DIAGRAM):   end;
208639    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
208640    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
208641    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
208642    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
208643    +   end;
MPRINT(EM_DIAGRAM):   end;
208644    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
208645    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
208646    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
208647    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
208648    +   end;
MPRINT(EM_DIAGRAM):   end;
208649    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
208650    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
208651    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
208652    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
208653    +   end;
MPRINT(EM_DIAGRAM):   end;
208654    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208655    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
208656    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
208657    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
208658    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208659    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208660    +   end;
MPRINT(EM_DIAGRAM):   end;
208661    +end;
MPRINT(EM_DIAGRAM):   end;
208662    +
208663    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
208664    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
208665    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
208666    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
208667    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
208668    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
208669    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208670    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208671    +end;
MPRINT(EM_DIAGRAM):   end;
208672    +else do;
MPRINT(EM_DIAGRAM):   else do;
208673    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208674    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
208675    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208676    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
208677    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
208678    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
208679    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
208680    +   end;
MPRINT(EM_DIAGRAM):   end;
208681    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
208682    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
208683    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
208684    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
208685    +   end;
MPRINT(EM_DIAGRAM):   end;
208686    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
208687    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
208688    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
208689    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
208690    +   end;
MPRINT(EM_DIAGRAM):   end;
208691    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
208692    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
208693    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
208694    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
208695    +   end;
MPRINT(EM_DIAGRAM):   end;
208696    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208697    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
208698    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
208699    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
208700    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208701    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208702    +   end;
MPRINT(EM_DIAGRAM):   end;
208703    +end;
MPRINT(EM_DIAGRAM):   end;
208704    +
208705    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
208706    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
208707    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
208708    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
208709    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
208710    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
208711    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208712    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208713    +end;
MPRINT(EM_DIAGRAM):   end;
208714    +else do;
MPRINT(EM_DIAGRAM):   else do;
208715    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208716    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
208717    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208718    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
208719    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
208720    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
208721    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
208722    +   end;
MPRINT(EM_DIAGRAM):   end;
208723    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
208724    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
208725    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
208726    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
208727    +   end;
MPRINT(EM_DIAGRAM):   end;
208728    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
208729    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
208730    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
208731    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
208732    +   end;
MPRINT(EM_DIAGRAM):   end;
208733    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
208734    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
208735    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
208736    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
208737    +   end;
MPRINT(EM_DIAGRAM):   end;
208738    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208739    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
208740    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
208741    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
208742    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208743    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208744    +   end;
MPRINT(EM_DIAGRAM):   end;
208745    +end;
MPRINT(EM_DIAGRAM):   end;
208746    +
208747    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
208748    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
208749    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
208750    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
208751    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
208752    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
208753    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208754    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208755    +end;
MPRINT(EM_DIAGRAM):   end;
208756    +else do;
MPRINT(EM_DIAGRAM):   else do;
208757    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208758    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
208759    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208760    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
208761    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
208762    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
208763    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
208764    +   end;
MPRINT(EM_DIAGRAM):   end;
208765    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
208766    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
208767    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
208768    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
208769    +   end;
MPRINT(EM_DIAGRAM):   end;
208770    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
208771    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
208772    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
208773    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
208774    +   end;
MPRINT(EM_DIAGRAM):   end;
208775    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
208776    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
208777    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
208778    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
208779    +   end;
MPRINT(EM_DIAGRAM):   end;
208780    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208781    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
208782    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
208783    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
208784    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208785    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208786    +   end;
MPRINT(EM_DIAGRAM):   end;
208787    +end;
MPRINT(EM_DIAGRAM):   end;
208788    +
208789    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
208790    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
208791    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
208792    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
208793    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
208794    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
208795    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208796    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208797    +end;
MPRINT(EM_DIAGRAM):   end;
208798    +else do;
MPRINT(EM_DIAGRAM):   else do;
208799    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208800    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
208801    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208802    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
208803    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
208804    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
208805    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
208806    +   end;
MPRINT(EM_DIAGRAM):   end;
208807    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
208808    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
208809    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
208810    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
208811    +   end;
MPRINT(EM_DIAGRAM):   end;
208812    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
208813    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
208814    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
208815    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
208816    +   end;
MPRINT(EM_DIAGRAM):   end;
208817    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
208818    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
208819    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
208820    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
208821    +   end;
MPRINT(EM_DIAGRAM):   end;
208822    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208823    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
208824    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
208825    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
208826    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208827    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208828    +   end;
MPRINT(EM_DIAGRAM):   end;
208829    +end;
MPRINT(EM_DIAGRAM):   end;
208830    +
208831    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
208832    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
208833    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
208834    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
208835    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
208836    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208837    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208838    +end;
MPRINT(EM_DIAGRAM):   end;
208839    +else do;
MPRINT(EM_DIAGRAM):   else do;
208840    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208841    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
208842    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208843    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
208844    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
208845    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
208846    +   end;
MPRINT(EM_DIAGRAM):   end;
208847    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
208848    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
208849    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
208850    +   end;
MPRINT(EM_DIAGRAM):   end;
208851    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
208852    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
208853    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
208854    +   end;
MPRINT(EM_DIAGRAM):   end;
208855    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208856    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
208857    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
208858    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208859    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208860    +   end;
MPRINT(EM_DIAGRAM):   end;
208861    +end;
MPRINT(EM_DIAGRAM):   end;
208862    +
208863    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
208864    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
208865    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
208866    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
208867    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
208868    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
208869    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208870    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208871    +end;
MPRINT(EM_DIAGRAM):   end;
208872    +else do;
MPRINT(EM_DIAGRAM):   else do;
208873    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208874    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
208875    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208876    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
208877    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
208878    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
208879    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
208880    +   end;
MPRINT(EM_DIAGRAM):   end;
208881    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
208882    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
208883    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
208884    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
208885    +   end;
MPRINT(EM_DIAGRAM):   end;
208886    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
208887    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
208888    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
208889    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
208890    +   end;
MPRINT(EM_DIAGRAM):   end;
208891    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
208892    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
208893    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
208894    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
208895    +   end;
MPRINT(EM_DIAGRAM):   end;
208896    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208897    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
208898    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
208899    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
208900    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208901    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208902    +   end;
MPRINT(EM_DIAGRAM):   end;
208903    +end;
MPRINT(EM_DIAGRAM):   end;
208904    +
208905    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
208906    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
208907    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
208908    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
208909    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
208910    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
208911    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208912    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208913    +end;
MPRINT(EM_DIAGRAM):   end;
208914    +else do;
MPRINT(EM_DIAGRAM):   else do;
208915    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208916    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
208917    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208918    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
208919    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
208920    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
208921    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
208922    +   end;
MPRINT(EM_DIAGRAM):   end;
208923    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
208924    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
208925    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
208926    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
208927    +   end;
MPRINT(EM_DIAGRAM):   end;
208928    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
208929    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
208930    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
208931    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
208932    +   end;
MPRINT(EM_DIAGRAM):   end;
208933    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
208934    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
208935    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
208936    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
208937    +   end;
MPRINT(EM_DIAGRAM):   end;
208938    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208939    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
208940    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
208941    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
208942    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208943    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208944    +   end;
MPRINT(EM_DIAGRAM):   end;
208945    +end;
MPRINT(EM_DIAGRAM):   end;
208946    +
208947    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
208948    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
208949    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
208950    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
208951    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
208952    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
208953    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208954    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208955    +end;
MPRINT(EM_DIAGRAM):   end;
208956    +else do;
MPRINT(EM_DIAGRAM):   else do;
208957    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
208958    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
208959    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
208960    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
208961    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
208962    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
208963    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
208964    +   end;
MPRINT(EM_DIAGRAM):   end;
208965    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
208966    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
208967    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
208968    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
208969    +   end;
MPRINT(EM_DIAGRAM):   end;
208970    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
208971    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
208972    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
208973    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
208974    +   end;
MPRINT(EM_DIAGRAM):   end;
208975    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
208976    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
208977    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
208978    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
208979    +   end;
MPRINT(EM_DIAGRAM):   end;
208980    +   else do;
MPRINT(EM_DIAGRAM):   else do;
208981    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
208982    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
208983    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
208984    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
208985    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208986    +   end;
MPRINT(EM_DIAGRAM):   end;
208987    +end;
MPRINT(EM_DIAGRAM):   end;
208988    +
208989    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
208990    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
208991    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
208992    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
208993    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
208994    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
208995    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
208996    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
208997    +end;
MPRINT(EM_DIAGRAM):   end;
208998    +else do;
MPRINT(EM_DIAGRAM):   else do;
208999    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
209000    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
209001    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
209002    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
209003    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
209004    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
209005    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
209006    +   end;
MPRINT(EM_DIAGRAM):   end;
209007    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
209008    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
209009    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
209010    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
209011    +   end;
MPRINT(EM_DIAGRAM):   end;
209012    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
209013    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
209014    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
209015    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
209016    +   end;
MPRINT(EM_DIAGRAM):   end;
209017    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
209018    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
209019    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
209020    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
209021    +   end;
MPRINT(EM_DIAGRAM):   end;
209022    +   else do;
MPRINT(EM_DIAGRAM):   else do;
209023    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
209024    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
209025    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
209026    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
209027    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209028    +   end;
MPRINT(EM_DIAGRAM):   end;
209029    +end;
MPRINT(EM_DIAGRAM):   end;
209030    +
209031    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
209032    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
209033    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
209034    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
209035    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
209036    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
209037    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
209038    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209039    +end;
MPRINT(EM_DIAGRAM):   end;
209040    +else do;
MPRINT(EM_DIAGRAM):   else do;
209041    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
209042    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
209043    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
209044    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
209045    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
209046    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
209047    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
209048    +   end;
MPRINT(EM_DIAGRAM):   end;
209049    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
209050    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
209051    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
209052    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
209053    +   end;
MPRINT(EM_DIAGRAM):   end;
209054    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
209055    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
209056    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
209057    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
209058    +   end;
MPRINT(EM_DIAGRAM):   end;
209059    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
209060    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
209061    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
209062    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
209063    +   end;
MPRINT(EM_DIAGRAM):   end;
209064    +   else do;
MPRINT(EM_DIAGRAM):   else do;
209065    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
209066    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
209067    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
209068    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
209069    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209070    +   end;
MPRINT(EM_DIAGRAM):   end;
209071    +end;
MPRINT(EM_DIAGRAM):   end;
209072    +
209073    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209074    +*** Checking missing input Interval
209075    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
209076    +
209077    +IF NMISS(
209078    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
209079    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
209080    +
209081    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209082    +END;
MPRINT(EM_DIAGRAM):   END;
209083    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209084    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
209085    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209086    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
209087    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
209088    +END;
MPRINT(EM_DIAGRAM):   END;
209089    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
209090    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
209091    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
209092    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
209093    +END;
MPRINT(EM_DIAGRAM):   END;
209094    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209095    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
209096    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209097    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209098    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
209099    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209100    +
209101    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
209102    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
209103    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
209104    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
209105    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
209106    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
209107    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
209108    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
209109    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
209110    +end;
MPRINT(EM_DIAGRAM):   end;
209111    +else do;
MPRINT(EM_DIAGRAM):   else do;
209112    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
209113    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
209114    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
209115    +   end;
MPRINT(EM_DIAGRAM):   end;
209116    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
209117    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
209118    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
209119    +   end;
MPRINT(EM_DIAGRAM):   end;
209120    +   else do;
MPRINT(EM_DIAGRAM):   else do;
209121    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
209122    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
209123    +   end;
MPRINT(EM_DIAGRAM):   end;
209124    +end;
MPRINT(EM_DIAGRAM):   end;
209125    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
209126    +   P_DepVar1  =     0.19741981116929 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.19741981116929 * S_Year_Birth ;
209127    +   P_DepVar1  = P_DepVar1  +    -1.04029441471903 * GRP_AcceptedCmp52
209128    +          +     1.55639377678382 * GRP_Frq2  +     0.31938212279872 * GRP_Frq3
209129    +          +    -0.51953925921981 * GRP_Frq4  +     0.69747847384334 *
209130    +        GRP_Income2  +     0.68377449690467 * GRP_Income3
209131    +          +    -0.69559233910784 * GRP_Income4  +    -0.33403886861179 *
209132    +        GRP_Mnt2  +    -0.23948445463576 * GRP_Mnt3  +     0.22705363969173 *
209133    +        GRP_Mnt4  +      0.5581826092154 * GRP_MntFishProducts2
209134    +          +     0.11895902038445 * GRP_MntFishProducts3
209135    +          +     -0.0194508409368 * GRP_MntFishProducts4
209136    +          +    -0.27172158371684 * GRP_MntGoldProds2
209137    +          +    -0.06617094209943 * GRP_MntGoldProds3
209138    +          +     0.04665050332743 * GRP_MntGoldProds4
209139    +          +    -0.97879858925028 * GRP_MntMeatProducts2
209140    +          +    -0.16953024357929 * GRP_MntMeatProducts3
209141    +          +     0.36702521764699 * GRP_MntMeatProducts4
209142    +          +     0.66896729653839 * GRP_MntWines2  +     0.41828147331708 *
209143    +        GRP_MntWines3  +    -0.39747979825201 * GRP_MntWines4
209144    +          +    -0.78725283014847 * GRP_NumCatalogPurchases3
209145    +          +     0.03702534142798 * GRP_NumCatalogPurchases4
209146    +          +    -1.86131730329435 * GRP_NumDistPurchases2
209147    +          +     -0.1744815262149 * GRP_NumDistPurchases3
209148    +          +     0.29974863559738 * GRP_NumDistPurchases4
209149    +          +     0.08237783693138 * GRP_NumWebPurchases2
209150    +          +     0.08904902237334 * GRP_NumWebPurchases3
209151    +          +     0.01729681908858 * GRP_NumWebPurchases4
209152    +          +    -0.55907537974858 * GRP_RFMstat2  +    -0.19529268587261 *
209153    +        GRP_RFMstat3  +     0.03932842736914 * GRP_RFMstat4
209154    +          +     0.24491355758464 * GRP_RMntFrq2  +     0.27364945694495 *
209155    +        GRP_RMntFrq3  +    -0.64678260362233 * GRP_RMntFrq4
209156    +          +     1.49706726643373 * GRP_Recency2  +     0.20083168709986 *
209157    +        GRP_Recency3  +    -0.57834308365674 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -1.04029441471903 * GRP_AcceptedCmp52 +
1.55639377678382 * GRP_Frq2 + 0.31938212279872 * GRP_Frq3 + -0.51953925921981 * GRP_Frq4 +
0.69747847384334 * GRP_Income2 + 0.68377449690467 * GRP_Income3 + -0.69559233910784 *
GRP_Income4 + -0.33403886861179 * GRP_Mnt2 + -0.23948445463576 * GRP_Mnt3 + 0.22705363969173 *
GRP_Mnt4 + 0.5581826092154 * GRP_MntFishProducts2 + 0.11895902038445 * GRP_MntFishProducts3 +
-0.0194508409368 * GRP_MntFishProducts4 + -0.27172158371684 * GRP_MntGoldProds2 +
-0.06617094209943 * GRP_MntGoldProds3 + 0.04665050332743 * GRP_MntGoldProds4 +
-0.97879858925028 * GRP_MntMeatProducts2 + -0.16953024357929 * GRP_MntMeatProducts3 +
0.36702521764699 * GRP_MntMeatProducts4 + 0.66896729653839 * GRP_MntWines2 + 0.41828147331708
* GRP_MntWines3 + -0.39747979825201 * GRP_MntWines4 + -0.78725283014847 *
GRP_NumCatalogPurchases3 + 0.03702534142798 * GRP_NumCatalogPurchases4 + -1.86131730329435 *
GRP_NumDistPurchases2 + -0.1744815262149 * GRP_NumDistPurchases3 + 0.29974863559738 *
GRP_NumDistPurchases4 + 0.08237783693138 * GRP_NumWebPurchases2 + 0.08904902237334 *
GRP_NumWebPurchases3 + 0.01729681908858 * GRP_NumWebPurchases4 + -0.55907537974858 *
GRP_RFMstat2 + -0.19529268587261 * GRP_RFMstat3 + 0.03932842736914 * GRP_RFMstat4 +
0.24491355758464 * GRP_RMntFrq2 + 0.27364945694495 * GRP_RMntFrq3 + -0.64678260362233 *
GRP_RMntFrq4 + 1.49706726643373 * GRP_Recency2 + 0.20083168709986 * GRP_Recency3 +
-0.57834308365674 * GRP_Recency4 ;
209158    +   P_DepVar1  =    -1.16466009831369 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.16466009831369 + P_DepVar1 ;
209159    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
209160    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
209161    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
209162    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
209163    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
209164    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
209165    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
209166    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
209167    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
209168    +END;
MPRINT(EM_DIAGRAM):   END;
209169    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
209170    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
209171    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
209172    +END;
MPRINT(EM_DIAGRAM):   END;
209173    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
209174    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
209175    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
209176    +END;
MPRINT(EM_DIAGRAM):   END;
209177    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
209178    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
209179    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
209180    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
209181    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
209182    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
209183    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
209184    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209185    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
209186    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
209187    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
209188    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
209189    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
209190    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
209191    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
209192    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
209193    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
209194    +END;
MPRINT(EM_DIAGRAM):   END;
209195    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
209196    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
209197    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
209198    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
209199    +* Renaming variables for AutoNeural26;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural26;
209200    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209201    +* Renaming Posterior variables for AutoNeural26;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural26;
209202    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209203    +drop AutoNeural26_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural26_P_DepVar1;
209204    +AutoNeural26_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural26_P_DepVar1 = P_DepVar1;
209205    +drop AutoNeural26_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural26_P_DepVar0;
209206    +AutoNeural26_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural26_P_DepVar0 = P_DepVar0;
209207    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209208    +* Renaming _WARN_ variable for AutoNeural26;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural26;
209209    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209210    +length AutoNeural26_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural26_WARN_ $4;
209211    +drop AutoNeural26_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural26_WARN_;
209212    +AutoNeural26_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural26_WARN_ = _WARN_;
209213    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209214    +* Ensmbl18: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Average Posteriors of 7 models;
209215    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209216    +P_DepVar1 = (
209217    +Neural22_P_DepVar1 +
209218    +Neural21_P_DepVar1 +
209219    +Neural18_P_DepVar1 +
209220    +Reg7_P_DepVar1 +
209221    +Reg3_P_DepVar1 +
209222    +Neural5_P_DepVar1 +
209223    +AutoNeural26_P_DepVar1
209224    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural22_P_DepVar1 + Neural21_P_DepVar1 +
Neural18_P_DepVar1 + Reg7_P_DepVar1 + Reg3_P_DepVar1 + Neural5_P_DepVar1 +
AutoNeural26_P_DepVar1 )/7;
209225    +P_DepVar0 = (
209226    +Neural22_P_DepVar0 +
209227    +Neural21_P_DepVar0 +
209228    +Neural18_P_DepVar0 +
209229    +Reg7_P_DepVar0 +
209230    +Reg3_P_DepVar0 +
209231    +Neural5_P_DepVar0 +
209232    +AutoNeural26_P_DepVar0
209233    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural22_P_DepVar0 + Neural21_P_DepVar0 +
Neural18_P_DepVar0 + Reg7_P_DepVar0 + Reg3_P_DepVar0 + Neural5_P_DepVar0 +
AutoNeural26_P_DepVar0 )/7;
209234    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209235    +* Ensmbl18: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Computing Classification Vars;
209236    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209237    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
209238    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
209239    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
209240    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
209241    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
209242    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
209243    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
209244    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
209245    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
209246    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
209247    +end;
MPRINT(EM_DIAGRAM):   end;
209248    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
209249    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
209250    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
209251    +end;
MPRINT(EM_DIAGRAM):   end;
209252    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
209253    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209254    +* Ensmbl18: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Producing Unformatted variable;
209255    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209256    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
209257    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
209258    +else
209259    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
209260    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209261    +* Ensmbl18: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Computing _WARN_ Variable;
209262    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209263    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
209264    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
209265    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
209266    +if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
209266   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
209267    +if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
209267   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
209268    +if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
209268   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
209269    +if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
209269   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
209270    +if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
209270   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
209271    +if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
209271   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
209272    +if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
209272   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
209273    +if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
209273   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
209274    +if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
209274   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
209275    +if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
209275   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
209276    +if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
209276   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
209277    +if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
209277   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
209278    +if index(REG7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
209279    +if index(REG7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
209280    +if index(REG7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
209281    +if index(REG7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
209282    +if index(REG3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
209283    +if index(REG3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
209284    +if index(REG3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
209285    +if index(REG3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
209286    +if index(NEURAL5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
209287    +if index(NEURAL5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
209288    +if index(NEURAL5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
209289    +if index(NEURAL5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
209290    +if index(AUTONEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
209290   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
209291    +if index(AUTONEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
209291   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
209292    +if index(AUTONEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
209292   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
209293    +if index(AUTONEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
209293   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
209294    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209295    +* Ensmbl18: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Computing Residual Vars;
209296    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209297    +if
209298    +F_DepVar NE '1'
209299    +AND F_DepVar NE '0'
209300    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
209301    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
209302    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
209303    +end;
MPRINT(EM_DIAGRAM):   end;
209304    +else do;
MPRINT(EM_DIAGRAM):   else do;
209305    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
209306    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
209307    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
209308    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
209309    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
209310    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
209311    +END;
MPRINT(EM_DIAGRAM):   END;
209312    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
209313     run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL18_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL22_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
209314     quit;
209315     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
209316     filename emflow
209316   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl18\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl18\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Scoring NEURAL22_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209317     *------------------------------------------------------------*;
209318     * Ensmbl18: Scoring NEURAL22_VALIDATE data;
209319     *------------------------------------------------------------*;
209320     data EMWS8.Ensmbl18_VALIDATE
209321     / view=EMWS8.Ensmbl18_VALIDATE
209322     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl18_VALIDATE / view=EMWS8.Ensmbl18_VALIDATE ;
209323     set EMWS8.Neural22_VALIDATE
209324     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural22_VALIDATE ;
209325     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl18\EMFLOWSCORE.sas.
209326    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209327    +* Ensmbl18: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Combine model for DepVar;
209328    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209329    +* Ensmbl18: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Scoring Code of model 1 of 7;
209330    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209331    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209332    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
209333    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
209334    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
209335    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209336    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209337    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
209338    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
209339    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
209340    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209341    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209342    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
209343    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
209344    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
209345    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209346    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209347    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
209348    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
209349    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
209350    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209351    +
209352    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
209353    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
209353   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
209354    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
209355    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
209356    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
209357    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
209358    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
209359    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209360    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
209361    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
209362    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
209363    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209364    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209365    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
209366    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209367    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
209368    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
209369    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
209370    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209371    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
209372    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
209373    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
209374    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209375    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209376    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
209377    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
209378    +* NODE: BINNING;
MPRINT(EM_DIAGRAM):   * NODE: BINNING;
209379    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209380    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
209381    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
209382    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
209383    +
209384    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209385    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
209386    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209387    +LABEL GRP_AcceptedCmp5 =
209388    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
209389    +
209390    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
209391    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
209392    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
209393    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
209394    +end;
MPRINT(EM_DIAGRAM):   end;
209395    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
209396    +if (_UFORMAT eq '0'
209397    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
209398    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
209399    +end;
MPRINT(EM_DIAGRAM):   end;
209400    +else
209401    +if (_UFORMAT eq '1'
209402    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
209403    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
209404    +end;
MPRINT(EM_DIAGRAM):   end;
209405    +else do;
MPRINT(EM_DIAGRAM):   else do;
209406    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
209407    +end;
MPRINT(EM_DIAGRAM):   end;
209408    +end;
MPRINT(EM_DIAGRAM):   end;
209409    +
209410    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209411    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
209412    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209413    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
209414    +
209415    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
209416    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
209417    +end;
MPRINT(EM_DIAGRAM):   end;
209418    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
209419    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
209420    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
209421    +end;
MPRINT(EM_DIAGRAM):   end;
209422    +else
209423    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
209424    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
209425    +end;
MPRINT(EM_DIAGRAM):   end;
209426    +else
209427    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
209428    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
209429    +end;
MPRINT(EM_DIAGRAM):   end;
209430    +else
209431    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
209432    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
209433    +end;
MPRINT(EM_DIAGRAM):   end;
209434    +end;
MPRINT(EM_DIAGRAM):   end;
209435    +
209436    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209437    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
209438    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209439    +LABEL GRP_Income =
209440    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
209441    +
209442    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
209443    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
209444    +end;
MPRINT(EM_DIAGRAM):   end;
209445    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
209446    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
209447    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
209448    +end;
MPRINT(EM_DIAGRAM):   end;
209449    +else
209450    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
209451    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
209452    +end;
MPRINT(EM_DIAGRAM):   end;
209453    +else
209454    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
209455    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
209456    +end;
MPRINT(EM_DIAGRAM):   end;
209457    +else
209458    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
209459    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
209460    +end;
MPRINT(EM_DIAGRAM):   end;
209461    +end;
MPRINT(EM_DIAGRAM):   end;
209462    +
209463    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209464    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
209465    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209466    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
209467    +
209468    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
209469    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
209470    +end;
MPRINT(EM_DIAGRAM):   end;
209471    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
209472    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
209473    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
209474    +end;
MPRINT(EM_DIAGRAM):   end;
209475    +else
209476    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
209477    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
209478    +end;
MPRINT(EM_DIAGRAM):   end;
209479    +else
209480    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
209481    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
209482    +end;
MPRINT(EM_DIAGRAM):   end;
209483    +else
209484    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
209485    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
209486    +end;
MPRINT(EM_DIAGRAM):   end;
209487    +end;
MPRINT(EM_DIAGRAM):   end;
209488    +
209489    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209490    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
209491    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209492    +LABEL GRP_MntFishProducts =
209493    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
209494    +
209495    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
209496    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
209497    +end;
MPRINT(EM_DIAGRAM):   end;
209498    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
209499    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
209500    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
209501    +end;
MPRINT(EM_DIAGRAM):   end;
209502    +else
209503    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
209504    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
209505    +end;
MPRINT(EM_DIAGRAM):   end;
209506    +else
209507    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
209508    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
209509    +end;
MPRINT(EM_DIAGRAM):   end;
209510    +else
209511    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
209512    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
209513    +end;
MPRINT(EM_DIAGRAM):   end;
209514    +end;
MPRINT(EM_DIAGRAM):   end;
209515    +
209516    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209517    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
209518    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209519    +LABEL GRP_MntGoldProds =
209520    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
209521    +
209522    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
209523    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
209524    +end;
MPRINT(EM_DIAGRAM):   end;
209525    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
209526    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
209527    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
209528    +end;
MPRINT(EM_DIAGRAM):   end;
209529    +else
209530    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
209531    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
209532    +end;
MPRINT(EM_DIAGRAM):   end;
209533    +else
209534    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
209535    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
209536    +end;
MPRINT(EM_DIAGRAM):   end;
209537    +else
209538    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
209539    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
209540    +end;
MPRINT(EM_DIAGRAM):   end;
209541    +end;
MPRINT(EM_DIAGRAM):   end;
209542    +
209543    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209544    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
209545    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209546    +LABEL GRP_MntMeatProducts =
209547    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
209548    +
209549    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
209550    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
209551    +end;
MPRINT(EM_DIAGRAM):   end;
209552    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
209553    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
209554    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
209555    +end;
MPRINT(EM_DIAGRAM):   end;
209556    +else
209557    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
209558    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
209559    +end;
MPRINT(EM_DIAGRAM):   end;
209560    +else
209561    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
209562    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
209563    +end;
MPRINT(EM_DIAGRAM):   end;
209564    +else
209565    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
209566    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
209567    +end;
MPRINT(EM_DIAGRAM):   end;
209568    +end;
MPRINT(EM_DIAGRAM):   end;
209569    +
209570    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209571    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
209572    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209573    +LABEL GRP_MntWines =
209574    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
209575    +
209576    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
209577    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
209578    +end;
MPRINT(EM_DIAGRAM):   end;
209579    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
209580    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
209581    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
209582    +end;
MPRINT(EM_DIAGRAM):   end;
209583    +else
209584    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
209585    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
209586    +end;
MPRINT(EM_DIAGRAM):   end;
209587    +else
209588    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
209589    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
209590    +end;
MPRINT(EM_DIAGRAM):   end;
209591    +else
209592    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
209593    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
209594    +end;
MPRINT(EM_DIAGRAM):   end;
209595    +end;
MPRINT(EM_DIAGRAM):   end;
209596    +
209597    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209598    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
209599    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209600    +LABEL GRP_NumCatalogPurchases =
209601    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
209602    +
209603    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
209604    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
209605    +end;
MPRINT(EM_DIAGRAM):   end;
209606    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
209607    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
209608    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
209609    +end;
MPRINT(EM_DIAGRAM):   end;
209610    +else
209611    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
209612    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
209613    +end;
MPRINT(EM_DIAGRAM):   end;
209614    +else
209615    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
209616    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
209617    +end;
MPRINT(EM_DIAGRAM):   end;
209618    +else
209619    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
209620    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
209621    +end;
MPRINT(EM_DIAGRAM):   end;
209622    +end;
MPRINT(EM_DIAGRAM):   end;
209623    +
209624    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209625    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
209626    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209627    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
209628    +
209629    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
209630    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
209631    +end;
MPRINT(EM_DIAGRAM):   end;
209632    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
209633    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
209634    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
209635    +end;
MPRINT(EM_DIAGRAM):   end;
209636    +else
209637    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
209638    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
209639    +end;
MPRINT(EM_DIAGRAM):   end;
209640    +else
209641    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
209642    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
209643    +end;
MPRINT(EM_DIAGRAM):   end;
209644    +else
209645    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
209646    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
209647    +end;
MPRINT(EM_DIAGRAM):   end;
209648    +end;
MPRINT(EM_DIAGRAM):   end;
209649    +
209650    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209651    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
209652    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209653    +LABEL GRP_NumWebPurchases =
209654    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
209655    +
209656    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
209657    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
209658    +end;
MPRINT(EM_DIAGRAM):   end;
209659    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
209660    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
209661    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
209662    +end;
MPRINT(EM_DIAGRAM):   end;
209663    +else
209664    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
209665    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
209666    +end;
MPRINT(EM_DIAGRAM):   end;
209667    +else
209668    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
209669    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
209670    +end;
MPRINT(EM_DIAGRAM):   end;
209671    +else
209672    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
209673    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
209674    +end;
MPRINT(EM_DIAGRAM):   end;
209675    +end;
MPRINT(EM_DIAGRAM):   end;
209676    +
209677    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209678    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
209679    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209680    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
209681    +
209682    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
209683    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
209684    +end;
MPRINT(EM_DIAGRAM):   end;
209685    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
209686    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
209687    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
209688    +end;
MPRINT(EM_DIAGRAM):   end;
209689    +else
209690    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
209691    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
209692    +end;
MPRINT(EM_DIAGRAM):   end;
209693    +else
209694    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
209695    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
209696    +end;
MPRINT(EM_DIAGRAM):   end;
209697    +else
209698    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
209699    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
209700    +end;
MPRINT(EM_DIAGRAM):   end;
209701    +end;
MPRINT(EM_DIAGRAM):   end;
209702    +
209703    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209704    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
209705    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209706    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
209707    +
209708    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
209709    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
209710    +end;
MPRINT(EM_DIAGRAM):   end;
209711    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
209712    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
209713    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
209714    +end;
MPRINT(EM_DIAGRAM):   end;
209715    +else
209716    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
209717    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
209718    +end;
MPRINT(EM_DIAGRAM):   end;
209719    +else
209720    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
209721    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
209722    +end;
MPRINT(EM_DIAGRAM):   end;
209723    +else
209724    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
209725    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
209726    +end;
MPRINT(EM_DIAGRAM):   end;
209727    +end;
MPRINT(EM_DIAGRAM):   end;
209728    +
209729    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209730    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
209731    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209732    +LABEL GRP_Recency =
209733    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
209734    +
209735    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
209736    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
209737    +end;
MPRINT(EM_DIAGRAM):   end;
209738    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
209739    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
209740    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
209741    +end;
MPRINT(EM_DIAGRAM):   end;
209742    +else
209743    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
209744    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
209745    +end;
MPRINT(EM_DIAGRAM):   end;
209746    +else
209747    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
209748    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
209749    +end;
MPRINT(EM_DIAGRAM):   end;
209750    +else
209751    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
209752    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
209753    +end;
MPRINT(EM_DIAGRAM):   end;
209754    +end;
MPRINT(EM_DIAGRAM):   end;
209755    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209756    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
209757    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
209758    +* NODE: Neural22;
MPRINT(EM_DIAGRAM):   * NODE: Neural22;
209759    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
209760    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
209761    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
209762    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
209763    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
209764    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
209765    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
209766    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
209767    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
209768    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
209769    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
209770    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
209771    +LENGTH _WARN_ $4
209772    +      F_DepVar  $ 12
209773    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
209774    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
209775    +
209776    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
209777    +
209778    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
209779    +
209780    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
209781    +
209782    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
209783    +
209784    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
209785    +
209786    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
209787    +
209788    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
209789    +
209790    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
209791    +
209792    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
209793    +
209794    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
209795    +
209796    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
209797    +
209798    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
209799    +
209800    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
209801    +
209802    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
209803    +
209804    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
209805    +
209806    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
209807    +
209808    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
209809    +
209810    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
209811    +
209812    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
209813    +
209814    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
209815    +
209816    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
209817    +
209818    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
209819    +
209820    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
209821    +
209822    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
209823    +
209824    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
209825    +
209826    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
209827    +
209828    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
209829    +
209830    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
209831    +
209832    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
209833    +
209834    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
209835    +
209836    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
209837    +
209838    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
209839    +
209840    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
209841    +
209842    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
209843    +
209844    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
209845    +
209846    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
209847    +
209848    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
209849    +
209850    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
209851    +
209852    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
209853    +
209854    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
209855    +
209856    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
209857    +
209858    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
209859    +
209860    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
209861    +
209862    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
209863    +
209864    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
209865    +
209866    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
209867    +
209868    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
209869    +
209870    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
209871    +
209872    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
209873    +
209874    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
209875    +
209876    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
209877    +
209878    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
209879    +
209880    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
209881    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
209882    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
209883    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
209884    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
209885    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209886    +end;
MPRINT(EM_DIAGRAM):   end;
209887    +else do;
MPRINT(EM_DIAGRAM):   else do;
209888    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
209889    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
209890    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
209891    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
209892    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
209893    +   end;
MPRINT(EM_DIAGRAM):   end;
209894    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
209895    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
209896    +   end;
MPRINT(EM_DIAGRAM):   end;
209897    +   else do;
MPRINT(EM_DIAGRAM):   else do;
209898    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
209899    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
209900    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209901    +   end;
MPRINT(EM_DIAGRAM):   end;
209902    +end;
MPRINT(EM_DIAGRAM):   end;
209903    +
209904    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
209905    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
209906    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
209907    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
209908    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
209909    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
209910    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
209911    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209912    +end;
MPRINT(EM_DIAGRAM):   end;
209913    +else do;
MPRINT(EM_DIAGRAM):   else do;
209914    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
209915    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
209916    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
209917    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
209918    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
209919    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
209920    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
209921    +   end;
MPRINT(EM_DIAGRAM):   end;
209922    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
209923    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
209924    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
209925    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
209926    +   end;
MPRINT(EM_DIAGRAM):   end;
209927    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
209928    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
209929    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
209930    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
209931    +   end;
MPRINT(EM_DIAGRAM):   end;
209932    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
209933    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
209934    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
209935    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
209936    +   end;
MPRINT(EM_DIAGRAM):   end;
209937    +   else do;
MPRINT(EM_DIAGRAM):   else do;
209938    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
209939    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
209940    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
209941    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
209942    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209943    +   end;
MPRINT(EM_DIAGRAM):   end;
209944    +end;
MPRINT(EM_DIAGRAM):   end;
209945    +
209946    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
209947    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
209948    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
209949    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
209950    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
209951    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
209952    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
209953    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209954    +end;
MPRINT(EM_DIAGRAM):   end;
209955    +else do;
MPRINT(EM_DIAGRAM):   else do;
209956    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
209957    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
209958    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
209959    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
209960    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
209961    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
209962    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
209963    +   end;
MPRINT(EM_DIAGRAM):   end;
209964    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
209965    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
209966    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
209967    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
209968    +   end;
MPRINT(EM_DIAGRAM):   end;
209969    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
209970    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
209971    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
209972    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
209973    +   end;
MPRINT(EM_DIAGRAM):   end;
209974    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
209975    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
209976    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
209977    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
209978    +   end;
MPRINT(EM_DIAGRAM):   end;
209979    +   else do;
MPRINT(EM_DIAGRAM):   else do;
209980    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
209981    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
209982    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
209983    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
209984    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209985    +   end;
MPRINT(EM_DIAGRAM):   end;
209986    +end;
MPRINT(EM_DIAGRAM):   end;
209987    +
209988    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
209989    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
209990    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
209991    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
209992    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
209993    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
209994    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
209995    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
209996    +end;
MPRINT(EM_DIAGRAM):   end;
209997    +else do;
MPRINT(EM_DIAGRAM):   else do;
209998    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
209999    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
210000    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210001    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
210002    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
210003    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
210004    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
210005    +   end;
MPRINT(EM_DIAGRAM):   end;
210006    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
210007    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
210008    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
210009    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
210010    +   end;
MPRINT(EM_DIAGRAM):   end;
210011    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
210012    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
210013    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
210014    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
210015    +   end;
MPRINT(EM_DIAGRAM):   end;
210016    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
210017    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
210018    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
210019    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
210020    +   end;
MPRINT(EM_DIAGRAM):   end;
210021    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210022    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
210023    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
210024    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
210025    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
210026    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210027    +   end;
MPRINT(EM_DIAGRAM):   end;
210028    +end;
MPRINT(EM_DIAGRAM):   end;
210029    +
210030    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
210031    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
210032    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
210033    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
210034    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
210035    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
210036    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
210037    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210038    +end;
MPRINT(EM_DIAGRAM):   end;
210039    +else do;
MPRINT(EM_DIAGRAM):   else do;
210040    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
210041    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
210042    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210043    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
210044    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
210045    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
210046    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
210047    +   end;
MPRINT(EM_DIAGRAM):   end;
210048    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
210049    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
210050    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
210051    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
210052    +   end;
MPRINT(EM_DIAGRAM):   end;
210053    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
210054    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
210055    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
210056    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
210057    +   end;
MPRINT(EM_DIAGRAM):   end;
210058    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
210059    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
210060    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
210061    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
210062    +   end;
MPRINT(EM_DIAGRAM):   end;
210063    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210064    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
210065    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
210066    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
210067    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
210068    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210069    +   end;
MPRINT(EM_DIAGRAM):   end;
210070    +end;
MPRINT(EM_DIAGRAM):   end;
210071    +
210072    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
210073    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
210074    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
210075    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
210076    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
210077    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
210078    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
210079    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210080    +end;
MPRINT(EM_DIAGRAM):   end;
210081    +else do;
MPRINT(EM_DIAGRAM):   else do;
210082    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
210083    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
210084    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210085    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
210086    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
210087    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
210088    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
210089    +   end;
MPRINT(EM_DIAGRAM):   end;
210090    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
210091    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
210092    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
210093    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
210094    +   end;
MPRINT(EM_DIAGRAM):   end;
210095    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
210096    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
210097    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
210098    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
210099    +   end;
MPRINT(EM_DIAGRAM):   end;
210100    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
210101    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
210102    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
210103    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
210104    +   end;
MPRINT(EM_DIAGRAM):   end;
210105    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210106    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
210107    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
210108    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
210109    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
210110    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210111    +   end;
MPRINT(EM_DIAGRAM):   end;
210112    +end;
MPRINT(EM_DIAGRAM):   end;
210113    +
210114    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
210115    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
210116    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
210117    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
210118    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
210119    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
210120    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
210121    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210122    +end;
MPRINT(EM_DIAGRAM):   end;
210123    +else do;
MPRINT(EM_DIAGRAM):   else do;
210124    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
210125    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
210126    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210127    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
210128    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
210129    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
210130    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
210131    +   end;
MPRINT(EM_DIAGRAM):   end;
210132    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
210133    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
210134    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
210135    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
210136    +   end;
MPRINT(EM_DIAGRAM):   end;
210137    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
210138    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
210139    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
210140    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
210141    +   end;
MPRINT(EM_DIAGRAM):   end;
210142    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
210143    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
210144    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
210145    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
210146    +   end;
MPRINT(EM_DIAGRAM):   end;
210147    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210148    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
210149    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
210150    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
210151    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
210152    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210153    +   end;
MPRINT(EM_DIAGRAM):   end;
210154    +end;
MPRINT(EM_DIAGRAM):   end;
210155    +
210156    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
210157    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
210158    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
210159    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
210160    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
210161    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
210162    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
210163    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210164    +end;
MPRINT(EM_DIAGRAM):   end;
210165    +else do;
MPRINT(EM_DIAGRAM):   else do;
210166    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
210167    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
210168    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210169    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
210170    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
210171    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
210172    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
210173    +   end;
MPRINT(EM_DIAGRAM):   end;
210174    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
210175    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
210176    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
210177    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
210178    +   end;
MPRINT(EM_DIAGRAM):   end;
210179    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
210180    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
210181    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
210182    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
210183    +   end;
MPRINT(EM_DIAGRAM):   end;
210184    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
210185    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
210186    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
210187    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
210188    +   end;
MPRINT(EM_DIAGRAM):   end;
210189    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210190    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
210191    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
210192    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
210193    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
210194    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210195    +   end;
MPRINT(EM_DIAGRAM):   end;
210196    +end;
MPRINT(EM_DIAGRAM):   end;
210197    +
210198    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
210199    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
210200    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
210201    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
210202    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
210203    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
210204    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210205    +end;
MPRINT(EM_DIAGRAM):   end;
210206    +else do;
MPRINT(EM_DIAGRAM):   else do;
210207    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
210208    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
210209    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210210    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
210211    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
210212    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
210213    +   end;
MPRINT(EM_DIAGRAM):   end;
210214    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
210215    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
210216    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
210217    +   end;
MPRINT(EM_DIAGRAM):   end;
210218    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
210219    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
210220    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
210221    +   end;
MPRINT(EM_DIAGRAM):   end;
210222    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210223    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
210224    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
210225    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
210226    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210227    +   end;
MPRINT(EM_DIAGRAM):   end;
210228    +end;
MPRINT(EM_DIAGRAM):   end;
210229    +
210230    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
210231    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
210232    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
210233    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
210234    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
210235    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
210236    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
210237    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210238    +end;
MPRINT(EM_DIAGRAM):   end;
210239    +else do;
MPRINT(EM_DIAGRAM):   else do;
210240    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
210241    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
210242    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210243    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
210244    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
210245    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
210246    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
210247    +   end;
MPRINT(EM_DIAGRAM):   end;
210248    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
210249    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
210250    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
210251    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
210252    +   end;
MPRINT(EM_DIAGRAM):   end;
210253    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
210254    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
210255    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
210256    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
210257    +   end;
MPRINT(EM_DIAGRAM):   end;
210258    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
210259    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
210260    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
210261    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
210262    +   end;
MPRINT(EM_DIAGRAM):   end;
210263    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210264    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
210265    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
210266    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
210267    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
210268    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210269    +   end;
MPRINT(EM_DIAGRAM):   end;
210270    +end;
MPRINT(EM_DIAGRAM):   end;
210271    +
210272    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
210273    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
210274    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
210275    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
210276    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
210277    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
210278    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
210279    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210280    +end;
MPRINT(EM_DIAGRAM):   end;
210281    +else do;
MPRINT(EM_DIAGRAM):   else do;
210282    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
210283    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
210284    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210285    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
210286    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
210287    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
210288    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
210289    +   end;
MPRINT(EM_DIAGRAM):   end;
210290    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
210291    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
210292    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
210293    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
210294    +   end;
MPRINT(EM_DIAGRAM):   end;
210295    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
210296    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
210297    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
210298    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
210299    +   end;
MPRINT(EM_DIAGRAM):   end;
210300    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
210301    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
210302    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
210303    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
210304    +   end;
MPRINT(EM_DIAGRAM):   end;
210305    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210306    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
210307    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
210308    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
210309    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
210310    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210311    +   end;
MPRINT(EM_DIAGRAM):   end;
210312    +end;
MPRINT(EM_DIAGRAM):   end;
210313    +
210314    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
210315    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
210316    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
210317    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
210318    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
210319    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
210320    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
210321    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210322    +end;
MPRINT(EM_DIAGRAM):   end;
210323    +else do;
MPRINT(EM_DIAGRAM):   else do;
210324    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
210325    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
210326    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210327    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
210328    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
210329    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
210330    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
210331    +   end;
MPRINT(EM_DIAGRAM):   end;
210332    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
210333    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
210334    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
210335    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
210336    +   end;
MPRINT(EM_DIAGRAM):   end;
210337    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
210338    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
210339    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
210340    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
210341    +   end;
MPRINT(EM_DIAGRAM):   end;
210342    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
210343    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
210344    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
210345    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
210346    +   end;
MPRINT(EM_DIAGRAM):   end;
210347    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210348    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
210349    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
210350    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
210351    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
210352    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210353    +   end;
MPRINT(EM_DIAGRAM):   end;
210354    +end;
MPRINT(EM_DIAGRAM):   end;
210355    +
210356    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
210357    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
210358    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
210359    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
210360    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
210361    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
210362    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
210363    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210364    +end;
MPRINT(EM_DIAGRAM):   end;
210365    +else do;
MPRINT(EM_DIAGRAM):   else do;
210366    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
210367    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
210368    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210369    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
210370    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
210371    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
210372    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
210373    +   end;
MPRINT(EM_DIAGRAM):   end;
210374    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
210375    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
210376    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
210377    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
210378    +   end;
MPRINT(EM_DIAGRAM):   end;
210379    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
210380    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
210381    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
210382    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
210383    +   end;
MPRINT(EM_DIAGRAM):   end;
210384    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
210385    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
210386    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
210387    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
210388    +   end;
MPRINT(EM_DIAGRAM):   end;
210389    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210390    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
210391    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
210392    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
210393    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
210394    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210395    +   end;
MPRINT(EM_DIAGRAM):   end;
210396    +end;
MPRINT(EM_DIAGRAM):   end;
210397    +
210398    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
210399    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
210400    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
210401    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
210402    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
210403    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
210404    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
210405    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210406    +end;
MPRINT(EM_DIAGRAM):   end;
210407    +else do;
MPRINT(EM_DIAGRAM):   else do;
210408    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
210409    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
210410    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210411    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
210412    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
210413    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
210414    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
210415    +   end;
MPRINT(EM_DIAGRAM):   end;
210416    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
210417    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
210418    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
210419    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
210420    +   end;
MPRINT(EM_DIAGRAM):   end;
210421    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
210422    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
210423    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
210424    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
210425    +   end;
MPRINT(EM_DIAGRAM):   end;
210426    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
210427    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
210428    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
210429    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
210430    +   end;
MPRINT(EM_DIAGRAM):   end;
210431    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210432    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
210433    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
210434    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
210435    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
210436    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210437    +   end;
MPRINT(EM_DIAGRAM):   end;
210438    +end;
MPRINT(EM_DIAGRAM):   end;
210439    +
210440    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210441    +*** Checking missing input Interval
210442    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
210443    +
210444    +IF NMISS(
210445    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
210446    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
210447    +
210448    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210449    +END;
MPRINT(EM_DIAGRAM):   END;
210450    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210451    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
210452    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210453    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
210454    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
210455    +END;
MPRINT(EM_DIAGRAM):   END;
210456    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
210457    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
210458    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
210459    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
210460    +END;
MPRINT(EM_DIAGRAM):   END;
210461    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210462    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
210463    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210464    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210465    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
210466    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210467    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
210468    +   H11  =     0.04727192845675 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.04727192845675 * S_Year_Birth ;
210469    +   H12  =    -0.03499603197831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.03499603197831 * S_Year_Birth ;
210470    +   H13  =      -0.249387333167 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.249387333167 * S_Year_Birth ;
210471    +   H14  =    -0.18145230662582 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.18145230662582 * S_Year_Birth ;
210472    +   H15  =    -0.07744416350216 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.07744416350216 * S_Year_Birth ;
210473    +   H11  = H11  +    -0.25371698668168 * GRP_AcceptedCmp52
210474    +          +     0.38185615945621 * GRP_Frq2  +     0.03545555759423 * GRP_Frq3
210475    +          +    -0.00061660249238 * GRP_Frq4  +     0.41779261820045 *
210476    +        GRP_Income2  +     0.51800912898069 * GRP_Income3
210477    +          +    -0.36427548932695 * GRP_Income4  +    -0.06433979614617 *
210478    +        GRP_Mnt2  +     0.00045120565293 * GRP_Mnt3  +    -0.13992317322759 *
210479    +        GRP_Mnt4  +     0.34207391538024 * GRP_MntFishProducts2
210480    +          +     0.03411739869638 * GRP_MntFishProducts3
210481    +          +      -0.083693402353 * GRP_MntFishProducts4
210482    +          +     -0.1318128730187 * GRP_MntGoldProds2
210483    +          +     -0.0614737729382 * GRP_MntGoldProds3
210484    +          +    -0.00372986687449 * GRP_MntGoldProds4
210485    +          +     -0.3129171829017 * GRP_MntMeatProducts2
210486    +          +     0.01519664718127 * GRP_MntMeatProducts3
210487    +          +     0.29997111548812 * GRP_MntMeatProducts4
210488    +          +       0.389673942682 * GRP_MntWines2  +     0.21159785789434 *
210489    +        GRP_MntWines3  +    -0.26921349986988 * GRP_MntWines4
210490    +          +    -0.47013218092095 * GRP_NumCatalogPurchases3
210491    +          +     0.23943411636141 * GRP_NumCatalogPurchases4
210492    +          +    -0.68715024477164 * GRP_NumDistPurchases2
210493    +          +    -0.09178471992122 * GRP_NumDistPurchases3
210494    +          +    -0.01170225640351 * GRP_NumDistPurchases4
210495    +          +    -0.14760833919227 * GRP_NumWebPurchases2
210496    +          +     0.02966820025811 * GRP_NumWebPurchases3
210497    +          +    -0.04127892210576 * GRP_NumWebPurchases4
210498    +          +    -0.45467119970502 * GRP_RFMstat2  +    -0.14644406995031 *
210499    +        GRP_RFMstat3  +    -0.12660007404037 * GRP_RFMstat4
210500    +          +     0.04829215694488 * GRP_RMntFrq2  +     0.10137738373353 *
210501    +        GRP_RMntFrq3  +     -0.2873514159435 * GRP_RMntFrq4
210502    +          +     0.61737333380878 * GRP_Recency2  +     0.16651370318087 *
210503    +        GRP_Recency3  +    -0.15382569411658 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25371698668168 * GRP_AcceptedCmp52 + 0.38185615945621 *
GRP_Frq2 + 0.03545555759423 * GRP_Frq3 + -0.00061660249238 * GRP_Frq4 + 0.41779261820045 *
GRP_Income2 + 0.51800912898069 * GRP_Income3 + -0.36427548932695 * GRP_Income4 +
-0.06433979614617 * GRP_Mnt2 + 0.00045120565293 * GRP_Mnt3 + -0.13992317322759 * GRP_Mnt4 +
0.34207391538024 * GRP_MntFishProducts2 + 0.03411739869638 * GRP_MntFishProducts3 +
-0.083693402353 * GRP_MntFishProducts4 + -0.1318128730187 * GRP_MntGoldProds2 +
-0.0614737729382 * GRP_MntGoldProds3 + -0.00372986687449 * GRP_MntGoldProds4 +
-0.3129171829017 * GRP_MntMeatProducts2 + 0.01519664718127 * GRP_MntMeatProducts3 +
0.29997111548812 * GRP_MntMeatProducts4 + 0.389673942682 * GRP_MntWines2 + 0.21159785789434 *
GRP_MntWines3 + -0.26921349986988 * GRP_MntWines4 + -0.47013218092095 *
GRP_NumCatalogPurchases3 + 0.23943411636141 * GRP_NumCatalogPurchases4 + -0.68715024477164 *
GRP_NumDistPurchases2 + -0.09178471992122 * GRP_NumDistPurchases3 + -0.01170225640351 *
GRP_NumDistPurchases4 + -0.14760833919227 * GRP_NumWebPurchases2 + 0.02966820025811 *
GRP_NumWebPurchases3 + -0.04127892210576 * GRP_NumWebPurchases4 + -0.45467119970502 *
GRP_RFMstat2 + -0.14644406995031 * GRP_RFMstat3 + -0.12660007404037 * GRP_RFMstat4 +
0.04829215694488 * GRP_RMntFrq2 + 0.10137738373353 * GRP_RMntFrq3 + -0.2873514159435 *
GRP_RMntFrq4 + 0.61737333380878 * GRP_Recency2 + 0.16651370318087 * GRP_Recency3 +
-0.15382569411658 * GRP_Recency4 ;
210504    +   H12  = H12  +    -0.00960598895677 * GRP_AcceptedCmp52
210505    +          +    -0.13877780492855 * GRP_Frq2  +    -0.12078849771739 * GRP_Frq3
210506    +          +     0.25058833013238 * GRP_Frq4  +     0.13932014454657 *
210507    +        GRP_Income2  +    -0.11560599273748 * GRP_Income3
210508    +          +    -0.36622829757109 * GRP_Income4  +     0.12796853065131 *
210509    +        GRP_Mnt2  +    -0.15829126446209 * GRP_Mnt3  +    -0.35779207872654 *
210510    +        GRP_Mnt4  +     0.06590491513415 * GRP_MntFishProducts2
210511    +          +     0.00842475350903 * GRP_MntFishProducts3
210512    +          +     -0.1623103908885 * GRP_MntFishProducts4
210513    +          +    -0.23845524931139 * GRP_MntGoldProds2
210514    +          +    -0.07128567155438 * GRP_MntGoldProds3
210515    +          +     0.25778887379163 * GRP_MntGoldProds4
210516    +          +    -0.12224351227219 * GRP_MntMeatProducts2
210517    +          +     0.06269922653052 * GRP_MntMeatProducts3
210518    +          +      0.2587215409794 * GRP_MntMeatProducts4
210519    +          +     0.20096090232239 * GRP_MntWines2  +    -0.16858917844476 *
210520    +        GRP_MntWines3  +     0.03815809499779 * GRP_MntWines4
210521    +          +     0.05177526225067 * GRP_NumCatalogPurchases3
210522    +          +    -0.18831777813313 * GRP_NumCatalogPurchases4
210523    +          +     0.12374838743082 * GRP_NumDistPurchases2
210524    +          +    -0.19910688422086 * GRP_NumDistPurchases3
210525    +          +    -0.03804569737208 * GRP_NumDistPurchases4
210526    +          +    -0.17179633678901 * GRP_NumWebPurchases2
210527    +          +    -0.08560184232365 * GRP_NumWebPurchases3
210528    +          +     0.09237237622553 * GRP_NumWebPurchases4
210529    +          +     0.01544327143979 * GRP_RFMstat2  +      0.1127818122444 *
210530    +        GRP_RFMstat3  +    -0.21371736650143 * GRP_RFMstat4
210531    +          +    -0.14005478166078 * GRP_RMntFrq2  +     0.07954568858907 *
210532    +        GRP_RMntFrq3  +    -0.02313269086836 * GRP_RMntFrq4
210533    +          +     0.04358116545272 * GRP_Recency2  +    -0.02969695172962 *
210534    +        GRP_Recency3  +     0.00206593904485 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00960598895677 * GRP_AcceptedCmp52 + -0.13877780492855 *
GRP_Frq2 + -0.12078849771739 * GRP_Frq3 + 0.25058833013238 * GRP_Frq4 + 0.13932014454657 *
GRP_Income2 + -0.11560599273748 * GRP_Income3 + -0.36622829757109 * GRP_Income4 +
0.12796853065131 * GRP_Mnt2 + -0.15829126446209 * GRP_Mnt3 + -0.35779207872654 * GRP_Mnt4 +
0.06590491513415 * GRP_MntFishProducts2 + 0.00842475350903 * GRP_MntFishProducts3 +
-0.1623103908885 * GRP_MntFishProducts4 + -0.23845524931139 * GRP_MntGoldProds2 +
-0.07128567155438 * GRP_MntGoldProds3 + 0.25778887379163 * GRP_MntGoldProds4 +
-0.12224351227219 * GRP_MntMeatProducts2 + 0.06269922653052 * GRP_MntMeatProducts3 +
0.2587215409794 * GRP_MntMeatProducts4 + 0.20096090232239 * GRP_MntWines2 + -0.16858917844476
* GRP_MntWines3 + 0.03815809499779 * GRP_MntWines4 + 0.05177526225067 *
GRP_NumCatalogPurchases3 + -0.18831777813313 * GRP_NumCatalogPurchases4 + 0.12374838743082 *
GRP_NumDistPurchases2 + -0.19910688422086 * GRP_NumDistPurchases3 + -0.03804569737208 *
GRP_NumDistPurchases4 + -0.17179633678901 * GRP_NumWebPurchases2 + -0.08560184232365 *
GRP_NumWebPurchases3 + 0.09237237622553 * GRP_NumWebPurchases4 + 0.01544327143979 *
GRP_RFMstat2 + 0.1127818122444 * GRP_RFMstat3 + -0.21371736650143 * GRP_RFMstat4 +
-0.14005478166078 * GRP_RMntFrq2 + 0.07954568858907 * GRP_RMntFrq3 + -0.02313269086836 *
GRP_RMntFrq4 + 0.04358116545272 * GRP_Recency2 + -0.02969695172962 * GRP_Recency3 +
0.00206593904485 * GRP_Recency4 ;
210535    +   H13  = H13  +     0.11273135858209 * GRP_AcceptedCmp52
210536    +          +    -0.15015665173608 * GRP_Frq2  +    -0.20454924588356 * GRP_Frq3
210537    +          +    -0.04047998964496 * GRP_Frq4  +    -0.29897237144541 *
210538    +        GRP_Income2  +      -0.028464296882 * GRP_Income3
210539    +          +     0.24836294191696 * GRP_Income4  +     0.08738925553158 *
210540    +        GRP_Mnt2  +     0.00962293230168 * GRP_Mnt3  +    -0.12661643514597 *
210541    +        GRP_Mnt4  +    -0.03747719154948 * GRP_MntFishProducts2
210542    +          +    -0.07078012229572 * GRP_MntFishProducts3
210543    +          +    -0.14569186671189 * GRP_MntFishProducts4
210544    +          +     0.14963390032413 * GRP_MntGoldProds2
210545    +          +    -0.11869917970226 * GRP_MntGoldProds3
210546    +          +     0.25943105626615 * GRP_MntGoldProds4
210547    +          +     0.36609689271233 * GRP_MntMeatProducts2
210548    +          +     0.10969864655073 * GRP_MntMeatProducts3
210549    +          +    -0.03446779336952 * GRP_MntMeatProducts4
210550    +          +    -0.16882321573662 * GRP_MntWines2  +     0.07914922328232 *
210551    +        GRP_MntWines3  +     0.13243594484158 * GRP_MntWines4
210552    +          +     0.39758714937962 * GRP_NumCatalogPurchases3
210553    +          +     0.31434011051179 * GRP_NumCatalogPurchases4
210554    +          +     0.08068432649382 * GRP_NumDistPurchases2
210555    +          +    -0.08875599058351 * GRP_NumDistPurchases3
210556    +          +     0.26738740475822 * GRP_NumDistPurchases4
210557    +          +     -0.0916247468051 * GRP_NumWebPurchases2
210558    +          +    -0.17267741073665 * GRP_NumWebPurchases3
210559    +          +     0.01349113315351 * GRP_NumWebPurchases4
210560    +          +    -0.19075973281592 * GRP_RFMstat2  +    -0.20146461162283 *
210561    +        GRP_RFMstat3  +    -0.13097471458987 * GRP_RFMstat4
210562    +          +     0.06761773631631 * GRP_RMntFrq2  +     0.27576244694442 *
210563    +        GRP_RMntFrq3  +      0.1281788430307 * GRP_RMntFrq4
210564    +          +    -0.15939599795679 * GRP_Recency2  +    -0.00210397286084 *
210565    +        GRP_Recency3  +     0.28490847560375 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.11273135858209 * GRP_AcceptedCmp52 + -0.15015665173608 *
GRP_Frq2 + -0.20454924588356 * GRP_Frq3 + -0.04047998964496 * GRP_Frq4 + -0.29897237144541 *
GRP_Income2 + -0.028464296882 * GRP_Income3 + 0.24836294191696 * GRP_Income4 +
0.08738925553158 * GRP_Mnt2 + 0.00962293230168 * GRP_Mnt3 + -0.12661643514597 * GRP_Mnt4 +
-0.03747719154948 * GRP_MntFishProducts2 + -0.07078012229572 * GRP_MntFishProducts3 +
-0.14569186671189 * GRP_MntFishProducts4 + 0.14963390032413 * GRP_MntGoldProds2 +
-0.11869917970226 * GRP_MntGoldProds3 + 0.25943105626615 * GRP_MntGoldProds4 +
0.36609689271233 * GRP_MntMeatProducts2 + 0.10969864655073 * GRP_MntMeatProducts3 +
-0.03446779336952 * GRP_MntMeatProducts4 + -0.16882321573662 * GRP_MntWines2 +
0.07914922328232 * GRP_MntWines3 + 0.13243594484158 * GRP_MntWines4 + 0.39758714937962 *
GRP_NumCatalogPurchases3 + 0.31434011051179 * GRP_NumCatalogPurchases4 + 0.08068432649382 *
GRP_NumDistPurchases2 + -0.08875599058351 * GRP_NumDistPurchases3 + 0.26738740475822 *
GRP_NumDistPurchases4 + -0.0916247468051 * GRP_NumWebPurchases2 + -0.17267741073665 *
GRP_NumWebPurchases3 + 0.01349113315351 * GRP_NumWebPurchases4 + -0.19075973281592 *
GRP_RFMstat2 + -0.20146461162283 * GRP_RFMstat3 + -0.13097471458987 * GRP_RFMstat4 +
0.06761773631631 * GRP_RMntFrq2 + 0.27576244694442 * GRP_RMntFrq3 + 0.1281788430307 *
GRP_RMntFrq4 + -0.15939599795679 * GRP_Recency2 + -0.00210397286084 * GRP_Recency3 +
0.28490847560375 * GRP_Recency4 ;
210566    +   H14  = H14  +     0.27713596853764 * GRP_AcceptedCmp52
210567    +          +    -0.11480256849934 * GRP_Frq2  +      0.0285240312455 * GRP_Frq3
210568    +          +     0.09416065239682 * GRP_Frq4  +     -0.1229961422993 *
210569    +        GRP_Income2  +     0.01867364051002 * GRP_Income3
210570    +          +     0.05820105400306 * GRP_Income4  +    -0.16873429334819 *
210571    +        GRP_Mnt2  +    -0.01221085891741 * GRP_Mnt3  +    -0.10225236565235 *
210572    +        GRP_Mnt4  +    -0.09613387975858 * GRP_MntFishProducts2
210573    +          +    -0.18334484867808 * GRP_MntFishProducts3
210574    +          +     0.13484477561766 * GRP_MntFishProducts4
210575    +          +    -0.05145913380692 * GRP_MntGoldProds2
210576    +          +     0.04459987080173 * GRP_MntGoldProds3
210577    +          +     0.01539767655772 * GRP_MntGoldProds4
210578    +          +     0.26537148543352 * GRP_MntMeatProducts2
210579    +          +     0.22913678530176 * GRP_MntMeatProducts3
210580    +          +     0.21262490658374 * GRP_MntMeatProducts4
210581    +          +    -0.11513521401249 * GRP_MntWines2  +    -0.14420673462527 *
210582    +        GRP_MntWines3  +     0.11949691312637 * GRP_MntWines4
210583    +          +    -0.02289734111038 * GRP_NumCatalogPurchases3
210584    +          +    -0.12014539185275 * GRP_NumCatalogPurchases4
210585    +          +     0.09224372228857 * GRP_NumDistPurchases2
210586    +          +    -0.14205094961773 * GRP_NumDistPurchases3
210587    +          +    -0.27160467877541 * GRP_NumDistPurchases4
210588    +          +    -0.15428446875019 * GRP_NumWebPurchases2
210589    +          +    -0.36914157795453 * GRP_NumWebPurchases3
210590    +          +    -0.41610537355059 * GRP_NumWebPurchases4
210591    +          +    -0.29442656678388 * GRP_RFMstat2  +     0.03961235509827 *
210592    +        GRP_RFMstat3  +    -0.18322878380243 * GRP_RFMstat4
210593    +          +     0.06857495854453 * GRP_RMntFrq2  +     0.08325769999442 *
210594    +        GRP_RMntFrq3  +     0.24334424933749 * GRP_RMntFrq4
210595    +          +    -0.50963259840069 * GRP_Recency2  +    -0.24163634485458 *
210596    +        GRP_Recency3  +     -0.1023689653207 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.27713596853764 * GRP_AcceptedCmp52 + -0.11480256849934 *
GRP_Frq2 + 0.0285240312455 * GRP_Frq3 + 0.09416065239682 * GRP_Frq4 + -0.1229961422993 *
GRP_Income2 + 0.01867364051002 * GRP_Income3 + 0.05820105400306 * GRP_Income4 +
-0.16873429334819 * GRP_Mnt2 + -0.01221085891741 * GRP_Mnt3 + -0.10225236565235 * GRP_Mnt4 +
-0.09613387975858 * GRP_MntFishProducts2 + -0.18334484867808 * GRP_MntFishProducts3 +
0.13484477561766 * GRP_MntFishProducts4 + -0.05145913380692 * GRP_MntGoldProds2 +
0.04459987080173 * GRP_MntGoldProds3 + 0.01539767655772 * GRP_MntGoldProds4 + 0.26537148543352
* GRP_MntMeatProducts2 + 0.22913678530176 * GRP_MntMeatProducts3 + 0.21262490658374 *
GRP_MntMeatProducts4 + -0.11513521401249 * GRP_MntWines2 + -0.14420673462527 * GRP_MntWines3 +
0.11949691312637 * GRP_MntWines4 + -0.02289734111038 * GRP_NumCatalogPurchases3 +
-0.12014539185275 * GRP_NumCatalogPurchases4 + 0.09224372228857 * GRP_NumDistPurchases2 +
-0.14205094961773 * GRP_NumDistPurchases3 + -0.27160467877541 * GRP_NumDistPurchases4 +
-0.15428446875019 * GRP_NumWebPurchases2 + -0.36914157795453 * GRP_NumWebPurchases3 +
-0.41610537355059 * GRP_NumWebPurchases4 + -0.29442656678388 * GRP_RFMstat2 + 0.03961235509827
* GRP_RFMstat3 + -0.18322878380243 * GRP_RFMstat4 + 0.06857495854453 * GRP_RMntFrq2 +
0.08325769999442 * GRP_RMntFrq3 + 0.24334424933749 * GRP_RMntFrq4 + -0.50963259840069 *
GRP_Recency2 + -0.24163634485458 * GRP_Recency3 + -0.1023689653207 * GRP_Recency4 ;
210597    +   H15  = H15  +    -0.58071728739803 * GRP_AcceptedCmp52
210598    +          +    -0.33803120859672 * GRP_Frq2  +    -0.08690701614481 * GRP_Frq3
210599    +          +     0.06107334775294 * GRP_Frq4  +     0.00751374071999 *
210600    +        GRP_Income2  +     0.20911873861779 * GRP_Income3
210601    +          +    -0.14977199160976 * GRP_Income4  +     0.15427447371686 *
210602    +        GRP_Mnt2  +    -0.24298277669059 * GRP_Mnt3  +    -0.02935492111499 *
210603    +        GRP_Mnt4  +     0.04923982061963 * GRP_MntFishProducts2
210604    +          +    -0.08952948139975 * GRP_MntFishProducts3
210605    +          +     0.15338133379465 * GRP_MntFishProducts4
210606    +          +     0.04821845492824 * GRP_MntGoldProds2
210607    +          +     0.20117781904284 * GRP_MntGoldProds3
210608    +          +     0.13013396690778 * GRP_MntGoldProds4
210609    +          +    -0.03940841472157 * GRP_MntMeatProducts2
210610    +          +     0.03161017721112 * GRP_MntMeatProducts3
210611    +          +    -0.21938330779867 * GRP_MntMeatProducts4
210612    +          +      0.3039864690076 * GRP_MntWines2  +     0.33038690291786 *
210613    +        GRP_MntWines3  +     0.03314465135063 * GRP_MntWines4
210614    +          +    -0.07655889365033 * GRP_NumCatalogPurchases3
210615    +          +    -0.17353955777897 * GRP_NumCatalogPurchases4
210616    +          +    -0.16058154480995 * GRP_NumDistPurchases2
210617    +          +    -0.30101518928361 * GRP_NumDistPurchases3
210618    +          +      0.0473480026433 * GRP_NumDistPurchases4
210619    +          +     0.03132883547053 * GRP_NumWebPurchases2
210620    +          +    -0.29425936985479 * GRP_NumWebPurchases3
210621    +          +    -0.12527625315403 * GRP_NumWebPurchases4
210622    +          +     0.30683805591766 * GRP_RFMstat2  +    -0.21275334469197 *
210623    +        GRP_RFMstat3  +     0.32474239840607 * GRP_RFMstat4
210624    +          +     0.09289841520091 * GRP_RMntFrq2  +     0.22137778862379 *
210625    +        GRP_RMntFrq3  +     0.12254524703503 * GRP_RMntFrq4
210626    +          +     0.46836624272095 * GRP_Recency2  +     0.01747843890017 *
210627    +        GRP_Recency3  +    -0.28363324780869 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.58071728739803 * GRP_AcceptedCmp52 + -0.33803120859672 *
GRP_Frq2 + -0.08690701614481 * GRP_Frq3 + 0.06107334775294 * GRP_Frq4 + 0.00751374071999 *
GRP_Income2 + 0.20911873861779 * GRP_Income3 + -0.14977199160976 * GRP_Income4 +
0.15427447371686 * GRP_Mnt2 + -0.24298277669059 * GRP_Mnt3 + -0.02935492111499 * GRP_Mnt4 +
0.04923982061963 * GRP_MntFishProducts2 + -0.08952948139975 * GRP_MntFishProducts3 +
0.15338133379465 * GRP_MntFishProducts4 + 0.04821845492824 * GRP_MntGoldProds2 +
0.20117781904284 * GRP_MntGoldProds3 + 0.13013396690778 * GRP_MntGoldProds4 +
-0.03940841472157 * GRP_MntMeatProducts2 + 0.03161017721112 * GRP_MntMeatProducts3 +
-0.21938330779867 * GRP_MntMeatProducts4 + 0.3039864690076 * GRP_MntWines2 + 0.33038690291786
* GRP_MntWines3 + 0.03314465135063 * GRP_MntWines4 + -0.07655889365033 *
GRP_NumCatalogPurchases3 + -0.17353955777897 * GRP_NumCatalogPurchases4 + -0.16058154480995 *
GRP_NumDistPurchases2 + -0.30101518928361 * GRP_NumDistPurchases3 + 0.0473480026433 *
GRP_NumDistPurchases4 + 0.03132883547053 * GRP_NumWebPurchases2 + -0.29425936985479 *
GRP_NumWebPurchases3 + -0.12527625315403 * GRP_NumWebPurchases4 + 0.30683805591766 *
GRP_RFMstat2 + -0.21275334469197 * GRP_RFMstat3 + 0.32474239840607 * GRP_RFMstat4 +
0.09289841520091 * GRP_RMntFrq2 + 0.22137778862379 * GRP_RMntFrq3 + 0.12254524703503 *
GRP_RMntFrq4 + 0.46836624272095 * GRP_Recency2 + 0.01747843890017 * GRP_Recency3 +
-0.28363324780869 * GRP_Recency4 ;
210628    +   H11  =    -0.09329902916762 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.09329902916762 + H11 ;
210629    +   H12  =     0.21894996952826 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.21894996952826 + H12 ;
210630    +   H13  =    -0.97210428395662 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.97210428395662 + H13 ;
210631    +   H14  =    -0.47241372860242 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.47241372860242 + H14 ;
210632    +   H15  =    -0.89551869986721 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.89551869986721 + H15 ;
210633    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
210634    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
210635    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
210636    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
210637    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
210638    +END;
MPRINT(EM_DIAGRAM):   END;
210639    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
210640    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
210641    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
210642    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
210643    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
210644    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
210645    +END;
MPRINT(EM_DIAGRAM):   END;
210646    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210647    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
210648    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210649    +
210650    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
210651    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
210652    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
210653    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
210654    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
210655    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210656    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
210657    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
210658    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
210659    +end;
MPRINT(EM_DIAGRAM):   end;
210660    +else do;
MPRINT(EM_DIAGRAM):   else do;
210661    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
210662    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
210663    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
210664    +   end;
MPRINT(EM_DIAGRAM):   end;
210665    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
210666    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
210667    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
210668    +   end;
MPRINT(EM_DIAGRAM):   end;
210669    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210670    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
210671    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
210672    +   end;
MPRINT(EM_DIAGRAM):   end;
210673    +end;
MPRINT(EM_DIAGRAM):   end;
210674    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
210675    +   P_DepVar1  =     2.68876927057109 * H11  +     0.34381275178608 * H12
210676    +          +    -1.13153750790029 * H13  +    -0.93563986714952 * H14
210677    +          +     1.84382077322412 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.68876927057109 * H11 + 0.34381275178608 * H12 +
-1.13153750790029 * H13 + -0.93563986714952 * H14 + 1.84382077322412 * H15 ;
210678    +   P_DepVar1  =    -1.53169022796223 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53169022796223 + P_DepVar1 ;
210679    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
210680    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
210681    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
210682    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
210683    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
210684    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
210685    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
210686    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
210687    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
210688    +END;
MPRINT(EM_DIAGRAM):   END;
210689    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
210690    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
210691    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
210692    +END;
MPRINT(EM_DIAGRAM):   END;
210693    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
210694    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
210695    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
210696    +END;
MPRINT(EM_DIAGRAM):   END;
210697    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
210698    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
210699    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
210700    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
210701    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
210702    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
210703    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
210704    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210705    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
210706    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
210707    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
210708    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
210709    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
210710    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
210711    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
210712    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
210713    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
210714    +END;
MPRINT(EM_DIAGRAM):   END;
210715    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
210716    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
210717    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
210718    +drop
210719    +H11
210720    +H12
210721    +H13
210722    +H14
210723    +H15
210724    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
210725    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
210726    +* Renaming variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural22;
210727    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210728    +* Renaming Posterior variables for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural22;
210729    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210730    +drop Neural22_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar1;
210731    +Neural22_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar1 = P_DepVar1;
210732    +drop Neural22_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural22_P_DepVar0;
210733    +Neural22_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural22_P_DepVar0 = P_DepVar0;
210734    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210735    +* Renaming _WARN_ variable for Neural22;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural22;
210736    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210737    +length Neural22_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural22_WARN_ $4;
210738    +drop Neural22_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural22_WARN_;
210739    +Neural22_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural22_WARN_ = _WARN_;
210740    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210741    +* Ensmbl18: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Scoring Code of model 2 of 7;
210742    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210743    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210744    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
210745    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
210746    +* NODE: Neural21;
MPRINT(EM_DIAGRAM):   * NODE: Neural21;
210747    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
210748    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
210749    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
210750    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
210751    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
210752    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
210753    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
210754    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
210755    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
210756    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
210757    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
210758    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
210759    +LENGTH _WARN_ $4
210760    +      F_DepVar  $ 12
210761    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
210762    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
210763    +
210764    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
210765    +
210766    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
210767    +
210768    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
210769    +
210770    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
210771    +
210772    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
210773    +
210774    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
210775    +
210776    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
210777    +
210778    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
210779    +
210780    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
210781    +
210782    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
210783    +
210784    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
210785    +
210786    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
210787    +
210788    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
210789    +
210790    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
210791    +
210792    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
210793    +
210794    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
210795    +
210796    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
210797    +
210798    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
210799    +
210800    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
210801    +
210802    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
210803    +
210804    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
210805    +
210806    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
210807    +
210808    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
210809    +
210810    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
210811    +
210812    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
210813    +
210814    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
210815    +
210816    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
210817    +
210818    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
210819    +
210820    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
210821    +
210822    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
210823    +
210824    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
210825    +
210826    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
210827    +
210828    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
210829    +
210830    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
210831    +
210832    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
210833    +
210834    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
210835    +
210836    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
210837    +
210838    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
210839    +
210840    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
210841    +
210842    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
210843    +
210844    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
210845    +
210846    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
210847    +
210848    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
210849    +
210850    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
210851    +
210852    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
210853    +
210854    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
210855    +
210856    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
210857    +
210858    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
210859    +
210860    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
210861    +
210862    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
210863    +
210864    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
210865    +
210866    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
210867    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
210868    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
210869    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
210870    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
210871    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210872    +end;
MPRINT(EM_DIAGRAM):   end;
210873    +else do;
MPRINT(EM_DIAGRAM):   else do;
210874    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
210875    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
210876    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210877    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
210878    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
210879    +   end;
MPRINT(EM_DIAGRAM):   end;
210880    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
210881    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
210882    +   end;
MPRINT(EM_DIAGRAM):   end;
210883    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210884    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
210885    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
210886    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210887    +   end;
MPRINT(EM_DIAGRAM):   end;
210888    +end;
MPRINT(EM_DIAGRAM):   end;
210889    +
210890    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
210891    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
210892    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
210893    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
210894    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
210895    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
210896    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
210897    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210898    +end;
MPRINT(EM_DIAGRAM):   end;
210899    +else do;
MPRINT(EM_DIAGRAM):   else do;
210900    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
210901    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
210902    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210903    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
210904    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
210905    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
210906    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
210907    +   end;
MPRINT(EM_DIAGRAM):   end;
210908    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
210909    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
210910    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
210911    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
210912    +   end;
MPRINT(EM_DIAGRAM):   end;
210913    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
210914    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
210915    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
210916    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
210917    +   end;
MPRINT(EM_DIAGRAM):   end;
210918    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
210919    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
210920    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
210921    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
210922    +   end;
MPRINT(EM_DIAGRAM):   end;
210923    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210924    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
210925    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
210926    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
210927    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
210928    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210929    +   end;
MPRINT(EM_DIAGRAM):   end;
210930    +end;
MPRINT(EM_DIAGRAM):   end;
210931    +
210932    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
210933    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
210934    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
210935    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
210936    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
210937    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
210938    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
210939    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210940    +end;
MPRINT(EM_DIAGRAM):   end;
210941    +else do;
MPRINT(EM_DIAGRAM):   else do;
210942    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
210943    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
210944    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210945    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
210946    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
210947    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
210948    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
210949    +   end;
MPRINT(EM_DIAGRAM):   end;
210950    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
210951    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
210952    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
210953    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
210954    +   end;
MPRINT(EM_DIAGRAM):   end;
210955    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
210956    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
210957    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
210958    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
210959    +   end;
MPRINT(EM_DIAGRAM):   end;
210960    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
210961    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
210962    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
210963    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
210964    +   end;
MPRINT(EM_DIAGRAM):   end;
210965    +   else do;
MPRINT(EM_DIAGRAM):   else do;
210966    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
210967    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
210968    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
210969    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
210970    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210971    +   end;
MPRINT(EM_DIAGRAM):   end;
210972    +end;
MPRINT(EM_DIAGRAM):   end;
210973    +
210974    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
210975    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
210976    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
210977    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
210978    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
210979    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
210980    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
210981    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
210982    +end;
MPRINT(EM_DIAGRAM):   end;
210983    +else do;
MPRINT(EM_DIAGRAM):   else do;
210984    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
210985    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
210986    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
210987    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
210988    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
210989    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
210990    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
210991    +   end;
MPRINT(EM_DIAGRAM):   end;
210992    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
210993    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
210994    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
210995    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
210996    +   end;
MPRINT(EM_DIAGRAM):   end;
210997    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
210998    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
210999    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
211000    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
211001    +   end;
MPRINT(EM_DIAGRAM):   end;
211002    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
211003    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
211004    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
211005    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
211006    +   end;
MPRINT(EM_DIAGRAM):   end;
211007    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211008    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
211009    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
211010    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
211011    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211012    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211013    +   end;
MPRINT(EM_DIAGRAM):   end;
211014    +end;
MPRINT(EM_DIAGRAM):   end;
211015    +
211016    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
211017    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
211018    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
211019    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
211020    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
211021    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
211022    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211023    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211024    +end;
MPRINT(EM_DIAGRAM):   end;
211025    +else do;
MPRINT(EM_DIAGRAM):   else do;
211026    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211027    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
211028    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211029    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
211030    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
211031    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
211032    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
211033    +   end;
MPRINT(EM_DIAGRAM):   end;
211034    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
211035    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
211036    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
211037    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
211038    +   end;
MPRINT(EM_DIAGRAM):   end;
211039    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
211040    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
211041    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
211042    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
211043    +   end;
MPRINT(EM_DIAGRAM):   end;
211044    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
211045    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
211046    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
211047    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
211048    +   end;
MPRINT(EM_DIAGRAM):   end;
211049    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211050    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
211051    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
211052    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
211053    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211054    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211055    +   end;
MPRINT(EM_DIAGRAM):   end;
211056    +end;
MPRINT(EM_DIAGRAM):   end;
211057    +
211058    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
211059    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
211060    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
211061    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
211062    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
211063    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
211064    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211065    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211066    +end;
MPRINT(EM_DIAGRAM):   end;
211067    +else do;
MPRINT(EM_DIAGRAM):   else do;
211068    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211069    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
211070    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211071    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
211072    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
211073    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
211074    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
211075    +   end;
MPRINT(EM_DIAGRAM):   end;
211076    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
211077    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
211078    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
211079    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
211080    +   end;
MPRINT(EM_DIAGRAM):   end;
211081    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
211082    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
211083    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
211084    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
211085    +   end;
MPRINT(EM_DIAGRAM):   end;
211086    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
211087    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
211088    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
211089    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
211090    +   end;
MPRINT(EM_DIAGRAM):   end;
211091    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211092    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
211093    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
211094    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
211095    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211096    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211097    +   end;
MPRINT(EM_DIAGRAM):   end;
211098    +end;
MPRINT(EM_DIAGRAM):   end;
211099    +
211100    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
211101    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
211102    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
211103    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
211104    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
211105    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
211106    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211107    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211108    +end;
MPRINT(EM_DIAGRAM):   end;
211109    +else do;
MPRINT(EM_DIAGRAM):   else do;
211110    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211111    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
211112    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211113    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
211114    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
211115    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
211116    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
211117    +   end;
MPRINT(EM_DIAGRAM):   end;
211118    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
211119    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
211120    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
211121    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
211122    +   end;
MPRINT(EM_DIAGRAM):   end;
211123    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
211124    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
211125    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
211126    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
211127    +   end;
MPRINT(EM_DIAGRAM):   end;
211128    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
211129    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
211130    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
211131    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
211132    +   end;
MPRINT(EM_DIAGRAM):   end;
211133    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211134    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
211135    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
211136    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
211137    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211138    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211139    +   end;
MPRINT(EM_DIAGRAM):   end;
211140    +end;
MPRINT(EM_DIAGRAM):   end;
211141    +
211142    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
211143    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
211144    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
211145    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
211146    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
211147    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
211148    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211149    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211150    +end;
MPRINT(EM_DIAGRAM):   end;
211151    +else do;
MPRINT(EM_DIAGRAM):   else do;
211152    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211153    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
211154    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211155    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
211156    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
211157    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
211158    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
211159    +   end;
MPRINT(EM_DIAGRAM):   end;
211160    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
211161    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
211162    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
211163    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
211164    +   end;
MPRINT(EM_DIAGRAM):   end;
211165    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
211166    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
211167    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
211168    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
211169    +   end;
MPRINT(EM_DIAGRAM):   end;
211170    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
211171    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
211172    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
211173    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
211174    +   end;
MPRINT(EM_DIAGRAM):   end;
211175    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211176    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
211177    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
211178    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
211179    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211180    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211181    +   end;
MPRINT(EM_DIAGRAM):   end;
211182    +end;
MPRINT(EM_DIAGRAM):   end;
211183    +
211184    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
211185    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
211186    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
211187    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
211188    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
211189    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211190    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211191    +end;
MPRINT(EM_DIAGRAM):   end;
211192    +else do;
MPRINT(EM_DIAGRAM):   else do;
211193    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211194    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
211195    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211196    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
211197    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
211198    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
211199    +   end;
MPRINT(EM_DIAGRAM):   end;
211200    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
211201    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
211202    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
211203    +   end;
MPRINT(EM_DIAGRAM):   end;
211204    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
211205    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
211206    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
211207    +   end;
MPRINT(EM_DIAGRAM):   end;
211208    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211209    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
211210    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
211211    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211212    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211213    +   end;
MPRINT(EM_DIAGRAM):   end;
211214    +end;
MPRINT(EM_DIAGRAM):   end;
211215    +
211216    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
211217    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
211218    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
211219    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
211220    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
211221    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
211222    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211223    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211224    +end;
MPRINT(EM_DIAGRAM):   end;
211225    +else do;
MPRINT(EM_DIAGRAM):   else do;
211226    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211227    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
211228    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211229    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
211230    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
211231    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
211232    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
211233    +   end;
MPRINT(EM_DIAGRAM):   end;
211234    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
211235    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
211236    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
211237    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
211238    +   end;
MPRINT(EM_DIAGRAM):   end;
211239    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
211240    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
211241    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
211242    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
211243    +   end;
MPRINT(EM_DIAGRAM):   end;
211244    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
211245    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
211246    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
211247    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
211248    +   end;
MPRINT(EM_DIAGRAM):   end;
211249    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211250    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
211251    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
211252    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
211253    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211254    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211255    +   end;
MPRINT(EM_DIAGRAM):   end;
211256    +end;
MPRINT(EM_DIAGRAM):   end;
211257    +
211258    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
211259    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
211260    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
211261    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
211262    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
211263    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
211264    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211265    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211266    +end;
MPRINT(EM_DIAGRAM):   end;
211267    +else do;
MPRINT(EM_DIAGRAM):   else do;
211268    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211269    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
211270    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211271    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
211272    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
211273    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
211274    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
211275    +   end;
MPRINT(EM_DIAGRAM):   end;
211276    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
211277    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
211278    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
211279    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
211280    +   end;
MPRINT(EM_DIAGRAM):   end;
211281    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
211282    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
211283    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
211284    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
211285    +   end;
MPRINT(EM_DIAGRAM):   end;
211286    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
211287    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
211288    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
211289    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
211290    +   end;
MPRINT(EM_DIAGRAM):   end;
211291    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211292    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
211293    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
211294    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
211295    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211296    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211297    +   end;
MPRINT(EM_DIAGRAM):   end;
211298    +end;
MPRINT(EM_DIAGRAM):   end;
211299    +
211300    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
211301    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
211302    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
211303    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
211304    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
211305    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
211306    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211307    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211308    +end;
MPRINT(EM_DIAGRAM):   end;
211309    +else do;
MPRINT(EM_DIAGRAM):   else do;
211310    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211311    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
211312    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211313    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
211314    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
211315    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
211316    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
211317    +   end;
MPRINT(EM_DIAGRAM):   end;
211318    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
211319    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
211320    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
211321    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
211322    +   end;
MPRINT(EM_DIAGRAM):   end;
211323    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
211324    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
211325    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
211326    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
211327    +   end;
MPRINT(EM_DIAGRAM):   end;
211328    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
211329    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
211330    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
211331    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
211332    +   end;
MPRINT(EM_DIAGRAM):   end;
211333    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211334    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
211335    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
211336    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
211337    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211338    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211339    +   end;
MPRINT(EM_DIAGRAM):   end;
211340    +end;
MPRINT(EM_DIAGRAM):   end;
211341    +
211342    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
211343    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
211344    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
211345    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
211346    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
211347    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
211348    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211349    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211350    +end;
MPRINT(EM_DIAGRAM):   end;
211351    +else do;
MPRINT(EM_DIAGRAM):   else do;
211352    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211353    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
211354    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211355    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
211356    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
211357    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
211358    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
211359    +   end;
MPRINT(EM_DIAGRAM):   end;
211360    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
211361    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
211362    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
211363    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
211364    +   end;
MPRINT(EM_DIAGRAM):   end;
211365    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
211366    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
211367    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
211368    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
211369    +   end;
MPRINT(EM_DIAGRAM):   end;
211370    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
211371    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
211372    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
211373    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
211374    +   end;
MPRINT(EM_DIAGRAM):   end;
211375    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211376    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
211377    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
211378    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
211379    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211380    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211381    +   end;
MPRINT(EM_DIAGRAM):   end;
211382    +end;
MPRINT(EM_DIAGRAM):   end;
211383    +
211384    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
211385    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
211386    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
211387    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
211388    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
211389    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
211390    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211391    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211392    +end;
MPRINT(EM_DIAGRAM):   end;
211393    +else do;
MPRINT(EM_DIAGRAM):   else do;
211394    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211395    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
211396    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211397    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
211398    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
211399    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
211400    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
211401    +   end;
MPRINT(EM_DIAGRAM):   end;
211402    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
211403    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
211404    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
211405    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
211406    +   end;
MPRINT(EM_DIAGRAM):   end;
211407    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
211408    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
211409    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
211410    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
211411    +   end;
MPRINT(EM_DIAGRAM):   end;
211412    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
211413    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
211414    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
211415    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
211416    +   end;
MPRINT(EM_DIAGRAM):   end;
211417    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211418    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
211419    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
211420    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
211421    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211422    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211423    +   end;
MPRINT(EM_DIAGRAM):   end;
211424    +end;
MPRINT(EM_DIAGRAM):   end;
211425    +
211426    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211427    +*** Checking missing input Interval
211428    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
211429    +
211430    +IF NMISS(
211431    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
211432    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
211433    +
211434    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211435    +END;
MPRINT(EM_DIAGRAM):   END;
211436    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211437    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
211438    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211439    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
211440    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
211441    +END;
MPRINT(EM_DIAGRAM):   END;
211442    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
211443    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
211444    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
211445    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
211446    +END;
MPRINT(EM_DIAGRAM):   END;
211447    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211448    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
211449    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211450    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211451    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
211452    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211453    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
211454    +   H11  =      0.0668146440452 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.0668146440452 * S_Year_Birth ;
211455    +   H12  =     0.02918236951724 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.02918236951724 * S_Year_Birth ;
211456    +   H13  =     0.52122974180208 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.52122974180208 * S_Year_Birth ;
211457    +   H14  =     -0.1823800721103 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.1823800721103 * S_Year_Birth ;
211458    +   H11  = H11  +    -0.48347630033708 * GRP_AcceptedCmp52
211459    +          +     0.37100635990339 * GRP_Frq2  +     0.04377799127913 * GRP_Frq3
211460    +          +     -0.1974477050613 * GRP_Frq4  +     0.10700887225506 *
211461    +        GRP_Income2  +      0.3291591268929 * GRP_Income3
211462    +          +     0.00612929517663 * GRP_Income4  +    -0.23329153390557 *
211463    +        GRP_Mnt2  +    -0.08800204437411 * GRP_Mnt3  +    -0.08445529701198 *
211464    +        GRP_Mnt4  +     0.28673732624133 * GRP_MntFishProducts2
211465    +          +    -0.14978605827752 * GRP_MntFishProducts3
211466    +          +     0.22642470616542 * GRP_MntFishProducts4
211467    +          +     0.07604404821672 * GRP_MntGoldProds2
211468    +          +     0.04745212568332 * GRP_MntGoldProds3
211469    +          +    -0.10028215217028 * GRP_MntGoldProds4
211470    +          +    -0.07377682497053 * GRP_MntMeatProducts2
211471    +          +    -0.09960214357487 * GRP_MntMeatProducts3
211472    +          +    -0.25438120582859 * GRP_MntMeatProducts4
211473    +          +     0.42639299324809 * GRP_MntWines2  +     0.31089292559786 *
211474    +        GRP_MntWines3  +    -0.26826041457934 * GRP_MntWines4
211475    +          +    -0.53742609478771 * GRP_NumCatalogPurchases3
211476    +          +    -0.03023603128161 * GRP_NumCatalogPurchases4
211477    +          +    -0.37743946252805 * GRP_NumDistPurchases2
211478    +          +    -0.01872647257623 * GRP_NumDistPurchases3
211479    +          +    -0.31993024737958 * GRP_NumDistPurchases4
211480    +          +    -0.11078713164327 * GRP_NumWebPurchases2
211481    +          +     0.24754701690398 * GRP_NumWebPurchases3
211482    +          +     0.01530465573539 * GRP_NumWebPurchases4
211483    +          +    -0.17630256491744 * GRP_RFMstat2  +    -0.47929093118323 *
211484    +        GRP_RFMstat3  +     0.26729201021061 * GRP_RFMstat4
211485    +          +    -0.20197995708067 * GRP_RMntFrq2  +    -0.07138949090838 *
211486    +        GRP_RMntFrq3  +    -0.08653988697814 * GRP_RMntFrq4
211487    +          +     1.10790516734526 * GRP_Recency2  +     0.22440369463671 *
211488    +        GRP_Recency3  +    -0.44624012521308 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.48347630033708 * GRP_AcceptedCmp52 + 0.37100635990339 *
GRP_Frq2 + 0.04377799127913 * GRP_Frq3 + -0.1974477050613 * GRP_Frq4 + 0.10700887225506 *
GRP_Income2 + 0.3291591268929 * GRP_Income3 + 0.00612929517663 * GRP_Income4 +
-0.23329153390557 * GRP_Mnt2 + -0.08800204437411 * GRP_Mnt3 + -0.08445529701198 * GRP_Mnt4 +
0.28673732624133 * GRP_MntFishProducts2 + -0.14978605827752 * GRP_MntFishProducts3 +
0.22642470616542 * GRP_MntFishProducts4 + 0.07604404821672 * GRP_MntGoldProds2 +
0.04745212568332 * GRP_MntGoldProds3 + -0.10028215217028 * GRP_MntGoldProds4 +
-0.07377682497053 * GRP_MntMeatProducts2 + -0.09960214357487 * GRP_MntMeatProducts3 +
-0.25438120582859 * GRP_MntMeatProducts4 + 0.42639299324809 * GRP_MntWines2 + 0.31089292559786
* GRP_MntWines3 + -0.26826041457934 * GRP_MntWines4 + -0.53742609478771 *
GRP_NumCatalogPurchases3 + -0.03023603128161 * GRP_NumCatalogPurchases4 + -0.37743946252805 *
GRP_NumDistPurchases2 + -0.01872647257623 * GRP_NumDistPurchases3 + -0.31993024737958 *
GRP_NumDistPurchases4 + -0.11078713164327 * GRP_NumWebPurchases2 + 0.24754701690398 *
GRP_NumWebPurchases3 + 0.01530465573539 * GRP_NumWebPurchases4 + -0.17630256491744 *
GRP_RFMstat2 + -0.47929093118323 * GRP_RFMstat3 + 0.26729201021061 * GRP_RFMstat4 +
-0.20197995708067 * GRP_RMntFrq2 + -0.07138949090838 * GRP_RMntFrq3 + -0.08653988697814 *
GRP_RMntFrq4 + 1.10790516734526 * GRP_Recency2 + 0.22440369463671 * GRP_Recency3 +
-0.44624012521308 * GRP_Recency4 ;
211489    +   H12  = H12  +    -0.39171353947494 * GRP_AcceptedCmp52
211490    +          +     0.47539355981113 * GRP_Frq2  +     0.13865083322043 * GRP_Frq3
211491    +          +     0.07826446095659 * GRP_Frq4  +     0.08299165408218 *
211492    +        GRP_Income2  +     0.19385348399904 * GRP_Income3
211493    +          +     -0.4686130167393 * GRP_Income4  +     0.07036992149948 *
211494    +        GRP_Mnt2  +     0.03891677493503 * GRP_Mnt3  +     0.07820077346387 *
211495    +        GRP_Mnt4  +     0.36400126236983 * GRP_MntFishProducts2
211496    +          +    -0.12626287803422 * GRP_MntFishProducts3
211497    +          +    -0.42885022606866 * GRP_MntFishProducts4
211498    +          +    -0.08312331608509 * GRP_MntGoldProds2
211499    +          +    -0.20061238652989 * GRP_MntGoldProds3
211500    +          +      0.2540651659901 * GRP_MntGoldProds4
211501    +          +    -0.05377938516186 * GRP_MntMeatProducts2
211502    +          +    -0.20960578757846 * GRP_MntMeatProducts3
211503    +          +     0.40616704937625 * GRP_MntMeatProducts4
211504    +          +     0.10444770584156 * GRP_MntWines2  +     0.28632714955895 *
211505    +        GRP_MntWines3  +     -0.0752487603973 * GRP_MntWines4
211506    +          +    -0.34375303246386 * GRP_NumCatalogPurchases3
211507    +          +     0.09580710843179 * GRP_NumCatalogPurchases4
211508    +          +    -0.07273864038222 * GRP_NumDistPurchases2
211509    +          +     0.10966715611059 * GRP_NumDistPurchases3
211510    +          +      -0.043035493739 * GRP_NumDistPurchases4
211511    +          +    -0.11780256604927 * GRP_NumWebPurchases2
211512    +          +    -0.18165047164828 * GRP_NumWebPurchases3
211513    +          +     0.26936545488609 * GRP_NumWebPurchases4
211514    +          +    -0.06874165804548 * GRP_RFMstat2  +     0.09298117986488 *
211515    +        GRP_RFMstat3  +    -0.24177720125931 * GRP_RFMstat4
211516    +          +    -0.06280623207978 * GRP_RMntFrq2  +     0.01871815739589 *
211517    +        GRP_RMntFrq3  +    -0.14308267957716 * GRP_RMntFrq4
211518    +          +     0.34467425877566 * GRP_Recency2  +     0.05820913643645 *
211519    +        GRP_Recency3  +     -0.0454148085012 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.39171353947494 * GRP_AcceptedCmp52 + 0.47539355981113 *
GRP_Frq2 + 0.13865083322043 * GRP_Frq3 + 0.07826446095659 * GRP_Frq4 + 0.08299165408218 *
GRP_Income2 + 0.19385348399904 * GRP_Income3 + -0.4686130167393 * GRP_Income4 +
0.07036992149948 * GRP_Mnt2 + 0.03891677493503 * GRP_Mnt3 + 0.07820077346387 * GRP_Mnt4 +
0.36400126236983 * GRP_MntFishProducts2 + -0.12626287803422 * GRP_MntFishProducts3 +
-0.42885022606866 * GRP_MntFishProducts4 + -0.08312331608509 * GRP_MntGoldProds2 +
-0.20061238652989 * GRP_MntGoldProds3 + 0.2540651659901 * GRP_MntGoldProds4 +
-0.05377938516186 * GRP_MntMeatProducts2 + -0.20960578757846 * GRP_MntMeatProducts3 +
0.40616704937625 * GRP_MntMeatProducts4 + 0.10444770584156 * GRP_MntWines2 + 0.28632714955895
* GRP_MntWines3 + -0.0752487603973 * GRP_MntWines4 + -0.34375303246386 *
GRP_NumCatalogPurchases3 + 0.09580710843179 * GRP_NumCatalogPurchases4 + -0.07273864038222 *
GRP_NumDistPurchases2 + 0.10966715611059 * GRP_NumDistPurchases3 + -0.043035493739 *
GRP_NumDistPurchases4 + -0.11780256604927 * GRP_NumWebPurchases2 + -0.18165047164828 *
GRP_NumWebPurchases3 + 0.26936545488609 * GRP_NumWebPurchases4 + -0.06874165804548 *
GRP_RFMstat2 + 0.09298117986488 * GRP_RFMstat3 + -0.24177720125931 * GRP_RFMstat4 +
-0.06280623207978 * GRP_RMntFrq2 + 0.01871815739589 * GRP_RMntFrq3 + -0.14308267957716 *
GRP_RMntFrq4 + 0.34467425877566 * GRP_Recency2 + 0.05820913643645 * GRP_Recency3 +
-0.0454148085012 * GRP_Recency4 ;
211520    +   H13  = H13  +    -0.08768819217047 * GRP_AcceptedCmp52
211521    +          +     0.44895652806962 * GRP_Frq2  +      0.3800586670059 * GRP_Frq3
211522    +          +    -0.07849333722318 * GRP_Frq4  +     0.61398939980043 *
211523    +        GRP_Income2  +     0.47732933105902 * GRP_Income3
211524    +          +    -0.46767598050409 * GRP_Income4  +     0.00119742402812 *
211525    +        GRP_Mnt2  +     0.28434487319801 * GRP_Mnt3  +    -0.16337373090226 *
211526    +        GRP_Mnt4  +     0.24731982804653 * GRP_MntFishProducts2
211527    +          +     0.07001619920815 * GRP_MntFishProducts3
211528    +          +     0.07735498521359 * GRP_MntFishProducts4
211529    +          +    -0.15884098938162 * GRP_MntGoldProds2
211530    +          +    -0.27657428867783 * GRP_MntGoldProds3
211531    +          +     -0.1812542301124 * GRP_MntGoldProds4
211532    +          +    -0.05299867036647 * GRP_MntMeatProducts2
211533    +          +     0.00010942539908 * GRP_MntMeatProducts3
211534    +          +     0.03587382246671 * GRP_MntMeatProducts4
211535    +          +      0.1756484217323 * GRP_MntWines2  +     0.00289944116976 *
211536    +        GRP_MntWines3  +    -0.03752905583429 * GRP_MntWines4
211537    +          +     0.14681010085531 * GRP_NumCatalogPurchases3
211538    +          +    -0.23177792190553 * GRP_NumCatalogPurchases4
211539    +          +      -0.481887498986 * GRP_NumDistPurchases2
211540    +          +    -0.09943718589693 * GRP_NumDistPurchases3
211541    +          +     0.21760620991618 * GRP_NumDistPurchases4
211542    +          +    -0.09523799103665 * GRP_NumWebPurchases2
211543    +          +     0.06245025753157 * GRP_NumWebPurchases3
211544    +          +     0.11312469123111 * GRP_NumWebPurchases4
211545    +          +     -0.0156924842698 * GRP_RFMstat2  +     0.04329307564553 *
211546    +        GRP_RFMstat3  +    -0.06522539538042 * GRP_RFMstat4
211547    +          +     0.03130432577469 * GRP_RMntFrq2  +     0.15385182155627 *
211548    +        GRP_RMntFrq3  +    -0.05116322369837 * GRP_RMntFrq4
211549    +          +     0.52385840277978 * GRP_Recency2  +     0.44348058106283 *
211550    +        GRP_Recency3  +    -0.30003743891847 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.08768819217047 * GRP_AcceptedCmp52 + 0.44895652806962 *
GRP_Frq2 + 0.3800586670059 * GRP_Frq3 + -0.07849333722318 * GRP_Frq4 + 0.61398939980043 *
GRP_Income2 + 0.47732933105902 * GRP_Income3 + -0.46767598050409 * GRP_Income4 +
0.00119742402812 * GRP_Mnt2 + 0.28434487319801 * GRP_Mnt3 + -0.16337373090226 * GRP_Mnt4 +
0.24731982804653 * GRP_MntFishProducts2 + 0.07001619920815 * GRP_MntFishProducts3 +
0.07735498521359 * GRP_MntFishProducts4 + -0.15884098938162 * GRP_MntGoldProds2 +
-0.27657428867783 * GRP_MntGoldProds3 + -0.1812542301124 * GRP_MntGoldProds4 +
-0.05299867036647 * GRP_MntMeatProducts2 + 0.00010942539908 * GRP_MntMeatProducts3 +
0.03587382246671 * GRP_MntMeatProducts4 + 0.1756484217323 * GRP_MntWines2 + 0.00289944116976 *
GRP_MntWines3 + -0.03752905583429 * GRP_MntWines4 + 0.14681010085531 *
GRP_NumCatalogPurchases3 + -0.23177792190553 * GRP_NumCatalogPurchases4 + -0.481887498986 *
GRP_NumDistPurchases2 + -0.09943718589693 * GRP_NumDistPurchases3 + 0.21760620991618 *
GRP_NumDistPurchases4 + -0.09523799103665 * GRP_NumWebPurchases2 + 0.06245025753157 *
GRP_NumWebPurchases3 + 0.11312469123111 * GRP_NumWebPurchases4 + -0.0156924842698 *
GRP_RFMstat2 + 0.04329307564553 * GRP_RFMstat3 + -0.06522539538042 * GRP_RFMstat4 +
0.03130432577469 * GRP_RMntFrq2 + 0.15385182155627 * GRP_RMntFrq3 + -0.05116322369837 *
GRP_RMntFrq4 + 0.52385840277978 * GRP_Recency2 + 0.44348058106283 * GRP_Recency3 +
-0.30003743891847 * GRP_Recency4 ;
211551    +   H14  = H14  +    -0.30891588421078 * GRP_AcceptedCmp52
211552    +          +     0.10101143238536 * GRP_Frq2  +    -0.03148220138998 * GRP_Frq3
211553    +          +     0.09807803608029 * GRP_Frq4  +     0.11294471318052 *
211554    +        GRP_Income2  +      0.0433560034099 * GRP_Income3
211555    +          +    -0.35503487261838 * GRP_Income4  +     0.15199410100967 *
211556    +        GRP_Mnt2  +    -0.15675008677561 * GRP_Mnt3  +    -0.06110606567063 *
211557    +        GRP_Mnt4  +     0.10272197664106 * GRP_MntFishProducts2
211558    +          +     0.33369645018356 * GRP_MntFishProducts3
211559    +          +     0.08427214551103 * GRP_MntFishProducts4
211560    +          +    -0.36187933889617 * GRP_MntGoldProds2
211561    +          +      0.1522584097588 * GRP_MntGoldProds3
211562    +          +    -0.18069803129722 * GRP_MntGoldProds4
211563    +          +    -0.39829328143793 * GRP_MntMeatProducts2
211564    +          +     0.00511939388608 * GRP_MntMeatProducts3
211565    +          +      0.0518722466688 * GRP_MntMeatProducts4
211566    +          +     0.10413724420858 * GRP_MntWines2  +    -0.30183392073068 *
211567    +        GRP_MntWines3  +    -0.40546180997599 * GRP_MntWines4
211568    +          +    -0.73564355192687 * GRP_NumCatalogPurchases3
211569    +          +     0.04239157662699 * GRP_NumCatalogPurchases4
211570    +          +    -0.61448773428482 * GRP_NumDistPurchases2
211571    +          +    -0.10817170519054 * GRP_NumDistPurchases3
211572    +          +    -0.00883878051452 * GRP_NumDistPurchases4
211573    +          +      0.0024401108853 * GRP_NumWebPurchases2
211574    +          +     -0.1066188825276 * GRP_NumWebPurchases3
211575    +          +     -0.2845728776007 * GRP_NumWebPurchases4
211576    +          +    -0.46846387193519 * GRP_RFMstat2  +     0.01548835288752 *
211577    +        GRP_RFMstat3  +     0.29056719482503 * GRP_RFMstat4
211578    +          +     0.13283388675843 * GRP_RMntFrq2  +    -0.01179035894062 *
211579    +        GRP_RMntFrq3  +    -0.40979674551139 * GRP_RMntFrq4
211580    +          +     0.39674687653317 * GRP_Recency2  +     0.48674783005161 *
211581    +        GRP_Recency3  +     0.19384397786172 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30891588421078 * GRP_AcceptedCmp52 + 0.10101143238536 *
GRP_Frq2 + -0.03148220138998 * GRP_Frq3 + 0.09807803608029 * GRP_Frq4 + 0.11294471318052 *
GRP_Income2 + 0.0433560034099 * GRP_Income3 + -0.35503487261838 * GRP_Income4 +
0.15199410100967 * GRP_Mnt2 + -0.15675008677561 * GRP_Mnt3 + -0.06110606567063 * GRP_Mnt4 +
0.10272197664106 * GRP_MntFishProducts2 + 0.33369645018356 * GRP_MntFishProducts3 +
0.08427214551103 * GRP_MntFishProducts4 + -0.36187933889617 * GRP_MntGoldProds2 +
0.1522584097588 * GRP_MntGoldProds3 + -0.18069803129722 * GRP_MntGoldProds4 +
-0.39829328143793 * GRP_MntMeatProducts2 + 0.00511939388608 * GRP_MntMeatProducts3 +
0.0518722466688 * GRP_MntMeatProducts4 + 0.10413724420858 * GRP_MntWines2 + -0.30183392073068
* GRP_MntWines3 + -0.40546180997599 * GRP_MntWines4 + -0.73564355192687 *
GRP_NumCatalogPurchases3 + 0.04239157662699 * GRP_NumCatalogPurchases4 + -0.61448773428482 *
GRP_NumDistPurchases2 + -0.10817170519054 * GRP_NumDistPurchases3 + -0.00883878051452 *
GRP_NumDistPurchases4 + 0.0024401108853 * GRP_NumWebPurchases2 + -0.1066188825276 *
GRP_NumWebPurchases3 + -0.2845728776007 * GRP_NumWebPurchases4 + -0.46846387193519 *
GRP_RFMstat2 + 0.01548835288752 * GRP_RFMstat3 + 0.29056719482503 * GRP_RFMstat4 +
0.13283388675843 * GRP_RMntFrq2 + -0.01179035894062 * GRP_RMntFrq3 + -0.40979674551139 *
GRP_RMntFrq4 + 0.39674687653317 * GRP_Recency2 + 0.48674783005161 * GRP_Recency3 +
0.19384397786172 * GRP_Recency4 ;
211582    +   H11  =    -1.18381596942405 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.18381596942405 + H11 ;
211583    +   H12  =     0.86336963287203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.86336963287203 + H12 ;
211584    +   H13  =     -0.9724199391604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.9724199391604 + H13 ;
211585    +   H14  =     1.35533016839911 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.35533016839911 + H14 ;
211586    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
211587    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
211588    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
211589    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
211590    +END;
MPRINT(EM_DIAGRAM):   END;
211591    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
211592    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
211593    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
211594    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
211595    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
211596    +END;
MPRINT(EM_DIAGRAM):   END;
211597    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211598    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
211599    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211600    +
211601    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
211602    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
211603    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
211604    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
211605    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
211606    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211607    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
211608    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
211609    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
211610    +end;
MPRINT(EM_DIAGRAM):   end;
211611    +else do;
MPRINT(EM_DIAGRAM):   else do;
211612    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
211613    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
211614    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
211615    +   end;
MPRINT(EM_DIAGRAM):   end;
211616    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
211617    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
211618    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
211619    +   end;
MPRINT(EM_DIAGRAM):   end;
211620    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211621    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
211622    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
211623    +   end;
MPRINT(EM_DIAGRAM):   end;
211624    +end;
MPRINT(EM_DIAGRAM):   end;
211625    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
211626    +   P_DepVar1  =     2.12648206014408 * H11  +      1.4206902210932 * H12
211627    +          +     1.21164854880393 * H13  +      1.5803543453738 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.12648206014408 * H11 + 1.4206902210932 * H12 +
1.21164854880393 * H13 + 1.5803543453738 * H14 ;
211628    +   P_DepVar1  =    -1.66515506353131 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66515506353131 + P_DepVar1 ;
211629    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
211630    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
211631    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
211632    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
211633    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
211634    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
211635    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
211636    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
211637    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
211638    +END;
MPRINT(EM_DIAGRAM):   END;
211639    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
211640    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
211641    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
211642    +END;
MPRINT(EM_DIAGRAM):   END;
211643    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
211644    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
211645    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
211646    +END;
MPRINT(EM_DIAGRAM):   END;
211647    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
211648    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
211649    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
211650    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
211651    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
211652    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
211653    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
211654    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211655    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
211656    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
211657    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
211658    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
211659    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
211660    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
211661    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
211662    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
211663    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
211664    +END;
MPRINT(EM_DIAGRAM):   END;
211665    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
211666    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
211667    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
211668    +drop
211669    +H11
211670    +H12
211671    +H13
211672    +H14
211673    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
211674    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
211675    +* Renaming variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural21;
211676    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
211677    +* Renaming Posterior variables for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural21;
211678    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
211679    +drop Neural21_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar1;
211680    +Neural21_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar1 = P_DepVar1;
211681    +drop Neural21_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural21_P_DepVar0;
211682    +Neural21_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural21_P_DepVar0 = P_DepVar0;
211683    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
211684    +* Renaming _WARN_ variable for Neural21;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural21;
211685    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
211686    +length Neural21_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural21_WARN_ $4;
211687    +drop Neural21_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural21_WARN_;
211688    +Neural21_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural21_WARN_ = _WARN_;
211689    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
211690    +* Ensmbl18: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Scoring Code of model 3 of 7;
211691    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
211692    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
211693    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
211694    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
211695    +* NODE: Neural18;
MPRINT(EM_DIAGRAM):   * NODE: Neural18;
211696    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
211697    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
211698    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
211699    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
211700    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
211701    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
211702    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
211703    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
211704    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
211705    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
211706    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
211707    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
211708    +LENGTH _WARN_ $4
211709    +      F_DepVar  $ 12
211710    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
211711    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
211712    +
211713    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
211714    +
211715    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
211716    +
211717    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
211718    +
211719    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
211720    +
211721    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
211722    +
211723    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
211724    +
211725    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
211726    +
211727    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
211728    +
211729    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
211730    +
211731    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
211732    +
211733    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
211734    +
211735    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
211736    +
211737    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
211738    +
211739    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
211740    +
211741    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
211742    +
211743    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
211744    +
211745    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
211746    +
211747    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
211748    +
211749    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
211750    +
211751    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
211752    +
211753    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
211754    +
211755    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
211756    +
211757    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
211758    +
211759    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
211760    +
211761    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
211762    +
211763    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
211764    +
211765    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
211766    +
211767    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
211768    +
211769    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
211770    +
211771    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
211772    +
211773    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
211774    +
211775    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
211776    +
211777    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
211778    +
211779    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
211780    +
211781    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
211782    +
211783    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
211784    +
211785    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
211786    +
211787    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
211788    +
211789    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
211790    +
211791    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
211792    +
211793    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
211794    +
211795    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
211796    +
211797    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
211798    +
211799    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
211800    +
211801    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
211802    +
211803    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
211804    +
211805    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
211806    +
211807    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
211808    +
211809    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
211810    +
211811    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
211812    +
211813    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
211814    +
211815    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
211816    +
211817    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
211818    +
211819    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
211820    +
211821    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
211822    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
211823    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
211824    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
211825    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211826    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211827    +end;
MPRINT(EM_DIAGRAM):   end;
211828    +else do;
MPRINT(EM_DIAGRAM):   else do;
211829    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211830    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
211831    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211832    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
211833    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
211834    +   end;
MPRINT(EM_DIAGRAM):   end;
211835    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
211836    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
211837    +   end;
MPRINT(EM_DIAGRAM):   end;
211838    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211839    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
211840    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211841    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211842    +   end;
MPRINT(EM_DIAGRAM):   end;
211843    +end;
MPRINT(EM_DIAGRAM):   end;
211844    +
211845    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
211846    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
211847    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
211848    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
211849    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
211850    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
211851    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211852    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211853    +end;
MPRINT(EM_DIAGRAM):   end;
211854    +else do;
MPRINT(EM_DIAGRAM):   else do;
211855    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211856    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
211857    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211858    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
211859    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
211860    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
211861    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
211862    +   end;
MPRINT(EM_DIAGRAM):   end;
211863    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
211864    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
211865    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
211866    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
211867    +   end;
MPRINT(EM_DIAGRAM):   end;
211868    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
211869    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
211870    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
211871    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
211872    +   end;
MPRINT(EM_DIAGRAM):   end;
211873    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
211874    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
211875    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
211876    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
211877    +   end;
MPRINT(EM_DIAGRAM):   end;
211878    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211879    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
211880    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
211881    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
211882    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211883    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211884    +   end;
MPRINT(EM_DIAGRAM):   end;
211885    +end;
MPRINT(EM_DIAGRAM):   end;
211886    +
211887    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
211888    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
211889    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
211890    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
211891    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
211892    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
211893    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211894    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211895    +end;
MPRINT(EM_DIAGRAM):   end;
211896    +else do;
MPRINT(EM_DIAGRAM):   else do;
211897    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211898    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
211899    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211900    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
211901    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
211902    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
211903    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
211904    +   end;
MPRINT(EM_DIAGRAM):   end;
211905    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
211906    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
211907    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
211908    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
211909    +   end;
MPRINT(EM_DIAGRAM):   end;
211910    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
211911    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
211912    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
211913    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
211914    +   end;
MPRINT(EM_DIAGRAM):   end;
211915    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
211916    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
211917    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
211918    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
211919    +   end;
MPRINT(EM_DIAGRAM):   end;
211920    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211921    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
211922    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
211923    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
211924    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211925    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211926    +   end;
MPRINT(EM_DIAGRAM):   end;
211927    +end;
MPRINT(EM_DIAGRAM):   end;
211928    +
211929    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
211930    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
211931    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
211932    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
211933    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
211934    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
211935    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211936    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211937    +end;
MPRINT(EM_DIAGRAM):   end;
211938    +else do;
MPRINT(EM_DIAGRAM):   else do;
211939    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211940    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
211941    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211942    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
211943    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
211944    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
211945    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
211946    +   end;
MPRINT(EM_DIAGRAM):   end;
211947    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
211948    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
211949    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
211950    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
211951    +   end;
MPRINT(EM_DIAGRAM):   end;
211952    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
211953    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
211954    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
211955    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
211956    +   end;
MPRINT(EM_DIAGRAM):   end;
211957    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
211958    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
211959    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
211960    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
211961    +   end;
MPRINT(EM_DIAGRAM):   end;
211962    +   else do;
MPRINT(EM_DIAGRAM):   else do;
211963    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
211964    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
211965    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
211966    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
211967    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211968    +   end;
MPRINT(EM_DIAGRAM):   end;
211969    +end;
MPRINT(EM_DIAGRAM):   end;
211970    +
211971    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
211972    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
211973    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
211974    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
211975    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
211976    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
211977    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
211978    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
211979    +end;
MPRINT(EM_DIAGRAM):   end;
211980    +else do;
MPRINT(EM_DIAGRAM):   else do;
211981    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
211982    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
211983    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
211984    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
211985    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
211986    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
211987    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
211988    +   end;
MPRINT(EM_DIAGRAM):   end;
211989    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
211990    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
211991    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
211992    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
211993    +   end;
MPRINT(EM_DIAGRAM):   end;
211994    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
211995    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
211996    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
211997    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
211998    +   end;
MPRINT(EM_DIAGRAM):   end;
211999    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
212000    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
212001    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
212002    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
212003    +   end;
MPRINT(EM_DIAGRAM):   end;
212004    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212005    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
212006    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
212007    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
212008    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212009    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212010    +   end;
MPRINT(EM_DIAGRAM):   end;
212011    +end;
MPRINT(EM_DIAGRAM):   end;
212012    +
212013    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
212014    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
212015    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
212016    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
212017    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
212018    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
212019    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212020    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212021    +end;
MPRINT(EM_DIAGRAM):   end;
212022    +else do;
MPRINT(EM_DIAGRAM):   else do;
212023    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
212024    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
212025    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212026    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
212027    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
212028    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
212029    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
212030    +   end;
MPRINT(EM_DIAGRAM):   end;
212031    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
212032    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
212033    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
212034    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
212035    +   end;
MPRINT(EM_DIAGRAM):   end;
212036    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
212037    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
212038    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
212039    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
212040    +   end;
MPRINT(EM_DIAGRAM):   end;
212041    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
212042    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
212043    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
212044    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
212045    +   end;
MPRINT(EM_DIAGRAM):   end;
212046    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212047    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
212048    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
212049    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
212050    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212051    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212052    +   end;
MPRINT(EM_DIAGRAM):   end;
212053    +end;
MPRINT(EM_DIAGRAM):   end;
212054    +
212055    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
212056    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
212057    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
212058    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
212059    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
212060    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
212061    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212062    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212063    +end;
MPRINT(EM_DIAGRAM):   end;
212064    +else do;
MPRINT(EM_DIAGRAM):   else do;
212065    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
212066    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
212067    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212068    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
212069    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
212070    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
212071    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
212072    +   end;
MPRINT(EM_DIAGRAM):   end;
212073    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
212074    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
212075    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
212076    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
212077    +   end;
MPRINT(EM_DIAGRAM):   end;
212078    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
212079    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
212080    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
212081    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
212082    +   end;
MPRINT(EM_DIAGRAM):   end;
212083    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
212084    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
212085    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
212086    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
212087    +   end;
MPRINT(EM_DIAGRAM):   end;
212088    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212089    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
212090    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
212091    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
212092    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212093    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212094    +   end;
MPRINT(EM_DIAGRAM):   end;
212095    +end;
MPRINT(EM_DIAGRAM):   end;
212096    +
212097    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
212098    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
212099    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
212100    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
212101    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
212102    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
212103    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212104    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212105    +end;
MPRINT(EM_DIAGRAM):   end;
212106    +else do;
MPRINT(EM_DIAGRAM):   else do;
212107    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
212108    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
212109    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212110    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
212111    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
212112    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
212113    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
212114    +   end;
MPRINT(EM_DIAGRAM):   end;
212115    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
212116    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
212117    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
212118    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
212119    +   end;
MPRINT(EM_DIAGRAM):   end;
212120    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
212121    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
212122    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
212123    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
212124    +   end;
MPRINT(EM_DIAGRAM):   end;
212125    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
212126    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
212127    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
212128    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
212129    +   end;
MPRINT(EM_DIAGRAM):   end;
212130    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212131    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
212132    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
212133    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
212134    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212135    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212136    +   end;
MPRINT(EM_DIAGRAM):   end;
212137    +end;
MPRINT(EM_DIAGRAM):   end;
212138    +
212139    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
212140    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
212141    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
212142    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
212143    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
212144    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212145    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212146    +end;
MPRINT(EM_DIAGRAM):   end;
212147    +else do;
MPRINT(EM_DIAGRAM):   else do;
212148    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
212149    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
212150    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212151    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
212152    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
212153    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
212154    +   end;
MPRINT(EM_DIAGRAM):   end;
212155    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
212156    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
212157    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
212158    +   end;
MPRINT(EM_DIAGRAM):   end;
212159    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
212160    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
212161    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
212162    +   end;
MPRINT(EM_DIAGRAM):   end;
212163    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212164    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
212165    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
212166    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212167    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212168    +   end;
MPRINT(EM_DIAGRAM):   end;
212169    +end;
MPRINT(EM_DIAGRAM):   end;
212170    +
212171    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
212172    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
212173    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
212174    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
212175    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
212176    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
212177    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212178    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212179    +end;
MPRINT(EM_DIAGRAM):   end;
212180    +else do;
MPRINT(EM_DIAGRAM):   else do;
212181    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
212182    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
212183    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212184    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
212185    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
212186    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
212187    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
212188    +   end;
MPRINT(EM_DIAGRAM):   end;
212189    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
212190    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
212191    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
212192    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
212193    +   end;
MPRINT(EM_DIAGRAM):   end;
212194    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
212195    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
212196    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
212197    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
212198    +   end;
MPRINT(EM_DIAGRAM):   end;
212199    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
212200    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
212201    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
212202    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
212203    +   end;
MPRINT(EM_DIAGRAM):   end;
212204    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212205    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
212206    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
212207    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
212208    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212209    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212210    +   end;
MPRINT(EM_DIAGRAM):   end;
212211    +end;
MPRINT(EM_DIAGRAM):   end;
212212    +
212213    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
212214    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
212215    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
212216    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
212217    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
212218    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
212219    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212220    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212221    +end;
MPRINT(EM_DIAGRAM):   end;
212222    +else do;
MPRINT(EM_DIAGRAM):   else do;
212223    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
212224    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
212225    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212226    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
212227    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
212228    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
212229    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
212230    +   end;
MPRINT(EM_DIAGRAM):   end;
212231    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
212232    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
212233    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
212234    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
212235    +   end;
MPRINT(EM_DIAGRAM):   end;
212236    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
212237    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
212238    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
212239    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
212240    +   end;
MPRINT(EM_DIAGRAM):   end;
212241    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
212242    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
212243    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
212244    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
212245    +   end;
MPRINT(EM_DIAGRAM):   end;
212246    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212247    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
212248    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
212249    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
212250    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212251    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212252    +   end;
MPRINT(EM_DIAGRAM):   end;
212253    +end;
MPRINT(EM_DIAGRAM):   end;
212254    +
212255    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
212256    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
212257    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
212258    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
212259    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
212260    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
212261    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212262    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212263    +end;
MPRINT(EM_DIAGRAM):   end;
212264    +else do;
MPRINT(EM_DIAGRAM):   else do;
212265    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
212266    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
212267    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212268    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
212269    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
212270    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
212271    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
212272    +   end;
MPRINT(EM_DIAGRAM):   end;
212273    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
212274    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
212275    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
212276    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
212277    +   end;
MPRINT(EM_DIAGRAM):   end;
212278    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
212279    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
212280    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
212281    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
212282    +   end;
MPRINT(EM_DIAGRAM):   end;
212283    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
212284    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
212285    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
212286    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
212287    +   end;
MPRINT(EM_DIAGRAM):   end;
212288    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212289    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
212290    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
212291    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
212292    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212293    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212294    +   end;
MPRINT(EM_DIAGRAM):   end;
212295    +end;
MPRINT(EM_DIAGRAM):   end;
212296    +
212297    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
212298    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
212299    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
212300    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
212301    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
212302    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
212303    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212304    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212305    +end;
MPRINT(EM_DIAGRAM):   end;
212306    +else do;
MPRINT(EM_DIAGRAM):   else do;
212307    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
212308    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
212309    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212310    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
212311    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
212312    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
212313    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
212314    +   end;
MPRINT(EM_DIAGRAM):   end;
212315    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
212316    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
212317    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
212318    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
212319    +   end;
MPRINT(EM_DIAGRAM):   end;
212320    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
212321    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
212322    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
212323    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
212324    +   end;
MPRINT(EM_DIAGRAM):   end;
212325    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
212326    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
212327    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
212328    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
212329    +   end;
MPRINT(EM_DIAGRAM):   end;
212330    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212331    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
212332    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
212333    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
212334    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212335    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212336    +   end;
MPRINT(EM_DIAGRAM):   end;
212337    +end;
MPRINT(EM_DIAGRAM):   end;
212338    +
212339    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
212340    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
212341    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
212342    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
212343    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
212344    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
212345    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212346    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212347    +end;
MPRINT(EM_DIAGRAM):   end;
212348    +else do;
MPRINT(EM_DIAGRAM):   else do;
212349    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
212350    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
212351    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212352    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
212353    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
212354    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
212355    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
212356    +   end;
MPRINT(EM_DIAGRAM):   end;
212357    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
212358    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
212359    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
212360    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
212361    +   end;
MPRINT(EM_DIAGRAM):   end;
212362    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
212363    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
212364    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
212365    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
212366    +   end;
MPRINT(EM_DIAGRAM):   end;
212367    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
212368    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
212369    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
212370    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
212371    +   end;
MPRINT(EM_DIAGRAM):   end;
212372    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212373    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
212374    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
212375    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
212376    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212377    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212378    +   end;
MPRINT(EM_DIAGRAM):   end;
212379    +end;
MPRINT(EM_DIAGRAM):   end;
212380    +
212381    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212382    +*** Checking missing input Interval
212383    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
212384    +
212385    +IF NMISS(
212386    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
212387    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
212388    +
212389    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212390    +END;
MPRINT(EM_DIAGRAM):   END;
212391    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212392    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
212393    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212394    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
212395    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
212396    +END;
MPRINT(EM_DIAGRAM):   END;
212397    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
212398    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
212399    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
212400    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
212401    +END;
MPRINT(EM_DIAGRAM):   END;
212402    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212403    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
212404    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212405    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212406    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
212407    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212408    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
212409    +   H11  =     0.03855897145156 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.03855897145156 * S_Year_Birth ;
212410    +   H12  =      0.4940754340088 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.4940754340088 * S_Year_Birth ;
212411    +   H13  =     0.17524137660647 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.17524137660647 * S_Year_Birth ;
212412    +   H14  =     0.27270757044038 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.27270757044038 * S_Year_Birth ;
212413    +   H15  =    -0.02127353119313 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.02127353119313 * S_Year_Birth ;
212414    +   H16  =    -0.10595973365564 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = -0.10595973365564 * S_Year_Birth ;
212415    +   H17  =    -0.11271332681901 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = -0.11271332681901 * S_Year_Birth ;
212416    +   H11  = H11  +     0.21558790598329 * GRP_AcceptedCmp52
212417    +          +    -0.07145572032882 * GRP_Frq2  +     0.09268595548153 * GRP_Frq3
212418    +          +    -0.20765463263399 * GRP_Frq4  +    -0.00887637988838 *
212419    +        GRP_Income2  +    -0.34198008097003 * GRP_Income3
212420    +          +     0.00518173450113 * GRP_Income4  +     0.17153998784849 *
212421    +        GRP_Mnt2  +    -0.03282863464194 * GRP_Mnt3  +     0.15479242768387 *
212422    +        GRP_Mnt4  +    -0.14566682947772 * GRP_MntFishProducts2
212423    +          +    -0.04697385312971 * GRP_MntFishProducts3
212424    +          +     0.05477300056491 * GRP_MntFishProducts4
212425    +          +    -0.21182877070793 * GRP_MntGoldProds2
212426    +          +    -0.06202001203906 * GRP_MntGoldProds3
212427    +          +    -0.23297283739715 * GRP_MntGoldProds4
212428    +          +    -0.27072080481215 * GRP_MntMeatProducts2
212429    +          +     -0.0879595975531 * GRP_MntMeatProducts3
212430    +          +     0.01711044358319 * GRP_MntMeatProducts4
212431    +          +     0.01568057691806 * GRP_MntWines2  +    -0.14454572309741 *
212432    +        GRP_MntWines3  +      0.1665968837033 * GRP_MntWines4
212433    +          +    -0.24980039994544 * GRP_NumCatalogPurchases3
212434    +          +    -0.00199030871063 * GRP_NumCatalogPurchases4
212435    +          +     0.11565917560156 * GRP_NumDistPurchases2
212436    +          +      0.1678532898895 * GRP_NumDistPurchases3
212437    +          +     -0.0338568889009 * GRP_NumDistPurchases4
212438    +          +     0.09970745707934 * GRP_NumWebPurchases2
212439    +          +     0.02961221360107 * GRP_NumWebPurchases3
212440    +          +     0.02261054892411 * GRP_NumWebPurchases4
212441    +          +     0.22891892518291 * GRP_RFMstat2  +     0.30720492174411 *
212442    +        GRP_RFMstat3  +     0.02558392907316 * GRP_RFMstat4
212443    +          +    -0.22752513596954 * GRP_RMntFrq2  +    -0.11010023712096 *
212444    +        GRP_RMntFrq3  +    -0.29294961809478 * GRP_RMntFrq4
212445    +          +     0.17323450297234 * GRP_Recency2  +    -0.02999008104866 *
212446    +        GRP_Recency3  +    -0.07522056103469 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21558790598329 * GRP_AcceptedCmp52 + -0.07145572032882 *
GRP_Frq2 + 0.09268595548153 * GRP_Frq3 + -0.20765463263399 * GRP_Frq4 + -0.00887637988838 *
GRP_Income2 + -0.34198008097003 * GRP_Income3 + 0.00518173450113 * GRP_Income4 +
0.17153998784849 * GRP_Mnt2 + -0.03282863464194 * GRP_Mnt3 + 0.15479242768387 * GRP_Mnt4 +
-0.14566682947772 * GRP_MntFishProducts2 + -0.04697385312971 * GRP_MntFishProducts3 +
0.05477300056491 * GRP_MntFishProducts4 + -0.21182877070793 * GRP_MntGoldProds2 +
-0.06202001203906 * GRP_MntGoldProds3 + -0.23297283739715 * GRP_MntGoldProds4 +
-0.27072080481215 * GRP_MntMeatProducts2 + -0.0879595975531 * GRP_MntMeatProducts3 +
0.01711044358319 * GRP_MntMeatProducts4 + 0.01568057691806 * GRP_MntWines2 + -0.14454572309741
* GRP_MntWines3 + 0.1665968837033 * GRP_MntWines4 + -0.24980039994544 *
GRP_NumCatalogPurchases3 + -0.00199030871063 * GRP_NumCatalogPurchases4 + 0.11565917560156 *
GRP_NumDistPurchases2 + 0.1678532898895 * GRP_NumDistPurchases3 + -0.0338568889009 *
GRP_NumDistPurchases4 + 0.09970745707934 * GRP_NumWebPurchases2 + 0.02961221360107 *
GRP_NumWebPurchases3 + 0.02261054892411 * GRP_NumWebPurchases4 + 0.22891892518291 *
GRP_RFMstat2 + 0.30720492174411 * GRP_RFMstat3 + 0.02558392907316 * GRP_RFMstat4 +
-0.22752513596954 * GRP_RMntFrq2 + -0.11010023712096 * GRP_RMntFrq3 + -0.29294961809478 *
GRP_RMntFrq4 + 0.17323450297234 * GRP_Recency2 + -0.02999008104866 * GRP_Recency3 +
-0.07522056103469 * GRP_Recency4 ;
212447    +   H12  = H12  +    -0.17475665685155 * GRP_AcceptedCmp52
212448    +          +     0.39850686717751 * GRP_Frq2  +     0.21273190324396 * GRP_Frq3
212449    +          +    -0.04292229763335 * GRP_Frq4  +     0.48189221687125 *
212450    +        GRP_Income2  +       0.757675062227 * GRP_Income3
212451    +          +    -0.31438345261512 * GRP_Income4  +     0.08884755999997 *
212452    +        GRP_Mnt2  +     0.02891204793625 * GRP_Mnt3  +    -0.11500381143203 *
212453    +        GRP_Mnt4  +     0.47755891441547 * GRP_MntFishProducts2
212454    +          +     0.26645530981311 * GRP_MntFishProducts3
212455    +          +    -0.17631072283513 * GRP_MntFishProducts4
212456    +          +    -0.35439521021691 * GRP_MntGoldProds2
212457    +          +     0.11419663880206 * GRP_MntGoldProds3
212458    +          +     0.07288749113866 * GRP_MntGoldProds4
212459    +          +    -0.52191822126159 * GRP_MntMeatProducts2
212460    +          +    -0.08421627788812 * GRP_MntMeatProducts3
212461    +          +    -0.15930642038763 * GRP_MntMeatProducts4
212462    +          +     0.17420985773045 * GRP_MntWines2  +     0.21257483876123 *
212463    +        GRP_MntWines3  +    -0.13198840161443 * GRP_MntWines4
212464    +          +    -0.24725403471973 * GRP_NumCatalogPurchases3
212465    +          +     0.28574938745998 * GRP_NumCatalogPurchases4
212466    +          +     -0.4878996299474 * GRP_NumDistPurchases2
212467    +          +     0.10139595392447 * GRP_NumDistPurchases3
212468    +          +     0.05251891244468 * GRP_NumDistPurchases4
212469    +          +    -0.18486003226007 * GRP_NumWebPurchases2
212470    +          +      0.0263831646971 * GRP_NumWebPurchases3
212471    +          +     0.26495059708503 * GRP_NumWebPurchases4
212472    +          +    -0.16580006605432 * GRP_RFMstat2  +    -0.12537703875848 *
212473    +        GRP_RFMstat3  +      -0.100652416931 * GRP_RFMstat4
212474    +          +    -0.00913931308958 * GRP_RMntFrq2  +    -0.15758837200974 *
212475    +        GRP_RMntFrq3  +     -0.1198225533702 * GRP_RMntFrq4
212476    +          +       1.075902392162 * GRP_Recency2  +     0.44926983542925 *
212477    +        GRP_Recency3  +     -0.4970729472837 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.17475665685155 * GRP_AcceptedCmp52 + 0.39850686717751 *
GRP_Frq2 + 0.21273190324396 * GRP_Frq3 + -0.04292229763335 * GRP_Frq4 + 0.48189221687125 *
GRP_Income2 + 0.757675062227 * GRP_Income3 + -0.31438345261512 * GRP_Income4 +
0.08884755999997 * GRP_Mnt2 + 0.02891204793625 * GRP_Mnt3 + -0.11500381143203 * GRP_Mnt4 +
0.47755891441547 * GRP_MntFishProducts2 + 0.26645530981311 * GRP_MntFishProducts3 +
-0.17631072283513 * GRP_MntFishProducts4 + -0.35439521021691 * GRP_MntGoldProds2 +
0.11419663880206 * GRP_MntGoldProds3 + 0.07288749113866 * GRP_MntGoldProds4 +
-0.52191822126159 * GRP_MntMeatProducts2 + -0.08421627788812 * GRP_MntMeatProducts3 +
-0.15930642038763 * GRP_MntMeatProducts4 + 0.17420985773045 * GRP_MntWines2 + 0.21257483876123
* GRP_MntWines3 + -0.13198840161443 * GRP_MntWines4 + -0.24725403471973 *
GRP_NumCatalogPurchases3 + 0.28574938745998 * GRP_NumCatalogPurchases4 + -0.4878996299474 *
GRP_NumDistPurchases2 + 0.10139595392447 * GRP_NumDistPurchases3 + 0.05251891244468 *
GRP_NumDistPurchases4 + -0.18486003226007 * GRP_NumWebPurchases2 + 0.0263831646971 *
GRP_NumWebPurchases3 + 0.26495059708503 * GRP_NumWebPurchases4 + -0.16580006605432 *
GRP_RFMstat2 + -0.12537703875848 * GRP_RFMstat3 + -0.100652416931 * GRP_RFMstat4 +
-0.00913931308958 * GRP_RMntFrq2 + -0.15758837200974 * GRP_RMntFrq3 + -0.1198225533702 *
GRP_RMntFrq4 + 1.075902392162 * GRP_Recency2 + 0.44926983542925 * GRP_Recency3 +
-0.4970729472837 * GRP_Recency4 ;
212478    +   H13  = H13  +     0.00215688122529 * GRP_AcceptedCmp52
212479    +          +    -0.01427589791379 * GRP_Frq2  +    -0.13098496868755 * GRP_Frq3
212480    +          +    -0.30502313457201 * GRP_Frq4  +    -0.37973462663051 *
212481    +        GRP_Income2  +     0.00732780844057 * GRP_Income3
212482    +          +     0.53278328894406 * GRP_Income4  +     0.29819966041309 *
212483    +        GRP_Mnt2  +     0.25349727466129 * GRP_Mnt3  +     0.10579488290769 *
212484    +        GRP_Mnt4  +    -0.09288921771048 * GRP_MntFishProducts2
212485    +          +     0.02714802509094 * GRP_MntFishProducts3
212486    +          +     0.27119078554613 * GRP_MntFishProducts4
212487    +          +     0.19322428614339 * GRP_MntGoldProds2
212488    +          +     0.34778546410632 * GRP_MntGoldProds3
212489    +          +    -0.06570146779096 * GRP_MntGoldProds4
212490    +          +     0.44935275650977 * GRP_MntMeatProducts2
212491    +          +     0.00805794344265 * GRP_MntMeatProducts3
212492    +          +     0.02445782833023 * GRP_MntMeatProducts4
212493    +          +    -0.12082391878766 * GRP_MntWines2  +    -0.28739181733976 *
212494    +        GRP_MntWines3  +    -0.12417307544408 * GRP_MntWines4
212495    +          +     0.33901531634752 * GRP_NumCatalogPurchases3
212496    +          +     -0.0519425405532 * GRP_NumCatalogPurchases4
212497    +          +     0.03481806823908 * GRP_NumDistPurchases2
212498    +          +      0.0546202479864 * GRP_NumDistPurchases3
212499    +          +    -0.05240296080421 * GRP_NumDistPurchases4
212500    +          +     0.28307550964921 * GRP_NumWebPurchases2
212501    +          +     0.31503543231591 * GRP_NumWebPurchases3
212502    +          +     0.24817135719308 * GRP_NumWebPurchases4
212503    +          +    -0.05017370187238 * GRP_RFMstat2  +     0.08161239885611 *
212504    +        GRP_RFMstat3  +    -0.14085507706312 * GRP_RFMstat4
212505    +          +     0.11738278568714 * GRP_RMntFrq2  +     0.28471680928269 *
212506    +        GRP_RMntFrq3  +     0.46590886050772 * GRP_RMntFrq4
212507    +          +     -0.2318556486679 * GRP_Recency2  +    -0.37508297533514 *
212508    +        GRP_Recency3  +     0.05823801065489 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00215688122529 * GRP_AcceptedCmp52 + -0.01427589791379 *
GRP_Frq2 + -0.13098496868755 * GRP_Frq3 + -0.30502313457201 * GRP_Frq4 + -0.37973462663051 *
GRP_Income2 + 0.00732780844057 * GRP_Income3 + 0.53278328894406 * GRP_Income4 +
0.29819966041309 * GRP_Mnt2 + 0.25349727466129 * GRP_Mnt3 + 0.10579488290769 * GRP_Mnt4 +
-0.09288921771048 * GRP_MntFishProducts2 + 0.02714802509094 * GRP_MntFishProducts3 +
0.27119078554613 * GRP_MntFishProducts4 + 0.19322428614339 * GRP_MntGoldProds2 +
0.34778546410632 * GRP_MntGoldProds3 + -0.06570146779096 * GRP_MntGoldProds4 +
0.44935275650977 * GRP_MntMeatProducts2 + 0.00805794344265 * GRP_MntMeatProducts3 +
0.02445782833023 * GRP_MntMeatProducts4 + -0.12082391878766 * GRP_MntWines2 +
-0.28739181733976 * GRP_MntWines3 + -0.12417307544408 * GRP_MntWines4 + 0.33901531634752 *
GRP_NumCatalogPurchases3 + -0.0519425405532 * GRP_NumCatalogPurchases4 + 0.03481806823908 *
GRP_NumDistPurchases2 + 0.0546202479864 * GRP_NumDistPurchases3 + -0.05240296080421 *
GRP_NumDistPurchases4 + 0.28307550964921 * GRP_NumWebPurchases2 + 0.31503543231591 *
GRP_NumWebPurchases3 + 0.24817135719308 * GRP_NumWebPurchases4 + -0.05017370187238 *
GRP_RFMstat2 + 0.08161239885611 * GRP_RFMstat3 + -0.14085507706312 * GRP_RFMstat4 +
0.11738278568714 * GRP_RMntFrq2 + 0.28471680928269 * GRP_RMntFrq3 + 0.46590886050772 *
GRP_RMntFrq4 + -0.2318556486679 * GRP_Recency2 + -0.37508297533514 * GRP_Recency3 +
0.05823801065489 * GRP_Recency4 ;
212509    +   H14  = H14  +      0.4684617848987 * GRP_AcceptedCmp52
212510    +          +    -0.10078363733095 * GRP_Frq2  +     0.12187262992305 * GRP_Frq3
212511    +          +     0.06615581853287 * GRP_Frq4  +    -0.37438533196327 *
212512    +        GRP_Income2  +    -0.54951239852844 * GRP_Income3
212513    +          +     0.42517426076684 * GRP_Income4  +     0.01160451666213 *
212514    +        GRP_Mnt2  +    -0.19046851266656 * GRP_Mnt3  +    -0.22599863084471 *
212515    +        GRP_Mnt4  +     0.02252915755857 * GRP_MntFishProducts2
212516    +          +    -0.08997232581072 * GRP_MntFishProducts3
212517    +          +    -0.05669599356928 * GRP_MntFishProducts4
212518    +          +      0.2199150131909 * GRP_MntGoldProds2
212519    +          +     0.05584571259838 * GRP_MntGoldProds3
212520    +          +    -0.13160142309505 * GRP_MntGoldProds4
212521    +          +      0.2539849640816 * GRP_MntMeatProducts2
212522    +          +     0.29448191059312 * GRP_MntMeatProducts3
212523    +          +    -0.33946200154351 * GRP_MntMeatProducts4
212524    +          +    -0.47231816370111 * GRP_MntWines2  +    -0.35916844796743 *
212525    +        GRP_MntWines3  +     0.15578356288597 * GRP_MntWines4
212526    +          +     0.35913140014848 * GRP_NumCatalogPurchases3
212527    +          +    -0.07798422379681 * GRP_NumCatalogPurchases4
212528    +          +     0.38206153529506 * GRP_NumDistPurchases2
212529    +          +     0.08642998303162 * GRP_NumDistPurchases3
212530    +          +    -0.00375635377885 * GRP_NumDistPurchases4
212531    +          +    -0.04352529411419 * GRP_NumWebPurchases2
212532    +          +    -0.17285172586868 * GRP_NumWebPurchases3
212533    +          +     0.23030028338396 * GRP_NumWebPurchases4
212534    +          +     0.16194254582104 * GRP_RFMstat2  +    -0.03413270353062 *
212535    +        GRP_RFMstat3  +    -0.32516629559317 * GRP_RFMstat4
212536    +          +    -0.16070809362515 * GRP_RMntFrq2  +    -0.17716471899416 *
212537    +        GRP_RMntFrq3  +     0.09335047904411 * GRP_RMntFrq4
212538    +          +    -0.92875393407697 * GRP_Recency2  +     0.16068827585896 *
212539    +        GRP_Recency3  +     0.41807637211453 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.4684617848987 * GRP_AcceptedCmp52 + -0.10078363733095 *
GRP_Frq2 + 0.12187262992305 * GRP_Frq3 + 0.06615581853287 * GRP_Frq4 + -0.37438533196327 *
GRP_Income2 + -0.54951239852844 * GRP_Income3 + 0.42517426076684 * GRP_Income4 +
0.01160451666213 * GRP_Mnt2 + -0.19046851266656 * GRP_Mnt3 + -0.22599863084471 * GRP_Mnt4 +
0.02252915755857 * GRP_MntFishProducts2 + -0.08997232581072 * GRP_MntFishProducts3 +
-0.05669599356928 * GRP_MntFishProducts4 + 0.2199150131909 * GRP_MntGoldProds2 +
0.05584571259838 * GRP_MntGoldProds3 + -0.13160142309505 * GRP_MntGoldProds4 + 0.2539849640816
* GRP_MntMeatProducts2 + 0.29448191059312 * GRP_MntMeatProducts3 + -0.33946200154351 *
GRP_MntMeatProducts4 + -0.47231816370111 * GRP_MntWines2 + -0.35916844796743 * GRP_MntWines3 +
0.15578356288597 * GRP_MntWines4 + 0.35913140014848 * GRP_NumCatalogPurchases3 +
-0.07798422379681 * GRP_NumCatalogPurchases4 + 0.38206153529506 * GRP_NumDistPurchases2 +
0.08642998303162 * GRP_NumDistPurchases3 + -0.00375635377885 * GRP_NumDistPurchases4 +
-0.04352529411419 * GRP_NumWebPurchases2 + -0.17285172586868 * GRP_NumWebPurchases3 +
0.23030028338396 * GRP_NumWebPurchases4 + 0.16194254582104 * GRP_RFMstat2 + -0.03413270353062
* GRP_RFMstat3 + -0.32516629559317 * GRP_RFMstat4 + -0.16070809362515 * GRP_RMntFrq2 +
-0.17716471899416 * GRP_RMntFrq3 + 0.09335047904411 * GRP_RMntFrq4 + -0.92875393407697 *
GRP_Recency2 + 0.16068827585896 * GRP_Recency3 + 0.41807637211453 * GRP_Recency4 ;
212540    +   H15  = H15  +    -0.78481953865912 * GRP_AcceptedCmp52
212541    +          +     0.05211963408638 * GRP_Frq2  +     0.24938737986681 * GRP_Frq3
212542    +          +    -0.07347952562846 * GRP_Frq4  +    -0.15741135518664 *
212543    +        GRP_Income2  +     0.01909378686442 * GRP_Income3
212544    +          +    -0.15898085757789 * GRP_Income4  +     0.09202012507046 *
212545    +        GRP_Mnt2  +    -0.39641738573024 * GRP_Mnt3  +     0.02885484069701 *
212546    +        GRP_Mnt4  +     0.29554161293423 * GRP_MntFishProducts2
212547    +          +    -0.04439366722112 * GRP_MntFishProducts3
212548    +          +    -0.22939355735301 * GRP_MntFishProducts4
212549    +          +    -0.00367144103801 * GRP_MntGoldProds2
212550    +          +      -0.033315128385 * GRP_MntGoldProds3
212551    +          +     0.10655545066126 * GRP_MntGoldProds4
212552    +          +     0.04927093675686 * GRP_MntMeatProducts2
212553    +          +    -0.20156680946257 * GRP_MntMeatProducts3
212554    +          +     0.29394273234417 * GRP_MntMeatProducts4
212555    +          +     0.27324472738231 * GRP_MntWines2  +       0.398830803883 *
212556    +        GRP_MntWines3  +    -0.16588038849208 * GRP_MntWines4
212557    +          +     -0.3438340194477 * GRP_NumCatalogPurchases3
212558    +          +    -0.37438590488645 * GRP_NumCatalogPurchases4
212559    +          +    -0.42285816542086 * GRP_NumDistPurchases2
212560    +          +     -0.1008716650505 * GRP_NumDistPurchases3
212561    +          +    -0.42793112700917 * GRP_NumDistPurchases4
212562    +          +    -0.06792665579186 * GRP_NumWebPurchases2
212563    +          +     0.37113277513001 * GRP_NumWebPurchases3
212564    +          +     0.05720653023952 * GRP_NumWebPurchases4
212565    +          +    -0.30997814005221 * GRP_RFMstat2  +     0.06219993861842 *
212566    +        GRP_RFMstat3  +    -0.22600753085668 * GRP_RFMstat4
212567    +          +    -0.31041957734532 * GRP_RMntFrq2  +     0.25053172234721 *
212568    +        GRP_RMntFrq3  +     0.15983683107051 * GRP_RMntFrq4
212569    +          +     0.52797823019932 * GRP_Recency2  +     0.11382874879823 *
212570    +        GRP_Recency3  +    -0.22166533511817 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.78481953865912 * GRP_AcceptedCmp52 + 0.05211963408638 *
GRP_Frq2 + 0.24938737986681 * GRP_Frq3 + -0.07347952562846 * GRP_Frq4 + -0.15741135518664 *
GRP_Income2 + 0.01909378686442 * GRP_Income3 + -0.15898085757789 * GRP_Income4 +
0.09202012507046 * GRP_Mnt2 + -0.39641738573024 * GRP_Mnt3 + 0.02885484069701 * GRP_Mnt4 +
0.29554161293423 * GRP_MntFishProducts2 + -0.04439366722112 * GRP_MntFishProducts3 +
-0.22939355735301 * GRP_MntFishProducts4 + -0.00367144103801 * GRP_MntGoldProds2 +
-0.033315128385 * GRP_MntGoldProds3 + 0.10655545066126 * GRP_MntGoldProds4 + 0.04927093675686
* GRP_MntMeatProducts2 + -0.20156680946257 * GRP_MntMeatProducts3 + 0.29394273234417 *
GRP_MntMeatProducts4 + 0.27324472738231 * GRP_MntWines2 + 0.398830803883 * GRP_MntWines3 +
-0.16588038849208 * GRP_MntWines4 + -0.3438340194477 * GRP_NumCatalogPurchases3 +
-0.37438590488645 * GRP_NumCatalogPurchases4 + -0.42285816542086 * GRP_NumDistPurchases2 +
-0.1008716650505 * GRP_NumDistPurchases3 + -0.42793112700917 * GRP_NumDistPurchases4 +
-0.06792665579186 * GRP_NumWebPurchases2 + 0.37113277513001 * GRP_NumWebPurchases3 +
0.05720653023952 * GRP_NumWebPurchases4 + -0.30997814005221 * GRP_RFMstat2 + 0.06219993861842
* GRP_RFMstat3 + -0.22600753085668 * GRP_RFMstat4 + -0.31041957734532 * GRP_RMntFrq2 +
0.25053172234721 * GRP_RMntFrq3 + 0.15983683107051 * GRP_RMntFrq4 + 0.52797823019932 *
GRP_Recency2 + 0.11382874879823 * GRP_Recency3 + -0.22166533511817 * GRP_Recency4 ;
212571    +   H16  = H16  +      0.7107136456569 * GRP_AcceptedCmp52
212572    +          +     -0.4751898387651 * GRP_Frq2  +    -0.11277060686411 * GRP_Frq3
212573    +          +     0.15821547082299 * GRP_Frq4  +    -0.45945049231995 *
212574    +        GRP_Income2  +    -0.18413512635176 * GRP_Income3
212575    +          +     0.39594738835509 * GRP_Income4  +    -0.15472205523822 *
212576    +        GRP_Mnt2  +     0.02844181224363 * GRP_Mnt3  +     0.45435843401555 *
212577    +        GRP_Mnt4  +    -0.29220588593813 * GRP_MntFishProducts2
212578    +          +     0.04340555393469 * GRP_MntFishProducts3
212579    +          +    -0.20048219926361 * GRP_MntFishProducts4
212580    +          +     0.16101452165456 * GRP_MntGoldProds2
212581    +          +    -0.04467647211336 * GRP_MntGoldProds3
212582    +          +     0.32142013598241 * GRP_MntGoldProds4
212583    +          +     0.29741565154233 * GRP_MntMeatProducts2
212584    +          +    -0.00264678222241 * GRP_MntMeatProducts3
212585    +          +    -0.11596499325048 * GRP_MntMeatProducts4
212586    +          +    -0.29849043995136 * GRP_MntWines2  +     0.14756452272338 *
212587    +        GRP_MntWines3  +     0.48995265672675 * GRP_MntWines4
212588    +          +     0.80854583627117 * GRP_NumCatalogPurchases3
212589    +          +     0.14001888431357 * GRP_NumCatalogPurchases4
212590    +          +     0.36107050137299 * GRP_NumDistPurchases2
212591    +          +    -0.10375572120121 * GRP_NumDistPurchases3
212592    +          +     0.10557004956787 * GRP_NumDistPurchases4
212593    +          +     0.04608069099876 * GRP_NumWebPurchases2
212594    +          +     0.15561947954396 * GRP_NumWebPurchases3
212595    +          +    -0.01081470092004 * GRP_NumWebPurchases4
212596    +          +     0.21994454623245 * GRP_RFMstat2  +    -0.08858421895818 *
212597    +        GRP_RFMstat3  +    -0.13608887793525 * GRP_RFMstat4
212598    +          +     0.07482010458977 * GRP_RMntFrq2  +    -0.11874760292742 *
212599    +        GRP_RMntFrq3  +     0.56887215594366 * GRP_RMntFrq4
212600    +          +    -0.13548983954455 * GRP_Recency2  +    -0.25036935235639 *
212601    +        GRP_Recency3  +     -0.0282277663071 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.7107136456569 * GRP_AcceptedCmp52 + -0.4751898387651 *
GRP_Frq2 + -0.11277060686411 * GRP_Frq3 + 0.15821547082299 * GRP_Frq4 + -0.45945049231995 *
GRP_Income2 + -0.18413512635176 * GRP_Income3 + 0.39594738835509 * GRP_Income4 +
-0.15472205523822 * GRP_Mnt2 + 0.02844181224363 * GRP_Mnt3 + 0.45435843401555 * GRP_Mnt4 +
-0.29220588593813 * GRP_MntFishProducts2 + 0.04340555393469 * GRP_MntFishProducts3 +
-0.20048219926361 * GRP_MntFishProducts4 + 0.16101452165456 * GRP_MntGoldProds2 +
-0.04467647211336 * GRP_MntGoldProds3 + 0.32142013598241 * GRP_MntGoldProds4 +
0.29741565154233 * GRP_MntMeatProducts2 + -0.00264678222241 * GRP_MntMeatProducts3 +
-0.11596499325048 * GRP_MntMeatProducts4 + -0.29849043995136 * GRP_MntWines2 +
0.14756452272338 * GRP_MntWines3 + 0.48995265672675 * GRP_MntWines4 + 0.80854583627117 *
GRP_NumCatalogPurchases3 + 0.14001888431357 * GRP_NumCatalogPurchases4 + 0.36107050137299 *
GRP_NumDistPurchases2 + -0.10375572120121 * GRP_NumDistPurchases3 + 0.10557004956787 *
GRP_NumDistPurchases4 + 0.04608069099876 * GRP_NumWebPurchases2 + 0.15561947954396 *
GRP_NumWebPurchases3 + -0.01081470092004 * GRP_NumWebPurchases4 + 0.21994454623245 *
GRP_RFMstat2 + -0.08858421895818 * GRP_RFMstat3 + -0.13608887793525 * GRP_RFMstat4 +
0.07482010458977 * GRP_RMntFrq2 + -0.11874760292742 * GRP_RMntFrq3 + 0.56887215594366 *
GRP_RMntFrq4 + -0.13548983954455 * GRP_Recency2 + -0.25036935235639 * GRP_Recency3 +
-0.0282277663071 * GRP_Recency4 ;
212602    +   H17  = H17  +    -0.06745892596619 * GRP_AcceptedCmp52
212603    +          +    -0.09506194345469 * GRP_Frq2  +    -0.29707644715885 * GRP_Frq3
212604    +          +    -0.06874693052001 * GRP_Frq4  +    -0.08949373241741 *
212605    +        GRP_Income2  +     0.02965579603049 * GRP_Income3
212606    +          +    -0.02192829727213 * GRP_Income4  +     0.30180973300088 *
212607    +        GRP_Mnt2  +    -0.10648502526616 * GRP_Mnt3  +     0.07588844839465 *
212608    +        GRP_Mnt4  +    -0.30524623655199 * GRP_MntFishProducts2
212609    +          +    -0.20032703571491 * GRP_MntFishProducts3
212610    +          +    -0.08348811352746 * GRP_MntFishProducts4
212611    +          +    -0.00744131870881 * GRP_MntGoldProds2
212612    +          +    -0.27347309859096 * GRP_MntGoldProds3
212613    +          +    -0.04458870469416 * GRP_MntGoldProds4
212614    +          +     0.17538261434498 * GRP_MntMeatProducts2
212615    +          +    -0.08059547298843 * GRP_MntMeatProducts3
212616    +          +     0.03113249898233 * GRP_MntMeatProducts4
212617    +          +    -0.23690909413276 * GRP_MntWines2  +    -0.01511980231776 *
212618    +        GRP_MntWines3  +     -0.2825327824317 * GRP_MntWines4
212619    +          +     0.13919784888607 * GRP_NumCatalogPurchases3
212620    +          +    -0.10871281978714 * GRP_NumCatalogPurchases4
212621    +          +     0.20540014620209 * GRP_NumDistPurchases2
212622    +          +     0.17744784873298 * GRP_NumDistPurchases3
212623    +          +      -0.003486430833 * GRP_NumDistPurchases4
212624    +          +    -0.04863967797645 * GRP_NumWebPurchases2
212625    +          +     0.07245829152192 * GRP_NumWebPurchases3
212626    +          +    -0.27395606297099 * GRP_NumWebPurchases4
212627    +          +    -0.14496279180087 * GRP_RFMstat2  +     0.28224463929838 *
212628    +        GRP_RFMstat3  +     0.26720059295202 * GRP_RFMstat4
212629    +          +    -0.07120881723264 * GRP_RMntFrq2  +     0.16350065828319 *
212630    +        GRP_RMntFrq3  +      0.3117297070285 * GRP_RMntFrq4
212631    +          +    -0.52884474877094 * GRP_Recency2  +    -0.17937099376746 *
212632    +        GRP_Recency3  +     -0.0157357289132 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.06745892596619 * GRP_AcceptedCmp52 + -0.09506194345469 *
GRP_Frq2 + -0.29707644715885 * GRP_Frq3 + -0.06874693052001 * GRP_Frq4 + -0.08949373241741 *
GRP_Income2 + 0.02965579603049 * GRP_Income3 + -0.02192829727213 * GRP_Income4 +
0.30180973300088 * GRP_Mnt2 + -0.10648502526616 * GRP_Mnt3 + 0.07588844839465 * GRP_Mnt4 +
-0.30524623655199 * GRP_MntFishProducts2 + -0.20032703571491 * GRP_MntFishProducts3 +
-0.08348811352746 * GRP_MntFishProducts4 + -0.00744131870881 * GRP_MntGoldProds2 +
-0.27347309859096 * GRP_MntGoldProds3 + -0.04458870469416 * GRP_MntGoldProds4 +
0.17538261434498 * GRP_MntMeatProducts2 + -0.08059547298843 * GRP_MntMeatProducts3 +
0.03113249898233 * GRP_MntMeatProducts4 + -0.23690909413276 * GRP_MntWines2 +
-0.01511980231776 * GRP_MntWines3 + -0.2825327824317 * GRP_MntWines4 + 0.13919784888607 *
GRP_NumCatalogPurchases3 + -0.10871281978714 * GRP_NumCatalogPurchases4 + 0.20540014620209 *
GRP_NumDistPurchases2 + 0.17744784873298 * GRP_NumDistPurchases3 + -0.003486430833 *
GRP_NumDistPurchases4 + -0.04863967797645 * GRP_NumWebPurchases2 + 0.07245829152192 *
GRP_NumWebPurchases3 + -0.27395606297099 * GRP_NumWebPurchases4 + -0.14496279180087 *
GRP_RFMstat2 + 0.28224463929838 * GRP_RFMstat3 + 0.26720059295202 * GRP_RFMstat4 +
-0.07120881723264 * GRP_RMntFrq2 + 0.16350065828319 * GRP_RMntFrq3 + 0.3117297070285 *
GRP_RMntFrq4 + -0.52884474877094 * GRP_Recency2 + -0.17937099376746 * GRP_Recency3 +
-0.0157357289132 * GRP_Recency4 ;
212633    +   H11  =    -0.76467628027618 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.76467628027618 + H11 ;
212634    +   H12  =    -0.03405517571825 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.03405517571825 + H12 ;
212635    +   H13  =    -0.32845676351839 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.32845676351839 + H13 ;
212636    +   H14  =     0.08379615404181 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.08379615404181 + H14 ;
212637    +   H15  =    -0.77228291932436 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.77228291932436 + H15 ;
212638    +   H16  =    -0.77356855332279 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.77356855332279 + H16 ;
212639    +   H17  =     0.45067845230796 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.45067845230796 + H17 ;
212640    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
212641    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
212642    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
212643    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
212644    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
212645    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
212646    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
212647    +END;
MPRINT(EM_DIAGRAM):   END;
212648    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
212649    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
212650    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
212651    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
212652    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
212653    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
212654    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
212655    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
212656    +END;
MPRINT(EM_DIAGRAM):   END;
212657    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212658    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
212659    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212660    +
212661    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
212662    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
212663    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
212664    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
212665    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
212666    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212667    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
212668    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
212669    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
212670    +end;
MPRINT(EM_DIAGRAM):   end;
212671    +else do;
MPRINT(EM_DIAGRAM):   else do;
212672    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
212673    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
212674    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
212675    +   end;
MPRINT(EM_DIAGRAM):   end;
212676    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
212677    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
212678    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
212679    +   end;
MPRINT(EM_DIAGRAM):   end;
212680    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212681    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
212682    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
212683    +   end;
MPRINT(EM_DIAGRAM):   end;
212684    +end;
MPRINT(EM_DIAGRAM):   end;
212685    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
212686    +   P_DepVar1  =    -0.15999450347654 * H11  +     1.35667407296837 * H12
212687    +          +    -0.71419530867579 * H13  +     -1.0947746264744 * H14
212688    +          +     0.98315214007209 * H15  +    -1.32163386678746 * H16
212689    +          +    -0.29329090231091 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.15999450347654 * H11 + 1.35667407296837 * H12 +
-0.71419530867579 * H13 + -1.0947746264744 * H14 + 0.98315214007209 * H15 + -1.32163386678746
* H16 + -0.29329090231091 * H17 ;
212690    +   P_DepVar1  =    -1.66210022161101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66210022161101 + P_DepVar1 ;
212691    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
212692    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
212693    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
212694    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
212695    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
212696    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
212697    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
212698    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
212699    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
212700    +END;
MPRINT(EM_DIAGRAM):   END;
212701    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
212702    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
212703    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
212704    +END;
MPRINT(EM_DIAGRAM):   END;
212705    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
212706    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
212707    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
212708    +END;
MPRINT(EM_DIAGRAM):   END;
212709    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
212710    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
212711    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
212712    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
212713    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
212714    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
212715    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
212716    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212717    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
212718    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
212719    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
212720    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
212721    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
212722    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
212723    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
212724    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
212725    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
212726    +END;
MPRINT(EM_DIAGRAM):   END;
212727    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
212728    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
212729    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
212730    +drop
212731    +H11
212732    +H12
212733    +H13
212734    +H14
212735    +H15
212736    +H16
212737    +H17
212738    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
212739    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
212740    +* Renaming variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural18;
212741    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
212742    +* Renaming Posterior variables for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural18;
212743    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
212744    +drop Neural18_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar1;
212745    +Neural18_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar1 = P_DepVar1;
212746    +drop Neural18_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural18_P_DepVar0;
212747    +Neural18_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural18_P_DepVar0 = P_DepVar0;
212748    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
212749    +* Renaming _WARN_ variable for Neural18;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural18;
212750    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
212751    +length Neural18_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural18_WARN_ $4;
212752    +drop Neural18_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural18_WARN_;
212753    +Neural18_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural18_WARN_ = _WARN_;
212754    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
212755    +* Ensmbl18: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Scoring Code of model 4 of 7;
212756    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
212757    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
212758    +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
212759    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
212760    +* NODE: Reg7;
MPRINT(EM_DIAGRAM):   * NODE: Reg7;
212761    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
212762    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
212763    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
212764    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
212765    +
212766    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
212767    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
212768    +
212769    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
212770    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
212771    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
212772    +array REG7DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG7DRF [2] $12 _temporary_ ('1' '0' );
212773    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
212774    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
212775    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
212776    +ARRAY REG7DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG7DRU[2] _TEMPORARY_ (1 0);
212777    +
212778    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
212779    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
212780    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
212781    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
212782    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
212783    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212784    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
212785    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
212786    +end;
MPRINT(EM_DIAGRAM):   end;
212787    +else do;
MPRINT(EM_DIAGRAM):   else do;
212788    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
212789    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
212790    +   end;
MPRINT(EM_DIAGRAM):   end;
212791    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
212792    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
212793    +   end;
MPRINT(EM_DIAGRAM):   end;
212794    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212795    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
212796    +   end;
MPRINT(EM_DIAGRAM):   end;
212797    +end;
MPRINT(EM_DIAGRAM):   end;
212798    +
212799    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
212800    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
212801    +
212802    +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
212803    +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
212804    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212805    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212806    +end;
MPRINT(EM_DIAGRAM):   end;
212807    +
212808    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
212809    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
212810    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
212811    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
212812    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212813    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212814    +end;
MPRINT(EM_DIAGRAM):   end;
212815    +else do;
MPRINT(EM_DIAGRAM):   else do;
212816    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
212817    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
212818    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212819    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
212820    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
212821    +   end;
MPRINT(EM_DIAGRAM):   end;
212822    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
212823    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
212824    +   end;
MPRINT(EM_DIAGRAM):   end;
212825    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212826    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
212827    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212828    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212829    +   end;
MPRINT(EM_DIAGRAM):   end;
212830    +end;
MPRINT(EM_DIAGRAM):   end;
212831    +
212832    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
212833    +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
212834    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
212835    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
212836    +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
212837    +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
212838    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212839    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212840    +end;
MPRINT(EM_DIAGRAM):   end;
212841    +else do;
MPRINT(EM_DIAGRAM):   else do;
212842    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
212843    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
212844    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212845    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
212846    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
212847    +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
212848    +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
212849    +   end;
MPRINT(EM_DIAGRAM):   end;
212850    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
212851    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
212852    +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
212853    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
212854    +   end;
MPRINT(EM_DIAGRAM):   end;
212855    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
212856    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
212857    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
212858    +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
212859    +   end;
MPRINT(EM_DIAGRAM):   end;
212860    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
212861    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
212862    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
212863    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
212864    +   end;
MPRINT(EM_DIAGRAM):   end;
212865    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212866    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
212867    +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
212868    +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
212869    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212870    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212871    +   end;
MPRINT(EM_DIAGRAM):   end;
212872    +end;
MPRINT(EM_DIAGRAM):   end;
212873    +
212874    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
212875    +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
212876    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
212877    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
212878    +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
212879    +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
212880    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212881    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212882    +end;
MPRINT(EM_DIAGRAM):   end;
212883    +else do;
MPRINT(EM_DIAGRAM):   else do;
212884    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
212885    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
212886    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212887    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
212888    +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
212889    +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
212890    +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
212891    +   end;
MPRINT(EM_DIAGRAM):   end;
212892    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
212893    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
212894    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
212895    +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
212896    +   end;
MPRINT(EM_DIAGRAM):   end;
212897    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
212898    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
212899    +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
212900    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
212901    +   end;
MPRINT(EM_DIAGRAM):   end;
212902    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
212903    +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
212904    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
212905    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
212906    +   end;
MPRINT(EM_DIAGRAM):   end;
212907    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212908    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
212909    +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
212910    +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
212911    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212912    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212913    +   end;
MPRINT(EM_DIAGRAM):   end;
212914    +end;
MPRINT(EM_DIAGRAM):   end;
212915    +
212916    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
212917    +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
212918    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
212919    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
212920    +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
212921    +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
212922    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212923    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212924    +end;
MPRINT(EM_DIAGRAM):   end;
212925    +else do;
MPRINT(EM_DIAGRAM):   else do;
212926    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
212927    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
212928    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212929    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
212930    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
212931    +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
212932    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
212933    +   end;
MPRINT(EM_DIAGRAM):   end;
212934    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
212935    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
212936    +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
212937    +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
212938    +   end;
MPRINT(EM_DIAGRAM):   end;
212939    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
212940    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
212941    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
212942    +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
212943    +   end;
MPRINT(EM_DIAGRAM):   end;
212944    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
212945    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
212946    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
212947    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
212948    +   end;
MPRINT(EM_DIAGRAM):   end;
212949    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212950    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
212951    +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
212952    +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
212953    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212954    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212955    +   end;
MPRINT(EM_DIAGRAM):   end;
212956    +end;
MPRINT(EM_DIAGRAM):   end;
212957    +
212958    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
212959    +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
212960    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
212961    +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
212962    +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
212963    +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
212964    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
212965    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212966    +end;
MPRINT(EM_DIAGRAM):   end;
212967    +else do;
MPRINT(EM_DIAGRAM):   else do;
212968    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
212969    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
212970    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
212971    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
212972    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
212973    +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
212974    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
212975    +   end;
MPRINT(EM_DIAGRAM):   end;
212976    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
212977    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
212978    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
212979    +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
212980    +   end;
MPRINT(EM_DIAGRAM):   end;
212981    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
212982    +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
212983    +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
212984    +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
212985    +   end;
MPRINT(EM_DIAGRAM):   end;
212986    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
212987    +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
212988    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
212989    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
212990    +   end;
MPRINT(EM_DIAGRAM):   end;
212991    +   else do;
MPRINT(EM_DIAGRAM):   else do;
212992    +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
212993    +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
212994    +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
212995    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
212996    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
212997    +   end;
MPRINT(EM_DIAGRAM):   end;
212998    +end;
MPRINT(EM_DIAGRAM):   end;
212999    +
213000    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
213001    +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
213002    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
213003    +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
213004    +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
213005    +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
213006    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213007    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213008    +end;
MPRINT(EM_DIAGRAM):   end;
213009    +else do;
MPRINT(EM_DIAGRAM):   else do;
213010    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
213011    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
213012    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213013    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
213014    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
213015    +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
213016    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
213017    +   end;
MPRINT(EM_DIAGRAM):   end;
213018    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
213019    +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
213020    +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
213021    +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
213022    +   end;
MPRINT(EM_DIAGRAM):   end;
213023    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
213024    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
213025    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
213026    +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
213027    +   end;
MPRINT(EM_DIAGRAM):   end;
213028    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
213029    +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
213030    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
213031    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
213032    +   end;
MPRINT(EM_DIAGRAM):   end;
213033    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213034    +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
213035    +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
213036    +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
213037    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213038    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213039    +   end;
MPRINT(EM_DIAGRAM):   end;
213040    +end;
MPRINT(EM_DIAGRAM):   end;
213041    +
213042    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
213043    +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
213044    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
213045    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
213046    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
213047    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213048    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213049    +end;
MPRINT(EM_DIAGRAM):   end;
213050    +else do;
MPRINT(EM_DIAGRAM):   else do;
213051    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
213052    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
213053    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213054    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
213055    +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
213056    +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
213057    +   end;
MPRINT(EM_DIAGRAM):   end;
213058    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
213059    +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
213060    +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
213061    +   end;
MPRINT(EM_DIAGRAM):   end;
213062    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
213063    +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
213064    +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
213065    +   end;
MPRINT(EM_DIAGRAM):   end;
213066    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213067    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
213068    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
213069    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213070    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213071    +   end;
MPRINT(EM_DIAGRAM):   end;
213072    +end;
MPRINT(EM_DIAGRAM):   end;
213073    +
213074    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
213075    +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
213076    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
213077    +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
213078    +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
213079    +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
213080    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213081    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213082    +end;
MPRINT(EM_DIAGRAM):   end;
213083    +else do;
MPRINT(EM_DIAGRAM):   else do;
213084    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
213085    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
213086    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213087    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
213088    +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
213089    +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
213090    +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
213091    +   end;
MPRINT(EM_DIAGRAM):   end;
213092    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
213093    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
213094    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
213095    +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
213096    +   end;
MPRINT(EM_DIAGRAM):   end;
213097    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
213098    +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
213099    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
213100    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
213101    +   end;
MPRINT(EM_DIAGRAM):   end;
213102    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
213103    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
213104    +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
213105    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
213106    +   end;
MPRINT(EM_DIAGRAM):   end;
213107    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213108    +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
213109    +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
213110    +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
213111    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213112    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213113    +   end;
MPRINT(EM_DIAGRAM):   end;
213114    +end;
MPRINT(EM_DIAGRAM):   end;
213115    +
213116    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
213117    +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
213118    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
213119    +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
213120    +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
213121    +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
213122    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213123    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213124    +end;
MPRINT(EM_DIAGRAM):   end;
213125    +else do;
MPRINT(EM_DIAGRAM):   else do;
213126    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
213127    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
213128    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213129    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
213130    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
213131    +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
213132    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
213133    +   end;
MPRINT(EM_DIAGRAM):   end;
213134    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
213135    +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
213136    +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
213137    +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
213138    +   end;
MPRINT(EM_DIAGRAM):   end;
213139    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
213140    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
213141    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
213142    +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
213143    +   end;
MPRINT(EM_DIAGRAM):   end;
213144    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
213145    +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
213146    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
213147    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
213148    +   end;
MPRINT(EM_DIAGRAM):   end;
213149    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213150    +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
213151    +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
213152    +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
213153    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213154    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213155    +   end;
MPRINT(EM_DIAGRAM):   end;
213156    +end;
MPRINT(EM_DIAGRAM):   end;
213157    +
213158    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
213159    +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
213160    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
213161    +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
213162    +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
213163    +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
213164    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213165    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213166    +end;
MPRINT(EM_DIAGRAM):   end;
213167    +else do;
MPRINT(EM_DIAGRAM):   else do;
213168    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
213169    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
213170    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213171    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
213172    +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
213173    +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
213174    +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
213175    +   end;
MPRINT(EM_DIAGRAM):   end;
213176    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
213177    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
213178    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
213179    +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
213180    +   end;
MPRINT(EM_DIAGRAM):   end;
213181    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
213182    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
213183    +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
213184    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
213185    +   end;
MPRINT(EM_DIAGRAM):   end;
213186    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
213187    +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
213188    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
213189    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
213190    +   end;
MPRINT(EM_DIAGRAM):   end;
213191    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213192    +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
213193    +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
213194    +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
213195    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213196    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213197    +   end;
MPRINT(EM_DIAGRAM):   end;
213198    +end;
MPRINT(EM_DIAGRAM):   end;
213199    +
213200    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
213201    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
213202    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
213203    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
213204    +   goto REG7DR1;
MPRINT(EM_DIAGRAM):   goto REG7DR1;
213205    +end;
MPRINT(EM_DIAGRAM):   end;
213206    +
213207    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
213208    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
213209    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
213210    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
213211    +
213212    +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
213213    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
213214    +_LP0 = _LP0 + (    -0.5862337869734) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5862337869734) * _TEMP * _1_0;
213215    +
213216    +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
213217    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
213218    +_LP0 = _LP0 + (     1.0565693238421) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.0565693238421) * _TEMP * _2_0;
213219    +_LP0 = _LP0 + (     0.0911336121088) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0911336121088) * _TEMP * _2_1;
213220    +_LP0 = _LP0 + (   -0.37448220273968) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.37448220273968) * _TEMP * _2_2;
213221    +
213222    +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
213223    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
213224    +_LP0 = _LP0 + (    0.51658584340625) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51658584340625) * _TEMP * _3_0;
213225    +_LP0 = _LP0 + (    0.48505772489262) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.48505772489262) * _TEMP * _3_1;
213226    +_LP0 = _LP0 + (   -0.50854630566525) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.50854630566525) * _TEMP * _3_2;
213227    +
213228    +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
213229    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
213230    +_LP0 = _LP0 + (    0.38994498659965) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38994498659965) * _TEMP * _5_0;
213231    +_LP0 = _LP0 + (    0.03146325606998) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03146325606998) * _TEMP * _5_1;
213232    +_LP0 = _LP0 + (   -0.05372169204837) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05372169204837) * _TEMP * _5_2;
213233    +
213234    +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
213235    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
213236    +_LP0 = _LP0 + (   -0.79733877870259) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.79733877870259) * _TEMP * _7_0;
213237    +_LP0 = _LP0 + (   -0.15003183676105) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.15003183676105) * _TEMP * _7_1;
213238    +_LP0 = _LP0 + (    0.31191597751128) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.31191597751128) * _TEMP * _7_2;
213239    +
213240    +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
213241    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
213242    +_LP0 = _LP0 + (    0.53434964580952) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53434964580952) * _TEMP * _8_0;
213243    +_LP0 = _LP0 + (    0.22167667253067) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.22167667253067) * _TEMP * _8_1;
213244    +_LP0 = _LP0 + (     -0.305489910536) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.305489910536) * _TEMP * _8_2;
213245    +
213246    +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
213247    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
213248    +_LP0 = _LP0 + (     -0.629899271763) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.629899271763) * _TEMP * _9_0;
213249    +_LP0 = _LP0 + (    0.03240844395355) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03240844395355) * _TEMP * _9_1;
213250    +
213251    +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
213252    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
213253    +_LP0 = _LP0 + (   -1.42622019893988) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.42622019893988) * _TEMP * _10_0;
213254    +_LP0 = _LP0 + (    0.05466498093201) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.05466498093201) * _TEMP * _10_1;
213255    +_LP0 = _LP0 + (    0.25182489000571) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25182489000571) * _TEMP * _10_2;
213256    +
213257    +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
213258    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
213259    +_LP0 = _LP0 + (   -0.14979245852204) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14979245852204) * _TEMP * _13_0;
213260    +_LP0 = _LP0 + (     0.0056028143187) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0056028143187) * _TEMP * _13_1;
213261    +_LP0 = _LP0 + (   -0.23315930182624) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.23315930182624) * _TEMP * _13_2;
213262    +
213263    +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
213264    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
213265    +_LP0 = _LP0 + (    1.06974976023651) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.06974976023651) * _TEMP * _14_0;
213266    +_LP0 = _LP0 + (    0.29139327664531) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.29139327664531) * _TEMP * _14_1;
213267    +_LP0 = _LP0 + (   -0.34742570667526) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.34742570667526) * _TEMP * _14_2;
213268    +
213269    +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
213270    +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
213271    +_LP0 = _LP0 + (    0.01045707390649 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01045707390649 * _TEMP);
213272    +
213273    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
213274    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
213275    +_P0 = probnorm((   -21.5603180840073) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -21.5603180840073) + _LP0);
213276    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
213277    +
213278    +REG7DR1:
213279    +
213280    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG7DR1: *** Residuals;
213281    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
213282    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
213283    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
213284    +end;
MPRINT(EM_DIAGRAM):   end;
213285    +else do;
MPRINT(EM_DIAGRAM):   else do;
213286    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
213287    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
213288    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
213289    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
213290    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
213291    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
213292    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
213293    +   end;
MPRINT(EM_DIAGRAM):   end;
213294    +end;
MPRINT(EM_DIAGRAM):   end;
213295    +
213296    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
213297    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
213298    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
213299    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
213300    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
213301    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
213302    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
213303    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
213304    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
213305    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
213306    +end;
MPRINT(EM_DIAGRAM):   end;
213307    +I_DepVar = REG7DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG7DRF[_IY];
213308    +U_DepVar = REG7DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG7DRU[_IY];
213309    +
213310    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
213311    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
213312    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
213313    +* Renaming variables for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg7;
213314    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213315    +* Renaming Posterior variables for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg7;
213316    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213317    +drop Reg7_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg7_P_DepVar1;
213318    +Reg7_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg7_P_DepVar1 = P_DepVar1;
213319    +drop Reg7_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg7_P_DepVar0;
213320    +Reg7_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg7_P_DepVar0 = P_DepVar0;
213321    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213322    +* Renaming _WARN_ variable for Reg7;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg7;
213323    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213324    +length Reg7_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg7_WARN_ $4;
213325    +drop Reg7_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg7_WARN_;
213326    +Reg7_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg7_WARN_ = _WARN_;
213327    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213328    +* Ensmbl18: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Scoring Code of model 5 of 7;
213329    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213330    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213331    +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
213332    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
213333    +* NODE: Reg3;
MPRINT(EM_DIAGRAM):   * NODE: Reg3;
213334    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213335    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
213336    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
213337    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
213338    +
213339    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
213340    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
213341    +
213342    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
213343    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
213344    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
213345    +array REG3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3DRF [2] $12 _temporary_ ('1' '0' );
213346    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
213347    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
213348    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
213349    +ARRAY REG3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3DRU[2] _TEMPORARY_ (1 0);
213350    +
213351    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
213352    +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
213353    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
213354    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
213355    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
213356    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213357    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
213358    +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
213359    +end;
MPRINT(EM_DIAGRAM):   end;
213360    +else do;
MPRINT(EM_DIAGRAM):   else do;
213361    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
213362    +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
213363    +   end;
MPRINT(EM_DIAGRAM):   end;
213364    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
213365    +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
213366    +   end;
MPRINT(EM_DIAGRAM):   end;
213367    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213368    +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
213369    +   end;
MPRINT(EM_DIAGRAM):   end;
213370    +end;
MPRINT(EM_DIAGRAM):   end;
213371    +
213372    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
213373    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
213374    +
213375    +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
213376    +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
213377    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213378    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213379    +end;
MPRINT(EM_DIAGRAM):   end;
213380    +
213381    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
213382    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
213383    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
213384    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
213385    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213386    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213387    +end;
MPRINT(EM_DIAGRAM):   end;
213388    +else do;
MPRINT(EM_DIAGRAM):   else do;
213389    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
213390    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
213391    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213392    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
213393    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
213394    +   end;
MPRINT(EM_DIAGRAM):   end;
213395    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
213396    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
213397    +   end;
MPRINT(EM_DIAGRAM):   end;
213398    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213399    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
213400    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213401    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213402    +   end;
MPRINT(EM_DIAGRAM):   end;
213403    +end;
MPRINT(EM_DIAGRAM):   end;
213404    +
213405    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
213406    +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
213407    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
213408    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
213409    +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
213410    +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
213411    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213412    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213413    +end;
MPRINT(EM_DIAGRAM):   end;
213414    +else do;
MPRINT(EM_DIAGRAM):   else do;
213415    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
213416    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
213417    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213418    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
213419    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
213420    +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
213421    +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
213422    +   end;
MPRINT(EM_DIAGRAM):   end;
213423    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
213424    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
213425    +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
213426    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
213427    +   end;
MPRINT(EM_DIAGRAM):   end;
213428    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
213429    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
213430    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
213431    +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
213432    +   end;
MPRINT(EM_DIAGRAM):   end;
213433    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
213434    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
213435    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
213436    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
213437    +   end;
MPRINT(EM_DIAGRAM):   end;
213438    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213439    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
213440    +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
213441    +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
213442    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213443    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213444    +   end;
MPRINT(EM_DIAGRAM):   end;
213445    +end;
MPRINT(EM_DIAGRAM):   end;
213446    +
213447    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
213448    +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
213449    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
213450    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
213451    +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
213452    +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
213453    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213454    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213455    +end;
MPRINT(EM_DIAGRAM):   end;
213456    +else do;
MPRINT(EM_DIAGRAM):   else do;
213457    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
213458    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
213459    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213460    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
213461    +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
213462    +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
213463    +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
213464    +   end;
MPRINT(EM_DIAGRAM):   end;
213465    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
213466    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
213467    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
213468    +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
213469    +   end;
MPRINT(EM_DIAGRAM):   end;
213470    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
213471    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
213472    +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
213473    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
213474    +   end;
MPRINT(EM_DIAGRAM):   end;
213475    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
213476    +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
213477    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
213478    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
213479    +   end;
MPRINT(EM_DIAGRAM):   end;
213480    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213481    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
213482    +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
213483    +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
213484    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213485    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213486    +   end;
MPRINT(EM_DIAGRAM):   end;
213487    +end;
MPRINT(EM_DIAGRAM):   end;
213488    +
213489    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
213490    +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
213491    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
213492    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
213493    +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
213494    +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
213495    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213496    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213497    +end;
MPRINT(EM_DIAGRAM):   end;
213498    +else do;
MPRINT(EM_DIAGRAM):   else do;
213499    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
213500    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
213501    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213502    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
213503    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
213504    +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
213505    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
213506    +   end;
MPRINT(EM_DIAGRAM):   end;
213507    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
213508    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
213509    +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
213510    +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
213511    +   end;
MPRINT(EM_DIAGRAM):   end;
213512    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
213513    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
213514    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
213515    +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
213516    +   end;
MPRINT(EM_DIAGRAM):   end;
213517    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
213518    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
213519    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
213520    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
213521    +   end;
MPRINT(EM_DIAGRAM):   end;
213522    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213523    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
213524    +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
213525    +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
213526    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213527    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213528    +   end;
MPRINT(EM_DIAGRAM):   end;
213529    +end;
MPRINT(EM_DIAGRAM):   end;
213530    +
213531    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
213532    +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
213533    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
213534    +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
213535    +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
213536    +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
213537    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213538    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213539    +end;
MPRINT(EM_DIAGRAM):   end;
213540    +else do;
MPRINT(EM_DIAGRAM):   else do;
213541    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
213542    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
213543    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213544    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
213545    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
213546    +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
213547    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
213548    +   end;
MPRINT(EM_DIAGRAM):   end;
213549    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
213550    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
213551    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
213552    +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
213553    +   end;
MPRINT(EM_DIAGRAM):   end;
213554    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
213555    +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
213556    +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
213557    +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
213558    +   end;
MPRINT(EM_DIAGRAM):   end;
213559    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
213560    +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
213561    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
213562    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
213563    +   end;
MPRINT(EM_DIAGRAM):   end;
213564    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213565    +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
213566    +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
213567    +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
213568    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213569    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213570    +   end;
MPRINT(EM_DIAGRAM):   end;
213571    +end;
MPRINT(EM_DIAGRAM):   end;
213572    +
213573    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
213574    +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
213575    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
213576    +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
213577    +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
213578    +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
213579    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213580    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213581    +end;
MPRINT(EM_DIAGRAM):   end;
213582    +else do;
MPRINT(EM_DIAGRAM):   else do;
213583    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
213584    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
213585    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213586    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
213587    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
213588    +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
213589    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
213590    +   end;
MPRINT(EM_DIAGRAM):   end;
213591    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
213592    +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
213593    +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
213594    +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
213595    +   end;
MPRINT(EM_DIAGRAM):   end;
213596    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
213597    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
213598    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
213599    +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
213600    +   end;
MPRINT(EM_DIAGRAM):   end;
213601    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
213602    +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
213603    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
213604    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
213605    +   end;
MPRINT(EM_DIAGRAM):   end;
213606    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213607    +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
213608    +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
213609    +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
213610    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213611    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213612    +   end;
MPRINT(EM_DIAGRAM):   end;
213613    +end;
MPRINT(EM_DIAGRAM):   end;
213614    +
213615    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
213616    +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
213617    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
213618    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
213619    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
213620    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213621    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213622    +end;
MPRINT(EM_DIAGRAM):   end;
213623    +else do;
MPRINT(EM_DIAGRAM):   else do;
213624    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
213625    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
213626    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213627    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
213628    +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
213629    +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
213630    +   end;
MPRINT(EM_DIAGRAM):   end;
213631    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
213632    +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
213633    +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
213634    +   end;
MPRINT(EM_DIAGRAM):   end;
213635    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
213636    +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
213637    +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
213638    +   end;
MPRINT(EM_DIAGRAM):   end;
213639    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213640    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
213641    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
213642    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213643    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213644    +   end;
MPRINT(EM_DIAGRAM):   end;
213645    +end;
MPRINT(EM_DIAGRAM):   end;
213646    +
213647    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
213648    +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
213649    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
213650    +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
213651    +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
213652    +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
213653    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213654    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213655    +end;
MPRINT(EM_DIAGRAM):   end;
213656    +else do;
MPRINT(EM_DIAGRAM):   else do;
213657    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
213658    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
213659    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213660    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
213661    +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
213662    +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
213663    +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
213664    +   end;
MPRINT(EM_DIAGRAM):   end;
213665    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
213666    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
213667    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
213668    +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
213669    +   end;
MPRINT(EM_DIAGRAM):   end;
213670    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
213671    +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
213672    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
213673    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
213674    +   end;
MPRINT(EM_DIAGRAM):   end;
213675    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
213676    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
213677    +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
213678    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
213679    +   end;
MPRINT(EM_DIAGRAM):   end;
213680    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213681    +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
213682    +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
213683    +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
213684    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213685    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213686    +   end;
MPRINT(EM_DIAGRAM):   end;
213687    +end;
MPRINT(EM_DIAGRAM):   end;
213688    +
213689    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
213690    +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
213691    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
213692    +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
213693    +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
213694    +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
213695    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213696    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213697    +end;
MPRINT(EM_DIAGRAM):   end;
213698    +else do;
MPRINT(EM_DIAGRAM):   else do;
213699    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
213700    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
213701    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213702    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
213703    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
213704    +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
213705    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
213706    +   end;
MPRINT(EM_DIAGRAM):   end;
213707    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
213708    +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
213709    +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
213710    +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
213711    +   end;
MPRINT(EM_DIAGRAM):   end;
213712    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
213713    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
213714    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
213715    +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
213716    +   end;
MPRINT(EM_DIAGRAM):   end;
213717    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
213718    +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
213719    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
213720    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
213721    +   end;
MPRINT(EM_DIAGRAM):   end;
213722    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213723    +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
213724    +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
213725    +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
213726    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213727    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213728    +   end;
MPRINT(EM_DIAGRAM):   end;
213729    +end;
MPRINT(EM_DIAGRAM):   end;
213730    +
213731    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
213732    +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
213733    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
213734    +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
213735    +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
213736    +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
213737    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
213738    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213739    +end;
MPRINT(EM_DIAGRAM):   end;
213740    +else do;
MPRINT(EM_DIAGRAM):   else do;
213741    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
The SAS System
 
213742    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
213743    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
213744    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
213745    +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
213746    +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
213747    +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
213748    +   end;
MPRINT(EM_DIAGRAM):   end;
213749    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
213750    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
213751    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
213752    +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
213753    +   end;
MPRINT(EM_DIAGRAM):   end;
213754    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
213755    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
213756    +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
213757    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
213758    +   end;
MPRINT(EM_DIAGRAM):   end;
213759    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
213760    +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
213761    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
213762    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
213763    +   end;
MPRINT(EM_DIAGRAM):   end;
213764    +   else do;
MPRINT(EM_DIAGRAM):   else do;
213765    +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
213766    +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
213767    +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
213768    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
213769    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
213770    +   end;
MPRINT(EM_DIAGRAM):   end;
213771    +end;
MPRINT(EM_DIAGRAM):   end;
213772    +
213773    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
213774    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
213775    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
213776    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
213777    +   goto REG3DR1;
MPRINT(EM_DIAGRAM):   goto REG3DR1;
213778    +end;
MPRINT(EM_DIAGRAM):   end;
213779    +
213780    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
213781    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
213782    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
213783    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
213784    +
213785    +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
213786    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
213787    +_LP0 = _LP0 + (    -1.0202735142883) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0202735142883) * _TEMP * _1_0;
213788    +
213789    +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
213790    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
213791    +_LP0 = _LP0 + (    1.96135216788678) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.96135216788678) * _TEMP * _2_0;
213792    +_LP0 = _LP0 + (    0.16052598190077) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16052598190077) * _TEMP * _2_1;
213793    +_LP0 = _LP0 + (   -0.70902116030282) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70902116030282) * _TEMP * _2_2;
213794    +
213795    +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
213796    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
213797    +_LP0 = _LP0 + (    0.93791732843579) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.93791732843579) * _TEMP * _3_0;
213798    +_LP0 = _LP0 + (    0.86323578315443) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.86323578315443) * _TEMP * _3_1;
213799    +_LP0 = _LP0 + (   -0.93701763797667) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.93701763797667) * _TEMP * _3_2;
213800    +
213801    +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
213802    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
213803    +_LP0 = _LP0 + (     0.6826557743697) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.6826557743697) * _TEMP * _5_0;
213804    +_LP0 = _LP0 + (    0.02285788144903) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02285788144903) * _TEMP * _5_1;
213805    +_LP0 = _LP0 + (   -0.06609528477722) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06609528477722) * _TEMP * _5_2;
213806    +
213807    +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
213808    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
213809    +_LP0 = _LP0 + (   -1.44582935530291) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.44582935530291) * _TEMP * _7_0;
213810    +_LP0 = _LP0 + (   -0.21318741203534) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21318741203534) * _TEMP * _7_1;
213811    +_LP0 = _LP0 + (    0.53364168349885) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53364168349885) * _TEMP * _7_2;
213812    +
213813    +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
213814    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
213815    +_LP0 = _LP0 + (    0.98273321190928) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.98273321190928) * _TEMP * _8_0;
213816    +_LP0 = _LP0 + (      0.432298434838) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.432298434838) * _TEMP * _8_1;
213817    +_LP0 = _LP0 + (   -0.57365050311778) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.57365050311778) * _TEMP * _8_2;
213818    +
213819    +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
213820    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
213821    +_LP0 = _LP0 + (   -1.15145054763997) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.15145054763997) * _TEMP * _9_0;
213822    +_LP0 = _LP0 + (    0.03505087718511) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03505087718511) * _TEMP * _9_1;
213823    +
213824    +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
213825    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
213826    +_LP0 = _LP0 + (   -2.65890505222228) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.65890505222228) * _TEMP * _10_0;
213827    +_LP0 = _LP0 + (     0.0545239904585) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0545239904585) * _TEMP * _10_1;
213828    +_LP0 = _LP0 + (    0.51990032635141) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51990032635141) * _TEMP * _10_2;
213829    +
213830    +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
213831    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
213832    +_LP0 = _LP0 + (   -0.25494301084801) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.25494301084801) * _TEMP * _13_0;
213833    +_LP0 = _LP0 + (    0.02802747054775) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02802747054775) * _TEMP * _13_1;
213834    +_LP0 = _LP0 + (   -0.40273598284868) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40273598284868) * _TEMP * _13_2;
213835    +
213836    +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
213837    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
213838    +_LP0 = _LP0 + (    1.94607798996867) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.94607798996867) * _TEMP * _14_0;
213839    +_LP0 = _LP0 + (    0.53257949184685) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53257949184685) * _TEMP * _14_1;
213840    +_LP0 = _LP0 + (   -0.62881974341908) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.62881974341908) * _TEMP * _14_2;
213841    +
213842    +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
213843    +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
213844    +_LP0 = _LP0 + (    0.01824806947783 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01824806947783 * _TEMP);
213845    +
213846    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
213847    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
213848    +_TEMP =    -37.6992883159803 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -37.6992883159803 + _LP0;
213849    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
213850    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
213851    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
213852    +end;
MPRINT(EM_DIAGRAM):   end;
213853    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
213854    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
213855    +
213856    +REG3DR1:
213857    +
213858    +*** Residuals;
MPRINT(EM_DIAGRAM):   REG3DR1: *** Residuals;
213859    +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
213860    +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
213861    +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
213862    +end;
MPRINT(EM_DIAGRAM):   end;
213863    +else do;
MPRINT(EM_DIAGRAM):   else do;
213864    +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
213865    +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
213866    +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
213867    +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
213868    +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
213869    +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
213870    +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
213871    +   end;
MPRINT(EM_DIAGRAM):   end;
213872    +end;
MPRINT(EM_DIAGRAM):   end;
213873    +
213874    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
213875    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
213876    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
213877    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
213878    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
213879    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
213880    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
213881    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
213882    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
213883    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
213884    +end;
MPRINT(EM_DIAGRAM):   end;
213885    +I_DepVar = REG3DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3DRF[_IY];
213886    +U_DepVar = REG3DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3DRU[_IY];
213887    +
213888    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
213889    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
213890    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
213891    +* Renaming variables for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg3;
213892    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213893    +* Renaming Posterior variables for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg3;
213894    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213895    +drop Reg3_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg3_P_DepVar1;
213896    +Reg3_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg3_P_DepVar1 = P_DepVar1;
213897    +drop Reg3_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg3_P_DepVar0;
213898    +Reg3_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg3_P_DepVar0 = P_DepVar0;
213899    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213900    +* Renaming _WARN_ variable for Reg3;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg3;
213901    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213902    +length Reg3_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg3_WARN_ $4;
213903    +drop Reg3_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg3_WARN_;
213904    +Reg3_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg3_WARN_ = _WARN_;
213905    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213906    +* Ensmbl18: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Scoring Code of model 6 of 7;
213907    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213908    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213909    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
213910    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
213911    +* NODE: Neural5;
MPRINT(EM_DIAGRAM):   * NODE: Neural5;
213912    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
213913    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
213914    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
213915    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
213916    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
213917    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
213918    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
213919    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
213920    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
213921    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
213922    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
213923    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
213924    +LENGTH _WARN_ $4
213925    +      F_DepVar  $ 12
213926    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
213927    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
213928    +
213929    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
213930    +
213931    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
213932    +
213933    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
213934    +
213935    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
213936    +
213937    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
213938    +
213939    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
213940    +
213941    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
213942    +
213943    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
213944    +
213945    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
213946    +
213947    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
213948    +
213949    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
213950    +
213951    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
213952    +
213953    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
213954    +
213955    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
213956    +
213957    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
213958    +
213959    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
213960    +
213961    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
213962    +
213963    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
213964    +
213965    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
213966    +
213967    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
213968    +
213969    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
213970    +
213971    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
213972    +
213973    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
213974    +
213975    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
213976    +
213977    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
213978    +
213979    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
213980    +
213981    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
213982    +
213983    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
213984    +
213985    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
213986    +
213987    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
213988    +
213989    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
213990    +
213991    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
213992    +
213993    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
213994    +
213995    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
213996    +
213997    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
213998    +
213999    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
214000    +
214001    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
214002    +
214003    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
214004    +
214005    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
214006    +
214007    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
214008    +
214009    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
214010    +
214011    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
214012    +
214013    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
214014    +
214015    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
214016    +
214017    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
214018    +
214019    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
214020    +
214021    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
214022    +
214023    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
214024    +
214025    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
214026    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
214027    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
214028    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
214029    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214030    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214031    +end;
MPRINT(EM_DIAGRAM):   end;
214032    +else do;
MPRINT(EM_DIAGRAM):   else do;
214033    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214034    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
214035    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214036    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
214037    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
214038    +   end;
MPRINT(EM_DIAGRAM):   end;
214039    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
214040    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
214041    +   end;
MPRINT(EM_DIAGRAM):   end;
214042    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214043    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
214044    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214045    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214046    +   end;
MPRINT(EM_DIAGRAM):   end;
214047    +end;
MPRINT(EM_DIAGRAM):   end;
214048    +
214049    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
214050    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
214051    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
214052    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
214053    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
214054    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
214055    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214056    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214057    +end;
MPRINT(EM_DIAGRAM):   end;
214058    +else do;
MPRINT(EM_DIAGRAM):   else do;
214059    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214060    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
214061    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214062    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
214063    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
214064    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
214065    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
214066    +   end;
MPRINT(EM_DIAGRAM):   end;
214067    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
214068    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
214069    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
214070    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
214071    +   end;
MPRINT(EM_DIAGRAM):   end;
214072    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
214073    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
214074    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
214075    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
214076    +   end;
MPRINT(EM_DIAGRAM):   end;
214077    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
214078    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
214079    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
214080    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
214081    +   end;
MPRINT(EM_DIAGRAM):   end;
214082    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214083    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
214084    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
214085    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
214086    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214087    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214088    +   end;
MPRINT(EM_DIAGRAM):   end;
214089    +end;
MPRINT(EM_DIAGRAM):   end;
214090    +
214091    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
214092    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
214093    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
214094    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
214095    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
214096    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
214097    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214098    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214099    +end;
MPRINT(EM_DIAGRAM):   end;
214100    +else do;
MPRINT(EM_DIAGRAM):   else do;
214101    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214102    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
214103    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214104    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
214105    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
214106    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
214107    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
214108    +   end;
MPRINT(EM_DIAGRAM):   end;
214109    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
214110    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
214111    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
214112    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
214113    +   end;
MPRINT(EM_DIAGRAM):   end;
214114    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
214115    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
214116    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
214117    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
214118    +   end;
MPRINT(EM_DIAGRAM):   end;
214119    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
214120    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
214121    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
214122    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
214123    +   end;
MPRINT(EM_DIAGRAM):   end;
214124    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214125    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
214126    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
214127    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
214128    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214129    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214130    +   end;
MPRINT(EM_DIAGRAM):   end;
214131    +end;
MPRINT(EM_DIAGRAM):   end;
214132    +
214133    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
214134    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
214135    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
214136    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
214137    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
214138    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
214139    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214140    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214141    +end;
MPRINT(EM_DIAGRAM):   end;
214142    +else do;
MPRINT(EM_DIAGRAM):   else do;
214143    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214144    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
214145    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214146    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
214147    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
214148    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
214149    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
214150    +   end;
MPRINT(EM_DIAGRAM):   end;
214151    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
214152    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
214153    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
214154    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
214155    +   end;
MPRINT(EM_DIAGRAM):   end;
214156    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
214157    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
214158    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
214159    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
214160    +   end;
MPRINT(EM_DIAGRAM):   end;
214161    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
214162    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
214163    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
214164    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
214165    +   end;
MPRINT(EM_DIAGRAM):   end;
214166    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214167    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
214168    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
214169    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
214170    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214171    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214172    +   end;
MPRINT(EM_DIAGRAM):   end;
214173    +end;
MPRINT(EM_DIAGRAM):   end;
214174    +
214175    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
214176    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
214177    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
214178    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
214179    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
214180    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
214181    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214182    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214183    +end;
MPRINT(EM_DIAGRAM):   end;
214184    +else do;
MPRINT(EM_DIAGRAM):   else do;
214185    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214186    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
214187    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214188    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
214189    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
214190    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
214191    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
214192    +   end;
MPRINT(EM_DIAGRAM):   end;
214193    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
214194    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
214195    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
214196    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
214197    +   end;
MPRINT(EM_DIAGRAM):   end;
214198    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
214199    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
214200    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
214201    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
214202    +   end;
MPRINT(EM_DIAGRAM):   end;
214203    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
214204    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
214205    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
214206    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
214207    +   end;
MPRINT(EM_DIAGRAM):   end;
214208    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214209    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
214210    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
214211    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
214212    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214213    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214214    +   end;
MPRINT(EM_DIAGRAM):   end;
214215    +end;
MPRINT(EM_DIAGRAM):   end;
214216    +
214217    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
214218    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
214219    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
214220    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
214221    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
214222    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
214223    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214224    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214225    +end;
MPRINT(EM_DIAGRAM):   end;
214226    +else do;
MPRINT(EM_DIAGRAM):   else do;
214227    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214228    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
214229    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214230    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
214231    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
214232    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
214233    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
214234    +   end;
MPRINT(EM_DIAGRAM):   end;
214235    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
214236    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
214237    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
214238    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
214239    +   end;
MPRINT(EM_DIAGRAM):   end;
214240    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
214241    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
214242    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
214243    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
214244    +   end;
MPRINT(EM_DIAGRAM):   end;
214245    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
214246    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
214247    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
214248    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
214249    +   end;
MPRINT(EM_DIAGRAM):   end;
214250    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214251    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
214252    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
214253    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
214254    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214255    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214256    +   end;
MPRINT(EM_DIAGRAM):   end;
214257    +end;
MPRINT(EM_DIAGRAM):   end;
214258    +
214259    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
214260    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
214261    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
214262    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
214263    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
214264    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
214265    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214266    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214267    +end;
MPRINT(EM_DIAGRAM):   end;
214268    +else do;
MPRINT(EM_DIAGRAM):   else do;
214269    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214270    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
214271    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214272    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
214273    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
214274    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
214275    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
214276    +   end;
MPRINT(EM_DIAGRAM):   end;
214277    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
214278    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
214279    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
214280    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
214281    +   end;
MPRINT(EM_DIAGRAM):   end;
214282    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
214283    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
214284    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
214285    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
214286    +   end;
MPRINT(EM_DIAGRAM):   end;
214287    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
214288    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
214289    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
214290    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
214291    +   end;
MPRINT(EM_DIAGRAM):   end;
214292    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214293    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
214294    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
214295    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
214296    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214297    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214298    +   end;
MPRINT(EM_DIAGRAM):   end;
214299    +end;
MPRINT(EM_DIAGRAM):   end;
214300    +
214301    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
214302    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
214303    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
214304    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
214305    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
214306    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
214307    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214308    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214309    +end;
MPRINT(EM_DIAGRAM):   end;
214310    +else do;
MPRINT(EM_DIAGRAM):   else do;
214311    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214312    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
214313    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214314    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
214315    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
214316    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
214317    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
214318    +   end;
MPRINT(EM_DIAGRAM):   end;
214319    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
214320    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
214321    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
214322    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
214323    +   end;
MPRINT(EM_DIAGRAM):   end;
214324    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
214325    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
214326    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
214327    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
214328    +   end;
MPRINT(EM_DIAGRAM):   end;
214329    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
214330    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
214331    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
214332    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
214333    +   end;
MPRINT(EM_DIAGRAM):   end;
214334    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214335    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
214336    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
214337    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
214338    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214339    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214340    +   end;
MPRINT(EM_DIAGRAM):   end;
214341    +end;
MPRINT(EM_DIAGRAM):   end;
214342    +
214343    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
214344    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
214345    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
214346    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
214347    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
214348    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214349    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214350    +end;
MPRINT(EM_DIAGRAM):   end;
214351    +else do;
MPRINT(EM_DIAGRAM):   else do;
214352    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214353    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
214354    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214355    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
214356    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
214357    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
214358    +   end;
MPRINT(EM_DIAGRAM):   end;
214359    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
214360    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
214361    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
214362    +   end;
MPRINT(EM_DIAGRAM):   end;
214363    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
214364    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
214365    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
214366    +   end;
MPRINT(EM_DIAGRAM):   end;
214367    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214368    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
214369    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
214370    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214371    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214372    +   end;
MPRINT(EM_DIAGRAM):   end;
214373    +end;
MPRINT(EM_DIAGRAM):   end;
214374    +
214375    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
214376    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
214377    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
214378    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
214379    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
214380    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
214381    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214382    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214383    +end;
MPRINT(EM_DIAGRAM):   end;
214384    +else do;
MPRINT(EM_DIAGRAM):   else do;
214385    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214386    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
214387    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214388    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
214389    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
214390    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
214391    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
214392    +   end;
MPRINT(EM_DIAGRAM):   end;
214393    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
214394    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
214395    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
214396    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
214397    +   end;
MPRINT(EM_DIAGRAM):   end;
214398    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
214399    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
214400    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
214401    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
214402    +   end;
MPRINT(EM_DIAGRAM):   end;
214403    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
214404    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
214405    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
214406    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
214407    +   end;
MPRINT(EM_DIAGRAM):   end;
214408    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214409    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
214410    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
214411    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
214412    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214413    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214414    +   end;
MPRINT(EM_DIAGRAM):   end;
214415    +end;
MPRINT(EM_DIAGRAM):   end;
214416    +
214417    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
214418    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
214419    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
214420    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
214421    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
214422    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
214423    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214424    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214425    +end;
MPRINT(EM_DIAGRAM):   end;
214426    +else do;
MPRINT(EM_DIAGRAM):   else do;
214427    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214428    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
214429    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214430    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
214431    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
214432    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
214433    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
214434    +   end;
MPRINT(EM_DIAGRAM):   end;
214435    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
214436    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
214437    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
214438    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
214439    +   end;
MPRINT(EM_DIAGRAM):   end;
214440    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
214441    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
214442    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
214443    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
214444    +   end;
MPRINT(EM_DIAGRAM):   end;
214445    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
214446    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
214447    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
214448    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
214449    +   end;
MPRINT(EM_DIAGRAM):   end;
214450    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214451    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
214452    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
214453    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
214454    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214455    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214456    +   end;
MPRINT(EM_DIAGRAM):   end;
214457    +end;
MPRINT(EM_DIAGRAM):   end;
214458    +
214459    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
214460    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
214461    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
214462    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
214463    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
214464    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
214465    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214466    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214467    +end;
MPRINT(EM_DIAGRAM):   end;
214468    +else do;
MPRINT(EM_DIAGRAM):   else do;
214469    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214470    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
214471    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214472    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
214473    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
214474    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
214475    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
214476    +   end;
MPRINT(EM_DIAGRAM):   end;
214477    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
214478    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
214479    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
214480    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
214481    +   end;
MPRINT(EM_DIAGRAM):   end;
214482    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
214483    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
214484    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
214485    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
214486    +   end;
MPRINT(EM_DIAGRAM):   end;
214487    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
214488    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
214489    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
214490    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
214491    +   end;
MPRINT(EM_DIAGRAM):   end;
214492    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214493    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
214494    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
214495    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
214496    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214497    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214498    +   end;
MPRINT(EM_DIAGRAM):   end;
214499    +end;
MPRINT(EM_DIAGRAM):   end;
214500    +
214501    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
214502    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
214503    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
214504    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
214505    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
214506    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
214507    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214508    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214509    +end;
MPRINT(EM_DIAGRAM):   end;
214510    +else do;
MPRINT(EM_DIAGRAM):   else do;
214511    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214512    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
214513    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214514    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
214515    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
214516    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
214517    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
214518    +   end;
MPRINT(EM_DIAGRAM):   end;
214519    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
214520    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
214521    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
214522    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
214523    +   end;
MPRINT(EM_DIAGRAM):   end;
214524    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
214525    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
214526    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
214527    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
214528    +   end;
MPRINT(EM_DIAGRAM):   end;
214529    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
214530    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
214531    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
214532    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
214533    +   end;
MPRINT(EM_DIAGRAM):   end;
214534    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214535    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
214536    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
214537    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
214538    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214539    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214540    +   end;
MPRINT(EM_DIAGRAM):   end;
214541    +end;
MPRINT(EM_DIAGRAM):   end;
214542    +
214543    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
214544    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
214545    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
214546    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
214547    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
214548    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
214549    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214550    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214551    +end;
MPRINT(EM_DIAGRAM):   end;
214552    +else do;
MPRINT(EM_DIAGRAM):   else do;
214553    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214554    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
214555    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214556    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
214557    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
214558    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
214559    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
214560    +   end;
MPRINT(EM_DIAGRAM):   end;
214561    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
214562    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
214563    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
214564    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
214565    +   end;
MPRINT(EM_DIAGRAM):   end;
214566    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
214567    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
214568    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
214569    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
214570    +   end;
MPRINT(EM_DIAGRAM):   end;
214571    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
214572    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
214573    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
214574    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
214575    +   end;
MPRINT(EM_DIAGRAM):   end;
214576    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214577    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
214578    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
214579    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
214580    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214581    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214582    +   end;
MPRINT(EM_DIAGRAM):   end;
214583    +end;
MPRINT(EM_DIAGRAM):   end;
214584    +
214585    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214586    +*** Checking missing input Interval
214587    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
214588    +
214589    +IF NMISS(
214590    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
214591    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
214592    +
214593    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214594    +END;
MPRINT(EM_DIAGRAM):   END;
214595    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214596    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
214597    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214598    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
214599    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
214600    +END;
MPRINT(EM_DIAGRAM):   END;
214601    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
214602    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
214603    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
214604    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
214605    +END;
MPRINT(EM_DIAGRAM):   END;
214606    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214607    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
214608    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214609    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214610    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
214611    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214612    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
214613    +   H11  =     -0.0249129843743 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.0249129843743 * S_Year_Birth ;
214614    +   H11  = H11  +     0.12725616992691 * GRP_AcceptedCmp52
214615    +          +    -0.26945372540537 * GRP_Frq2  +    -0.02807540638783 * GRP_Frq3
214616    +          +     0.09639274822287 * GRP_Frq4  +    -0.12205097466688 *
214617    +        GRP_Income2  +    -0.11081339105891 * GRP_Income3
214618    +          +     0.11708983682544 * GRP_Income4  +     0.08213996698973 *
214619    +        GRP_Mnt2  +     0.04755736117379 * GRP_Mnt3  +    -0.04386204709619 *
214620    +        GRP_Mnt4  +    -0.08900126769754 * GRP_MntFishProducts2
214621    +          +    -0.01139329678589 * GRP_MntFishProducts3
214622    +          +     0.01080020635436 * GRP_MntFishProducts4
214623    +          +     0.03276801167604 * GRP_MntGoldProds2
214624    +          +     0.00684607145566 * GRP_MntGoldProds3
214625    +          +     0.00079341373044 * GRP_MntGoldProds4
214626    +          +     0.17029271800291 * GRP_MntMeatProducts2
214627    +          +     0.03003718456752 * GRP_MntMeatProducts3
214628    +          +    -0.06730384984954 * GRP_MntMeatProducts4
214629    +          +    -0.12738653189788 * GRP_MntWines2  +    -0.05870095101029 *
214630    +        GRP_MntWines3  +     0.07315089663035 * GRP_MntWines4
214631    +          +      0.1241456955943 * GRP_NumCatalogPurchases3
214632    +          +    -0.00574720008996 * GRP_NumCatalogPurchases4
214633    +          +     0.32158219504705 * GRP_NumDistPurchases2
214634    +          +      0.0000285685731 * GRP_NumDistPurchases3
214635    +          +    -0.05920668594102 * GRP_NumDistPurchases4
214636    +          +    -0.02186462965936 * GRP_NumWebPurchases2
214637    +          +    -0.01225939075207 * GRP_NumWebPurchases3
214638    +          +     0.00325978185796 * GRP_NumWebPurchases4
214639    +          +     0.08029400003818 * GRP_RFMstat2  +     0.01517552489443 *
214640    +        GRP_RFMstat3  +    -0.02560149548828 * GRP_RFMstat4
214641    +          +    -0.06091086754789 * GRP_RMntFrq2  +    -0.03720166216597 *
214642    +        GRP_RMntFrq3  +     0.09749105098352 * GRP_RMntFrq4
214643    +          +    -0.21514477253983 * GRP_Recency2  +    -0.05786796429946 *
214644    +        GRP_Recency3  +     0.06630148536635 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.12725616992691 * GRP_AcceptedCmp52 + -0.26945372540537 *
GRP_Frq2 + -0.02807540638783 * GRP_Frq3 + 0.09639274822287 * GRP_Frq4 + -0.12205097466688 *
GRP_Income2 + -0.11081339105891 * GRP_Income3 + 0.11708983682544 * GRP_Income4 +
0.08213996698973 * GRP_Mnt2 + 0.04755736117379 * GRP_Mnt3 + -0.04386204709619 * GRP_Mnt4 +
-0.08900126769754 * GRP_MntFishProducts2 + -0.01139329678589 * GRP_MntFishProducts3 +
0.01080020635436 * GRP_MntFishProducts4 + 0.03276801167604 * GRP_MntGoldProds2 +
0.00684607145566 * GRP_MntGoldProds3 + 0.00079341373044 * GRP_MntGoldProds4 + 0.17029271800291
* GRP_MntMeatProducts2 + 0.03003718456752 * GRP_MntMeatProducts3 + -0.06730384984954 *
GRP_MntMeatProducts4 + -0.12738653189788 * GRP_MntWines2 + -0.05870095101029 * GRP_MntWines3 +
0.07315089663035 * GRP_MntWines4 + 0.1241456955943 * GRP_NumCatalogPurchases3 +
-0.00574720008996 * GRP_NumCatalogPurchases4 + 0.32158219504705 * GRP_NumDistPurchases2 +
0.0000285685731 * GRP_NumDistPurchases3 + -0.05920668594102 * GRP_NumDistPurchases4 +
-0.02186462965936 * GRP_NumWebPurchases2 + -0.01225939075207 * GRP_NumWebPurchases3 +
0.00325978185796 * GRP_NumWebPurchases4 + 0.08029400003818 * GRP_RFMstat2 + 0.01517552489443 *
GRP_RFMstat3 + -0.02560149548828 * GRP_RFMstat4 + -0.06091086754789 * GRP_RMntFrq2 +
-0.03720166216597 * GRP_RMntFrq3 + 0.09749105098352 * GRP_RMntFrq4 + -0.21514477253983 *
GRP_Recency2 + -0.05786796429946 * GRP_Recency3 + 0.06630148536635 * GRP_Recency4 ;
214645    +   H11  =     -0.2495737283502 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.2495737283502 + H11 ;
214646    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
214647    +END;
MPRINT(EM_DIAGRAM):   END;
214648    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
214649    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
214650    +END;
MPRINT(EM_DIAGRAM):   END;
214651    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214652    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
214653    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214654    +
214655    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
214656    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
214657    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
214658    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
214659    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
214660    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214661    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
214662    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
214663    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
214664    +end;
MPRINT(EM_DIAGRAM):   end;
214665    +else do;
MPRINT(EM_DIAGRAM):   else do;
214666    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
214667    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
214668    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
214669    +   end;
MPRINT(EM_DIAGRAM):   end;
214670    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
214671    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
214672    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
214673    +   end;
MPRINT(EM_DIAGRAM):   end;
214674    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214675    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
214676    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
214677    +   end;
MPRINT(EM_DIAGRAM):   end;
214678    +end;
MPRINT(EM_DIAGRAM):   end;
214679    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
214680    +   P_DepVar1  =    -9.21655554427872 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.21655554427872 * H11 ;
214681    +   P_DepVar1  =    -3.98078306870422 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.98078306870422 + P_DepVar1 ;
214682    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
214683    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
214684    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
214685    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
214686    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
214687    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
214688    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
214689    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
214690    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
214691    +END;
MPRINT(EM_DIAGRAM):   END;
214692    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
214693    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
214694    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
214695    +END;
MPRINT(EM_DIAGRAM):   END;
214696    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
214697    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
214698    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
214699    +END;
MPRINT(EM_DIAGRAM):   END;
214700    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
214701    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
214702    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
214703    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
214704    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
214705    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
214706    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
214707    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214708    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
214709    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
214710    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
214711    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
214712    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
214713    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
214714    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
214715    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
214716    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
214717    +END;
MPRINT(EM_DIAGRAM):   END;
214718    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
214719    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
214720    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
214721    +drop
214722    +H11
214723    +;
MPRINT(EM_DIAGRAM):   drop H11 ;
214724    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
214725    +* Renaming variables for Neural5;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural5;
214726    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
214727    +* Renaming Posterior variables for Neural5;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural5;
214728    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
214729    +drop Neural5_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural5_P_DepVar1;
214730    +Neural5_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural5_P_DepVar1 = P_DepVar1;
214731    +drop Neural5_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural5_P_DepVar0;
214732    +Neural5_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural5_P_DepVar0 = P_DepVar0;
214733    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
214734    +* Renaming _WARN_ variable for Neural5;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural5;
214735    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
214736    +length Neural5_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural5_WARN_ $4;
214737    +drop Neural5_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural5_WARN_;
214738    +Neural5_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural5_WARN_ = _WARN_;
214739    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
214740    +* Ensmbl18: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Scoring Code of model 7 of 7;
214741    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
214742    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
214743    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
214744    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
214745    +* NODE: AutoNeural26;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural26;
214746    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
214747    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
214748    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
214749    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
214750    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
214751    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
214752    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
214753    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
214754    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
214755    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
214756    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
214757    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
214758    +LENGTH _WARN_ $4
214759    +      F_DepVar  $ 12
214760    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
214761    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
214762    +
214763    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
214764    +
214765    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
214766    +
214767    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
214768    +
214769    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
214770    +
214771    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
214772    +
214773    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
214774    +
214775    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
214776    +
214777    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
214778    +
214779    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
214780    +
214781    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
214782    +
214783    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
214784    +
214785    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
214786    +
214787    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
214788    +
214789    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
214790    +
214791    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
214792    +
214793    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
214794    +
214795    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
214796    +
214797    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
214798    +
214799    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
214800    +
214801    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
214802    +
214803    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
214804    +
214805    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
214806    +
214807    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
214808    +
214809    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
214810    +
214811    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
214812    +
214813    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
214814    +
214815    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
214816    +
214817    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
214818    +
214819    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
214820    +
214821    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
214822    +
214823    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
214824    +
214825    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
214826    +
214827    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
214828    +
214829    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
214830    +
214831    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
214832    +
214833    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
214834    +
214835    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
214836    +
214837    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
214838    +
214839    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
214840    +
214841    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
214842    +
214843    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
214844    +
214845    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
214846    +
214847    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
214848    +
214849    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
214850    +
214851    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
214852    +
214853    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
214854    +
214855    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
214856    +
214857    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
214858    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
214859    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
214860    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
214861    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214862    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214863    +end;
MPRINT(EM_DIAGRAM):   end;
214864    +else do;
MPRINT(EM_DIAGRAM):   else do;
214865    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214866    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
214867    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214868    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
214869    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
214870    +   end;
MPRINT(EM_DIAGRAM):   end;
214871    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
214872    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
214873    +   end;
MPRINT(EM_DIAGRAM):   end;
214874    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214875    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
214876    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214877    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214878    +   end;
MPRINT(EM_DIAGRAM):   end;
214879    +end;
MPRINT(EM_DIAGRAM):   end;
214880    +
214881    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
214882    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
214883    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
214884    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
214885    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
214886    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
214887    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214888    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214889    +end;
MPRINT(EM_DIAGRAM):   end;
214890    +else do;
MPRINT(EM_DIAGRAM):   else do;
214891    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214892    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
214893    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214894    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
214895    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
214896    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
214897    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
214898    +   end;
MPRINT(EM_DIAGRAM):   end;
214899    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
214900    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
214901    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
214902    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
214903    +   end;
MPRINT(EM_DIAGRAM):   end;
214904    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
214905    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
214906    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
214907    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
214908    +   end;
MPRINT(EM_DIAGRAM):   end;
214909    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
214910    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
214911    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
214912    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
214913    +   end;
MPRINT(EM_DIAGRAM):   end;
214914    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214915    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
214916    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
214917    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
214918    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214919    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214920    +   end;
MPRINT(EM_DIAGRAM):   end;
214921    +end;
MPRINT(EM_DIAGRAM):   end;
214922    +
214923    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
214924    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
214925    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
214926    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
214927    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
214928    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
214929    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214930    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214931    +end;
MPRINT(EM_DIAGRAM):   end;
214932    +else do;
MPRINT(EM_DIAGRAM):   else do;
214933    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214934    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
214935    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214936    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
214937    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
214938    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
214939    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
214940    +   end;
MPRINT(EM_DIAGRAM):   end;
214941    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
214942    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
214943    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
214944    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
214945    +   end;
MPRINT(EM_DIAGRAM):   end;
214946    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
214947    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
214948    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
214949    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
214950    +   end;
MPRINT(EM_DIAGRAM):   end;
214951    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
214952    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
214953    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
214954    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
214955    +   end;
MPRINT(EM_DIAGRAM):   end;
214956    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214957    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
214958    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
214959    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
214960    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
214961    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214962    +   end;
MPRINT(EM_DIAGRAM):   end;
214963    +end;
MPRINT(EM_DIAGRAM):   end;
214964    +
214965    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
214966    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
214967    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
214968    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
214969    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
214970    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
214971    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
214972    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
214973    +end;
MPRINT(EM_DIAGRAM):   end;
214974    +else do;
MPRINT(EM_DIAGRAM):   else do;
214975    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
214976    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
214977    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
214978    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
214979    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
214980    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
214981    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
214982    +   end;
MPRINT(EM_DIAGRAM):   end;
214983    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
214984    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
214985    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
214986    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
214987    +   end;
MPRINT(EM_DIAGRAM):   end;
214988    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
214989    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
214990    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
214991    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
214992    +   end;
MPRINT(EM_DIAGRAM):   end;
214993    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
214994    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
214995    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
214996    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
214997    +   end;
MPRINT(EM_DIAGRAM):   end;
214998    +   else do;
MPRINT(EM_DIAGRAM):   else do;
214999    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
215000    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
215001    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
215002    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215003    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215004    +   end;
MPRINT(EM_DIAGRAM):   end;
215005    +end;
MPRINT(EM_DIAGRAM):   end;
215006    +
215007    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
215008    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
215009    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
215010    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
215011    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
215012    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
215013    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215014    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215015    +end;
MPRINT(EM_DIAGRAM):   end;
215016    +else do;
MPRINT(EM_DIAGRAM):   else do;
215017    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
215018    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
215019    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215020    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
215021    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
215022    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
215023    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
215024    +   end;
MPRINT(EM_DIAGRAM):   end;
215025    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
215026    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
215027    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
215028    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
215029    +   end;
MPRINT(EM_DIAGRAM):   end;
215030    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
215031    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
215032    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
215033    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
215034    +   end;
MPRINT(EM_DIAGRAM):   end;
215035    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
215036    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
215037    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
215038    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
215039    +   end;
MPRINT(EM_DIAGRAM):   end;
215040    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215041    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
215042    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
215043    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
215044    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215045    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215046    +   end;
MPRINT(EM_DIAGRAM):   end;
215047    +end;
MPRINT(EM_DIAGRAM):   end;
215048    +
215049    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
215050    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
215051    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
215052    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
215053    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
215054    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
215055    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215056    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215057    +end;
MPRINT(EM_DIAGRAM):   end;
215058    +else do;
MPRINT(EM_DIAGRAM):   else do;
215059    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
215060    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
215061    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215062    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
215063    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
215064    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
215065    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
215066    +   end;
MPRINT(EM_DIAGRAM):   end;
215067    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
215068    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
215069    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
215070    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
215071    +   end;
MPRINT(EM_DIAGRAM):   end;
215072    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
215073    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
215074    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
215075    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
215076    +   end;
MPRINT(EM_DIAGRAM):   end;
215077    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
215078    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
215079    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
215080    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
215081    +   end;
MPRINT(EM_DIAGRAM):   end;
215082    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215083    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
215084    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
215085    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
215086    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215087    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215088    +   end;
MPRINT(EM_DIAGRAM):   end;
215089    +end;
MPRINT(EM_DIAGRAM):   end;
215090    +
215091    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
215092    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
215093    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
215094    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
215095    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
215096    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
215097    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215098    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215099    +end;
MPRINT(EM_DIAGRAM):   end;
215100    +else do;
MPRINT(EM_DIAGRAM):   else do;
215101    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
215102    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
215103    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215104    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
215105    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
215106    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
215107    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
215108    +   end;
MPRINT(EM_DIAGRAM):   end;
215109    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
215110    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
215111    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
215112    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
215113    +   end;
MPRINT(EM_DIAGRAM):   end;
215114    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
215115    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
215116    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
215117    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
215118    +   end;
MPRINT(EM_DIAGRAM):   end;
215119    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
215120    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
215121    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
215122    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
215123    +   end;
MPRINT(EM_DIAGRAM):   end;
215124    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215125    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
215126    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
215127    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
215128    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215129    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215130    +   end;
MPRINT(EM_DIAGRAM):   end;
215131    +end;
MPRINT(EM_DIAGRAM):   end;
215132    +
215133    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
215134    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
215135    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
215136    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
215137    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
215138    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
215139    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215140    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215141    +end;
MPRINT(EM_DIAGRAM):   end;
215142    +else do;
MPRINT(EM_DIAGRAM):   else do;
215143    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
215144    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
215145    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215146    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
215147    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
215148    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
215149    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
215150    +   end;
MPRINT(EM_DIAGRAM):   end;
215151    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
215152    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
215153    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
215154    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
215155    +   end;
MPRINT(EM_DIAGRAM):   end;
215156    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
215157    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
215158    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
215159    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
215160    +   end;
MPRINT(EM_DIAGRAM):   end;
215161    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
215162    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
215163    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
215164    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
215165    +   end;
MPRINT(EM_DIAGRAM):   end;
215166    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215167    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
215168    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
215169    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
215170    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215171    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215172    +   end;
MPRINT(EM_DIAGRAM):   end;
215173    +end;
MPRINT(EM_DIAGRAM):   end;
215174    +
215175    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
215176    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
215177    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
215178    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
215179    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
215180    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215181    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215182    +end;
MPRINT(EM_DIAGRAM):   end;
215183    +else do;
MPRINT(EM_DIAGRAM):   else do;
215184    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
215185    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
215186    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215187    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
215188    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
215189    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
215190    +   end;
MPRINT(EM_DIAGRAM):   end;
215191    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
215192    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
215193    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
215194    +   end;
MPRINT(EM_DIAGRAM):   end;
215195    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
215196    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
215197    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
215198    +   end;
MPRINT(EM_DIAGRAM):   end;
215199    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215200    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
215201    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
215202    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215203    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215204    +   end;
MPRINT(EM_DIAGRAM):   end;
215205    +end;
MPRINT(EM_DIAGRAM):   end;
215206    +
215207    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
215208    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
215209    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
215210    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
215211    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
215212    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
215213    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215214    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215215    +end;
MPRINT(EM_DIAGRAM):   end;
215216    +else do;
MPRINT(EM_DIAGRAM):   else do;
215217    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
215218    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
215219    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215220    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
215221    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
215222    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
215223    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
215224    +   end;
MPRINT(EM_DIAGRAM):   end;
215225    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
215226    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
215227    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
215228    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
215229    +   end;
MPRINT(EM_DIAGRAM):   end;
215230    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
215231    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
215232    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
215233    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
215234    +   end;
MPRINT(EM_DIAGRAM):   end;
215235    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
215236    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
215237    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
215238    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
215239    +   end;
MPRINT(EM_DIAGRAM):   end;
215240    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215241    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
215242    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
215243    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
215244    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215245    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215246    +   end;
MPRINT(EM_DIAGRAM):   end;
215247    +end;
MPRINT(EM_DIAGRAM):   end;
215248    +
215249    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
215250    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
215251    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
215252    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
215253    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
215254    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
215255    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215256    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215257    +end;
MPRINT(EM_DIAGRAM):   end;
215258    +else do;
MPRINT(EM_DIAGRAM):   else do;
215259    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
215260    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
215261    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215262    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
215263    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
215264    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
215265    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
215266    +   end;
MPRINT(EM_DIAGRAM):   end;
215267    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
215268    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
215269    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
215270    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
215271    +   end;
MPRINT(EM_DIAGRAM):   end;
215272    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
215273    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
215274    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
215275    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
215276    +   end;
MPRINT(EM_DIAGRAM):   end;
215277    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
215278    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
215279    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
215280    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
215281    +   end;
MPRINT(EM_DIAGRAM):   end;
215282    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215283    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
215284    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
215285    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
215286    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215287    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215288    +   end;
MPRINT(EM_DIAGRAM):   end;
215289    +end;
MPRINT(EM_DIAGRAM):   end;
215290    +
215291    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
215292    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
215293    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
215294    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
215295    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
215296    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
215297    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215298    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215299    +end;
MPRINT(EM_DIAGRAM):   end;
215300    +else do;
MPRINT(EM_DIAGRAM):   else do;
215301    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
215302    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
215303    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215304    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
215305    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
215306    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
215307    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
215308    +   end;
MPRINT(EM_DIAGRAM):   end;
215309    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
215310    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
215311    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
215312    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
215313    +   end;
MPRINT(EM_DIAGRAM):   end;
215314    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
215315    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
215316    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
215317    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
215318    +   end;
MPRINT(EM_DIAGRAM):   end;
215319    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
215320    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
215321    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
215322    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
215323    +   end;
MPRINT(EM_DIAGRAM):   end;
215324    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215325    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
215326    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
215327    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
215328    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215329    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215330    +   end;
MPRINT(EM_DIAGRAM):   end;
215331    +end;
MPRINT(EM_DIAGRAM):   end;
215332    +
215333    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
215334    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
215335    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
215336    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
215337    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
215338    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
215339    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215340    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215341    +end;
MPRINT(EM_DIAGRAM):   end;
215342    +else do;
MPRINT(EM_DIAGRAM):   else do;
215343    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
215344    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
215345    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215346    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
215347    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
215348    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
215349    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
215350    +   end;
MPRINT(EM_DIAGRAM):   end;
215351    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
215352    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
215353    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
215354    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
215355    +   end;
MPRINT(EM_DIAGRAM):   end;
215356    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
215357    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
215358    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
215359    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
215360    +   end;
MPRINT(EM_DIAGRAM):   end;
215361    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
215362    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
215363    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
215364    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
215365    +   end;
MPRINT(EM_DIAGRAM):   end;
215366    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215367    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
215368    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
215369    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
215370    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215371    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215372    +   end;
MPRINT(EM_DIAGRAM):   end;
215373    +end;
MPRINT(EM_DIAGRAM):   end;
215374    +
215375    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
215376    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
215377    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
215378    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
215379    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
215380    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
215381    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215382    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215383    +end;
MPRINT(EM_DIAGRAM):   end;
215384    +else do;
MPRINT(EM_DIAGRAM):   else do;
215385    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
215386    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
215387    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215388    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
215389    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
215390    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
215391    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
215392    +   end;
MPRINT(EM_DIAGRAM):   end;
215393    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
215394    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
215395    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
215396    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
215397    +   end;
MPRINT(EM_DIAGRAM):   end;
215398    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
215399    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
215400    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
215401    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
215402    +   end;
MPRINT(EM_DIAGRAM):   end;
215403    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
215404    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
215405    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
215406    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
215407    +   end;
MPRINT(EM_DIAGRAM):   end;
215408    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215409    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
215410    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
215411    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
215412    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215413    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215414    +   end;
MPRINT(EM_DIAGRAM):   end;
215415    +end;
MPRINT(EM_DIAGRAM):   end;
215416    +
215417    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
215418    +*** Checking missing input Interval
215419    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
215420    +
215421    +IF NMISS(
215422    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
215423    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
215424    +
215425    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215426    +END;
MPRINT(EM_DIAGRAM):   END;
215427    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
215428    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
215429    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
215430    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
215431    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
215432    +END;
MPRINT(EM_DIAGRAM):   END;
215433    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
215434    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
215435    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
215436    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
215437    +END;
MPRINT(EM_DIAGRAM):   END;
215438    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
215439    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
215440    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
215441    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
215442    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
215443    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
215444    +
215445    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
215446    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
215447    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
215448    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
215449    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
215450    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215451    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
215452    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
215453    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
215454    +end;
MPRINT(EM_DIAGRAM):   end;
215455    +else do;
MPRINT(EM_DIAGRAM):   else do;
215456    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
215457    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
215458    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
215459    +   end;
MPRINT(EM_DIAGRAM):   end;
215460    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
215461    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
215462    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
215463    +   end;
MPRINT(EM_DIAGRAM):   end;
215464    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215465    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
215466    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
215467    +   end;
MPRINT(EM_DIAGRAM):   end;
215468    +end;
MPRINT(EM_DIAGRAM):   end;
215469    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
215470    +   P_DepVar1  =     0.19741981116929 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.19741981116929 * S_Year_Birth ;
215471    +   P_DepVar1  = P_DepVar1  +    -1.04029441471903 * GRP_AcceptedCmp52
215472    +          +     1.55639377678382 * GRP_Frq2  +     0.31938212279872 * GRP_Frq3
215473    +          +    -0.51953925921981 * GRP_Frq4  +     0.69747847384334 *
215474    +        GRP_Income2  +     0.68377449690467 * GRP_Income3
215475    +          +    -0.69559233910784 * GRP_Income4  +    -0.33403886861179 *
215476    +        GRP_Mnt2  +    -0.23948445463576 * GRP_Mnt3  +     0.22705363969173 *
215477    +        GRP_Mnt4  +      0.5581826092154 * GRP_MntFishProducts2
215478    +          +     0.11895902038445 * GRP_MntFishProducts3
215479    +          +     -0.0194508409368 * GRP_MntFishProducts4
215480    +          +    -0.27172158371684 * GRP_MntGoldProds2
215481    +          +    -0.06617094209943 * GRP_MntGoldProds3
215482    +          +     0.04665050332743 * GRP_MntGoldProds4
215483    +          +    -0.97879858925028 * GRP_MntMeatProducts2
215484    +          +    -0.16953024357929 * GRP_MntMeatProducts3
215485    +          +     0.36702521764699 * GRP_MntMeatProducts4
215486    +          +     0.66896729653839 * GRP_MntWines2  +     0.41828147331708 *
215487    +        GRP_MntWines3  +    -0.39747979825201 * GRP_MntWines4
215488    +          +    -0.78725283014847 * GRP_NumCatalogPurchases3
215489    +          +     0.03702534142798 * GRP_NumCatalogPurchases4
215490    +          +    -1.86131730329435 * GRP_NumDistPurchases2
215491    +          +     -0.1744815262149 * GRP_NumDistPurchases3
215492    +          +     0.29974863559738 * GRP_NumDistPurchases4
215493    +          +     0.08237783693138 * GRP_NumWebPurchases2
215494    +          +     0.08904902237334 * GRP_NumWebPurchases3
215495    +          +     0.01729681908858 * GRP_NumWebPurchases4
215496    +          +    -0.55907537974858 * GRP_RFMstat2  +    -0.19529268587261 *
215497    +        GRP_RFMstat3  +     0.03932842736914 * GRP_RFMstat4
215498    +          +     0.24491355758464 * GRP_RMntFrq2  +     0.27364945694495 *
215499    +        GRP_RMntFrq3  +    -0.64678260362233 * GRP_RMntFrq4
215500    +          +     1.49706726643373 * GRP_Recency2  +     0.20083168709986 *
215501    +        GRP_Recency3  +    -0.57834308365674 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -1.04029441471903 * GRP_AcceptedCmp52 +
1.55639377678382 * GRP_Frq2 + 0.31938212279872 * GRP_Frq3 + -0.51953925921981 * GRP_Frq4 +
0.69747847384334 * GRP_Income2 + 0.68377449690467 * GRP_Income3 + -0.69559233910784 *
GRP_Income4 + -0.33403886861179 * GRP_Mnt2 + -0.23948445463576 * GRP_Mnt3 + 0.22705363969173 *
GRP_Mnt4 + 0.5581826092154 * GRP_MntFishProducts2 + 0.11895902038445 * GRP_MntFishProducts3 +
-0.0194508409368 * GRP_MntFishProducts4 + -0.27172158371684 * GRP_MntGoldProds2 +
-0.06617094209943 * GRP_MntGoldProds3 + 0.04665050332743 * GRP_MntGoldProds4 +
-0.97879858925028 * GRP_MntMeatProducts2 + -0.16953024357929 * GRP_MntMeatProducts3 +
0.36702521764699 * GRP_MntMeatProducts4 + 0.66896729653839 * GRP_MntWines2 + 0.41828147331708
* GRP_MntWines3 + -0.39747979825201 * GRP_MntWines4 + -0.78725283014847 *
GRP_NumCatalogPurchases3 + 0.03702534142798 * GRP_NumCatalogPurchases4 + -1.86131730329435 *
GRP_NumDistPurchases2 + -0.1744815262149 * GRP_NumDistPurchases3 + 0.29974863559738 *
GRP_NumDistPurchases4 + 0.08237783693138 * GRP_NumWebPurchases2 + 0.08904902237334 *
GRP_NumWebPurchases3 + 0.01729681908858 * GRP_NumWebPurchases4 + -0.55907537974858 *
GRP_RFMstat2 + -0.19529268587261 * GRP_RFMstat3 + 0.03932842736914 * GRP_RFMstat4 +
0.24491355758464 * GRP_RMntFrq2 + 0.27364945694495 * GRP_RMntFrq3 + -0.64678260362233 *
GRP_RMntFrq4 + 1.49706726643373 * GRP_Recency2 + 0.20083168709986 * GRP_Recency3 +
-0.57834308365674 * GRP_Recency4 ;
215502    +   P_DepVar1  =    -1.16466009831369 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.16466009831369 + P_DepVar1 ;
215503    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
215504    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
215505    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
215506    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
215507    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
215508    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
215509    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
215510    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
215511    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
215512    +END;
MPRINT(EM_DIAGRAM):   END;
215513    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
215514    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
215515    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
215516    +END;
MPRINT(EM_DIAGRAM):   END;
215517    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
215518    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
215519    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
215520    +END;
MPRINT(EM_DIAGRAM):   END;
215521    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
215522    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
215523    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
215524    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
215525    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
215526    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
215527    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
215528    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
215529    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
215530    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
215531    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
215532    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
215533    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
215534    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
215535    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
215536    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
215537    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
215538    +END;
MPRINT(EM_DIAGRAM):   END;
215539    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
215540    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
215541    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
215542    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
215543    +* Renaming variables for AutoNeural26;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural26;
215544    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
215545    +* Renaming Posterior variables for AutoNeural26;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural26;
215546    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
215547    +drop AutoNeural26_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural26_P_DepVar1;
215548    +AutoNeural26_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural26_P_DepVar1 = P_DepVar1;
215549    +drop AutoNeural26_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural26_P_DepVar0;
215550    +AutoNeural26_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural26_P_DepVar0 = P_DepVar0;
215551    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
215552    +* Renaming _WARN_ variable for AutoNeural26;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural26;
215553    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
215554    +length AutoNeural26_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural26_WARN_ $4;
215555    +drop AutoNeural26_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural26_WARN_;
215556    +AutoNeural26_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural26_WARN_ = _WARN_;
215557    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
215558    +* Ensmbl18: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Average Posteriors of 7 models;
215559    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
215560    +P_DepVar1 = (
215561    +Neural22_P_DepVar1 +
215562    +Neural21_P_DepVar1 +
215563    +Neural18_P_DepVar1 +
215564    +Reg7_P_DepVar1 +
215565    +Reg3_P_DepVar1 +
215566    +Neural5_P_DepVar1 +
215567    +AutoNeural26_P_DepVar1
215568    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural22_P_DepVar1 + Neural21_P_DepVar1 +
Neural18_P_DepVar1 + Reg7_P_DepVar1 + Reg3_P_DepVar1 + Neural5_P_DepVar1 +
AutoNeural26_P_DepVar1 )/7;
215569    +P_DepVar0 = (
215570    +Neural22_P_DepVar0 +
215571    +Neural21_P_DepVar0 +
215572    +Neural18_P_DepVar0 +
215573    +Reg7_P_DepVar0 +
215574    +Reg3_P_DepVar0 +
215575    +Neural5_P_DepVar0 +
215576    +AutoNeural26_P_DepVar0
215577    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural22_P_DepVar0 + Neural21_P_DepVar0 +
Neural18_P_DepVar0 + Reg7_P_DepVar0 + Reg3_P_DepVar0 + Neural5_P_DepVar0 +
AutoNeural26_P_DepVar0 )/7;
215578    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
215579    +* Ensmbl18: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Computing Classification Vars;
215580    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
215581    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
215582    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
215583    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
215584    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
215585    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
215586    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
215587    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
215588    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
215589    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
215590    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
215591    +end;
MPRINT(EM_DIAGRAM):   end;
215592    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
215593    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
215594    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
215595    +end;
MPRINT(EM_DIAGRAM):   end;
215596    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
215597    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
215598    +* Ensmbl18: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Producing Unformatted variable;
215599    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
215600    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
215601    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
215602    +else
215603    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
215604    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
215605    +* Ensmbl18: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Computing _WARN_ Variable;
215606    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
215607    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
215608    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
215609    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
215610    +if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
215610   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
215611    +if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
215611   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
215612    +if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
215612   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
215613    +if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
215613   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL22_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
215614    +if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
215614   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
215615    +if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
215615   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
215616    +if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
215616   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
215617    +if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
215617   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL21_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
215618    +if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
215618   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
215619    +if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
215619   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
215620    +if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
215620   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
215621    +if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
215621   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL18_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
215622    +if index(REG7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
215623    +if index(REG7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
215624    +if index(REG7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
215625    +if index(REG7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG7_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
215626    +if index(REG3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
215627    +if index(REG3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
215628    +if index(REG3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
215629    +if index(REG3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG3_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
215630    +if index(NEURAL5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
215631    +if index(NEURAL5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
215632    +if index(NEURAL5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
215633    +if index(NEURAL5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL5_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
215634    +if index(AUTONEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
215634   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
215635    +if index(AUTONEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
215635   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
215636    +if index(AUTONEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
215636   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
215637    +if index(AUTONEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
215637   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
215638    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
215639    +* Ensmbl18: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Computing Residual Vars;
215640    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
215641    +if
215642    +F_DepVar NE '1'
215643    +AND F_DepVar NE '0'
215644    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
215645    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
215646    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
215647    +end;
MPRINT(EM_DIAGRAM):   end;
215648    +else do;
MPRINT(EM_DIAGRAM):   else do;
215649    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
215650    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
215651    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
215652    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
215653    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
215654    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
215655    +END;
MPRINT(EM_DIAGRAM):   END;
215656    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
215657     run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL18_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL22_VALIDATE.VIEW used (Total process time):
      real time           0.28 seconds
      cpu time            0.28 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.29 seconds
      cpu time            0.29 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
215658     quit;
215659     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl18_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl18_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl18_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl18_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl18_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
215719     filename _pref
215719   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMPUBLISHSCORE.sas";
215720     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
215721     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural22\EMPUBLISHSCORE.sas.
215722    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
215723    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
215724    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
215725    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
215726    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
215727    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
215728    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
215729    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
215730    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
215731    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
215732    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
215733    +LENGTH _WARN_ $4
215734    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
215735    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
215736    +
215737    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
215738    +
215739    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
215740    +
215741    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
215742    +
215743    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
215744    +
215745    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
215746    +
215747    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
215748    +
215749    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
215750    +
215751    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
215752    +
215753    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
215754    +
215755    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
215756    +
215757    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
215758    +
215759    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
215760    +
215761    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
215762    +
215763    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
215764    +
215765    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
215766    +
215767    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
215768    +
215769    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
215770    +
215771    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
215772    +
215773    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
215774    +
215775    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
215776    +
215777    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
215778    +
215779    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
215780    +
215781    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
215782    +
215783    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
215784    +
215785    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
215786    +
215787    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
215788    +
215789    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
215790    +
215791    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
215792    +
215793    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
215794    +
215795    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
215796    +
215797    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
215798    +
215799    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
215800    +
215801    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
215802    +
215803    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
215804    +
215805    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
215806    +
215807    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
215808    +
215809    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
215810    +
215811    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
215812    +
215813    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
215814    +
215815    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
215816    +
215817    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
215818    +
215819    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
215820    +
215821    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
215822    +
215823    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
215824    +
215825    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
215826    +
215827    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
215828    +
215829    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
215830    +
215831    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
215832    +
215833    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
215834    +
215835    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
215836    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
215837    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
215838    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
215839    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215840    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215841    +end;
MPRINT(EM_DIAGRAM):   end;
215842    +else do;
MPRINT(EM_DIAGRAM):   else do;
215843    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
215844    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
215845    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215846    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
215847    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
215848    +   end;
MPRINT(EM_DIAGRAM):   end;
215849    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
215850    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
215851    +   end;
MPRINT(EM_DIAGRAM):   end;
215852    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215853    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
215854    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215855    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215856    +   end;
MPRINT(EM_DIAGRAM):   end;
215857    +end;
MPRINT(EM_DIAGRAM):   end;
215858    +
215859    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
215860    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
215861    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
215862    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
215863    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
215864    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
215865    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215866    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215867    +end;
MPRINT(EM_DIAGRAM):   end;
215868    +else do;
MPRINT(EM_DIAGRAM):   else do;
215869    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
215870    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
215871    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215872    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
215873    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
215874    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
215875    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
215876    +   end;
MPRINT(EM_DIAGRAM):   end;
215877    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
215878    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
215879    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
215880    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
215881    +   end;
MPRINT(EM_DIAGRAM):   end;
215882    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
215883    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
215884    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
215885    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
215886    +   end;
MPRINT(EM_DIAGRAM):   end;
215887    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
215888    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
215889    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
215890    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
215891    +   end;
MPRINT(EM_DIAGRAM):   end;
215892    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215893    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
215894    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
215895    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
215896    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215897    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215898    +   end;
MPRINT(EM_DIAGRAM):   end;
215899    +end;
MPRINT(EM_DIAGRAM):   end;
215900    +
215901    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
215902    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
215903    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
215904    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
215905    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
215906    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
215907    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215908    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215909    +end;
MPRINT(EM_DIAGRAM):   end;
215910    +else do;
MPRINT(EM_DIAGRAM):   else do;
215911    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
215912    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
215913    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215914    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
215915    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
215916    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
215917    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
215918    +   end;
MPRINT(EM_DIAGRAM):   end;
215919    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
215920    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
215921    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
215922    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
215923    +   end;
MPRINT(EM_DIAGRAM):   end;
215924    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
215925    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
215926    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
215927    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
215928    +   end;
MPRINT(EM_DIAGRAM):   end;
215929    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
215930    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
215931    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
215932    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
215933    +   end;
MPRINT(EM_DIAGRAM):   end;
215934    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215935    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
215936    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
215937    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
215938    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215939    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215940    +   end;
MPRINT(EM_DIAGRAM):   end;
215941    +end;
MPRINT(EM_DIAGRAM):   end;
215942    +
215943    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
215944    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
215945    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
215946    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
215947    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
215948    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
215949    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215950    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215951    +end;
MPRINT(EM_DIAGRAM):   end;
215952    +else do;
MPRINT(EM_DIAGRAM):   else do;
215953    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
215954    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
215955    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215956    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
215957    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
215958    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
215959    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
215960    +   end;
MPRINT(EM_DIAGRAM):   end;
215961    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
215962    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
215963    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
215964    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
215965    +   end;
MPRINT(EM_DIAGRAM):   end;
215966    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
215967    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
215968    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
215969    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
215970    +   end;
MPRINT(EM_DIAGRAM):   end;
215971    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
215972    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
215973    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
215974    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
215975    +   end;
MPRINT(EM_DIAGRAM):   end;
215976    +   else do;
MPRINT(EM_DIAGRAM):   else do;
215977    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
215978    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
215979    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
215980    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
215981    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215982    +   end;
MPRINT(EM_DIAGRAM):   end;
215983    +end;
MPRINT(EM_DIAGRAM):   end;
215984    +
215985    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
215986    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
215987    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
215988    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
215989    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
215990    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
215991    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
215992    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
215993    +end;
MPRINT(EM_DIAGRAM):   end;
215994    +else do;
MPRINT(EM_DIAGRAM):   else do;
215995    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
215996    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
215997    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
215998    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
215999    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
216000    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
216001    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
216002    +   end;
MPRINT(EM_DIAGRAM):   end;
216003    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
216004    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
216005    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
216006    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
216007    +   end;
MPRINT(EM_DIAGRAM):   end;
216008    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
216009    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
216010    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
216011    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
216012    +   end;
MPRINT(EM_DIAGRAM):   end;
216013    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
216014    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
216015    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
216016    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
216017    +   end;
MPRINT(EM_DIAGRAM):   end;
216018    +   else do;
MPRINT(EM_DIAGRAM):   else do;
216019    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
216020    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
216021    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
216022    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
216023    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216024    +   end;
MPRINT(EM_DIAGRAM):   end;
216025    +end;
MPRINT(EM_DIAGRAM):   end;
216026    +
216027    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
216028    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
216029    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
216030    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
216031    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
216032    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
216033    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
216034    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216035    +end;
MPRINT(EM_DIAGRAM):   end;
216036    +else do;
MPRINT(EM_DIAGRAM):   else do;
216037    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
216038    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
216039    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
216040    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
216041    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
216042    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
216043    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
216044    +   end;
MPRINT(EM_DIAGRAM):   end;
216045    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
216046    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
216047    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
216048    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
216049    +   end;
MPRINT(EM_DIAGRAM):   end;
216050    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
216051    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
216052    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
216053    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
216054    +   end;
MPRINT(EM_DIAGRAM):   end;
216055    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
216056    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
216057    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
216058    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
216059    +   end;
MPRINT(EM_DIAGRAM):   end;
216060    +   else do;
MPRINT(EM_DIAGRAM):   else do;
216061    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
216062    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
216063    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
216064    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
216065    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216066    +   end;
MPRINT(EM_DIAGRAM):   end;
216067    +end;
MPRINT(EM_DIAGRAM):   end;
216068    +
216069    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
216070    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
216071    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
216072    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
216073    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
216074    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
216075    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
216076    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216077    +end;
MPRINT(EM_DIAGRAM):   end;
216078    +else do;
MPRINT(EM_DIAGRAM):   else do;
216079    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
216080    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
216081    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
216082    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
216083    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
216084    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
216085    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
216086    +   end;
MPRINT(EM_DIAGRAM):   end;
216087    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
216088    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
216089    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
216090    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
216091    +   end;
MPRINT(EM_DIAGRAM):   end;
216092    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
216093    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
216094    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
216095    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
216096    +   end;
MPRINT(EM_DIAGRAM):   end;
216097    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
216098    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
216099    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
216100    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
216101    +   end;
MPRINT(EM_DIAGRAM):   end;
216102    +   else do;
MPRINT(EM_DIAGRAM):   else do;
216103    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
216104    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
216105    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
216106    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
216107    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216108    +   end;
MPRINT(EM_DIAGRAM):   end;
216109    +end;
MPRINT(EM_DIAGRAM):   end;
216110    +
216111    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
216112    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
216113    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
216114    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
216115    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
216116    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
216117    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
216118    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216119    +end;
MPRINT(EM_DIAGRAM):   end;
216120    +else do;
MPRINT(EM_DIAGRAM):   else do;
216121    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
216122    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
216123    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
216124    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
216125    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
216126    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
216127    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
216128    +   end;
MPRINT(EM_DIAGRAM):   end;
216129    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
216130    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
216131    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
216132    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
216133    +   end;
MPRINT(EM_DIAGRAM):   end;
216134    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
216135    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
216136    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
216137    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
216138    +   end;
MPRINT(EM_DIAGRAM):   end;
216139    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
216140    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
216141    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
216142    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
216143    +   end;
MPRINT(EM_DIAGRAM):   end;
216144    +   else do;
MPRINT(EM_DIAGRAM):   else do;
216145    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
216146    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
216147    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
216148    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
216149    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216150    +   end;
MPRINT(EM_DIAGRAM):   end;
216151    +end;
MPRINT(EM_DIAGRAM):   end;
216152    +
216153    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
216154    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
216155    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
216156    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
216157    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
216158    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
216159    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216160    +end;
MPRINT(EM_DIAGRAM):   end;
216161    +else do;
MPRINT(EM_DIAGRAM):   else do;
216162    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
216163    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
216164    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
216165    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
216166    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
216167    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
216168    +   end;
MPRINT(EM_DIAGRAM):   end;
216169    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
216170    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
216171    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
216172    +   end;
MPRINT(EM_DIAGRAM):   end;
216173    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
216174    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
216175    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
216176    +   end;
MPRINT(EM_DIAGRAM):   end;
216177    +   else do;
MPRINT(EM_DIAGRAM):   else do;
216178    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
216179    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
216180    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
216181    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216182    +   end;
MPRINT(EM_DIAGRAM):   end;
216183    +end;
MPRINT(EM_DIAGRAM):   end;
216184    +
216185    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
216186    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
216187    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
216188    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
216189    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
216190    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
216191    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
216192    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216193    +end;
MPRINT(EM_DIAGRAM):   end;
216194    +else do;
MPRINT(EM_DIAGRAM):   else do;
216195    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
216196    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
216197    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
216198    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
216199    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
216200    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
216201    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
216202    +   end;
MPRINT(EM_DIAGRAM):   end;
216203    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
216204    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
216205    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
216206    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
216207    +   end;
MPRINT(EM_DIAGRAM):   end;
216208    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
216209    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
216210    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
216211    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
216212    +   end;
MPRINT(EM_DIAGRAM):   end;
216213    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
216214    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
216215    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
216216    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
216217    +   end;
MPRINT(EM_DIAGRAM):   end;
216218    +   else do;
MPRINT(EM_DIAGRAM):   else do;
216219    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
216220    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
216221    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
216222    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
216223    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216224    +   end;
MPRINT(EM_DIAGRAM):   end;
216225    +end;
MPRINT(EM_DIAGRAM):   end;
216226    +
216227    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
216228    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
216229    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
216230    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
216231    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
216232    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
216233    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
216234    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216235    +end;
MPRINT(EM_DIAGRAM):   end;
216236    +else do;
MPRINT(EM_DIAGRAM):   else do;
216237    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
216238    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
216239    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
216240    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
216241    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
216242    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
216243    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
216244    +   end;
MPRINT(EM_DIAGRAM):   end;
216245    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
216246    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
216247    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
216248    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
216249    +   end;
MPRINT(EM_DIAGRAM):   end;
216250    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
216251    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
216252    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
216253    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
216254    +   end;
MPRINT(EM_DIAGRAM):   end;
216255    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
216256    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
216257    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
216258    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
216259    +   end;
MPRINT(EM_DIAGRAM):   end;
216260    +   else do;
MPRINT(EM_DIAGRAM):   else do;
216261    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
216262    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
216263    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
216264    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
216265    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216266    +   end;
MPRINT(EM_DIAGRAM):   end;
216267    +end;
MPRINT(EM_DIAGRAM):   end;
216268    +
216269    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
216270    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
216271    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
216272    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
216273    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
216274    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
216275    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
216276    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216277    +end;
MPRINT(EM_DIAGRAM):   end;
216278    +else do;
MPRINT(EM_DIAGRAM):   else do;
216279    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
216280    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
216281    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
216282    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
216283    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
216284    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
216285    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
216286    +   end;
MPRINT(EM_DIAGRAM):   end;
216287    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
216288    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
216289    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
216290    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
216291    +   end;
MPRINT(EM_DIAGRAM):   end;
216292    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
216293    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
216294    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
216295    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
216296    +   end;
MPRINT(EM_DIAGRAM):   end;
216297    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
216298    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
216299    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
216300    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
216301    +   end;
MPRINT(EM_DIAGRAM):   end;
216302    +   else do;
MPRINT(EM_DIAGRAM):   else do;
216303    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
216304    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
216305    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
216306    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
216307    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216308    +   end;
MPRINT(EM_DIAGRAM):   end;
216309    +end;
MPRINT(EM_DIAGRAM):   end;
216310    +
216311    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
216312    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
216313    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
216314    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
216315    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
216316    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
216317    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
216318    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216319    +end;
MPRINT(EM_DIAGRAM):   end;
216320    +else do;
MPRINT(EM_DIAGRAM):   else do;
216321    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
216322    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
216323    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
216324    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
216325    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
216326    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
216327    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
216328    +   end;
MPRINT(EM_DIAGRAM):   end;
216329    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
216330    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
216331    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
216332    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
216333    +   end;
MPRINT(EM_DIAGRAM):   end;
216334    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
216335    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
216336    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
216337    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
216338    +   end;
MPRINT(EM_DIAGRAM):   end;
216339    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
216340    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
216341    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
216342    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
216343    +   end;
MPRINT(EM_DIAGRAM):   end;
216344    +   else do;
MPRINT(EM_DIAGRAM):   else do;
216345    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
216346    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
216347    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
216348    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
216349    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216350    +   end;
MPRINT(EM_DIAGRAM):   end;
216351    +end;
MPRINT(EM_DIAGRAM):   end;
216352    +
216353    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
216354    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
216355    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
216356    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
216357    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
216358    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
216359    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
216360    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216361    +end;
MPRINT(EM_DIAGRAM):   end;
216362    +else do;
MPRINT(EM_DIAGRAM):   else do;
216363    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
216364    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
216365    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
216366    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
216367    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
216368    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
216369    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
216370    +   end;
MPRINT(EM_DIAGRAM):   end;
216371    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
216372    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
216373    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
216374    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
216375    +   end;
MPRINT(EM_DIAGRAM):   end;
216376    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
216377    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
216378    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
216379    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
216380    +   end;
MPRINT(EM_DIAGRAM):   end;
216381    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
216382    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
216383    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
216384    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
216385    +   end;
MPRINT(EM_DIAGRAM):   end;
216386    +   else do;
MPRINT(EM_DIAGRAM):   else do;
216387    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
216388    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
216389    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
216390    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
216391    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216392    +   end;
MPRINT(EM_DIAGRAM):   end;
216393    +end;
MPRINT(EM_DIAGRAM):   end;
216394    +
216395    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216396    +*** Checking missing input Interval
216397    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
216398    +
216399    +IF NMISS(
216400    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
216401    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
216402    +
216403    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
216404    +END;
MPRINT(EM_DIAGRAM):   END;
216405    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216406    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
216407    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216408    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
216409    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
216410    +END;
MPRINT(EM_DIAGRAM):   END;
216411    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
216412    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
216413    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
216414    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
216415    +END;
MPRINT(EM_DIAGRAM):   END;
216416    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216417    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
216418    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216419    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216420    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
216421    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216422    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
216423    +   H11  =     0.04727192845675 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.04727192845675 * S_Year_Birth ;
216424    +   H12  =    -0.03499603197831 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.03499603197831 * S_Year_Birth ;
216425    +   H13  =      -0.249387333167 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = -0.249387333167 * S_Year_Birth ;
216426    +   H14  =    -0.18145230662582 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.18145230662582 * S_Year_Birth ;
216427    +   H15  =    -0.07744416350216 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.07744416350216 * S_Year_Birth ;
216428    +   H11  = H11  +    -0.25371698668168 * GRP_AcceptedCmp52
216429    +          +     0.38185615945621 * GRP_Frq2  +     0.03545555759423 * GRP_Frq3
216430    +          +    -0.00061660249238 * GRP_Frq4  +     0.41779261820045 *
216431    +        GRP_Income2  +     0.51800912898069 * GRP_Income3
216432    +          +    -0.36427548932695 * GRP_Income4  +    -0.06433979614617 *
216433    +        GRP_Mnt2  +     0.00045120565293 * GRP_Mnt3  +    -0.13992317322759 *
216434    +        GRP_Mnt4  +     0.34207391538024 * GRP_MntFishProducts2
216435    +          +     0.03411739869638 * GRP_MntFishProducts3
216436    +          +      -0.083693402353 * GRP_MntFishProducts4
216437    +          +     -0.1318128730187 * GRP_MntGoldProds2
216438    +          +     -0.0614737729382 * GRP_MntGoldProds3
216439    +          +    -0.00372986687449 * GRP_MntGoldProds4
216440    +          +     -0.3129171829017 * GRP_MntMeatProducts2
216441    +          +     0.01519664718127 * GRP_MntMeatProducts3
216442    +          +     0.29997111548812 * GRP_MntMeatProducts4
216443    +          +       0.389673942682 * GRP_MntWines2  +     0.21159785789434 *
216444    +        GRP_MntWines3  +    -0.26921349986988 * GRP_MntWines4
216445    +          +    -0.47013218092095 * GRP_NumCatalogPurchases3
216446    +          +     0.23943411636141 * GRP_NumCatalogPurchases4
216447    +          +    -0.68715024477164 * GRP_NumDistPurchases2
216448    +          +    -0.09178471992122 * GRP_NumDistPurchases3
216449    +          +    -0.01170225640351 * GRP_NumDistPurchases4
216450    +          +    -0.14760833919227 * GRP_NumWebPurchases2
216451    +          +     0.02966820025811 * GRP_NumWebPurchases3
216452    +          +    -0.04127892210576 * GRP_NumWebPurchases4
216453    +          +    -0.45467119970502 * GRP_RFMstat2  +    -0.14644406995031 *
216454    +        GRP_RFMstat3  +    -0.12660007404037 * GRP_RFMstat4
216455    +          +     0.04829215694488 * GRP_RMntFrq2  +     0.10137738373353 *
216456    +        GRP_RMntFrq3  +     -0.2873514159435 * GRP_RMntFrq4
216457    +          +     0.61737333380878 * GRP_Recency2  +     0.16651370318087 *
216458    +        GRP_Recency3  +    -0.15382569411658 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25371698668168 * GRP_AcceptedCmp52 + 0.38185615945621 *
GRP_Frq2 + 0.03545555759423 * GRP_Frq3 + -0.00061660249238 * GRP_Frq4 + 0.41779261820045 *
GRP_Income2 + 0.51800912898069 * GRP_Income3 + -0.36427548932695 * GRP_Income4 +
-0.06433979614617 * GRP_Mnt2 + 0.00045120565293 * GRP_Mnt3 + -0.13992317322759 * GRP_Mnt4 +
0.34207391538024 * GRP_MntFishProducts2 + 0.03411739869638 * GRP_MntFishProducts3 +
-0.083693402353 * GRP_MntFishProducts4 + -0.1318128730187 * GRP_MntGoldProds2 +
-0.0614737729382 * GRP_MntGoldProds3 + -0.00372986687449 * GRP_MntGoldProds4 +
-0.3129171829017 * GRP_MntMeatProducts2 + 0.01519664718127 * GRP_MntMeatProducts3 +
0.29997111548812 * GRP_MntMeatProducts4 + 0.389673942682 * GRP_MntWines2 + 0.21159785789434 *
GRP_MntWines3 + -0.26921349986988 * GRP_MntWines4 + -0.47013218092095 *
GRP_NumCatalogPurchases3 + 0.23943411636141 * GRP_NumCatalogPurchases4 + -0.68715024477164 *
GRP_NumDistPurchases2 + -0.09178471992122 * GRP_NumDistPurchases3 + -0.01170225640351 *
GRP_NumDistPurchases4 + -0.14760833919227 * GRP_NumWebPurchases2 + 0.02966820025811 *
GRP_NumWebPurchases3 + -0.04127892210576 * GRP_NumWebPurchases4 + -0.45467119970502 *
GRP_RFMstat2 + -0.14644406995031 * GRP_RFMstat3 + -0.12660007404037 * GRP_RFMstat4 +
0.04829215694488 * GRP_RMntFrq2 + 0.10137738373353 * GRP_RMntFrq3 + -0.2873514159435 *
GRP_RMntFrq4 + 0.61737333380878 * GRP_Recency2 + 0.16651370318087 * GRP_Recency3 +
-0.15382569411658 * GRP_Recency4 ;
216459    +   H12  = H12  +    -0.00960598895677 * GRP_AcceptedCmp52
216460    +          +    -0.13877780492855 * GRP_Frq2  +    -0.12078849771739 * GRP_Frq3
216461    +          +     0.25058833013238 * GRP_Frq4  +     0.13932014454657 *
216462    +        GRP_Income2  +    -0.11560599273748 * GRP_Income3
216463    +          +    -0.36622829757109 * GRP_Income4  +     0.12796853065131 *
216464    +        GRP_Mnt2  +    -0.15829126446209 * GRP_Mnt3  +    -0.35779207872654 *
216465    +        GRP_Mnt4  +     0.06590491513415 * GRP_MntFishProducts2
216466    +          +     0.00842475350903 * GRP_MntFishProducts3
216467    +          +     -0.1623103908885 * GRP_MntFishProducts4
216468    +          +    -0.23845524931139 * GRP_MntGoldProds2
216469    +          +    -0.07128567155438 * GRP_MntGoldProds3
216470    +          +     0.25778887379163 * GRP_MntGoldProds4
216471    +          +    -0.12224351227219 * GRP_MntMeatProducts2
216472    +          +     0.06269922653052 * GRP_MntMeatProducts3
216473    +          +      0.2587215409794 * GRP_MntMeatProducts4
216474    +          +     0.20096090232239 * GRP_MntWines2  +    -0.16858917844476 *
216475    +        GRP_MntWines3  +     0.03815809499779 * GRP_MntWines4
216476    +          +     0.05177526225067 * GRP_NumCatalogPurchases3
216477    +          +    -0.18831777813313 * GRP_NumCatalogPurchases4
216478    +          +     0.12374838743082 * GRP_NumDistPurchases2
216479    +          +    -0.19910688422086 * GRP_NumDistPurchases3
216480    +          +    -0.03804569737208 * GRP_NumDistPurchases4
216481    +          +    -0.17179633678901 * GRP_NumWebPurchases2
216482    +          +    -0.08560184232365 * GRP_NumWebPurchases3
216483    +          +     0.09237237622553 * GRP_NumWebPurchases4
216484    +          +     0.01544327143979 * GRP_RFMstat2  +      0.1127818122444 *
216485    +        GRP_RFMstat3  +    -0.21371736650143 * GRP_RFMstat4
216486    +          +    -0.14005478166078 * GRP_RMntFrq2  +     0.07954568858907 *
216487    +        GRP_RMntFrq3  +    -0.02313269086836 * GRP_RMntFrq4
216488    +          +     0.04358116545272 * GRP_Recency2  +    -0.02969695172962 *
216489    +        GRP_Recency3  +     0.00206593904485 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.00960598895677 * GRP_AcceptedCmp52 + -0.13877780492855 *
GRP_Frq2 + -0.12078849771739 * GRP_Frq3 + 0.25058833013238 * GRP_Frq4 + 0.13932014454657 *
GRP_Income2 + -0.11560599273748 * GRP_Income3 + -0.36622829757109 * GRP_Income4 +
0.12796853065131 * GRP_Mnt2 + -0.15829126446209 * GRP_Mnt3 + -0.35779207872654 * GRP_Mnt4 +
0.06590491513415 * GRP_MntFishProducts2 + 0.00842475350903 * GRP_MntFishProducts3 +
-0.1623103908885 * GRP_MntFishProducts4 + -0.23845524931139 * GRP_MntGoldProds2 +
-0.07128567155438 * GRP_MntGoldProds3 + 0.25778887379163 * GRP_MntGoldProds4 +
-0.12224351227219 * GRP_MntMeatProducts2 + 0.06269922653052 * GRP_MntMeatProducts3 +
0.2587215409794 * GRP_MntMeatProducts4 + 0.20096090232239 * GRP_MntWines2 + -0.16858917844476
* GRP_MntWines3 + 0.03815809499779 * GRP_MntWines4 + 0.05177526225067 *
GRP_NumCatalogPurchases3 + -0.18831777813313 * GRP_NumCatalogPurchases4 + 0.12374838743082 *
GRP_NumDistPurchases2 + -0.19910688422086 * GRP_NumDistPurchases3 + -0.03804569737208 *
GRP_NumDistPurchases4 + -0.17179633678901 * GRP_NumWebPurchases2 + -0.08560184232365 *
GRP_NumWebPurchases3 + 0.09237237622553 * GRP_NumWebPurchases4 + 0.01544327143979 *
GRP_RFMstat2 + 0.1127818122444 * GRP_RFMstat3 + -0.21371736650143 * GRP_RFMstat4 +
-0.14005478166078 * GRP_RMntFrq2 + 0.07954568858907 * GRP_RMntFrq3 + -0.02313269086836 *
GRP_RMntFrq4 + 0.04358116545272 * GRP_Recency2 + -0.02969695172962 * GRP_Recency3 +
0.00206593904485 * GRP_Recency4 ;
216490    +   H13  = H13  +     0.11273135858209 * GRP_AcceptedCmp52
216491    +          +    -0.15015665173608 * GRP_Frq2  +    -0.20454924588356 * GRP_Frq3
216492    +          +    -0.04047998964496 * GRP_Frq4  +    -0.29897237144541 *
216493    +        GRP_Income2  +      -0.028464296882 * GRP_Income3
216494    +          +     0.24836294191696 * GRP_Income4  +     0.08738925553158 *
216495    +        GRP_Mnt2  +     0.00962293230168 * GRP_Mnt3  +    -0.12661643514597 *
216496    +        GRP_Mnt4  +    -0.03747719154948 * GRP_MntFishProducts2
216497    +          +    -0.07078012229572 * GRP_MntFishProducts3
216498    +          +    -0.14569186671189 * GRP_MntFishProducts4
216499    +          +     0.14963390032413 * GRP_MntGoldProds2
216500    +          +    -0.11869917970226 * GRP_MntGoldProds3
216501    +          +     0.25943105626615 * GRP_MntGoldProds4
216502    +          +     0.36609689271233 * GRP_MntMeatProducts2
216503    +          +     0.10969864655073 * GRP_MntMeatProducts3
216504    +          +    -0.03446779336952 * GRP_MntMeatProducts4
216505    +          +    -0.16882321573662 * GRP_MntWines2  +     0.07914922328232 *
216506    +        GRP_MntWines3  +     0.13243594484158 * GRP_MntWines4
216507    +          +     0.39758714937962 * GRP_NumCatalogPurchases3
216508    +          +     0.31434011051179 * GRP_NumCatalogPurchases4
216509    +          +     0.08068432649382 * GRP_NumDistPurchases2
216510    +          +    -0.08875599058351 * GRP_NumDistPurchases3
216511    +          +     0.26738740475822 * GRP_NumDistPurchases4
216512    +          +     -0.0916247468051 * GRP_NumWebPurchases2
216513    +          +    -0.17267741073665 * GRP_NumWebPurchases3
216514    +          +     0.01349113315351 * GRP_NumWebPurchases4
216515    +          +    -0.19075973281592 * GRP_RFMstat2  +    -0.20146461162283 *
216516    +        GRP_RFMstat3  +    -0.13097471458987 * GRP_RFMstat4
216517    +          +     0.06761773631631 * GRP_RMntFrq2  +     0.27576244694442 *
216518    +        GRP_RMntFrq3  +      0.1281788430307 * GRP_RMntFrq4
216519    +          +    -0.15939599795679 * GRP_Recency2  +    -0.00210397286084 *
216520    +        GRP_Recency3  +     0.28490847560375 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.11273135858209 * GRP_AcceptedCmp52 + -0.15015665173608 *
GRP_Frq2 + -0.20454924588356 * GRP_Frq3 + -0.04047998964496 * GRP_Frq4 + -0.29897237144541 *
GRP_Income2 + -0.028464296882 * GRP_Income3 + 0.24836294191696 * GRP_Income4 +
0.08738925553158 * GRP_Mnt2 + 0.00962293230168 * GRP_Mnt3 + -0.12661643514597 * GRP_Mnt4 +
-0.03747719154948 * GRP_MntFishProducts2 + -0.07078012229572 * GRP_MntFishProducts3 +
-0.14569186671189 * GRP_MntFishProducts4 + 0.14963390032413 * GRP_MntGoldProds2 +
-0.11869917970226 * GRP_MntGoldProds3 + 0.25943105626615 * GRP_MntGoldProds4 +
0.36609689271233 * GRP_MntMeatProducts2 + 0.10969864655073 * GRP_MntMeatProducts3 +
-0.03446779336952 * GRP_MntMeatProducts4 + -0.16882321573662 * GRP_MntWines2 +
0.07914922328232 * GRP_MntWines3 + 0.13243594484158 * GRP_MntWines4 + 0.39758714937962 *
GRP_NumCatalogPurchases3 + 0.31434011051179 * GRP_NumCatalogPurchases4 + 0.08068432649382 *
GRP_NumDistPurchases2 + -0.08875599058351 * GRP_NumDistPurchases3 + 0.26738740475822 *
GRP_NumDistPurchases4 + -0.0916247468051 * GRP_NumWebPurchases2 + -0.17267741073665 *
GRP_NumWebPurchases3 + 0.01349113315351 * GRP_NumWebPurchases4 + -0.19075973281592 *
GRP_RFMstat2 + -0.20146461162283 * GRP_RFMstat3 + -0.13097471458987 * GRP_RFMstat4 +
0.06761773631631 * GRP_RMntFrq2 + 0.27576244694442 * GRP_RMntFrq3 + 0.1281788430307 *
GRP_RMntFrq4 + -0.15939599795679 * GRP_Recency2 + -0.00210397286084 * GRP_Recency3 +
0.28490847560375 * GRP_Recency4 ;
216521    +   H14  = H14  +     0.27713596853764 * GRP_AcceptedCmp52
216522    +          +    -0.11480256849934 * GRP_Frq2  +      0.0285240312455 * GRP_Frq3
216523    +          +     0.09416065239682 * GRP_Frq4  +     -0.1229961422993 *
216524    +        GRP_Income2  +     0.01867364051002 * GRP_Income3
216525    +          +     0.05820105400306 * GRP_Income4  +    -0.16873429334819 *
216526    +        GRP_Mnt2  +    -0.01221085891741 * GRP_Mnt3  +    -0.10225236565235 *
216527    +        GRP_Mnt4  +    -0.09613387975858 * GRP_MntFishProducts2
216528    +          +    -0.18334484867808 * GRP_MntFishProducts3
216529    +          +     0.13484477561766 * GRP_MntFishProducts4
216530    +          +    -0.05145913380692 * GRP_MntGoldProds2
216531    +          +     0.04459987080173 * GRP_MntGoldProds3
216532    +          +     0.01539767655772 * GRP_MntGoldProds4
216533    +          +     0.26537148543352 * GRP_MntMeatProducts2
216534    +          +     0.22913678530176 * GRP_MntMeatProducts3
216535    +          +     0.21262490658374 * GRP_MntMeatProducts4
216536    +          +    -0.11513521401249 * GRP_MntWines2  +    -0.14420673462527 *
216537    +        GRP_MntWines3  +     0.11949691312637 * GRP_MntWines4
216538    +          +    -0.02289734111038 * GRP_NumCatalogPurchases3
216539    +          +    -0.12014539185275 * GRP_NumCatalogPurchases4
216540    +          +     0.09224372228857 * GRP_NumDistPurchases2
216541    +          +    -0.14205094961773 * GRP_NumDistPurchases3
216542    +          +    -0.27160467877541 * GRP_NumDistPurchases4
216543    +          +    -0.15428446875019 * GRP_NumWebPurchases2
216544    +          +    -0.36914157795453 * GRP_NumWebPurchases3
216545    +          +    -0.41610537355059 * GRP_NumWebPurchases4
216546    +          +    -0.29442656678388 * GRP_RFMstat2  +     0.03961235509827 *
216547    +        GRP_RFMstat3  +    -0.18322878380243 * GRP_RFMstat4
216548    +          +     0.06857495854453 * GRP_RMntFrq2  +     0.08325769999442 *
216549    +        GRP_RMntFrq3  +     0.24334424933749 * GRP_RMntFrq4
216550    +          +    -0.50963259840069 * GRP_Recency2  +    -0.24163634485458 *
216551    +        GRP_Recency3  +     -0.1023689653207 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.27713596853764 * GRP_AcceptedCmp52 + -0.11480256849934 *
GRP_Frq2 + 0.0285240312455 * GRP_Frq3 + 0.09416065239682 * GRP_Frq4 + -0.1229961422993 *
GRP_Income2 + 0.01867364051002 * GRP_Income3 + 0.05820105400306 * GRP_Income4 +
-0.16873429334819 * GRP_Mnt2 + -0.01221085891741 * GRP_Mnt3 + -0.10225236565235 * GRP_Mnt4 +
-0.09613387975858 * GRP_MntFishProducts2 + -0.18334484867808 * GRP_MntFishProducts3 +
0.13484477561766 * GRP_MntFishProducts4 + -0.05145913380692 * GRP_MntGoldProds2 +
0.04459987080173 * GRP_MntGoldProds3 + 0.01539767655772 * GRP_MntGoldProds4 + 0.26537148543352
* GRP_MntMeatProducts2 + 0.22913678530176 * GRP_MntMeatProducts3 + 0.21262490658374 *
GRP_MntMeatProducts4 + -0.11513521401249 * GRP_MntWines2 + -0.14420673462527 * GRP_MntWines3 +
0.11949691312637 * GRP_MntWines4 + -0.02289734111038 * GRP_NumCatalogPurchases3 +
-0.12014539185275 * GRP_NumCatalogPurchases4 + 0.09224372228857 * GRP_NumDistPurchases2 +
-0.14205094961773 * GRP_NumDistPurchases3 + -0.27160467877541 * GRP_NumDistPurchases4 +
-0.15428446875019 * GRP_NumWebPurchases2 + -0.36914157795453 * GRP_NumWebPurchases3 +
-0.41610537355059 * GRP_NumWebPurchases4 + -0.29442656678388 * GRP_RFMstat2 + 0.03961235509827
* GRP_RFMstat3 + -0.18322878380243 * GRP_RFMstat4 + 0.06857495854453 * GRP_RMntFrq2 +
0.08325769999442 * GRP_RMntFrq3 + 0.24334424933749 * GRP_RMntFrq4 + -0.50963259840069 *
GRP_Recency2 + -0.24163634485458 * GRP_Recency3 + -0.1023689653207 * GRP_Recency4 ;
216552    +   H15  = H15  +    -0.58071728739803 * GRP_AcceptedCmp52
216553    +          +    -0.33803120859672 * GRP_Frq2  +    -0.08690701614481 * GRP_Frq3
216554    +          +     0.06107334775294 * GRP_Frq4  +     0.00751374071999 *
216555    +        GRP_Income2  +     0.20911873861779 * GRP_Income3
216556    +          +    -0.14977199160976 * GRP_Income4  +     0.15427447371686 *
216557    +        GRP_Mnt2  +    -0.24298277669059 * GRP_Mnt3  +    -0.02935492111499 *
216558    +        GRP_Mnt4  +     0.04923982061963 * GRP_MntFishProducts2
216559    +          +    -0.08952948139975 * GRP_MntFishProducts3
216560    +          +     0.15338133379465 * GRP_MntFishProducts4
216561    +          +     0.04821845492824 * GRP_MntGoldProds2
216562    +          +     0.20117781904284 * GRP_MntGoldProds3
216563    +          +     0.13013396690778 * GRP_MntGoldProds4
216564    +          +    -0.03940841472157 * GRP_MntMeatProducts2
216565    +          +     0.03161017721112 * GRP_MntMeatProducts3
216566    +          +    -0.21938330779867 * GRP_MntMeatProducts4
216567    +          +      0.3039864690076 * GRP_MntWines2  +     0.33038690291786 *
216568    +        GRP_MntWines3  +     0.03314465135063 * GRP_MntWines4
216569    +          +    -0.07655889365033 * GRP_NumCatalogPurchases3
216570    +          +    -0.17353955777897 * GRP_NumCatalogPurchases4
216571    +          +    -0.16058154480995 * GRP_NumDistPurchases2
216572    +          +    -0.30101518928361 * GRP_NumDistPurchases3
216573    +          +      0.0473480026433 * GRP_NumDistPurchases4
216574    +          +     0.03132883547053 * GRP_NumWebPurchases2
216575    +          +    -0.29425936985479 * GRP_NumWebPurchases3
216576    +          +    -0.12527625315403 * GRP_NumWebPurchases4
216577    +          +     0.30683805591766 * GRP_RFMstat2  +    -0.21275334469197 *
216578    +        GRP_RFMstat3  +     0.32474239840607 * GRP_RFMstat4
216579    +          +     0.09289841520091 * GRP_RMntFrq2  +     0.22137778862379 *
216580    +        GRP_RMntFrq3  +     0.12254524703503 * GRP_RMntFrq4
216581    +          +     0.46836624272095 * GRP_Recency2  +     0.01747843890017 *
216582    +        GRP_Recency3  +    -0.28363324780869 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.58071728739803 * GRP_AcceptedCmp52 + -0.33803120859672 *
GRP_Frq2 + -0.08690701614481 * GRP_Frq3 + 0.06107334775294 * GRP_Frq4 + 0.00751374071999 *
GRP_Income2 + 0.20911873861779 * GRP_Income3 + -0.14977199160976 * GRP_Income4 +
0.15427447371686 * GRP_Mnt2 + -0.24298277669059 * GRP_Mnt3 + -0.02935492111499 * GRP_Mnt4 +
0.04923982061963 * GRP_MntFishProducts2 + -0.08952948139975 * GRP_MntFishProducts3 +
0.15338133379465 * GRP_MntFishProducts4 + 0.04821845492824 * GRP_MntGoldProds2 +
0.20117781904284 * GRP_MntGoldProds3 + 0.13013396690778 * GRP_MntGoldProds4 +
-0.03940841472157 * GRP_MntMeatProducts2 + 0.03161017721112 * GRP_MntMeatProducts3 +
-0.21938330779867 * GRP_MntMeatProducts4 + 0.3039864690076 * GRP_MntWines2 + 0.33038690291786
* GRP_MntWines3 + 0.03314465135063 * GRP_MntWines4 + -0.07655889365033 *
GRP_NumCatalogPurchases3 + -0.17353955777897 * GRP_NumCatalogPurchases4 + -0.16058154480995 *
GRP_NumDistPurchases2 + -0.30101518928361 * GRP_NumDistPurchases3 + 0.0473480026433 *
GRP_NumDistPurchases4 + 0.03132883547053 * GRP_NumWebPurchases2 + -0.29425936985479 *
GRP_NumWebPurchases3 + -0.12527625315403 * GRP_NumWebPurchases4 + 0.30683805591766 *
GRP_RFMstat2 + -0.21275334469197 * GRP_RFMstat3 + 0.32474239840607 * GRP_RFMstat4 +
0.09289841520091 * GRP_RMntFrq2 + 0.22137778862379 * GRP_RMntFrq3 + 0.12254524703503 *
GRP_RMntFrq4 + 0.46836624272095 * GRP_Recency2 + 0.01747843890017 * GRP_Recency3 +
-0.28363324780869 * GRP_Recency4 ;
216583    +   H11  =    -0.09329902916762 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.09329902916762 + H11 ;
216584    +   H12  =     0.21894996952826 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.21894996952826 + H12 ;
216585    +   H13  =    -0.97210428395662 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.97210428395662 + H13 ;
216586    +   H14  =    -0.47241372860242 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.47241372860242 + H14 ;
216587    +   H15  =    -0.89551869986721 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.89551869986721 + H15 ;
216588    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
216589    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
216590    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
216591    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
216592    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
216593    +END;
MPRINT(EM_DIAGRAM):   END;
216594    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
216595    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
216596    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
216597    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
216598    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
216599    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
216600    +END;
MPRINT(EM_DIAGRAM):   END;
216601    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216602    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
216603    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216604    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
216605    +   P_DepVar1  =     2.68876927057109 * H11  +     0.34381275178608 * H12
216606    +          +    -1.13153750790029 * H13  +    -0.93563986714952 * H14
216607    +          +     1.84382077322412 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.68876927057109 * H11 + 0.34381275178608 * H12 +
-1.13153750790029 * H13 + -0.93563986714952 * H14 + 1.84382077322412 * H15 ;
216608    +   P_DepVar1  =    -1.53169022796223 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.53169022796223 + P_DepVar1 ;
216609    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
216610    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
216611    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
216612    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
216613    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
216614    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
216615    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
216616    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
216617    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
216618    +END;
MPRINT(EM_DIAGRAM):   END;
216619    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
216620    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
216621    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
216622    +END;
MPRINT(EM_DIAGRAM):   END;
216623    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
216624    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
216625    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
216626    +END;
MPRINT(EM_DIAGRAM):   END;
216627    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216628    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
216629    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
216630    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
216631    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
216632    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
216633    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
216634    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
216635    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
216636    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
216637    +END;
MPRINT(EM_DIAGRAM):   END;
216638    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
216639    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
216640    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
216641    +drop
216642    +H11
216643    +H12
216644    +H13
216645    +H14
216646    +H15
216647    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
216648    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
216649     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
216650     quit;
216651     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
216652     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
216653     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
216654     retain ID 2 Node "Neural22";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural22";
216655     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
216656     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1980 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1980 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216657     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
216658     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
216659     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1980 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1980 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216660     proc sort data=EMWS8.Neural22_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural22_variableset out=_temp2(keep=NAME CREATOR);
216661     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
216662     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.NEURAL22_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
216663     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
216664     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
216665     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
216666     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216667     proc contents data=EMWS8.Neural22_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural22_train out=_meta(keep=NAME) noprint;
216668     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
216669     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
216670     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
216671     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
216672     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
216673     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
216674     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
216675     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216676     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
216677     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
216677   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 925 rows and 5 columns.
 
216678     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
216679     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
216680     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 925 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 925 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
216681     filename _pref
216681   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
216682     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
216683     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
216684    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
216685    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
216686    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
216687    +
216688    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216689    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
216690    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216691    +LABEL GRP_AcceptedCmp5 =
216692    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
216693    +
216694    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
216695    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
216696    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
216697    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
216698    +end;
MPRINT(EM_DIAGRAM):   end;
216699    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
216700    +if (_UFORMAT eq '0'
216701    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
216702    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
216703    +end;
MPRINT(EM_DIAGRAM):   end;
216704    +else
216705    +if (_UFORMAT eq '1'
216706    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
216707    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
216708    +end;
MPRINT(EM_DIAGRAM):   end;
216709    +else do;
MPRINT(EM_DIAGRAM):   else do;
216710    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
216711    +end;
MPRINT(EM_DIAGRAM):   end;
216712    +end;
MPRINT(EM_DIAGRAM):   end;
216713    +
216714    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216715    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
216716    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216717    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
216718    +
216719    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
216720    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
216721    +end;
MPRINT(EM_DIAGRAM):   end;
216722    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
216723    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
216724    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
216725    +end;
MPRINT(EM_DIAGRAM):   end;
216726    +else
216727    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
216728    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
216729    +end;
MPRINT(EM_DIAGRAM):   end;
216730    +else
216731    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
216732    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
216733    +end;
MPRINT(EM_DIAGRAM):   end;
216734    +else
216735    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
216736    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
216737    +end;
MPRINT(EM_DIAGRAM):   end;
216738    +end;
MPRINT(EM_DIAGRAM):   end;
216739    +
216740    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216741    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
216742    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216743    +LABEL GRP_Income =
216744    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
216745    +
216746    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
216747    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
216748    +end;
MPRINT(EM_DIAGRAM):   end;
216749    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
216750    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
216751    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
216752    +end;
MPRINT(EM_DIAGRAM):   end;
216753    +else
216754    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
216755    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
216756    +end;
MPRINT(EM_DIAGRAM):   end;
216757    +else
216758    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
216759    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
216760    +end;
MPRINT(EM_DIAGRAM):   end;
216761    +else
216762    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
216763    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
216764    +end;
MPRINT(EM_DIAGRAM):   end;
216765    +end;
MPRINT(EM_DIAGRAM):   end;
216766    +
216767    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216768    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
216769    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216770    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
216771    +
216772    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
216773    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
216774    +end;
MPRINT(EM_DIAGRAM):   end;
216775    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
216776    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
216777    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
216778    +end;
MPRINT(EM_DIAGRAM):   end;
216779    +else
216780    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
216781    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
216782    +end;
MPRINT(EM_DIAGRAM):   end;
216783    +else
216784    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
216785    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
216786    +end;
MPRINT(EM_DIAGRAM):   end;
216787    +else
216788    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
216789    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
216790    +end;
MPRINT(EM_DIAGRAM):   end;
216791    +end;
MPRINT(EM_DIAGRAM):   end;
216792    +
216793    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216794    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
216795    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216796    +LABEL GRP_MntFishProducts =
216797    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
216798    +
216799    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
216800    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
216801    +end;
MPRINT(EM_DIAGRAM):   end;
216802    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
216803    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
216804    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
216805    +end;
MPRINT(EM_DIAGRAM):   end;
216806    +else
216807    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
216808    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
216809    +end;
MPRINT(EM_DIAGRAM):   end;
216810    +else
216811    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
216812    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
216813    +end;
MPRINT(EM_DIAGRAM):   end;
216814    +else
216815    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
216816    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
216817    +end;
MPRINT(EM_DIAGRAM):   end;
216818    +end;
MPRINT(EM_DIAGRAM):   end;
216819    +
216820    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216821    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
216822    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216823    +LABEL GRP_MntGoldProds =
216824    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
216825    +
216826    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
216827    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
216828    +end;
MPRINT(EM_DIAGRAM):   end;
216829    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
216830    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
216831    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
216832    +end;
MPRINT(EM_DIAGRAM):   end;
216833    +else
216834    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
216835    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
216836    +end;
MPRINT(EM_DIAGRAM):   end;
216837    +else
216838    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
216839    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
216840    +end;
MPRINT(EM_DIAGRAM):   end;
216841    +else
216842    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
216843    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
216844    +end;
MPRINT(EM_DIAGRAM):   end;
216845    +end;
MPRINT(EM_DIAGRAM):   end;
216846    +
216847    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216848    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
216849    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216850    +LABEL GRP_MntMeatProducts =
216851    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
216852    +
216853    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
216854    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
216855    +end;
MPRINT(EM_DIAGRAM):   end;
216856    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
216857    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
216858    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
216859    +end;
MPRINT(EM_DIAGRAM):   end;
216860    +else
216861    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
216862    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
216863    +end;
MPRINT(EM_DIAGRAM):   end;
216864    +else
216865    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
216866    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
216867    +end;
MPRINT(EM_DIAGRAM):   end;
216868    +else
216869    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
216870    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
216871    +end;
MPRINT(EM_DIAGRAM):   end;
216872    +end;
MPRINT(EM_DIAGRAM):   end;
216873    +
216874    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216875    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
216876    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216877    +LABEL GRP_MntWines =
216878    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
216879    +
216880    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
216881    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
216882    +end;
MPRINT(EM_DIAGRAM):   end;
216883    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
216884    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
216885    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
216886    +end;
MPRINT(EM_DIAGRAM):   end;
216887    +else
216888    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
216889    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
216890    +end;
MPRINT(EM_DIAGRAM):   end;
216891    +else
216892    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
216893    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
216894    +end;
MPRINT(EM_DIAGRAM):   end;
216895    +else
216896    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
216897    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
216898    +end;
MPRINT(EM_DIAGRAM):   end;
216899    +end;
MPRINT(EM_DIAGRAM):   end;
216900    +
216901    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216902    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
216903    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216904    +LABEL GRP_NumCatalogPurchases =
216905    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
216906    +
216907    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
216908    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
216909    +end;
MPRINT(EM_DIAGRAM):   end;
216910    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
216911    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
216912    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
216913    +end;
MPRINT(EM_DIAGRAM):   end;
216914    +else
216915    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
216916    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
216917    +end;
MPRINT(EM_DIAGRAM):   end;
216918    +else
216919    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
216920    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
216921    +end;
MPRINT(EM_DIAGRAM):   end;
216922    +else
216923    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
216924    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
216925    +end;
MPRINT(EM_DIAGRAM):   end;
216926    +end;
MPRINT(EM_DIAGRAM):   end;
216927    +
216928    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216929    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
216930    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216931    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
216932    +
216933    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
216934    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
216935    +end;
MPRINT(EM_DIAGRAM):   end;
216936    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
216937    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
216938    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
216939    +end;
MPRINT(EM_DIAGRAM):   end;
216940    +else
216941    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
216942    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
216943    +end;
MPRINT(EM_DIAGRAM):   end;
216944    +else
216945    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
216946    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
216947    +end;
MPRINT(EM_DIAGRAM):   end;
216948    +else
216949    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
216950    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
216951    +end;
MPRINT(EM_DIAGRAM):   end;
216952    +end;
MPRINT(EM_DIAGRAM):   end;
216953    +
216954    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216955    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
216956    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216957    +LABEL GRP_NumWebPurchases =
216958    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
216959    +
216960    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
216961    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
216962    +end;
MPRINT(EM_DIAGRAM):   end;
216963    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
216964    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
216965    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
216966    +end;
MPRINT(EM_DIAGRAM):   end;
216967    +else
216968    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
216969    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
216970    +end;
MPRINT(EM_DIAGRAM):   end;
216971    +else
216972    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
216973    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
216974    +end;
MPRINT(EM_DIAGRAM):   end;
216975    +else
216976    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
216977    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
216978    +end;
MPRINT(EM_DIAGRAM):   end;
216979    +end;
MPRINT(EM_DIAGRAM):   end;
216980    +
216981    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216982    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
216983    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
216984    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
216985    +
216986    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
216987    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
216988    +end;
MPRINT(EM_DIAGRAM):   end;
216989    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
216990    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
216991    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
216992    +end;
MPRINT(EM_DIAGRAM):   end;
216993    +else
216994    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
216995    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
216996    +end;
MPRINT(EM_DIAGRAM):   end;
216997    +else
216998    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
216999    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
217000    +end;
MPRINT(EM_DIAGRAM):   end;
217001    +else
217002    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
217003    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
217004    +end;
MPRINT(EM_DIAGRAM):   end;
217005    +end;
MPRINT(EM_DIAGRAM):   end;
217006    +
217007    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
217008    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
217009    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
217010    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
217011    +
217012    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
217013    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
217014    +end;
MPRINT(EM_DIAGRAM):   end;
217015    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
217016    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
217017    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
217018    +end;
MPRINT(EM_DIAGRAM):   end;
217019    +else
217020    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
217021    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
217022    +end;
MPRINT(EM_DIAGRAM):   end;
217023    +else
217024    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
217025    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
217026    +end;
MPRINT(EM_DIAGRAM):   end;
217027    +else
217028    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
217029    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
217030    +end;
MPRINT(EM_DIAGRAM):   end;
217031    +end;
MPRINT(EM_DIAGRAM):   end;
217032    +
217033    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
217034    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
217035    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
217036    +LABEL GRP_Recency =
217037    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
217038    +
217039    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
217040    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
217041    +end;
MPRINT(EM_DIAGRAM):   end;
217042    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
217043    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
217044    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
217045    +end;
MPRINT(EM_DIAGRAM):   end;
217046    +else
217047    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
217048    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
217049    +end;
MPRINT(EM_DIAGRAM):   end;
217050    +else
217051    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
217052    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
217053    +end;
MPRINT(EM_DIAGRAM):   end;
217054    +else
217055    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
217056    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
217057    +end;
MPRINT(EM_DIAGRAM):   end;
217058    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
217059     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
217060     quit;
217061     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
217062     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
217063     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
217064     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
217065     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
217066     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
217067     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
217068     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217069     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217070     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
217071     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217072     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217073     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
217074     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
217075     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
217076     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217077     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
217078     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
217079     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
217080     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217081     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217082     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
217083     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
217084     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217085     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217086     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
217087     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
217087   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.
 
217088     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217089     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
217090     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 940 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217091     filename _pref
217091   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
217092     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
217093     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
217094    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
217095    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
217096    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
217097    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
217098    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
217099    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
217100     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
217101     quit;
217102     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
217103     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
217104     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
217105     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
217106     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
217107     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217108     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
217109     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217110     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217111     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
217112     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217113     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217114     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
217115     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
217116     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
217117     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217118     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
217119     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
217120     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
217121     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217122     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217123     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
217124     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
217125     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217126     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217127     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
217128     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
217128   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
217129     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217130     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
217131     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 944 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217132     filename _pref
217132   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
217133     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
217134     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
217135    +
217136    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
217137    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
217137   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
217138    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
217139    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
217140    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
217141    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
217142    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
217143     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
217144     quit;
217145     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
217146     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
217147     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
217148     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
217149     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
217150     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
217151     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
217152     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217153     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217154     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
217155     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217156     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217157     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
217158     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
217159     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
217160     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
217161     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
217162     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217163     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
217164     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217165     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217166     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
217167     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
217168     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217169     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
217170     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
217171     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
217171   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
217172     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217173     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
217174     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 983 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217175     filename _pref
217175   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
217176     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
217177     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
217178    +
217179    +
217180    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
217181    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
217182    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
217183    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
217184    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
217185    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
217186    +
217187    +
217188    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
217189    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
217190    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
217191    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
217192    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
217193    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
217194    +
217195    +
217196    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
217197    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
217198    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
217199    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
217200    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
217201    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
217202    +
217203    +
217204    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
217205    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
217206    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
217207    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
217208    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
217209    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
217210    +
217211    +
217212    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
217213    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
217214    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
217215    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
217216    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
217217    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
217218    +
217219    +
217220    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
217221    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
217222    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
217223    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
217224    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
217225    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
217226    +
217227    +
217228    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
217229    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
217230    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
217231    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
217232    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
217233    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
217234    +
217235    +
217236    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
217237    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
217238    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
217239    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
217240    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
217241    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
217242    +if
217243    +_FILTERNORM1 not in ( '.')
217244    + and
217245    +_FILTERNORM2 not in ( '.')
217246    + and
217247    +_FILTERNORM3 not in ( '.')
217248    + and
217249    +_FILTERNORM4 not in ( '.')
217250    + and
217251    +_FILTERNORM5 not in ( '.')
217252    + and
217253    +_FILTERNORM6 not in ( '.')
217254    + and
217255    +_FILTERNORM7 not in ( ' ')
217256    + and
217257    +_FILTERNORM8 not in ( ' ')
217258    +and
217259    +( Dt_Customer ne .)
217260    +and ( Income ne . and (Income<=107000))
217261    +and ( Kidhome ne .)
217262    +and ( MntFishProducts ne .)
217263    +and ( MntFruits ne .)
217264    +and ( MntGoldProds ne .)
217265    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
217266    +and ( MntSweetProducts ne .)
217267    +and ( MntWines ne .)
217268    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
217269    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
217270    +and ( NumStorePurchases ne .)
217271    +and ( NumWebPurchases ne .)
217272    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
217273    +and ( Recency ne .)
217274    +and ( Teenhome ne .)
217275    +and ( Year_Birth ne .)
217276    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
217277    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
217278    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
217279    +end;
MPRINT(EM_DIAGRAM):   end;
217280    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
217281    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
217282     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
217283     quit;
217284     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
217285     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
217286     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
217287     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
217288     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
217289     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217290     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
217291     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217292     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
217293     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
217294     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217295     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217296     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
217297     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
217298     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
217299     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217300     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
217301     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
217302     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
217303     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217304     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217305     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
217306     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
217307     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
217308     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
217309     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
217310     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
217310   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
217311     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217312     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
217313     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 1049 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217314     %macro varDept(fcmpdata=,id=);
217315     %global nobs&id scoreFlag&id;
217316     %let scoreFlag&id = 0;
217317     %if &id=1 or ^&fcmpStart %then %do;
217318     proc sort data=&fcmpdata out=_temp&id nodupkey;
217319     by NAME;
217320     where id=&id and LHS in( %let j=1;
217321     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
217322     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
217323     "&var" %let j = %eval(&j+1);
217324     %end;
217325     );
217326     run;
217327     %let dsid = %sysfunc(open(_temp&id));
217328     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
217329     %let dsid = %sysfunc(close(&dsid));
217330     %if &&nobs&id %then %do;
217331     %let scoreFlag&id = 1;
217332     %let fcmpStart = 1;
217333     %end;
217334     %else %let fcmpStart = 0;
217335     %end;
217336     %else %do;
217337     proc sort data=&fcmpdata out=_tempid;
217338     where id=&id;
217339     by LHS;
217340     run;
217341     %let dsid = %sysfunc(open(_tempid));
217342     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
217343     %let dsid = %sysfunc(close(&dsid));
217344     %if ^&&nobs&id %then %do;
217345     proc datasets lib=work nolist;
217346     delete _tempid;
217347     run;
217348     quit;
217349     %end;
217350     %else %do;
217351     data _tempAll;
217352     set %let j=%eval(&id-1);
217353     %do x=1 %to &j;
217354     %if &&nobs&x %then %do;
217355     _temp&x %end;
217356     %end;
217357     ;
217358     run;
217359     proc sql;
217360     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
217360   ! work._tempid p2 where p.name=p2.lhs;
217361     quit;
217362     data _temp&id;
217363     set _temp&id;
217364     where LHS ne '' and NAME ne '' and Node ne '';
217365     run;
217366     proc datasets lib=work nolist;
217367     delete _tempAll;
217368     run;
217369     %let dsid = %sysfunc(open(_temp&id));
217370     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
217371     %let dsid = %sysfunc(close(&dsid));
217372     %if ^&&nobs&id %then %do;
217373     proc datasets lib=work nolist;
217374     delete _temp&id;
217375     run;
217376     quit;
217377     %end;
217378     %else %do;
217379     %let scoreFlag&id = 1;
217380     data _temp&id;
217381     set _temp&id;
217382     where LHS ne NAME and node ne '';
217383     run;
217384     %let dsid = %sysfunc(open(_temp&id));
217385     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
217386     %let dsid = %sysfunc(close(&dsid));
217387     %if ^&&nobs&id %then %do;
217388     proc datasets lib=work nolist;
217389     delete _temp&id;
217390     run;
217391     quit;
217392     %end;
217393     %else %do;
217394     proc sort data=_temp&id nodupkey;
217395     by LHS NAME;
217396     run;
217397     %end;
217398     %end;
217399     %end;
217400     %end;
217401     %mend varDept;
217402     %macro optCode(outdata=fcmpdata);
217403     %global fcmpStart;
217404     %let fcmpStart = 0;
217405     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
217406     %let NumNodes=9;
217407     %do k=1 %to &NumNodes;
217408     %vardept(fcmpdata=&outdata, id=&k);
217409     %end;
217410     %mend optCode;
217411     %optcode(outData=EMWS8.Ensmbl18_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 49 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
217412     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
217413     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
217414     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
217415     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217416     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
217417     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
217418     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
217419     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217420     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
217421     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
217421   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
217422     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
217423     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
217424     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
217425     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217426     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
217427     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
217428     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
217429     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
217430     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
217431     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
217432     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
217433     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217434     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
217435     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
217435   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.
 
217436     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
217437     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
217438     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
217439     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
217440     filename _pref
217440   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMPUBLISHSCORE.sas";
217441     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
217442     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural21\EMPUBLISHSCORE.sas.
217443    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
217444    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
217445    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
217446    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
217447    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
217448    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
217449    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
217450    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
217451    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
217452    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
217453    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
217454    +LENGTH _WARN_ $4
217455    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
217456    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
217457    +
217458    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
217459    +
217460    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
217461    +
217462    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
217463    +
217464    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
217465    +
217466    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
217467    +
217468    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
217469    +
217470    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
217471    +
217472    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
217473    +
217474    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
217475    +
217476    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
217477    +
217478    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
217479    +
217480    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
217481    +
217482    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
217483    +
217484    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
217485    +
217486    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
217487    +
217488    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
217489    +
217490    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
217491    +
217492    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
217493    +
217494    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
217495    +
217496    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
217497    +
217498    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
217499    +
217500    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
217501    +
217502    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
217503    +
217504    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
217505    +
217506    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
217507    +
217508    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
217509    +
217510    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
217511    +
217512    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
217513    +
217514    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
217515    +
217516    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
217517    +
217518    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
217519    +
217520    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
217521    +
217522    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
217523    +
217524    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
217525    +
217526    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
217527    +
217528    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
217529    +
217530    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
217531    +
217532    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
217533    +
217534    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
217535    +
217536    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
217537    +
217538    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
217539    +
217540    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
217541    +
217542    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
217543    +
217544    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
217545    +
217546    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
217547    +
217548    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
217549    +
217550    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
217551    +
217552    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
217553    +
217554    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
217555    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
217556    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
217557    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
217558    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
217559    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217560    +end;
MPRINT(EM_DIAGRAM):   end;
217561    +else do;
MPRINT(EM_DIAGRAM):   else do;
217562    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
217563    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
217564    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
217565    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
217566    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
217567    +   end;
MPRINT(EM_DIAGRAM):   end;
217568    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
217569    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
217570    +   end;
MPRINT(EM_DIAGRAM):   end;
217571    +   else do;
MPRINT(EM_DIAGRAM):   else do;
217572    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
217573    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
217574    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217575    +   end;
MPRINT(EM_DIAGRAM):   end;
217576    +end;
MPRINT(EM_DIAGRAM):   end;
217577    +
217578    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
217579    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
217580    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
217581    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
217582    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
217583    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
217584    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
217585    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217586    +end;
MPRINT(EM_DIAGRAM):   end;
217587    +else do;
MPRINT(EM_DIAGRAM):   else do;
217588    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
217589    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
217590    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
217591    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
217592    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
217593    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
217594    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
217595    +   end;
MPRINT(EM_DIAGRAM):   end;
217596    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
217597    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
217598    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
217599    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
217600    +   end;
MPRINT(EM_DIAGRAM):   end;
217601    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
217602    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
217603    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
217604    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
217605    +   end;
MPRINT(EM_DIAGRAM):   end;
217606    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
217607    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
217608    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
217609    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
217610    +   end;
MPRINT(EM_DIAGRAM):   end;
217611    +   else do;
MPRINT(EM_DIAGRAM):   else do;
217612    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
217613    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
217614    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
217615    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
217616    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217617    +   end;
MPRINT(EM_DIAGRAM):   end;
217618    +end;
MPRINT(EM_DIAGRAM):   end;
217619    +
217620    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
217621    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
217622    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
217623    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
217624    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
217625    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
217626    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
217627    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217628    +end;
MPRINT(EM_DIAGRAM):   end;
217629    +else do;
MPRINT(EM_DIAGRAM):   else do;
217630    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
217631    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
217632    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
217633    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
217634    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
217635    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
217636    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
217637    +   end;
MPRINT(EM_DIAGRAM):   end;
217638    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
217639    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
217640    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
217641    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
217642    +   end;
MPRINT(EM_DIAGRAM):   end;
217643    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
217644    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
217645    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
217646    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
217647    +   end;
MPRINT(EM_DIAGRAM):   end;
217648    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
217649    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
217650    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
217651    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
217652    +   end;
MPRINT(EM_DIAGRAM):   end;
217653    +   else do;
MPRINT(EM_DIAGRAM):   else do;
217654    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
217655    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
217656    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
217657    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
217658    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217659    +   end;
MPRINT(EM_DIAGRAM):   end;
217660    +end;
MPRINT(EM_DIAGRAM):   end;
217661    +
217662    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
217663    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
217664    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
217665    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
217666    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
217667    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
217668    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
217669    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217670    +end;
MPRINT(EM_DIAGRAM):   end;
217671    +else do;
MPRINT(EM_DIAGRAM):   else do;
217672    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
217673    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
217674    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
217675    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
217676    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
217677    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
217678    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
217679    +   end;
MPRINT(EM_DIAGRAM):   end;
217680    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
217681    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
217682    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
217683    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
217684    +   end;
MPRINT(EM_DIAGRAM):   end;
217685    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
217686    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
217687    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
217688    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
217689    +   end;
MPRINT(EM_DIAGRAM):   end;
217690    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
217691    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
217692    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
217693    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
217694    +   end;
MPRINT(EM_DIAGRAM):   end;
217695    +   else do;
MPRINT(EM_DIAGRAM):   else do;
217696    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
217697    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
217698    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
217699    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
217700    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217701    +   end;
MPRINT(EM_DIAGRAM):   end;
217702    +end;
MPRINT(EM_DIAGRAM):   end;
217703    +
217704    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
217705    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
217706    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
217707    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
217708    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
217709    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
217710    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
217711    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217712    +end;
MPRINT(EM_DIAGRAM):   end;
217713    +else do;
MPRINT(EM_DIAGRAM):   else do;
217714    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
217715    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
217716    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
217717    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
217718    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
217719    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
217720    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
217721    +   end;
MPRINT(EM_DIAGRAM):   end;
217722    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
217723    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
217724    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
217725    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
217726    +   end;
MPRINT(EM_DIAGRAM):   end;
217727    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
217728    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
217729    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
217730    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
217731    +   end;
MPRINT(EM_DIAGRAM):   end;
217732    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
217733    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
217734    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
217735    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
217736    +   end;
MPRINT(EM_DIAGRAM):   end;
217737    +   else do;
MPRINT(EM_DIAGRAM):   else do;
217738    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
217739    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
217740    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
217741    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
217742    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217743    +   end;
MPRINT(EM_DIAGRAM):   end;
217744    +end;
MPRINT(EM_DIAGRAM):   end;
217745    +
217746    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
217747    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
217748    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
217749    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
217750    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
217751    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
217752    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
217753    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217754    +end;
MPRINT(EM_DIAGRAM):   end;
217755    +else do;
MPRINT(EM_DIAGRAM):   else do;
217756    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
217757    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
217758    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
217759    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
217760    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
217761    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
217762    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
217763    +   end;
MPRINT(EM_DIAGRAM):   end;
217764    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
217765    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
217766    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
217767    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
217768    +   end;
MPRINT(EM_DIAGRAM):   end;
217769    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
217770    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
217771    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
217772    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
217773    +   end;
MPRINT(EM_DIAGRAM):   end;
217774    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
217775    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
217776    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
217777    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
217778    +   end;
MPRINT(EM_DIAGRAM):   end;
217779    +   else do;
MPRINT(EM_DIAGRAM):   else do;
217780    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
217781    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
217782    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
217783    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
217784    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217785    +   end;
MPRINT(EM_DIAGRAM):   end;
217786    +end;
MPRINT(EM_DIAGRAM):   end;
217787    +
217788    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
217789    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
217790    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
217791    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
217792    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
217793    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
217794    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
217795    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217796    +end;
MPRINT(EM_DIAGRAM):   end;
217797    +else do;
MPRINT(EM_DIAGRAM):   else do;
217798    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
217799    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
217800    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
217801    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
217802    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
217803    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
217804    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
217805    +   end;
MPRINT(EM_DIAGRAM):   end;
217806    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
217807    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
217808    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
217809    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
217810    +   end;
MPRINT(EM_DIAGRAM):   end;
217811    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
217812    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
217813    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
217814    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
217815    +   end;
MPRINT(EM_DIAGRAM):   end;
217816    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
217817    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
217818    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
217819    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
217820    +   end;
MPRINT(EM_DIAGRAM):   end;
217821    +   else do;
MPRINT(EM_DIAGRAM):   else do;
217822    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
217823    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
217824    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
217825    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
217826    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217827    +   end;
MPRINT(EM_DIAGRAM):   end;
217828    +end;
MPRINT(EM_DIAGRAM):   end;
217829    +
217830    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
217831    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
217832    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
217833    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
217834    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
217835    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
217836    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
217837    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217838    +end;
MPRINT(EM_DIAGRAM):   end;
217839    +else do;
MPRINT(EM_DIAGRAM):   else do;
217840    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
217841    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
217842    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
217843    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
217844    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
217845    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
217846    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
217847    +   end;
MPRINT(EM_DIAGRAM):   end;
217848    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
217849    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
217850    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
217851    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
217852    +   end;
MPRINT(EM_DIAGRAM):   end;
217853    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
217854    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
217855    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
217856    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
217857    +   end;
MPRINT(EM_DIAGRAM):   end;
217858    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
217859    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
217860    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
217861    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
217862    +   end;
MPRINT(EM_DIAGRAM):   end;
217863    +   else do;
MPRINT(EM_DIAGRAM):   else do;
217864    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
217865    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
217866    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
217867    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
217868    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217869    +   end;
MPRINT(EM_DIAGRAM):   end;
217870    +end;
MPRINT(EM_DIAGRAM):   end;
217871    +
217872    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
217873    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
217874    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
217875    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
217876    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
217877    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
217878    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217879    +end;
MPRINT(EM_DIAGRAM):   end;
217880    +else do;
MPRINT(EM_DIAGRAM):   else do;
217881    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
217882    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
217883    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
217884    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
217885    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
217886    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
217887    +   end;
MPRINT(EM_DIAGRAM):   end;
217888    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
217889    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
217890    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
217891    +   end;
MPRINT(EM_DIAGRAM):   end;
217892    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
217893    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
217894    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
217895    +   end;
MPRINT(EM_DIAGRAM):   end;
217896    +   else do;
MPRINT(EM_DIAGRAM):   else do;
217897    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
217898    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
217899    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
217900    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217901    +   end;
MPRINT(EM_DIAGRAM):   end;
217902    +end;
MPRINT(EM_DIAGRAM):   end;
217903    +
217904    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
217905    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
217906    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
217907    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
217908    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
217909    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
217910    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
217911    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217912    +end;
MPRINT(EM_DIAGRAM):   end;
217913    +else do;
MPRINT(EM_DIAGRAM):   else do;
217914    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
217915    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
217916    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
217917    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
217918    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
217919    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
217920    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
217921    +   end;
MPRINT(EM_DIAGRAM):   end;
217922    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
217923    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
217924    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
217925    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
217926    +   end;
MPRINT(EM_DIAGRAM):   end;
217927    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
217928    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
217929    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
217930    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
217931    +   end;
MPRINT(EM_DIAGRAM):   end;
217932    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
217933    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
217934    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
217935    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
217936    +   end;
MPRINT(EM_DIAGRAM):   end;
217937    +   else do;
MPRINT(EM_DIAGRAM):   else do;
217938    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
217939    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
217940    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
217941    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
217942    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217943    +   end;
MPRINT(EM_DIAGRAM):   end;
217944    +end;
MPRINT(EM_DIAGRAM):   end;
217945    +
217946    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
217947    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
217948    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
217949    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
217950    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
217951    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
217952    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
217953    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217954    +end;
MPRINT(EM_DIAGRAM):   end;
217955    +else do;
MPRINT(EM_DIAGRAM):   else do;
217956    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
217957    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
217958    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
217959    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
217960    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
217961    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
217962    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
217963    +   end;
MPRINT(EM_DIAGRAM):   end;
217964    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
217965    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
217966    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
217967    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
217968    +   end;
MPRINT(EM_DIAGRAM):   end;
217969    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
217970    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
217971    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
217972    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
217973    +   end;
MPRINT(EM_DIAGRAM):   end;
217974    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
217975    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
217976    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
217977    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
217978    +   end;
MPRINT(EM_DIAGRAM):   end;
217979    +   else do;
MPRINT(EM_DIAGRAM):   else do;
217980    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
217981    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
217982    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
217983    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
217984    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217985    +   end;
MPRINT(EM_DIAGRAM):   end;
217986    +end;
MPRINT(EM_DIAGRAM):   end;
217987    +
217988    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
217989    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
217990    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
217991    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
217992    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
217993    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
217994    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
217995    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
217996    +end;
MPRINT(EM_DIAGRAM):   end;
217997    +else do;
MPRINT(EM_DIAGRAM):   else do;
217998    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
217999    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
218000    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
218001    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
218002    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
218003    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
218004    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
218005    +   end;
MPRINT(EM_DIAGRAM):   end;
218006    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
218007    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
218008    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
218009    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
218010    +   end;
MPRINT(EM_DIAGRAM):   end;
218011    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
218012    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
218013    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
218014    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
218015    +   end;
MPRINT(EM_DIAGRAM):   end;
218016    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
218017    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
218018    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
218019    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
218020    +   end;
MPRINT(EM_DIAGRAM):   end;
218021    +   else do;
MPRINT(EM_DIAGRAM):   else do;
218022    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
218023    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
218024    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
218025    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
218026    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218027    +   end;
MPRINT(EM_DIAGRAM):   end;
218028    +end;
MPRINT(EM_DIAGRAM):   end;
218029    +
218030    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
218031    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
218032    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
218033    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
218034    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
218035    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
218036    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
218037    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218038    +end;
MPRINT(EM_DIAGRAM):   end;
218039    +else do;
MPRINT(EM_DIAGRAM):   else do;
218040    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
218041    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
218042    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
218043    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
218044    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
218045    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
218046    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
218047    +   end;
MPRINT(EM_DIAGRAM):   end;
218048    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
218049    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
218050    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
218051    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
218052    +   end;
MPRINT(EM_DIAGRAM):   end;
218053    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
218054    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
218055    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
218056    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
218057    +   end;
MPRINT(EM_DIAGRAM):   end;
218058    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
218059    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
218060    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
218061    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
218062    +   end;
MPRINT(EM_DIAGRAM):   end;
218063    +   else do;
MPRINT(EM_DIAGRAM):   else do;
218064    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
218065    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
218066    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
218067    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
218068    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218069    +   end;
MPRINT(EM_DIAGRAM):   end;
218070    +end;
MPRINT(EM_DIAGRAM):   end;
218071    +
218072    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
218073    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
218074    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
218075    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
218076    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
218077    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
218078    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
218079    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218080    +end;
MPRINT(EM_DIAGRAM):   end;
218081    +else do;
MPRINT(EM_DIAGRAM):   else do;
218082    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
218083    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
218084    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
218085    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
218086    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
218087    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
218088    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
218089    +   end;
MPRINT(EM_DIAGRAM):   end;
218090    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
218091    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
218092    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
218093    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
218094    +   end;
MPRINT(EM_DIAGRAM):   end;
218095    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
218096    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
218097    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
218098    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
218099    +   end;
MPRINT(EM_DIAGRAM):   end;
218100    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
218101    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
218102    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
218103    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
218104    +   end;
MPRINT(EM_DIAGRAM):   end;
218105    +   else do;
MPRINT(EM_DIAGRAM):   else do;
218106    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
218107    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
218108    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
218109    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
218110    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218111    +   end;
MPRINT(EM_DIAGRAM):   end;
218112    +end;
MPRINT(EM_DIAGRAM):   end;
218113    +
218114    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218115    +*** Checking missing input Interval
218116    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
218117    +
218118    +IF NMISS(
218119    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
218120    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
218121    +
218122    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
218123    +END;
MPRINT(EM_DIAGRAM):   END;
218124    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218125    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
218126    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218127    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
218128    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
218129    +END;
MPRINT(EM_DIAGRAM):   END;
218130    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
218131    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
218132    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
218133    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
218134    +END;
MPRINT(EM_DIAGRAM):   END;
218135    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218136    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
218137    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218138    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218139    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
218140    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218141    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
218142    +   H11  =      0.0668146440452 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.0668146440452 * S_Year_Birth ;
218143    +   H12  =     0.02918236951724 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.02918236951724 * S_Year_Birth ;
218144    +   H13  =     0.52122974180208 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.52122974180208 * S_Year_Birth ;
218145    +   H14  =     -0.1823800721103 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = -0.1823800721103 * S_Year_Birth ;
218146    +   H11  = H11  +    -0.48347630033708 * GRP_AcceptedCmp52
218147    +          +     0.37100635990339 * GRP_Frq2  +     0.04377799127913 * GRP_Frq3
218148    +          +     -0.1974477050613 * GRP_Frq4  +     0.10700887225506 *
218149    +        GRP_Income2  +      0.3291591268929 * GRP_Income3
218150    +          +     0.00612929517663 * GRP_Income4  +    -0.23329153390557 *
218151    +        GRP_Mnt2  +    -0.08800204437411 * GRP_Mnt3  +    -0.08445529701198 *
218152    +        GRP_Mnt4  +     0.28673732624133 * GRP_MntFishProducts2
218153    +          +    -0.14978605827752 * GRP_MntFishProducts3
218154    +          +     0.22642470616542 * GRP_MntFishProducts4
218155    +          +     0.07604404821672 * GRP_MntGoldProds2
218156    +          +     0.04745212568332 * GRP_MntGoldProds3
218157    +          +    -0.10028215217028 * GRP_MntGoldProds4
218158    +          +    -0.07377682497053 * GRP_MntMeatProducts2
218159    +          +    -0.09960214357487 * GRP_MntMeatProducts3
218160    +          +    -0.25438120582859 * GRP_MntMeatProducts4
218161    +          +     0.42639299324809 * GRP_MntWines2  +     0.31089292559786 *
218162    +        GRP_MntWines3  +    -0.26826041457934 * GRP_MntWines4
218163    +          +    -0.53742609478771 * GRP_NumCatalogPurchases3
218164    +          +    -0.03023603128161 * GRP_NumCatalogPurchases4
218165    +          +    -0.37743946252805 * GRP_NumDistPurchases2
218166    +          +    -0.01872647257623 * GRP_NumDistPurchases3
218167    +          +    -0.31993024737958 * GRP_NumDistPurchases4
218168    +          +    -0.11078713164327 * GRP_NumWebPurchases2
218169    +          +     0.24754701690398 * GRP_NumWebPurchases3
218170    +          +     0.01530465573539 * GRP_NumWebPurchases4
218171    +          +    -0.17630256491744 * GRP_RFMstat2  +    -0.47929093118323 *
218172    +        GRP_RFMstat3  +     0.26729201021061 * GRP_RFMstat4
218173    +          +    -0.20197995708067 * GRP_RMntFrq2  +    -0.07138949090838 *
218174    +        GRP_RMntFrq3  +    -0.08653988697814 * GRP_RMntFrq4
218175    +          +     1.10790516734526 * GRP_Recency2  +     0.22440369463671 *
218176    +        GRP_Recency3  +    -0.44624012521308 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.48347630033708 * GRP_AcceptedCmp52 + 0.37100635990339 *
GRP_Frq2 + 0.04377799127913 * GRP_Frq3 + -0.1974477050613 * GRP_Frq4 + 0.10700887225506 *
GRP_Income2 + 0.3291591268929 * GRP_Income3 + 0.00612929517663 * GRP_Income4 +
-0.23329153390557 * GRP_Mnt2 + -0.08800204437411 * GRP_Mnt3 + -0.08445529701198 * GRP_Mnt4 +
0.28673732624133 * GRP_MntFishProducts2 + -0.14978605827752 * GRP_MntFishProducts3 +
0.22642470616542 * GRP_MntFishProducts4 + 0.07604404821672 * GRP_MntGoldProds2 +
0.04745212568332 * GRP_MntGoldProds3 + -0.10028215217028 * GRP_MntGoldProds4 +
-0.07377682497053 * GRP_MntMeatProducts2 + -0.09960214357487 * GRP_MntMeatProducts3 +
-0.25438120582859 * GRP_MntMeatProducts4 + 0.42639299324809 * GRP_MntWines2 + 0.31089292559786
* GRP_MntWines3 + -0.26826041457934 * GRP_MntWines4 + -0.53742609478771 *
GRP_NumCatalogPurchases3 + -0.03023603128161 * GRP_NumCatalogPurchases4 + -0.37743946252805 *
GRP_NumDistPurchases2 + -0.01872647257623 * GRP_NumDistPurchases3 + -0.31993024737958 *
GRP_NumDistPurchases4 + -0.11078713164327 * GRP_NumWebPurchases2 + 0.24754701690398 *
GRP_NumWebPurchases3 + 0.01530465573539 * GRP_NumWebPurchases4 + -0.17630256491744 *
GRP_RFMstat2 + -0.47929093118323 * GRP_RFMstat3 + 0.26729201021061 * GRP_RFMstat4 +
-0.20197995708067 * GRP_RMntFrq2 + -0.07138949090838 * GRP_RMntFrq3 + -0.08653988697814 *
GRP_RMntFrq4 + 1.10790516734526 * GRP_Recency2 + 0.22440369463671 * GRP_Recency3 +
-0.44624012521308 * GRP_Recency4 ;
218177    +   H12  = H12  +    -0.39171353947494 * GRP_AcceptedCmp52
218178    +          +     0.47539355981113 * GRP_Frq2  +     0.13865083322043 * GRP_Frq3
218179    +          +     0.07826446095659 * GRP_Frq4  +     0.08299165408218 *
218180    +        GRP_Income2  +     0.19385348399904 * GRP_Income3
218181    +          +     -0.4686130167393 * GRP_Income4  +     0.07036992149948 *
218182    +        GRP_Mnt2  +     0.03891677493503 * GRP_Mnt3  +     0.07820077346387 *
218183    +        GRP_Mnt4  +     0.36400126236983 * GRP_MntFishProducts2
218184    +          +    -0.12626287803422 * GRP_MntFishProducts3
218185    +          +    -0.42885022606866 * GRP_MntFishProducts4
218186    +          +    -0.08312331608509 * GRP_MntGoldProds2
218187    +          +    -0.20061238652989 * GRP_MntGoldProds3
218188    +          +      0.2540651659901 * GRP_MntGoldProds4
218189    +          +    -0.05377938516186 * GRP_MntMeatProducts2
218190    +          +    -0.20960578757846 * GRP_MntMeatProducts3
218191    +          +     0.40616704937625 * GRP_MntMeatProducts4
218192    +          +     0.10444770584156 * GRP_MntWines2  +     0.28632714955895 *
218193    +        GRP_MntWines3  +     -0.0752487603973 * GRP_MntWines4
218194    +          +    -0.34375303246386 * GRP_NumCatalogPurchases3
218195    +          +     0.09580710843179 * GRP_NumCatalogPurchases4
218196    +          +    -0.07273864038222 * GRP_NumDistPurchases2
218197    +          +     0.10966715611059 * GRP_NumDistPurchases3
218198    +          +      -0.043035493739 * GRP_NumDistPurchases4
218199    +          +    -0.11780256604927 * GRP_NumWebPurchases2
218200    +          +    -0.18165047164828 * GRP_NumWebPurchases3
218201    +          +     0.26936545488609 * GRP_NumWebPurchases4
218202    +          +    -0.06874165804548 * GRP_RFMstat2  +     0.09298117986488 *
218203    +        GRP_RFMstat3  +    -0.24177720125931 * GRP_RFMstat4
218204    +          +    -0.06280623207978 * GRP_RMntFrq2  +     0.01871815739589 *
218205    +        GRP_RMntFrq3  +    -0.14308267957716 * GRP_RMntFrq4
218206    +          +     0.34467425877566 * GRP_Recency2  +     0.05820913643645 *
218207    +        GRP_Recency3  +     -0.0454148085012 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.39171353947494 * GRP_AcceptedCmp52 + 0.47539355981113 *
GRP_Frq2 + 0.13865083322043 * GRP_Frq3 + 0.07826446095659 * GRP_Frq4 + 0.08299165408218 *
GRP_Income2 + 0.19385348399904 * GRP_Income3 + -0.4686130167393 * GRP_Income4 +
0.07036992149948 * GRP_Mnt2 + 0.03891677493503 * GRP_Mnt3 + 0.07820077346387 * GRP_Mnt4 +
0.36400126236983 * GRP_MntFishProducts2 + -0.12626287803422 * GRP_MntFishProducts3 +
-0.42885022606866 * GRP_MntFishProducts4 + -0.08312331608509 * GRP_MntGoldProds2 +
-0.20061238652989 * GRP_MntGoldProds3 + 0.2540651659901 * GRP_MntGoldProds4 +
-0.05377938516186 * GRP_MntMeatProducts2 + -0.20960578757846 * GRP_MntMeatProducts3 +
0.40616704937625 * GRP_MntMeatProducts4 + 0.10444770584156 * GRP_MntWines2 + 0.28632714955895
* GRP_MntWines3 + -0.0752487603973 * GRP_MntWines4 + -0.34375303246386 *
GRP_NumCatalogPurchases3 + 0.09580710843179 * GRP_NumCatalogPurchases4 + -0.07273864038222 *
GRP_NumDistPurchases2 + 0.10966715611059 * GRP_NumDistPurchases3 + -0.043035493739 *
GRP_NumDistPurchases4 + -0.11780256604927 * GRP_NumWebPurchases2 + -0.18165047164828 *
GRP_NumWebPurchases3 + 0.26936545488609 * GRP_NumWebPurchases4 + -0.06874165804548 *
GRP_RFMstat2 + 0.09298117986488 * GRP_RFMstat3 + -0.24177720125931 * GRP_RFMstat4 +
-0.06280623207978 * GRP_RMntFrq2 + 0.01871815739589 * GRP_RMntFrq3 + -0.14308267957716 *
GRP_RMntFrq4 + 0.34467425877566 * GRP_Recency2 + 0.05820913643645 * GRP_Recency3 +
-0.0454148085012 * GRP_Recency4 ;
218208    +   H13  = H13  +    -0.08768819217047 * GRP_AcceptedCmp52
218209    +          +     0.44895652806962 * GRP_Frq2  +      0.3800586670059 * GRP_Frq3
218210    +          +    -0.07849333722318 * GRP_Frq4  +     0.61398939980043 *
218211    +        GRP_Income2  +     0.47732933105902 * GRP_Income3
218212    +          +    -0.46767598050409 * GRP_Income4  +     0.00119742402812 *
218213    +        GRP_Mnt2  +     0.28434487319801 * GRP_Mnt3  +    -0.16337373090226 *
218214    +        GRP_Mnt4  +     0.24731982804653 * GRP_MntFishProducts2
218215    +          +     0.07001619920815 * GRP_MntFishProducts3
218216    +          +     0.07735498521359 * GRP_MntFishProducts4
218217    +          +    -0.15884098938162 * GRP_MntGoldProds2
218218    +          +    -0.27657428867783 * GRP_MntGoldProds3
218219    +          +     -0.1812542301124 * GRP_MntGoldProds4
218220    +          +    -0.05299867036647 * GRP_MntMeatProducts2
218221    +          +     0.00010942539908 * GRP_MntMeatProducts3
218222    +          +     0.03587382246671 * GRP_MntMeatProducts4
218223    +          +      0.1756484217323 * GRP_MntWines2  +     0.00289944116976 *
218224    +        GRP_MntWines3  +    -0.03752905583429 * GRP_MntWines4
218225    +          +     0.14681010085531 * GRP_NumCatalogPurchases3
218226    +          +    -0.23177792190553 * GRP_NumCatalogPurchases4
218227    +          +      -0.481887498986 * GRP_NumDistPurchases2
218228    +          +    -0.09943718589693 * GRP_NumDistPurchases3
218229    +          +     0.21760620991618 * GRP_NumDistPurchases4
218230    +          +    -0.09523799103665 * GRP_NumWebPurchases2
218231    +          +     0.06245025753157 * GRP_NumWebPurchases3
218232    +          +     0.11312469123111 * GRP_NumWebPurchases4
218233    +          +     -0.0156924842698 * GRP_RFMstat2  +     0.04329307564553 *
218234    +        GRP_RFMstat3  +    -0.06522539538042 * GRP_RFMstat4
218235    +          +     0.03130432577469 * GRP_RMntFrq2  +     0.15385182155627 *
218236    +        GRP_RMntFrq3  +    -0.05116322369837 * GRP_RMntFrq4
218237    +          +     0.52385840277978 * GRP_Recency2  +     0.44348058106283 *
218238    +        GRP_Recency3  +    -0.30003743891847 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.08768819217047 * GRP_AcceptedCmp52 + 0.44895652806962 *
GRP_Frq2 + 0.3800586670059 * GRP_Frq3 + -0.07849333722318 * GRP_Frq4 + 0.61398939980043 *
GRP_Income2 + 0.47732933105902 * GRP_Income3 + -0.46767598050409 * GRP_Income4 +
0.00119742402812 * GRP_Mnt2 + 0.28434487319801 * GRP_Mnt3 + -0.16337373090226 * GRP_Mnt4 +
0.24731982804653 * GRP_MntFishProducts2 + 0.07001619920815 * GRP_MntFishProducts3 +
0.07735498521359 * GRP_MntFishProducts4 + -0.15884098938162 * GRP_MntGoldProds2 +
-0.27657428867783 * GRP_MntGoldProds3 + -0.1812542301124 * GRP_MntGoldProds4 +
-0.05299867036647 * GRP_MntMeatProducts2 + 0.00010942539908 * GRP_MntMeatProducts3 +
0.03587382246671 * GRP_MntMeatProducts4 + 0.1756484217323 * GRP_MntWines2 + 0.00289944116976 *
GRP_MntWines3 + -0.03752905583429 * GRP_MntWines4 + 0.14681010085531 *
GRP_NumCatalogPurchases3 + -0.23177792190553 * GRP_NumCatalogPurchases4 + -0.481887498986 *
GRP_NumDistPurchases2 + -0.09943718589693 * GRP_NumDistPurchases3 + 0.21760620991618 *
GRP_NumDistPurchases4 + -0.09523799103665 * GRP_NumWebPurchases2 + 0.06245025753157 *
GRP_NumWebPurchases3 + 0.11312469123111 * GRP_NumWebPurchases4 + -0.0156924842698 *
GRP_RFMstat2 + 0.04329307564553 * GRP_RFMstat3 + -0.06522539538042 * GRP_RFMstat4 +
0.03130432577469 * GRP_RMntFrq2 + 0.15385182155627 * GRP_RMntFrq3 + -0.05116322369837 *
GRP_RMntFrq4 + 0.52385840277978 * GRP_Recency2 + 0.44348058106283 * GRP_Recency3 +
-0.30003743891847 * GRP_Recency4 ;
218239    +   H14  = H14  +    -0.30891588421078 * GRP_AcceptedCmp52
218240    +          +     0.10101143238536 * GRP_Frq2  +    -0.03148220138998 * GRP_Frq3
218241    +          +     0.09807803608029 * GRP_Frq4  +     0.11294471318052 *
218242    +        GRP_Income2  +      0.0433560034099 * GRP_Income3
218243    +          +    -0.35503487261838 * GRP_Income4  +     0.15199410100967 *
218244    +        GRP_Mnt2  +    -0.15675008677561 * GRP_Mnt3  +    -0.06110606567063 *
218245    +        GRP_Mnt4  +     0.10272197664106 * GRP_MntFishProducts2
218246    +          +     0.33369645018356 * GRP_MntFishProducts3
218247    +          +     0.08427214551103 * GRP_MntFishProducts4
218248    +          +    -0.36187933889617 * GRP_MntGoldProds2
218249    +          +      0.1522584097588 * GRP_MntGoldProds3
218250    +          +    -0.18069803129722 * GRP_MntGoldProds4
218251    +          +    -0.39829328143793 * GRP_MntMeatProducts2
218252    +          +     0.00511939388608 * GRP_MntMeatProducts3
218253    +          +      0.0518722466688 * GRP_MntMeatProducts4
218254    +          +     0.10413724420858 * GRP_MntWines2  +    -0.30183392073068 *
218255    +        GRP_MntWines3  +    -0.40546180997599 * GRP_MntWines4
218256    +          +    -0.73564355192687 * GRP_NumCatalogPurchases3
218257    +          +     0.04239157662699 * GRP_NumCatalogPurchases4
218258    +          +    -0.61448773428482 * GRP_NumDistPurchases2
218259    +          +    -0.10817170519054 * GRP_NumDistPurchases3
218260    +          +    -0.00883878051452 * GRP_NumDistPurchases4
218261    +          +      0.0024401108853 * GRP_NumWebPurchases2
218262    +          +     -0.1066188825276 * GRP_NumWebPurchases3
218263    +          +     -0.2845728776007 * GRP_NumWebPurchases4
218264    +          +    -0.46846387193519 * GRP_RFMstat2  +     0.01548835288752 *
218265    +        GRP_RFMstat3  +     0.29056719482503 * GRP_RFMstat4
218266    +          +     0.13283388675843 * GRP_RMntFrq2  +    -0.01179035894062 *
218267    +        GRP_RMntFrq3  +    -0.40979674551139 * GRP_RMntFrq4
218268    +          +     0.39674687653317 * GRP_Recency2  +     0.48674783005161 *
218269    +        GRP_Recency3  +     0.19384397786172 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.30891588421078 * GRP_AcceptedCmp52 + 0.10101143238536 *
GRP_Frq2 + -0.03148220138998 * GRP_Frq3 + 0.09807803608029 * GRP_Frq4 + 0.11294471318052 *
GRP_Income2 + 0.0433560034099 * GRP_Income3 + -0.35503487261838 * GRP_Income4 +
0.15199410100967 * GRP_Mnt2 + -0.15675008677561 * GRP_Mnt3 + -0.06110606567063 * GRP_Mnt4 +
0.10272197664106 * GRP_MntFishProducts2 + 0.33369645018356 * GRP_MntFishProducts3 +
0.08427214551103 * GRP_MntFishProducts4 + -0.36187933889617 * GRP_MntGoldProds2 +
0.1522584097588 * GRP_MntGoldProds3 + -0.18069803129722 * GRP_MntGoldProds4 +
-0.39829328143793 * GRP_MntMeatProducts2 + 0.00511939388608 * GRP_MntMeatProducts3 +
0.0518722466688 * GRP_MntMeatProducts4 + 0.10413724420858 * GRP_MntWines2 + -0.30183392073068
* GRP_MntWines3 + -0.40546180997599 * GRP_MntWines4 + -0.73564355192687 *
GRP_NumCatalogPurchases3 + 0.04239157662699 * GRP_NumCatalogPurchases4 + -0.61448773428482 *
GRP_NumDistPurchases2 + -0.10817170519054 * GRP_NumDistPurchases3 + -0.00883878051452 *
GRP_NumDistPurchases4 + 0.0024401108853 * GRP_NumWebPurchases2 + -0.1066188825276 *
GRP_NumWebPurchases3 + -0.2845728776007 * GRP_NumWebPurchases4 + -0.46846387193519 *
GRP_RFMstat2 + 0.01548835288752 * GRP_RFMstat3 + 0.29056719482503 * GRP_RFMstat4 +
0.13283388675843 * GRP_RMntFrq2 + -0.01179035894062 * GRP_RMntFrq3 + -0.40979674551139 *
GRP_RMntFrq4 + 0.39674687653317 * GRP_Recency2 + 0.48674783005161 * GRP_Recency3 +
0.19384397786172 * GRP_Recency4 ;
218270    +   H11  =    -1.18381596942405 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.18381596942405 + H11 ;
218271    +   H12  =     0.86336963287203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.86336963287203 + H12 ;
218272    +   H13  =     -0.9724199391604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.9724199391604 + H13 ;
218273    +   H14  =     1.35533016839911 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.35533016839911 + H14 ;
218274    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
218275    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
218276    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
218277    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
218278    +END;
MPRINT(EM_DIAGRAM):   END;
218279    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
218280    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
218281    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
218282    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
218283    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
218284    +END;
MPRINT(EM_DIAGRAM):   END;
218285    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218286    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
218287    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218288    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
218289    +   P_DepVar1  =     2.12648206014408 * H11  +      1.4206902210932 * H12
218290    +          +     1.21164854880393 * H13  +      1.5803543453738 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.12648206014408 * H11 + 1.4206902210932 * H12 +
1.21164854880393 * H13 + 1.5803543453738 * H14 ;
218291    +   P_DepVar1  =    -1.66515506353131 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66515506353131 + P_DepVar1 ;
218292    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
218293    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
218294    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
218295    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
218296    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
218297    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
218298    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
218299    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
218300    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
218301    +END;
MPRINT(EM_DIAGRAM):   END;
218302    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
218303    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
218304    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
218305    +END;
MPRINT(EM_DIAGRAM):   END;
218306    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
218307    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
218308    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
218309    +END;
MPRINT(EM_DIAGRAM):   END;
218310    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218311    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
218312    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
218313    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
218314    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
218315    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
218316    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
218317    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
218318    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
218319    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
218320    +END;
MPRINT(EM_DIAGRAM):   END;
218321    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
218322    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
218323    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
218324    +drop
218325    +H11
218326    +H12
218327    +H13
218328    +H14
218329    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
218330    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
218331     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
218332     quit;
218333     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
218334     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
218335     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
218336     retain ID 2 Node "Neural21";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural21";
218337     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
218338     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1842 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1842 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218339     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
218340     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218341     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1842 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1842 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
218342     proc sort data=EMWS8.Neural21_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural21_variableset out=_temp2(keep=NAME CREATOR);
218343     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218344     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.NEURAL21_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218345     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
218346     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
218347     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
218348     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218349     proc contents data=EMWS8.Neural21_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural21_train out=_meta(keep=NAME) noprint;
218350     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
218351     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
218352     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218353     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218354     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
218355     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
218356     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218357     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218358     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
218359     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
218359   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 895 rows and 5 columns.
 
218360     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218361     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
218362     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 895 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 895 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218363     filename _pref
218363   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
218364     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
218365     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
218366    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
218367    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
218368    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
218369    +
218370    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218371    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
218372    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218373    +LABEL GRP_AcceptedCmp5 =
218374    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
218375    +
218376    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
218377    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
218378    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
218379    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
218380    +end;
MPRINT(EM_DIAGRAM):   end;
218381    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
218382    +if (_UFORMAT eq '0'
218383    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
218384    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
218385    +end;
MPRINT(EM_DIAGRAM):   end;
218386    +else
218387    +if (_UFORMAT eq '1'
218388    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
218389    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
218390    +end;
MPRINT(EM_DIAGRAM):   end;
218391    +else do;
MPRINT(EM_DIAGRAM):   else do;
218392    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
218393    +end;
MPRINT(EM_DIAGRAM):   end;
218394    +end;
MPRINT(EM_DIAGRAM):   end;
218395    +
218396    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218397    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
218398    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218399    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
218400    +
218401    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
218402    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
218403    +end;
MPRINT(EM_DIAGRAM):   end;
218404    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
218405    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
218406    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
218407    +end;
MPRINT(EM_DIAGRAM):   end;
218408    +else
218409    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
218410    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
218411    +end;
MPRINT(EM_DIAGRAM):   end;
218412    +else
218413    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
218414    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
218415    +end;
MPRINT(EM_DIAGRAM):   end;
218416    +else
218417    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
218418    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
218419    +end;
MPRINT(EM_DIAGRAM):   end;
218420    +end;
MPRINT(EM_DIAGRAM):   end;
218421    +
218422    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218423    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
218424    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218425    +LABEL GRP_Income =
218426    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
218427    +
218428    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
218429    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
218430    +end;
MPRINT(EM_DIAGRAM):   end;
218431    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
218432    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
218433    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
218434    +end;
MPRINT(EM_DIAGRAM):   end;
218435    +else
218436    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
218437    +GRP_Income = 3;
The SAS System
 
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
218438    +end;
MPRINT(EM_DIAGRAM):   end;
218439    +else
218440    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
218441    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
218442    +end;
MPRINT(EM_DIAGRAM):   end;
218443    +else
218444    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
218445    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
218446    +end;
MPRINT(EM_DIAGRAM):   end;
218447    +end;
MPRINT(EM_DIAGRAM):   end;
218448    +
218449    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218450    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
218451    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218452    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
218453    +
218454    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
218455    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
218456    +end;
MPRINT(EM_DIAGRAM):   end;
218457    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
218458    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
218459    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
218460    +end;
MPRINT(EM_DIAGRAM):   end;
218461    +else
218462    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
218463    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
218464    +end;
MPRINT(EM_DIAGRAM):   end;
218465    +else
218466    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
218467    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
218468    +end;
MPRINT(EM_DIAGRAM):   end;
218469    +else
218470    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
218471    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
218472    +end;
MPRINT(EM_DIAGRAM):   end;
218473    +end;
MPRINT(EM_DIAGRAM):   end;
218474    +
218475    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218476    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
218477    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218478    +LABEL GRP_MntFishProducts =
218479    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
218480    +
218481    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
218482    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
218483    +end;
MPRINT(EM_DIAGRAM):   end;
218484    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
218485    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
218486    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
218487    +end;
MPRINT(EM_DIAGRAM):   end;
218488    +else
218489    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
218490    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
218491    +end;
MPRINT(EM_DIAGRAM):   end;
218492    +else
218493    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
218494    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
218495    +end;
MPRINT(EM_DIAGRAM):   end;
218496    +else
218497    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
218498    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
218499    +end;
MPRINT(EM_DIAGRAM):   end;
218500    +end;
MPRINT(EM_DIAGRAM):   end;
218501    +
218502    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218503    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
218504    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218505    +LABEL GRP_MntGoldProds =
218506    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
218507    +
218508    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
218509    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
218510    +end;
MPRINT(EM_DIAGRAM):   end;
218511    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
218512    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
218513    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
218514    +end;
MPRINT(EM_DIAGRAM):   end;
218515    +else
218516    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
218517    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
218518    +end;
MPRINT(EM_DIAGRAM):   end;
218519    +else
218520    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
218521    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
218522    +end;
MPRINT(EM_DIAGRAM):   end;
218523    +else
218524    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
218525    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
218526    +end;
MPRINT(EM_DIAGRAM):   end;
218527    +end;
MPRINT(EM_DIAGRAM):   end;
218528    +
218529    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218530    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
218531    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218532    +LABEL GRP_MntMeatProducts =
218533    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
218534    +
218535    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
218536    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
218537    +end;
MPRINT(EM_DIAGRAM):   end;
218538    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
218539    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
218540    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
218541    +end;
MPRINT(EM_DIAGRAM):   end;
218542    +else
218543    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
218544    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
218545    +end;
MPRINT(EM_DIAGRAM):   end;
218546    +else
218547    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
218548    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
218549    +end;
MPRINT(EM_DIAGRAM):   end;
218550    +else
218551    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
218552    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
218553    +end;
MPRINT(EM_DIAGRAM):   end;
218554    +end;
MPRINT(EM_DIAGRAM):   end;
218555    +
218556    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218557    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
218558    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218559    +LABEL GRP_MntWines =
218560    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
218561    +
218562    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
218563    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
218564    +end;
MPRINT(EM_DIAGRAM):   end;
218565    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
218566    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
218567    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
218568    +end;
MPRINT(EM_DIAGRAM):   end;
218569    +else
218570    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
218571    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
218572    +end;
MPRINT(EM_DIAGRAM):   end;
218573    +else
218574    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
218575    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
218576    +end;
MPRINT(EM_DIAGRAM):   end;
218577    +else
218578    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
218579    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
218580    +end;
MPRINT(EM_DIAGRAM):   end;
218581    +end;
MPRINT(EM_DIAGRAM):   end;
218582    +
218583    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218584    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
218585    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218586    +LABEL GRP_NumCatalogPurchases =
218587    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
218588    +
218589    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
218590    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
218591    +end;
MPRINT(EM_DIAGRAM):   end;
218592    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
218593    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
218594    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
218595    +end;
MPRINT(EM_DIAGRAM):   end;
218596    +else
218597    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
218598    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
218599    +end;
MPRINT(EM_DIAGRAM):   end;
218600    +else
218601    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
218602    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
218603    +end;
MPRINT(EM_DIAGRAM):   end;
218604    +else
218605    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
218606    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
218607    +end;
MPRINT(EM_DIAGRAM):   end;
218608    +end;
MPRINT(EM_DIAGRAM):   end;
218609    +
218610    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218611    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
218612    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218613    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
218614    +
218615    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
218616    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
218617    +end;
MPRINT(EM_DIAGRAM):   end;
218618    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
218619    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
218620    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
218621    +end;
MPRINT(EM_DIAGRAM):   end;
218622    +else
218623    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
218624    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
218625    +end;
MPRINT(EM_DIAGRAM):   end;
218626    +else
218627    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
218628    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
218629    +end;
MPRINT(EM_DIAGRAM):   end;
218630    +else
218631    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
218632    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
218633    +end;
MPRINT(EM_DIAGRAM):   end;
218634    +end;
MPRINT(EM_DIAGRAM):   end;
218635    +
218636    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218637    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
218638    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218639    +LABEL GRP_NumWebPurchases =
218640    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
218641    +
218642    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
218643    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
218644    +end;
MPRINT(EM_DIAGRAM):   end;
218645    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
218646    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
218647    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
218648    +end;
MPRINT(EM_DIAGRAM):   end;
218649    +else
218650    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
218651    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
218652    +end;
MPRINT(EM_DIAGRAM):   end;
218653    +else
218654    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
218655    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
218656    +end;
MPRINT(EM_DIAGRAM):   end;
218657    +else
218658    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
218659    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
218660    +end;
MPRINT(EM_DIAGRAM):   end;
218661    +end;
MPRINT(EM_DIAGRAM):   end;
218662    +
218663    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218664    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
218665    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218666    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
218667    +
218668    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
218669    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
218670    +end;
MPRINT(EM_DIAGRAM):   end;
218671    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
218672    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
218673    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
218674    +end;
MPRINT(EM_DIAGRAM):   end;
218675    +else
218676    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
218677    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
218678    +end;
MPRINT(EM_DIAGRAM):   end;
218679    +else
218680    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
218681    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
218682    +end;
MPRINT(EM_DIAGRAM):   end;
218683    +else
218684    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
218685    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
218686    +end;
MPRINT(EM_DIAGRAM):   end;
218687    +end;
MPRINT(EM_DIAGRAM):   end;
218688    +
218689    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218690    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
218691    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218692    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
218693    +
218694    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
218695    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
218696    +end;
MPRINT(EM_DIAGRAM):   end;
218697    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
218698    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
218699    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
218700    +end;
MPRINT(EM_DIAGRAM):   end;
218701    +else
218702    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
218703    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
218704    +end;
MPRINT(EM_DIAGRAM):   end;
218705    +else
218706    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
218707    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
218708    +end;
MPRINT(EM_DIAGRAM):   end;
218709    +else
218710    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
218711    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
218712    +end;
MPRINT(EM_DIAGRAM):   end;
218713    +end;
MPRINT(EM_DIAGRAM):   end;
218714    +
218715    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218716    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
218717    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218718    +LABEL GRP_Recency =
218719    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
218720    +
218721    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
218722    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
218723    +end;
MPRINT(EM_DIAGRAM):   end;
218724    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
218725    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
218726    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
218727    +end;
MPRINT(EM_DIAGRAM):   end;
218728    +else
218729    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
218730    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
218731    +end;
MPRINT(EM_DIAGRAM):   end;
218732    +else
218733    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
218734    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
218735    +end;
MPRINT(EM_DIAGRAM):   end;
218736    +else
218737    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
218738    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
218739    +end;
MPRINT(EM_DIAGRAM):   end;
218740    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
218741     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
218742     quit;
218743     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
218744     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
218745     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
218746     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
218747     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
218748     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218749     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
218750     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218751     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218752     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
218753     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218754     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
218755     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
218756     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
218757     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
218758     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218759     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
218760     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
218761     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
218762     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218763     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218764     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
218765     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
218766     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218767     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
218768     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
218769     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
218769   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.
 
218770     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218771     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
218772     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 910 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
218773     filename _pref
218773   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
218774     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
218775     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
218776    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218777    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
218778    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
218779    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
218780    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
218781    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
218782     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
218783     quit;
218784     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
218785     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
218786     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
218787     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
218788     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
218789     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218790     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
218791     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218792     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218793     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
218794     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218795     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
218796     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
218797     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
218798     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
218799     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218800     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
218801     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
218802     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
218803     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218804     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218805     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
218806     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
218807     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218808     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218809     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
218810     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
218810   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
218811     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
218812     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
218813     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 914 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218814     filename _pref
218814   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
218815     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
218816     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
218817    +
218818    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
218819    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
218819   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
218820    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
218821    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
218822    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
218823    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
218824    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
218825     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
218826     quit;
218827     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
218828     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
218829     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
218830     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
218831     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
218832     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218833     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
218834     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218835     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218836     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
218837     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218838     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
218839     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
218840     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
218841     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
218842     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218843     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
218844     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218845     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
218846     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218847     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218848     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
218849     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
218850     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218851     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218852     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
218853     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
218853   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
218854     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218855     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
218856     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 953 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218857     filename _pref
218857   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
218858     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
218859     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
218860    +
218861    +
218862    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
218863    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
218864    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
218865    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
218866    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
218867    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
218868    +
218869    +
218870    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
218871    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
218872    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
218873    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
218874    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
218875    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
218876    +
218877    +
218878    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
218879    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
218880    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
218881    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
218882    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
218883    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
218884    +
218885    +
218886    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
218887    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
218888    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
218889    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
218890    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
218891    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
218892    +
218893    +
218894    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
218895    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
218896    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
218897    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
218898    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
218899    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
218900    +
218901    +
218902    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
218903    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
218904    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
218905    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
218906    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
218907    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
218908    +
218909    +
218910    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
218911    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
218912    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
218913    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
218914    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
218915    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
218916    +
218917    +
218918    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
218919    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
218920    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
218921    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
218922    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
218923    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
218924    +if
218925    +_FILTERNORM1 not in ( '.')
218926    + and
218927    +_FILTERNORM2 not in ( '.')
218928    + and
218929    +_FILTERNORM3 not in ( '.')
218930    + and
218931    +_FILTERNORM4 not in ( '.')
218932    + and
218933    +_FILTERNORM5 not in ( '.')
218934    + and
218935    +_FILTERNORM6 not in ( '.')
218936    + and
218937    +_FILTERNORM7 not in ( ' ')
218938    + and
218939    +_FILTERNORM8 not in ( ' ')
218940    +and
218941    +( Dt_Customer ne .)
218942    +and ( Income ne . and (Income<=107000))
218943    +and ( Kidhome ne .)
218944    +and ( MntFishProducts ne .)
218945    +and ( MntFruits ne .)
218946    +and ( MntGoldProds ne .)
218947    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
218948    +and ( MntSweetProducts ne .)
218949    +and ( MntWines ne .)
218950    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
218951    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
218952    +and ( NumStorePurchases ne .)
218953    +and ( NumWebPurchases ne .)
218954    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
218955    +and ( Recency ne .)
218956    +and ( Teenhome ne .)
218957    +and ( Year_Birth ne .)
218958    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
218959    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
218960    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
218961    +end;
MPRINT(EM_DIAGRAM):   end;
218962    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
218963    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
218964     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
218965     quit;
218966     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
218967     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
218968     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
218969     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
218970     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
218971     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218972     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
218973     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218974     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218975     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
218976     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218977     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218978     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
218979     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
218980     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
218981     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218982     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
218983     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
218984     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
218985     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218986     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218987     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
218988     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
218989     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
218990     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
218991     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
218992     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
218992   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
218993     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
218994     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
218995     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 1019 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
218996     %macro varDept(fcmpdata=,id=);
218997     %global nobs&id scoreFlag&id;
218998     %let scoreFlag&id = 0;
218999     %if &id=1 or ^&fcmpStart %then %do;
219000     proc sort data=&fcmpdata out=_temp&id nodupkey;
219001     by NAME;
219002     where id=&id and LHS in( %let j=1;
219003     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
219004     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
219005     "&var" %let j = %eval(&j+1);
219006     %end;
219007     );
219008     run;
219009     %let dsid = %sysfunc(open(_temp&id));
219010     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
219011     %let dsid = %sysfunc(close(&dsid));
219012     %if &&nobs&id %then %do;
219013     %let scoreFlag&id = 1;
219014     %let fcmpStart = 1;
219015     %end;
219016     %else %let fcmpStart = 0;
219017     %end;
219018     %else %do;
219019     proc sort data=&fcmpdata out=_tempid;
219020     where id=&id;
219021     by LHS;
219022     run;
219023     %let dsid = %sysfunc(open(_tempid));
219024     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
219025     %let dsid = %sysfunc(close(&dsid));
219026     %if ^&&nobs&id %then %do;
219027     proc datasets lib=work nolist;
219028     delete _tempid;
219029     run;
219030     quit;
219031     %end;
219032     %else %do;
219033     data _tempAll;
219034     set %let j=%eval(&id-1);
219035     %do x=1 %to &j;
219036     %if &&nobs&x %then %do;
219037     _temp&x %end;
219038     %end;
219039     ;
219040     run;
219041     proc sql;
219042     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
219042   ! work._tempid p2 where p.name=p2.lhs;
219043     quit;
219044     data _temp&id;
219045     set _temp&id;
219046     where LHS ne '' and NAME ne '' and Node ne '';
219047     run;
219048     proc datasets lib=work nolist;
219049     delete _tempAll;
219050     run;
219051     %let dsid = %sysfunc(open(_temp&id));
219052     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
219053     %let dsid = %sysfunc(close(&dsid));
219054     %if ^&&nobs&id %then %do;
219055     proc datasets lib=work nolist;
219056     delete _temp&id;
219057     run;
219058     quit;
219059     %end;
219060     %else %do;
219061     %let scoreFlag&id = 1;
219062     data _temp&id;
219063     set _temp&id;
219064     where LHS ne NAME and node ne '';
219065     run;
219066     %let dsid = %sysfunc(open(_temp&id));
219067     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
219068     %let dsid = %sysfunc(close(&dsid));
219069     %if ^&&nobs&id %then %do;
219070     proc datasets lib=work nolist;
219071     delete _temp&id;
219072     run;
219073     quit;
219074     %end;
219075     %else %do;
219076     proc sort data=_temp&id nodupkey;
219077     by LHS NAME;
219078     run;
219079     %end;
219080     %end;
219081     %end;
219082     %end;
219083     %mend varDept;
219084     %macro optCode(outdata=fcmpdata);
219085     %global fcmpStart;
219086     %let fcmpStart = 0;
219087     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
219088     %let NumNodes=9;
219089     %do k=1 %to &NumNodes;
219090     %vardept(fcmpdata=&outdata, id=&k);
219091     %end;
219092     %mend optCode;
219093     %optcode(outData=EMWS8.Ensmbl18_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 49 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
219094     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
219095     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
219096     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
219097     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
219098     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
219099     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
219100     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
219101     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219102     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
219103     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
219103   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
219104     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
219105     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
219106     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
219107     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219108     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
219109     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
219110     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
219111     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219112     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
219113     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
219114     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
219115     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219116     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
219117     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
219117   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.
 
219118     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
219119     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
219120     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
219121     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
219122     filename _pref
219122   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMPUBLISHSCORE.sas";
219123     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
219124     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural18\EMPUBLISHSCORE.sas.
219125    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
219126    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
219127    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
219128    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
219129    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
219130    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
219131    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
219132    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
219133    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
219134    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
219135    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
219136    +LENGTH _WARN_ $4
219137    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
219138    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
219139    +
219140    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
219141    +
219142    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
219143    +
219144    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
219145    +
219146    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
219147    +
219148    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
219149    +
219150    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
219151    +
219152    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
219153    +
219154    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
219155    +
219156    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
219157    +
219158    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
219159    +
219160    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
219161    +
219162    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
219163    +
219164    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
219165    +
219166    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
219167    +
219168    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
219169    +
219170    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
219171    +
219172    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
219173    +
219174    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
219175    +
219176    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
219177    +
219178    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
219179    +
219180    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
219181    +
219182    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
219183    +
219184    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
219185    +
219186    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
219187    +
219188    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
219189    +
219190    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
219191    +
219192    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
219193    +
219194    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
219195    +
219196    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
219197    +
219198    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
219199    +
219200    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
219201    +
219202    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
219203    +
219204    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
219205    +
219206    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
219207    +
219208    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
219209    +
219210    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
219211    +
219212    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
219213    +
219214    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
219215    +
219216    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
219217    +
219218    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
219219    +
219220    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
219221    +
219222    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
219223    +
219224    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
219225    +
219226    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
219227    +
219228    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
219229    +
219230    +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
219231    +
219232    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
219233    +
219234    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
219235    +
219236    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
219237    +
219238    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
219239    +
219240    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
219241    +
219242    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
219243    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
219244    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
219245    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
219246    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
219247    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219248    +end;
MPRINT(EM_DIAGRAM):   end;
219249    +else do;
MPRINT(EM_DIAGRAM):   else do;
219250    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
219251    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
219252    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
219253    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
219254    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
219255    +   end;
MPRINT(EM_DIAGRAM):   end;
219256    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
219257    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
219258    +   end;
MPRINT(EM_DIAGRAM):   end;
219259    +   else do;
MPRINT(EM_DIAGRAM):   else do;
219260    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
219261    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
219262    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219263    +   end;
MPRINT(EM_DIAGRAM):   end;
219264    +end;
MPRINT(EM_DIAGRAM):   end;
219265    +
219266    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
219267    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
219268    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
219269    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
219270    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
219271    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
219272    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
219273    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219274    +end;
MPRINT(EM_DIAGRAM):   end;
219275    +else do;
MPRINT(EM_DIAGRAM):   else do;
219276    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
219277    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
219278    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
219279    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
219280    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
219281    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
219282    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
219283    +   end;
MPRINT(EM_DIAGRAM):   end;
219284    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
219285    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
219286    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
219287    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
219288    +   end;
MPRINT(EM_DIAGRAM):   end;
219289    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
219290    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
219291    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
219292    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
219293    +   end;
MPRINT(EM_DIAGRAM):   end;
219294    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
219295    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
219296    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
219297    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
219298    +   end;
MPRINT(EM_DIAGRAM):   end;
219299    +   else do;
MPRINT(EM_DIAGRAM):   else do;
219300    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
219301    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
219302    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
219303    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
219304    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219305    +   end;
MPRINT(EM_DIAGRAM):   end;
219306    +end;
MPRINT(EM_DIAGRAM):   end;
219307    +
219308    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
219309    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
219310    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
219311    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
219312    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
219313    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
219314    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
219315    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219316    +end;
MPRINT(EM_DIAGRAM):   end;
219317    +else do;
MPRINT(EM_DIAGRAM):   else do;
219318    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
219319    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
219320    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
219321    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
219322    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
219323    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
219324    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
219325    +   end;
MPRINT(EM_DIAGRAM):   end;
219326    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
219327    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
219328    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
219329    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
219330    +   end;
MPRINT(EM_DIAGRAM):   end;
219331    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
219332    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
219333    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
219334    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
219335    +   end;
MPRINT(EM_DIAGRAM):   end;
219336    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
219337    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
219338    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
219339    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
219340    +   end;
MPRINT(EM_DIAGRAM):   end;
219341    +   else do;
MPRINT(EM_DIAGRAM):   else do;
219342    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
219343    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
219344    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
219345    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
219346    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219347    +   end;
MPRINT(EM_DIAGRAM):   end;
219348    +end;
MPRINT(EM_DIAGRAM):   end;
219349    +
219350    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
219351    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
219352    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
219353    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
219354    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
219355    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
219356    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
219357    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219358    +end;
MPRINT(EM_DIAGRAM):   end;
219359    +else do;
MPRINT(EM_DIAGRAM):   else do;
219360    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
219361    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
219362    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
219363    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
219364    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
219365    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
219366    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
219367    +   end;
MPRINT(EM_DIAGRAM):   end;
219368    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
219369    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
219370    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
219371    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
219372    +   end;
MPRINT(EM_DIAGRAM):   end;
219373    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
219374    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
219375    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
219376    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
219377    +   end;
MPRINT(EM_DIAGRAM):   end;
219378    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
219379    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
219380    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
219381    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
219382    +   end;
MPRINT(EM_DIAGRAM):   end;
219383    +   else do;
MPRINT(EM_DIAGRAM):   else do;
219384    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
219385    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
219386    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
219387    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
219388    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219389    +   end;
MPRINT(EM_DIAGRAM):   end;
219390    +end;
MPRINT(EM_DIAGRAM):   end;
219391    +
219392    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
219393    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
219394    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
219395    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
219396    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
219397    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
219398    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
219399    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219400    +end;
MPRINT(EM_DIAGRAM):   end;
219401    +else do;
MPRINT(EM_DIAGRAM):   else do;
219402    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
219403    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
219404    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
219405    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
219406    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
219407    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
219408    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
219409    +   end;
MPRINT(EM_DIAGRAM):   end;
219410    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
219411    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
219412    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
219413    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
219414    +   end;
MPRINT(EM_DIAGRAM):   end;
219415    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
219416    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
219417    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
219418    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
219419    +   end;
MPRINT(EM_DIAGRAM):   end;
219420    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
219421    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
219422    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
219423    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
219424    +   end;
MPRINT(EM_DIAGRAM):   end;
219425    +   else do;
MPRINT(EM_DIAGRAM):   else do;
219426    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
219427    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
219428    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
219429    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
219430    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219431    +   end;
MPRINT(EM_DIAGRAM):   end;
219432    +end;
MPRINT(EM_DIAGRAM):   end;
219433    +
219434    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
219435    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
219436    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
219437    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
219438    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
219439    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
219440    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
219441    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219442    +end;
MPRINT(EM_DIAGRAM):   end;
219443    +else do;
MPRINT(EM_DIAGRAM):   else do;
219444    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
219445    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
219446    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
219447    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
219448    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
219449    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
219450    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
219451    +   end;
MPRINT(EM_DIAGRAM):   end;
219452    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
219453    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
219454    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
219455    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
219456    +   end;
MPRINT(EM_DIAGRAM):   end;
219457    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
219458    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
219459    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
219460    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
219461    +   end;
MPRINT(EM_DIAGRAM):   end;
219462    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
219463    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
219464    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
219465    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
219466    +   end;
MPRINT(EM_DIAGRAM):   end;
219467    +   else do;
MPRINT(EM_DIAGRAM):   else do;
219468    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
219469    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
219470    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
219471    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
219472    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219473    +   end;
MPRINT(EM_DIAGRAM):   end;
219474    +end;
MPRINT(EM_DIAGRAM):   end;
219475    +
219476    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
219477    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
219478    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
219479    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
219480    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
219481    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
219482    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
219483    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219484    +end;
MPRINT(EM_DIAGRAM):   end;
219485    +else do;
MPRINT(EM_DIAGRAM):   else do;
219486    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
219487    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
219488    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
219489    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
219490    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
219491    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
219492    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
219493    +   end;
MPRINT(EM_DIAGRAM):   end;
219494    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
219495    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
219496    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
219497    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
219498    +   end;
MPRINT(EM_DIAGRAM):   end;
219499    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
219500    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
219501    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
219502    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
219503    +   end;
MPRINT(EM_DIAGRAM):   end;
219504    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
219505    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
219506    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
219507    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
219508    +   end;
MPRINT(EM_DIAGRAM):   end;
219509    +   else do;
MPRINT(EM_DIAGRAM):   else do;
219510    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
219511    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
219512    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
219513    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
219514    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219515    +   end;
MPRINT(EM_DIAGRAM):   end;
219516    +end;
MPRINT(EM_DIAGRAM):   end;
219517    +
219518    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
219519    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
219520    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
219521    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
219522    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
219523    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
219524    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
219525    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219526    +end;
MPRINT(EM_DIAGRAM):   end;
219527    +else do;
MPRINT(EM_DIAGRAM):   else do;
219528    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
219529    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
219530    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
219531    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
219532    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
219533    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
219534    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
219535    +   end;
MPRINT(EM_DIAGRAM):   end;
219536    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
219537    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
219538    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
219539    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
219540    +   end;
MPRINT(EM_DIAGRAM):   end;
219541    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
219542    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
219543    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
219544    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
219545    +   end;
MPRINT(EM_DIAGRAM):   end;
219546    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
219547    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
219548    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
219549    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
219550    +   end;
MPRINT(EM_DIAGRAM):   end;
219551    +   else do;
MPRINT(EM_DIAGRAM):   else do;
219552    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
219553    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
219554    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
219555    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
219556    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219557    +   end;
MPRINT(EM_DIAGRAM):   end;
219558    +end;
MPRINT(EM_DIAGRAM):   end;
219559    +
219560    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
219561    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
219562    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
219563    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
219564    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
219565    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
219566    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219567    +end;
MPRINT(EM_DIAGRAM):   end;
219568    +else do;
MPRINT(EM_DIAGRAM):   else do;
219569    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
219570    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
219571    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
219572    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
219573    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
219574    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
219575    +   end;
MPRINT(EM_DIAGRAM):   end;
219576    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
219577    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
219578    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
219579    +   end;
MPRINT(EM_DIAGRAM):   end;
219580    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
219581    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
219582    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
219583    +   end;
MPRINT(EM_DIAGRAM):   end;
219584    +   else do;
MPRINT(EM_DIAGRAM):   else do;
219585    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
219586    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
219587    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
219588    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219589    +   end;
MPRINT(EM_DIAGRAM):   end;
219590    +end;
MPRINT(EM_DIAGRAM):   end;
219591    +
219592    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
219593    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
219594    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
219595    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
219596    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
219597    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
219598    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
219599    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219600    +end;
MPRINT(EM_DIAGRAM):   end;
219601    +else do;
MPRINT(EM_DIAGRAM):   else do;
219602    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
219603    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
219604    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
219605    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
219606    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
219607    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
219608    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
219609    +   end;
MPRINT(EM_DIAGRAM):   end;
219610    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
219611    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
219612    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
219613    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
219614    +   end;
MPRINT(EM_DIAGRAM):   end;
219615    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
219616    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
219617    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
219618    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
219619    +   end;
MPRINT(EM_DIAGRAM):   end;
219620    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
219621    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
219622    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
219623    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
219624    +   end;
MPRINT(EM_DIAGRAM):   end;
219625    +   else do;
MPRINT(EM_DIAGRAM):   else do;
219626    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
219627    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
219628    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
219629    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
219630    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219631    +   end;
MPRINT(EM_DIAGRAM):   end;
219632    +end;
MPRINT(EM_DIAGRAM):   end;
219633    +
219634    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
219635    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
219636    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
219637    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
219638    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
219639    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
219640    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
219641    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219642    +end;
MPRINT(EM_DIAGRAM):   end;
219643    +else do;
MPRINT(EM_DIAGRAM):   else do;
219644    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
219645    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
219646    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
219647    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
219648    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
219649    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
219650    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
219651    +   end;
MPRINT(EM_DIAGRAM):   end;
219652    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
219653    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
219654    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
219655    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
219656    +   end;
MPRINT(EM_DIAGRAM):   end;
219657    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
219658    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
219659    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
219660    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
219661    +   end;
MPRINT(EM_DIAGRAM):   end;
219662    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
219663    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
219664    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
219665    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
219666    +   end;
MPRINT(EM_DIAGRAM):   end;
219667    +   else do;
MPRINT(EM_DIAGRAM):   else do;
219668    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
219669    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
219670    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
219671    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
219672    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219673    +   end;
MPRINT(EM_DIAGRAM):   end;
219674    +end;
MPRINT(EM_DIAGRAM):   end;
219675    +
219676    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
219677    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
219678    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
219679    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
219680    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
219681    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
219682    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
219683    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219684    +end;
MPRINT(EM_DIAGRAM):   end;
219685    +else do;
MPRINT(EM_DIAGRAM):   else do;
219686    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
219687    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
219688    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
219689    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
219690    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
219691    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
219692    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
219693    +   end;
MPRINT(EM_DIAGRAM):   end;
219694    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
219695    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
219696    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
219697    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
219698    +   end;
MPRINT(EM_DIAGRAM):   end;
219699    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
219700    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
219701    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
219702    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
219703    +   end;
MPRINT(EM_DIAGRAM):   end;
219704    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
219705    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
219706    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
219707    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
219708    +   end;
MPRINT(EM_DIAGRAM):   end;
219709    +   else do;
MPRINT(EM_DIAGRAM):   else do;
219710    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
219711    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
219712    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
219713    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
219714    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219715    +   end;
MPRINT(EM_DIAGRAM):   end;
219716    +end;
MPRINT(EM_DIAGRAM):   end;
219717    +
219718    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
219719    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
219720    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
219721    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
219722    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
219723    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
219724    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
219725    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219726    +end;
MPRINT(EM_DIAGRAM):   end;
219727    +else do;
MPRINT(EM_DIAGRAM):   else do;
219728    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
219729    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
219730    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
219731    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
219732    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
219733    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
219734    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
219735    +   end;
MPRINT(EM_DIAGRAM):   end;
219736    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
219737    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
219738    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
219739    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
219740    +   end;
MPRINT(EM_DIAGRAM):   end;
219741    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
219742    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
219743    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
219744    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
219745    +   end;
MPRINT(EM_DIAGRAM):   end;
219746    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
219747    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
219748    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
219749    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
219750    +   end;
MPRINT(EM_DIAGRAM):   end;
219751    +   else do;
MPRINT(EM_DIAGRAM):   else do;
219752    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
219753    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
219754    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
219755    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
219756    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219757    +   end;
MPRINT(EM_DIAGRAM):   end;
219758    +end;
MPRINT(EM_DIAGRAM):   end;
219759    +
219760    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
219761    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
219762    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
219763    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
219764    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
219765    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
219766    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
219767    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219768    +end;
MPRINT(EM_DIAGRAM):   end;
219769    +else do;
MPRINT(EM_DIAGRAM):   else do;
219770    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
219771    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
219772    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
219773    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
219774    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
219775    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
219776    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
219777    +   end;
MPRINT(EM_DIAGRAM):   end;
219778    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
219779    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
219780    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
219781    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
219782    +   end;
MPRINT(EM_DIAGRAM):   end;
219783    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
219784    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
219785    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
219786    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
219787    +   end;
MPRINT(EM_DIAGRAM):   end;
219788    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
219789    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
219790    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
219791    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
219792    +   end;
MPRINT(EM_DIAGRAM):   end;
219793    +   else do;
MPRINT(EM_DIAGRAM):   else do;
219794    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
219795    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
219796    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
219797    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
219798    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219799    +   end;
MPRINT(EM_DIAGRAM):   end;
219800    +end;
MPRINT(EM_DIAGRAM):   end;
219801    +
219802    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219803    +*** Checking missing input Interval
219804    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
219805    +
219806    +IF NMISS(
219807    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
219808    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
219809    +
219810    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
219811    +END;
MPRINT(EM_DIAGRAM):   END;
219812    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219813    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
219814    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219815    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
219816    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
219817    +END;
MPRINT(EM_DIAGRAM):   END;
219818    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
219819    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
219820    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
219821    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
219822    +END;
MPRINT(EM_DIAGRAM):   END;
219823    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219824    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
219825    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219826    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219827    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
219828    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
219829    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
219830    +   H11  =     0.03855897145156 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.03855897145156 * S_Year_Birth ;
219831    +   H12  =      0.4940754340088 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.4940754340088 * S_Year_Birth ;
219832    +   H13  =     0.17524137660647 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.17524137660647 * S_Year_Birth ;
219833    +   H14  =     0.27270757044038 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.27270757044038 * S_Year_Birth ;
219834    +   H15  =    -0.02127353119313 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.02127353119313 * S_Year_Birth ;
219835    +   H16  =    -0.10595973365564 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = -0.10595973365564 * S_Year_Birth ;
219836    +   H17  =    -0.11271332681901 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H17 = -0.11271332681901 * S_Year_Birth ;
219837    +   H11  = H11  +     0.21558790598329 * GRP_AcceptedCmp52
219838    +          +    -0.07145572032882 * GRP_Frq2  +     0.09268595548153 * GRP_Frq3
219839    +          +    -0.20765463263399 * GRP_Frq4  +    -0.00887637988838 *
219840    +        GRP_Income2  +    -0.34198008097003 * GRP_Income3
219841    +          +     0.00518173450113 * GRP_Income4  +     0.17153998784849 *
219842    +        GRP_Mnt2  +    -0.03282863464194 * GRP_Mnt3  +     0.15479242768387 *
219843    +        GRP_Mnt4  +    -0.14566682947772 * GRP_MntFishProducts2
219844    +          +    -0.04697385312971 * GRP_MntFishProducts3
219845    +          +     0.05477300056491 * GRP_MntFishProducts4
219846    +          +    -0.21182877070793 * GRP_MntGoldProds2
219847    +          +    -0.06202001203906 * GRP_MntGoldProds3
219848    +          +    -0.23297283739715 * GRP_MntGoldProds4
219849    +          +    -0.27072080481215 * GRP_MntMeatProducts2
219850    +          +     -0.0879595975531 * GRP_MntMeatProducts3
219851    +          +     0.01711044358319 * GRP_MntMeatProducts4
219852    +          +     0.01568057691806 * GRP_MntWines2  +    -0.14454572309741 *
219853    +        GRP_MntWines3  +      0.1665968837033 * GRP_MntWines4
219854    +          +    -0.24980039994544 * GRP_NumCatalogPurchases3
219855    +          +    -0.00199030871063 * GRP_NumCatalogPurchases4
219856    +          +     0.11565917560156 * GRP_NumDistPurchases2
219857    +          +      0.1678532898895 * GRP_NumDistPurchases3
219858    +          +     -0.0338568889009 * GRP_NumDistPurchases4
219859    +          +     0.09970745707934 * GRP_NumWebPurchases2
219860    +          +     0.02961221360107 * GRP_NumWebPurchases3
219861    +          +     0.02261054892411 * GRP_NumWebPurchases4
219862    +          +     0.22891892518291 * GRP_RFMstat2  +     0.30720492174411 *
219863    +        GRP_RFMstat3  +     0.02558392907316 * GRP_RFMstat4
219864    +          +    -0.22752513596954 * GRP_RMntFrq2  +    -0.11010023712096 *
219865    +        GRP_RMntFrq3  +    -0.29294961809478 * GRP_RMntFrq4
219866    +          +     0.17323450297234 * GRP_Recency2  +    -0.02999008104866 *
219867    +        GRP_Recency3  +    -0.07522056103469 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.21558790598329 * GRP_AcceptedCmp52 + -0.07145572032882 *
GRP_Frq2 + 0.09268595548153 * GRP_Frq3 + -0.20765463263399 * GRP_Frq4 + -0.00887637988838 *
GRP_Income2 + -0.34198008097003 * GRP_Income3 + 0.00518173450113 * GRP_Income4 +
0.17153998784849 * GRP_Mnt2 + -0.03282863464194 * GRP_Mnt3 + 0.15479242768387 * GRP_Mnt4 +
-0.14566682947772 * GRP_MntFishProducts2 + -0.04697385312971 * GRP_MntFishProducts3 +
0.05477300056491 * GRP_MntFishProducts4 + -0.21182877070793 * GRP_MntGoldProds2 +
-0.06202001203906 * GRP_MntGoldProds3 + -0.23297283739715 * GRP_MntGoldProds4 +
-0.27072080481215 * GRP_MntMeatProducts2 + -0.0879595975531 * GRP_MntMeatProducts3 +
0.01711044358319 * GRP_MntMeatProducts4 + 0.01568057691806 * GRP_MntWines2 + -0.14454572309741
* GRP_MntWines3 + 0.1665968837033 * GRP_MntWines4 + -0.24980039994544 *
GRP_NumCatalogPurchases3 + -0.00199030871063 * GRP_NumCatalogPurchases4 + 0.11565917560156 *
GRP_NumDistPurchases2 + 0.1678532898895 * GRP_NumDistPurchases3 + -0.0338568889009 *
GRP_NumDistPurchases4 + 0.09970745707934 * GRP_NumWebPurchases2 + 0.02961221360107 *
GRP_NumWebPurchases3 + 0.02261054892411 * GRP_NumWebPurchases4 + 0.22891892518291 *
GRP_RFMstat2 + 0.30720492174411 * GRP_RFMstat3 + 0.02558392907316 * GRP_RFMstat4 +
-0.22752513596954 * GRP_RMntFrq2 + -0.11010023712096 * GRP_RMntFrq3 + -0.29294961809478 *
GRP_RMntFrq4 + 0.17323450297234 * GRP_Recency2 + -0.02999008104866 * GRP_Recency3 +
-0.07522056103469 * GRP_Recency4 ;
219868    +   H12  = H12  +    -0.17475665685155 * GRP_AcceptedCmp52
219869    +          +     0.39850686717751 * GRP_Frq2  +     0.21273190324396 * GRP_Frq3
219870    +          +    -0.04292229763335 * GRP_Frq4  +     0.48189221687125 *
219871    +        GRP_Income2  +       0.757675062227 * GRP_Income3
219872    +          +    -0.31438345261512 * GRP_Income4  +     0.08884755999997 *
219873    +        GRP_Mnt2  +     0.02891204793625 * GRP_Mnt3  +    -0.11500381143203 *
219874    +        GRP_Mnt4  +     0.47755891441547 * GRP_MntFishProducts2
219875    +          +     0.26645530981311 * GRP_MntFishProducts3
219876    +          +    -0.17631072283513 * GRP_MntFishProducts4
219877    +          +    -0.35439521021691 * GRP_MntGoldProds2
219878    +          +     0.11419663880206 * GRP_MntGoldProds3
219879    +          +     0.07288749113866 * GRP_MntGoldProds4
219880    +          +    -0.52191822126159 * GRP_MntMeatProducts2
219881    +          +    -0.08421627788812 * GRP_MntMeatProducts3
219882    +          +    -0.15930642038763 * GRP_MntMeatProducts4
219883    +          +     0.17420985773045 * GRP_MntWines2  +     0.21257483876123 *
219884    +        GRP_MntWines3  +    -0.13198840161443 * GRP_MntWines4
219885    +          +    -0.24725403471973 * GRP_NumCatalogPurchases3
219886    +          +     0.28574938745998 * GRP_NumCatalogPurchases4
219887    +          +     -0.4878996299474 * GRP_NumDistPurchases2
219888    +          +     0.10139595392447 * GRP_NumDistPurchases3
219889    +          +     0.05251891244468 * GRP_NumDistPurchases4
219890    +          +    -0.18486003226007 * GRP_NumWebPurchases2
219891    +          +      0.0263831646971 * GRP_NumWebPurchases3
219892    +          +     0.26495059708503 * GRP_NumWebPurchases4
219893    +          +    -0.16580006605432 * GRP_RFMstat2  +    -0.12537703875848 *
219894    +        GRP_RFMstat3  +      -0.100652416931 * GRP_RFMstat4
219895    +          +    -0.00913931308958 * GRP_RMntFrq2  +    -0.15758837200974 *
219896    +        GRP_RMntFrq3  +     -0.1198225533702 * GRP_RMntFrq4
219897    +          +       1.075902392162 * GRP_Recency2  +     0.44926983542925 *
219898    +        GRP_Recency3  +     -0.4970729472837 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.17475665685155 * GRP_AcceptedCmp52 + 0.39850686717751 *
GRP_Frq2 + 0.21273190324396 * GRP_Frq3 + -0.04292229763335 * GRP_Frq4 + 0.48189221687125 *
GRP_Income2 + 0.757675062227 * GRP_Income3 + -0.31438345261512 * GRP_Income4 +
0.08884755999997 * GRP_Mnt2 + 0.02891204793625 * GRP_Mnt3 + -0.11500381143203 * GRP_Mnt4 +
0.47755891441547 * GRP_MntFishProducts2 + 0.26645530981311 * GRP_MntFishProducts3 +
-0.17631072283513 * GRP_MntFishProducts4 + -0.35439521021691 * GRP_MntGoldProds2 +
0.11419663880206 * GRP_MntGoldProds3 + 0.07288749113866 * GRP_MntGoldProds4 +
-0.52191822126159 * GRP_MntMeatProducts2 + -0.08421627788812 * GRP_MntMeatProducts3 +
-0.15930642038763 * GRP_MntMeatProducts4 + 0.17420985773045 * GRP_MntWines2 + 0.21257483876123
* GRP_MntWines3 + -0.13198840161443 * GRP_MntWines4 + -0.24725403471973 *
GRP_NumCatalogPurchases3 + 0.28574938745998 * GRP_NumCatalogPurchases4 + -0.4878996299474 *
GRP_NumDistPurchases2 + 0.10139595392447 * GRP_NumDistPurchases3 + 0.05251891244468 *
GRP_NumDistPurchases4 + -0.18486003226007 * GRP_NumWebPurchases2 + 0.0263831646971 *
GRP_NumWebPurchases3 + 0.26495059708503 * GRP_NumWebPurchases4 + -0.16580006605432 *
GRP_RFMstat2 + -0.12537703875848 * GRP_RFMstat3 + -0.100652416931 * GRP_RFMstat4 +
-0.00913931308958 * GRP_RMntFrq2 + -0.15758837200974 * GRP_RMntFrq3 + -0.1198225533702 *
GRP_RMntFrq4 + 1.075902392162 * GRP_Recency2 + 0.44926983542925 * GRP_Recency3 +
-0.4970729472837 * GRP_Recency4 ;
219899    +   H13  = H13  +     0.00215688122529 * GRP_AcceptedCmp52
219900    +          +    -0.01427589791379 * GRP_Frq2  +    -0.13098496868755 * GRP_Frq3
219901    +          +    -0.30502313457201 * GRP_Frq4  +    -0.37973462663051 *
219902    +        GRP_Income2  +     0.00732780844057 * GRP_Income3
219903    +          +     0.53278328894406 * GRP_Income4  +     0.29819966041309 *
219904    +        GRP_Mnt2  +     0.25349727466129 * GRP_Mnt3  +     0.10579488290769 *
219905    +        GRP_Mnt4  +    -0.09288921771048 * GRP_MntFishProducts2
219906    +          +     0.02714802509094 * GRP_MntFishProducts3
219907    +          +     0.27119078554613 * GRP_MntFishProducts4
219908    +          +     0.19322428614339 * GRP_MntGoldProds2
219909    +          +     0.34778546410632 * GRP_MntGoldProds3
219910    +          +    -0.06570146779096 * GRP_MntGoldProds4
219911    +          +     0.44935275650977 * GRP_MntMeatProducts2
219912    +          +     0.00805794344265 * GRP_MntMeatProducts3
219913    +          +     0.02445782833023 * GRP_MntMeatProducts4
219914    +          +    -0.12082391878766 * GRP_MntWines2  +    -0.28739181733976 *
219915    +        GRP_MntWines3  +    -0.12417307544408 * GRP_MntWines4
219916    +          +     0.33901531634752 * GRP_NumCatalogPurchases3
219917    +          +     -0.0519425405532 * GRP_NumCatalogPurchases4
219918    +          +     0.03481806823908 * GRP_NumDistPurchases2
219919    +          +      0.0546202479864 * GRP_NumDistPurchases3
219920    +          +    -0.05240296080421 * GRP_NumDistPurchases4
219921    +          +     0.28307550964921 * GRP_NumWebPurchases2
219922    +          +     0.31503543231591 * GRP_NumWebPurchases3
219923    +          +     0.24817135719308 * GRP_NumWebPurchases4
219924    +          +    -0.05017370187238 * GRP_RFMstat2  +     0.08161239885611 *
219925    +        GRP_RFMstat3  +    -0.14085507706312 * GRP_RFMstat4
219926    +          +     0.11738278568714 * GRP_RMntFrq2  +     0.28471680928269 *
219927    +        GRP_RMntFrq3  +     0.46590886050772 * GRP_RMntFrq4
219928    +          +     -0.2318556486679 * GRP_Recency2  +    -0.37508297533514 *
219929    +        GRP_Recency3  +     0.05823801065489 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.00215688122529 * GRP_AcceptedCmp52 + -0.01427589791379 *
GRP_Frq2 + -0.13098496868755 * GRP_Frq3 + -0.30502313457201 * GRP_Frq4 + -0.37973462663051 *
GRP_Income2 + 0.00732780844057 * GRP_Income3 + 0.53278328894406 * GRP_Income4 +
0.29819966041309 * GRP_Mnt2 + 0.25349727466129 * GRP_Mnt3 + 0.10579488290769 * GRP_Mnt4 +
-0.09288921771048 * GRP_MntFishProducts2 + 0.02714802509094 * GRP_MntFishProducts3 +
0.27119078554613 * GRP_MntFishProducts4 + 0.19322428614339 * GRP_MntGoldProds2 +
0.34778546410632 * GRP_MntGoldProds3 + -0.06570146779096 * GRP_MntGoldProds4 +
0.44935275650977 * GRP_MntMeatProducts2 + 0.00805794344265 * GRP_MntMeatProducts3 +
0.02445782833023 * GRP_MntMeatProducts4 + -0.12082391878766 * GRP_MntWines2 +
-0.28739181733976 * GRP_MntWines3 + -0.12417307544408 * GRP_MntWines4 + 0.33901531634752 *
GRP_NumCatalogPurchases3 + -0.0519425405532 * GRP_NumCatalogPurchases4 + 0.03481806823908 *
GRP_NumDistPurchases2 + 0.0546202479864 * GRP_NumDistPurchases3 + -0.05240296080421 *
GRP_NumDistPurchases4 + 0.28307550964921 * GRP_NumWebPurchases2 + 0.31503543231591 *
GRP_NumWebPurchases3 + 0.24817135719308 * GRP_NumWebPurchases4 + -0.05017370187238 *
GRP_RFMstat2 + 0.08161239885611 * GRP_RFMstat3 + -0.14085507706312 * GRP_RFMstat4 +
0.11738278568714 * GRP_RMntFrq2 + 0.28471680928269 * GRP_RMntFrq3 + 0.46590886050772 *
GRP_RMntFrq4 + -0.2318556486679 * GRP_Recency2 + -0.37508297533514 * GRP_Recency3 +
0.05823801065489 * GRP_Recency4 ;
219930    +   H14  = H14  +      0.4684617848987 * GRP_AcceptedCmp52
219931    +          +    -0.10078363733095 * GRP_Frq2  +     0.12187262992305 * GRP_Frq3
219932    +          +     0.06615581853287 * GRP_Frq4  +    -0.37438533196327 *
219933    +        GRP_Income2  +    -0.54951239852844 * GRP_Income3
219934    +          +     0.42517426076684 * GRP_Income4  +     0.01160451666213 *
219935    +        GRP_Mnt2  +    -0.19046851266656 * GRP_Mnt3  +    -0.22599863084471 *
219936    +        GRP_Mnt4  +     0.02252915755857 * GRP_MntFishProducts2
219937    +          +    -0.08997232581072 * GRP_MntFishProducts3
219938    +          +    -0.05669599356928 * GRP_MntFishProducts4
219939    +          +      0.2199150131909 * GRP_MntGoldProds2
219940    +          +     0.05584571259838 * GRP_MntGoldProds3
219941    +          +    -0.13160142309505 * GRP_MntGoldProds4
219942    +          +      0.2539849640816 * GRP_MntMeatProducts2
219943    +          +     0.29448191059312 * GRP_MntMeatProducts3
219944    +          +    -0.33946200154351 * GRP_MntMeatProducts4
219945    +          +    -0.47231816370111 * GRP_MntWines2  +    -0.35916844796743 *
219946    +        GRP_MntWines3  +     0.15578356288597 * GRP_MntWines4
219947    +          +     0.35913140014848 * GRP_NumCatalogPurchases3
219948    +          +    -0.07798422379681 * GRP_NumCatalogPurchases4
219949    +          +     0.38206153529506 * GRP_NumDistPurchases2
219950    +          +     0.08642998303162 * GRP_NumDistPurchases3
219951    +          +    -0.00375635377885 * GRP_NumDistPurchases4
219952    +          +    -0.04352529411419 * GRP_NumWebPurchases2
219953    +          +    -0.17285172586868 * GRP_NumWebPurchases3
219954    +          +     0.23030028338396 * GRP_NumWebPurchases4
219955    +          +     0.16194254582104 * GRP_RFMstat2  +    -0.03413270353062 *
219956    +        GRP_RFMstat3  +    -0.32516629559317 * GRP_RFMstat4
219957    +          +    -0.16070809362515 * GRP_RMntFrq2  +    -0.17716471899416 *
219958    +        GRP_RMntFrq3  +     0.09335047904411 * GRP_RMntFrq4
219959    +          +    -0.92875393407697 * GRP_Recency2  +     0.16068827585896 *
219960    +        GRP_Recency3  +     0.41807637211453 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.4684617848987 * GRP_AcceptedCmp52 + -0.10078363733095 *
GRP_Frq2 + 0.12187262992305 * GRP_Frq3 + 0.06615581853287 * GRP_Frq4 + -0.37438533196327 *
GRP_Income2 + -0.54951239852844 * GRP_Income3 + 0.42517426076684 * GRP_Income4 +
0.01160451666213 * GRP_Mnt2 + -0.19046851266656 * GRP_Mnt3 + -0.22599863084471 * GRP_Mnt4 +
0.02252915755857 * GRP_MntFishProducts2 + -0.08997232581072 * GRP_MntFishProducts3 +
-0.05669599356928 * GRP_MntFishProducts4 + 0.2199150131909 * GRP_MntGoldProds2 +
0.05584571259838 * GRP_MntGoldProds3 + -0.13160142309505 * GRP_MntGoldProds4 + 0.2539849640816
* GRP_MntMeatProducts2 + 0.29448191059312 * GRP_MntMeatProducts3 + -0.33946200154351 *
GRP_MntMeatProducts4 + -0.47231816370111 * GRP_MntWines2 + -0.35916844796743 * GRP_MntWines3 +
0.15578356288597 * GRP_MntWines4 + 0.35913140014848 * GRP_NumCatalogPurchases3 +
-0.07798422379681 * GRP_NumCatalogPurchases4 + 0.38206153529506 * GRP_NumDistPurchases2 +
0.08642998303162 * GRP_NumDistPurchases3 + -0.00375635377885 * GRP_NumDistPurchases4 +
-0.04352529411419 * GRP_NumWebPurchases2 + -0.17285172586868 * GRP_NumWebPurchases3 +
0.23030028338396 * GRP_NumWebPurchases4 + 0.16194254582104 * GRP_RFMstat2 + -0.03413270353062
* GRP_RFMstat3 + -0.32516629559317 * GRP_RFMstat4 + -0.16070809362515 * GRP_RMntFrq2 +
-0.17716471899416 * GRP_RMntFrq3 + 0.09335047904411 * GRP_RMntFrq4 + -0.92875393407697 *
GRP_Recency2 + 0.16068827585896 * GRP_Recency3 + 0.41807637211453 * GRP_Recency4 ;
219961    +   H15  = H15  +    -0.78481953865912 * GRP_AcceptedCmp52
219962    +          +     0.05211963408638 * GRP_Frq2  +     0.24938737986681 * GRP_Frq3
219963    +          +    -0.07347952562846 * GRP_Frq4  +    -0.15741135518664 *
219964    +        GRP_Income2  +     0.01909378686442 * GRP_Income3
219965    +          +    -0.15898085757789 * GRP_Income4  +     0.09202012507046 *
219966    +        GRP_Mnt2  +    -0.39641738573024 * GRP_Mnt3  +     0.02885484069701 *
219967    +        GRP_Mnt4  +     0.29554161293423 * GRP_MntFishProducts2
219968    +          +    -0.04439366722112 * GRP_MntFishProducts3
219969    +          +    -0.22939355735301 * GRP_MntFishProducts4
219970    +          +    -0.00367144103801 * GRP_MntGoldProds2
219971    +          +      -0.033315128385 * GRP_MntGoldProds3
219972    +          +     0.10655545066126 * GRP_MntGoldProds4
219973    +          +     0.04927093675686 * GRP_MntMeatProducts2
219974    +          +    -0.20156680946257 * GRP_MntMeatProducts3
219975    +          +     0.29394273234417 * GRP_MntMeatProducts4
219976    +          +     0.27324472738231 * GRP_MntWines2  +       0.398830803883 *
219977    +        GRP_MntWines3  +    -0.16588038849208 * GRP_MntWines4
219978    +          +     -0.3438340194477 * GRP_NumCatalogPurchases3
219979    +          +    -0.37438590488645 * GRP_NumCatalogPurchases4
219980    +          +    -0.42285816542086 * GRP_NumDistPurchases2
219981    +          +     -0.1008716650505 * GRP_NumDistPurchases3
219982    +          +    -0.42793112700917 * GRP_NumDistPurchases4
219983    +          +    -0.06792665579186 * GRP_NumWebPurchases2
219984    +          +     0.37113277513001 * GRP_NumWebPurchases3
219985    +          +     0.05720653023952 * GRP_NumWebPurchases4
219986    +          +    -0.30997814005221 * GRP_RFMstat2  +     0.06219993861842 *
219987    +        GRP_RFMstat3  +    -0.22600753085668 * GRP_RFMstat4
219988    +          +    -0.31041957734532 * GRP_RMntFrq2  +     0.25053172234721 *
219989    +        GRP_RMntFrq3  +     0.15983683107051 * GRP_RMntFrq4
219990    +          +     0.52797823019932 * GRP_Recency2  +     0.11382874879823 *
219991    +        GRP_Recency3  +    -0.22166533511817 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.78481953865912 * GRP_AcceptedCmp52 + 0.05211963408638 *
GRP_Frq2 + 0.24938737986681 * GRP_Frq3 + -0.07347952562846 * GRP_Frq4 + -0.15741135518664 *
GRP_Income2 + 0.01909378686442 * GRP_Income3 + -0.15898085757789 * GRP_Income4 +
0.09202012507046 * GRP_Mnt2 + -0.39641738573024 * GRP_Mnt3 + 0.02885484069701 * GRP_Mnt4 +
0.29554161293423 * GRP_MntFishProducts2 + -0.04439366722112 * GRP_MntFishProducts3 +
-0.22939355735301 * GRP_MntFishProducts4 + -0.00367144103801 * GRP_MntGoldProds2 +
-0.033315128385 * GRP_MntGoldProds3 + 0.10655545066126 * GRP_MntGoldProds4 + 0.04927093675686
* GRP_MntMeatProducts2 + -0.20156680946257 * GRP_MntMeatProducts3 + 0.29394273234417 *
GRP_MntMeatProducts4 + 0.27324472738231 * GRP_MntWines2 + 0.398830803883 * GRP_MntWines3 +
-0.16588038849208 * GRP_MntWines4 + -0.3438340194477 * GRP_NumCatalogPurchases3 +
-0.37438590488645 * GRP_NumCatalogPurchases4 + -0.42285816542086 * GRP_NumDistPurchases2 +
-0.1008716650505 * GRP_NumDistPurchases3 + -0.42793112700917 * GRP_NumDistPurchases4 +
-0.06792665579186 * GRP_NumWebPurchases2 + 0.37113277513001 * GRP_NumWebPurchases3 +
0.05720653023952 * GRP_NumWebPurchases4 + -0.30997814005221 * GRP_RFMstat2 + 0.06219993861842
* GRP_RFMstat3 + -0.22600753085668 * GRP_RFMstat4 + -0.31041957734532 * GRP_RMntFrq2 +
0.25053172234721 * GRP_RMntFrq3 + 0.15983683107051 * GRP_RMntFrq4 + 0.52797823019932 *
GRP_Recency2 + 0.11382874879823 * GRP_Recency3 + -0.22166533511817 * GRP_Recency4 ;
219992    +   H16  = H16  +      0.7107136456569 * GRP_AcceptedCmp52
219993    +          +     -0.4751898387651 * GRP_Frq2  +    -0.11277060686411 * GRP_Frq3
219994    +          +     0.15821547082299 * GRP_Frq4  +    -0.45945049231995 *
219995    +        GRP_Income2  +    -0.18413512635176 * GRP_Income3
219996    +          +     0.39594738835509 * GRP_Income4  +    -0.15472205523822 *
219997    +        GRP_Mnt2  +     0.02844181224363 * GRP_Mnt3  +     0.45435843401555 *
219998    +        GRP_Mnt4  +    -0.29220588593813 * GRP_MntFishProducts2
219999    +          +     0.04340555393469 * GRP_MntFishProducts3
220000    +          +    -0.20048219926361 * GRP_MntFishProducts4
220001    +          +     0.16101452165456 * GRP_MntGoldProds2
220002    +          +    -0.04467647211336 * GRP_MntGoldProds3
220003    +          +     0.32142013598241 * GRP_MntGoldProds4
220004    +          +     0.29741565154233 * GRP_MntMeatProducts2
220005    +          +    -0.00264678222241 * GRP_MntMeatProducts3
220006    +          +    -0.11596499325048 * GRP_MntMeatProducts4
220007    +          +    -0.29849043995136 * GRP_MntWines2  +     0.14756452272338 *
220008    +        GRP_MntWines3  +     0.48995265672675 * GRP_MntWines4
220009    +          +     0.80854583627117 * GRP_NumCatalogPurchases3
220010    +          +     0.14001888431357 * GRP_NumCatalogPurchases4
220011    +          +     0.36107050137299 * GRP_NumDistPurchases2
220012    +          +    -0.10375572120121 * GRP_NumDistPurchases3
220013    +          +     0.10557004956787 * GRP_NumDistPurchases4
220014    +          +     0.04608069099876 * GRP_NumWebPurchases2
220015    +          +     0.15561947954396 * GRP_NumWebPurchases3
220016    +          +    -0.01081470092004 * GRP_NumWebPurchases4
220017    +          +     0.21994454623245 * GRP_RFMstat2  +    -0.08858421895818 *
220018    +        GRP_RFMstat3  +    -0.13608887793525 * GRP_RFMstat4
220019    +          +     0.07482010458977 * GRP_RMntFrq2  +    -0.11874760292742 *
220020    +        GRP_RMntFrq3  +     0.56887215594366 * GRP_RMntFrq4
220021    +          +    -0.13548983954455 * GRP_Recency2  +    -0.25036935235639 *
220022    +        GRP_Recency3  +     -0.0282277663071 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.7107136456569 * GRP_AcceptedCmp52 + -0.4751898387651 *
GRP_Frq2 + -0.11277060686411 * GRP_Frq3 + 0.15821547082299 * GRP_Frq4 + -0.45945049231995 *
GRP_Income2 + -0.18413512635176 * GRP_Income3 + 0.39594738835509 * GRP_Income4 +
-0.15472205523822 * GRP_Mnt2 + 0.02844181224363 * GRP_Mnt3 + 0.45435843401555 * GRP_Mnt4 +
-0.29220588593813 * GRP_MntFishProducts2 + 0.04340555393469 * GRP_MntFishProducts3 +
-0.20048219926361 * GRP_MntFishProducts4 + 0.16101452165456 * GRP_MntGoldProds2 +
-0.04467647211336 * GRP_MntGoldProds3 + 0.32142013598241 * GRP_MntGoldProds4 +
0.29741565154233 * GRP_MntMeatProducts2 + -0.00264678222241 * GRP_MntMeatProducts3 +
-0.11596499325048 * GRP_MntMeatProducts4 + -0.29849043995136 * GRP_MntWines2 +
0.14756452272338 * GRP_MntWines3 + 0.48995265672675 * GRP_MntWines4 + 0.80854583627117 *
GRP_NumCatalogPurchases3 + 0.14001888431357 * GRP_NumCatalogPurchases4 + 0.36107050137299 *
GRP_NumDistPurchases2 + -0.10375572120121 * GRP_NumDistPurchases3 + 0.10557004956787 *
GRP_NumDistPurchases4 + 0.04608069099876 * GRP_NumWebPurchases2 + 0.15561947954396 *
GRP_NumWebPurchases3 + -0.01081470092004 * GRP_NumWebPurchases4 + 0.21994454623245 *
GRP_RFMstat2 + -0.08858421895818 * GRP_RFMstat3 + -0.13608887793525 * GRP_RFMstat4 +
0.07482010458977 * GRP_RMntFrq2 + -0.11874760292742 * GRP_RMntFrq3 + 0.56887215594366 *
GRP_RMntFrq4 + -0.13548983954455 * GRP_Recency2 + -0.25036935235639 * GRP_Recency3 +
-0.0282277663071 * GRP_Recency4 ;
220023    +   H17  = H17  +    -0.06745892596619 * GRP_AcceptedCmp52
220024    +          +    -0.09506194345469 * GRP_Frq2  +    -0.29707644715885 * GRP_Frq3
220025    +          +    -0.06874693052001 * GRP_Frq4  +    -0.08949373241741 *
220026    +        GRP_Income2  +     0.02965579603049 * GRP_Income3
220027    +          +    -0.02192829727213 * GRP_Income4  +     0.30180973300088 *
220028    +        GRP_Mnt2  +    -0.10648502526616 * GRP_Mnt3  +     0.07588844839465 *
220029    +        GRP_Mnt4  +    -0.30524623655199 * GRP_MntFishProducts2
220030    +          +    -0.20032703571491 * GRP_MntFishProducts3
220031    +          +    -0.08348811352746 * GRP_MntFishProducts4
220032    +          +    -0.00744131870881 * GRP_MntGoldProds2
220033    +          +    -0.27347309859096 * GRP_MntGoldProds3
220034    +          +    -0.04458870469416 * GRP_MntGoldProds4
220035    +          +     0.17538261434498 * GRP_MntMeatProducts2
220036    +          +    -0.08059547298843 * GRP_MntMeatProducts3
220037    +          +     0.03113249898233 * GRP_MntMeatProducts4
220038    +          +    -0.23690909413276 * GRP_MntWines2  +    -0.01511980231776 *
220039    +        GRP_MntWines3  +     -0.2825327824317 * GRP_MntWines4
220040    +          +     0.13919784888607 * GRP_NumCatalogPurchases3
220041    +          +    -0.10871281978714 * GRP_NumCatalogPurchases4
220042    +          +     0.20540014620209 * GRP_NumDistPurchases2
220043    +          +     0.17744784873298 * GRP_NumDistPurchases3
220044    +          +      -0.003486430833 * GRP_NumDistPurchases4
220045    +          +    -0.04863967797645 * GRP_NumWebPurchases2
220046    +          +     0.07245829152192 * GRP_NumWebPurchases3
220047    +          +    -0.27395606297099 * GRP_NumWebPurchases4
220048    +          +    -0.14496279180087 * GRP_RFMstat2  +     0.28224463929838 *
220049    +        GRP_RFMstat3  +     0.26720059295202 * GRP_RFMstat4
220050    +          +    -0.07120881723264 * GRP_RMntFrq2  +     0.16350065828319 *
220051    +        GRP_RMntFrq3  +      0.3117297070285 * GRP_RMntFrq4
220052    +          +    -0.52884474877094 * GRP_Recency2  +    -0.17937099376746 *
220053    +        GRP_Recency3  +     -0.0157357289132 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.06745892596619 * GRP_AcceptedCmp52 + -0.09506194345469 *
GRP_Frq2 + -0.29707644715885 * GRP_Frq3 + -0.06874693052001 * GRP_Frq4 + -0.08949373241741 *
GRP_Income2 + 0.02965579603049 * GRP_Income3 + -0.02192829727213 * GRP_Income4 +
0.30180973300088 * GRP_Mnt2 + -0.10648502526616 * GRP_Mnt3 + 0.07588844839465 * GRP_Mnt4 +
-0.30524623655199 * GRP_MntFishProducts2 + -0.20032703571491 * GRP_MntFishProducts3 +
-0.08348811352746 * GRP_MntFishProducts4 + -0.00744131870881 * GRP_MntGoldProds2 +
-0.27347309859096 * GRP_MntGoldProds3 + -0.04458870469416 * GRP_MntGoldProds4 +
0.17538261434498 * GRP_MntMeatProducts2 + -0.08059547298843 * GRP_MntMeatProducts3 +
0.03113249898233 * GRP_MntMeatProducts4 + -0.23690909413276 * GRP_MntWines2 +
-0.01511980231776 * GRP_MntWines3 + -0.2825327824317 * GRP_MntWines4 + 0.13919784888607 *
GRP_NumCatalogPurchases3 + -0.10871281978714 * GRP_NumCatalogPurchases4 + 0.20540014620209 *
GRP_NumDistPurchases2 + 0.17744784873298 * GRP_NumDistPurchases3 + -0.003486430833 *
GRP_NumDistPurchases4 + -0.04863967797645 * GRP_NumWebPurchases2 + 0.07245829152192 *
GRP_NumWebPurchases3 + -0.27395606297099 * GRP_NumWebPurchases4 + -0.14496279180087 *
GRP_RFMstat2 + 0.28224463929838 * GRP_RFMstat3 + 0.26720059295202 * GRP_RFMstat4 +
-0.07120881723264 * GRP_RMntFrq2 + 0.16350065828319 * GRP_RMntFrq3 + 0.3117297070285 *
GRP_RMntFrq4 + -0.52884474877094 * GRP_Recency2 + -0.17937099376746 * GRP_Recency3 +
-0.0157357289132 * GRP_Recency4 ;
220054    +   H11  =    -0.76467628027618 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.76467628027618 + H11 ;
220055    +   H12  =    -0.03405517571825 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.03405517571825 + H12 ;
220056    +   H13  =    -0.32845676351839 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.32845676351839 + H13 ;
220057    +   H14  =     0.08379615404181 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.08379615404181 + H14 ;
220058    +   H15  =    -0.77228291932436 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.77228291932436 + H15 ;
220059    +   H16  =    -0.77356855332279 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.77356855332279 + H16 ;
220060    +   H17  =     0.45067845230796 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.45067845230796 + H17 ;
220061    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
220062    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
220063    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
220064    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
220065    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
220066    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
220067    +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
220068    +END;
MPRINT(EM_DIAGRAM):   END;
220069    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
220070    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
220071    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
220072    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
220073    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
220074    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
220075    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
220076    +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
220077    +END;
MPRINT(EM_DIAGRAM):   END;
220078    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
220079    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
220080    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
220081    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
220082    +   P_DepVar1  =    -0.15999450347654 * H11  +     1.35667407296837 * H12
220083    +          +    -0.71419530867579 * H13  +     -1.0947746264744 * H14
220084    +          +     0.98315214007209 * H15  +    -1.32163386678746 * H16
220085    +          +    -0.29329090231091 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.15999450347654 * H11 + 1.35667407296837 * H12 +
-0.71419530867579 * H13 + -1.0947746264744 * H14 + 0.98315214007209 * H15 + -1.32163386678746
* H16 + -0.29329090231091 * H17 ;
220086    +   P_DepVar1  =    -1.66210022161101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66210022161101 + P_DepVar1 ;
220087    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
220088    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
220089    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
220090    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
220091    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
220092    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
220093    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
220094    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
220095    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
220096    +END;
MPRINT(EM_DIAGRAM):   END;
220097    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
220098    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
220099    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
220100    +END;
MPRINT(EM_DIAGRAM):   END;
220101    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
220102    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
220103    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
220104    +END;
MPRINT(EM_DIAGRAM):   END;
220105    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
220106    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
220107    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
220108    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
220109    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
220110    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
220111    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
220112    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
220113    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
220114    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
220115    +END;
MPRINT(EM_DIAGRAM):   END;
220116    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
220117    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
220118    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
220119    +drop
220120    +H11
220121    +H12
220122    +H13
220123    +H14
220124    +H15
220125    +H16
220126    +H17
220127    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
220128    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
220129     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
220130     quit;
220131     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
220132     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
220133     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
220134     retain ID 2 Node "Neural18";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural18";
220135     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
220136     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2256 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2256 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220137     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
220138     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220139     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2256 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2256 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220140     proc sort data=EMWS8.Neural18_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural18_variableset out=_temp2(keep=NAME CREATOR);
220141     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220142     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.NEURAL18_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
220143     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
220144     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
220145     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
220146     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220147     proc contents data=EMWS8.Neural18_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural18_train out=_meta(keep=NAME) noprint;
220148     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
220149     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
220150     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220151     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220152     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
220153     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
220154     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220155     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220156     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
220157     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
220157   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 985 rows and 5 columns.
 
220158     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
220159     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
220160     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 985 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 985 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220161     filename _pref
220161   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
220162     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
220163     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
220164    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
220165    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
220166    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
220167    +
220168    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220169    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
220170    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220171    +LABEL GRP_AcceptedCmp5 =
220172    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
220173    +
220174    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
220175    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
220176    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
220177    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
220178    +end;
MPRINT(EM_DIAGRAM):   end;
220179    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
220180    +if (_UFORMAT eq '0'
220181    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
220182    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
220183    +end;
MPRINT(EM_DIAGRAM):   end;
220184    +else
220185    +if (_UFORMAT eq '1'
220186    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
220187    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
220188    +end;
MPRINT(EM_DIAGRAM):   end;
220189    +else do;
MPRINT(EM_DIAGRAM):   else do;
220190    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
220191    +end;
MPRINT(EM_DIAGRAM):   end;
220192    +end;
MPRINT(EM_DIAGRAM):   end;
220193    +
220194    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220195    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
220196    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220197    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
220198    +
220199    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
220200    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
220201    +end;
MPRINT(EM_DIAGRAM):   end;
220202    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
220203    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
220204    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
220205    +end;
MPRINT(EM_DIAGRAM):   end;
220206    +else
220207    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
220208    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
220209    +end;
MPRINT(EM_DIAGRAM):   end;
220210    +else
220211    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
220212    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
220213    +end;
MPRINT(EM_DIAGRAM):   end;
220214    +else
220215    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
220216    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
220217    +end;
MPRINT(EM_DIAGRAM):   end;
220218    +end;
MPRINT(EM_DIAGRAM):   end;
220219    +
220220    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220221    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
220222    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220223    +LABEL GRP_Income =
220224    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
220225    +
220226    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
220227    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
220228    +end;
MPRINT(EM_DIAGRAM):   end;
220229    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
220230    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
220231    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
220232    +end;
MPRINT(EM_DIAGRAM):   end;
220233    +else
220234    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
220235    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
220236    +end;
MPRINT(EM_DIAGRAM):   end;
220237    +else
220238    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
220239    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
220240    +end;
MPRINT(EM_DIAGRAM):   end;
220241    +else
220242    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
220243    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
220244    +end;
MPRINT(EM_DIAGRAM):   end;
220245    +end;
MPRINT(EM_DIAGRAM):   end;
220246    +
220247    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220248    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
220249    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220250    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
220251    +
220252    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
220253    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
220254    +end;
MPRINT(EM_DIAGRAM):   end;
220255    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
220256    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
220257    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
220258    +end;
MPRINT(EM_DIAGRAM):   end;
220259    +else
220260    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
220261    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
220262    +end;
MPRINT(EM_DIAGRAM):   end;
220263    +else
220264    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
220265    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
220266    +end;
MPRINT(EM_DIAGRAM):   end;
220267    +else
220268    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
220269    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
220270    +end;
MPRINT(EM_DIAGRAM):   end;
220271    +end;
MPRINT(EM_DIAGRAM):   end;
220272    +
220273    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220274    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
220275    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220276    +LABEL GRP_MntFishProducts =
220277    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
220278    +
220279    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
220280    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
220281    +end;
MPRINT(EM_DIAGRAM):   end;
220282    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
220283    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
220284    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
220285    +end;
MPRINT(EM_DIAGRAM):   end;
220286    +else
220287    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
220288    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
220289    +end;
MPRINT(EM_DIAGRAM):   end;
220290    +else
220291    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
220292    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
220293    +end;
MPRINT(EM_DIAGRAM):   end;
220294    +else
220295    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
220296    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
220297    +end;
MPRINT(EM_DIAGRAM):   end;
220298    +end;
MPRINT(EM_DIAGRAM):   end;
220299    +
220300    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220301    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
220302    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220303    +LABEL GRP_MntGoldProds =
220304    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
220305    +
220306    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
220307    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
220308    +end;
MPRINT(EM_DIAGRAM):   end;
220309    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
220310    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
220311    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
220312    +end;
MPRINT(EM_DIAGRAM):   end;
220313    +else
220314    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
220315    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
220316    +end;
MPRINT(EM_DIAGRAM):   end;
220317    +else
220318    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
220319    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
220320    +end;
MPRINT(EM_DIAGRAM):   end;
220321    +else
220322    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
220323    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
220324    +end;
MPRINT(EM_DIAGRAM):   end;
220325    +end;
MPRINT(EM_DIAGRAM):   end;
220326    +
220327    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220328    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
220329    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220330    +LABEL GRP_MntMeatProducts =
220331    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
220332    +
220333    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
220334    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
220335    +end;
MPRINT(EM_DIAGRAM):   end;
220336    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
220337    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
220338    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
220339    +end;
MPRINT(EM_DIAGRAM):   end;
220340    +else
220341    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
220342    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
220343    +end;
MPRINT(EM_DIAGRAM):   end;
220344    +else
220345    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
220346    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
220347    +end;
MPRINT(EM_DIAGRAM):   end;
220348    +else
220349    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
220350    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
220351    +end;
MPRINT(EM_DIAGRAM):   end;
220352    +end;
MPRINT(EM_DIAGRAM):   end;
220353    +
220354    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220355    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
220356    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220357    +LABEL GRP_MntWines =
220358    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
220359    +
220360    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
220361    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
220362    +end;
MPRINT(EM_DIAGRAM):   end;
220363    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
220364    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
220365    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
220366    +end;
MPRINT(EM_DIAGRAM):   end;
220367    +else
220368    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
220369    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
220370    +end;
MPRINT(EM_DIAGRAM):   end;
220371    +else
220372    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
220373    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
220374    +end;
MPRINT(EM_DIAGRAM):   end;
220375    +else
220376    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
220377    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
220378    +end;
MPRINT(EM_DIAGRAM):   end;
220379    +end;
MPRINT(EM_DIAGRAM):   end;
220380    +
220381    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220382    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
220383    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220384    +LABEL GRP_NumCatalogPurchases =
220385    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
220386    +
220387    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
220388    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
220389    +end;
MPRINT(EM_DIAGRAM):   end;
220390    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
220391    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
220392    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
220393    +end;
MPRINT(EM_DIAGRAM):   end;
220394    +else
220395    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
220396    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
220397    +end;
MPRINT(EM_DIAGRAM):   end;
220398    +else
220399    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
220400    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
220401    +end;
MPRINT(EM_DIAGRAM):   end;
220402    +else
220403    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
220404    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
220405    +end;
MPRINT(EM_DIAGRAM):   end;
220406    +end;
MPRINT(EM_DIAGRAM):   end;
220407    +
220408    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220409    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
220410    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220411    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
220412    +
220413    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
220414    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
220415    +end;
MPRINT(EM_DIAGRAM):   end;
220416    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
220417    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
220418    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
220419    +end;
MPRINT(EM_DIAGRAM):   end;
220420    +else
220421    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
220422    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
220423    +end;
MPRINT(EM_DIAGRAM):   end;
220424    +else
220425    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
220426    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
220427    +end;
MPRINT(EM_DIAGRAM):   end;
220428    +else
220429    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
220430    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
220431    +end;
MPRINT(EM_DIAGRAM):   end;
220432    +end;
MPRINT(EM_DIAGRAM):   end;
220433    +
220434    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220435    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
220436    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220437    +LABEL GRP_NumWebPurchases =
220438    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
220439    +
220440    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
220441    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
220442    +end;
MPRINT(EM_DIAGRAM):   end;
220443    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
220444    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
220445    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
220446    +end;
MPRINT(EM_DIAGRAM):   end;
220447    +else
220448    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
220449    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
220450    +end;
MPRINT(EM_DIAGRAM):   end;
220451    +else
220452    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
220453    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
220454    +end;
MPRINT(EM_DIAGRAM):   end;
220455    +else
220456    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
220457    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
220458    +end;
MPRINT(EM_DIAGRAM):   end;
220459    +end;
MPRINT(EM_DIAGRAM):   end;
220460    +
220461    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220462    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
220463    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220464    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
220465    +
220466    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
220467    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
220468    +end;
MPRINT(EM_DIAGRAM):   end;
220469    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
220470    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
220471    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
220472    +end;
MPRINT(EM_DIAGRAM):   end;
220473    +else
220474    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
220475    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
220476    +end;
MPRINT(EM_DIAGRAM):   end;
220477    +else
220478    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
220479    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
220480    +end;
MPRINT(EM_DIAGRAM):   end;
220481    +else
220482    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
220483    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
220484    +end;
MPRINT(EM_DIAGRAM):   end;
220485    +end;
MPRINT(EM_DIAGRAM):   end;
220486    +
220487    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220488    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
220489    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220490    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
220491    +
220492    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
220493    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
220494    +end;
MPRINT(EM_DIAGRAM):   end;
220495    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
220496    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
220497    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
220498    +end;
MPRINT(EM_DIAGRAM):   end;
220499    +else
220500    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
220501    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
220502    +end;
MPRINT(EM_DIAGRAM):   end;
220503    +else
220504    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
220505    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
220506    +end;
MPRINT(EM_DIAGRAM):   end;
220507    +else
220508    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
220509    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
220510    +end;
MPRINT(EM_DIAGRAM):   end;
220511    +end;
MPRINT(EM_DIAGRAM):   end;
220512    +
220513    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220514    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
220515    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220516    +LABEL GRP_Recency =
220517    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
220518    +
220519    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
220520    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
220521    +end;
MPRINT(EM_DIAGRAM):   end;
220522    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
220523    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
220524    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
220525    +end;
MPRINT(EM_DIAGRAM):   end;
220526    +else
220527    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
220528    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
220529    +end;
MPRINT(EM_DIAGRAM):   end;
220530    +else
220531    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
220532    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
220533    +end;
MPRINT(EM_DIAGRAM):   end;
220534    +else
220535    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
220536    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
220537    +end;
MPRINT(EM_DIAGRAM):   end;
220538    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
220539     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
220540     quit;
220541     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
220542     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
220543     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
220544     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
220545     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
220546     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220547     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
220548     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220549     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220550     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
220551     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220552     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
220553     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
220554     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
220555     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
220556     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220557     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
220558     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
220559     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
220560     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220561     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220562     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
220563     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
220564     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220565     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220566     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
220567     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
220567   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.
 
220568     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220569     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
220570     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 1000 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220571     filename _pref
220571   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
220572     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
220573     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
220574    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220575    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
220576    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
220577    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
220578    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
220579    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
220580     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
220581     quit;
220582     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
220583     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
220584     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
220585     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
220586     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
220587     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220588     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
220589     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220590     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220591     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
220592     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220593     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220594     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
220595     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
220596     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
220597     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
220598     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
220599     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
220600     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
220601     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220602     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
220603     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
220604     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
220605     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220606     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220607     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
220608     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
220608   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
220609     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220610     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
220611     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 1004 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
220612     filename _pref
220612   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
220613     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
220614     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
220615    +
220616    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
220617    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
220617   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
220618    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
220619    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
220620    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
220621    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
220622    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
220623     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
220624     quit;
220625     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
220626     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
220627     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
220628     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
220629     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
220630     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
220631     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
220632     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220633     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220634     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
220635     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220636     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220637     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
220638     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
220639     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
220640     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
220641     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
220642     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220643     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
220644     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220645     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220646     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
220647     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
220648     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220649     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220650     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
220651     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
220651   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
220652     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220653     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
220654     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 1043 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220655     filename _pref
220655   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
220656     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
220657     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
220658    +
220659    +
220660    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
220661    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
220662    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
220663    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
220664    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
220665    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
220666    +
220667    +
220668    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
220669    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
220670    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
220671    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
220672    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
220673    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
220674    +
220675    +
220676    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
220677    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
220678    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
220679    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
220680    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
220681    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
220682    +
220683    +
220684    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
220685    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
220686    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
220687    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
220688    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
220689    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
220690    +
220691    +
220692    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
220693    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
220694    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
220695    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
220696    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
220697    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
220698    +
220699    +
220700    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
220701    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
220702    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
220703    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
220704    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
220705    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
220706    +
220707    +
220708    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
220709    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
220710    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
220711    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
220712    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
220713    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
220714    +
220715    +
220716    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
220717    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
220718    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
220719    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
220720    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
220721    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
220722    +if
220723    +_FILTERNORM1 not in ( '.')
220724    + and
220725    +_FILTERNORM2 not in ( '.')
220726    + and
220727    +_FILTERNORM3 not in ( '.')
220728    + and
220729    +_FILTERNORM4 not in ( '.')
220730    + and
220731    +_FILTERNORM5 not in ( '.')
220732    + and
220733    +_FILTERNORM6 not in ( '.')
220734    + and
220735    +_FILTERNORM7 not in ( ' ')
220736    + and
220737    +_FILTERNORM8 not in ( ' ')
220738    +and
220739    +( Dt_Customer ne .)
220740    +and ( Income ne . and (Income<=107000))
220741    +and ( Kidhome ne .)
220742    +and ( MntFishProducts ne .)
220743    +and ( MntFruits ne .)
220744    +and ( MntGoldProds ne .)
220745    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
220746    +and ( MntSweetProducts ne .)
220747    +and ( MntWines ne .)
220748    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
220749    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
220750    +and ( NumStorePurchases ne .)
220751    +and ( NumWebPurchases ne .)
220752    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
220753    +and ( Recency ne .)
220754    +and ( Teenhome ne .)
220755    +and ( Year_Birth ne .)
220756    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
220757    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
220758    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
220759    +end;
MPRINT(EM_DIAGRAM):   end;
220760    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
220761    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
220762     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
220763     quit;
220764     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
220765     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
220766     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
220767     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
220768     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
220769     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220770     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
220771     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220772     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
220773     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
220774     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220775     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220776     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
220777     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
220778     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
220779     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220780     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
220781     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
220782     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
220783     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220784     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220785     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
220786     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
220787     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
220788     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
220789     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
220790     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
220790   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
220791     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220792     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
220793     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 1109 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220794     %macro varDept(fcmpdata=,id=);
220795     %global nobs&id scoreFlag&id;
220796     %let scoreFlag&id = 0;
220797     %if &id=1 or ^&fcmpStart %then %do;
220798     proc sort data=&fcmpdata out=_temp&id nodupkey;
220799     by NAME;
220800     where id=&id and LHS in( %let j=1;
220801     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
220802     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
220803     "&var" %let j = %eval(&j+1);
220804     %end;
220805     );
220806     run;
220807     %let dsid = %sysfunc(open(_temp&id));
220808     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
220809     %let dsid = %sysfunc(close(&dsid));
220810     %if &&nobs&id %then %do;
220811     %let scoreFlag&id = 1;
220812     %let fcmpStart = 1;
220813     %end;
220814     %else %let fcmpStart = 0;
220815     %end;
220816     %else %do;
220817     proc sort data=&fcmpdata out=_tempid;
220818     where id=&id;
220819     by LHS;
220820     run;
220821     %let dsid = %sysfunc(open(_tempid));
220822     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
220823     %let dsid = %sysfunc(close(&dsid));
220824     %if ^&&nobs&id %then %do;
220825     proc datasets lib=work nolist;
220826     delete _tempid;
220827     run;
220828     quit;
220829     %end;
220830     %else %do;
220831     data _tempAll;
220832     set %let j=%eval(&id-1);
220833     %do x=1 %to &j;
220834     %if &&nobs&x %then %do;
220835     _temp&x %end;
220836     %end;
220837     ;
220838     run;
220839     proc sql;
220840     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
220840   ! work._tempid p2 where p.name=p2.lhs;
220841     quit;
220842     data _temp&id;
220843     set _temp&id;
220844     where LHS ne '' and NAME ne '' and Node ne '';
220845     run;
220846     proc datasets lib=work nolist;
220847     delete _tempAll;
220848     run;
220849     %let dsid = %sysfunc(open(_temp&id));
220850     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
220851     %let dsid = %sysfunc(close(&dsid));
220852     %if ^&&nobs&id %then %do;
220853     proc datasets lib=work nolist;
220854     delete _temp&id;
220855     run;
220856     quit;
220857     %end;
220858     %else %do;
220859     %let scoreFlag&id = 1;
220860     data _temp&id;
220861     set _temp&id;
220862     where LHS ne NAME and node ne '';
220863     run;
220864     %let dsid = %sysfunc(open(_temp&id));
220865     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
220866     %let dsid = %sysfunc(close(&dsid));
220867     %if ^&&nobs&id %then %do;
220868     proc datasets lib=work nolist;
220869     delete _temp&id;
220870     run;
220871     quit;
220872     %end;
220873     %else %do;
220874     proc sort data=_temp&id nodupkey;
220875     by LHS NAME;
220876     run;
220877     %end;
220878     %end;
220879     %end;
220880     %end;
220881     %mend varDept;
220882     %macro optCode(outdata=fcmpdata);
220883     %global fcmpStart;
220884     %let fcmpStart = 0;
220885     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
220886     %let NumNodes=9;
220887     %do k=1 %to &NumNodes;
220888     %vardept(fcmpdata=&outdata, id=&k);
220889     %end;
220890     %mend optCode;
220891     %optcode(outData=EMWS8.Ensmbl18_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 49 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
220892     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
220893     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
220894     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
220895     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220896     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
220897     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
220898     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
220899     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220900     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
220901     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
220901   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
220902     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
220903     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
220904     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
220905     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220906     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
220907     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
220908     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
220909     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220910     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
220911     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
220912     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
220913     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220914     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
220915     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
220915   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.
 
220916     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
220917     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
220918     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
220919     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
220920     filename _pref
220920   ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMPUBLISHSCORE.sas";
220921     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
220922     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg7\EMPUBLISHSCORE.sas.
220923    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
220924    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
220925    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
220926    +
220927    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
220928    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
220929    +
220930    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
220931    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
220932    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
220933    +array REG7DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG7DRF [2] $12 _temporary_ ('1' '0' );
220934    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
220935    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
220936    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
220937    +ARRAY REG7DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG7DRU[2] _TEMPORARY_ (1 0);
220938    +
220939    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
220940    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
220941    +
220942    +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
220943    +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
220944    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
220945    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
220946    +end;
MPRINT(EM_DIAGRAM):   end;
220947    +
220948    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
220949    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
220950    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
220951    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
220952    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
220953    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
220954    +end;
MPRINT(EM_DIAGRAM):   end;
220955    +else do;
MPRINT(EM_DIAGRAM):   else do;
220956    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
220957    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
220958    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
220959    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
220960    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
220961    +   end;
MPRINT(EM_DIAGRAM):   end;
220962    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
220963    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
220964    +   end;
MPRINT(EM_DIAGRAM):   end;
220965    +   else do;
MPRINT(EM_DIAGRAM):   else do;
220966    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
220967    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
220968    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
220969    +   end;
MPRINT(EM_DIAGRAM):   end;
220970    +end;
MPRINT(EM_DIAGRAM):   end;
220971    +
220972    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
220973    +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
220974    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
220975    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
220976    +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
220977    +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
220978    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
220979    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
220980    +end;
MPRINT(EM_DIAGRAM):   end;
220981    +else do;
MPRINT(EM_DIAGRAM):   else do;
220982    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
220983    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
220984    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
220985    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
220986    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
220987    +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
220988    +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
220989    +   end;
MPRINT(EM_DIAGRAM):   end;
220990    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
220991    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
220992    +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
220993    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
220994    +   end;
MPRINT(EM_DIAGRAM):   end;
220995    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
220996    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
220997    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
220998    +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
220999    +   end;
MPRINT(EM_DIAGRAM):   end;
221000    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
221001    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
221002    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
221003    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
221004    +   end;
MPRINT(EM_DIAGRAM):   end;
221005    +   else do;
MPRINT(EM_DIAGRAM):   else do;
221006    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
221007    +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
221008    +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
221009    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
221010    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
221011    +   end;
MPRINT(EM_DIAGRAM):   end;
221012    +end;
MPRINT(EM_DIAGRAM):   end;
221013    +
221014    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
221015    +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
221016    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
221017    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
221018    +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
221019    +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
221020    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
221021    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
221022    +end;
MPRINT(EM_DIAGRAM):   end;
221023    +else do;
MPRINT(EM_DIAGRAM):   else do;
221024    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
221025    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
221026    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
221027    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
221028    +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
221029    +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
221030    +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
221031    +   end;
MPRINT(EM_DIAGRAM):   end;
221032    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
221033    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
221034    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
221035    +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
221036    +   end;
MPRINT(EM_DIAGRAM):   end;
221037    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
221038    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
221039    +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
221040    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
221041    +   end;
MPRINT(EM_DIAGRAM):   end;
221042    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
221043    +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
221044    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
221045    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
221046    +   end;
MPRINT(EM_DIAGRAM):   end;
221047    +   else do;
MPRINT(EM_DIAGRAM):   else do;
221048    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
221049    +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
221050    +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
221051    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
221052    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
221053    +   end;
MPRINT(EM_DIAGRAM):   end;
221054    +end;
MPRINT(EM_DIAGRAM):   end;
221055    +
221056    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
221057    +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
221058    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
221059    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
221060    +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
221061    +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
221062    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
221063    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
221064    +end;
MPRINT(EM_DIAGRAM):   end;
221065    +else do;
MPRINT(EM_DIAGRAM):   else do;
221066    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
221067    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
221068    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
221069    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
221070    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
221071    +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
221072    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
221073    +   end;
MPRINT(EM_DIAGRAM):   end;
221074    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
221075    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
221076    +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
221077    +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
221078    +   end;
MPRINT(EM_DIAGRAM):   end;
221079    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
221080    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
221081    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
221082    +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
221083    +   end;
MPRINT(EM_DIAGRAM):   end;
221084    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
221085    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
221086    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
221087    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
221088    +   end;
MPRINT(EM_DIAGRAM):   end;
221089    +   else do;
MPRINT(EM_DIAGRAM):   else do;
221090    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
221091    +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
221092    +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
221093    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
221094    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
221095    +   end;
MPRINT(EM_DIAGRAM):   end;
221096    +end;
MPRINT(EM_DIAGRAM):   end;
221097    +
221098    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
221099    +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
221100    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
221101    +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
221102    +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
221103    +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
221104    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
221105    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
221106    +end;
MPRINT(EM_DIAGRAM):   end;
221107    +else do;
MPRINT(EM_DIAGRAM):   else do;
221108    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
221109    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
221110    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
221111    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
221112    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
221113    +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
221114    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
221115    +   end;
MPRINT(EM_DIAGRAM):   end;
221116    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
221117    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
221118    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
221119    +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
221120    +   end;
MPRINT(EM_DIAGRAM):   end;
221121    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
221122    +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
221123    +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
221124    +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
221125    +   end;
MPRINT(EM_DIAGRAM):   end;
221126    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
221127    +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
221128    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
221129    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
221130    +   end;
MPRINT(EM_DIAGRAM):   end;
221131    +   else do;
MPRINT(EM_DIAGRAM):   else do;
221132    +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
221133    +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
221134    +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
221135    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
221136    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
221137    +   end;
MPRINT(EM_DIAGRAM):   end;
221138    +end;
MPRINT(EM_DIAGRAM):   end;
221139    +
221140    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
221141    +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
221142    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
221143    +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
221144    +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
221145    +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
221146    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
221147    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
221148    +end;
MPRINT(EM_DIAGRAM):   end;
221149    +else do;
MPRINT(EM_DIAGRAM):   else do;
221150    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
221151    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
221152    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
221153    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
221154    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
221155    +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
221156    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
221157    +   end;
MPRINT(EM_DIAGRAM):   end;
221158    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
221159    +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
221160    +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
221161    +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
221162    +   end;
MPRINT(EM_DIAGRAM):   end;
221163    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
221164    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
221165    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
221166    +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
221167    +   end;
MPRINT(EM_DIAGRAM):   end;
221168    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
221169    +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
221170    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
221171    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
221172    +   end;
MPRINT(EM_DIAGRAM):   end;
221173    +   else do;
MPRINT(EM_DIAGRAM):   else do;
221174    +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
221175    +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
221176    +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
221177    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
221178    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
221179    +   end;
MPRINT(EM_DIAGRAM):   end;
221180    +end;
MPRINT(EM_DIAGRAM):   end;
221181    +
221182    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
221183    +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
221184    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
221185    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
221186    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
221187    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
221188    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
221189    +end;
MPRINT(EM_DIAGRAM):   end;
221190    +else do;
MPRINT(EM_DIAGRAM):   else do;
221191    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
221192    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
221193    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
221194    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
221195    +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
221196    +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
221197    +   end;
MPRINT(EM_DIAGRAM):   end;
221198    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
221199    +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
221200    +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
221201    +   end;
MPRINT(EM_DIAGRAM):   end;
221202    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
221203    +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
221204    +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
221205    +   end;
MPRINT(EM_DIAGRAM):   end;
221206    +   else do;
MPRINT(EM_DIAGRAM):   else do;
221207    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
221208    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
221209    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
221210    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
221211    +   end;
MPRINT(EM_DIAGRAM):   end;
221212    +end;
MPRINT(EM_DIAGRAM):   end;
221213    +
221214    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
221215    +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
221216    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
221217    +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
221218    +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
221219    +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
221220    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
221221    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
221222    +end;
MPRINT(EM_DIAGRAM):   end;
221223    +else do;
MPRINT(EM_DIAGRAM):   else do;
221224    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
221225    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
221226    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
221227    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
221228    +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
221229    +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
221230    +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
221231    +   end;
MPRINT(EM_DIAGRAM):   end;
221232    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
221233    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
221234    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
221235    +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
221236    +   end;
MPRINT(EM_DIAGRAM):   end;
221237    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
221238    +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
221239    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
221240    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
221241    +   end;
MPRINT(EM_DIAGRAM):   end;
221242    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
221243    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
221244    +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
221245    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
221246    +   end;
MPRINT(EM_DIAGRAM):   end;
221247    +   else do;
MPRINT(EM_DIAGRAM):   else do;
221248    +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
221249    +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
221250    +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
221251    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
221252    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
221253    +   end;
MPRINT(EM_DIAGRAM):   end;
221254    +end;
MPRINT(EM_DIAGRAM):   end;
221255    +
221256    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
221257    +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
221258    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
221259    +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
221260    +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
221261    +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
221262    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
221263    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
221264    +end;
MPRINT(EM_DIAGRAM):   end;
221265    +else do;
MPRINT(EM_DIAGRAM):   else do;
221266    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
221267    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
221268    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
221269    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
221270    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
221271    +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
221272    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
221273    +   end;
MPRINT(EM_DIAGRAM):   end;
221274    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
221275    +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
221276    +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
221277    +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
221278    +   end;
MPRINT(EM_DIAGRAM):   end;
221279    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
221280    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
221281    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
221282    +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
221283    +   end;
MPRINT(EM_DIAGRAM):   end;
221284    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
221285    +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
221286    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
221287    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
221288    +   end;
MPRINT(EM_DIAGRAM):   end;
221289    +   else do;
MPRINT(EM_DIAGRAM):   else do;
221290    +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
221291    +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
221292    +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
221293    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
221294    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
221295    +   end;
MPRINT(EM_DIAGRAM):   end;
221296    +end;
MPRINT(EM_DIAGRAM):   end;
221297    +
221298    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
221299    +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
221300    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
221301    +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
221302    +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
221303    +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
221304    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
221305    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
221306    +end;
MPRINT(EM_DIAGRAM):   end;
221307    +else do;
MPRINT(EM_DIAGRAM):   else do;
221308    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
221309    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
221310    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
221311    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
221312    +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
221313    +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
221314    +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
221315    +   end;
MPRINT(EM_DIAGRAM):   end;
221316    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
221317    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
221318    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
221319    +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
221320    +   end;
MPRINT(EM_DIAGRAM):   end;
221321    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
221322    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
221323    +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
221324    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
221325    +   end;
MPRINT(EM_DIAGRAM):   end;
221326    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
221327    +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
221328    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
221329    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
221330    +   end;
MPRINT(EM_DIAGRAM):   end;
221331    +   else do;
MPRINT(EM_DIAGRAM):   else do;
221332    +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
221333    +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
221334    +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
221335    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
221336    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
221337    +   end;
MPRINT(EM_DIAGRAM):   end;
221338    +end;
MPRINT(EM_DIAGRAM):   end;
221339    +
221340    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
221341    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
221342    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
221343    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
221344    +   goto REG7DR1;
MPRINT(EM_DIAGRAM):   goto REG7DR1;
221345    +end;
MPRINT(EM_DIAGRAM):   end;
221346    +
221347    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
221348    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
221349    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
221350    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
221351    +
221352    +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
221353    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
221354    +_LP0 = _LP0 + (    -0.5862337869734) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.5862337869734) * _TEMP * _1_0;
221355    +
221356    +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
221357    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
221358    +_LP0 = _LP0 + (     1.0565693238421) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.0565693238421) * _TEMP * _2_0;
221359    +_LP0 = _LP0 + (     0.0911336121088) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0911336121088) * _TEMP * _2_1;
221360    +_LP0 = _LP0 + (   -0.37448220273968) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.37448220273968) * _TEMP * _2_2;
221361    +
221362    +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
221363    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
221364    +_LP0 = _LP0 + (    0.51658584340625) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51658584340625) * _TEMP * _3_0;
221365    +_LP0 = _LP0 + (    0.48505772489262) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.48505772489262) * _TEMP * _3_1;
221366    +_LP0 = _LP0 + (   -0.50854630566525) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.50854630566525) * _TEMP * _3_2;
221367    +
221368    +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
221369    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
221370    +_LP0 = _LP0 + (    0.38994498659965) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38994498659965) * _TEMP * _5_0;
221371    +_LP0 = _LP0 + (    0.03146325606998) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03146325606998) * _TEMP * _5_1;
221372    +_LP0 = _LP0 + (   -0.05372169204837) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.05372169204837) * _TEMP * _5_2;
221373    +
221374    +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
221375    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
221376    +_LP0 = _LP0 + (   -0.79733877870259) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.79733877870259) * _TEMP * _7_0;
221377    +_LP0 = _LP0 + (   -0.15003183676105) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.15003183676105) * _TEMP * _7_1;
221378    +_LP0 = _LP0 + (    0.31191597751128) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.31191597751128) * _TEMP * _7_2;
221379    +
221380    +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
221381    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
221382    +_LP0 = _LP0 + (    0.53434964580952) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53434964580952) * _TEMP * _8_0;
221383    +_LP0 = _LP0 + (    0.22167667253067) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.22167667253067) * _TEMP * _8_1;
221384    +_LP0 = _LP0 + (     -0.305489910536) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.305489910536) * _TEMP * _8_2;
221385    +
221386    +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
221387    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
221388    +_LP0 = _LP0 + (     -0.629899271763) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.629899271763) * _TEMP * _9_0;
221389    +_LP0 = _LP0 + (    0.03240844395355) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03240844395355) * _TEMP * _9_1;
221390    +
221391    +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
221392    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
221393    +_LP0 = _LP0 + (   -1.42622019893988) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.42622019893988) * _TEMP * _10_0;
221394    +_LP0 = _LP0 + (    0.05466498093201) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.05466498093201) * _TEMP * _10_1;
221395    +_LP0 = _LP0 + (    0.25182489000571) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25182489000571) * _TEMP * _10_2;
221396    +
221397    +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
221398    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
221399    +_LP0 = _LP0 + (   -0.14979245852204) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.14979245852204) * _TEMP * _13_0;
221400    +_LP0 = _LP0 + (     0.0056028143187) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0056028143187) * _TEMP * _13_1;
221401    +_LP0 = _LP0 + (   -0.23315930182624) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.23315930182624) * _TEMP * _13_2;
221402    +
221403    +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
221404    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
221405    +_LP0 = _LP0 + (    1.06974976023651) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.06974976023651) * _TEMP * _14_0;
221406    +_LP0 = _LP0 + (    0.29139327664531) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.29139327664531) * _TEMP * _14_1;
221407    +_LP0 = _LP0 + (   -0.34742570667526) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.34742570667526) * _TEMP * _14_2;
221408    +
221409    +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
221410    +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
221411    +_LP0 = _LP0 + (    0.01045707390649 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01045707390649 * _TEMP);
221412    +
221413    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
221414    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
221415    +_P0 = probnorm((   -21.5603180840073) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -21.5603180840073) + _LP0);
221416    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
221417    +
221418    +REG7DR1:
221419    +
221420    +
221421    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG7DR1: *** Posterior Probabilities and Predicted Level;
221422    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
221423    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
221424    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
221425    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
221426    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
221427    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
221428    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
221429    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
221430    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
221431    +end;
MPRINT(EM_DIAGRAM):   end;
221432    +I_DepVar = REG7DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG7DRF[_IY];
221433    +U_DepVar = REG7DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG7DRU[_IY];
221434    +
221435    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
221436    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
221437    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
221438     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
221439     quit;
221440     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
221441     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
221442     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
221443     retain ID 2 Node "Reg7";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg7";
221444     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
221445     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 779 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 779 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
221446     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
221447     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
221448     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 779 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 779 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
221449     proc sort data=EMWS8.Reg7_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg7_variableset out=_temp2(keep=NAME CREATOR);
221450     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
221451     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.REG7_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
221452     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
221453     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
221454     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
221455     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
221456     proc contents data=EMWS8.Reg7_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg7_train out=_meta(keep=NAME) noprint;
221457     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
221458     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
221459     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
221460     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
221461     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
221462     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
221463     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
221464     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
221465     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
221466     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
221466   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 413 rows and 5 columns.
 
221467     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
221468     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
221469     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 413 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 413 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
221470     filename _pref
221470   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
221471     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
221472     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
221473    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
221474    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
221475    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
221476    +
221477    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221478    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
221479    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221480    +LABEL GRP_AcceptedCmp5 =
221481    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
221482    +
221483    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
221484    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
221485    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
221486    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
221487    +end;
MPRINT(EM_DIAGRAM):   end;
221488    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
221489    +if (_UFORMAT eq '0'
221490    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
221491    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
221492    +end;
MPRINT(EM_DIAGRAM):   end;
221493    +else
221494    +if (_UFORMAT eq '1'
221495    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
221496    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
221497    +end;
MPRINT(EM_DIAGRAM):   end;
221498    +else do;
MPRINT(EM_DIAGRAM):   else do;
221499    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
221500    +end;
MPRINT(EM_DIAGRAM):   end;
221501    +end;
MPRINT(EM_DIAGRAM):   end;
221502    +
221503    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221504    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
221505    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221506    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
221507    +
221508    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
221509    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
221510    +end;
MPRINT(EM_DIAGRAM):   end;
221511    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
221512    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
221513    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
221514    +end;
MPRINT(EM_DIAGRAM):   end;
221515    +else
221516    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
221517    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
221518    +end;
MPRINT(EM_DIAGRAM):   end;
221519    +else
221520    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
221521    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
221522    +end;
MPRINT(EM_DIAGRAM):   end;
221523    +else
221524    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
221525    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
221526    +end;
MPRINT(EM_DIAGRAM):   end;
221527    +end;
MPRINT(EM_DIAGRAM):   end;
221528    +
221529    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221530    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
221531    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221532    +LABEL GRP_Income =
221533    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
221534    +
221535    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
221536    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
221537    +end;
MPRINT(EM_DIAGRAM):   end;
221538    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
221539    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
221540    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
221541    +end;
MPRINT(EM_DIAGRAM):   end;
221542    +else
221543    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
221544    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
221545    +end;
MPRINT(EM_DIAGRAM):   end;
221546    +else
221547    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
221548    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
221549    +end;
MPRINT(EM_DIAGRAM):   end;
221550    +else
221551    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
221552    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
221553    +end;
MPRINT(EM_DIAGRAM):   end;
221554    +end;
MPRINT(EM_DIAGRAM):   end;
221555    +
221556    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221557    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
221558    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221559    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
221560    +
221561    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
221562    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
221563    +end;
MPRINT(EM_DIAGRAM):   end;
221564    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
221565    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
221566    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
221567    +end;
MPRINT(EM_DIAGRAM):   end;
221568    +else
221569    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
221570    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
221571    +end;
MPRINT(EM_DIAGRAM):   end;
221572    +else
221573    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
221574    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
221575    +end;
MPRINT(EM_DIAGRAM):   end;
221576    +else
221577    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
221578    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
221579    +end;
MPRINT(EM_DIAGRAM):   end;
221580    +end;
MPRINT(EM_DIAGRAM):   end;
221581    +
221582    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221583    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
221584    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221585    +LABEL GRP_MntFishProducts =
221586    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
221587    +
221588    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
221589    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
221590    +end;
MPRINT(EM_DIAGRAM):   end;
221591    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
221592    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
221593    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
221594    +end;
MPRINT(EM_DIAGRAM):   end;
221595    +else
221596    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
221597    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
221598    +end;
MPRINT(EM_DIAGRAM):   end;
221599    +else
221600    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
221601    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
221602    +end;
MPRINT(EM_DIAGRAM):   end;
221603    +else
221604    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
221605    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
221606    +end;
MPRINT(EM_DIAGRAM):   end;
221607    +end;
MPRINT(EM_DIAGRAM):   end;
221608    +
221609    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221610    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
221611    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221612    +LABEL GRP_MntGoldProds =
221613    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
221614    +
221615    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
221616    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
221617    +end;
MPRINT(EM_DIAGRAM):   end;
221618    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
221619    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
221620    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
221621    +end;
MPRINT(EM_DIAGRAM):   end;
221622    +else
221623    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
221624    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
221625    +end;
MPRINT(EM_DIAGRAM):   end;
221626    +else
221627    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
221628    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
221629    +end;
MPRINT(EM_DIAGRAM):   end;
221630    +else
221631    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
221632    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
221633    +end;
MPRINT(EM_DIAGRAM):   end;
221634    +end;
MPRINT(EM_DIAGRAM):   end;
221635    +
221636    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221637    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
221638    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221639    +LABEL GRP_MntMeatProducts =
221640    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
221641    +
221642    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
221643    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
221644    +end;
MPRINT(EM_DIAGRAM):   end;
221645    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
221646    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
221647    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
221648    +end;
MPRINT(EM_DIAGRAM):   end;
221649    +else
221650    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
221651    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
221652    +end;
MPRINT(EM_DIAGRAM):   end;
221653    +else
221654    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
221655    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
221656    +end;
MPRINT(EM_DIAGRAM):   end;
221657    +else
221658    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
221659    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
221660    +end;
MPRINT(EM_DIAGRAM):   end;
221661    +end;
MPRINT(EM_DIAGRAM):   end;
221662    +
221663    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221664    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
221665    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221666    +LABEL GRP_MntWines =
221667    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
221668    +
221669    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
221670    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
221671    +end;
MPRINT(EM_DIAGRAM):   end;
221672    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
221673    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
221674    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
221675    +end;
MPRINT(EM_DIAGRAM):   end;
221676    +else
221677    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
221678    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
221679    +end;
MPRINT(EM_DIAGRAM):   end;
221680    +else
221681    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
221682    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
221683    +end;
MPRINT(EM_DIAGRAM):   end;
221684    +else
221685    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
221686    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
221687    +end;
MPRINT(EM_DIAGRAM):   end;
221688    +end;
MPRINT(EM_DIAGRAM):   end;
221689    +
221690    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221691    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
221692    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221693    +LABEL GRP_NumCatalogPurchases =
221694    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
221695    +
221696    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
221697    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
221698    +end;
MPRINT(EM_DIAGRAM):   end;
221699    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
221700    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
221701    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
221702    +end;
MPRINT(EM_DIAGRAM):   end;
221703    +else
221704    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
221705    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
221706    +end;
MPRINT(EM_DIAGRAM):   end;
221707    +else
221708    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
221709    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
221710    +end;
MPRINT(EM_DIAGRAM):   end;
221711    +else
221712    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
221713    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
221714    +end;
MPRINT(EM_DIAGRAM):   end;
221715    +end;
MPRINT(EM_DIAGRAM):   end;
221716    +
221717    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221718    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
221719    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221720    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
221721    +
221722    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
221723    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
221724    +end;
MPRINT(EM_DIAGRAM):   end;
221725    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
221726    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
221727    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
221728    +end;
MPRINT(EM_DIAGRAM):   end;
221729    +else
221730    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
221731    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
221732    +end;
MPRINT(EM_DIAGRAM):   end;
221733    +else
221734    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
221735    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
221736    +end;
MPRINT(EM_DIAGRAM):   end;
221737    +else
221738    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
221739    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
221740    +end;
MPRINT(EM_DIAGRAM):   end;
221741    +end;
MPRINT(EM_DIAGRAM):   end;
221742    +
221743    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221744    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
221745    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221746    +LABEL GRP_NumWebPurchases =
221747    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
221748    +
221749    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
221750    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
221751    +end;
MPRINT(EM_DIAGRAM):   end;
221752    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
221753    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
221754    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
221755    +end;
MPRINT(EM_DIAGRAM):   end;
221756    +else
221757    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
221758    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
221759    +end;
MPRINT(EM_DIAGRAM):   end;
221760    +else
221761    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
221762    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
221763    +end;
MPRINT(EM_DIAGRAM):   end;
221764    +else
221765    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
221766    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
221767    +end;
MPRINT(EM_DIAGRAM):   end;
221768    +end;
MPRINT(EM_DIAGRAM):   end;
221769    +
221770    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221771    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
221772    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221773    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
221774    +
221775    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
221776    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
221777    +end;
MPRINT(EM_DIAGRAM):   end;
221778    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
221779    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
221780    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
221781    +end;
MPRINT(EM_DIAGRAM):   end;
221782    +else
221783    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
221784    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
221785    +end;
MPRINT(EM_DIAGRAM):   end;
221786    +else
221787    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
221788    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
221789    +end;
MPRINT(EM_DIAGRAM):   end;
221790    +else
221791    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
221792    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
221793    +end;
MPRINT(EM_DIAGRAM):   end;
221794    +end;
MPRINT(EM_DIAGRAM):   end;
221795    +
221796    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221797    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
221798    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221799    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
221800    +
221801    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
221802    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
221803    +end;
MPRINT(EM_DIAGRAM):   end;
221804    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
221805    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
221806    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
221807    +end;
MPRINT(EM_DIAGRAM):   end;
221808    +else
221809    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
221810    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
221811    +end;
MPRINT(EM_DIAGRAM):   end;
221812    +else
221813    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
221814    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
221815    +end;
MPRINT(EM_DIAGRAM):   end;
221816    +else
221817    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
221818    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
221819    +end;
MPRINT(EM_DIAGRAM):   end;
221820    +end;
MPRINT(EM_DIAGRAM):   end;
221821    +
221822    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221823    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
221824    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221825    +LABEL GRP_Recency =
221826    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
221827    +
221828    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
221829    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
221830    +end;
MPRINT(EM_DIAGRAM):   end;
221831    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
221832    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
221833    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
221834    +end;
MPRINT(EM_DIAGRAM):   end;
221835    +else
221836    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
221837    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
221838    +end;
MPRINT(EM_DIAGRAM):   end;
221839    +else
221840    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
221841    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
221842    +end;
MPRINT(EM_DIAGRAM):   end;
221843    +else
221844    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
221845    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
221846    +end;
MPRINT(EM_DIAGRAM):   end;
221847    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
221848     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
221849     quit;
221850     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
221851     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
221852     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
221853     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
221854     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
221855     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
221856     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
221857     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
221858     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
221859     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
221860     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
221861     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
221862     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
221863     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
221864     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
221865     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
221866     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
221867     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
221868     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
221869     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
221870     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
221871     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
221872     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
221873     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
221874     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
221875     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
221876     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
221876   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.
 
221877     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
221878     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
221879     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 428 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
221880     filename _pref
221880   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
221881     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
221882     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
221883    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221884    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
221885    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
221886    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
221887    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
221888    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
221889     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
221890     quit;
221891     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
221892     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
221893     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
221894     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
221895     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
221896     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
221897     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
221898     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
221899     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
221900     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
221901     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
221902     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
221903     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
221904     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
221905     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
221906     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
221907     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
221908     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
221909     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
221910     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
221911     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
221912     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
221913     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
221914     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
221915     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.28 seconds
      cpu time            0.01 seconds
 
 
221916     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
221917     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
221917   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
221918     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
221919     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
221920     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 432 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
221921     filename _pref
221921   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
221922     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
221923     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
221924    +
221925    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
221926    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
221926   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
221927    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
221928    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
221929    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
221930    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
221931    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
221932     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
221933     quit;
221934     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
221935     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
221936     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
221937     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
221938     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
221939     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
221940     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
221941     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
221942     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
221943     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
221944     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
221945     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
221946     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
221947     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
221948     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
221949     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
221950     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
221951     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
221952     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
221953     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
221954     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
221955     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
221956     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
221957     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
221958     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
221959     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
221960     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
221960   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
221961     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
221962     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
221963     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 471 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
221964     filename _pref
221964   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
221965     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
221966     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
221967    +
221968    +
221969    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
221970    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
221971    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
221972    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
221973    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
221974    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
221975    +
221976    +
221977    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
221978    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
221979    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
221980    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
221981    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
221982    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
221983    +
221984    +
221985    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
221986    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
221987    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
221988    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
221989    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
221990    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
221991    +
221992    +
221993    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
221994    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
221995    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
221996    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
221997    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
221998    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
221999    +
222000    +
222001    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
222002    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
222003    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
222004    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
222005    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
222006    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
222007    +
222008    +
222009    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
222010    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
222011    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
222012    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
222013    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
222014    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
222015    +
222016    +
222017    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
222018    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
222019    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
222020    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
222021    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
222022    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
222023    +
222024    +
222025    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
222026    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
222027    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
222028    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
222029    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
222030    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
222031    +if
222032    +_FILTERNORM1 not in ( '.')
222033    + and
222034    +_FILTERNORM2 not in ( '.')
222035    + and
222036    +_FILTERNORM3 not in ( '.')
222037    + and
222038    +_FILTERNORM4 not in ( '.')
222039    + and
222040    +_FILTERNORM5 not in ( '.')
222041    + and
222042    +_FILTERNORM6 not in ( '.')
222043    + and
222044    +_FILTERNORM7 not in ( ' ')
222045    + and
222046    +_FILTERNORM8 not in ( ' ')
222047    +and
222048    +( Dt_Customer ne .)
222049    +and ( Income ne . and (Income<=107000))
222050    +and ( Kidhome ne .)
222051    +and ( MntFishProducts ne .)
222052    +and ( MntFruits ne .)
222053    +and ( MntGoldProds ne .)
222054    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
222055    +and ( MntSweetProducts ne .)
222056    +and ( MntWines ne .)
222057    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
222058    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
222059    +and ( NumStorePurchases ne .)
222060    +and ( NumWebPurchases ne .)
222061    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
222062    +and ( Recency ne .)
222063    +and ( Teenhome ne .)
222064    +and ( Year_Birth ne .)
222065    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
222066    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
222067    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
222068    +end;
MPRINT(EM_DIAGRAM):   end;
222069    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
222070    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
222071     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
222072     quit;
222073     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
222074     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
222075     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
222076     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
222077     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
222078     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
222079     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
222080     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
222081     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
222082     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
222083     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
222084     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
222085     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
222086     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
222087     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
222088     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
222089     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
222090     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
222091     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
222092     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
222093     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
222094     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
222095     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
222096     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
222097     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
222098     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
222099     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
222099   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
222100     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
222101     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
222102     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 537 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
222103     %macro varDept(fcmpdata=,id=);
222104     %global nobs&id scoreFlag&id;
222105     %let scoreFlag&id = 0;
222106     %if &id=1 or ^&fcmpStart %then %do;
222107     proc sort data=&fcmpdata out=_temp&id nodupkey;
222108     by NAME;
222109     where id=&id and LHS in( %let j=1;
222110     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
222111     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
222112     "&var" %let j = %eval(&j+1);
222113     %end;
222114     );
222115     run;
222116     %let dsid = %sysfunc(open(_temp&id));
222117     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
222118     %let dsid = %sysfunc(close(&dsid));
222119     %if &&nobs&id %then %do;
222120     %let scoreFlag&id = 1;
222121     %let fcmpStart = 1;
222122     %end;
222123     %else %let fcmpStart = 0;
222124     %end;
222125     %else %do;
222126     proc sort data=&fcmpdata out=_tempid;
222127     where id=&id;
222128     by LHS;
222129     run;
222130     %let dsid = %sysfunc(open(_tempid));
222131     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
222132     %let dsid = %sysfunc(close(&dsid));
222133     %if ^&&nobs&id %then %do;
222134     proc datasets lib=work nolist;
222135     delete _tempid;
222136     run;
222137     quit;
222138     %end;
222139     %else %do;
222140     data _tempAll;
222141     set %let j=%eval(&id-1);
222142     %do x=1 %to &j;
222143     %if &&nobs&x %then %do;
222144     _temp&x %end;
222145     %end;
222146     ;
222147     run;
222148     proc sql;
222149     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
222149   ! work._tempid p2 where p.name=p2.lhs;
222150     quit;
222151     data _temp&id;
222152     set _temp&id;
222153     where LHS ne '' and NAME ne '' and Node ne '';
222154     run;
222155     proc datasets lib=work nolist;
222156     delete _tempAll;
222157     run;
222158     %let dsid = %sysfunc(open(_temp&id));
222159     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
222160     %let dsid = %sysfunc(close(&dsid));
222161     %if ^&&nobs&id %then %do;
222162     proc datasets lib=work nolist;
222163     delete _temp&id;
222164     run;
222165     quit;
222166     %end;
222167     %else %do;
222168     %let scoreFlag&id = 1;
222169     data _temp&id;
222170     set _temp&id;
222171     where LHS ne NAME and node ne '';
222172     run;
222173     %let dsid = %sysfunc(open(_temp&id));
222174     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
222175     %let dsid = %sysfunc(close(&dsid));
222176     %if ^&&nobs&id %then %do;
222177     proc datasets lib=work nolist;
222178     delete _temp&id;
222179     run;
222180     quit;
222181     %end;
222182     %else %do;
222183     proc sort data=_temp&id nodupkey;
222184     by LHS NAME;
222185     run;
222186     %end;
222187     %end;
222188     %end;
222189     %end;
222190     %mend varDept;
222191     %macro optCode(outdata=fcmpdata);
222192     %global fcmpStart;
222193     %let fcmpStart = 0;
222194     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
222195     %let NumNodes=9;
222196     %do k=1 %to &NumNodes;
222197     %vardept(fcmpdata=&outdata, id=&k);
222198     %end;
222199     %mend optCode;
222200     %optcode(outData=EMWS8.Ensmbl18_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 33 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 11 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 10 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 23 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
222201     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
222202     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
222203     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
222204     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
222205     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
222206     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
222207     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
222208     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
222209     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
222210     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
222210   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
222211     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
222212     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
222213     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
222214     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
222215     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
222216     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
222217     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
222218     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
222219     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
222220     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
222221     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
222222     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
222223     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
222224     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
222224   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 10 rows and 3 columns.
 
222225     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
222226     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
222227     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
222228     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 10 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 11 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
222229     filename _pref
222229   ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMPUBLISHSCORE.sas";
222230     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
222231     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg3\EMPUBLISHSCORE.sas.
222232    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
222233    +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
222234    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
222235    +
222236    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
222237    +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
222238    +
222239    +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
222240    +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
222241    +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
222242    +array REG3DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG3DRF [2] $12 _temporary_ ('1' '0' );
222243    +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
222244    +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
222245    +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
222246    +ARRAY REG3DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG3DRU[2] _TEMPORARY_ (1 0);
222247    +
222248    +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
222249    +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
222250    +
222251    +*** Check Year_Birth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Year_Birth for missing values ;
222252    +if missing( Year_Birth ) then do;
MPRINT(EM_DIAGRAM):   if missing( Year_Birth ) then do;
222253    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
222254    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
222255    +end;
MPRINT(EM_DIAGRAM):   end;
222256    +
222257    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
222258    +drop _1_0 ;
MPRINT(EM_DIAGRAM):   drop _1_0 ;
222259    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
222260    +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
222261    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
222262    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
222263    +end;
MPRINT(EM_DIAGRAM):   end;
222264    +else do;
MPRINT(EM_DIAGRAM):   else do;
222265    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
222266    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
222267    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
222268    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
222269    +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
222270    +   end;
MPRINT(EM_DIAGRAM):   end;
222271    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
222272    +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
222273    +   end;
MPRINT(EM_DIAGRAM):   end;
222274    +   else do;
MPRINT(EM_DIAGRAM):   else do;
222275    +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
222276    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
222277    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
222278    +   end;
MPRINT(EM_DIAGRAM):   end;
222279    +end;
MPRINT(EM_DIAGRAM):   end;
222280    +
222281    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
222282    +drop _2_0 _2_1 _2_2 ;
MPRINT(EM_DIAGRAM):   drop _2_0 _2_1 _2_2 ;
222283    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
222284    +   _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
222285    +   _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
222286    +   _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
222287    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
222288    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
222289    +end;
MPRINT(EM_DIAGRAM):   end;
222290    +else do;
MPRINT(EM_DIAGRAM):   else do;
222291    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
222292    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
222293    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
222294    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
222295    +      _2_0 = -1;
MPRINT(EM_DIAGRAM):   _2_0 = -1;
222296    +      _2_1 = -1;
MPRINT(EM_DIAGRAM):   _2_1 = -1;
222297    +      _2_2 = -1;
MPRINT(EM_DIAGRAM):   _2_2 = -1;
222298    +   end;
MPRINT(EM_DIAGRAM):   end;
222299    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
222300    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
222301    +      _2_1 = 1;
MPRINT(EM_DIAGRAM):   _2_1 = 1;
222302    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
222303    +   end;
MPRINT(EM_DIAGRAM):   end;
222304    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
222305    +      _2_0 = 0;
MPRINT(EM_DIAGRAM):   _2_0 = 0;
222306    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
222307    +      _2_2 = 1;
MPRINT(EM_DIAGRAM):   _2_2 = 1;
222308    +   end;
MPRINT(EM_DIAGRAM):   end;
222309    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
222310    +      _2_0 = 1;
MPRINT(EM_DIAGRAM):   _2_0 = 1;
222311    +      _2_1 = 0;
MPRINT(EM_DIAGRAM):   _2_1 = 0;
222312    +      _2_2 = 0;
MPRINT(EM_DIAGRAM):   _2_2 = 0;
222313    +   end;
MPRINT(EM_DIAGRAM):   end;
222314    +   else do;
MPRINT(EM_DIAGRAM):   else do;
222315    +      _2_0 = .;
MPRINT(EM_DIAGRAM):   _2_0 = .;
222316    +      _2_1 = .;
MPRINT(EM_DIAGRAM):   _2_1 = .;
222317    +      _2_2 = .;
MPRINT(EM_DIAGRAM):   _2_2 = .;
222318    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
222319    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
222320    +   end;
MPRINT(EM_DIAGRAM):   end;
222321    +end;
MPRINT(EM_DIAGRAM):   end;
222322    +
222323    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
222324    +drop _3_0 _3_1 _3_2 ;
MPRINT(EM_DIAGRAM):   drop _3_0 _3_1 _3_2 ;
222325    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
222326    +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
222327    +   _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
222328    +   _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
222329    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
222330    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
222331    +end;
MPRINT(EM_DIAGRAM):   end;
222332    +else do;
MPRINT(EM_DIAGRAM):   else do;
222333    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
222334    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
222335    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
222336    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
222337    +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
222338    +      _3_1 = -1;
MPRINT(EM_DIAGRAM):   _3_1 = -1;
222339    +      _3_2 = -1;
MPRINT(EM_DIAGRAM):   _3_2 = -1;
222340    +   end;
MPRINT(EM_DIAGRAM):   end;
222341    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
222342    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
222343    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
222344    +      _3_2 = 1;
MPRINT(EM_DIAGRAM):   _3_2 = 1;
222345    +   end;
MPRINT(EM_DIAGRAM):   end;
222346    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
222347    +      _3_0 = 0;
MPRINT(EM_DIAGRAM):   _3_0 = 0;
222348    +      _3_1 = 1;
MPRINT(EM_DIAGRAM):   _3_1 = 1;
222349    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
222350    +   end;
MPRINT(EM_DIAGRAM):   end;
222351    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
222352    +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
222353    +      _3_1 = 0;
MPRINT(EM_DIAGRAM):   _3_1 = 0;
222354    +      _3_2 = 0;
MPRINT(EM_DIAGRAM):   _3_2 = 0;
222355    +   end;
MPRINT(EM_DIAGRAM):   end;
222356    +   else do;
MPRINT(EM_DIAGRAM):   else do;
222357    +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
222358    +      _3_1 = .;
MPRINT(EM_DIAGRAM):   _3_1 = .;
222359    +      _3_2 = .;
MPRINT(EM_DIAGRAM):   _3_2 = .;
222360    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
222361    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
222362    +   end;
MPRINT(EM_DIAGRAM):   end;
222363    +end;
MPRINT(EM_DIAGRAM):   end;
222364    +
222365    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
222366    +drop _5_0 _5_1 _5_2 ;
MPRINT(EM_DIAGRAM):   drop _5_0 _5_1 _5_2 ;
222367    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
222368    +   _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
222369    +   _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
222370    +   _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
222371    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
222372    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
222373    +end;
The SAS System
 
MPRINT(EM_DIAGRAM):   end;
222374    +else do;
MPRINT(EM_DIAGRAM):   else do;
222375    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
222376    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
222377    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
222378    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
222379    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
222380    +      _5_1 = 1;
MPRINT(EM_DIAGRAM):   _5_1 = 1;
222381    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
222382    +   end;
MPRINT(EM_DIAGRAM):   end;
222383    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
222384    +      _5_0 = -1;
MPRINT(EM_DIAGRAM):   _5_0 = -1;
222385    +      _5_1 = -1;
MPRINT(EM_DIAGRAM):   _5_1 = -1;
222386    +      _5_2 = -1;
MPRINT(EM_DIAGRAM):   _5_2 = -1;
222387    +   end;
MPRINT(EM_DIAGRAM):   end;
222388    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
222389    +      _5_0 = 0;
MPRINT(EM_DIAGRAM):   _5_0 = 0;
222390    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
222391    +      _5_2 = 1;
MPRINT(EM_DIAGRAM):   _5_2 = 1;
222392    +   end;
MPRINT(EM_DIAGRAM):   end;
222393    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
222394    +      _5_0 = 1;
MPRINT(EM_DIAGRAM):   _5_0 = 1;
222395    +      _5_1 = 0;
MPRINT(EM_DIAGRAM):   _5_1 = 0;
222396    +      _5_2 = 0;
MPRINT(EM_DIAGRAM):   _5_2 = 0;
222397    +   end;
MPRINT(EM_DIAGRAM):   end;
222398    +   else do;
MPRINT(EM_DIAGRAM):   else do;
222399    +      _5_0 = .;
MPRINT(EM_DIAGRAM):   _5_0 = .;
222400    +      _5_1 = .;
MPRINT(EM_DIAGRAM):   _5_1 = .;
222401    +      _5_2 = .;
MPRINT(EM_DIAGRAM):   _5_2 = .;
222402    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
222403    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
222404    +   end;
MPRINT(EM_DIAGRAM):   end;
222405    +end;
MPRINT(EM_DIAGRAM):   end;
222406    +
222407    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
222408    +drop _7_0 _7_1 _7_2 ;
MPRINT(EM_DIAGRAM):   drop _7_0 _7_1 _7_2 ;
222409    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
222410    +   _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
222411    +   _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
222412    +   _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
222413    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
222414    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
222415    +end;
MPRINT(EM_DIAGRAM):   end;
222416    +else do;
MPRINT(EM_DIAGRAM):   else do;
222417    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
222418    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
222419    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
222420    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
222421    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
222422    +      _7_1 = 1;
MPRINT(EM_DIAGRAM):   _7_1 = 1;
222423    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
222424    +   end;
MPRINT(EM_DIAGRAM):   end;
222425    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
222426    +      _7_0 = 0;
MPRINT(EM_DIAGRAM):   _7_0 = 0;
222427    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
222428    +      _7_2 = 1;
MPRINT(EM_DIAGRAM):   _7_2 = 1;
222429    +   end;
MPRINT(EM_DIAGRAM):   end;
222430    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
222431    +      _7_0 = -1;
MPRINT(EM_DIAGRAM):   _7_0 = -1;
222432    +      _7_1 = -1;
MPRINT(EM_DIAGRAM):   _7_1 = -1;
222433    +      _7_2 = -1;
MPRINT(EM_DIAGRAM):   _7_2 = -1;
222434    +   end;
MPRINT(EM_DIAGRAM):   end;
222435    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
222436    +      _7_0 = 1;
MPRINT(EM_DIAGRAM):   _7_0 = 1;
222437    +      _7_1 = 0;
MPRINT(EM_DIAGRAM):   _7_1 = 0;
222438    +      _7_2 = 0;
MPRINT(EM_DIAGRAM):   _7_2 = 0;
222439    +   end;
MPRINT(EM_DIAGRAM):   end;
222440    +   else do;
MPRINT(EM_DIAGRAM):   else do;
222441    +      _7_0 = .;
MPRINT(EM_DIAGRAM):   _7_0 = .;
222442    +      _7_1 = .;
MPRINT(EM_DIAGRAM):   _7_1 = .;
222443    +      _7_2 = .;
MPRINT(EM_DIAGRAM):   _7_2 = .;
222444    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
222445    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
222446    +   end;
MPRINT(EM_DIAGRAM):   end;
222447    +end;
MPRINT(EM_DIAGRAM):   end;
222448    +
222449    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
222450    +drop _8_0 _8_1 _8_2 ;
MPRINT(EM_DIAGRAM):   drop _8_0 _8_1 _8_2 ;
222451    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
222452    +   _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
222453    +   _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
222454    +   _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
222455    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
222456    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
222457    +end;
MPRINT(EM_DIAGRAM):   end;
222458    +else do;
MPRINT(EM_DIAGRAM):   else do;
222459    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
222460    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
222461    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
222462    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
222463    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
222464    +      _8_1 = 1;
MPRINT(EM_DIAGRAM):   _8_1 = 1;
222465    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
222466    +   end;
MPRINT(EM_DIAGRAM):   end;
222467    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
222468    +      _8_0 = -1;
MPRINT(EM_DIAGRAM):   _8_0 = -1;
222469    +      _8_1 = -1;
MPRINT(EM_DIAGRAM):   _8_1 = -1;
222470    +      _8_2 = -1;
MPRINT(EM_DIAGRAM):   _8_2 = -1;
222471    +   end;
MPRINT(EM_DIAGRAM):   end;
222472    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
222473    +      _8_0 = 0;
MPRINT(EM_DIAGRAM):   _8_0 = 0;
222474    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
222475    +      _8_2 = 1;
MPRINT(EM_DIAGRAM):   _8_2 = 1;
222476    +   end;
MPRINT(EM_DIAGRAM):   end;
222477    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
222478    +      _8_0 = 1;
MPRINT(EM_DIAGRAM):   _8_0 = 1;
222479    +      _8_1 = 0;
MPRINT(EM_DIAGRAM):   _8_1 = 0;
222480    +      _8_2 = 0;
MPRINT(EM_DIAGRAM):   _8_2 = 0;
222481    +   end;
MPRINT(EM_DIAGRAM):   end;
222482    +   else do;
MPRINT(EM_DIAGRAM):   else do;
222483    +      _8_0 = .;
MPRINT(EM_DIAGRAM):   _8_0 = .;
222484    +      _8_1 = .;
MPRINT(EM_DIAGRAM):   _8_1 = .;
222485    +      _8_2 = .;
MPRINT(EM_DIAGRAM):   _8_2 = .;
222486    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
222487    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
222488    +   end;
MPRINT(EM_DIAGRAM):   end;
222489    +end;
MPRINT(EM_DIAGRAM):   end;
222490    +
222491    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
222492    +drop _9_0 _9_1 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 ;
222493    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
222494    +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
222495    +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
222496    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
222497    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
222498    +end;
MPRINT(EM_DIAGRAM):   end;
222499    +else do;
MPRINT(EM_DIAGRAM):   else do;
222500    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
222501    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
222502    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
222503    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
222504    +      _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
222505    +      _9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
222506    +   end;
MPRINT(EM_DIAGRAM):   end;
222507    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
222508    +      _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
222509    +      _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
222510    +   end;
MPRINT(EM_DIAGRAM):   end;
222511    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
222512    +      _9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
222513    +      _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
222514    +   end;
MPRINT(EM_DIAGRAM):   end;
222515    +   else do;
MPRINT(EM_DIAGRAM):   else do;
222516    +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
222517    +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
222518    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
222519    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
222520    +   end;
MPRINT(EM_DIAGRAM):   end;
222521    +end;
MPRINT(EM_DIAGRAM):   end;
222522    +
222523    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
222524    +drop _10_0 _10_1 _10_2 ;
MPRINT(EM_DIAGRAM):   drop _10_0 _10_1 _10_2 ;
222525    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
222526    +   _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
222527    +   _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
222528    +   _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
222529    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
222530    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
222531    +end;
MPRINT(EM_DIAGRAM):   end;
222532    +else do;
MPRINT(EM_DIAGRAM):   else do;
222533    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
222534    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
222535    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
222536    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
222537    +      _10_0 = -1;
MPRINT(EM_DIAGRAM):   _10_0 = -1;
222538    +      _10_1 = -1;
MPRINT(EM_DIAGRAM):   _10_1 = -1;
222539    +      _10_2 = -1;
MPRINT(EM_DIAGRAM):   _10_2 = -1;
222540    +   end;
MPRINT(EM_DIAGRAM):   end;
222541    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
222542    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
222543    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
222544    +      _10_2 = 1;
MPRINT(EM_DIAGRAM):   _10_2 = 1;
222545    +   end;
MPRINT(EM_DIAGRAM):   end;
222546    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
222547    +      _10_0 = 1;
MPRINT(EM_DIAGRAM):   _10_0 = 1;
222548    +      _10_1 = 0;
MPRINT(EM_DIAGRAM):   _10_1 = 0;
222549    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
222550    +   end;
MPRINT(EM_DIAGRAM):   end;
222551    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
222552    +      _10_0 = 0;
MPRINT(EM_DIAGRAM):   _10_0 = 0;
222553    +      _10_1 = 1;
MPRINT(EM_DIAGRAM):   _10_1 = 1;
222554    +      _10_2 = 0;
MPRINT(EM_DIAGRAM):   _10_2 = 0;
222555    +   end;
MPRINT(EM_DIAGRAM):   end;
222556    +   else do;
MPRINT(EM_DIAGRAM):   else do;
222557    +      _10_0 = .;
MPRINT(EM_DIAGRAM):   _10_0 = .;
222558    +      _10_1 = .;
MPRINT(EM_DIAGRAM):   _10_1 = .;
222559    +      _10_2 = .;
MPRINT(EM_DIAGRAM):   _10_2 = .;
222560    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
222561    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
222562    +   end;
MPRINT(EM_DIAGRAM):   end;
222563    +end;
MPRINT(EM_DIAGRAM):   end;
222564    +
222565    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
222566    +drop _13_0 _13_1 _13_2 ;
MPRINT(EM_DIAGRAM):   drop _13_0 _13_1 _13_2 ;
222567    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
222568    +   _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
222569    +   _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
222570    +   _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
222571    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
222572    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
222573    +end;
MPRINT(EM_DIAGRAM):   end;
222574    +else do;
MPRINT(EM_DIAGRAM):   else do;
222575    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
222576    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
222577    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
222578    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
222579    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
222580    +      _13_1 = 1;
MPRINT(EM_DIAGRAM):   _13_1 = 1;
222581    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
222582    +   end;
MPRINT(EM_DIAGRAM):   end;
222583    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
222584    +      _13_0 = -1;
MPRINT(EM_DIAGRAM):   _13_0 = -1;
222585    +      _13_1 = -1;
MPRINT(EM_DIAGRAM):   _13_1 = -1;
222586    +      _13_2 = -1;
MPRINT(EM_DIAGRAM):   _13_2 = -1;
222587    +   end;
MPRINT(EM_DIAGRAM):   end;
222588    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
222589    +      _13_0 = 0;
MPRINT(EM_DIAGRAM):   _13_0 = 0;
222590    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
222591    +      _13_2 = 1;
MPRINT(EM_DIAGRAM):   _13_2 = 1;
222592    +   end;
MPRINT(EM_DIAGRAM):   end;
222593    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
222594    +      _13_0 = 1;
MPRINT(EM_DIAGRAM):   _13_0 = 1;
222595    +      _13_1 = 0;
MPRINT(EM_DIAGRAM):   _13_1 = 0;
222596    +      _13_2 = 0;
MPRINT(EM_DIAGRAM):   _13_2 = 0;
222597    +   end;
MPRINT(EM_DIAGRAM):   end;
222598    +   else do;
MPRINT(EM_DIAGRAM):   else do;
222599    +      _13_0 = .;
MPRINT(EM_DIAGRAM):   _13_0 = .;
222600    +      _13_1 = .;
MPRINT(EM_DIAGRAM):   _13_1 = .;
222601    +      _13_2 = .;
MPRINT(EM_DIAGRAM):   _13_2 = .;
222602    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
222603    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
222604    +   end;
MPRINT(EM_DIAGRAM):   end;
222605    +end;
MPRINT(EM_DIAGRAM):   end;
222606    +
222607    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
222608    +drop _14_0 _14_1 _14_2 ;
MPRINT(EM_DIAGRAM):   drop _14_0 _14_1 _14_2 ;
222609    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
222610    +   _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
222611    +   _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
222612    +   _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
222613    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
222614    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
222615    +end;
MPRINT(EM_DIAGRAM):   end;
222616    +else do;
MPRINT(EM_DIAGRAM):   else do;
222617    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
222618    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
222619    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
222620    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
222621    +      _14_0 = -1;
MPRINT(EM_DIAGRAM):   _14_0 = -1;
222622    +      _14_1 = -1;
MPRINT(EM_DIAGRAM):   _14_1 = -1;
222623    +      _14_2 = -1;
MPRINT(EM_DIAGRAM):   _14_2 = -1;
222624    +   end;
MPRINT(EM_DIAGRAM):   end;
222625    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
222626    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
222627    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
222628    +      _14_2 = 1;
MPRINT(EM_DIAGRAM):   _14_2 = 1;
222629    +   end;
MPRINT(EM_DIAGRAM):   end;
222630    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
222631    +      _14_0 = 0;
MPRINT(EM_DIAGRAM):   _14_0 = 0;
222632    +      _14_1 = 1;
MPRINT(EM_DIAGRAM):   _14_1 = 1;
222633    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
222634    +   end;
MPRINT(EM_DIAGRAM):   end;
222635    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
222636    +      _14_0 = 1;
MPRINT(EM_DIAGRAM):   _14_0 = 1;
222637    +      _14_1 = 0;
MPRINT(EM_DIAGRAM):   _14_1 = 0;
222638    +      _14_2 = 0;
MPRINT(EM_DIAGRAM):   _14_2 = 0;
222639    +   end;
MPRINT(EM_DIAGRAM):   end;
222640    +   else do;
MPRINT(EM_DIAGRAM):   else do;
222641    +      _14_0 = .;
MPRINT(EM_DIAGRAM):   _14_0 = .;
222642    +      _14_1 = .;
MPRINT(EM_DIAGRAM):   _14_1 = .;
222643    +      _14_2 = .;
MPRINT(EM_DIAGRAM):   _14_2 = .;
222644    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
222645    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
222646    +   end;
MPRINT(EM_DIAGRAM):   end;
222647    +end;
MPRINT(EM_DIAGRAM):   end;
222648    +
222649    +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
222650    +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
222651    +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
222652    +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
222653    +   goto REG3DR1;
MPRINT(EM_DIAGRAM):   goto REG3DR1;
222654    +end;
MPRINT(EM_DIAGRAM):   end;
222655    +
222656    +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
222657    +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
222658    +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
222659    +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
222660    +
222661    +***  Effect: GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_AcceptedCmp5 ;
222662    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
222663    +_LP0 = _LP0 + (    -1.0202735142883) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.0202735142883) * _TEMP * _1_0;
222664    +
222665    +***  Effect: GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Frq ;
222666    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
222667    +_LP0 = _LP0 + (    1.96135216788678) * _TEMP * _2_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.96135216788678) * _TEMP * _2_0;
222668    +_LP0 = _LP0 + (    0.16052598190077) * _TEMP * _2_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16052598190077) * _TEMP * _2_1;
222669    +_LP0 = _LP0 + (   -0.70902116030282) * _TEMP * _2_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.70902116030282) * _TEMP * _2_2;
222670    +
222671    +***  Effect: GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Income ;
222672    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
222673    +_LP0 = _LP0 + (    0.93791732843579) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.93791732843579) * _TEMP * _3_0;
222674    +_LP0 = _LP0 + (    0.86323578315443) * _TEMP * _3_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.86323578315443) * _TEMP * _3_1;
222675    +_LP0 = _LP0 + (   -0.93701763797667) * _TEMP * _3_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.93701763797667) * _TEMP * _3_2;
222676    +
222677    +***  Effect: GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntFishProducts ;
222678    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
222679    +_LP0 = _LP0 + (     0.6826557743697) * _TEMP * _5_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.6826557743697) * _TEMP * _5_0;
222680    +_LP0 = _LP0 + (    0.02285788144903) * _TEMP * _5_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02285788144903) * _TEMP * _5_1;
222681    +_LP0 = _LP0 + (   -0.06609528477722) * _TEMP * _5_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06609528477722) * _TEMP * _5_2;
222682    +
222683    +***  Effect: GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntMeatProducts ;
222684    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
222685    +_LP0 = _LP0 + (   -1.44582935530291) * _TEMP * _7_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.44582935530291) * _TEMP * _7_0;
222686    +_LP0 = _LP0 + (   -0.21318741203534) * _TEMP * _7_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21318741203534) * _TEMP * _7_1;
222687    +_LP0 = _LP0 + (    0.53364168349885) * _TEMP * _7_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53364168349885) * _TEMP * _7_2;
222688    +
222689    +***  Effect: GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_MntWines ;
222690    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
222691    +_LP0 = _LP0 + (    0.98273321190928) * _TEMP * _8_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.98273321190928) * _TEMP * _8_0;
222692    +_LP0 = _LP0 + (      0.432298434838) * _TEMP * _8_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.432298434838) * _TEMP * _8_1;
222693    +_LP0 = _LP0 + (   -0.57365050311778) * _TEMP * _8_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.57365050311778) * _TEMP * _8_2;
222694    +
222695    +***  Effect: GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumCatalogPurchases ;
222696    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
222697    +_LP0 = _LP0 + (   -1.15145054763997) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -1.15145054763997) * _TEMP * _9_0;
222698    +_LP0 = _LP0 + (    0.03505087718511) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03505087718511) * _TEMP * _9_1;
222699    +
222700    +***  Effect: GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_NumDistPurchases ;
222701    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
222702    +_LP0 = _LP0 + (   -2.65890505222228) * _TEMP * _10_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -2.65890505222228) * _TEMP * _10_0;
222703    +_LP0 = _LP0 + (     0.0545239904585) * _TEMP * _10_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0545239904585) * _TEMP * _10_1;
222704    +_LP0 = _LP0 + (    0.51990032635141) * _TEMP * _10_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.51990032635141) * _TEMP * _10_2;
222705    +
222706    +***  Effect: GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_RMntFrq ;
222707    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
222708    +_LP0 = _LP0 + (   -0.25494301084801) * _TEMP * _13_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.25494301084801) * _TEMP * _13_0;
222709    +_LP0 = _LP0 + (    0.02802747054775) * _TEMP * _13_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02802747054775) * _TEMP * _13_1;
222710    +_LP0 = _LP0 + (   -0.40273598284868) * _TEMP * _13_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40273598284868) * _TEMP * _13_2;
222711    +
222712    +***  Effect: GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: GRP_Recency ;
222713    +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
222714    +_LP0 = _LP0 + (    1.94607798996867) * _TEMP * _14_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.94607798996867) * _TEMP * _14_0;
222715    +_LP0 = _LP0 + (    0.53257949184685) * _TEMP * _14_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.53257949184685) * _TEMP * _14_1;
222716    +_LP0 = _LP0 + (   -0.62881974341908) * _TEMP * _14_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.62881974341908) * _TEMP * _14_2;
222717    +
222718    +***  Effect: Year_Birth ;
MPRINT(EM_DIAGRAM):   *** Effect: Year_Birth ;
222719    +_TEMP = Year_Birth ;
MPRINT(EM_DIAGRAM):   _TEMP = Year_Birth ;
222720    +_LP0 = _LP0 + (    0.01824806947783 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01824806947783 * _TEMP);
222721    +
222722    +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
222723    +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
222724    +_TEMP =    -37.6992883159803 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = -37.6992883159803 + _LP0;
222725    +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
222726    +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
222727    +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
222728    +end;
MPRINT(EM_DIAGRAM):   end;
222729    +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
222730    +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
222731    +
222732    +REG3DR1:
222733    +
222734    +
222735    +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG3DR1: *** Posterior Probabilities and Predicted Level;
222736    +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
222737    +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
222738    +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
222739    +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
222740    +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
222741    +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
222742    +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
222743    +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
222744    +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
222745    +end;
MPRINT(EM_DIAGRAM):   end;
222746    +I_DepVar = REG3DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG3DRF[_IY];
222747    +U_DepVar = REG3DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG3DRU[_IY];
222748    +
222749    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
222750    +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
222751    +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
222752     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
222753     quit;
222754     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
222755     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
222756     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
222757     retain ID 2 Node "Reg3";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg3";
222758     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
222759     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 874 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 874 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
222760     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
222761     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
222762     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 874 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 874 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
222763     proc sort data=EMWS8.Reg3_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg3_variableset out=_temp2(keep=NAME CREATOR);
222764     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
222765     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.REG3_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
222766     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
222767     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
222768     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
222769     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
222770     proc contents data=EMWS8.Reg3_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg3_train out=_meta(keep=NAME) noprint;
222771     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
222772     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
222773     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
222774     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
222775     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
222776     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
222777     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
222778     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
222779     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
222780     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
222780   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 434 rows and 5 columns.
 
222781     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
222782     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
222783     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 434 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 434 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
222784     filename _pref
222784   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
222785     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
222786     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
222787    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
222788    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
222789    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
222790    +
222791    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
222792    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
222793    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
222794    +LABEL GRP_AcceptedCmp5 =
222795    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
222796    +
222797    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
222798    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
222799    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
222800    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
222801    +end;
MPRINT(EM_DIAGRAM):   end;
222802    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
222803    +if (_UFORMAT eq '0'
222804    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
222805    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
222806    +end;
MPRINT(EM_DIAGRAM):   end;
222807    +else
222808    +if (_UFORMAT eq '1'
222809    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
222810    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
222811    +end;
MPRINT(EM_DIAGRAM):   end;
222812    +else do;
MPRINT(EM_DIAGRAM):   else do;
222813    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
222814    +end;
MPRINT(EM_DIAGRAM):   end;
222815    +end;
MPRINT(EM_DIAGRAM):   end;
222816    +
222817    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
222818    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
222819    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
222820    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
222821    +
222822    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
222823    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
222824    +end;
MPRINT(EM_DIAGRAM):   end;
222825    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
222826    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
222827    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
222828    +end;
MPRINT(EM_DIAGRAM):   end;
222829    +else
222830    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
222831    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
222832    +end;
MPRINT(EM_DIAGRAM):   end;
222833    +else
222834    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
222835    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
222836    +end;
MPRINT(EM_DIAGRAM):   end;
222837    +else
222838    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
222839    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
222840    +end;
MPRINT(EM_DIAGRAM):   end;
222841    +end;
MPRINT(EM_DIAGRAM):   end;
222842    +
222843    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
222844    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
222845    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
222846    +LABEL GRP_Income =
222847    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
222848    +
222849    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
222850    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
222851    +end;
MPRINT(EM_DIAGRAM):   end;
222852    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
222853    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
222854    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
222855    +end;
MPRINT(EM_DIAGRAM):   end;
222856    +else
222857    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
222858    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
222859    +end;
MPRINT(EM_DIAGRAM):   end;
222860    +else
222861    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
222862    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
222863    +end;
MPRINT(EM_DIAGRAM):   end;
222864    +else
222865    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
222866    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
222867    +end;
MPRINT(EM_DIAGRAM):   end;
222868    +end;
MPRINT(EM_DIAGRAM):   end;
222869    +
222870    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
222871    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
222872    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
222873    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
222874    +
222875    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
222876    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
222877    +end;
MPRINT(EM_DIAGRAM):   end;
222878    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
222879    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
222880    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
222881    +end;
MPRINT(EM_DIAGRAM):   end;
222882    +else
222883    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
222884    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
222885    +end;
MPRINT(EM_DIAGRAM):   end;
222886    +else
222887    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
222888    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
222889    +end;
MPRINT(EM_DIAGRAM):   end;
222890    +else
222891    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
222892    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
222893    +end;
MPRINT(EM_DIAGRAM):   end;
222894    +end;
MPRINT(EM_DIAGRAM):   end;
222895    +
222896    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
222897    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
222898    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
222899    +LABEL GRP_MntFishProducts =
222900    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
222901    +
222902    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
222903    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
222904    +end;
MPRINT(EM_DIAGRAM):   end;
222905    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
222906    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
222907    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
222908    +end;
MPRINT(EM_DIAGRAM):   end;
222909    +else
222910    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
222911    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
222912    +end;
MPRINT(EM_DIAGRAM):   end;
222913    +else
222914    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
222915    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
222916    +end;
MPRINT(EM_DIAGRAM):   end;
222917    +else
222918    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
222919    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
222920    +end;
MPRINT(EM_DIAGRAM):   end;
222921    +end;
MPRINT(EM_DIAGRAM):   end;
222922    +
222923    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
222924    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
222925    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
222926    +LABEL GRP_MntGoldProds =
222927    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
222928    +
222929    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
222930    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
222931    +end;
MPRINT(EM_DIAGRAM):   end;
222932    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
222933    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
222934    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
222935    +end;
MPRINT(EM_DIAGRAM):   end;
222936    +else
222937    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
222938    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
222939    +end;
MPRINT(EM_DIAGRAM):   end;
222940    +else
222941    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
222942    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
222943    +end;
MPRINT(EM_DIAGRAM):   end;
222944    +else
222945    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
222946    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
222947    +end;
MPRINT(EM_DIAGRAM):   end;
222948    +end;
MPRINT(EM_DIAGRAM):   end;
222949    +
222950    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
222951    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
222952    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
222953    +LABEL GRP_MntMeatProducts =
222954    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
222955    +
222956    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
222957    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
222958    +end;
MPRINT(EM_DIAGRAM):   end;
222959    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
222960    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
222961    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
222962    +end;
MPRINT(EM_DIAGRAM):   end;
222963    +else
222964    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
222965    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
222966    +end;
MPRINT(EM_DIAGRAM):   end;
222967    +else
222968    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
222969    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
222970    +end;
MPRINT(EM_DIAGRAM):   end;
222971    +else
222972    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
222973    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
222974    +end;
MPRINT(EM_DIAGRAM):   end;
222975    +end;
MPRINT(EM_DIAGRAM):   end;
222976    +
222977    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
222978    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
222979    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
222980    +LABEL GRP_MntWines =
222981    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
222982    +
222983    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
222984    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
222985    +end;
MPRINT(EM_DIAGRAM):   end;
222986    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
222987    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
222988    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
222989    +end;
MPRINT(EM_DIAGRAM):   end;
222990    +else
222991    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
222992    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
222993    +end;
MPRINT(EM_DIAGRAM):   end;
222994    +else
222995    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
222996    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
222997    +end;
MPRINT(EM_DIAGRAM):   end;
222998    +else
222999    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
223000    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
223001    +end;
MPRINT(EM_DIAGRAM):   end;
223002    +end;
MPRINT(EM_DIAGRAM):   end;
223003    +
223004    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
223005    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
223006    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
223007    +LABEL GRP_NumCatalogPurchases =
223008    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
223009    +
223010    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
223011    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
223012    +end;
MPRINT(EM_DIAGRAM):   end;
223013    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
223014    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
223015    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
223016    +end;
MPRINT(EM_DIAGRAM):   end;
223017    +else
223018    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
223019    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
223020    +end;
MPRINT(EM_DIAGRAM):   end;
223021    +else
223022    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
223023    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
223024    +end;
MPRINT(EM_DIAGRAM):   end;
223025    +else
223026    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
223027    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
223028    +end;
MPRINT(EM_DIAGRAM):   end;
223029    +end;
MPRINT(EM_DIAGRAM):   end;
223030    +
223031    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
223032    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
223033    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
223034    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
223035    +
223036    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
223037    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
223038    +end;
MPRINT(EM_DIAGRAM):   end;
223039    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
223040    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
223041    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
223042    +end;
MPRINT(EM_DIAGRAM):   end;
223043    +else
223044    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
223045    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
223046    +end;
MPRINT(EM_DIAGRAM):   end;
223047    +else
223048    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
223049    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
223050    +end;
MPRINT(EM_DIAGRAM):   end;
223051    +else
223052    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
223053    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
223054    +end;
MPRINT(EM_DIAGRAM):   end;
223055    +end;
MPRINT(EM_DIAGRAM):   end;
223056    +
223057    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
223058    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
223059    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
223060    +LABEL GRP_NumWebPurchases =
223061    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
223062    +
223063    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
223064    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
223065    +end;
MPRINT(EM_DIAGRAM):   end;
223066    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
223067    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
223068    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
223069    +end;
MPRINT(EM_DIAGRAM):   end;
223070    +else
223071    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
223072    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
223073    +end;
MPRINT(EM_DIAGRAM):   end;
223074    +else
223075    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
223076    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
223077    +end;
MPRINT(EM_DIAGRAM):   end;
223078    +else
223079    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
223080    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
223081    +end;
MPRINT(EM_DIAGRAM):   end;
223082    +end;
MPRINT(EM_DIAGRAM):   end;
223083    +
223084    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
223085    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
223086    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
223087    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
223088    +
223089    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
223090    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
223091    +end;
MPRINT(EM_DIAGRAM):   end;
223092    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
223093    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
223094    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
223095    +end;
MPRINT(EM_DIAGRAM):   end;
223096    +else
223097    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
223098    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
223099    +end;
MPRINT(EM_DIAGRAM):   end;
223100    +else
223101    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
223102    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
223103    +end;
MPRINT(EM_DIAGRAM):   end;
223104    +else
223105    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
223106    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
223107    +end;
MPRINT(EM_DIAGRAM):   end;
223108    +end;
MPRINT(EM_DIAGRAM):   end;
223109    +
223110    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
223111    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
223112    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
223113    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
223114    +
223115    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
223116    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
223117    +end;
MPRINT(EM_DIAGRAM):   end;
223118    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
223119    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
223120    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
223121    +end;
MPRINT(EM_DIAGRAM):   end;
223122    +else
223123    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
223124    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
223125    +end;
MPRINT(EM_DIAGRAM):   end;
223126    +else
223127    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
223128    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
223129    +end;
MPRINT(EM_DIAGRAM):   end;
223130    +else
223131    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
223132    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
223133    +end;
MPRINT(EM_DIAGRAM):   end;
223134    +end;
MPRINT(EM_DIAGRAM):   end;
223135    +
223136    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
223137    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
223138    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
223139    +LABEL GRP_Recency =
223140    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
223141    +
223142    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
223143    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
223144    +end;
MPRINT(EM_DIAGRAM):   end;
223145    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
223146    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
223147    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
223148    +end;
MPRINT(EM_DIAGRAM):   end;
223149    +else
223150    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
223151    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
223152    +end;
MPRINT(EM_DIAGRAM):   end;
223153    +else
223154    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
223155    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
223156    +end;
MPRINT(EM_DIAGRAM):   end;
223157    +else
223158    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
223159    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
223160    +end;
MPRINT(EM_DIAGRAM):   end;
223161    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
223162     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
223163     quit;
223164     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
223165     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
223166     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
223167     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
223168     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
223169     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223170     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
223171     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
223172     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
223173     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
223174     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
223175     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223176     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
223177     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
223178     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
223179     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223180     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
223181     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
223182     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
223183     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
223184     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223185     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
223186     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
223187     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
223188     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223189     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
223190     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
223190   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.
 
223191     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223192     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
223193     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 449 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223194     filename _pref
223194   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
223195     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
223196     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
223197    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
223198    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
223199    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
223200    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
223201    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
223202    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
223203     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
223204     quit;
223205     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
223206     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
223207     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
223208     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
223209     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
223210     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223211     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
223212     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
223213     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
223214     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
223215     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
223216     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223217     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
223218     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
223219     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
223220     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223221     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
223222     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
223223     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
223224     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
223225     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
223226     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
223227     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
223228     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
223229     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223230     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
223231     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
223231   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
223232     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223233     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
223234     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 453 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223235     filename _pref
223235   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
223236     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
223237     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
223238    +
223239    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
223240    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
223240   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
223241    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
223242    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
223243    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
223244    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
223245    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
223246     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
223247     quit;
223248     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
223249     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
223250     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
223251     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
223252     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
223253     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223254     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
223255     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
223256     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223257     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
223258     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
223259     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
223260     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
223261     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
223262     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
223263     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223264     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
223265     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223266     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
223267     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
223268     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
223269     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
223270     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
223271     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
223272     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223273     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
223274     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
223274   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
223275     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223276     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
223277     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 492 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223278     filename _pref
223278   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
223279     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
223280     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
223281    +
223282    +
223283    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
223284    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
223285    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
223286    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
223287    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
223288    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
223289    +
223290    +
223291    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
223292    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
223293    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
223294    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
223295    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
223296    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
223297    +
223298    +
223299    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
223300    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
223301    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
223302    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
223303    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
223304    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
223305    +
223306    +
223307    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
223308    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
223309    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
223310    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
223311    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
223312    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
223313    +
223314    +
223315    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
223316    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
223317    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
223318    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
223319    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
223320    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
223321    +
223322    +
223323    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
223324    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
223325    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
223326    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
223327    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
223328    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
223329    +
223330    +
223331    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
223332    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
223333    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
223334    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
223335    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
223336    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
223337    +
223338    +
223339    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
223340    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
223341    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
223342    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
223343    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
223344    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
223345    +if
223346    +_FILTERNORM1 not in ( '.')
223347    + and
223348    +_FILTERNORM2 not in ( '.')
223349    + and
223350    +_FILTERNORM3 not in ( '.')
223351    + and
223352    +_FILTERNORM4 not in ( '.')
223353    + and
223354    +_FILTERNORM5 not in ( '.')
223355    + and
223356    +_FILTERNORM6 not in ( '.')
223357    + and
223358    +_FILTERNORM7 not in ( ' ')
223359    + and
223360    +_FILTERNORM8 not in ( ' ')
223361    +and
223362    +( Dt_Customer ne .)
223363    +and ( Income ne . and (Income<=107000))
223364    +and ( Kidhome ne .)
223365    +and ( MntFishProducts ne .)
223366    +and ( MntFruits ne .)
223367    +and ( MntGoldProds ne .)
223368    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
223369    +and ( MntSweetProducts ne .)
223370    +and ( MntWines ne .)
223371    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
223372    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
223373    +and ( NumStorePurchases ne .)
223374    +and ( NumWebPurchases ne .)
223375    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
223376    +and ( Recency ne .)
223377    +and ( Teenhome ne .)
223378    +and ( Year_Birth ne .)
223379    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
223380    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
223381    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
223382    +end;
MPRINT(EM_DIAGRAM):   end;
223383    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
223384    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
223385     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
223386     quit;
223387     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
223388     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
223389     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
223390     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
223391     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
223392     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223393     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
223394     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
223395     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223396     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
223397     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
223398     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223399     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
223400     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
223401     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
223402     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223403     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
223404     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
223405     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
223406     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
223407     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223408     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
223409     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
223410     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
223411     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
223412     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
223413     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
223413   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
223414     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223415     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
223416     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 558 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223417     %macro varDept(fcmpdata=,id=);
223418     %global nobs&id scoreFlag&id;
223419     %let scoreFlag&id = 0;
223420     %if &id=1 or ^&fcmpStart %then %do;
223421     proc sort data=&fcmpdata out=_temp&id nodupkey;
223422     by NAME;
223423     where id=&id and LHS in( %let j=1;
223424     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
223425     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
223426     "&var" %let j = %eval(&j+1);
223427     %end;
223428     );
223429     run;
223430     %let dsid = %sysfunc(open(_temp&id));
223431     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
223432     %let dsid = %sysfunc(close(&dsid));
223433     %if &&nobs&id %then %do;
223434     %let scoreFlag&id = 1;
223435     %let fcmpStart = 1;
223436     %end;
223437     %else %let fcmpStart = 0;
223438     %end;
223439     %else %do;
223440     proc sort data=&fcmpdata out=_tempid;
223441     where id=&id;
223442     by LHS;
223443     run;
223444     %let dsid = %sysfunc(open(_tempid));
223445     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
223446     %let dsid = %sysfunc(close(&dsid));
223447     %if ^&&nobs&id %then %do;
223448     proc datasets lib=work nolist;
223449     delete _tempid;
223450     run;
223451     quit;
223452     %end;
223453     %else %do;
223454     data _tempAll;
223455     set %let j=%eval(&id-1);
223456     %do x=1 %to &j;
223457     %if &&nobs&x %then %do;
223458     _temp&x %end;
223459     %end;
223460     ;
223461     run;
223462     proc sql;
223463     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
223463   ! work._tempid p2 where p.name=p2.lhs;
223464     quit;
223465     data _temp&id;
223466     set _temp&id;
223467     where LHS ne '' and NAME ne '' and Node ne '';
223468     run;
223469     proc datasets lib=work nolist;
223470     delete _tempAll;
223471     run;
223472     %let dsid = %sysfunc(open(_temp&id));
223473     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
223474     %let dsid = %sysfunc(close(&dsid));
223475     %if ^&&nobs&id %then %do;
223476     proc datasets lib=work nolist;
223477     delete _temp&id;
223478     run;
223479     quit;
223480     %end;
223481     %else %do;
223482     %let scoreFlag&id = 1;
223483     data _temp&id;
223484     set _temp&id;
223485     where LHS ne NAME and node ne '';
223486     run;
223487     %let dsid = %sysfunc(open(_temp&id));
223488     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
223489     %let dsid = %sysfunc(close(&dsid));
223490     %if ^&&nobs&id %then %do;
223491     proc datasets lib=work nolist;
223492     delete _temp&id;
223493     run;
223494     quit;
223495     %end;
223496     %else %do;
223497     proc sort data=_temp&id nodupkey;
223498     by LHS NAME;
223499     run;
223500     %end;
223501     %end;
223502     %end;
223503     %end;
223504     %mend varDept;
223505     %macro optCode(outdata=fcmpdata);
223506     %global fcmpStart;
223507     %let fcmpStart = 0;
223508     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
223509     %let NumNodes=9;
223510     %do k=1 %to &NumNodes;
223511     %vardept(fcmpdata=&outdata, id=&k);
223512     %end;
223513     %mend optCode;
223514     %optcode(outData=EMWS8.Ensmbl18_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 44 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 33 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 11 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 10 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 10 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 21 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 23 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 10 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 37 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
223515     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
223516     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
223517     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
223518     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223519     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
223520     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
223521     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
223522     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223523     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
223524     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
223524   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
223525     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
223526     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
223527     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
223528     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223529     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
223530     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
223531     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
223532     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
223533     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
223534     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
223535     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
223536     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223537     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
223538     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
223538   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 10 rows and 3 columns.
 
223539     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
223540     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
223541     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
223542     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 10 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 11 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
223543     filename _pref
223543   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural5\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural5\EMPUBLISHSCORE.sas";
223544     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
223545     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural5\EMPUBLISHSCORE.sas.
223546    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
223547    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
223548    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
223549    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
223550    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
223551    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
223552    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
223553    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
223554    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
223555    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
223556    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
223557    +LENGTH _WARN_ $4
223558    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
223559    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
223560    +
223561    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
223562    +
223563    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
223564    +
223565    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
223566    +
223567    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
223568    +
223569    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
223570    +
223571    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
223572    +
223573    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
223574    +
223575    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
223576    +
223577    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
223578    +
223579    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
223580    +
223581    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
223582    +
223583    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
223584    +
223585    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
223586    +
223587    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
223588    +
223589    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
223590    +
223591    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
223592    +
223593    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
223594    +
223595    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
223596    +
223597    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
223598    +
223599    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
223600    +
223601    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
223602    +
223603    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
223604    +
223605    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
223606    +
223607    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
223608    +
223609    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
223610    +
223611    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
223612    +
223613    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
223614    +
223615    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
223616    +
223617    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
223618    +
223619    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
223620    +
223621    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
223622    +
223623    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
223624    +
223625    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
223626    +
223627    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
223628    +
223629    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
223630    +
223631    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
223632    +
223633    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
223634    +
223635    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
223636    +
223637    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
223638    +
223639    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
223640    +
223641    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
223642    +
223643    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
223644    +
223645    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
223646    +
223647    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
223648    +
223649    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
223650    +
223651    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
223652    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
223653    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
223654    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
223655    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
223656    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
223657    +end;
MPRINT(EM_DIAGRAM):   end;
223658    +else do;
MPRINT(EM_DIAGRAM):   else do;
223659    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
223660    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
223661    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
223662    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
223663    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
223664    +   end;
MPRINT(EM_DIAGRAM):   end;
223665    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
223666    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
223667    +   end;
MPRINT(EM_DIAGRAM):   end;
223668    +   else do;
MPRINT(EM_DIAGRAM):   else do;
223669    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
223670    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
223671    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
223672    +   end;
MPRINT(EM_DIAGRAM):   end;
223673    +end;
MPRINT(EM_DIAGRAM):   end;
223674    +
223675    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
223676    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
223677    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
223678    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
223679    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
223680    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
223681    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
223682    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
223683    +end;
MPRINT(EM_DIAGRAM):   end;
223684    +else do;
MPRINT(EM_DIAGRAM):   else do;
223685    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
223686    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
223687    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
223688    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
223689    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
223690    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
223691    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
223692    +   end;
MPRINT(EM_DIAGRAM):   end;
223693    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
223694    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
223695    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
223696    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
223697    +   end;
MPRINT(EM_DIAGRAM):   end;
223698    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
223699    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
223700    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
223701    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
223702    +   end;
MPRINT(EM_DIAGRAM):   end;
223703    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
223704    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
223705    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
223706    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
223707    +   end;
MPRINT(EM_DIAGRAM):   end;
223708    +   else do;
MPRINT(EM_DIAGRAM):   else do;
223709    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
223710    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
223711    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
223712    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
223713    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
223714    +   end;
MPRINT(EM_DIAGRAM):   end;
223715    +end;
MPRINT(EM_DIAGRAM):   end;
223716    +
223717    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
223718    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
223719    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
223720    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
223721    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
223722    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
223723    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
223724    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
223725    +end;
MPRINT(EM_DIAGRAM):   end;
223726    +else do;
MPRINT(EM_DIAGRAM):   else do;
223727    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
223728    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
223729    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
223730    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
223731    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
223732    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
223733    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
223734    +   end;
MPRINT(EM_DIAGRAM):   end;
223735    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
223736    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
223737    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
223738    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
223739    +   end;
MPRINT(EM_DIAGRAM):   end;
223740    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
223741    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
223742    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
223743    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
223744    +   end;
MPRINT(EM_DIAGRAM):   end;
223745    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
223746    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
223747    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
223748    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
223749    +   end;
MPRINT(EM_DIAGRAM):   end;
223750    +   else do;
MPRINT(EM_DIAGRAM):   else do;
223751    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
223752    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
223753    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
223754    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
223755    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
223756    +   end;
MPRINT(EM_DIAGRAM):   end;
223757    +end;
MPRINT(EM_DIAGRAM):   end;
223758    +
223759    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
223760    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
223761    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
223762    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
223763    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
223764    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
223765    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
223766    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
223767    +end;
MPRINT(EM_DIAGRAM):   end;
223768    +else do;
MPRINT(EM_DIAGRAM):   else do;
223769    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
223770    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
223771    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
223772    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
223773    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
223774    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
223775    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
223776    +   end;
MPRINT(EM_DIAGRAM):   end;
223777    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
223778    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
223779    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
223780    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
223781    +   end;
MPRINT(EM_DIAGRAM):   end;
223782    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
223783    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
223784    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
223785    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
223786    +   end;
MPRINT(EM_DIAGRAM):   end;
223787    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
223788    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
223789    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
223790    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
223791    +   end;
MPRINT(EM_DIAGRAM):   end;
223792    +   else do;
MPRINT(EM_DIAGRAM):   else do;
223793    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
223794    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
223795    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
223796    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
223797    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
223798    +   end;
MPRINT(EM_DIAGRAM):   end;
223799    +end;
MPRINT(EM_DIAGRAM):   end;
223800    +
223801    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
223802    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
223803    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
223804    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
223805    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
223806    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
223807    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
223808    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
223809    +end;
MPRINT(EM_DIAGRAM):   end;
223810    +else do;
MPRINT(EM_DIAGRAM):   else do;
223811    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
223812    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
223813    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
223814    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
223815    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
223816    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
223817    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
223818    +   end;
MPRINT(EM_DIAGRAM):   end;
223819    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
223820    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
223821    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
223822    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
223823    +   end;
MPRINT(EM_DIAGRAM):   end;
223824    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
223825    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
223826    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
223827    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
223828    +   end;
MPRINT(EM_DIAGRAM):   end;
223829    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
223830    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
223831    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
223832    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
223833    +   end;
MPRINT(EM_DIAGRAM):   end;
223834    +   else do;
MPRINT(EM_DIAGRAM):   else do;
223835    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
223836    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
223837    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
223838    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
223839    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
223840    +   end;
MPRINT(EM_DIAGRAM):   end;
223841    +end;
MPRINT(EM_DIAGRAM):   end;
223842    +
223843    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
223844    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
223845    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
223846    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
223847    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
223848    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
223849    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
223850    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
223851    +end;
MPRINT(EM_DIAGRAM):   end;
223852    +else do;
MPRINT(EM_DIAGRAM):   else do;
223853    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
223854    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
223855    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
223856    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
223857    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
223858    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
223859    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
223860    +   end;
MPRINT(EM_DIAGRAM):   end;
223861    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
223862    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
223863    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
223864    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
223865    +   end;
MPRINT(EM_DIAGRAM):   end;
223866    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
223867    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
223868    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
223869    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
223870    +   end;
MPRINT(EM_DIAGRAM):   end;
223871    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
223872    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
223873    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
223874    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
223875    +   end;
MPRINT(EM_DIAGRAM):   end;
223876    +   else do;
MPRINT(EM_DIAGRAM):   else do;
223877    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
223878    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
223879    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
223880    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
223881    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
223882    +   end;
MPRINT(EM_DIAGRAM):   end;
223883    +end;
MPRINT(EM_DIAGRAM):   end;
223884    +
223885    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
223886    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
223887    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
223888    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
223889    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
223890    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
223891    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
223892    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
223893    +end;
MPRINT(EM_DIAGRAM):   end;
223894    +else do;
MPRINT(EM_DIAGRAM):   else do;
223895    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
223896    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
223897    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
223898    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
223899    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
223900    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
223901    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
223902    +   end;
MPRINT(EM_DIAGRAM):   end;
223903    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
223904    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
223905    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
223906    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
223907    +   end;
MPRINT(EM_DIAGRAM):   end;
223908    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
223909    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
223910    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
223911    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
223912    +   end;
MPRINT(EM_DIAGRAM):   end;
223913    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
223914    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
223915    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
223916    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
223917    +   end;
MPRINT(EM_DIAGRAM):   end;
223918    +   else do;
MPRINT(EM_DIAGRAM):   else do;
223919    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
223920    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
223921    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
223922    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
223923    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
223924    +   end;
MPRINT(EM_DIAGRAM):   end;
223925    +end;
MPRINT(EM_DIAGRAM):   end;
223926    +
223927    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
223928    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
223929    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
223930    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
223931    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
223932    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
223933    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
223934    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
223935    +end;
MPRINT(EM_DIAGRAM):   end;
223936    +else do;
MPRINT(EM_DIAGRAM):   else do;
223937    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
223938    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
223939    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
223940    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
223941    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
223942    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
223943    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
223944    +   end;
MPRINT(EM_DIAGRAM):   end;
223945    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
223946    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
223947    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
223948    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
223949    +   end;
MPRINT(EM_DIAGRAM):   end;
223950    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
223951    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
223952    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
223953    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
223954    +   end;
MPRINT(EM_DIAGRAM):   end;
223955    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
223956    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
223957    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
223958    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
223959    +   end;
MPRINT(EM_DIAGRAM):   end;
223960    +   else do;
MPRINT(EM_DIAGRAM):   else do;
223961    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
223962    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
223963    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
223964    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
223965    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
223966    +   end;
MPRINT(EM_DIAGRAM):   end;
223967    +end;
MPRINT(EM_DIAGRAM):   end;
223968    +
223969    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
223970    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
223971    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
223972    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
223973    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
223974    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
223975    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
223976    +end;
MPRINT(EM_DIAGRAM):   end;
223977    +else do;
MPRINT(EM_DIAGRAM):   else do;
223978    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
223979    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
223980    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
223981    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
223982    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
223983    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
223984    +   end;
MPRINT(EM_DIAGRAM):   end;
223985    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
223986    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
223987    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
223988    +   end;
MPRINT(EM_DIAGRAM):   end;
223989    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
223990    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
223991    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
223992    +   end;
MPRINT(EM_DIAGRAM):   end;
223993    +   else do;
MPRINT(EM_DIAGRAM):   else do;
223994    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
223995    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
223996    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
223997    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
223998    +   end;
MPRINT(EM_DIAGRAM):   end;
223999    +end;
MPRINT(EM_DIAGRAM):   end;
224000    +
224001    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
224002    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
224003    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
224004    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
224005    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
224006    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
224007    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
224008    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
224009    +end;
MPRINT(EM_DIAGRAM):   end;
224010    +else do;
MPRINT(EM_DIAGRAM):   else do;
224011    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
224012    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
224013    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
224014    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
224015    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
224016    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
224017    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
224018    +   end;
MPRINT(EM_DIAGRAM):   end;
224019    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
224020    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
224021    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
224022    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
224023    +   end;
MPRINT(EM_DIAGRAM):   end;
224024    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
224025    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
224026    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
224027    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
224028    +   end;
MPRINT(EM_DIAGRAM):   end;
224029    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
224030    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
224031    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
224032    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
224033    +   end;
MPRINT(EM_DIAGRAM):   end;
224034    +   else do;
MPRINT(EM_DIAGRAM):   else do;
224035    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
224036    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
224037    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
224038    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
224039    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
224040    +   end;
MPRINT(EM_DIAGRAM):   end;
224041    +end;
MPRINT(EM_DIAGRAM):   end;
224042    +
224043    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
224044    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
224045    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
224046    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
224047    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
224048    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
224049    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
224050    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
224051    +end;
MPRINT(EM_DIAGRAM):   end;
224052    +else do;
MPRINT(EM_DIAGRAM):   else do;
224053    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
224054    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
224055    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
224056    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
224057    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
224058    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
224059    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
224060    +   end;
MPRINT(EM_DIAGRAM):   end;
224061    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
224062    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
224063    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
224064    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
224065    +   end;
MPRINT(EM_DIAGRAM):   end;
224066    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
224067    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
224068    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
224069    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
224070    +   end;
MPRINT(EM_DIAGRAM):   end;
224071    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
224072    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
224073    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
224074    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
224075    +   end;
MPRINT(EM_DIAGRAM):   end;
224076    +   else do;
MPRINT(EM_DIAGRAM):   else do;
224077    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
224078    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
224079    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
224080    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
224081    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
224082    +   end;
MPRINT(EM_DIAGRAM):   end;
224083    +end;
MPRINT(EM_DIAGRAM):   end;
224084    +
224085    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
224086    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
224087    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
224088    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
224089    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
224090    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
224091    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
224092    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
224093    +end;
MPRINT(EM_DIAGRAM):   end;
224094    +else do;
MPRINT(EM_DIAGRAM):   else do;
224095    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
224096    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
224097    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
224098    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
224099    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
224100    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
224101    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
224102    +   end;
MPRINT(EM_DIAGRAM):   end;
224103    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
224104    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
224105    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
224106    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
224107    +   end;
MPRINT(EM_DIAGRAM):   end;
224108    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
224109    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
224110    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
224111    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
224112    +   end;
MPRINT(EM_DIAGRAM):   end;
224113    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
224114    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
224115    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
224116    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
224117    +   end;
MPRINT(EM_DIAGRAM):   end;
224118    +   else do;
MPRINT(EM_DIAGRAM):   else do;
224119    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
224120    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
224121    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
224122    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
224123    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
224124    +   end;
MPRINT(EM_DIAGRAM):   end;
224125    +end;
MPRINT(EM_DIAGRAM):   end;
224126    +
224127    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
224128    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
224129    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
224130    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
224131    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
224132    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
224133    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
224134    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
224135    +end;
MPRINT(EM_DIAGRAM):   end;
224136    +else do;
MPRINT(EM_DIAGRAM):   else do;
224137    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
224138    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
224139    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
224140    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
224141    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
224142    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
224143    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
224144    +   end;
MPRINT(EM_DIAGRAM):   end;
224145    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
224146    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
224147    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
224148    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
224149    +   end;
MPRINT(EM_DIAGRAM):   end;
224150    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
224151    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
224152    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
224153    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
224154    +   end;
MPRINT(EM_DIAGRAM):   end;
224155    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
224156    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
224157    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
224158    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
224159    +   end;
MPRINT(EM_DIAGRAM):   end;
224160    +   else do;
MPRINT(EM_DIAGRAM):   else do;
224161    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
224162    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
224163    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
224164    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
224165    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
224166    +   end;
MPRINT(EM_DIAGRAM):   end;
224167    +end;
MPRINT(EM_DIAGRAM):   end;
224168    +
224169    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
224170    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
224171    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
224172    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
224173    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
224174    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
224175    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
224176    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
224177    +end;
MPRINT(EM_DIAGRAM):   end;
224178    +else do;
MPRINT(EM_DIAGRAM):   else do;
224179    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
224180    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
224181    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
224182    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
224183    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
224184    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
224185    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
224186    +   end;
MPRINT(EM_DIAGRAM):   end;
224187    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
224188    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
224189    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
224190    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
224191    +   end;
MPRINT(EM_DIAGRAM):   end;
224192    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
224193    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
224194    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
224195    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
224196    +   end;
MPRINT(EM_DIAGRAM):   end;
224197    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
224198    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
224199    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
224200    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
224201    +   end;
MPRINT(EM_DIAGRAM):   end;
224202    +   else do;
MPRINT(EM_DIAGRAM):   else do;
224203    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
224204    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
224205    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
224206    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
224207    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
224208    +   end;
MPRINT(EM_DIAGRAM):   end;
224209    +end;
MPRINT(EM_DIAGRAM):   end;
224210    +
224211    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
224212    +*** Checking missing input Interval
224213    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
224214    +
224215    +IF NMISS(
224216    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
224217    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
224218    +
224219    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
224220    +END;
MPRINT(EM_DIAGRAM):   END;
224221    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
224222    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
224223    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
224224    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
224225    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
224226    +END;
MPRINT(EM_DIAGRAM):   END;
224227    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224228    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
224229    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
224230    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
224231    +END;
MPRINT(EM_DIAGRAM):   END;
224232    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
224233    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
224234    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
224235    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
224236    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
224237    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
224238    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
224239    +   H11  =     -0.0249129843743 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.0249129843743 * S_Year_Birth ;
224240    +   H11  = H11  +     0.12725616992691 * GRP_AcceptedCmp52
224241    +          +    -0.26945372540537 * GRP_Frq2  +    -0.02807540638783 * GRP_Frq3
224242    +          +     0.09639274822287 * GRP_Frq4  +    -0.12205097466688 *
224243    +        GRP_Income2  +    -0.11081339105891 * GRP_Income3
224244    +          +     0.11708983682544 * GRP_Income4  +     0.08213996698973 *
224245    +        GRP_Mnt2  +     0.04755736117379 * GRP_Mnt3  +    -0.04386204709619 *
224246    +        GRP_Mnt4  +    -0.08900126769754 * GRP_MntFishProducts2
224247    +          +    -0.01139329678589 * GRP_MntFishProducts3
224248    +          +     0.01080020635436 * GRP_MntFishProducts4
224249    +          +     0.03276801167604 * GRP_MntGoldProds2
224250    +          +     0.00684607145566 * GRP_MntGoldProds3
224251    +          +     0.00079341373044 * GRP_MntGoldProds4
224252    +          +     0.17029271800291 * GRP_MntMeatProducts2
224253    +          +     0.03003718456752 * GRP_MntMeatProducts3
224254    +          +    -0.06730384984954 * GRP_MntMeatProducts4
224255    +          +    -0.12738653189788 * GRP_MntWines2  +    -0.05870095101029 *
224256    +        GRP_MntWines3  +     0.07315089663035 * GRP_MntWines4
224257    +          +      0.1241456955943 * GRP_NumCatalogPurchases3
224258    +          +    -0.00574720008996 * GRP_NumCatalogPurchases4
224259    +          +     0.32158219504705 * GRP_NumDistPurchases2
224260    +          +      0.0000285685731 * GRP_NumDistPurchases3
224261    +          +    -0.05920668594102 * GRP_NumDistPurchases4
224262    +          +    -0.02186462965936 * GRP_NumWebPurchases2
224263    +          +    -0.01225939075207 * GRP_NumWebPurchases3
224264    +          +     0.00325978185796 * GRP_NumWebPurchases4
224265    +          +     0.08029400003818 * GRP_RFMstat2  +     0.01517552489443 *
224266    +        GRP_RFMstat3  +    -0.02560149548828 * GRP_RFMstat4
224267    +          +    -0.06091086754789 * GRP_RMntFrq2  +    -0.03720166216597 *
224268    +        GRP_RMntFrq3  +     0.09749105098352 * GRP_RMntFrq4
224269    +          +    -0.21514477253983 * GRP_Recency2  +    -0.05786796429946 *
224270    +        GRP_Recency3  +     0.06630148536635 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.12725616992691 * GRP_AcceptedCmp52 + -0.26945372540537 *
GRP_Frq2 + -0.02807540638783 * GRP_Frq3 + 0.09639274822287 * GRP_Frq4 + -0.12205097466688 *
GRP_Income2 + -0.11081339105891 * GRP_Income3 + 0.11708983682544 * GRP_Income4 +
0.08213996698973 * GRP_Mnt2 + 0.04755736117379 * GRP_Mnt3 + -0.04386204709619 * GRP_Mnt4 +
-0.08900126769754 * GRP_MntFishProducts2 + -0.01139329678589 * GRP_MntFishProducts3 +
0.01080020635436 * GRP_MntFishProducts4 + 0.03276801167604 * GRP_MntGoldProds2 +
0.00684607145566 * GRP_MntGoldProds3 + 0.00079341373044 * GRP_MntGoldProds4 + 0.17029271800291
* GRP_MntMeatProducts2 + 0.03003718456752 * GRP_MntMeatProducts3 + -0.06730384984954 *
GRP_MntMeatProducts4 + -0.12738653189788 * GRP_MntWines2 + -0.05870095101029 * GRP_MntWines3 +
0.07315089663035 * GRP_MntWines4 + 0.1241456955943 * GRP_NumCatalogPurchases3 +
-0.00574720008996 * GRP_NumCatalogPurchases4 + 0.32158219504705 * GRP_NumDistPurchases2 +
0.0000285685731 * GRP_NumDistPurchases3 + -0.05920668594102 * GRP_NumDistPurchases4 +
-0.02186462965936 * GRP_NumWebPurchases2 + -0.01225939075207 * GRP_NumWebPurchases3 +
0.00325978185796 * GRP_NumWebPurchases4 + 0.08029400003818 * GRP_RFMstat2 + 0.01517552489443 *
GRP_RFMstat3 + -0.02560149548828 * GRP_RFMstat4 + -0.06091086754789 * GRP_RMntFrq2 +
-0.03720166216597 * GRP_RMntFrq3 + 0.09749105098352 * GRP_RMntFrq4 + -0.21514477253983 *
GRP_Recency2 + -0.05786796429946 * GRP_Recency3 + 0.06630148536635 * GRP_Recency4 ;
224271    +   H11  =     -0.2495737283502 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.2495737283502 + H11 ;
224272    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
224273    +END;
MPRINT(EM_DIAGRAM):   END;
224274    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224275    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
224276    +END;
MPRINT(EM_DIAGRAM):   END;
224277    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
224278    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
224279    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
224280    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
224281    +   P_DepVar1  =    -9.21655554427872 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -9.21655554427872 * H11 ;
224282    +   P_DepVar1  =    -3.98078306870422 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.98078306870422 + P_DepVar1 ;
224283    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
224284    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
224285    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
224286    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
224287    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
224288    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
224289    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
224290    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
224291    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
224292    +END;
MPRINT(EM_DIAGRAM):   END;
224293    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
224294    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
224295    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
224296    +END;
MPRINT(EM_DIAGRAM):   END;
224297    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
224298    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
224299    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
224300    +END;
MPRINT(EM_DIAGRAM):   END;
224301    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
224302    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
224303    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
224304    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
224305    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
224306    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
224307    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
224308    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
224309    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
224310    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
224311    +END;
MPRINT(EM_DIAGRAM):   END;
224312    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
224313    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
224314    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
224315    +drop
224316    +H11
224317    +;
MPRINT(EM_DIAGRAM):   drop H11 ;
224318    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
224319     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
224320     quit;
224321     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
224322     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
224323     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
224324     retain ID 2 Node "Neural5";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural5";
224325     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
224326     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1428 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1428 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224327     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
224328     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
224329     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1428 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1428 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
224330     proc sort data=EMWS8.Neural5_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural5_variableset out=_temp2(keep=NAME CREATOR);
224331     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
224332     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.NEURAL5_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224333     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
224334     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
224335     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
224336     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
224337     proc contents data=EMWS8.Neural5_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural5_train out=_meta(keep=NAME) noprint;
224338     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
224339     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
224340     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
224341     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224342     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
224343     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
224344     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
224345     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
224346     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
224347     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
224347   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 805 rows and 5 columns.
 
224348     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224349     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
224350     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 805 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 805 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224351     filename _pref
224351   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
224352     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
224353     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
224354    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
224355    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
224356    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
224357    +
224358    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224359    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
224360    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224361    +LABEL GRP_AcceptedCmp5 =
224362    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
224363    +
224364    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
224365    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
224366    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
224367    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
224368    +end;
MPRINT(EM_DIAGRAM):   end;
224369    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
224370    +if (_UFORMAT eq '0'
224371    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
224372    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
224373    +end;
MPRINT(EM_DIAGRAM):   end;
224374    +else
224375    +if (_UFORMAT eq '1'
224376    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
224377    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
224378    +end;
MPRINT(EM_DIAGRAM):   end;
224379    +else do;
MPRINT(EM_DIAGRAM):   else do;
224380    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
224381    +end;
MPRINT(EM_DIAGRAM):   end;
224382    +end;
MPRINT(EM_DIAGRAM):   end;
224383    +
224384    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224385    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
224386    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224387    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
224388    +
224389    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
224390    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
224391    +end;
MPRINT(EM_DIAGRAM):   end;
224392    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
224393    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
224394    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
224395    +end;
MPRINT(EM_DIAGRAM):   end;
224396    +else
224397    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
224398    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
224399    +end;
MPRINT(EM_DIAGRAM):   end;
224400    +else
224401    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
224402    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
224403    +end;
MPRINT(EM_DIAGRAM):   end;
224404    +else
224405    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
224406    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
224407    +end;
MPRINT(EM_DIAGRAM):   end;
224408    +end;
MPRINT(EM_DIAGRAM):   end;
224409    +
224410    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224411    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
224412    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224413    +LABEL GRP_Income =
224414    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
224415    +
224416    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
224417    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
224418    +end;
MPRINT(EM_DIAGRAM):   end;
224419    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
224420    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
224421    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
224422    +end;
MPRINT(EM_DIAGRAM):   end;
224423    +else
224424    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
224425    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
224426    +end;
MPRINT(EM_DIAGRAM):   end;
224427    +else
224428    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
224429    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
224430    +end;
MPRINT(EM_DIAGRAM):   end;
224431    +else
224432    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
224433    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
224434    +end;
MPRINT(EM_DIAGRAM):   end;
224435    +end;
MPRINT(EM_DIAGRAM):   end;
224436    +
224437    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224438    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
224439    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224440    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
224441    +
224442    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
224443    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
224444    +end;
MPRINT(EM_DIAGRAM):   end;
224445    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
224446    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
224447    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
224448    +end;
MPRINT(EM_DIAGRAM):   end;
224449    +else
224450    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
224451    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
224452    +end;
MPRINT(EM_DIAGRAM):   end;
224453    +else
224454    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
224455    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
224456    +end;
MPRINT(EM_DIAGRAM):   end;
224457    +else
224458    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
224459    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
224460    +end;
MPRINT(EM_DIAGRAM):   end;
224461    +end;
MPRINT(EM_DIAGRAM):   end;
224462    +
224463    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224464    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
224465    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224466    +LABEL GRP_MntFishProducts =
224467    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
224468    +
224469    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
224470    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
224471    +end;
MPRINT(EM_DIAGRAM):   end;
224472    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
224473    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
224474    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
224475    +end;
MPRINT(EM_DIAGRAM):   end;
224476    +else
224477    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
224478    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
224479    +end;
MPRINT(EM_DIAGRAM):   end;
224480    +else
224481    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
224482    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
224483    +end;
MPRINT(EM_DIAGRAM):   end;
224484    +else
224485    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
224486    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
224487    +end;
MPRINT(EM_DIAGRAM):   end;
224488    +end;
MPRINT(EM_DIAGRAM):   end;
224489    +
224490    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224491    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
224492    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224493    +LABEL GRP_MntGoldProds =
224494    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
224495    +
224496    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
224497    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
224498    +end;
MPRINT(EM_DIAGRAM):   end;
224499    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
224500    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
224501    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
224502    +end;
MPRINT(EM_DIAGRAM):   end;
224503    +else
224504    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
224505    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
224506    +end;
MPRINT(EM_DIAGRAM):   end;
224507    +else
224508    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
224509    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
224510    +end;
MPRINT(EM_DIAGRAM):   end;
224511    +else
224512    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
224513    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
224514    +end;
MPRINT(EM_DIAGRAM):   end;
224515    +end;
MPRINT(EM_DIAGRAM):   end;
224516    +
224517    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224518    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
224519    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224520    +LABEL GRP_MntMeatProducts =
224521    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
224522    +
224523    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
224524    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
224525    +end;
MPRINT(EM_DIAGRAM):   end;
224526    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
224527    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
224528    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
224529    +end;
MPRINT(EM_DIAGRAM):   end;
224530    +else
224531    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
224532    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
224533    +end;
MPRINT(EM_DIAGRAM):   end;
224534    +else
224535    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
224536    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
224537    +end;
MPRINT(EM_DIAGRAM):   end;
224538    +else
224539    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
224540    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
224541    +end;
MPRINT(EM_DIAGRAM):   end;
224542    +end;
MPRINT(EM_DIAGRAM):   end;
224543    +
224544    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224545    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
224546    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224547    +LABEL GRP_MntWines =
224548    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
224549    +
224550    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
224551    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
224552    +end;
MPRINT(EM_DIAGRAM):   end;
224553    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
224554    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
224555    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
224556    +end;
MPRINT(EM_DIAGRAM):   end;
224557    +else
224558    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
224559    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
224560    +end;
MPRINT(EM_DIAGRAM):   end;
224561    +else
224562    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
224563    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
224564    +end;
MPRINT(EM_DIAGRAM):   end;
224565    +else
224566    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
224567    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
224568    +end;
MPRINT(EM_DIAGRAM):   end;
224569    +end;
MPRINT(EM_DIAGRAM):   end;
224570    +
224571    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224572    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
224573    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224574    +LABEL GRP_NumCatalogPurchases =
224575    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
224576    +
224577    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
224578    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
224579    +end;
MPRINT(EM_DIAGRAM):   end;
224580    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
224581    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
224582    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
224583    +end;
MPRINT(EM_DIAGRAM):   end;
224584    +else
224585    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
224586    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
224587    +end;
MPRINT(EM_DIAGRAM):   end;
224588    +else
224589    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
224590    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
224591    +end;
MPRINT(EM_DIAGRAM):   end;
224592    +else
224593    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
224594    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
224595    +end;
MPRINT(EM_DIAGRAM):   end;
224596    +end;
MPRINT(EM_DIAGRAM):   end;
224597    +
224598    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224599    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
224600    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224601    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
224602    +
224603    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
224604    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
224605    +end;
MPRINT(EM_DIAGRAM):   end;
224606    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
224607    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
224608    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
224609    +end;
MPRINT(EM_DIAGRAM):   end;
224610    +else
224611    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
224612    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
224613    +end;
MPRINT(EM_DIAGRAM):   end;
224614    +else
224615    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
224616    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
224617    +end;
MPRINT(EM_DIAGRAM):   end;
224618    +else
224619    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
224620    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
224621    +end;
MPRINT(EM_DIAGRAM):   end;
224622    +end;
MPRINT(EM_DIAGRAM):   end;
224623    +
224624    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224625    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
224626    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224627    +LABEL GRP_NumWebPurchases =
224628    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
224629    +
224630    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
224631    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
224632    +end;
MPRINT(EM_DIAGRAM):   end;
224633    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
224634    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
224635    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
224636    +end;
MPRINT(EM_DIAGRAM):   end;
224637    +else
224638    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
224639    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
224640    +end;
MPRINT(EM_DIAGRAM):   end;
224641    +else
224642    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
224643    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
224644    +end;
MPRINT(EM_DIAGRAM):   end;
224645    +else
224646    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
224647    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
224648    +end;
MPRINT(EM_DIAGRAM):   end;
224649    +end;
MPRINT(EM_DIAGRAM):   end;
224650    +
224651    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224652    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
224653    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224654    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
224655    +
224656    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
224657    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
224658    +end;
MPRINT(EM_DIAGRAM):   end;
224659    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
224660    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
224661    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
224662    +end;
MPRINT(EM_DIAGRAM):   end;
224663    +else
224664    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
224665    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
224666    +end;
MPRINT(EM_DIAGRAM):   end;
224667    +else
224668    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
224669    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
224670    +end;
MPRINT(EM_DIAGRAM):   end;
224671    +else
224672    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
224673    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
224674    +end;
MPRINT(EM_DIAGRAM):   end;
224675    +end;
MPRINT(EM_DIAGRAM):   end;
224676    +
224677    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224678    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
224679    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224680    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
224681    +
224682    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
224683    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
224684    +end;
MPRINT(EM_DIAGRAM):   end;
224685    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
224686    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
224687    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
224688    +end;
MPRINT(EM_DIAGRAM):   end;
224689    +else
224690    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
224691    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
224692    +end;
MPRINT(EM_DIAGRAM):   end;
224693    +else
224694    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
224695    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
224696    +end;
MPRINT(EM_DIAGRAM):   end;
224697    +else
224698    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
224699    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
224700    +end;
MPRINT(EM_DIAGRAM):   end;
224701    +end;
MPRINT(EM_DIAGRAM):   end;
224702    +
224703    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224704    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
224705    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224706    +LABEL GRP_Recency =
224707    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
224708    +
224709    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
224710    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
224711    +end;
MPRINT(EM_DIAGRAM):   end;
224712    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
224713    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
224714    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
224715    +end;
MPRINT(EM_DIAGRAM):   end;
224716    +else
224717    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
224718    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
224719    +end;
MPRINT(EM_DIAGRAM):   end;
224720    +else
224721    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
224722    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
224723    +end;
MPRINT(EM_DIAGRAM):   end;
224724    +else
224725    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
224726    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
224727    +end;
MPRINT(EM_DIAGRAM):   end;
224728    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
224729     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
224730     quit;
224731     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
224732     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
224733     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
224734     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
224735     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
224736     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224737     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
224738     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
224739     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
224740     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
224741     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
224742     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224743     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
224744     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
224745     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
224746     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224747     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
224748     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
224749     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
224750     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
224751     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224752     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
224753     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
224754     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
224755     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
224756     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
224757     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
224757   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.
 
224758     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224759     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
224760     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 820 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224761     filename _pref
224761   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
224762     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
224763     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
224764    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224765    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
224766    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
224767    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
224768    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
224769    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
224770     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
224771     quit;
224772     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
224773     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
224774     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
224775     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
224776     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
224777     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224778     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
224779     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
224780     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
224781     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
224782     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
224783     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224784     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
224785     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
224786     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
224787     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224788     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
224789     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
224790     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
224791     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
224792     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224793     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
224794     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
224795     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
224796     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224797     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
224798     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
224798   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
224799     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224800     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
224801     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 824 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224802     filename _pref
224802   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
224803     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
224804     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
224805    +
224806    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
224807    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
224807   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
224808    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
224809    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
224810    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
224811    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
224812    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
224813     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
224814     quit;
224815     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
224816     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
224817     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
224818     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
224819     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
224820     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224821     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
224822     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
224823     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224824     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
224825     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
224826     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224827     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
224828     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
224829     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
224830     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224831     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
224832     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224833     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
224834     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
224835     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
224836     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
224837     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
224838     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
224839     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224840     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
224841     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
224841   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
224842     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224843     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
224844     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 863 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224845     filename _pref
224845   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
224846     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
224847     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
224848    +
224849    +
224850    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
224851    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
224852    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
224853    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
224854    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
224855    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
224856    +
224857    +
224858    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
224859    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
224860    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
224861    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
224862    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
224863    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
224864    +
224865    +
224866    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
224867    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
224868    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
224869    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
224870    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
224871    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
224872    +
224873    +
224874    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
224875    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
224876    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
224877    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
224878    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
224879    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
224880    +
224881    +
224882    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
224883    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
224884    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
224885    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
224886    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
224887    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
224888    +
224889    +
224890    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
224891    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
224892    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
224893    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
224894    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
224895    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
224896    +
224897    +
224898    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
224899    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
224900    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
224901    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
224902    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
224903    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
224904    +
224905    +
224906    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
224907    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
224908    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
224909    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
224910    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
224911    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
224912    +if
224913    +_FILTERNORM1 not in ( '.')
224914    + and
224915    +_FILTERNORM2 not in ( '.')
224916    + and
224917    +_FILTERNORM3 not in ( '.')
224918    + and
224919    +_FILTERNORM4 not in ( '.')
224920    + and
224921    +_FILTERNORM5 not in ( '.')
224922    + and
224923    +_FILTERNORM6 not in ( '.')
224924    + and
224925    +_FILTERNORM7 not in ( ' ')
224926    + and
224927    +_FILTERNORM8 not in ( ' ')
224928    +and
224929    +( Dt_Customer ne .)
224930    +and ( Income ne . and (Income<=107000))
224931    +and ( Kidhome ne .)
224932    +and ( MntFishProducts ne .)
224933    +and ( MntFruits ne .)
224934    +and ( MntGoldProds ne .)
224935    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
224936    +and ( MntSweetProducts ne .)
224937    +and ( MntWines ne .)
224938    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
224939    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
224940    +and ( NumStorePurchases ne .)
224941    +and ( NumWebPurchases ne .)
224942    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
224943    +and ( Recency ne .)
224944    +and ( Teenhome ne .)
224945    +and ( Year_Birth ne .)
224946    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
224947    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
224948    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
224949    +end;
MPRINT(EM_DIAGRAM):   end;
224950    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
224951    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
224952     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
224953     quit;
224954     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
224955     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
224956     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
224957     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
224958     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
224959     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224960     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
224961     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
224962     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224963     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
224964     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
224965     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224966     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
224967     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
224968     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
224969     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224970     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
224971     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
224972     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
224973     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
224974     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224975     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
224976     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
224977     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
224978     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
224979     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
224980     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
224980   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
224981     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224982     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
224983     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 929 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
224984     %macro varDept(fcmpdata=,id=);
224985     %global nobs&id scoreFlag&id;
224986     %let scoreFlag&id = 0;
224987     %if &id=1 or ^&fcmpStart %then %do;
224988     proc sort data=&fcmpdata out=_temp&id nodupkey;
224989     by NAME;
224990     where id=&id and LHS in( %let j=1;
224991     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
224992     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
224993     "&var" %let j = %eval(&j+1);
224994     %end;
224995     );
224996     run;
224997     %let dsid = %sysfunc(open(_temp&id));
224998     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
224999     %let dsid = %sysfunc(close(&dsid));
225000     %if &&nobs&id %then %do;
225001     %let scoreFlag&id = 1;
225002     %let fcmpStart = 1;
225003     %end;
225004     %else %let fcmpStart = 0;
225005     %end;
225006     %else %do;
225007     proc sort data=&fcmpdata out=_tempid;
225008     where id=&id;
225009     by LHS;
225010     run;
225011     %let dsid = %sysfunc(open(_tempid));
225012     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
225013     %let dsid = %sysfunc(close(&dsid));
225014     %if ^&&nobs&id %then %do;
225015     proc datasets lib=work nolist;
225016     delete _tempid;
225017     run;
225018     quit;
225019     %end;
225020     %else %do;
225021     data _tempAll;
225022     set %let j=%eval(&id-1);
225023     %do x=1 %to &j;
225024     %if &&nobs&x %then %do;
225025     _temp&x %end;
225026     %end;
225027     ;
225028     run;
225029     proc sql;
225030     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
225030   ! work._tempid p2 where p.name=p2.lhs;
225031     quit;
225032     data _temp&id;
225033     set _temp&id;
225034     where LHS ne '' and NAME ne '' and Node ne '';
225035     run;
225036     proc datasets lib=work nolist;
225037     delete _tempAll;
225038     run;
225039     %let dsid = %sysfunc(open(_temp&id));
225040     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
225041     %let dsid = %sysfunc(close(&dsid));
225042     %if ^&&nobs&id %then %do;
225043     proc datasets lib=work nolist;
225044     delete _temp&id;
225045     run;
225046     quit;
225047     %end;
225048     %else %do;
225049     %let scoreFlag&id = 1;
225050     data _temp&id;
225051     set _temp&id;
225052     where LHS ne NAME and node ne '';
225053     run;
225054     %let dsid = %sysfunc(open(_temp&id));
225055     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
225056     %let dsid = %sysfunc(close(&dsid));
225057     %if ^&&nobs&id %then %do;
225058     proc datasets lib=work nolist;
225059     delete _temp&id;
225060     run;
225061     quit;
225062     %end;
225063     %else %do;
225064     proc sort data=_temp&id nodupkey;
225065     by LHS NAME;
225066     run;
225067     %end;
225068     %end;
225069     %end;
225070     %end;
225071     %mend varDept;
225072     %macro optCode(outdata=fcmpdata);
225073     %global fcmpStart;
225074     %let fcmpStart = 0;
225075     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
225076     %let NumNodes=9;
225077     %do k=1 %to &NumNodes;
225078     %vardept(fcmpdata=&outdata, id=&k);
225079     %end;
225080     %mend optCode;
225081     %optcode(outData=EMWS8.Ensmbl18_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 49 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
225082     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
225083     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
225084     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
225085     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
225086     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
225087     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
225088     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
225089     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
225090     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
225091     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
225091   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
225092     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
225093     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
225094     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
225095     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
225096     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
225097     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
225098     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
225099     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
225100     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
225101     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
225102     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
225103     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
225104     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
225105     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
225105   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.
 
225106     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
225107     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
225108     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
225109     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
225110     filename _pref
225110   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMPUBLISHSCORE.sas";
225111     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
225112     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural26\EMPUBLISHSCORE.sas.
225113    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
225114    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
225115    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
225116    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
225117    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
225118    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
225119    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
225120    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
225121    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
225122    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
225123    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
225124    +LENGTH _WARN_ $4
225125    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
225126    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
225127    +
225128    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
225129    +
225130    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
225131    +
225132    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
225133    +
225134    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
225135    +
225136    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
225137    +
225138    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
225139    +
225140    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
225141    +
225142    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
225143    +
225144    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
225145    +
225146    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
225147    +
225148    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
225149    +
225150    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
225151    +
225152    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
225153    +
225154    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
225155    +
225156    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
225157    +
225158    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
225159    +
225160    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
225161    +
225162    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
225163    +
225164    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
225165    +
225166    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
225167    +
225168    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
225169    +
225170    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
225171    +
225172    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
225173    +
225174    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
225175    +
225176    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
225177    +
225178    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
225179    +
225180    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
225181    +
225182    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
225183    +
225184    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
225185    +
225186    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
225187    +
225188    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
225189    +
225190    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
225191    +
225192    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
225193    +
225194    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
225195    +
225196    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
225197    +
225198    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
225199    +
225200    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
225201    +
225202    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
225203    +
225204    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
225205    +
225206    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
225207    +
225208    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
225209    +
225210    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
225211    +
225212    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
225213    +
225214    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
225215    +
225216    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
225217    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
225218    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
225219    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
225220    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
225221    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225222    +end;
MPRINT(EM_DIAGRAM):   end;
225223    +else do;
MPRINT(EM_DIAGRAM):   else do;
225224    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
225225    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
225226    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
225227    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
225228    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
225229    +   end;
MPRINT(EM_DIAGRAM):   end;
225230    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
225231    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
225232    +   end;
MPRINT(EM_DIAGRAM):   end;
225233    +   else do;
MPRINT(EM_DIAGRAM):   else do;
225234    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
225235    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
225236    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225237    +   end;
MPRINT(EM_DIAGRAM):   end;
225238    +end;
MPRINT(EM_DIAGRAM):   end;
225239    +
225240    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
225241    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
225242    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
225243    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
225244    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
225245    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
225246    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
225247    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225248    +end;
MPRINT(EM_DIAGRAM):   end;
225249    +else do;
MPRINT(EM_DIAGRAM):   else do;
225250    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
225251    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
225252    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
225253    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
225254    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
225255    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
225256    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
225257    +   end;
MPRINT(EM_DIAGRAM):   end;
225258    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
225259    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
225260    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
225261    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
225262    +   end;
MPRINT(EM_DIAGRAM):   end;
225263    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
225264    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
225265    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
225266    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
225267    +   end;
MPRINT(EM_DIAGRAM):   end;
225268    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
225269    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
225270    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
225271    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
225272    +   end;
MPRINT(EM_DIAGRAM):   end;
225273    +   else do;
MPRINT(EM_DIAGRAM):   else do;
225274    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
225275    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
225276    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
225277    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
225278    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225279    +   end;
MPRINT(EM_DIAGRAM):   end;
225280    +end;
MPRINT(EM_DIAGRAM):   end;
225281    +
225282    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
225283    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
225284    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
225285    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
225286    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
225287    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
225288    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
225289    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225290    +end;
MPRINT(EM_DIAGRAM):   end;
225291    +else do;
MPRINT(EM_DIAGRAM):   else do;
225292    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
225293    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
225294    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
225295    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
225296    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
225297    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
225298    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
225299    +   end;
MPRINT(EM_DIAGRAM):   end;
225300    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
225301    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
225302    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
225303    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
225304    +   end;
MPRINT(EM_DIAGRAM):   end;
225305    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
225306    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
225307    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
225308    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
225309    +   end;
MPRINT(EM_DIAGRAM):   end;
225310    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
225311    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
225312    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
225313    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
225314    +   end;
MPRINT(EM_DIAGRAM):   end;
225315    +   else do;
MPRINT(EM_DIAGRAM):   else do;
225316    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
225317    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
225318    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
225319    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
225320    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225321    +   end;
MPRINT(EM_DIAGRAM):   end;
225322    +end;
MPRINT(EM_DIAGRAM):   end;
225323    +
225324    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
225325    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
225326    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
225327    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
225328    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
225329    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
225330    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
225331    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225332    +end;
MPRINT(EM_DIAGRAM):   end;
225333    +else do;
MPRINT(EM_DIAGRAM):   else do;
225334    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
225335    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
225336    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
225337    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
225338    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
225339    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
225340    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
225341    +   end;
MPRINT(EM_DIAGRAM):   end;
225342    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
225343    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
225344    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
225345    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
225346    +   end;
MPRINT(EM_DIAGRAM):   end;
225347    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
225348    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
225349    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
225350    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
225351    +   end;
MPRINT(EM_DIAGRAM):   end;
225352    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
225353    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
225354    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
225355    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
225356    +   end;
MPRINT(EM_DIAGRAM):   end;
225357    +   else do;
MPRINT(EM_DIAGRAM):   else do;
225358    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
225359    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
225360    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
225361    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
225362    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225363    +   end;
MPRINT(EM_DIAGRAM):   end;
225364    +end;
MPRINT(EM_DIAGRAM):   end;
225365    +
225366    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
225367    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
225368    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
225369    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
225370    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
225371    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
225372    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
225373    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225374    +end;
MPRINT(EM_DIAGRAM):   end;
225375    +else do;
MPRINT(EM_DIAGRAM):   else do;
225376    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
225377    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
225378    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
225379    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
225380    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
225381    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
225382    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
225383    +   end;
MPRINT(EM_DIAGRAM):   end;
225384    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
225385    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
225386    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
225387    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
225388    +   end;
MPRINT(EM_DIAGRAM):   end;
225389    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
225390    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
225391    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
225392    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
225393    +   end;
MPRINT(EM_DIAGRAM):   end;
225394    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
225395    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
225396    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
225397    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
225398    +   end;
MPRINT(EM_DIAGRAM):   end;
225399    +   else do;
MPRINT(EM_DIAGRAM):   else do;
225400    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
225401    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
225402    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
225403    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
225404    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225405    +   end;
MPRINT(EM_DIAGRAM):   end;
225406    +end;
MPRINT(EM_DIAGRAM):   end;
225407    +
225408    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
225409    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
225410    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
225411    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
225412    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
225413    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
225414    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
225415    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225416    +end;
MPRINT(EM_DIAGRAM):   end;
225417    +else do;
MPRINT(EM_DIAGRAM):   else do;
225418    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
225419    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
225420    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
225421    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
225422    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
225423    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
225424    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
225425    +   end;
MPRINT(EM_DIAGRAM):   end;
225426    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
225427    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
225428    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
225429    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
225430    +   end;
MPRINT(EM_DIAGRAM):   end;
225431    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
225432    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
225433    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
225434    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
225435    +   end;
MPRINT(EM_DIAGRAM):   end;
225436    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
225437    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
225438    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
225439    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
225440    +   end;
MPRINT(EM_DIAGRAM):   end;
225441    +   else do;
MPRINT(EM_DIAGRAM):   else do;
225442    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
225443    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
225444    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
225445    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
225446    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225447    +   end;
MPRINT(EM_DIAGRAM):   end;
225448    +end;
MPRINT(EM_DIAGRAM):   end;
225449    +
225450    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
225451    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
225452    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
225453    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
225454    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
225455    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
225456    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
225457    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225458    +end;
MPRINT(EM_DIAGRAM):   end;
225459    +else do;
MPRINT(EM_DIAGRAM):   else do;
225460    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
225461    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
225462    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
225463    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
225464    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
225465    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
225466    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
225467    +   end;
MPRINT(EM_DIAGRAM):   end;
225468    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
225469    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
225470    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
225471    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
225472    +   end;
MPRINT(EM_DIAGRAM):   end;
225473    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
225474    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
225475    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
225476    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
225477    +   end;
MPRINT(EM_DIAGRAM):   end;
225478    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
225479    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
225480    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
225481    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
225482    +   end;
MPRINT(EM_DIAGRAM):   end;
225483    +   else do;
MPRINT(EM_DIAGRAM):   else do;
225484    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
225485    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
225486    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
225487    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
225488    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225489    +   end;
MPRINT(EM_DIAGRAM):   end;
225490    +end;
MPRINT(EM_DIAGRAM):   end;
225491    +
225492    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
225493    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
225494    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
225495    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
225496    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
225497    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
225498    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
225499    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225500    +end;
MPRINT(EM_DIAGRAM):   end;
225501    +else do;
MPRINT(EM_DIAGRAM):   else do;
225502    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
225503    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
225504    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
225505    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
225506    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
225507    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
225508    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
225509    +   end;
MPRINT(EM_DIAGRAM):   end;
225510    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
225511    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
225512    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
225513    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
225514    +   end;
MPRINT(EM_DIAGRAM):   end;
225515    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
225516    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
225517    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
225518    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
225519    +   end;
MPRINT(EM_DIAGRAM):   end;
225520    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
225521    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
225522    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
225523    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
225524    +   end;
MPRINT(EM_DIAGRAM):   end;
225525    +   else do;
MPRINT(EM_DIAGRAM):   else do;
225526    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
225527    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
225528    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
225529    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
225530    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225531    +   end;
MPRINT(EM_DIAGRAM):   end;
225532    +end;
MPRINT(EM_DIAGRAM):   end;
225533    +
225534    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
225535    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
225536    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
225537    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
225538    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
225539    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
225540    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225541    +end;
MPRINT(EM_DIAGRAM):   end;
225542    +else do;
MPRINT(EM_DIAGRAM):   else do;
225543    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
225544    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
225545    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
225546    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
225547    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
225548    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
225549    +   end;
MPRINT(EM_DIAGRAM):   end;
225550    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
225551    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
225552    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
225553    +   end;
MPRINT(EM_DIAGRAM):   end;
225554    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
225555    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
225556    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
225557    +   end;
MPRINT(EM_DIAGRAM):   end;
225558    +   else do;
MPRINT(EM_DIAGRAM):   else do;
225559    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
225560    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
225561    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
225562    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225563    +   end;
MPRINT(EM_DIAGRAM):   end;
225564    +end;
MPRINT(EM_DIAGRAM):   end;
225565    +
225566    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
225567    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
225568    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
225569    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
225570    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
225571    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
225572    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
225573    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225574    +end;
MPRINT(EM_DIAGRAM):   end;
225575    +else do;
MPRINT(EM_DIAGRAM):   else do;
225576    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
225577    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
225578    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
225579    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
225580    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
225581    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
225582    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
225583    +   end;
MPRINT(EM_DIAGRAM):   end;
225584    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
225585    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
225586    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
225587    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
225588    +   end;
MPRINT(EM_DIAGRAM):   end;
225589    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
225590    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
225591    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
225592    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
225593    +   end;
MPRINT(EM_DIAGRAM):   end;
225594    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
225595    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
225596    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
225597    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
225598    +   end;
MPRINT(EM_DIAGRAM):   end;
225599    +   else do;
MPRINT(EM_DIAGRAM):   else do;
225600    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
225601    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
225602    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
225603    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
225604    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225605    +   end;
MPRINT(EM_DIAGRAM):   end;
225606    +end;
MPRINT(EM_DIAGRAM):   end;
225607    +
225608    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
225609    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
225610    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
225611    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
225612    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
225613    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
225614    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
225615    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225616    +end;
MPRINT(EM_DIAGRAM):   end;
225617    +else do;
MPRINT(EM_DIAGRAM):   else do;
225618    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
225619    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
225620    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
225621    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
225622    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
225623    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
225624    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
225625    +   end;
MPRINT(EM_DIAGRAM):   end;
225626    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
225627    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
225628    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
225629    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
225630    +   end;
MPRINT(EM_DIAGRAM):   end;
225631    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
225632    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
225633    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
225634    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
225635    +   end;
MPRINT(EM_DIAGRAM):   end;
225636    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
225637    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
225638    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
225639    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
225640    +   end;
MPRINT(EM_DIAGRAM):   end;
225641    +   else do;
MPRINT(EM_DIAGRAM):   else do;
225642    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
225643    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
225644    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
225645    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
225646    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225647    +   end;
MPRINT(EM_DIAGRAM):   end;
225648    +end;
MPRINT(EM_DIAGRAM):   end;
225649    +
225650    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
225651    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
225652    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
225653    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
225654    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
225655    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
225656    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
225657    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225658    +end;
MPRINT(EM_DIAGRAM):   end;
225659    +else do;
MPRINT(EM_DIAGRAM):   else do;
225660    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
225661    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
225662    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
225663    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
225664    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
225665    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
225666    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
225667    +   end;
MPRINT(EM_DIAGRAM):   end;
225668    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
225669    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
225670    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
225671    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
225672    +   end;
MPRINT(EM_DIAGRAM):   end;
225673    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
225674    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
225675    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
225676    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
225677    +   end;
MPRINT(EM_DIAGRAM):   end;
225678    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
225679    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
225680    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
225681    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
225682    +   end;
MPRINT(EM_DIAGRAM):   end;
225683    +   else do;
MPRINT(EM_DIAGRAM):   else do;
225684    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
225685    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
225686    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
225687    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
225688    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225689    +   end;
MPRINT(EM_DIAGRAM):   end;
225690    +end;
MPRINT(EM_DIAGRAM):   end;
225691    +
225692    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
225693    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
225694    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
225695    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
225696    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
225697    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
225698    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
225699    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225700    +end;
MPRINT(EM_DIAGRAM):   end;
225701    +else do;
MPRINT(EM_DIAGRAM):   else do;
225702    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
225703    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
225704    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
225705    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
225706    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
225707    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
225708    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
225709    +   end;
MPRINT(EM_DIAGRAM):   end;
225710    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
225711    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
225712    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
225713    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
225714    +   end;
MPRINT(EM_DIAGRAM):   end;
225715    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
225716    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
225717    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
225718    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
225719    +   end;
MPRINT(EM_DIAGRAM):   end;
225720    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
225721    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
225722    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
225723    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
225724    +   end;
MPRINT(EM_DIAGRAM):   end;
225725    +   else do;
MPRINT(EM_DIAGRAM):   else do;
225726    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
225727    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
225728    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
225729    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
225730    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225731    +   end;
MPRINT(EM_DIAGRAM):   end;
225732    +end;
MPRINT(EM_DIAGRAM):   end;
225733    +
225734    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
225735    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
225736    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
225737    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
225738    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
225739    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
225740    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
225741    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225742    +end;
MPRINT(EM_DIAGRAM):   end;
225743    +else do;
MPRINT(EM_DIAGRAM):   else do;
225744    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
225745    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
225746    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
225747    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
225748    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
225749    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
225750    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
225751    +   end;
MPRINT(EM_DIAGRAM):   end;
225752    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
225753    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
225754    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
225755    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
225756    +   end;
MPRINT(EM_DIAGRAM):   end;
225757    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
225758    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
225759    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
225760    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
225761    +   end;
MPRINT(EM_DIAGRAM):   end;
225762    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
225763    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
225764    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
225765    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
225766    +   end;
MPRINT(EM_DIAGRAM):   end;
225767    +   else do;
MPRINT(EM_DIAGRAM):   else do;
225768    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
225769    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
225770    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
225771    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
225772    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225773    +   end;
MPRINT(EM_DIAGRAM):   end;
225774    +end;
MPRINT(EM_DIAGRAM):   end;
225775    +
225776    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
225777    +*** Checking missing input Interval
225778    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
225779    +
225780    +IF NMISS(
225781    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
225782    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
225783    +
225784    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
225785    +END;
MPRINT(EM_DIAGRAM):   END;
225786    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
225787    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
225788    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
225789    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
225790    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
225791    +END;
MPRINT(EM_DIAGRAM):   END;
225792    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
225793    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
225794    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
225795    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
225796    +END;
MPRINT(EM_DIAGRAM):   END;
225797    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
225798    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
225799    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
225800    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
225801    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
225802    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
225803    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
225804    +   P_DepVar1  =     0.19741981116929 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.19741981116929 * S_Year_Birth ;
225805    +   P_DepVar1  = P_DepVar1  +    -1.04029441471903 * GRP_AcceptedCmp52
225806    +          +     1.55639377678382 * GRP_Frq2  +     0.31938212279872 * GRP_Frq3
225807    +          +    -0.51953925921981 * GRP_Frq4  +     0.69747847384334 *
225808    +        GRP_Income2  +     0.68377449690467 * GRP_Income3
225809    +          +    -0.69559233910784 * GRP_Income4  +    -0.33403886861179 *
225810    +        GRP_Mnt2  +    -0.23948445463576 * GRP_Mnt3  +     0.22705363969173 *
225811    +        GRP_Mnt4  +      0.5581826092154 * GRP_MntFishProducts2
225812    +          +     0.11895902038445 * GRP_MntFishProducts3
225813    +          +     -0.0194508409368 * GRP_MntFishProducts4
225814    +          +    -0.27172158371684 * GRP_MntGoldProds2
225815    +          +    -0.06617094209943 * GRP_MntGoldProds3
225816    +          +     0.04665050332743 * GRP_MntGoldProds4
225817    +          +    -0.97879858925028 * GRP_MntMeatProducts2
225818    +          +    -0.16953024357929 * GRP_MntMeatProducts3
225819    +          +     0.36702521764699 * GRP_MntMeatProducts4
225820    +          +     0.66896729653839 * GRP_MntWines2  +     0.41828147331708 *
225821    +        GRP_MntWines3  +    -0.39747979825201 * GRP_MntWines4
225822    +          +    -0.78725283014847 * GRP_NumCatalogPurchases3
225823    +          +     0.03702534142798 * GRP_NumCatalogPurchases4
225824    +          +    -1.86131730329435 * GRP_NumDistPurchases2
225825    +          +     -0.1744815262149 * GRP_NumDistPurchases3
225826    +          +     0.29974863559738 * GRP_NumDistPurchases4
225827    +          +     0.08237783693138 * GRP_NumWebPurchases2
225828    +          +     0.08904902237334 * GRP_NumWebPurchases3
225829    +          +     0.01729681908858 * GRP_NumWebPurchases4
225830    +          +    -0.55907537974858 * GRP_RFMstat2  +    -0.19529268587261 *
225831    +        GRP_RFMstat3  +     0.03932842736914 * GRP_RFMstat4
225832    +          +     0.24491355758464 * GRP_RMntFrq2  +     0.27364945694495 *
225833    +        GRP_RMntFrq3  +    -0.64678260362233 * GRP_RMntFrq4
225834    +          +     1.49706726643373 * GRP_Recency2  +     0.20083168709986 *
225835    +        GRP_Recency3  +    -0.57834308365674 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -1.04029441471903 * GRP_AcceptedCmp52 +
1.55639377678382 * GRP_Frq2 + 0.31938212279872 * GRP_Frq3 + -0.51953925921981 * GRP_Frq4 +
0.69747847384334 * GRP_Income2 + 0.68377449690467 * GRP_Income3 + -0.69559233910784 *
GRP_Income4 + -0.33403886861179 * GRP_Mnt2 + -0.23948445463576 * GRP_Mnt3 + 0.22705363969173 *
GRP_Mnt4 + 0.5581826092154 * GRP_MntFishProducts2 + 0.11895902038445 * GRP_MntFishProducts3 +
-0.0194508409368 * GRP_MntFishProducts4 + -0.27172158371684 * GRP_MntGoldProds2 +
-0.06617094209943 * GRP_MntGoldProds3 + 0.04665050332743 * GRP_MntGoldProds4 +
-0.97879858925028 * GRP_MntMeatProducts2 + -0.16953024357929 * GRP_MntMeatProducts3 +
0.36702521764699 * GRP_MntMeatProducts4 + 0.66896729653839 * GRP_MntWines2 + 0.41828147331708
* GRP_MntWines3 + -0.39747979825201 * GRP_MntWines4 + -0.78725283014847 *
GRP_NumCatalogPurchases3 + 0.03702534142798 * GRP_NumCatalogPurchases4 + -1.86131730329435 *
GRP_NumDistPurchases2 + -0.1744815262149 * GRP_NumDistPurchases3 + 0.29974863559738 *
GRP_NumDistPurchases4 + 0.08237783693138 * GRP_NumWebPurchases2 + 0.08904902237334 *
GRP_NumWebPurchases3 + 0.01729681908858 * GRP_NumWebPurchases4 + -0.55907537974858 *
GRP_RFMstat2 + -0.19529268587261 * GRP_RFMstat3 + 0.03932842736914 * GRP_RFMstat4 +
0.24491355758464 * GRP_RMntFrq2 + 0.27364945694495 * GRP_RMntFrq3 + -0.64678260362233 *
GRP_RMntFrq4 + 1.49706726643373 * GRP_Recency2 + 0.20083168709986 * GRP_Recency3 +
-0.57834308365674 * GRP_Recency4 ;
225836    +   P_DepVar1  =    -1.16466009831369 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.16466009831369 + P_DepVar1 ;
225837    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
225838    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
225839    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
225840    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
225841    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
225842    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
225843    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
225844    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
225845    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
225846    +END;
MPRINT(EM_DIAGRAM):   END;
225847    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
225848    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
225849    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
225850    +END;
MPRINT(EM_DIAGRAM):   END;
225851    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
225852    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
225853    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
225854    +END;
MPRINT(EM_DIAGRAM):   END;
225855    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
225856    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
225857    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
225858    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
225859    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
225860    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
225861    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
225862    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
225863    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
225864    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
225865    +END;
MPRINT(EM_DIAGRAM):   END;
225866    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
225867    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
225868    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
225869    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
225870     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
225871     quit;
225872     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
225873     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
225874     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
225875     retain ID 2 Node "AutoNeural26";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural26";
225876     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
225877     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1290 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1290 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
225878     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
225879     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
225880     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1290 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1290 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
225881     proc sort data=EMWS8.AutoNeural26_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural26_variableset out=_temp2(keep=NAME
CREATOR);
225882     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
225883     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.AUTONEURAL26_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
225884     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
225885     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
225886     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
225887     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 48 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
225888     proc contents data=EMWS8.AutoNeural26_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural26_train out=_meta(keep=NAME) noprint;
225889     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
225890     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
225891     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
225892     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 67 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
225893     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
225894     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
225895     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
225896     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 67 observations read from the data set WORK._META.
NOTE: There were 48 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 67 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
225897     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
225898     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
225898   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 775 rows and 5 columns.
 
225899     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
225900     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
225901     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 775 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 775 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
225902     filename _pref
225902   ! "C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas";
225903     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
225904     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\BINNING\EMPUBLISHSCORE.sas.
225905    +length _UFormat $200;
MPRINT(EM_DIAGRAM):   length _UFormat $200;
225906    +drop _UFormat;
MPRINT(EM_DIAGRAM):   drop _UFormat;
225907    +_UFormat='';
MPRINT(EM_DIAGRAM):   _UFormat='';
225908    +
225909    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
225910    +* Variable: AcceptedCmp5;
MPRINT(EM_DIAGRAM):   * Variable: AcceptedCmp5;
225911    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
225912    +LABEL GRP_AcceptedCmp5 =
225913    +'Grouped: AcceptedCmp5';
MPRINT(EM_DIAGRAM):   LABEL GRP_AcceptedCmp5 = 'Grouped: AcceptedCmp5';
225914    +
225915    +_UFormat = put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _UFormat = put(AcceptedCmp5,BEST.);
225916    +%dmnormip(_UFormat);
MPRINT(DMNORMIP):   call dmnorm(_UFormat,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
225917    +if MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   if MISSING(_UFORMAT) then do;
225918    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
225919    +end;
MPRINT(EM_DIAGRAM):   end;
225920    +else if NOT MISSING(_UFORMAT) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(_UFORMAT) then do;
225921    +if (_UFORMAT eq '0'
225922    +) then do;
MPRINT(EM_DIAGRAM):   if (_UFORMAT eq '0' ) then do;
225923    +GRP_AcceptedCmp5 = 2;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 2;
225924    +end;
MPRINT(EM_DIAGRAM):   end;
225925    +else
225926    +if (_UFORMAT eq '1'
225927    +) then do;
MPRINT(EM_DIAGRAM):   else if (_UFORMAT eq '1' ) then do;
225928    +GRP_AcceptedCmp5 = 3;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 3;
225929    +end;
MPRINT(EM_DIAGRAM):   end;
225930    +else do;
MPRINT(EM_DIAGRAM):   else do;
225931    +GRP_AcceptedCmp5 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp5 = 1;
225932    +end;
MPRINT(EM_DIAGRAM):   end;
225933    +end;
MPRINT(EM_DIAGRAM):   end;
225934    +
225935    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
225936    +* Variable: Frq;
MPRINT(EM_DIAGRAM):   * Variable: Frq;
225937    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
225938    +LABEL GRP_Frq = "Grouped: Frq";
MPRINT(EM_DIAGRAM):   LABEL GRP_Frq = "Grouped: Frq";
225939    +
225940    +if MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Frq) then do;
225941    +GRP_Frq = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq = 1;
225942    +end;
MPRINT(EM_DIAGRAM):   end;
225943    +else if NOT MISSING(Frq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Frq) then do;
225944    +if Frq < 6 then do;
MPRINT(EM_DIAGRAM):   if Frq < 6 then do;
225945    +GRP_Frq = 2;
MPRINT(EM_DIAGRAM):   GRP_Frq = 2;
225946    +end;
MPRINT(EM_DIAGRAM):   end;
225947    +else
225948    +if 6 <= Frq AND Frq < 12 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= Frq AND Frq < 12 then do;
225949    +GRP_Frq = 3;
MPRINT(EM_DIAGRAM):   GRP_Frq = 3;
225950    +end;
MPRINT(EM_DIAGRAM):   end;
225951    +else
225952    +if 12 <= Frq AND Frq < 18 then do;
MPRINT(EM_DIAGRAM):   else if 12 <= Frq AND Frq < 18 then do;
225953    +GRP_Frq = 4;
MPRINT(EM_DIAGRAM):   GRP_Frq = 4;
225954    +end;
MPRINT(EM_DIAGRAM):   end;
225955    +else
225956    +if 18 <= Frq then do;
MPRINT(EM_DIAGRAM):   else if 18 <= Frq then do;
225957    +GRP_Frq = 5;
MPRINT(EM_DIAGRAM):   GRP_Frq = 5;
225958    +end;
MPRINT(EM_DIAGRAM):   end;
225959    +end;
MPRINT(EM_DIAGRAM):   end;
225960    +
225961    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
225962    +* Variable: Income;
MPRINT(EM_DIAGRAM):   * Variable: Income;
225963    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
225964    +LABEL GRP_Income =
225965    +'Grouped: Income';
MPRINT(EM_DIAGRAM):   LABEL GRP_Income = 'Grouped: Income';
225966    +
225967    +if MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Income) then do;
225968    +GRP_Income = 1;
MPRINT(EM_DIAGRAM):   GRP_Income = 1;
225969    +end;
MPRINT(EM_DIAGRAM):   end;
225970    +else if NOT MISSING(Income) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Income) then do;
225971    +if Income < 35268 then do;
MPRINT(EM_DIAGRAM):   if Income < 35268 then do;
225972    +GRP_Income = 2;
MPRINT(EM_DIAGRAM):   GRP_Income = 2;
225973    +end;
MPRINT(EM_DIAGRAM):   end;
225974    +else
225975    +if 35268 <= Income AND Income < 52157 then do;
MPRINT(EM_DIAGRAM):   else if 35268 <= Income AND Income < 52157 then do;
225976    +GRP_Income = 3;
MPRINT(EM_DIAGRAM):   GRP_Income = 3;
225977    +end;
MPRINT(EM_DIAGRAM):   end;
225978    +else
225979    +if 52157 <= Income AND Income < 69486 then do;
MPRINT(EM_DIAGRAM):   else if 52157 <= Income AND Income < 69486 then do;
225980    +GRP_Income = 4;
MPRINT(EM_DIAGRAM):   GRP_Income = 4;
225981    +end;
MPRINT(EM_DIAGRAM):   end;
225982    +else
225983    +if 69486 <= Income then do;
MPRINT(EM_DIAGRAM):   else if 69486 <= Income then do;
225984    +GRP_Income = 5;
MPRINT(EM_DIAGRAM):   GRP_Income = 5;
225985    +end;
MPRINT(EM_DIAGRAM):   end;
225986    +end;
MPRINT(EM_DIAGRAM):   end;
225987    +
225988    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
225989    +* Variable: Mnt;
MPRINT(EM_DIAGRAM):   * Variable: Mnt;
225990    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
225991    +LABEL GRP_Mnt = "Grouped: Mnt";
MPRINT(EM_DIAGRAM):   LABEL GRP_Mnt = "Grouped: Mnt";
225992    +
225993    +if MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Mnt) then do;
225994    +GRP_Mnt = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 1;
225995    +end;
MPRINT(EM_DIAGRAM):   end;
225996    +else if NOT MISSING(Mnt) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Mnt) then do;
225997    +if Mnt < 72 then do;
MPRINT(EM_DIAGRAM):   if Mnt < 72 then do;
225998    +GRP_Mnt = 2;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 2;
225999    +end;
MPRINT(EM_DIAGRAM):   end;
226000    +else
226001    +if 72 <= Mnt AND Mnt < 405.5 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= Mnt AND Mnt < 405.5 then do;
226002    +GRP_Mnt = 3;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 3;
226003    +end;
MPRINT(EM_DIAGRAM):   end;
226004    +else
226005    +if 405.5 <= Mnt AND Mnt < 1064 then do;
MPRINT(EM_DIAGRAM):   else if 405.5 <= Mnt AND Mnt < 1064 then do;
226006    +GRP_Mnt = 4;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 4;
226007    +end;
MPRINT(EM_DIAGRAM):   end;
226008    +else
226009    +if 1064 <= Mnt then do;
MPRINT(EM_DIAGRAM):   else if 1064 <= Mnt then do;
226010    +GRP_Mnt = 5;
MPRINT(EM_DIAGRAM):   GRP_Mnt = 5;
226011    +end;
MPRINT(EM_DIAGRAM):   end;
226012    +end;
MPRINT(EM_DIAGRAM):   end;
226013    +
226014    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
226015    +* Variable: MntFishProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntFishProducts;
226016    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
226017    +LABEL GRP_MntFishProducts =
226018    +'Grouped: MntFishProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntFishProducts = 'Grouped: MntFishProducts';
226019    +
226020    +if MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntFishProducts) then do;
226021    +GRP_MntFishProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 1;
226022    +end;
MPRINT(EM_DIAGRAM):   end;
226023    +else if NOT MISSING(MntFishProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntFishProducts) then do;
226024    +if MntFishProducts < 3 then do;
MPRINT(EM_DIAGRAM):   if MntFishProducts < 3 then do;
226025    +GRP_MntFishProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 2;
226026    +end;
MPRINT(EM_DIAGRAM):   end;
226027    +else
226028    +if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= MntFishProducts AND MntFishProducts < 13 then do;
226029    +GRP_MntFishProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 3;
226030    +end;
MPRINT(EM_DIAGRAM):   end;
226031    +else
226032    +if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
MPRINT(EM_DIAGRAM):   else if 13 <= MntFishProducts AND MntFishProducts < 47 then do;
226033    +GRP_MntFishProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 4;
226034    +end;
MPRINT(EM_DIAGRAM):   end;
226035    +else
226036    +if 47 <= MntFishProducts then do;
MPRINT(EM_DIAGRAM):   else if 47 <= MntFishProducts then do;
226037    +GRP_MntFishProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts = 5;
226038    +end;
MPRINT(EM_DIAGRAM):   end;
226039    +end;
MPRINT(EM_DIAGRAM):   end;
226040    +
226041    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
226042    +* Variable: MntGoldProds;
MPRINT(EM_DIAGRAM):   * Variable: MntGoldProds;
226043    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
226044    +LABEL GRP_MntGoldProds =
226045    +'Grouped: MntGoldProds';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntGoldProds = 'Grouped: MntGoldProds';
226046    +
226047    +if MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntGoldProds) then do;
226048    +GRP_MntGoldProds = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 1;
226049    +end;
MPRINT(EM_DIAGRAM):   end;
226050    +else if NOT MISSING(MntGoldProds) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntGoldProds) then do;
226051    +if MntGoldProds < 9 then do;
MPRINT(EM_DIAGRAM):   if MntGoldProds < 9 then do;
226052    +GRP_MntGoldProds = 2;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 2;
226053    +end;
MPRINT(EM_DIAGRAM):   end;
226054    +else
226055    +if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
MPRINT(EM_DIAGRAM):   else if 9 <= MntGoldProds AND MntGoldProds < 25 then do;
226056    +GRP_MntGoldProds = 3;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 3;
226057    +end;
MPRINT(EM_DIAGRAM):   end;
226058    +else
226059    +if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
MPRINT(EM_DIAGRAM):   else if 25 <= MntGoldProds AND MntGoldProds < 59 then do;
226060    +GRP_MntGoldProds = 4;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 4;
226061    +end;
MPRINT(EM_DIAGRAM):   end;
226062    +else
226063    +if 59 <= MntGoldProds then do;
MPRINT(EM_DIAGRAM):   else if 59 <= MntGoldProds then do;
226064    +GRP_MntGoldProds = 5;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds = 5;
226065    +end;
MPRINT(EM_DIAGRAM):   end;
226066    +end;
MPRINT(EM_DIAGRAM):   end;
226067    +
226068    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
226069    +* Variable: MntMeatProducts;
MPRINT(EM_DIAGRAM):   * Variable: MntMeatProducts;
226070    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
226071    +LABEL GRP_MntMeatProducts =
226072    +'Grouped: MntMeatProducts';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntMeatProducts = 'Grouped: MntMeatProducts';
226073    +
226074    +if MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntMeatProducts) then do;
226075    +GRP_MntMeatProducts = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 1;
226076    +end;
MPRINT(EM_DIAGRAM):   end;
226077    +else if NOT MISSING(MntMeatProducts) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntMeatProducts) then do;
226078    +if MntMeatProducts < 17 then do;
MPRINT(EM_DIAGRAM):   if MntMeatProducts < 17 then do;
226079    +GRP_MntMeatProducts = 2;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 2;
226080    +end;
MPRINT(EM_DIAGRAM):   end;
226081    +else
226082    +if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
MPRINT(EM_DIAGRAM):   else if 17 <= MntMeatProducts AND MntMeatProducts < 72 then do;
226083    +GRP_MntMeatProducts = 3;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 3;
226084    +end;
MPRINT(EM_DIAGRAM):   end;
226085    +else
226086    +if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
MPRINT(EM_DIAGRAM):   else if 72 <= MntMeatProducts AND MntMeatProducts < 246 then do;
226087    +GRP_MntMeatProducts = 4;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 4;
226088    +end;
MPRINT(EM_DIAGRAM):   end;
226089    +else
226090    +if 246 <= MntMeatProducts then do;
MPRINT(EM_DIAGRAM):   else if 246 <= MntMeatProducts then do;
226091    +GRP_MntMeatProducts = 5;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts = 5;
226092    +end;
MPRINT(EM_DIAGRAM):   end;
226093    +end;
MPRINT(EM_DIAGRAM):   end;
226094    +
226095    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
226096    +* Variable: MntWines;
MPRINT(EM_DIAGRAM):   * Variable: MntWines;
226097    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
226098    +LABEL GRP_MntWines =
226099    +'Grouped: MntWines';
MPRINT(EM_DIAGRAM):   LABEL GRP_MntWines = 'Grouped: MntWines';
226100    +
226101    +if MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   if MISSING(MntWines) then do;
226102    +GRP_MntWines = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 1;
226103    +end;
MPRINT(EM_DIAGRAM):   end;
226104    +else if NOT MISSING(MntWines) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(MntWines) then do;
226105    +if MntWines < 24 then do;
MPRINT(EM_DIAGRAM):   if MntWines < 24 then do;
226106    +GRP_MntWines = 2;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 2;
226107    +end;
MPRINT(EM_DIAGRAM):   end;
226108    +else
226109    +if 24 <= MntWines AND MntWines < 183.5 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= MntWines AND MntWines < 183.5 then do;
226110    +GRP_MntWines = 3;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 3;
226111    +end;
MPRINT(EM_DIAGRAM):   end;
226112    +else
226113    +if 183.5 <= MntWines AND MntWines < 508 then do;
MPRINT(EM_DIAGRAM):   else if 183.5 <= MntWines AND MntWines < 508 then do;
226114    +GRP_MntWines = 4;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 4;
226115    +end;
MPRINT(EM_DIAGRAM):   end;
226116    +else
226117    +if 508 <= MntWines then do;
MPRINT(EM_DIAGRAM):   else if 508 <= MntWines then do;
226118    +GRP_MntWines = 5;
MPRINT(EM_DIAGRAM):   GRP_MntWines = 5;
226119    +end;
MPRINT(EM_DIAGRAM):   end;
226120    +end;
MPRINT(EM_DIAGRAM):   end;
226121    +
226122    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
226123    +* Variable: NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumCatalogPurchases;
226124    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
226125    +LABEL GRP_NumCatalogPurchases =
226126    +'Grouped: NumCatalogPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumCatalogPurchases = 'Grouped: NumCatalogPurchases';
226127    +
226128    +if MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumCatalogPurchases) then do;
226129    +GRP_NumCatalogPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 1;
226130    +end;
MPRINT(EM_DIAGRAM):   end;
226131    +else if NOT MISSING(NumCatalogPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumCatalogPurchases) then do;
226132    +if NumCatalogPurchases < 0 then do;
MPRINT(EM_DIAGRAM):   if NumCatalogPurchases < 0 then do;
226133    +GRP_NumCatalogPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 2;
226134    +end;
MPRINT(EM_DIAGRAM):   end;
226135    +else
226136    +if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   else if 0 <= NumCatalogPurchases AND NumCatalogPurchases < 2 then do;
226137    +GRP_NumCatalogPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 3;
226138    +end;
MPRINT(EM_DIAGRAM):   end;
226139    +else
226140    +if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumCatalogPurchases AND NumCatalogPurchases < 4 then do;
226141    +GRP_NumCatalogPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 4;
226142    +end;
MPRINT(EM_DIAGRAM):   end;
226143    +else
226144    +if 4 <= NumCatalogPurchases then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumCatalogPurchases then do;
226145    +GRP_NumCatalogPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases = 5;
226146    +end;
MPRINT(EM_DIAGRAM):   end;
226147    +end;
MPRINT(EM_DIAGRAM):   end;
226148    +
226149    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
226150    +* Variable: NumDistPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumDistPurchases;
226151    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
226152    +LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
MPRINT(EM_DIAGRAM):   LABEL GRP_NumDistPurchases = "Grouped: NumDistPurchases";
226153    +
226154    +if MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumDistPurchases) then do;
226155    +GRP_NumDistPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 1;
226156    +end;
MPRINT(EM_DIAGRAM):   end;
226157    +else if NOT MISSING(NumDistPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumDistPurchases) then do;
226158    +if NumDistPurchases < 3 then do;
MPRINT(EM_DIAGRAM):   if NumDistPurchases < 3 then do;
226159    +GRP_NumDistPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 2;
226160    +end;
MPRINT(EM_DIAGRAM):   end;
226161    +else
226162    +if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 3 <= NumDistPurchases AND NumDistPurchases < 6 then do;
226163    +GRP_NumDistPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 3;
226164    +end;
MPRINT(EM_DIAGRAM):   end;
226165    +else
226166    +if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumDistPurchases AND NumDistPurchases < 10 then do;
226167    +GRP_NumDistPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 4;
226168    +end;
MPRINT(EM_DIAGRAM):   end;
226169    +else
226170    +if 10 <= NumDistPurchases then do;
MPRINT(EM_DIAGRAM):   else if 10 <= NumDistPurchases then do;
226171    +GRP_NumDistPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases = 5;
226172    +end;
MPRINT(EM_DIAGRAM):   end;
226173    +end;
MPRINT(EM_DIAGRAM):   end;
226174    +
226175    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
226176    +* Variable: NumWebPurchases;
MPRINT(EM_DIAGRAM):   * Variable: NumWebPurchases;
226177    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
226178    +LABEL GRP_NumWebPurchases =
226179    +'Grouped: NumWebPurchases';
MPRINT(EM_DIAGRAM):   LABEL GRP_NumWebPurchases = 'Grouped: NumWebPurchases';
226180    +
226181    +if MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   if MISSING(NumWebPurchases) then do;
226182    +GRP_NumWebPurchases = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 1;
226183    +end;
MPRINT(EM_DIAGRAM):   end;
226184    +else if NOT MISSING(NumWebPurchases) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(NumWebPurchases) then do;
226185    +if NumWebPurchases < 2 then do;
MPRINT(EM_DIAGRAM):   if NumWebPurchases < 2 then do;
226186    +GRP_NumWebPurchases = 2;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 2;
226187    +end;
MPRINT(EM_DIAGRAM):   end;
226188    +else
226189    +if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
MPRINT(EM_DIAGRAM):   else if 2 <= NumWebPurchases AND NumWebPurchases < 4 then do;
226190    +GRP_NumWebPurchases = 3;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 3;
226191    +end;
MPRINT(EM_DIAGRAM):   end;
226192    +else
226193    +if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
MPRINT(EM_DIAGRAM):   else if 4 <= NumWebPurchases AND NumWebPurchases < 6 then do;
226194    +GRP_NumWebPurchases = 4;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 4;
226195    +end;
MPRINT(EM_DIAGRAM):   end;
226196    +else
226197    +if 6 <= NumWebPurchases then do;
MPRINT(EM_DIAGRAM):   else if 6 <= NumWebPurchases then do;
226198    +GRP_NumWebPurchases = 5;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases = 5;
226199    +end;
MPRINT(EM_DIAGRAM):   end;
226200    +end;
MPRINT(EM_DIAGRAM):   end;
226201    +
226202    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
226203    +* Variable: RFMstat;
MPRINT(EM_DIAGRAM):   * Variable: RFMstat;
226204    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
226205    +LABEL GRP_RFMstat = "Grouped: RFMstat";
MPRINT(EM_DIAGRAM):   LABEL GRP_RFMstat = "Grouped: RFMstat";
226206    +
226207    +if MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RFMstat) then do;
226208    +GRP_RFMstat = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 1;
226209    +end;
MPRINT(EM_DIAGRAM):   end;
226210    +else if NOT MISSING(RFMstat) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RFMstat) then do;
226211    +if RFMstat < 10.34 then do;
MPRINT(EM_DIAGRAM):   if RFMstat < 10.34 then do;
226212    +GRP_RFMstat = 2;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 2;
226213    +end;
MPRINT(EM_DIAGRAM):   end;
226214    +else
226215    +if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
MPRINT(EM_DIAGRAM):   else if 10.34 <= RFMstat AND RFMstat < 128.09 then do;
226216    +GRP_RFMstat = 3;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 3;
226217    +end;
MPRINT(EM_DIAGRAM):   end;
226218    +else
226219    +if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
MPRINT(EM_DIAGRAM):   else if 128.09 <= RFMstat AND RFMstat < 455.22 then do;
226220    +GRP_RFMstat = 4;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 4;
226221    +end;
MPRINT(EM_DIAGRAM):   end;
226222    +else
226223    +if 455.22 <= RFMstat then do;
MPRINT(EM_DIAGRAM):   else if 455.22 <= RFMstat then do;
226224    +GRP_RFMstat = 5;
MPRINT(EM_DIAGRAM):   GRP_RFMstat = 5;
226225    +end;
MPRINT(EM_DIAGRAM):   end;
226226    +end;
MPRINT(EM_DIAGRAM):   end;
226227    +
226228    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
226229    +* Variable: RMntFrq;
MPRINT(EM_DIAGRAM):   * Variable: RMntFrq;
226230    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
226231    +LABEL GRP_RMntFrq = "Grouped: RMntFrq";
MPRINT(EM_DIAGRAM):   LABEL GRP_RMntFrq = "Grouped: RMntFrq";
226232    +
226233    +if MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   if MISSING(RMntFrq) then do;
226234    +GRP_RMntFrq = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 1;
226235    +end;
MPRINT(EM_DIAGRAM):   end;
226236    +else if NOT MISSING(RMntFrq) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(RMntFrq) then do;
226237    +if RMntFrq < 13.25 then do;
MPRINT(EM_DIAGRAM):   if RMntFrq < 13.25 then do;
226238    +GRP_RMntFrq = 2;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 2;
226239    +end;
MPRINT(EM_DIAGRAM):   end;
226240    +else
226241    +if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
MPRINT(EM_DIAGRAM):   else if 13.25 <= RMntFrq AND RMntFrq < 30.4 then do;
226242    +GRP_RMntFrq = 3;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 3;
226243    +end;
MPRINT(EM_DIAGRAM):   end;
226244    +else
226245    +if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
MPRINT(EM_DIAGRAM):   else if 30.4 <= RMntFrq AND RMntFrq < 52.86 then do;
226246    +GRP_RMntFrq = 4;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 4;
226247    +end;
MPRINT(EM_DIAGRAM):   end;
226248    +else
226249    +if 52.86 <= RMntFrq then do;
MPRINT(EM_DIAGRAM):   else if 52.86 <= RMntFrq then do;
226250    +GRP_RMntFrq = 5;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq = 5;
226251    +end;
MPRINT(EM_DIAGRAM):   end;
226252    +end;
MPRINT(EM_DIAGRAM):   end;
226253    +
226254    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
226255    +* Variable: Recency;
MPRINT(EM_DIAGRAM):   * Variable: Recency;
226256    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
226257    +LABEL GRP_Recency =
226258    +'Grouped: Recency';
MPRINT(EM_DIAGRAM):   LABEL GRP_Recency = 'Grouped: Recency';
226259    +
226260    +if MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   if MISSING(Recency) then do;
226261    +GRP_Recency = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency = 1;
226262    +end;
MPRINT(EM_DIAGRAM):   end;
226263    +else if NOT MISSING(Recency) then do;
MPRINT(EM_DIAGRAM):   else if NOT MISSING(Recency) then do;
226264    +if Recency < 24 then do;
MPRINT(EM_DIAGRAM):   if Recency < 24 then do;
226265    +GRP_Recency = 2;
MPRINT(EM_DIAGRAM):   GRP_Recency = 2;
226266    +end;
MPRINT(EM_DIAGRAM):   end;
226267    +else
226268    +if 24 <= Recency AND Recency < 48 then do;
MPRINT(EM_DIAGRAM):   else if 24 <= Recency AND Recency < 48 then do;
226269    +GRP_Recency = 3;
MPRINT(EM_DIAGRAM):   GRP_Recency = 3;
226270    +end;
MPRINT(EM_DIAGRAM):   end;
226271    +else
226272    +if 48 <= Recency AND Recency < 73 then do;
MPRINT(EM_DIAGRAM):   else if 48 <= Recency AND Recency < 73 then do;
226273    +GRP_Recency = 4;
MPRINT(EM_DIAGRAM):   GRP_Recency = 4;
226274    +end;
MPRINT(EM_DIAGRAM):   end;
226275    +else
226276    +if 73 <= Recency then do;
MPRINT(EM_DIAGRAM):   else if 73 <= Recency then do;
226277    +GRP_Recency = 5;
MPRINT(EM_DIAGRAM):   GRP_Recency = 5;
226278    +end;
MPRINT(EM_DIAGRAM):   end;
226279    +end;
MPRINT(EM_DIAGRAM):   end;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
226280     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
226281     quit;
226282     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
226283     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
226284     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
226285     retain ID 3 Node "BINNING";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "BINNING";
226286     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
226287     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226288     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
226289     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
226290     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 16 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226291     proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_variableset out=_temp2(keep=NAME CREATOR);
226292     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
226293     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set EMWS8.BINNING_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226294     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
226295     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
226296     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
226297     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 36 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226298     proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_train out=_meta(keep=NAME) noprint;
226299     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
226300     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
226301     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
226302     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
226303     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
226304     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
226305     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
226306     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 36 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226307     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
226308     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
226308   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 15 rows and 5 columns.
 
226309     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226310     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
226311     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 15 observations read from the data set WORK._TEMPX.
NOTE: 15 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 790 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
226312     filename _pref
226312   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
226313     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
226314     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
226315    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
226316    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
226317    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
226318    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
226319    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
226320    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
226321     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
226322     quit;
226323     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
226324     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
226325     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
226326     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
226327     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
226328     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
226329     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
226330     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
226331     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226332     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
226333     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
226334     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226335     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
226336     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
226337     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
226338     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
226339     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
226340     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
226341     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
226342     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
226343     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226344     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
226345     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
226346     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
226347     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226348     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
226349     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
226349   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
226350     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226351     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
226352     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 794 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226353     filename _pref
226353   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
226354     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
226355     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
226356    +
226357    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
226358    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
226358   !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
226359    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
226360    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
226361    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
226362    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
226363    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
226364     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
226365     quit;
226366     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
226367     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
226368     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
226369     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
226370     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
226371     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226372     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
226373     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
226374     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
226375     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
226376     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
226377     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226378     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
226379     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
226380     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
226381     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226382     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
226383     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
226384     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
226385     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
226386     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226387     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
226388     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
226389     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
226390     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226391     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
226392     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
226392   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
226393     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
226394     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
226395     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 833 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
226396     filename _pref
226396   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
226397     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
226398     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
226399    +
226400    +
226401    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
226402    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
226403    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
226404    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
226405    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
226406    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
226407    +
226408    +
226409    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
226410    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
226411    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
226412    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
226413    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
226414    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
226415    +
226416    +
226417    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
226418    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
226419    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
226420    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
226421    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
226422    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
226423    +
226424    +
226425    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
226426    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
226427    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
226428    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
226429    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
226430    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
226431    +
226432    +
226433    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
226434    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
226435    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
226436    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
226437    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
226438    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
226439    +
226440    +
226441    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
226442    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
226443    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
226444    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
226445    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
226446    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
226447    +
226448    +
226449    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
226450    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
226451    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
226452    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
226453    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
226454    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
226455    +
226456    +
226457    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
226458    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
226459    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
226460    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
226461    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
226462    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
226463    +if
226464    +_FILTERNORM1 not in ( '.')
226465    + and
226466    +_FILTERNORM2 not in ( '.')
226467    + and
226468    +_FILTERNORM3 not in ( '.')
226469    + and
226470    +_FILTERNORM4 not in ( '.')
226471    + and
226472    +_FILTERNORM5 not in ( '.')
226473    + and
226474    +_FILTERNORM6 not in ( '.')
226475    + and
226476    +_FILTERNORM7 not in ( ' ')
226477    + and
226478    +_FILTERNORM8 not in ( ' ')
226479    +and
226480    +( Dt_Customer ne .)
226481    +and ( Income ne . and (Income<=107000))
226482    +and ( Kidhome ne .)
226483    +and ( MntFishProducts ne .)
226484    +and ( MntFruits ne .)
226485    +and ( MntGoldProds ne .)
226486    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
226487    +and ( MntSweetProducts ne .)
226488    +and ( MntWines ne .)
226489    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
226490    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
226491    +and ( NumStorePurchases ne .)
226492    +and ( NumWebPurchases ne .)
226493    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
226494    +and ( Recency ne .)
226495    +and ( Teenhome ne .)
226496    +and ( Year_Birth ne .)
226497    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
226498    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
226499    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
226500    +end;
The SAS System
 
MPRINT(EM_DIAGRAM):   end;
226501    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
226502    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
226503     run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
226504     quit;
226505     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
226506     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
226507     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
226508     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
226509     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
226510     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226511     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
226512     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
226513     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
226514     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
226515     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
226516     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226517     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
226518     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
226519     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
226520     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226521     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
226522     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
226523     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
226524     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
226525     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226526     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
226527     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
226528     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
226529     run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226530     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
226531     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
226531   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
226532     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
226533     proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl18_FCMP data=_tempx;
226534     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL18_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL18_FCMP has 899 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226535     %macro varDept(fcmpdata=,id=);
226536     %global nobs&id scoreFlag&id;
226537     %let scoreFlag&id = 0;
226538     %if &id=1 or ^&fcmpStart %then %do;
226539     proc sort data=&fcmpdata out=_temp&id nodupkey;
226540     by NAME;
226541     where id=&id and LHS in( %let j=1;
226542     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
226543     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
226544     "&var" %let j = %eval(&j+1);
226545     %end;
226546     );
226547     run;
226548     %let dsid = %sysfunc(open(_temp&id));
226549     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
226550     %let dsid = %sysfunc(close(&dsid));
226551     %if &&nobs&id %then %do;
226552     %let scoreFlag&id = 1;
226553     %let fcmpStart = 1;
226554     %end;
226555     %else %let fcmpStart = 0;
226556     %end;
226557     %else %do;
226558     proc sort data=&fcmpdata out=_tempid;
226559     where id=&id;
226560     by LHS;
226561     run;
226562     %let dsid = %sysfunc(open(_tempid));
226563     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
226564     %let dsid = %sysfunc(close(&dsid));
226565     %if ^&&nobs&id %then %do;
226566     proc datasets lib=work nolist;
226567     delete _tempid;
226568     run;
226569     quit;
226570     %end;
226571     %else %do;
226572     data _tempAll;
226573     set %let j=%eval(&id-1);
226574     %do x=1 %to &j;
226575     %if &&nobs&x %then %do;
226576     _temp&x %end;
226577     %end;
226578     ;
226579     run;
226580     proc sql;
226581     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
226581   ! work._tempid p2 where p.name=p2.lhs;
226582     quit;
226583     data _temp&id;
226584     set _temp&id;
226585     where LHS ne '' and NAME ne '' and Node ne '';
226586     run;
226587     proc datasets lib=work nolist;
226588     delete _tempAll;
226589     run;
226590     %let dsid = %sysfunc(open(_temp&id));
226591     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
226592     %let dsid = %sysfunc(close(&dsid));
226593     %if ^&&nobs&id %then %do;
226594     proc datasets lib=work nolist;
226595     delete _temp&id;
226596     run;
226597     quit;
226598     %end;
226599     %else %do;
226600     %let scoreFlag&id = 1;
226601     data _temp&id;
226602     set _temp&id;
226603     where LHS ne NAME and node ne '';
226604     run;
226605     %let dsid = %sysfunc(open(_temp&id));
226606     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
226607     %let dsid = %sysfunc(close(&dsid));
226608     %if ^&&nobs&id %then %do;
226609     proc datasets lib=work nolist;
226610     delete _temp&id;
226611     run;
226612     quit;
226613     %end;
226614     %else %do;
226615     proc sort data=_temp&id nodupkey;
226616     by LHS NAME;
226617     run;
226618     %end;
226619     %end;
226620     %end;
226621     %end;
226622     %mend varDept;
226623     %macro optCode(outdata=fcmpdata);
226624     %global fcmpStart;
226625     %let fcmpStart = 0;
226626     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
226627     %let NumNodes=9;
226628     %do k=1 %to &NumNodes;
226629     %vardept(fcmpdata=&outdata, id=&k);
226630     %end;
226631     %mend optCode;
226632     %optcode(outData=EMWS8.Ensmbl18_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 49 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 17 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 14 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl18_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
226633     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
226634     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
226635     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
226636     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226637     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
226638     set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
226639     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
226640     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226641     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
226642     create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
226642   ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
226643     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
226644     data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
226645     set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
226646     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226647     data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
226648     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
226649     where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
226650     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226651     data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
226652     set EMWS8.BINNING_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_EMSCOREVAR;
226653     where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
226654     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.BINNING_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226655     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
226656     create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
226656   ! EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.BINNING_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 14 rows and 3 columns.
 
226657     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
226658     data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
226659     set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
226660     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ALL_.
NOTE: There were 14 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 15 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226661     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
226662     * Ensmbl18: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Computing metadata for TRAIN data;
226663     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL18_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl18\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl18_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl18_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl18_TRAIN out=WORK.M3ONQLK7 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3ONQLK7;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3ONQLK7(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3ONQLK7;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3ONQLK7;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3OFTCML NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3OFTCML;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3OFTCML;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1VR67GH(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3OFTCML;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3OFTCML;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3OFTCML;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3OFTCML;
MPRINT(EMADVISECOLUMNS):   set WORK.M3OFTCML;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural22_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural22_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl18_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl18";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl18";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl18";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl18";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl18";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl18";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl18";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl18";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl18";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl18";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl18: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl18";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
226983     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
226984     set EMWS8.Ensmbl18_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl18_EMINFO;
226985     where DATA='Ensmbl18' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl18' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
226986     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL18_EMINFO.
      WHERE (DATA='Ensmbl18') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226987     data EMWS8.Ensmbl18_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl18_EMINFO;
226988     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
226989     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
226990     cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL18_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
226994     run;
226995     data EMWS8.Ensmbl18_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl18_EMINFO;
226996     set EMWS8.Ensmbl18_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl18_EMINFO WORK.MODELTEMP_INFO;
226997     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL18_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL18_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
226998     proc sort data = EMWS8.Ensmbl18_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl18_EMINFO NOTHREADS;
226999     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
227000     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL18_EMINFO.
NOTE: The data set EMWS8.ENSMBL18_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
227001     proc sort data = EMWS8.Neural22_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural22_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
227002     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
227003     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.NEURAL22_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
227004     proc sort data = EMWS8.Ensmbl18_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl18_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
227005     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
227006     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL18_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
227007     data EMWS8.Ensmbl18_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl18_EMINFO;
227008     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
227009     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
227010     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL18_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
227011     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
227012     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
227013     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
227014     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: View EMWS8.ENSMBL18_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS8.ENSMBL18_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.34 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                13.34 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2Y_KYA_
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl18\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2Y_KYA_ new;
MPRINT(EM_DIAGRAM):   run;
227038     data EMWS8.Ensmbl18_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl18_EMOUTFIT;
227039     set EMWS8.Ensmbl18_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl18_EMOUTFIT;
227040     length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
227041     label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
227041   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
227042     if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
227043     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL18_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL18_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
227044     proc sort data=EMWS8.Ensmbl18_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl18_EMREPORTFIT nothreads;
227045     by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
227046     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL18_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL18_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
227047     %let _EMwarndup = 0;
227048     %let _EMtargetdup =;
227049     %let _EMASEtargetdup =;
227050     data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
227051     set EMWS8.Ensmbl18_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl18_EMOUTFIT;
227052     if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
227053     call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
227054     call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
227055     call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
227056     end;
MPRINT(EM_DIAGRAM):   end;
227057     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL18_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
227058     proc sort data=EMWS8.Neural21_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural21_CMeta_TRAIN out=WORK.SUBSETINMETA;
227059     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
227060     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 58 observations read from the data set EMWS8.NEURAL21_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 58 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
227061     proc sort data=EMWS8.Ensmbl18_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl18_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
227062     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
227063     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.ENSMBL18_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 48 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
227064     data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
227065     merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
227066     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
227067     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 58 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 48 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 58 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
227068     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
227069     set EMWS8.Ensmbl18_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl18_CMeta_TRAIN;
227070     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
227070   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
227071     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL18_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
227072     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
227073     set EMWS8.Ensmbl18_TRAIN(keep=
227074     F_DepVar
227075     I_DepVar
227076     P_DepVar0
227077     P_DepVar1
227078     R_DepVar0
227079     R_DepVar1
227080     U_DepVar
227081     _WARN_
227082     DepVar
227083     );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl18_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
227084     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: View EMWS8.ENSMBL18_TRAIN.VIEW used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL22_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL18_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.20 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl18_0L2DH35 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl18_0L2DH35;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl18_0L2DH35(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl18_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl18_0L2DH35;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl18_0L2DH35;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl18_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl18_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural21_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0004275653 OVLMAX 0.9634905802 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl18_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl18_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
231350     data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
231351     set EMWS8.Ensmbl18_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl18_CMeta_TRAIN;
231352     where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
231352   ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
231353     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL18_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
231354     data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
231355     set EMWS8.Ensmbl18_VALIDATE(keep=
231356     F_DepVar
231357     I_DepVar
231358     P_DepVar0
231359     P_DepVar1
231360     R_DepVar0
231361     R_DepVar1
231362     U_DepVar
231363     _WARN_
231364     DepVar
231365     );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl18_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
231366     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.BINNING_VALIDATE.
NOTE: View EMWS8.ENSMBL18_VALIDATE.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.NEURAL22_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL18_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl18_2OE935F nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl18_2OE935F;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl18_2OE935F(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl18_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl18_EMCLASSIFICATION WORK.Ensmbl18_2OE935F;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl18_2OE935F;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl18_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl18_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl18_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural21_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.000578536 OVLMAX 0.9579256017 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl18_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl18_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl18_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl18_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
235641     %let _cn = %sysfunc(getoption(CENTER));
235642     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
235643     proc print data=EMWS8.Ensmbl18_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl18_EMREPORTFIT noobs label;
235644     var STAT LABEL TRAIN
235645     VALIDATE
235646     ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
235647     by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
235648     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
235649     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
235650     run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL18_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 59.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
235651     title10;
MPRINT(EM_DIAGRAM):   title10;
235652     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
235653     proc sort data=EMWS8.Ensmbl18_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl18_EMCLASSIFICATION nothreads;
235654     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
235655     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL18_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL18_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
235656     %let _cn = %sysfunc(getoption(CENTER));
235657     options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
235658     proc print data=EMWS8.Ensmbl18_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl18_EMCLASSIFICATION noobs label;
235659     var from into pct_row pct_col count percent
235660     ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
235661     by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
235662     label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
235663     label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
235664     label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
235665     label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
235666     label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
235667     label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
235668     where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
235669     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
235670     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
235671     run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL18_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 60.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
235672     title9;
MPRINT(EM_DIAGRAM):   title9;
235673     title10;
MPRINT(EM_DIAGRAM):   title10;
235674     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
235675     %let _cn = %sysfunc(getoption(CENTER));
235676     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
235677     data EMWS8.Ensmbl18_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl18_EMEVENTREPORT;
235678     length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
235678   ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
235679     label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
235679   !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
235679   ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
235679   ! FALSEEVENT
235680     = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
235680   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
235680   ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
235681        "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
235682     FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
235683     FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
235684     TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
235685     TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
235686     set EMWS8.Ensmbl18_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl18_EMEVENTREPORT;
235687     run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL18_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL18_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
235688     proc print data=EMWS8.Ensmbl18_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl18_EMEVENTREPORT noobs label;
235689     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
235690     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
235691     by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
235692     run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL18_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 61.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
235693     title10;
MPRINT(EM_DIAGRAM):   title10;
235694     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
235695     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
235696     modify Ensmbl18_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl18_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
235697     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
235698     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
235698   ! ;
MPRINT(EM_DIAGRAM):   run;
235699     run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL18_EMRANK.DATA.
235700     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
 
 
235701     %let _cn = %sysfunc(getoption(CENTER));
235702     options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
235703     proc print data=EMWS8.Ensmbl18_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl18_EMRANK label noobs;
235704     var
235705     decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
235706     by
235707     notsorted DATAROLE
235708     notsorted TARGET
235709     notsorted TARGETLABEL
235710     ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
235711     title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
235712     title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
235713     run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL18_EMRANK.
NOTE: The PROCEDURE PRINT printed page 62.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
235714     title10;
MPRINT(EM_DIAGRAM):   title10;
235715     options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
235716     proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
235717     modify Ensmbl18_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl18_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
235718     label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
235718   ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
235719     label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
235719   ! ;
MPRINT(EM_DIAGRAM):   run;
235720     run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL18_EMSCOREDIST.DATA.
235721     quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.17 seconds
      cpu time            0.15 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl18_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
