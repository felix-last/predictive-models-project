*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                16.42 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.42 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                16.42 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2FQRY2M
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2FQRY2M new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.42 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.42 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
1008747    proc freq data=EMWS8.Neural23_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Neural23_VariableSet noprint;
1008748    table ROLE*LEVEL/out=WORK.Neural23META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Neural23META;
1008749    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 51 observations read from the data set EMWS8.NEURAL23_VARIABLESET.
NOTE: The data set WORK.NEURAL23META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1008750    proc print data=WORK.Neural23META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Neural23META label noobs;
1008751    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1008752    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1008752  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1008752  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1008753    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1008754    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1008755    run;
 
NOTE: There were 6 observations read from the data set WORK.NEURAL23META.
NOTE: The PROCEDURE PRINT printed page 710.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1008756    title10;
MPRINT(EM_DIAGRAM):   title10;
1008757    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN EMWS8 BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN EMWS8 BINNING_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.BINNING_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural23_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural23_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.Neural23_DepVar_DD
_TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural23_DepVar_DD
out=EMWS8.Neural23_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
1008804    data WORK.Neural23_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Neural23_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1008805    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1008806    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1008806  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1008806  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1008807       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1008807  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1008807  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1008808    set EMWS8.NEURAL23_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.NEURAL23_DEPVAR_DM( where=(_TYPE_="TARGET"));
1008809    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1008810    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1008811    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1008812    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1008813    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1008814    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1008815    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1008816    end;
MPRINT(EM_DIAGRAM):   end;
1008817    output;
MPRINT(EM_DIAGRAM):   output;
1008818    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL23_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.NEURAL23_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1008819    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1008820    proc print data=WORK.Neural23_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Neural23_EVENT noobs label;
1008821    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1008822    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1008823    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1008824    run;
 
NOTE: There were 1 observations read from the data set WORK.NEURAL23_EVENT.
NOTE: The PROCEDURE PRINT printed page 711.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1008825    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1008826    proc print data = EMWS8.Neural23_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Neural23_DepVar_DM noobs label;
1008827    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1008828    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1008829    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1008829  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1008829  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1008830    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1008831    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1008832    run;
 
NOTE: There were 7 observations read from the data set EMWS8.NEURAL23_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 712.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1008833    title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural23: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M2LWJXIV;
MPRINT(EM_DIAGRAM):   set WORK.M2LWJXIV;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
1008843    data WORK.M2LWJXIV;
MPRINT(EM_DIAGRAM):    data WORK.M2LWJXIV;
1008844    set WORK.M2LWJXIV end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M2LWJXIV end=eof;
1008845    output;
MPRINT(EM_DIAGRAM):   output;
1008846    if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
1008847    NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
1008848    ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
1008849    LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
1008850    TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
1008851    output;
MPRINT(EM_DIAGRAM):   output;
1008852    end;
MPRINT(EM_DIAGRAM):   end;
1008853    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M2LWJXIV.
NOTE: The data set WORK.M2LWJXIV has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS8.NEURAL23_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
1008854    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1008855    * Neural23: Create decision matrix;
MPRINT(EM_DIAGRAM):   * Neural23: Create decision matrix;
1008856    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1008857    data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
1008858      length   DepVar                           $  32
1008859               COUNT                                8
1008860               DATAPRIOR                            8
1008861               TRAINPRIOR                           8
1008862               DECPRIOR                             8
1008863               DECISION1                            8
1008864               DECISION2                            8
1008865               ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
1008866
1008867      label    COUNT="Level Counts"
1008868               DATAPRIOR="Data Proportions"
1008869               TRAINPRIOR="Training Proportions"
1008870               DECPRIOR="Decision Priors"
1008871               DECISION1="1"
1008872               DECISION2="0"
1008873               ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
1008874      format   COUNT 10.
1008875               ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
1008876    DepVar="1"; COUNT=359; DATAPRIOR=0.0643642072; TRAINPRIOR=0.15122156697556;
1008876  ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.0643642072;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
1008877    output;
MPRINT(EM_DIAGRAM):   output;
1008878    DepVar="0"; COUNT=2015; DATAPRIOR=0.9356357928; TRAINPRIOR=0.84877843302443;
1008878  ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.9356357928;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
1008879    output;
MPRINT(EM_DIAGRAM):   output;
1008880    ;
MPRINT(EM_DIAGRAM):   ;
1008881    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1008882    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1008883    modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
1008884    label DECISION1= '1';
1008885    label DECISION2= '0';
1008886    run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
1008887    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1008888    data EM_Neural23;
MPRINT(EM_DIAGRAM):   data EM_Neural23;
1008889    set EMWS8.BINNING_TRAIN(keep=
1008890    DepVar GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt
1008891    GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts
1008892    GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases
1008893    GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth );
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN(keep= DepVar GRP_AcceptedCmp5
GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds
GRP_MntMeatProducts GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases
GRP_NumDistPurchases GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq
GRP_Recency Year_Birth );
1008894    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: The data set WORK.EM_NEURAL23 has 2374 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Neural23: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1008895    *------------------------------------------------------------* ;
1008896    * Neural23: DMDBClass Macro ;
1008897    *------------------------------------------------------------* ;
1008898    %macro DMDBClass;
1008899        DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC)
1008900       GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC)
1008901       GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC)
1008902       GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC)
1008903       GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
1008904    %mend DMDBClass;
1008905    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1008906    * Neural23: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Neural23: DMDBVar Macro ;
1008907    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1008908    %macro DMDBVar;
1008909        Year_Birth
1008910    %mend DMDBVar;
1008911    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1008912    * Neural23: Create DMDB;
MPRINT(EM_DIAGRAM):   * Neural23: Create DMDB;
1008913    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1008914    proc dmdb batch data=WORK.EM_Neural23
1008915    dmdbcat=WORK.Neural23_DMDB
1008916    maxlevel = 513
1008917    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_Neural23 dmdbcat=WORK.Neural23_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
1008918    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC)
GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC)
GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC)
GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC)
GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
1008919    var %DMDBVar;
MPRINT(DMDBVAR):   Year_Birth
MPRINT(EM_DIAGRAM):  ;
1008920    target
1008921    DepVar
1008922    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1008923    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set WORK.EM_NEURAL23.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1008924    quit;
1008925    *--- end code ---*;
 
1008926    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1008927    * Neural23: Interval Input Variables Macro ;
MPRINT(EM_DIAGRAM):   * Neural23: Interval Input Variables Macro ;
1008928    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1008929    %macro INTINPUTS;
1008930        Year_Birth
1008931    %mend INTINPUTS;
1008932    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1008933    * Neural23: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Neural23: Binary Inputs Macro ;
1008934    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1008935    %macro BININPUTS;
1008936
1008937    %mend BININPUTS;
1008938    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1008939    * Neural23: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Neural23: Nominal Inputs Macro ;
1008940    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1008941    %macro NOMINPUTS;
1008942        GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt
1008943       GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts
1008944       GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases
1008945       GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
1008946    %mend NOMINPUTS;
1008947    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1008948    * Neural23: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * Neural23: Ordinal Inputs Macro ;
1008949    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1008950    %macro ORDINPUTS;
1008951
1008952    %mend ORDINPUTS;
1008953    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1008954    * Neural Network Training;
MPRINT(EM_DIAGRAM):   * Neural Network Training;
1008955    ;
MPRINT(EM_DIAGRAM):   ;
1008956    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1008957    proc neural data=EM_Neural23 dmdbcat=WORK.Neural23_DMDB
1008958    validdata = EMWS8.BINNING_VALIDATE
1008959    random=12345
1008960    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_Neural23 dmdbcat=WORK.Neural23_DMDB validdata =
EMWS8.BINNING_VALIDATE random=12345 ;
1008961    nloptions
1008962    ;
MPRINT(EM_DIAGRAM):   nloptions ;
1008963    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
1008964    netopts
1008965    decay=0;
MPRINT(EM_DIAGRAM):   netopts decay=0;
MPRINT(EM_DIAGRAM):   input
1008966    input %INTINPUTS / level=interval id=intvl
MPRINT(INTINPUTS):   Year_Birth
1008967    ;
MPRINT(EM_DIAGRAM):   / level=interval id=intvl ;
MPRINT(EM_DIAGRAM):   input
1008968    input %NOMINPUTS / level=nominal id=nom
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt
GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts GRP_MntWines
GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases GRP_NumWebVisitsMonth
GRP_RFMstat GRP_RMntFrq GRP_Recency
1008969    ;
MPRINT(EM_DIAGRAM):   / level=nominal id=nom ;
1008970    target DepVar / level=NOMINAL id=DepVar
1008971    bias
1008972    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar bias ;
1008973    arch MLP
1008974    Hidden=6
1008975    ;
MPRINT(EM_DIAGRAM):   arch MLP Hidden=6 ;
1008976    Prelim 5 preiter=10
1008977    pretime=3600
1008978    Outest=EMWS8.Neural23_PRELIM_OUTEST
1008979    ;
MPRINT(EM_DIAGRAM):   Prelim 5 preiter=10 pretime=3600 Outest=EMWS8.Neural23_PRELIM_OUTEST ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 10 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 10 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 10 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 10 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 10 iterations or 2147483647 function calls.
NOTE: The data set EMWS8.NEURAL23_PRELIM_OUTEST has 11 observations and 796 variables.
1008980    save network=EMWS8.Neural23_NETWORK.dm_neural;
MPRINT(EM_DIAGRAM):   save network=EMWS8.Neural23_NETWORK.dm_neural;
NOTE: Entry EMWS8.NEURAL23_NETWORK.DM_NEURAL has been opened.
NOTE: Entry EMWS8.NEURAL23_NETWORK.DM_NEURAL has been closed.
1008981    train Maxiter=50
1008982    maxtime=14400
1008983    Outest=EMWS8.Neural23_outest estiter=1
1008984    Outfit=EMWS8.Neural23_OUTFIT
1008985    ;
MPRINT(EM_DIAGRAM):   train Maxiter=50 maxtime=14400 Outest=EMWS8.Neural23_outest estiter=1
Outfit=EMWS8.Neural23_OUTFIT ;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set EMWS8.NEURAL23_OUTEST has 53 observations and 796 variables.
NOTE: The data set EMWS8.NEURAL23_OUTFIT has 104 observations and 36 variables.
1008986    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_NEURAL23 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           6.94 seconds
      cpu time            6.67 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed pages 713-716.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           6.95 seconds
      cpu time            6.69 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1008987    quit;
 
1008988    proc sort data=EMWS8.Neural23_OUTFIT(where=(_iter_ ne . and _NAME_="OVERALL"))
1008988  ! out=fit_Neural23;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural23_OUTFIT(where=(_iter_ ne . and
_NAME_="OVERALL")) out=fit_Neural23;
1008989    by _VAVERR_;
MPRINT(EM_DIAGRAM):   by _VAVERR_;
1008990    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set EMWS8.NEURAL23_OUTFIT.
      WHERE (_iter_ not = .) and (_NAME_='OVERALL');
NOTE: The data set WORK.FIT_NEURAL23 has 52 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1008991    %GLOBAL ITER;
1008992    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1008993    set fit_Neural23(obs=1);
MPRINT(EM_DIAGRAM):   set fit_Neural23(obs=1);
1008994    call symput('ITER',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('ITER',put(_ITER_, 6.));
1008995    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.FIT_NEURAL23.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1008996    data EMWS8.Neural23_INITIAL;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_INITIAL;
1008997    set EMWS8.Neural23_outest(where=(_ITER_ eq &ITER and _OBJ_ ne .));
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_outest(where=(_ITER_ eq 27 and _OBJ_ ne .));
1008998    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL23_OUTEST.
      WHERE (_ITER_=27) and (_OBJ_ not = .);
NOTE: The data set EMWS8.NEURAL23_INITIAL has 1 observations and 796 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1008999    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1009000    * Neural Network Model Selection;
MPRINT(EM_DIAGRAM):   * Neural Network Model Selection;
1009001    ;
MPRINT(EM_DIAGRAM):   ;
1009002    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1009003    proc neural data=EM_Neural23 dmdbcat=WORK.Neural23_DMDB
1009004    validdata = EMWS8.BINNING_VALIDATE
1009005    network = EMWS8.Neural23_NETWORK.dm_neural
1009006    random=12345
1009007    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_Neural23 dmdbcat=WORK.Neural23_DMDB validdata =
EMWS8.BINNING_VALIDATE network = EMWS8.Neural23_NETWORK.dm_neural random=12345 ;
NOTE: Entry EMWS8.NEURAL23_NETWORK.DM_NEURAL has been opened.
NOTE: Entry EMWS8.NEURAL23_NETWORK.DM_NEURAL has been closed.
1009008    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1009009    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
1009010    initial inest=EMWS8.Neural23_INITIAL;
MPRINT(EM_DIAGRAM):   initial inest=EMWS8.Neural23_INITIAL;
NOTE: The data set EMWS8.NEURAL23_INITIAL has 1 observations and 796 variables.
1009011    train tech=NONE;
MPRINT(EM_DIAGRAM):   train tech=NONE;
NOTE: No optimization performed.
1009012    code file="C:\\predictive-models-project\Workspaces\EMWS8\Neural23\SCORECODE.sas"
1009013    group=Neural23
1009014    ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\Neural23\SCORECODE.sas" group=Neural23 ;
NOTE: External file C:\\predictive-models-project\Workspaces\EMWS8\Neural23\SCORECODE.sas
      opened.
1009015    ;
MPRINT(EM_DIAGRAM):   ;
1009016    code
1009016  ! file="C:\\predictive-models-project\Workspaces\EMWS8\Neural23\RESIDUALSCORECODE.sas"
1009017    group=Neural23
1009018    residual
1009019    ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\Neural23\RESIDUALSCORECODE.sas"
group=Neural23 residual ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural23\RESIDUALSCORECODE.sas opened.
1009020    ;
MPRINT(EM_DIAGRAM):   ;
1009021    score data=EMWS8.BINNING_TRAIN out=_NULL_
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
1009022    outfit=WORK.FIT1
1009023    role=TRAIN
1009024    outkey=EMWS8.Neural23_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.BINNING_TRAIN out=_NULL_ outfit=WORK.FIT1 role=TRAIN
outkey=EMWS8.Neural23_OUTKEY;
NOTE: The data set EMWS8.NEURAL23_OUTKEY has 146 observations and 8 variables.
NOTE: The data set EMWS8.BINNING_TRAIN has . observations and 62 variables.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
1009025    score data=EMWS8.BINNING_VALIDATE out=_NULL_
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
1009026    outfit=WORK.FIT2
1009027    role=VALID
1009028    outkey=EMWS8.Neural23_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.BINNING_VALIDATE out=_NULL_ outfit=WORK.FIT2 role=VALID
outkey=EMWS8.Neural23_OUTKEY;
NOTE: The data set EMWS8.NEURAL23_OUTKEY has 146 observations and 8 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
1009029    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_NEURAL23 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.40 seconds
      cpu time            0.39 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.41 seconds
      cpu time            0.40 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1009030    quit;
1009031    data EMWS8.Neural23_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_OUTFIT;
1009032    merge WORK.FIT1 WORK.FIT2;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2;
1009033    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: The data set EMWS8.NEURAL23_OUTFIT has 2 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1009034    data EMWS8.Neural23_EMESTIMATE;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_EMESTIMATE;
1009035    set EMWS8.Neural23_outest;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_outest;
1009036    if _type_ ^in('HESSIAN' 'GRAD');
MPRINT(EM_DIAGRAM):   if _type_ ^in('HESSIAN' 'GRAD');
1009037    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set EMWS8.NEURAL23_OUTEST.
NOTE: The data set EMWS8.NEURAL23_EMESTIMATE has 52 observations and 796 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1009038    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1009039    delete EM_Neural23;
MPRINT(EM_DIAGRAM):   delete EM_Neural23;
1009040    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_NEURAL23 (memtype=DATA).
1009041    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1009042    data EMWS8.Neural23_PLOTDS(where=(_iter_ ne . and _NAME_="OVERALL"));
MPRINT(EM_DIAGRAM):    data EMWS8.Neural23_PLOTDS(where=(_iter_ ne . and _NAME_="OVERALL"));
1009043    set fit_Neural23;
MPRINT(EM_DIAGRAM):   set fit_Neural23;
1009044    attrib _ITER_ label="%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  ,
1009044  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   attrib _ITER_ label="Training Iterations";
1009045    attrib _NAME_ label="%sysfunc(sasmsg(sashelp.dmine, rpt_varsel_label_name  ,
1009045  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   attrib _NAME_ label="Name";
1009046    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK.FIT_NEURAL23.
NOTE: The data set EMWS8.NEURAL23_PLOTDS has 52 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1009047    proc sort data=EMWS8.Neural23_PLOTDS;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural23_PLOTDS;
1009048    by _ITER_;
MPRINT(EM_DIAGRAM):   by _ITER_;
1009049    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set EMWS8.NEURAL23_PLOTDS.
NOTE: The data set EMWS8.NEURAL23_PLOTDS has 52 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1009050    data tempweight (drop= _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_ _averr_ _p_num_
1009050  ! where=(_type_ eq "PARMS" and _iter_ eq 27) );
MPRINT(EM_DIAGRAM):    data tempweight (drop= _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_
_averr_ _p_num_ where=(_type_ eq "PARMS" and _iter_ eq 27) );
1009051    set EMWS8.Neural23_EMESTIMATE;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_EMESTIMATE;
1009052    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set EMWS8.NEURAL23_EMESTIMATE.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 788 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1009053    proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
1009054    by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
1009055    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 788 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1009056    proc transpose data=tempweight out=EMWS8.Neural23_WEIGHTDS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight out=EMWS8.Neural23_WEIGHTDS;
1009057    by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
1009058    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS8.NEURAL23_WEIGHTDS has 786 observations and 3 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1009059    data EMWS8.Neural23_WEIGHTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_WEIGHTDS;
1009060    set EMWS8.Neural23_WEIGHTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_WEIGHTDS;
1009061    FROM = trim(left(scan(_LABEL_, 1, '->')));
MPRINT(EM_DIAGRAM):   FROM = trim(left(scan(_LABEL_, 1, '->')));
1009062    TO = trim(left(scan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = trim(left(scan(_LABEL_, 2, '>')));
1009063    WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
1009064    if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
1009065    label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  , NOQUOTE))" FROM
1009065  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  , NOQUOTE))" TO =
1009065  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  , NOQUOTE))" WEIGHT =
1009066       "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT = "Weight";
1009067    keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
1009068    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 786 observations read from the data set EMWS8.NEURAL23_WEIGHTDS.
NOTE: The data set EMWS8.NEURAL23_WEIGHTDS has 781 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1009069    proc sort data=EMWS8.Neural23_WEIGHTDS nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural23_WEIGHTDS nodupkey;
1009070    by _LABEL_;
MPRINT(EM_DIAGRAM):   by _LABEL_;
1009071    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 781 observations read from the data set EMWS8.NEURAL23_WEIGHTDS.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS8.NEURAL23_WEIGHTDS has 781 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.42 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                16.42 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0CT7VDQ
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0CT7VDQ new;
MPRINT(EM_DIAGRAM):   run;
1009173    data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
1009174    set EMWS8.Neural23_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_OUTKEY;
1009175    if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
1009176    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 146 observations read from the data set EMWS8.NEURAL23_OUTKEY.
NOTE: The data set WORK.OUTKEY has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1009177    filename emflow
1009177  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural23: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1009178    *------------------------------------------------------------*;
1009179    * Neural23: Scoring DATA data;
1009180    *------------------------------------------------------------*;
1009181    data EMWS8.Neural23_TRAIN
1009182    / view=EMWS8.Neural23_TRAIN
1009183    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_TRAIN / view=EMWS8.Neural23_TRAIN ;
1009184    set EMWS8.BINNING_TRAIN
1009185    ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN ;
1009186    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas.
1009187   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1009188   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1009189   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1009190   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1009191   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1009192   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1009193   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1009194   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1009195   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1009196   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1009197   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1009198   +LENGTH _WARN_ $4
1009199   +      F_DepVar  $ 12
1009200   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1009201   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1009202   +
1009203   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1009204   +
1009205   +      label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
1009206   +
1009207   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1009208   +
1009209   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1009210   +
1009211   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1009212   +
1009213   +      label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
1009214   +
1009215   +      label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
1009216   +
1009217   +      label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
1009218   +
1009219   +      label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
1009220   +
1009221   +      label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
1009222   +
1009223   +      label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
1009224   +
1009225   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1009226   +
1009227   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1009228   +
1009229   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1009230   +
1009231   +      label GRP_Income5 = 'Dummy: GRP_Income=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Income5 = 'Dummy: GRP_Income=5' ;
1009232   +
1009233   +      label GRP_Income6 = 'Dummy: GRP_Income=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Income6 = 'Dummy: GRP_Income=6' ;
1009234   +
1009235   +      label GRP_Income7 = 'Dummy: GRP_Income=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Income7 = 'Dummy: GRP_Income=7' ;
1009236   +
1009237   +      label GRP_Income8 = 'Dummy: GRP_Income=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Income8 = 'Dummy: GRP_Income=8' ;
1009238   +
1009239   +      label GRP_Income9 = 'Dummy: GRP_Income=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Income9 = 'Dummy: GRP_Income=9' ;
1009240   +
1009241   +      label GRP_Income10 = 'Dummy: GRP_Income=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Income10 = 'Dummy: GRP_Income=10' ;
1009242   +
1009243   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1009244   +
1009245   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1009246   +
1009247   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1009248   +
1009249   +      label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
1009250   +
1009251   +      label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
1009252   +
1009253   +      label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
1009254   +
1009255   +      label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
1009256   +
1009257   +      label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
1009258   +
1009259   +      label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
1009260   +
1009261   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1009262   +
1009263   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1009264   +
1009265   +      label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
1009266   +
1009267   +      label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
1009268   +
1009269   +      label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
1009270   +
1009271   +      label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
1009272   +
1009273   +      label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
1009274   +
1009275   +      label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
1009276   +
1009277   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1009278   +
1009279   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1009280   +
1009281   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1009282   +
1009283   +      label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
1009284   +
1009285   +      label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
1009286   +
1009287   +      label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
1009288   +
1009289   +      label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
1009290   +
1009291   +      label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
1009292   +
1009293   +      label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
1009294   +
1009295   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1009296   +
1009297   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1009298   +
1009299   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1009300   +
1009301   +      label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
1009302   +
1009303   +      label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
1009304   +
1009305   +      label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
1009306   +
1009307   +      label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
1009308   +
1009309   +      label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
1009310   +
1009311   +      label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
1009312   +
1009313   +      label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
1009314   +
1009315   +      label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
1009316   +
1009317   +      label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
1009318   +
1009319   +      label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
1009320   +
1009321   +      label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
1009322   +
1009323   +      label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
1009324   +
1009325   +      label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
1009326   +
1009327   +      label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
1009328   +
1009329   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1009330   +
1009331   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1009332   +
1009333   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1009334   +
1009335   +      label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
1009336   +
1009337   +      label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
1009338   +
1009339   +      label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
1009340   +
1009341   +      label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
1009342   +
1009343   +      label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
1009344   +
1009345   +      label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
1009346   +
1009347   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1009348   +
1009349   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1009350   +
1009351   +      label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
1009352   +
1009353   +      label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
1009354   +
1009355   +      label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
1009356   +
1009357   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1009358   +
1009359   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1009360   +
1009361   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1009362   +
1009363   +      label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
1009364   +
1009365   +      label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
1009366   +
1009367   +      label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
1009368   +
1009369   +      label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
1009370   +
1009371   +      label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
1009372   +
1009373   +      label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
1009374   +
1009375   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1009376   +
1009377   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1009378   +
1009379   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1009380   +
1009381   +      label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
1009382   +
1009383   +      label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
1009384   +
1009385   +      label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
1009386   +
1009387   +      label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
1009388   +
1009389   +      label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
1009390   +
1009391   +      label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
1009392   +
1009393   +      label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
1009394   +
1009395   +      label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
1009396   +
1009397   +      label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
1009398   +
1009399   +      label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
1009400   +
1009401   +      label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
1009402   +
1009403   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1009404   +
1009405   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1009406   +
1009407   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1009408   +
1009409   +      label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
1009410   +
1009411   +      label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
1009412   +
1009413   +      label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
1009414   +
1009415   +      label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
1009416   +
1009417   +      label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
1009418   +
1009419   +      label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
1009420   +
1009421   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1009422   +
1009423   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1009424   +
1009425   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1009426   +
1009427   +      label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
1009428   +
1009429   +      label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
1009430   +
1009431   +      label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
1009432   +
1009433   +      label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
1009434   +
1009435   +      label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
1009436   +
1009437   +      label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
1009438   +
1009439   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1009440   +
1009441   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1009442   +
1009443   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1009444   +
1009445   +      label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
1009446   +
1009447   +      label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
1009448   +
1009449   +      label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
1009450   +
1009451   +      label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
1009452   +
1009453   +      label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
1009454   +
1009455   +      label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
1009456   +
1009457   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1009458   +
1009459   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1009460   +
1009461   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1009462   +
1009463   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1009464   +
1009465   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1009466   +
1009467   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1009468   +
1009469   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1009470   +
1009471   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1009472   +
1009473   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1009474   +
1009475   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1009476   +
1009477   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1009478   +
1009479   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1009480   +
1009481   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1009482   +
1009483   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1009484   +
1009485   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1009486   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1009487   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1009488   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1009489   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1009490   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009491   +end;
MPRINT(EM_DIAGRAM):   end;
1009492   +else do;
MPRINT(EM_DIAGRAM):   else do;
1009493   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1009494   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1009495   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1009496   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1009497   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1009498   +   end;
MPRINT(EM_DIAGRAM):   end;
1009499   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1009500   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1009501   +   end;
MPRINT(EM_DIAGRAM):   end;
1009502   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1009503   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1009504   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1009505   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009506   +   end;
MPRINT(EM_DIAGRAM):   end;
1009507   +end;
MPRINT(EM_DIAGRAM):   end;
1009508   +
1009509   +*** Generate dummy variables for GRP_AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmpTotal ;
1009510   +drop GRP_AcceptedCmpTotal3 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmpTotal3 ;
1009511   +if missing( GRP_AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmpTotal ) then do;
1009512   +   GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
1009513   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1009514   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009515   +end;
MPRINT(EM_DIAGRAM):   end;
1009516   +else do;
MPRINT(EM_DIAGRAM):   else do;
1009517   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1009518   +   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
1009519   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1009520   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1009521   +      GRP_AcceptedCmpTotal3 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = 1;
1009522   +   end;
MPRINT(EM_DIAGRAM):   end;
1009523   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1009524   +      GRP_AcceptedCmpTotal3 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = -1;
1009525   +   end;
MPRINT(EM_DIAGRAM):   end;
1009526   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1009527   +      GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
1009528   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1009529   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009530   +   end;
MPRINT(EM_DIAGRAM):   end;
1009531   +end;
MPRINT(EM_DIAGRAM):   end;
1009532   +
1009533   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1009534   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8 GRP_Frq9
1009535   +        GRP_Frq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8
GRP_Frq9 GRP_Frq10 ;
1009536   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1009537   +GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1009538   +GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1009539   +GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1009540   +GRP_Frq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 0;
1009541   +GRP_Frq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 0;
1009542   +GRP_Frq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 0;
1009543   +GRP_Frq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 0;
1009544   +GRP_Frq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 0;
1009545   +GRP_Frq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 0;
1009546   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1009547   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1009548   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1009549   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1009550   +   GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
1009551   +   GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
1009552   +   GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
1009553   +   GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
1009554   +   GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
1009555   +   GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
1009556   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1009557   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009558   +end;
MPRINT(EM_DIAGRAM):   end;
1009559   +else do;
MPRINT(EM_DIAGRAM):   else do;
1009560   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1009561   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1009562   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1009563   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1009564   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1009565   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1009566   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1009567   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1009568   +               GRP_Frq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 1;
1009569   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009570   +            end;
MPRINT(EM_DIAGRAM):   end;
1009571   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1009572   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1009573   +                  GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1009574   +                  GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1009575   +                  GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1009576   +                  GRP_Frq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = -1;
1009577   +                  GRP_Frq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = -1;
1009578   +                  GRP_Frq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = -1;
1009579   +                  GRP_Frq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = -1;
1009580   +                  GRP_Frq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = -1;
1009581   +                  GRP_Frq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = -1;
1009582   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009583   +               end;
MPRINT(EM_DIAGRAM):   end;
1009584   +            end;
MPRINT(EM_DIAGRAM):   end;
1009585   +         end;
MPRINT(EM_DIAGRAM):   end;
1009586   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1009587   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1009588   +               GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1009589   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009590   +            end;
MPRINT(EM_DIAGRAM):   end;
1009591   +         end;
MPRINT(EM_DIAGRAM):   end;
1009592   +      end;
MPRINT(EM_DIAGRAM):   end;
1009593   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1009594   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1009595   +            GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1009596   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009597   +         end;
MPRINT(EM_DIAGRAM):   end;
1009598   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1009599   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1009600   +               GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1009601   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009602   +            end;
MPRINT(EM_DIAGRAM):   end;
1009603   +         end;
MPRINT(EM_DIAGRAM):   end;
1009604   +      end;
MPRINT(EM_DIAGRAM):   end;
1009605   +   end;
MPRINT(EM_DIAGRAM):   end;
1009606   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1009607   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1009608   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1009609   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1009610   +               GRP_Frq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 1;
1009611   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009612   +            end;
MPRINT(EM_DIAGRAM):   end;
1009613   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1009614   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1009615   +                  GRP_Frq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 1;
1009616   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009617   +               end;
MPRINT(EM_DIAGRAM):   end;
1009618   +            end;
MPRINT(EM_DIAGRAM):   end;
1009619   +         end;
MPRINT(EM_DIAGRAM):   end;
1009620   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1009621   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1009622   +               GRP_Frq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 1;
1009623   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009624   +            end;
MPRINT(EM_DIAGRAM):   end;
1009625   +         end;
MPRINT(EM_DIAGRAM):   end;
1009626   +      end;
MPRINT(EM_DIAGRAM):   end;
1009627   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1009628   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1009629   +            GRP_Frq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 1;
1009630   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009631   +         end;
MPRINT(EM_DIAGRAM):   end;
1009632   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1009633   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1009634   +               GRP_Frq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 1;
1009635   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009636   +            end;
MPRINT(EM_DIAGRAM):   end;
1009637   +         end;
MPRINT(EM_DIAGRAM):   end;
1009638   +      end;
MPRINT(EM_DIAGRAM):   end;
1009639   +   end;
MPRINT(EM_DIAGRAM):   end;
1009640   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1009641   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1009642   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1009643   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1009644   +      GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
1009645   +      GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
1009646   +      GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
1009647   +      GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
1009648   +      GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
1009649   +      GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
1009650   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1009651   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009652   +   end;
MPRINT(EM_DIAGRAM):   end;
1009653   +end;
MPRINT(EM_DIAGRAM):   end;
1009654   +
1009655   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1009656   +drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6 GRP_Income7
1009657   +        GRP_Income8 GRP_Income9 GRP_Income10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6
GRP_Income7 GRP_Income8 GRP_Income9 GRP_Income10 ;
1009658   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1009659   +GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1009660   +GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1009661   +GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1009662   +GRP_Income5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 0;
1009663   +GRP_Income6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 0;
1009664   +GRP_Income7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 0;
1009665   +GRP_Income8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 0;
1009666   +GRP_Income9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 0;
1009667   +GRP_Income10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 0;
1009668   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1009669   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1009670   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1009671   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1009672   +   GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
1009673   +   GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
1009674   +   GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
1009675   +   GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
1009676   +   GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
1009677   +   GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
1009678   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1009679   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009680   +end;
MPRINT(EM_DIAGRAM):   end;
1009681   +else do;
MPRINT(EM_DIAGRAM):   else do;
1009682   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1009683   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1009684   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1009685   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1009686   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1009687   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1009688   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1009689   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1009690   +               GRP_Income10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 1;
1009691   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009692   +            end;
MPRINT(EM_DIAGRAM):   end;
1009693   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1009694   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1009695   +                  GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1009696   +                  GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1009697   +                  GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1009698   +                  GRP_Income5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = -1;
1009699   +                  GRP_Income6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = -1;
1009700   +                  GRP_Income7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = -1;
1009701   +                  GRP_Income8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = -1;
1009702   +                  GRP_Income9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = -1;
1009703   +                  GRP_Income10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = -1;
1009704   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009705   +               end;
MPRINT(EM_DIAGRAM):   end;
1009706   +            end;
MPRINT(EM_DIAGRAM):   end;
1009707   +         end;
MPRINT(EM_DIAGRAM):   end;
1009708   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1009709   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1009710   +               GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1009711   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009712   +            end;
MPRINT(EM_DIAGRAM):   end;
1009713   +         end;
MPRINT(EM_DIAGRAM):   end;
1009714   +      end;
MPRINT(EM_DIAGRAM):   end;
1009715   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1009716   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1009717   +            GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1009718   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009719   +         end;
MPRINT(EM_DIAGRAM):   end;
1009720   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1009721   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1009722   +               GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1009723   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009724   +            end;
MPRINT(EM_DIAGRAM):   end;
1009725   +         end;
MPRINT(EM_DIAGRAM):   end;
1009726   +      end;
MPRINT(EM_DIAGRAM):   end;
1009727   +   end;
MPRINT(EM_DIAGRAM):   end;
1009728   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1009729   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1009730   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1009731   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1009732   +               GRP_Income5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 1;
1009733   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009734   +            end;
MPRINT(EM_DIAGRAM):   end;
1009735   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1009736   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1009737   +                  GRP_Income6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 1;
1009738   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009739   +               end;
MPRINT(EM_DIAGRAM):   end;
1009740   +            end;
MPRINT(EM_DIAGRAM):   end;
1009741   +         end;
MPRINT(EM_DIAGRAM):   end;
1009742   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1009743   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1009744   +               GRP_Income7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 1;
1009745   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009746   +            end;
MPRINT(EM_DIAGRAM):   end;
1009747   +         end;
MPRINT(EM_DIAGRAM):   end;
1009748   +      end;
MPRINT(EM_DIAGRAM):   end;
1009749   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1009750   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1009751   +            GRP_Income8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 1;
1009752   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009753   +         end;
MPRINT(EM_DIAGRAM):   end;
1009754   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1009755   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1009756   +               GRP_Income9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 1;
1009757   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009758   +            end;
MPRINT(EM_DIAGRAM):   end;
1009759   +         end;
MPRINT(EM_DIAGRAM):   end;
1009760   +      end;
MPRINT(EM_DIAGRAM):   end;
1009761   +   end;
MPRINT(EM_DIAGRAM):   end;
1009762   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1009763   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1009764   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1009765   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1009766   +      GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
1009767   +      GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
1009768   +      GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
1009769   +      GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
1009770   +      GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
1009771   +      GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
1009772   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1009773   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009774   +   end;
MPRINT(EM_DIAGRAM):   end;
1009775   +end;
MPRINT(EM_DIAGRAM):   end;
1009776   +
1009777   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1009778   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8 GRP_Mnt9
1009779   +        GRP_Mnt10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8
GRP_Mnt9 GRP_Mnt10 ;
1009780   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1009781   +GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1009782   +GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1009783   +GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1009784   +GRP_Mnt5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 0;
1009785   +GRP_Mnt6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 0;
1009786   +GRP_Mnt7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 0;
1009787   +GRP_Mnt8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 0;
1009788   +GRP_Mnt9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 0;
1009789   +GRP_Mnt10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 0;
1009790   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1009791   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1009792   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1009793   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1009794   +   GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
1009795   +   GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
1009796   +   GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
1009797   +   GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
1009798   +   GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
1009799   +   GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
1009800   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1009801   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009802   +end;
MPRINT(EM_DIAGRAM):   end;
1009803   +else do;
MPRINT(EM_DIAGRAM):   else do;
1009804   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1009805   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1009806   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1009807   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1009808   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1009809   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1009810   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1009811   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1009812   +               GRP_Mnt10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 1;
1009813   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009814   +            end;
MPRINT(EM_DIAGRAM):   end;
1009815   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1009816   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1009817   +                  GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1009818   +                  GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1009819   +                  GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1009820   +                  GRP_Mnt5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = -1;
1009821   +                  GRP_Mnt6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = -1;
1009822   +                  GRP_Mnt7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = -1;
1009823   +                  GRP_Mnt8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = -1;
1009824   +                  GRP_Mnt9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = -1;
1009825   +                  GRP_Mnt10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = -1;
1009826   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009827   +               end;
MPRINT(EM_DIAGRAM):   end;
1009828   +            end;
MPRINT(EM_DIAGRAM):   end;
1009829   +         end;
MPRINT(EM_DIAGRAM):   end;
1009830   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1009831   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1009832   +               GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1009833   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009834   +            end;
MPRINT(EM_DIAGRAM):   end;
1009835   +         end;
MPRINT(EM_DIAGRAM):   end;
1009836   +      end;
MPRINT(EM_DIAGRAM):   end;
1009837   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1009838   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1009839   +            GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1009840   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009841   +         end;
MPRINT(EM_DIAGRAM):   end;
1009842   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1009843   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1009844   +               GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1009845   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009846   +            end;
MPRINT(EM_DIAGRAM):   end;
1009847   +         end;
MPRINT(EM_DIAGRAM):   end;
1009848   +      end;
MPRINT(EM_DIAGRAM):   end;
1009849   +   end;
MPRINT(EM_DIAGRAM):   end;
1009850   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1009851   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1009852   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1009853   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1009854   +               GRP_Mnt5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 1;
1009855   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009856   +            end;
MPRINT(EM_DIAGRAM):   end;
1009857   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1009858   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1009859   +                  GRP_Mnt6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 1;
1009860   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009861   +               end;
MPRINT(EM_DIAGRAM):   end;
1009862   +            end;
MPRINT(EM_DIAGRAM):   end;
1009863   +         end;
MPRINT(EM_DIAGRAM):   end;
1009864   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1009865   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1009866   +               GRP_Mnt7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 1;
1009867   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009868   +            end;
MPRINT(EM_DIAGRAM):   end;
1009869   +         end;
MPRINT(EM_DIAGRAM):   end;
1009870   +      end;
MPRINT(EM_DIAGRAM):   end;
1009871   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1009872   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1009873   +            GRP_Mnt8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 1;
1009874   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009875   +         end;
MPRINT(EM_DIAGRAM):   end;
1009876   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1009877   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1009878   +               GRP_Mnt9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 1;
1009879   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009880   +            end;
MPRINT(EM_DIAGRAM):   end;
1009881   +         end;
MPRINT(EM_DIAGRAM):   end;
1009882   +      end;
MPRINT(EM_DIAGRAM):   end;
1009883   +   end;
MPRINT(EM_DIAGRAM):   end;
1009884   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1009885   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1009886   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1009887   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1009888   +      GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
1009889   +      GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
1009890   +      GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
1009891   +      GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
1009892   +      GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
1009893   +      GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
1009894   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1009895   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009896   +   end;
MPRINT(EM_DIAGRAM):   end;
1009897   +end;
MPRINT(EM_DIAGRAM):   end;
1009898   +
1009899   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1009900   +drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
1009901   +        GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8
1009902   +        GRP_MntFishProducts9 GRP_MntFishProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8 GRP_MntFishProducts9
GRP_MntFishProducts10 ;
1009903   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1009904   +GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1009905   +GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1009906   +GRP_MntFishProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 0;
1009907   +GRP_MntFishProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 0;
1009908   +GRP_MntFishProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 0;
1009909   +GRP_MntFishProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 0;
1009910   +GRP_MntFishProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 0;
1009911   +GRP_MntFishProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 0;
1009912   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1009913   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1009914   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1009915   +   GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
1009916   +   GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
1009917   +   GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
1009918   +   GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
1009919   +   GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
1009920   +   GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
1009921   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1009922   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1009923   +end;
MPRINT(EM_DIAGRAM):   end;
1009924   +else do;
MPRINT(EM_DIAGRAM):   else do;
1009925   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1009926   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1009927   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1009928   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1009929   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1009930   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1009931   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1009932   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1009933   +               GRP_MntFishProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 1;
1009934   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009935   +            end;
MPRINT(EM_DIAGRAM):   end;
1009936   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1009937   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1009938   +                  GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1009939   +                  GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1009940   +                  GRP_MntFishProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = -1;
1009941   +                  GRP_MntFishProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = -1;
1009942   +                  GRP_MntFishProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = -1;
1009943   +                  GRP_MntFishProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = -1;
1009944   +                  GRP_MntFishProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = -1;
1009945   +                  GRP_MntFishProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = -1;
1009946   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009947   +               end;
MPRINT(EM_DIAGRAM):   end;
1009948   +            end;
MPRINT(EM_DIAGRAM):   end;
1009949   +         end;
MPRINT(EM_DIAGRAM):   end;
1009950   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1009951   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1009952   +               GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1009953   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009954   +            end;
MPRINT(EM_DIAGRAM):   end;
1009955   +         end;
MPRINT(EM_DIAGRAM):   end;
1009956   +      end;
MPRINT(EM_DIAGRAM):   end;
1009957   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1009958   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1009959   +            GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1009960   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009961   +         end;
MPRINT(EM_DIAGRAM):   end;
1009962   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1009963   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1009964   +               GRP_MntFishProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 1;
1009965   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009966   +            end;
MPRINT(EM_DIAGRAM):   end;
1009967   +         end;
MPRINT(EM_DIAGRAM):   end;
1009968   +      end;
MPRINT(EM_DIAGRAM):   end;
1009969   +   end;
MPRINT(EM_DIAGRAM):   end;
1009970   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1009971   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1009972   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1009973   +            GRP_MntFishProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 1;
1009974   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009975   +         end;
MPRINT(EM_DIAGRAM):   end;
1009976   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1009977   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1009978   +               GRP_MntFishProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 1;
1009979   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009980   +            end;
MPRINT(EM_DIAGRAM):   end;
1009981   +         end;
MPRINT(EM_DIAGRAM):   end;
1009982   +      end;
MPRINT(EM_DIAGRAM):   end;
1009983   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1009984   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1009985   +            GRP_MntFishProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 1;
1009986   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009987   +         end;
MPRINT(EM_DIAGRAM):   end;
1009988   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1009989   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1009990   +               GRP_MntFishProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 1;
1009991   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1009992   +            end;
MPRINT(EM_DIAGRAM):   end;
1009993   +         end;
MPRINT(EM_DIAGRAM):   end;
1009994   +      end;
MPRINT(EM_DIAGRAM):   end;
1009995   +   end;
MPRINT(EM_DIAGRAM):   end;
1009996   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1009997   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1009998   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1009999   +      GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
1010000   +      GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
1010001   +      GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
1010002   +      GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
1010003   +      GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
1010004   +      GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
1010005   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1010006   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1010007   +   end;
MPRINT(EM_DIAGRAM):   end;
1010008   +end;
MPRINT(EM_DIAGRAM):   end;
1010009   +
1010010   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1010011   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 GRP_MntGoldProds5
1010012   +        GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8
1010013   +        GRP_MntGoldProds9 GRP_MntGoldProds10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4
GRP_MntGoldProds5 GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8 GRP_MntGoldProds9
GRP_MntGoldProds10 ;
1010014   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1010015   +GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1010016   +GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1010017   +GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1010018   +GRP_MntGoldProds5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 0;
1010019   +GRP_MntGoldProds6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 0;
1010020   +GRP_MntGoldProds7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 0;
1010021   +GRP_MntGoldProds8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 0;
1010022   +GRP_MntGoldProds9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 0;
1010023   +GRP_MntGoldProds10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 0;
1010024   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1010025   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1010026   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1010027   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1010028   +   GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
1010029   +   GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
1010030   +   GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
1010031   +   GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
1010032   +   GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
1010033   +   GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
1010034   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1010035   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1010036   +end;
MPRINT(EM_DIAGRAM):   end;
1010037   +else do;
MPRINT(EM_DIAGRAM):   else do;
1010038   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1010039   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1010040   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1010041   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1010042   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1010043   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1010044   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1010045   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1010046   +               GRP_MntGoldProds10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 1;
1010047   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010048   +            end;
MPRINT(EM_DIAGRAM):   end;
1010049   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1010050   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1010051   +                  GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1010052   +                  GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1010053   +                  GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1010054   +                  GRP_MntGoldProds5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = -1;
1010055   +                  GRP_MntGoldProds6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = -1;
1010056   +                  GRP_MntGoldProds7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = -1;
1010057   +                  GRP_MntGoldProds8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = -1;
1010058   +                  GRP_MntGoldProds9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = -1;
1010059   +                  GRP_MntGoldProds10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = -1;
1010060   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010061   +               end;
MPRINT(EM_DIAGRAM):   end;
1010062   +            end;
MPRINT(EM_DIAGRAM):   end;
1010063   +         end;
MPRINT(EM_DIAGRAM):   end;
1010064   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010065   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1010066   +               GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1010067   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010068   +            end;
MPRINT(EM_DIAGRAM):   end;
1010069   +         end;
MPRINT(EM_DIAGRAM):   end;
1010070   +      end;
MPRINT(EM_DIAGRAM):   end;
1010071   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1010072   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1010073   +            GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1010074   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010075   +         end;
MPRINT(EM_DIAGRAM):   end;
1010076   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010077   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1010078   +               GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1010079   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010080   +            end;
MPRINT(EM_DIAGRAM):   end;
1010081   +         end;
MPRINT(EM_DIAGRAM):   end;
1010082   +      end;
MPRINT(EM_DIAGRAM):   end;
1010083   +   end;
MPRINT(EM_DIAGRAM):   end;
1010084   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1010085   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1010086   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1010087   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1010088   +               GRP_MntGoldProds5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 1;
1010089   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010090   +            end;
MPRINT(EM_DIAGRAM):   end;
1010091   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1010092   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1010093   +                  GRP_MntGoldProds6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 1;
1010094   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010095   +               end;
MPRINT(EM_DIAGRAM):   end;
1010096   +            end;
MPRINT(EM_DIAGRAM):   end;
1010097   +         end;
MPRINT(EM_DIAGRAM):   end;
1010098   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010099   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1010100   +               GRP_MntGoldProds7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 1;
1010101   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010102   +            end;
MPRINT(EM_DIAGRAM):   end;
1010103   +         end;
MPRINT(EM_DIAGRAM):   end;
1010104   +      end;
MPRINT(EM_DIAGRAM):   end;
1010105   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1010106   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1010107   +            GRP_MntGoldProds8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 1;
1010108   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010109   +         end;
MPRINT(EM_DIAGRAM):   end;
1010110   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010111   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1010112   +               GRP_MntGoldProds9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 1;
1010113   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010114   +            end;
MPRINT(EM_DIAGRAM):   end;
1010115   +         end;
MPRINT(EM_DIAGRAM):   end;
1010116   +      end;
MPRINT(EM_DIAGRAM):   end;
1010117   +   end;
MPRINT(EM_DIAGRAM):   end;
1010118   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1010119   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1010120   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1010121   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1010122   +      GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
1010123   +      GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
1010124   +      GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
1010125   +      GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
1010126   +      GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
1010127   +      GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
1010128   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1010129   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1010130   +   end;
MPRINT(EM_DIAGRAM):   end;
1010131   +end;
MPRINT(EM_DIAGRAM):   end;
1010132   +
1010133   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1010134   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
1010135   +        GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7
1010136   +        GRP_MntMeatProducts8 GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7 GRP_MntMeatProducts8
GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
1010137   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1010138   +GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1010139   +GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1010140   +GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1010141   +GRP_MntMeatProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 0;
1010142   +GRP_MntMeatProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 0;
1010143   +GRP_MntMeatProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 0;
1010144   +GRP_MntMeatProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 0;
1010145   +GRP_MntMeatProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 0;
1010146   +GRP_MntMeatProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 0;
1010147   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1010148   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1010149   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1010150   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1010151   +   GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
1010152   +   GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
1010153   +   GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
1010154   +   GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
1010155   +   GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
1010156   +   GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
1010157   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1010158   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1010159   +end;
MPRINT(EM_DIAGRAM):   end;
1010160   +else do;
MPRINT(EM_DIAGRAM):   else do;
1010161   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1010162   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1010163   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1010164   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1010165   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1010166   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1010167   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1010168   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1010169   +               GRP_MntMeatProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 1;
1010170   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010171   +            end;
MPRINT(EM_DIAGRAM):   end;
1010172   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1010173   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1010174   +                  GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1010175   +                  GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1010176   +                  GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1010177   +                  GRP_MntMeatProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = -1;
1010178   +                  GRP_MntMeatProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = -1;
1010179   +                  GRP_MntMeatProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = -1;
1010180   +                  GRP_MntMeatProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = -1;
1010181   +                  GRP_MntMeatProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = -1;
1010182   +                  GRP_MntMeatProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = -1;
1010183   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010184   +               end;
MPRINT(EM_DIAGRAM):   end;
1010185   +            end;
MPRINT(EM_DIAGRAM):   end;
1010186   +         end;
MPRINT(EM_DIAGRAM):   end;
1010187   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010188   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1010189   +               GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1010190   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010191   +            end;
MPRINT(EM_DIAGRAM):   end;
1010192   +         end;
MPRINT(EM_DIAGRAM):   end;
1010193   +      end;
MPRINT(EM_DIAGRAM):   end;
1010194   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1010195   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1010196   +            GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1010197   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010198   +         end;
MPRINT(EM_DIAGRAM):   end;
1010199   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010200   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1010201   +               GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1010202   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010203   +            end;
MPRINT(EM_DIAGRAM):   end;
1010204   +         end;
MPRINT(EM_DIAGRAM):   end;
1010205   +      end;
MPRINT(EM_DIAGRAM):   end;
1010206   +   end;
MPRINT(EM_DIAGRAM):   end;
1010207   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1010208   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1010209   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1010210   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1010211   +               GRP_MntMeatProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 1;
1010212   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010213   +            end;
MPRINT(EM_DIAGRAM):   end;
1010214   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1010215   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1010216   +                  GRP_MntMeatProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 1;
1010217   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010218   +               end;
MPRINT(EM_DIAGRAM):   end;
1010219   +            end;
MPRINT(EM_DIAGRAM):   end;
1010220   +         end;
MPRINT(EM_DIAGRAM):   end;
1010221   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010222   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1010223   +               GRP_MntMeatProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 1;
1010224   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010225   +            end;
MPRINT(EM_DIAGRAM):   end;
1010226   +         end;
MPRINT(EM_DIAGRAM):   end;
1010227   +      end;
MPRINT(EM_DIAGRAM):   end;
1010228   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1010229   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1010230   +            GRP_MntMeatProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 1;
1010231   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010232   +         end;
MPRINT(EM_DIAGRAM):   end;
1010233   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010234   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1010235   +               GRP_MntMeatProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 1;
1010236   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010237   +            end;
MPRINT(EM_DIAGRAM):   end;
1010238   +         end;
MPRINT(EM_DIAGRAM):   end;
1010239   +      end;
MPRINT(EM_DIAGRAM):   end;
1010240   +   end;
MPRINT(EM_DIAGRAM):   end;
1010241   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1010242   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1010243   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1010244   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1010245   +      GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
1010246   +      GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
1010247   +      GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
1010248   +      GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
1010249   +      GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
1010250   +      GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
1010251   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1010252   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1010253   +   end;
MPRINT(EM_DIAGRAM):   end;
1010254   +end;
MPRINT(EM_DIAGRAM):   end;
1010255   +
1010256   +*** Generate dummy variables for GRP_MntSweetProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntSweetProducts ;
1010257   +drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
1010258   +        GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8
1010259   +        GRP_MntSweetProducts9 GRP_MntSweetProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8 GRP_MntSweetProducts9
GRP_MntSweetProducts10 ;
1010260   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1010261   +GRP_MntSweetProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 0;
1010262   +GRP_MntSweetProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 0;
1010263   +GRP_MntSweetProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 0;
1010264   +GRP_MntSweetProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 0;
1010265   +GRP_MntSweetProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 0;
1010266   +GRP_MntSweetProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 0;
1010267   +GRP_MntSweetProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 0;
1010268   +GRP_MntSweetProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 0;
1010269   +if missing( GRP_MntSweetProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntSweetProducts ) then do;
1010270   +   GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
1010271   +   GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
1010272   +   GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
1010273   +   GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
1010274   +   GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
1010275   +   GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
1010276   +   GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
1010277   +   GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
1010278   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1010279   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1010280   +end;
MPRINT(EM_DIAGRAM):   end;
1010281   +else do;
MPRINT(EM_DIAGRAM):   else do;
1010282   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1010283   +   _dm12 = put( GRP_MntSweetProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntSweetProducts , BEST12. );
1010284   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1010285   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1010286   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1010287   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1010288   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1010289   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1010290   +               GRP_MntSweetProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 1;
1010291   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010292   +            end;
MPRINT(EM_DIAGRAM):   end;
1010293   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1010294   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1010295   +                  GRP_MntSweetProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = -1;
1010296   +                  GRP_MntSweetProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = -1;
1010297   +                  GRP_MntSweetProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = -1;
1010298   +                  GRP_MntSweetProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = -1;
1010299   +                  GRP_MntSweetProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = -1;
1010300   +                  GRP_MntSweetProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = -1;
1010301   +                  GRP_MntSweetProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = -1;
1010302   +                  GRP_MntSweetProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = -1;
1010303   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010304   +               end;
MPRINT(EM_DIAGRAM):   end;
1010305   +            end;
MPRINT(EM_DIAGRAM):   end;
1010306   +         end;
MPRINT(EM_DIAGRAM):   end;
1010307   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010308   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1010309   +               GRP_MntSweetProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 1;
1010310   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010311   +            end;
MPRINT(EM_DIAGRAM):   end;
1010312   +         end;
MPRINT(EM_DIAGRAM):   end;
1010313   +      end;
MPRINT(EM_DIAGRAM):   end;
1010314   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1010315   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1010316   +            GRP_MntSweetProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 1;
1010317   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010318   +         end;
MPRINT(EM_DIAGRAM):   end;
1010319   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010320   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1010321   +               GRP_MntSweetProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 1;
1010322   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010323   +            end;
MPRINT(EM_DIAGRAM):   end;
1010324   +         end;
MPRINT(EM_DIAGRAM):   end;
1010325   +      end;
MPRINT(EM_DIAGRAM):   end;
1010326   +   end;
MPRINT(EM_DIAGRAM):   end;
1010327   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1010328   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1010329   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1010330   +            GRP_MntSweetProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 1;
1010331   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010332   +         end;
MPRINT(EM_DIAGRAM):   end;
1010333   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010334   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1010335   +               GRP_MntSweetProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 1;
1010336   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010337   +            end;
MPRINT(EM_DIAGRAM):   end;
1010338   +         end;
MPRINT(EM_DIAGRAM):   end;
1010339   +      end;
MPRINT(EM_DIAGRAM):   end;
1010340   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1010341   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1010342   +            GRP_MntSweetProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 1;
1010343   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010344   +         end;
MPRINT(EM_DIAGRAM):   end;
1010345   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010346   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1010347   +               GRP_MntSweetProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 1;
1010348   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010349   +            end;
MPRINT(EM_DIAGRAM):   end;
1010350   +         end;
MPRINT(EM_DIAGRAM):   end;
1010351   +      end;
MPRINT(EM_DIAGRAM):   end;
1010352   +   end;
MPRINT(EM_DIAGRAM):   end;
1010353   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1010354   +      GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
1010355   +      GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
1010356   +      GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
1010357   +      GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
1010358   +      GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
1010359   +      GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
1010360   +      GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
1010361   +      GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
1010362   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1010363   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1010364   +   end;
MPRINT(EM_DIAGRAM):   end;
1010365   +end;
MPRINT(EM_DIAGRAM):   end;
1010366   +
1010367   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1010368   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5 GRP_MntWines6
1010369   +        GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5
GRP_MntWines6 GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
1010370   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1010371   +GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1010372   +GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1010373   +GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1010374   +GRP_MntWines5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 0;
1010375   +GRP_MntWines6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 0;
1010376   +GRP_MntWines7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 0;
1010377   +GRP_MntWines8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 0;
1010378   +GRP_MntWines9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 0;
1010379   +GRP_MntWines10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 0;
1010380   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1010381   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1010382   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1010383   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1010384   +   GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
1010385   +   GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
1010386   +   GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
1010387   +   GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
1010388   +   GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
1010389   +   GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
1010390   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1010391   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1010392   +end;
MPRINT(EM_DIAGRAM):   end;
1010393   +else do;
MPRINT(EM_DIAGRAM):   else do;
1010394   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1010395   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1010396   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1010397   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1010398   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1010399   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1010400   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1010401   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1010402   +               GRP_MntWines10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 1;
1010403   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010404   +            end;
MPRINT(EM_DIAGRAM):   end;
1010405   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1010406   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1010407   +                  GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1010408   +                  GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1010409   +                  GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1010410   +                  GRP_MntWines5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = -1;
1010411   +                  GRP_MntWines6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = -1;
1010412   +                  GRP_MntWines7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = -1;
1010413   +                  GRP_MntWines8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = -1;
1010414   +                  GRP_MntWines9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = -1;
1010415   +                  GRP_MntWines10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = -1;
1010416   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010417   +               end;
MPRINT(EM_DIAGRAM):   end;
1010418   +            end;
MPRINT(EM_DIAGRAM):   end;
1010419   +         end;
MPRINT(EM_DIAGRAM):   end;
1010420   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010421   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1010422   +               GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1010423   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010424   +            end;
MPRINT(EM_DIAGRAM):   end;
1010425   +         end;
MPRINT(EM_DIAGRAM):   end;
1010426   +      end;
MPRINT(EM_DIAGRAM):   end;
1010427   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1010428   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1010429   +            GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1010430   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010431   +         end;
MPRINT(EM_DIAGRAM):   end;
1010432   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010433   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1010434   +               GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1010435   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010436   +            end;
MPRINT(EM_DIAGRAM):   end;
1010437   +         end;
MPRINT(EM_DIAGRAM):   end;
1010438   +      end;
MPRINT(EM_DIAGRAM):   end;
1010439   +   end;
MPRINT(EM_DIAGRAM):   end;
1010440   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1010441   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1010442   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1010443   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1010444   +               GRP_MntWines5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 1;
1010445   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010446   +            end;
MPRINT(EM_DIAGRAM):   end;
1010447   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1010448   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1010449   +                  GRP_MntWines6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 1;
1010450   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010451   +               end;
MPRINT(EM_DIAGRAM):   end;
1010452   +            end;
MPRINT(EM_DIAGRAM):   end;
1010453   +         end;
MPRINT(EM_DIAGRAM):   end;
1010454   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010455   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1010456   +               GRP_MntWines7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 1;
1010457   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010458   +            end;
MPRINT(EM_DIAGRAM):   end;
1010459   +         end;
MPRINT(EM_DIAGRAM):   end;
1010460   +      end;
MPRINT(EM_DIAGRAM):   end;
1010461   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1010462   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1010463   +            GRP_MntWines8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 1;
1010464   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010465   +         end;
MPRINT(EM_DIAGRAM):   end;
1010466   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010467   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1010468   +               GRP_MntWines9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 1;
1010469   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010470   +            end;
MPRINT(EM_DIAGRAM):   end;
1010471   +         end;
MPRINT(EM_DIAGRAM):   end;
1010472   +      end;
MPRINT(EM_DIAGRAM):   end;
1010473   +   end;
MPRINT(EM_DIAGRAM):   end;
1010474   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1010475   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1010476   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1010477   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1010478   +      GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
1010479   +      GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
1010480   +      GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
1010481   +      GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
1010482   +      GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
1010483   +      GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
1010484   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1010485   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1010486   +   end;
MPRINT(EM_DIAGRAM):   end;
1010487   +end;
MPRINT(EM_DIAGRAM):   end;
1010488   +
1010489   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1010490   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
1010491   +        GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6
1010492   +        GRP_NumCatalogPurchases7 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6 GRP_NumCatalogPurchases7 ;
1010493   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1010494   +GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1010495   +GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1010496   +GRP_NumCatalogPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 0;
1010497   +GRP_NumCatalogPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 0;
1010498   +GRP_NumCatalogPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 0;
1010499   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1010500   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1010501   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1010502   +   GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
1010503   +   GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
1010504   +   GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
1010505   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1010506   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1010507   +end;
MPRINT(EM_DIAGRAM):   end;
1010508   +else do;
MPRINT(EM_DIAGRAM):   else do;
1010509   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1010510   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1010511   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1010512   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1010513   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1010514   +      if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1010515   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1010516   +            GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1010517   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010518   +         end;
MPRINT(EM_DIAGRAM):   end;
1010519   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010520   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1010521   +               GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1010522   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010523   +            end;
MPRINT(EM_DIAGRAM):   end;
1010524   +         end;
MPRINT(EM_DIAGRAM):   end;
1010525   +      end;
MPRINT(EM_DIAGRAM):   end;
1010526   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1010527   +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1010528   +            GRP_NumCatalogPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 1;
1010529   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010530   +         end;
MPRINT(EM_DIAGRAM):   end;
1010531   +      end;
MPRINT(EM_DIAGRAM):   end;
1010532   +   end;
MPRINT(EM_DIAGRAM):   end;
1010533   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1010534   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1010535   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1010536   +            GRP_NumCatalogPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 1;
1010537   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010538   +         end;
MPRINT(EM_DIAGRAM):   end;
1010539   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010540   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1010541   +               GRP_NumCatalogPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 1;
1010542   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010543   +            end;
MPRINT(EM_DIAGRAM):   end;
1010544   +         end;
MPRINT(EM_DIAGRAM):   end;
1010545   +      end;
MPRINT(EM_DIAGRAM):   end;
1010546   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1010547   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1010548   +            GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1010549   +            GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1010550   +            GRP_NumCatalogPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = -1;
1010551   +            GRP_NumCatalogPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = -1;
1010552   +            GRP_NumCatalogPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = -1;
1010553   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010554   +         end;
MPRINT(EM_DIAGRAM):   end;
1010555   +      end;
MPRINT(EM_DIAGRAM):   end;
1010556   +   end;
MPRINT(EM_DIAGRAM):   end;
1010557   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1010558   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1010559   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1010560   +      GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
1010561   +      GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
1010562   +      GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
1010563   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1010564   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1010565   +   end;
MPRINT(EM_DIAGRAM):   end;
1010566   +end;
MPRINT(EM_DIAGRAM):   end;
1010567   +
1010568   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1010569   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
1010570   +        GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7
1010571   +        GRP_NumDistPurchases8 GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7 GRP_NumDistPurchases8
GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
1010572   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1010573   +GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1010574   +GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1010575   +GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1010576   +GRP_NumDistPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 0;
1010577   +GRP_NumDistPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 0;
1010578   +GRP_NumDistPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 0;
1010579   +GRP_NumDistPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 0;
1010580   +GRP_NumDistPurchases9 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 0;
1010581   +GRP_NumDistPurchases10 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 0;
1010582   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1010583   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1010584   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1010585   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1010586   +   GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
1010587   +   GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
1010588   +   GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
1010589   +   GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
1010590   +   GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
1010591   +   GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
1010592   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1010593   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1010594   +end;
MPRINT(EM_DIAGRAM):   end;
1010595   +else do;
MPRINT(EM_DIAGRAM):   else do;
1010596   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1010597   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1010598   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1010599   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1010600   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1010601   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1010602   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1010603   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1010604   +               GRP_NumDistPurchases10 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 1;
1010605   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010606   +            end;
MPRINT(EM_DIAGRAM):   end;
1010607   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1010608   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1010609   +                  GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1010610   +                  GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1010611   +                  GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1010612   +                  GRP_NumDistPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = -1;
1010613   +                  GRP_NumDistPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = -1;
1010614   +                  GRP_NumDistPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = -1;
1010615   +                  GRP_NumDistPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = -1;
1010616   +                  GRP_NumDistPurchases9 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = -1;
1010617   +                  GRP_NumDistPurchases10 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = -1;
1010618   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010619   +               end;
MPRINT(EM_DIAGRAM):   end;
1010620   +            end;
MPRINT(EM_DIAGRAM):   end;
1010621   +         end;
MPRINT(EM_DIAGRAM):   end;
1010622   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010623   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1010624   +               GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1010625   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010626   +            end;
MPRINT(EM_DIAGRAM):   end;
1010627   +         end;
MPRINT(EM_DIAGRAM):   end;
1010628   +      end;
MPRINT(EM_DIAGRAM):   end;
1010629   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1010630   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1010631   +            GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1010632   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010633   +         end;
MPRINT(EM_DIAGRAM):   end;
1010634   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010635   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1010636   +               GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1010637   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010638   +            end;
MPRINT(EM_DIAGRAM):   end;
1010639   +         end;
MPRINT(EM_DIAGRAM):   end;
1010640   +      end;
MPRINT(EM_DIAGRAM):   end;
1010641   +   end;
MPRINT(EM_DIAGRAM):   end;
1010642   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1010643   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1010644   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1010645   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1010646   +               GRP_NumDistPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 1;
1010647   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010648   +            end;
MPRINT(EM_DIAGRAM):   end;
1010649   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1010650   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1010651   +                  GRP_NumDistPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 1;
1010652   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010653   +               end;
MPRINT(EM_DIAGRAM):   end;
1010654   +            end;
MPRINT(EM_DIAGRAM):   end;
1010655   +         end;
MPRINT(EM_DIAGRAM):   end;
1010656   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010657   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1010658   +               GRP_NumDistPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 1;
1010659   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010660   +            end;
MPRINT(EM_DIAGRAM):   end;
1010661   +         end;
MPRINT(EM_DIAGRAM):   end;
1010662   +      end;
MPRINT(EM_DIAGRAM):   end;
1010663   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1010664   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1010665   +            GRP_NumDistPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 1;
1010666   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010667   +         end;
MPRINT(EM_DIAGRAM):   end;
1010668   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010669   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1010670   +               GRP_NumDistPurchases9 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 1;
1010671   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010672   +            end;
MPRINT(EM_DIAGRAM):   end;
1010673   +         end;
MPRINT(EM_DIAGRAM):   end;
1010674   +      end;
MPRINT(EM_DIAGRAM):   end;
1010675   +   end;
MPRINT(EM_DIAGRAM):   end;
1010676   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1010677   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1010678   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1010679   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1010680   +      GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
1010681   +      GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
1010682   +      GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
1010683   +      GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
1010684   +      GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
1010685   +      GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
1010686   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1010687   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1010688   +   end;
MPRINT(EM_DIAGRAM):   end;
1010689   +end;
MPRINT(EM_DIAGRAM):   end;
1010690   +
1010691   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1010692   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
1010693   +        GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7
1010694   +        GRP_NumWebPurchases8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7 GRP_NumWebPurchases8 ;
1010695   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1010696   +GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1010697   +GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1010698   +GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1010699   +GRP_NumWebPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 0;
1010700   +GRP_NumWebPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 0;
1010701   +GRP_NumWebPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 0;
1010702   +GRP_NumWebPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 0;
1010703   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1010704   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1010705   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1010706   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1010707   +   GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
1010708   +   GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
1010709   +   GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
1010710   +   GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
1010711   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1010712   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1010713   +end;
MPRINT(EM_DIAGRAM):   end;
1010714   +else do;
MPRINT(EM_DIAGRAM):   else do;
1010715   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1010716   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1010717   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1010718   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1010719   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1010720   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1010721   +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1010722   +            GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1010723   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010724   +         end;
MPRINT(EM_DIAGRAM):   end;
1010725   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010726   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1010727   +               GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1010728   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010729   +            end;
MPRINT(EM_DIAGRAM):   end;
1010730   +         end;
MPRINT(EM_DIAGRAM):   end;
1010731   +      end;
MPRINT(EM_DIAGRAM):   end;
1010732   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1010733   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1010734   +            GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1010735   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010736   +         end;
MPRINT(EM_DIAGRAM):   end;
1010737   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010738   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1010739   +               GRP_NumWebPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 1;
1010740   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010741   +            end;
MPRINT(EM_DIAGRAM):   end;
1010742   +         end;
MPRINT(EM_DIAGRAM):   end;
1010743   +      end;
MPRINT(EM_DIAGRAM):   end;
1010744   +   end;
MPRINT(EM_DIAGRAM):   end;
1010745   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1010746   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1010747   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1010748   +            GRP_NumWebPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 1;
1010749   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010750   +         end;
MPRINT(EM_DIAGRAM):   end;
1010751   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010752   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1010753   +               GRP_NumWebPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 1;
1010754   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010755   +            end;
MPRINT(EM_DIAGRAM):   end;
1010756   +         end;
MPRINT(EM_DIAGRAM):   end;
1010757   +      end;
MPRINT(EM_DIAGRAM):   end;
1010758   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1010759   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1010760   +            GRP_NumWebPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 1;
1010761   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010762   +         end;
MPRINT(EM_DIAGRAM):   end;
1010763   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010764   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1010765   +               GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1010766   +               GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1010767   +               GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1010768   +               GRP_NumWebPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = -1;
1010769   +               GRP_NumWebPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = -1;
1010770   +               GRP_NumWebPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = -1;
1010771   +               GRP_NumWebPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = -1;
1010772   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010773   +            end;
MPRINT(EM_DIAGRAM):   end;
1010774   +         end;
MPRINT(EM_DIAGRAM):   end;
1010775   +      end;
MPRINT(EM_DIAGRAM):   end;
1010776   +   end;
MPRINT(EM_DIAGRAM):   end;
1010777   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1010778   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1010779   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1010780   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1010781   +      GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
1010782   +      GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
1010783   +      GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
1010784   +      GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
1010785   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1010786   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1010787   +   end;
MPRINT(EM_DIAGRAM):   end;
1010788   +end;
MPRINT(EM_DIAGRAM):   end;
1010789   +
1010790   +*** Generate dummy variables for GRP_NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebVisitsMonth ;
1010791   +drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3 GRP_NumWebVisitsMonth4
1010792   +        GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
1010793   +        GRP_NumWebVisitsMonth8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3
GRP_NumWebVisitsMonth4 GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
GRP_NumWebVisitsMonth8 ;
1010794   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1010795   +GRP_NumWebVisitsMonth2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 0;
1010796   +GRP_NumWebVisitsMonth3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 0;
1010797   +GRP_NumWebVisitsMonth4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 0;
1010798   +GRP_NumWebVisitsMonth5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 0;
1010799   +GRP_NumWebVisitsMonth6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 0;
1010800   +GRP_NumWebVisitsMonth7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 0;
1010801   +GRP_NumWebVisitsMonth8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 0;
1010802   +if missing( GRP_NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebVisitsMonth ) then do;
1010803   +   GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
1010804   +   GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
1010805   +   GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
1010806   +   GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
1010807   +   GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
1010808   +   GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
1010809   +   GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
1010810   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1010811   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1010812   +end;
MPRINT(EM_DIAGRAM):   end;
1010813   +else do;
MPRINT(EM_DIAGRAM):   else do;
1010814   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1010815   +   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
1010816   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1010817   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1010818   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1010819   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1010820   +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1010821   +            GRP_NumWebVisitsMonth2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 1;
1010822   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010823   +         end;
MPRINT(EM_DIAGRAM):   end;
1010824   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010825   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1010826   +               GRP_NumWebVisitsMonth3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 1;
1010827   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010828   +            end;
MPRINT(EM_DIAGRAM):   end;
1010829   +         end;
MPRINT(EM_DIAGRAM):   end;
1010830   +      end;
MPRINT(EM_DIAGRAM):   end;
1010831   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1010832   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1010833   +            GRP_NumWebVisitsMonth4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 1;
1010834   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010835   +         end;
MPRINT(EM_DIAGRAM):   end;
1010836   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010837   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1010838   +               GRP_NumWebVisitsMonth5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 1;
1010839   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010840   +            end;
MPRINT(EM_DIAGRAM):   end;
1010841   +         end;
MPRINT(EM_DIAGRAM):   end;
1010842   +      end;
MPRINT(EM_DIAGRAM):   end;
1010843   +   end;
MPRINT(EM_DIAGRAM):   end;
1010844   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1010845   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1010846   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1010847   +            GRP_NumWebVisitsMonth6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 1;
1010848   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010849   +         end;
MPRINT(EM_DIAGRAM):   end;
1010850   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010851   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1010852   +               GRP_NumWebVisitsMonth7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 1;
1010853   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010854   +            end;
MPRINT(EM_DIAGRAM):   end;
1010855   +         end;
MPRINT(EM_DIAGRAM):   end;
1010856   +      end;
MPRINT(EM_DIAGRAM):   end;
1010857   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1010858   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1010859   +            GRP_NumWebVisitsMonth8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 1;
1010860   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010861   +         end;
MPRINT(EM_DIAGRAM):   end;
1010862   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010863   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1010864   +               GRP_NumWebVisitsMonth2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = -1;
1010865   +               GRP_NumWebVisitsMonth3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = -1;
1010866   +               GRP_NumWebVisitsMonth4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = -1;
1010867   +               GRP_NumWebVisitsMonth5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = -1;
1010868   +               GRP_NumWebVisitsMonth6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = -1;
1010869   +               GRP_NumWebVisitsMonth7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = -1;
1010870   +               GRP_NumWebVisitsMonth8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = -1;
1010871   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010872   +            end;
MPRINT(EM_DIAGRAM):   end;
1010873   +         end;
MPRINT(EM_DIAGRAM):   end;
1010874   +      end;
MPRINT(EM_DIAGRAM):   end;
1010875   +   end;
MPRINT(EM_DIAGRAM):   end;
1010876   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1010877   +      GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
1010878   +      GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
1010879   +      GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
1010880   +      GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
1010881   +      GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
1010882   +      GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
1010883   +      GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
1010884   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1010885   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1010886   +   end;
MPRINT(EM_DIAGRAM):   end;
1010887   +end;
MPRINT(EM_DIAGRAM):   end;
1010888   +
1010889   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1010890   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
1010891   +        GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
1010892   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1010893   +GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1010894   +GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1010895   +GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1010896   +GRP_RFMstat5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 0;
1010897   +GRP_RFMstat6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 0;
1010898   +GRP_RFMstat7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 0;
1010899   +GRP_RFMstat8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 0;
1010900   +GRP_RFMstat9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 0;
1010901   +GRP_RFMstat10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 0;
1010902   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1010903   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1010904   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1010905   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1010906   +   GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
1010907   +   GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
1010908   +   GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
1010909   +   GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
1010910   +   GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
1010911   +   GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
1010912   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1010913   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1010914   +end;
MPRINT(EM_DIAGRAM):   end;
1010915   +else do;
MPRINT(EM_DIAGRAM):   else do;
1010916   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1010917   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1010918   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1010919   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1010920   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1010921   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1010922   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1010923   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1010924   +               GRP_RFMstat10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 1;
1010925   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010926   +            end;
MPRINT(EM_DIAGRAM):   end;
1010927   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1010928   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1010929   +                  GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1010930   +                  GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1010931   +                  GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1010932   +                  GRP_RFMstat5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = -1;
1010933   +                  GRP_RFMstat6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = -1;
1010934   +                  GRP_RFMstat7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = -1;
1010935   +                  GRP_RFMstat8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = -1;
1010936   +                  GRP_RFMstat9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = -1;
1010937   +                  GRP_RFMstat10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = -1;
1010938   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010939   +               end;
MPRINT(EM_DIAGRAM):   end;
1010940   +            end;
MPRINT(EM_DIAGRAM):   end;
1010941   +         end;
MPRINT(EM_DIAGRAM):   end;
1010942   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010943   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1010944   +               GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1010945   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010946   +            end;
MPRINT(EM_DIAGRAM):   end;
1010947   +         end;
MPRINT(EM_DIAGRAM):   end;
1010948   +      end;
MPRINT(EM_DIAGRAM):   end;
1010949   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1010950   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1010951   +            GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1010952   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010953   +         end;
MPRINT(EM_DIAGRAM):   end;
1010954   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010955   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1010956   +               GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1010957   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010958   +            end;
MPRINT(EM_DIAGRAM):   end;
1010959   +         end;
MPRINT(EM_DIAGRAM):   end;
1010960   +      end;
MPRINT(EM_DIAGRAM):   end;
1010961   +   end;
MPRINT(EM_DIAGRAM):   end;
1010962   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1010963   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1010964   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1010965   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1010966   +               GRP_RFMstat5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 1;
1010967   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010968   +            end;
MPRINT(EM_DIAGRAM):   end;
1010969   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1010970   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1010971   +                  GRP_RFMstat6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 1;
1010972   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010973   +               end;
MPRINT(EM_DIAGRAM):   end;
1010974   +            end;
MPRINT(EM_DIAGRAM):   end;
1010975   +         end;
MPRINT(EM_DIAGRAM):   end;
1010976   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010977   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1010978   +               GRP_RFMstat7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 1;
1010979   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010980   +            end;
MPRINT(EM_DIAGRAM):   end;
1010981   +         end;
MPRINT(EM_DIAGRAM):   end;
1010982   +      end;
MPRINT(EM_DIAGRAM):   end;
1010983   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1010984   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1010985   +            GRP_RFMstat8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 1;
1010986   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010987   +         end;
MPRINT(EM_DIAGRAM):   end;
1010988   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1010989   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1010990   +               GRP_RFMstat9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 1;
1010991   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1010992   +            end;
MPRINT(EM_DIAGRAM):   end;
1010993   +         end;
MPRINT(EM_DIAGRAM):   end;
1010994   +      end;
MPRINT(EM_DIAGRAM):   end;
1010995   +   end;
MPRINT(EM_DIAGRAM):   end;
1010996   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1010997   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1010998   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1010999   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1011000   +      GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
1011001   +      GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
1011002   +      GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
1011003   +      GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
1011004   +      GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
1011005   +      GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
1011006   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1011007   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1011008   +   end;
MPRINT(EM_DIAGRAM):   end;
1011009   +end;
MPRINT(EM_DIAGRAM):   end;
1011010   +
1011011   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1011012   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
1011013   +        GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
1011014   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1011015   +GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1011016   +GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1011017   +GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1011018   +GRP_RMntFrq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 0;
1011019   +GRP_RMntFrq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 0;
1011020   +GRP_RMntFrq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 0;
1011021   +GRP_RMntFrq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 0;
1011022   +GRP_RMntFrq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 0;
1011023   +GRP_RMntFrq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 0;
1011024   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1011025   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1011026   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1011027   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1011028   +   GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
1011029   +   GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
1011030   +   GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
1011031   +   GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
1011032   +   GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
1011033   +   GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
1011034   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1011035   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1011036   +end;
MPRINT(EM_DIAGRAM):   end;
1011037   +else do;
MPRINT(EM_DIAGRAM):   else do;
1011038   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1011039   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1011040   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1011041   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1011042   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1011043   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1011044   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1011045   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1011046   +               GRP_RMntFrq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 1;
1011047   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1011048   +            end;
MPRINT(EM_DIAGRAM):   end;
1011049   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1011050   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1011051   +                  GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1011052   +                  GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1011053   +                  GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1011054   +                  GRP_RMntFrq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = -1;
1011055   +                  GRP_RMntFrq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = -1;
1011056   +                  GRP_RMntFrq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = -1;
1011057   +                  GRP_RMntFrq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = -1;
1011058   +                  GRP_RMntFrq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = -1;
1011059   +                  GRP_RMntFrq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = -1;
1011060   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1011061   +               end;
MPRINT(EM_DIAGRAM):   end;
1011062   +            end;
MPRINT(EM_DIAGRAM):   end;
1011063   +         end;
MPRINT(EM_DIAGRAM):   end;
1011064   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1011065   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1011066   +               GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1011067   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1011068   +            end;
MPRINT(EM_DIAGRAM):   end;
1011069   +         end;
MPRINT(EM_DIAGRAM):   end;
1011070   +      end;
MPRINT(EM_DIAGRAM):   end;
1011071   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1011072   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1011073   +            GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1011074   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1011075   +         end;
MPRINT(EM_DIAGRAM):   end;
1011076   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1011077   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1011078   +               GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1011079   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1011080   +            end;
MPRINT(EM_DIAGRAM):   end;
1011081   +         end;
MPRINT(EM_DIAGRAM):   end;
1011082   +      end;
MPRINT(EM_DIAGRAM):   end;
1011083   +   end;
MPRINT(EM_DIAGRAM):   end;
1011084   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1011085   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1011086   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1011087   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1011088   +               GRP_RMntFrq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 1;
1011089   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1011090   +            end;
MPRINT(EM_DIAGRAM):   end;
1011091   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1011092   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1011093   +                  GRP_RMntFrq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 1;
1011094   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1011095   +               end;
MPRINT(EM_DIAGRAM):   end;
1011096   +            end;
MPRINT(EM_DIAGRAM):   end;
1011097   +         end;
MPRINT(EM_DIAGRAM):   end;
1011098   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1011099   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1011100   +               GRP_RMntFrq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 1;
1011101   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1011102   +            end;
MPRINT(EM_DIAGRAM):   end;
1011103   +         end;
MPRINT(EM_DIAGRAM):   end;
1011104   +      end;
MPRINT(EM_DIAGRAM):   end;
1011105   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1011106   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1011107   +            GRP_RMntFrq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 1;
1011108   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1011109   +         end;
MPRINT(EM_DIAGRAM):   end;
1011110   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1011111   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1011112   +               GRP_RMntFrq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 1;
1011113   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1011114   +            end;
MPRINT(EM_DIAGRAM):   end;
1011115   +         end;
MPRINT(EM_DIAGRAM):   end;
1011116   +      end;
MPRINT(EM_DIAGRAM):   end;
1011117   +   end;
MPRINT(EM_DIAGRAM):   end;
1011118   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1011119   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1011120   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1011121   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1011122   +      GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
1011123   +      GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
1011124   +      GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
1011125   +      GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
1011126   +      GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
1011127   +      GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
1011128   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1011129   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1011130   +   end;
MPRINT(EM_DIAGRAM):   end;
1011131   +end;
MPRINT(EM_DIAGRAM):   end;
1011132   +
1011133   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1011134   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
1011135   +        GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
1011136   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1011137   +GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1011138   +GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1011139   +GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1011140   +GRP_Recency5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 0;
1011141   +GRP_Recency6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 0;
1011142   +GRP_Recency7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 0;
1011143   +GRP_Recency8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 0;
1011144   +GRP_Recency9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 0;
1011145   +GRP_Recency10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 0;
1011146   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1011147   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1011148   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1011149   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1011150   +   GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
1011151   +   GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
1011152   +   GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
1011153   +   GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
1011154   +   GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
1011155   +   GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
1011156   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1011157   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1011158   +end;
MPRINT(EM_DIAGRAM):   end;
1011159   +else do;
MPRINT(EM_DIAGRAM):   else do;
1011160   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1011161   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1011162   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1011163   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1011164   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1011165   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1011166   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1011167   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1011168   +               GRP_Recency10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 1;
1011169   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1011170   +            end;
MPRINT(EM_DIAGRAM):   end;
1011171   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1011172   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1011173   +                  GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1011174   +                  GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1011175   +                  GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1011176   +                  GRP_Recency5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = -1;
1011177   +                  GRP_Recency6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = -1;
1011178   +                  GRP_Recency7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = -1;
1011179   +                  GRP_Recency8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = -1;
1011180   +                  GRP_Recency9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = -1;
1011181   +                  GRP_Recency10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = -1;
1011182   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1011183   +               end;
MPRINT(EM_DIAGRAM):   end;
1011184   +            end;
MPRINT(EM_DIAGRAM):   end;
1011185   +         end;
MPRINT(EM_DIAGRAM):   end;
1011186   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1011187   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1011188   +               GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1011189   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1011190   +            end;
MPRINT(EM_DIAGRAM):   end;
1011191   +         end;
MPRINT(EM_DIAGRAM):   end;
1011192   +      end;
MPRINT(EM_DIAGRAM):   end;
1011193   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1011194   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1011195   +            GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1011196   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1011197   +         end;
MPRINT(EM_DIAGRAM):   end;
1011198   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1011199   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1011200   +               GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1011201   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1011202   +            end;
MPRINT(EM_DIAGRAM):   end;
1011203   +         end;
MPRINT(EM_DIAGRAM):   end;
1011204   +      end;
MPRINT(EM_DIAGRAM):   end;
1011205   +   end;
MPRINT(EM_DIAGRAM):   end;
1011206   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1011207   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1011208   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1011209   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1011210   +               GRP_Recency5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 1;
1011211   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1011212   +            end;
MPRINT(EM_DIAGRAM):   end;
1011213   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1011214   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1011215   +                  GRP_Recency6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 1;
1011216   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1011217   +               end;
MPRINT(EM_DIAGRAM):   end;
1011218   +            end;
MPRINT(EM_DIAGRAM):   end;
1011219   +         end;
MPRINT(EM_DIAGRAM):   end;
1011220   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1011221   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1011222   +               GRP_Recency7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 1;
1011223   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1011224   +            end;
MPRINT(EM_DIAGRAM):   end;
1011225   +         end;
MPRINT(EM_DIAGRAM):   end;
1011226   +      end;
MPRINT(EM_DIAGRAM):   end;
1011227   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1011228   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1011229   +            GRP_Recency8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 1;
1011230   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1011231   +         end;
MPRINT(EM_DIAGRAM):   end;
1011232   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1011233   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1011234   +               GRP_Recency9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 1;
1011235   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1011236   +            end;
MPRINT(EM_DIAGRAM):   end;
1011237   +         end;
MPRINT(EM_DIAGRAM):   end;
1011238   +      end;
MPRINT(EM_DIAGRAM):   end;
1011239   +   end;
MPRINT(EM_DIAGRAM):   end;
1011240   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1011241   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1011242   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1011243   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1011244   +      GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
1011245   +      GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
1011246   +      GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
1011247   +      GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
1011248   +      GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
1011249   +      GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
1011250   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1011251   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1011252   +   end;
MPRINT(EM_DIAGRAM):   end;
1011253   +end;
MPRINT(EM_DIAGRAM):   end;
1011254   +
1011255   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1011256   +*** Checking missing input Interval
1011257   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1011258   +
1011259   +IF NMISS(
1011260   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1011261   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1011262   +
1011263   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1011264   +END;
MPRINT(EM_DIAGRAM):   END;
1011265   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1011266   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1011267   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1011268   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1011269   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1011270   +END;
MPRINT(EM_DIAGRAM):   END;
1011271   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1011272   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1011273   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1011274   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1011275   +END;
MPRINT(EM_DIAGRAM):   END;
1011276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1011277   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1011278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1011279   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1011280   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1011281   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1011282   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1011283   +   H11  =    -0.04164287978559 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.04164287978559 * S_Year_Birth ;
1011284   +   H12  =    -0.02490264183444 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.02490264183444 * S_Year_Birth ;
1011285   +   H13  =     0.04507798460994 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.04507798460994 * S_Year_Birth ;
1011286   +   H14  =      0.1183690193773 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.1183690193773 * S_Year_Birth ;
1011287   +   H15  =    -0.21394698598762 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.21394698598762 * S_Year_Birth ;
1011288   +   H16  =     0.03665586831897 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = 0.03665586831897 * S_Year_Birth ;
1011289   +   H11  = H11  +    -0.41114343375393 * GRP_AcceptedCmp52
1011290   +          +    -0.14428053886192 * GRP_AcceptedCmpTotal3
1011291   +          +     0.02494899822458 * GRP_Frq2  +      0.0755437728787 * GRP_Frq3
1011292   +          +    -0.11590634033502 * GRP_Frq4  +     0.00798603100667 * GRP_Frq5
1011293   +          +    -0.15439129854138 * GRP_Frq6  +     0.03772268032836 * GRP_Frq7
1011294   +          +    -0.01518216152977 * GRP_Frq8  +    -0.00058235066611 * GRP_Frq9
1011295   +          +    -0.03373106828213 * GRP_Frq10  +     0.08259003699244 *
1011296   +        GRP_Income2  +     0.05322186464327 * GRP_Income3
1011297   +          +     0.02970652269421 * GRP_Income4  +    -0.03522946367528 *
1011298   +        GRP_Income5  +     0.01621699696165 * GRP_Income6
1011299   +          +    -0.07093297239275 * GRP_Income7  +     -0.0122745789347 *
1011300   +        GRP_Income8  +     0.20668262349288 * GRP_Income9
1011301   +          +     0.17321621879494 * GRP_Income10  +     0.04203078613277 *
1011302   +        GRP_Mnt2  +     0.03302522237746 * GRP_Mnt3  +    -0.06604968615825 *
1011303   +        GRP_Mnt4  +     -0.0338011225884 * GRP_Mnt5  +    -0.06018351711892 *
1011304   +        GRP_Mnt6  +     0.05369737169858 * GRP_Mnt7  +     0.15193171494077 *
1011305   +        GRP_Mnt8  +    -0.01001992932469 * GRP_Mnt9  +     0.15132478263306 *
1011306   +        GRP_Mnt10  +      0.0834891458205 * GRP_MntFishProducts3
1011307   +          +    -0.01195735120186 * GRP_MntFishProducts4
1011308   +          +    -0.06708453587041 * GRP_MntFishProducts5
1011309   +          +    -0.02680253338094 * GRP_MntFishProducts6
1011310   +          +     0.07892124193799 * GRP_MntFishProducts7
1011311   +          +     0.12808064695802 * GRP_MntFishProducts8
1011312   +          +     0.14943450902453 * GRP_MntFishProducts9
1011313   +          +    -0.03915291343309 * GRP_MntFishProducts10
1011314   +          +     0.12622003311103 * GRP_MntGoldProds2
1011315   +          +     0.04845903153601 * GRP_MntGoldProds3
1011316   +          +    -0.08370679196604 * GRP_MntGoldProds4
1011317   +          +    -0.05651145689444 * GRP_MntGoldProds5
1011318   +          +     0.08465653011715 * GRP_MntGoldProds6
1011319   +          +    -0.04548010470735 * GRP_MntGoldProds7
1011320   +          +    -0.29950770690943 * GRP_MntGoldProds8
1011321   +          +    -0.16078656397499 * GRP_MntGoldProds9
1011322   +          +    -0.12650170215916 * GRP_MntGoldProds10
1011323   +          +    -0.20582413521459 * GRP_MntMeatProducts2
1011324   +          +    -0.19301669866874 * GRP_MntMeatProducts3
1011325   +          +    -0.10052903349136 * GRP_MntMeatProducts4
1011326   +          +    -0.02673606650631 * GRP_MntMeatProducts5
1011327   +          +    -0.05608459630015 * GRP_MntMeatProducts6
1011328   +          +    -0.24453752978062 * GRP_MntMeatProducts7
1011329   +          +     0.02869831662267 * GRP_MntMeatProducts8
1011330   +          +     0.01206766737407 * GRP_MntMeatProducts9
1011331   +          +     0.22489561550264 * GRP_MntMeatProducts10
1011332   +          +    -0.02209567942784 * GRP_MntSweetProducts3
1011333   +          +     0.16105454590149 * GRP_MntSweetProducts4
1011334   +          +    -0.01229323162486 * GRP_MntSweetProducts5
1011335   +          +    -0.09424409723888 * GRP_MntSweetProducts6
1011336   +          +     0.12107663427317 * GRP_MntSweetProducts7
1011337   +          +     0.09962269280971 * GRP_MntSweetProducts8
1011338   +          +     0.05361406364518 * GRP_MntSweetProducts9
1011339   +          +    -0.00395783275124 * GRP_MntSweetProducts10
1011340   +          +     0.08949226622664 * GRP_MntWines2  +     0.04075126649658 *
1011341   +        GRP_MntWines3  +    -0.11091151930043 * GRP_MntWines4
1011342   +          +     0.01814630958287 * GRP_MntWines5  +     0.18880264577509 *
1011343   +        GRP_MntWines6  +     -0.0373067553175 * GRP_MntWines7
1011344   +          +    -0.00287969317399 * GRP_MntWines8  +     -0.3523382993572 *
1011345   +        GRP_MntWines9  +    -0.34266498513706 * GRP_MntWines10
1011346   +          +    -0.14803737137331 * GRP_NumCatalogPurchases3
1011347   +          +    -0.08265008862549 * GRP_NumCatalogPurchases4
1011348   +          +    -0.12511088178753 * GRP_NumCatalogPurchases5
1011349   +          +     0.00474968987534 * GRP_NumCatalogPurchases6
1011350   +          +     0.14609799849823 * GRP_NumCatalogPurchases7
1011351   +          +    -0.05389661542955 * GRP_NumDistPurchases2
1011352   +          +    -0.11738842840653 * GRP_NumDistPurchases3
1011353   +          +    -0.15421759544192 * GRP_NumDistPurchases4
1011354   +          +    -0.10089958443443 * GRP_NumDistPurchases5
1011355   +          +    -0.04876379400743 * GRP_NumDistPurchases6
1011356   +          +    -0.18872427849232 * GRP_NumDistPurchases7
1011357   +          +    -0.02839661025435 * GRP_NumDistPurchases8
1011358   +          +     0.09712629880452 * GRP_NumDistPurchases9
1011359   +          +     0.12000394616091 * GRP_NumDistPurchases10
1011360   +          +    -0.13603297525579 * GRP_NumWebPurchases2
1011361   +          +     0.10268732487313 * GRP_NumWebPurchases3
1011362   +          +    -0.01771398558841 * GRP_NumWebPurchases4
1011363   +          +     0.00479481463651 * GRP_NumWebPurchases5
1011364   +          +    -0.08807024568619 * GRP_NumWebPurchases6
1011365   +          +    -0.08333649974504 * GRP_NumWebPurchases7
1011366   +          +     0.28590568471848 * GRP_NumWebPurchases8
1011367   +          +    -0.06598504122009 * GRP_NumWebVisitsMonth2
1011368   +          +    -0.02372166000515 * GRP_NumWebVisitsMonth3
1011369   +          +     -0.1032796286982 * GRP_NumWebVisitsMonth4
1011370   +          +    -0.10680258273696 * GRP_NumWebVisitsMonth5
1011371   +          +      0.1065086124019 * GRP_NumWebVisitsMonth6
1011372   +          +     0.04050154033216 * GRP_NumWebVisitsMonth7
1011373   +          +     0.32964695288769 * GRP_NumWebVisitsMonth8
1011374   +          +     0.14827099846784 * GRP_RFMstat2  +    -0.07995093014675 *
1011375   +        GRP_RFMstat3  +    -0.01585578103823 * GRP_RFMstat4
1011376   +          +     0.08565308252298 * GRP_RFMstat5  +    -0.09304024805558 *
1011377   +        GRP_RFMstat6  +    -0.07290227780167 * GRP_RFMstat7
1011378   +          +    -0.07617585964696 * GRP_RFMstat8  +     -0.0587968344928 *
1011379   +        GRP_RFMstat9  +    -0.01551420153256 * GRP_RFMstat10
1011380   +          +     0.21226282821781 * GRP_RMntFrq2  +     0.04770705042442 *
1011381   +        GRP_RMntFrq3  +     0.22006470165495 * GRP_RMntFrq4
1011382   +          +     0.13763540637433 * GRP_RMntFrq5  +    -0.10972526934296 *
1011383   +        GRP_RMntFrq6  +     0.08304532044699 * GRP_RMntFrq7
1011384   +          +     0.15788377163489 * GRP_RMntFrq8  +      0.1460293835649 *
1011385   +        GRP_RMntFrq9  +     0.00491352943087 * GRP_RMntFrq10
1011386   +          +     0.17421887439111 * GRP_Recency2  +     0.20197432720718 *
1011387   +        GRP_Recency3  +    -0.01610485949606 * GRP_Recency4
1011388   +          +     0.07705394334947 * GRP_Recency5  +     0.03059327385395 *
1011389   +        GRP_Recency6  +    -0.13952963263034 * GRP_Recency7
1011390   +          +    -0.12436739033264 * GRP_Recency8  +     0.03881295285714 *
1011391   +        GRP_Recency9  +     -0.2017924917039 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41114343375393 * GRP_AcceptedCmp52 + -0.14428053886192 *
GRP_AcceptedCmpTotal3 + 0.02494899822458 * GRP_Frq2 + 0.0755437728787 * GRP_Frq3 +
-0.11590634033502 * GRP_Frq4 + 0.00798603100667 * GRP_Frq5 + -0.15439129854138 * GRP_Frq6 +
0.03772268032836 * GRP_Frq7 + -0.01518216152977 * GRP_Frq8 + -0.00058235066611 * GRP_Frq9 +
-0.03373106828213 * GRP_Frq10 + 0.08259003699244 * GRP_Income2 + 0.05322186464327 *
GRP_Income3 + 0.02970652269421 * GRP_Income4 + -0.03522946367528 * GRP_Income5 +
0.01621699696165 * GRP_Income6 + -0.07093297239275 * GRP_Income7 + -0.0122745789347 *
GRP_Income8 + 0.20668262349288 * GRP_Income9 + 0.17321621879494 * GRP_Income10 +
0.04203078613277 * GRP_Mnt2 + 0.03302522237746 * GRP_Mnt3 + -0.06604968615825 * GRP_Mnt4 +
-0.0338011225884 * GRP_Mnt5 + -0.06018351711892 * GRP_Mnt6 + 0.05369737169858 * GRP_Mnt7 +
0.15193171494077 * GRP_Mnt8 + -0.01001992932469 * GRP_Mnt9 + 0.15132478263306 * GRP_Mnt10 +
0.0834891458205 * GRP_MntFishProducts3 + -0.01195735120186 * GRP_MntFishProducts4 +
-0.06708453587041 * GRP_MntFishProducts5 + -0.02680253338094 * GRP_MntFishProducts6 +
0.07892124193799 * GRP_MntFishProducts7 + 0.12808064695802 * GRP_MntFishProducts8 +
0.14943450902453 * GRP_MntFishProducts9 + -0.03915291343309 * GRP_MntFishProducts10 +
0.12622003311103 * GRP_MntGoldProds2 + 0.04845903153601 * GRP_MntGoldProds3 +
-0.08370679196604 * GRP_MntGoldProds4 + -0.05651145689444 * GRP_MntGoldProds5 +
0.08465653011715 * GRP_MntGoldProds6 + -0.04548010470735 * GRP_MntGoldProds7 +
-0.29950770690943 * GRP_MntGoldProds8 + -0.16078656397499 * GRP_MntGoldProds9 +
-0.12650170215916 * GRP_MntGoldProds10 + -0.20582413521459 * GRP_MntMeatProducts2 +
-0.19301669866874 * GRP_MntMeatProducts3 + -0.10052903349136 * GRP_MntMeatProducts4 +
-0.02673606650631 * GRP_MntMeatProducts5 + -0.05608459630015 * GRP_MntMeatProducts6 +
-0.24453752978062 * GRP_MntMeatProducts7 + 0.02869831662267 * GRP_MntMeatProducts8 +
0.01206766737407 * GRP_MntMeatProducts9 + 0.22489561550264 * GRP_MntMeatProducts10 +
-0.02209567942784 * GRP_MntSweetProducts3 + 0.16105454590149 * GRP_MntSweetProducts4 +
-0.01229323162486 * GRP_MntSweetProducts5 + -0.09424409723888 * GRP_MntSweetProducts6 +
0.12107663427317 * GRP_MntSweetProducts7 + 0.09962269280971 * GRP_MntSweetProducts8 +
0.05361406364518 * GRP_MntSweetProducts9 + -0.00395783275124 * GRP_MntSweetProducts10 +
0.08949226622664 * GRP_MntWines2 + 0.04075126649658 * GRP_MntWines3 + -0.11091151930043 *
GRP_MntWines4 + 0.01814630958287 * GRP_MntWines5 + 0.18880264577509 * GRP_MntWines6 +
-0.0373067553175 * GRP_MntWines7 + -0.00287969317399 * GRP_MntWines8 + -0.3523382993572 *
GRP_MntWines9 + -0.34266498513706 * GRP_MntWines10 + -0.14803737137331 *
GRP_NumCatalogPurchases3 + -0.08265008862549 * GRP_NumCatalogPurchases4 + -0.12511088178753 *
GRP_NumCatalogPurchases5 + 0.00474968987534 * GRP_NumCatalogPurchases6 + 0.14609799849823 *
GRP_NumCatalogPurchases7 + -0.05389661542955 * GRP_NumDistPurchases2 + -0.11738842840653 *
GRP_NumDistPurchases3 + -0.15421759544192 * GRP_NumDistPurchases4 + -0.10089958443443 *
GRP_NumDistPurchases5 + -0.04876379400743 * GRP_NumDistPurchases6 + -0.18872427849232 *
GRP_NumDistPurchases7 + -0.02839661025435 * GRP_NumDistPurchases8 + 0.09712629880452 *
GRP_NumDistPurchases9 + 0.12000394616091 * GRP_NumDistPurchases10 + -0.13603297525579 *
GRP_NumWebPurchases2 + 0.10268732487313 * GRP_NumWebPurchases3 + -0.01771398558841 *
GRP_NumWebPurchases4 + 0.00479481463651 * GRP_NumWebPurchases5 + -0.08807024568619 *
GRP_NumWebPurchases6 + -0.08333649974504 * GRP_NumWebPurchases7 + 0.28590568471848 *
GRP_NumWebPurchases8 + -0.06598504122009 * GRP_NumWebVisitsMonth2 + -0.02372166000515 *
GRP_NumWebVisitsMonth3 + -0.1032796286982 * GRP_NumWebVisitsMonth4 + -0.10680258273696 *
GRP_NumWebVisitsMonth5 + 0.1065086124019 * GRP_NumWebVisitsMonth6 + 0.04050154033216 *
GRP_NumWebVisitsMonth7 + 0.32964695288769 * GRP_NumWebVisitsMonth8 + 0.14827099846784 *
GRP_RFMstat2 + -0.07995093014675 * GRP_RFMstat3 + -0.01585578103823 * GRP_RFMstat4 +
0.08565308252298 * GRP_RFMstat5 + -0.09304024805558 * GRP_RFMstat6 + -0.07290227780167 *
GRP_RFMstat7 + -0.07617585964696 * GRP_RFMstat8 + -0.0587968344928 * GRP_RFMstat9 +
-0.01551420153256 * GRP_RFMstat10 + 0.21226282821781 * GRP_RMntFrq2 + 0.04770705042442 *
GRP_RMntFrq3 + 0.22006470165495 * GRP_RMntFrq4 + 0.13763540637433 * GRP_RMntFrq5 +
-0.10972526934296 * GRP_RMntFrq6 + 0.08304532044699 * GRP_RMntFrq7 + 0.15788377163489 *
GRP_RMntFrq8 + 0.1460293835649 * GRP_RMntFrq9 + 0.00491352943087 * GRP_RMntFrq10 +
0.17421887439111 * GRP_Recency2 + 0.20197432720718 * GRP_Recency3 + -0.01610485949606 *
GRP_Recency4 + 0.07705394334947 * GRP_Recency5 + 0.03059327385395 * GRP_Recency6 +
-0.13952963263034 * GRP_Recency7 + -0.12436739033264 * GRP_Recency8 + 0.03881295285714 *
GRP_Recency9 + -0.2017924917039 * GRP_Recency10 ;
1011392   +   H12  = H12  +     -0.1274374305515 * GRP_AcceptedCmp52
1011393   +          +    -0.03296718660529 * GRP_AcceptedCmpTotal3
1011394   +          +    -0.00158749941279 * GRP_Frq2  +     0.13135632234122 * GRP_Frq3
1011395   +          +     0.11174599066781 * GRP_Frq4  +     0.08293204522419 * GRP_Frq5
1011396   +          +     0.07891839019015 * GRP_Frq6  +     0.10689447665509 * GRP_Frq7
1011397   +          +      -0.058875592211 * GRP_Frq8  +    -0.08506909936634 * GRP_Frq9
1011398   +          +    -0.03761019712811 * GRP_Frq10  +    -0.11942683577675 *
1011399   +        GRP_Income2  +    -0.08647698006174 * GRP_Income3
1011400   +          +     0.02000126969083 * GRP_Income4  +    -0.07666270612285 *
1011401   +        GRP_Income5  +    -0.17332133422853 * GRP_Income6
1011402   +          +    -0.28328894338184 * GRP_Income7  +    -0.17823712265233 *
1011403   +        GRP_Income8  +    -0.39080487229489 * GRP_Income9
1011404   +          +    -0.22583689896606 * GRP_Income10  +     0.14951111119544 *
1011405   +        GRP_Mnt2  +     0.12789103442776 * GRP_Mnt3  +     0.04989580545705 *
1011406   +        GRP_Mnt4  +    -0.02181320104822 * GRP_Mnt5  +     0.02850530148713 *
1011407   +        GRP_Mnt6  +    -0.19810993494342 * GRP_Mnt7  +    -0.12534704012491 *
1011408   +        GRP_Mnt8  +    -0.01655492905982 * GRP_Mnt9  +     -0.1506358789311 *
1011409   +        GRP_Mnt10  +    -0.07698731445217 * GRP_MntFishProducts3
1011410   +          +    -0.02453518527533 * GRP_MntFishProducts4
1011411   +          +     0.21154268764191 * GRP_MntFishProducts5
1011412   +          +     0.09340929157714 * GRP_MntFishProducts6
1011413   +          +     0.05339923043457 * GRP_MntFishProducts7
1011414   +          +    -0.04852527469447 * GRP_MntFishProducts8
1011415   +          +     0.02676605860166 * GRP_MntFishProducts9
1011416   +          +    -0.10646179978188 * GRP_MntFishProducts10
1011417   +          +    -0.03613972637561 * GRP_MntGoldProds2
1011418   +          +     0.05734455860002 * GRP_MntGoldProds3
1011419   +          +     0.09333847144138 * GRP_MntGoldProds4
1011420   +          +     0.00328029112662 * GRP_MntGoldProds5
1011421   +          +    -0.14936992509725 * GRP_MntGoldProds6
1011422   +          +     0.00353880682303 * GRP_MntGoldProds7
1011423   +          +    -0.10043815369757 * GRP_MntGoldProds8
1011424   +          +     0.11391765401656 * GRP_MntGoldProds9
1011425   +          +    -0.01948391001613 * GRP_MntGoldProds10
1011426   +          +    -0.29139546734074 * GRP_MntMeatProducts2
1011427   +          +     0.02864747519138 * GRP_MntMeatProducts3
1011428   +          +     0.04302048132569 * GRP_MntMeatProducts4
1011429   +          +     0.03633864388021 * GRP_MntMeatProducts5
1011430   +          +      0.1706364226499 * GRP_MntMeatProducts6
1011431   +          +     0.10460399820586 * GRP_MntMeatProducts7
1011432   +          +     0.10544722036212 * GRP_MntMeatProducts8
1011433   +          +     0.10484997890558 * GRP_MntMeatProducts9
1011434   +          +     0.22072992127969 * GRP_MntMeatProducts10
1011435   +          +    -0.04945151391792 * GRP_MntSweetProducts3
1011436   +          +     0.02524689663103 * GRP_MntSweetProducts4
1011437   +          +    -0.06481626270428 * GRP_MntSweetProducts5
1011438   +          +     0.07470460608072 * GRP_MntSweetProducts6
1011439   +          +    -0.12486393118739 * GRP_MntSweetProducts7
1011440   +          +     0.01724242943758 * GRP_MntSweetProducts8
1011441   +          +    -0.17151056991478 * GRP_MntSweetProducts9
1011442   +          +     0.04475028863027 * GRP_MntSweetProducts10
1011443   +          +     0.16414039774526 * GRP_MntWines2  +     0.19473803749356 *
1011444   +        GRP_MntWines3  +     0.03895895414479 * GRP_MntWines4
1011445   +          +     0.08699407109954 * GRP_MntWines5  +    -0.11234364218935 *
1011446   +        GRP_MntWines6  +    -0.07501363722112 * GRP_MntWines7
1011447   +          +    -0.15191945102549 * GRP_MntWines8  +    -0.06897180141209 *
1011448   +        GRP_MntWines9  +    -0.19206651149079 * GRP_MntWines10
1011449   +          +    -0.37441473994379 * GRP_NumCatalogPurchases3
1011450   +          +    -0.15997043005634 * GRP_NumCatalogPurchases4
1011451   +          +     0.10594548446512 * GRP_NumCatalogPurchases5
1011452   +          +     0.00263802970324 * GRP_NumCatalogPurchases6
1011453   +          +    -0.22377381496889 * GRP_NumCatalogPurchases7
1011454   +          +    -0.04745111038168 * GRP_NumDistPurchases2
1011455   +          +     0.10357137269812 * GRP_NumDistPurchases3
1011456   +          +     0.12960605230645 * GRP_NumDistPurchases4
1011457   +          +     0.07101910011623 * GRP_NumDistPurchases5
1011458   +          +    -0.12325886494443 * GRP_NumDistPurchases6
1011459   +          +     0.15246170069312 * GRP_NumDistPurchases7
1011460   +          +    -0.01297232508723 * GRP_NumDistPurchases8
1011461   +          +     0.05212728826428 * GRP_NumDistPurchases9
1011462   +          +     0.12928116467276 * GRP_NumDistPurchases10
1011463   +          +    -0.01478753974493 * GRP_NumWebPurchases2
1011464   +          +     0.10209235795139 * GRP_NumWebPurchases3
1011465   +          +    -0.04108375994117 * GRP_NumWebPurchases4
1011466   +          +     0.16688325926802 * GRP_NumWebPurchases5
1011467   +          +    -0.04770670560132 * GRP_NumWebPurchases6
1011468   +          +     0.10715024172101 * GRP_NumWebPurchases7
1011469   +          +    -0.03973051658463 * GRP_NumWebPurchases8
1011470   +          +     -0.0744383975263 * GRP_NumWebVisitsMonth2
1011471   +          +    -0.10259522429063 * GRP_NumWebVisitsMonth3
1011472   +          +    -0.15279517866677 * GRP_NumWebVisitsMonth4
1011473   +          +    -0.10205600897555 * GRP_NumWebVisitsMonth5
1011474   +          +     0.06264274082103 * GRP_NumWebVisitsMonth6
1011475   +          +    -0.03339146693683 * GRP_NumWebVisitsMonth7
1011476   +          +     0.22895413102223 * GRP_NumWebVisitsMonth8
1011477   +          +     0.14076263555727 * GRP_RFMstat2  +    -0.02707737973045 *
1011478   +        GRP_RFMstat3  +    -0.08657405680392 * GRP_RFMstat4
1011479   +          +    -0.10217777279752 * GRP_RFMstat5  +    -0.03537362399141 *
1011480   +        GRP_RFMstat6  +     0.17860873982293 * GRP_RFMstat7
1011481   +          +     0.01522782586228 * GRP_RFMstat8  +     0.21139338376926 *
1011482   +        GRP_RFMstat9  +     0.01471368638362 * GRP_RFMstat10
1011483   +          +     0.15567346376316 * GRP_RMntFrq2  +     0.01018946161049 *
1011484   +        GRP_RMntFrq3  +    -0.02038890066544 * GRP_RMntFrq4
1011485   +          +     0.13621640956781 * GRP_RMntFrq5  +    -0.08857989439102 *
1011486   +        GRP_RMntFrq6  +    -0.40748794135826 * GRP_RMntFrq7
1011487   +          +    -0.17056788457056 * GRP_RMntFrq8  +    -0.03167778272421 *
1011488   +        GRP_RMntFrq9  +    -0.01206824029221 * GRP_RMntFrq10
1011489   +          +     0.10278059961514 * GRP_Recency2  +      0.1092786681841 *
1011490   +        GRP_Recency3  +     0.23239315221248 * GRP_Recency4
1011491   +          +     0.09720642085712 * GRP_Recency5  +     0.05887576799353 *
1011492   +        GRP_Recency6  +     0.01188389185661 * GRP_Recency7
1011493   +          +     0.00397153322648 * GRP_Recency8  +     0.06461134827829 *
1011494   +        GRP_Recency9  +     -0.2652137223798 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1274374305515 * GRP_AcceptedCmp52 + -0.03296718660529 *
GRP_AcceptedCmpTotal3 + -0.00158749941279 * GRP_Frq2 + 0.13135632234122 * GRP_Frq3 +
0.11174599066781 * GRP_Frq4 + 0.08293204522419 * GRP_Frq5 + 0.07891839019015 * GRP_Frq6 +
0.10689447665509 * GRP_Frq7 + -0.058875592211 * GRP_Frq8 + -0.08506909936634 * GRP_Frq9 +
-0.03761019712811 * GRP_Frq10 + -0.11942683577675 * GRP_Income2 + -0.08647698006174 *
GRP_Income3 + 0.02000126969083 * GRP_Income4 + -0.07666270612285 * GRP_Income5 +
-0.17332133422853 * GRP_Income6 + -0.28328894338184 * GRP_Income7 + -0.17823712265233 *
GRP_Income8 + -0.39080487229489 * GRP_Income9 + -0.22583689896606 * GRP_Income10 +
0.14951111119544 * GRP_Mnt2 + 0.12789103442776 * GRP_Mnt3 + 0.04989580545705 * GRP_Mnt4 +
-0.02181320104822 * GRP_Mnt5 + 0.02850530148713 * GRP_Mnt6 + -0.19810993494342 * GRP_Mnt7 +
-0.12534704012491 * GRP_Mnt8 + -0.01655492905982 * GRP_Mnt9 + -0.1506358789311 * GRP_Mnt10 +
-0.07698731445217 * GRP_MntFishProducts3 + -0.02453518527533 * GRP_MntFishProducts4 +
0.21154268764191 * GRP_MntFishProducts5 + 0.09340929157714 * GRP_MntFishProducts6 +
0.05339923043457 * GRP_MntFishProducts7 + -0.04852527469447 * GRP_MntFishProducts8 +
0.02676605860166 * GRP_MntFishProducts9 + -0.10646179978188 * GRP_MntFishProducts10 +
-0.03613972637561 * GRP_MntGoldProds2 + 0.05734455860002 * GRP_MntGoldProds3 +
0.09333847144138 * GRP_MntGoldProds4 + 0.00328029112662 * GRP_MntGoldProds5 +
-0.14936992509725 * GRP_MntGoldProds6 + 0.00353880682303 * GRP_MntGoldProds7 +
-0.10043815369757 * GRP_MntGoldProds8 + 0.11391765401656 * GRP_MntGoldProds9 +
-0.01948391001613 * GRP_MntGoldProds10 + -0.29139546734074 * GRP_MntMeatProducts2 +
0.02864747519138 * GRP_MntMeatProducts3 + 0.04302048132569 * GRP_MntMeatProducts4 +
0.03633864388021 * GRP_MntMeatProducts5 + 0.1706364226499 * GRP_MntMeatProducts6 +
0.10460399820586 * GRP_MntMeatProducts7 + 0.10544722036212 * GRP_MntMeatProducts8 +
0.10484997890558 * GRP_MntMeatProducts9 + 0.22072992127969 * GRP_MntMeatProducts10 +
-0.04945151391792 * GRP_MntSweetProducts3 + 0.02524689663103 * GRP_MntSweetProducts4 +
-0.06481626270428 * GRP_MntSweetProducts5 + 0.07470460608072 * GRP_MntSweetProducts6 +
-0.12486393118739 * GRP_MntSweetProducts7 + 0.01724242943758 * GRP_MntSweetProducts8 +
-0.17151056991478 * GRP_MntSweetProducts9 + 0.04475028863027 * GRP_MntSweetProducts10 +
0.16414039774526 * GRP_MntWines2 + 0.19473803749356 * GRP_MntWines3 + 0.03895895414479 *
GRP_MntWines4 + 0.08699407109954 * GRP_MntWines5 + -0.11234364218935 * GRP_MntWines6 +
-0.07501363722112 * GRP_MntWines7 + -0.15191945102549 * GRP_MntWines8 + -0.06897180141209 *
GRP_MntWines9 + -0.19206651149079 * GRP_MntWines10 + -0.37441473994379 *
GRP_NumCatalogPurchases3 + -0.15997043005634 * GRP_NumCatalogPurchases4 + 0.10594548446512 *
GRP_NumCatalogPurchases5 + 0.00263802970324 * GRP_NumCatalogPurchases6 + -0.22377381496889 *
GRP_NumCatalogPurchases7 + -0.04745111038168 * GRP_NumDistPurchases2 + 0.10357137269812 *
GRP_NumDistPurchases3 + 0.12960605230645 * GRP_NumDistPurchases4 + 0.07101910011623 *
GRP_NumDistPurchases5 + -0.12325886494443 * GRP_NumDistPurchases6 + 0.15246170069312 *
GRP_NumDistPurchases7 + -0.01297232508723 * GRP_NumDistPurchases8 + 0.05212728826428 *
GRP_NumDistPurchases9 + 0.12928116467276 * GRP_NumDistPurchases10 + -0.01478753974493 *
GRP_NumWebPurchases2 + 0.10209235795139 * GRP_NumWebPurchases3 + -0.04108375994117 *
GRP_NumWebPurchases4 + 0.16688325926802 * GRP_NumWebPurchases5 + -0.04770670560132 *
GRP_NumWebPurchases6 + 0.10715024172101 * GRP_NumWebPurchases7 + -0.03973051658463 *
GRP_NumWebPurchases8 + -0.0744383975263 * GRP_NumWebVisitsMonth2 + -0.10259522429063 *
GRP_NumWebVisitsMonth3 + -0.15279517866677 * GRP_NumWebVisitsMonth4 + -0.10205600897555 *
GRP_NumWebVisitsMonth5 + 0.06264274082103 * GRP_NumWebVisitsMonth6 + -0.03339146693683 *
GRP_NumWebVisitsMonth7 + 0.22895413102223 * GRP_NumWebVisitsMonth8 + 0.14076263555727 *
GRP_RFMstat2 + -0.02707737973045 * GRP_RFMstat3 + -0.08657405680392 * GRP_RFMstat4 +
-0.10217777279752 * GRP_RFMstat5 + -0.03537362399141 * GRP_RFMstat6 + 0.17860873982293 *
GRP_RFMstat7 + 0.01522782586228 * GRP_RFMstat8 + 0.21139338376926 * GRP_RFMstat9 +
0.01471368638362 * GRP_RFMstat10 + 0.15567346376316 * GRP_RMntFrq2 + 0.01018946161049 *
GRP_RMntFrq3 + -0.02038890066544 * GRP_RMntFrq4 + 0.13621640956781 * GRP_RMntFrq5 +
-0.08857989439102 * GRP_RMntFrq6 + -0.40748794135826 * GRP_RMntFrq7 + -0.17056788457056 *
GRP_RMntFrq8 + -0.03167778272421 * GRP_RMntFrq9 + -0.01206824029221 * GRP_RMntFrq10 +
0.10278059961514 * GRP_Recency2 + 0.1092786681841 * GRP_Recency3 + 0.23239315221248 *
GRP_Recency4 + 0.09720642085712 * GRP_Recency5 + 0.05887576799353 * GRP_Recency6 +
0.01188389185661 * GRP_Recency7 + 0.00397153322648 * GRP_Recency8 + 0.06461134827829 *
GRP_Recency9 + -0.2652137223798 * GRP_Recency10 ;
1011495   +   H13  = H13  +     0.03764558557298 * GRP_AcceptedCmp52
1011496   +          +    -0.17896552838288 * GRP_AcceptedCmpTotal3
1011497   +          +    -0.05721038687206 * GRP_Frq2  +     0.14420365801953 * GRP_Frq3
1011498   +          +     0.13453368328851 * GRP_Frq4  +     0.07489184687255 * GRP_Frq5
1011499   +          +     0.02273664866469 * GRP_Frq6  +     0.06936531343811 * GRP_Frq7
1011500   +          +     0.14287908984383 * GRP_Frq8  +    -0.09562935941718 * GRP_Frq9
1011501   +          +    -0.06439332824922 * GRP_Frq10  +    -0.08726367328499 *
1011502   +        GRP_Income2  +     0.02816796558456 * GRP_Income3
1011503   +          +     -0.0207313464275 * GRP_Income4  +     0.13866821912401 *
1011504   +        GRP_Income5  +     0.15211814101672 * GRP_Income6
1011505   +          +     0.07620761723112 * GRP_Income7  +    -0.05925421936851 *
1011506   +        GRP_Income8  +     0.00989143831981 * GRP_Income9
1011507   +          +     0.16776717024284 * GRP_Income10  +     0.10023544927245 *
1011508   +        GRP_Mnt2  +     0.08000793837961 * GRP_Mnt3  +    -0.03767992174465 *
1011509   +        GRP_Mnt4  +     -0.0788228470774 * GRP_Mnt5  +    -0.07765017993323 *
1011510   +        GRP_Mnt6  +    -0.05965223355738 * GRP_Mnt7  +    -0.02483544420982 *
1011511   +        GRP_Mnt8  +    -0.02399968660167 * GRP_Mnt9  +     0.03648534066717 *
1011512   +        GRP_Mnt10  +     0.11104910276205 * GRP_MntFishProducts3
1011513   +          +     0.00799524987781 * GRP_MntFishProducts4
1011514   +          +    -0.06457653362516 * GRP_MntFishProducts5
1011515   +          +    -0.07071491433289 * GRP_MntFishProducts6
1011516   +          +     -0.0297812227606 * GRP_MntFishProducts7
1011517   +          +      0.1196891870928 * GRP_MntFishProducts8
1011518   +          +    -0.14027713851715 * GRP_MntFishProducts9
1011519   +          +    -0.00752775384465 * GRP_MntFishProducts10
1011520   +          +    -0.08850740451643 * GRP_MntGoldProds2
1011521   +          +     0.07481260304092 * GRP_MntGoldProds3
1011522   +          +     0.01197323904138 * GRP_MntGoldProds4
1011523   +          +     0.08785121348968 * GRP_MntGoldProds5
1011524   +          +     0.05751686056011 * GRP_MntGoldProds6
1011525   +          +     0.00465104917946 * GRP_MntGoldProds7
1011526   +          +     0.09887537416794 * GRP_MntGoldProds8
1011527   +          +    -0.00612835497608 * GRP_MntGoldProds9
1011528   +          +    -0.00827610171723 * GRP_MntGoldProds10
1011529   +          +    -0.50377721374944 * GRP_MntMeatProducts2
1011530   +          +    -0.37745990165748 * GRP_MntMeatProducts3
1011531   +          +    -0.29951878376561 * GRP_MntMeatProducts4
1011532   +          +    -0.18065562816733 * GRP_MntMeatProducts5
1011533   +          +     0.04961241511311 * GRP_MntMeatProducts6
1011534   +          +    -0.01243107921859 * GRP_MntMeatProducts7
1011535   +          +     0.17144282495789 * GRP_MntMeatProducts8
1011536   +          +     0.14947179247383 * GRP_MntMeatProducts9
1011537   +          +     0.29454336254711 * GRP_MntMeatProducts10
1011538   +          +      0.0325450976222 * GRP_MntSweetProducts3
1011539   +          +     0.00280241083152 * GRP_MntSweetProducts4
1011540   +          +     0.05505775727165 * GRP_MntSweetProducts5
1011541   +          +    -0.02141161662537 * GRP_MntSweetProducts6
1011542   +          +     0.14268872032365 * GRP_MntSweetProducts7
1011543   +          +    -0.07954317740737 * GRP_MntSweetProducts8
1011544   +          +    -0.00103134587271 * GRP_MntSweetProducts9
1011545   +          +    -0.03429967866088 * GRP_MntSweetProducts10
1011546   +          +     0.41436775660832 * GRP_MntWines2  +     0.29646703075161 *
1011547   +        GRP_MntWines3  +     0.33836407373023 * GRP_MntWines4
1011548   +          +     0.21039899243759 * GRP_MntWines5  +     0.07529018465171 *
1011549   +        GRP_MntWines6  +    -0.00050794764301 * GRP_MntWines7
1011550   +          +    -0.13139238091467 * GRP_MntWines8  +    -0.17565936222023 *
1011551   +        GRP_MntWines9  +     -0.3630236345865 * GRP_MntWines10
1011552   +          +    -0.63590927739857 * GRP_NumCatalogPurchases3
1011553   +          +    -0.22552370784051 * GRP_NumCatalogPurchases4
1011554   +          +     0.02273288758795 * GRP_NumCatalogPurchases5
1011555   +          +     0.23079203529225 * GRP_NumCatalogPurchases6
1011556   +          +     0.30725851913205 * GRP_NumCatalogPurchases7
1011557   +          +    -0.09867989528726 * GRP_NumDistPurchases2
1011558   +          +    -0.11241303549017 * GRP_NumDistPurchases3
1011559   +          +    -0.11528474272857 * GRP_NumDistPurchases4
1011560   +          +    -0.03357182591423 * GRP_NumDistPurchases5
1011561   +          +     0.08825455645935 * GRP_NumDistPurchases6
1011562   +          +     -0.0608759537195 * GRP_NumDistPurchases7
1011563   +          +    -0.14923146321169 * GRP_NumDistPurchases8
1011564   +          +     0.10973172379981 * GRP_NumDistPurchases9
1011565   +          +     0.10246969778622 * GRP_NumDistPurchases10
1011566   +          +     0.09815254528418 * GRP_NumWebPurchases2
1011567   +          +     0.03875957144527 * GRP_NumWebPurchases3
1011568   +          +     0.13952022642084 * GRP_NumWebPurchases4
1011569   +          +     0.05210339855186 * GRP_NumWebPurchases5
1011570   +          +     0.03651981156732 * GRP_NumWebPurchases6
1011571   +          +    -0.03615687498427 * GRP_NumWebPurchases7
1011572   +          +    -0.23360859426074 * GRP_NumWebPurchases8
1011573   +          +    -0.62238234045176 * GRP_NumWebVisitsMonth2
1011574   +          +     -0.3625955042061 * GRP_NumWebVisitsMonth3
1011575   +          +    -0.22567740218052 * GRP_NumWebVisitsMonth4
1011576   +          +    -0.08070988848743 * GRP_NumWebVisitsMonth5
1011577   +          +     0.12302027379317 * GRP_NumWebVisitsMonth6
1011578   +          +     0.18991261492457 * GRP_NumWebVisitsMonth7
1011579   +          +     0.14150646636539 * GRP_NumWebVisitsMonth8
1011580   +          +    -0.03178806506185 * GRP_RFMstat2  +    -0.20094777838046 *
1011581   +        GRP_RFMstat3  +     0.07808214585024 * GRP_RFMstat4
1011582   +          +    -0.01546326977621 * GRP_RFMstat5  +     0.00666033747634 *
1011583   +        GRP_RFMstat6  +     0.06290810949775 * GRP_RFMstat7
1011584   +          +    -0.09940864151705 * GRP_RFMstat8  +    -0.03226772053643 *
1011585   +        GRP_RFMstat9  +     0.11448249247924 * GRP_RFMstat10
1011586   +          +      0.1225398665263 * GRP_RMntFrq2  +     0.10126972366878 *
1011587   +        GRP_RMntFrq3  +      0.1145431192407 * GRP_RMntFrq4
1011588   +          +    -0.18520427743014 * GRP_RMntFrq5  +     0.00047167841324 *
1011589   +        GRP_RMntFrq6  +    -0.11223000101198 * GRP_RMntFrq7
1011590   +          +    -0.18586998152107 * GRP_RMntFrq8  +     -0.0179456336917 *
1011591   +        GRP_RMntFrq9  +    -0.11237241396458 * GRP_RMntFrq10
1011592   +          +      0.3853209073848 * GRP_Recency2  +     0.29294953726827 *
1011593   +        GRP_Recency3  +     0.28926654920191 * GRP_Recency4
1011594   +          +     0.11462720739507 * GRP_Recency5  +     -0.1051639195799 *
1011595   +        GRP_Recency6  +     0.04327737722129 * GRP_Recency7
1011596   +          +    -0.11813942587684 * GRP_Recency8  +    -0.29587148545844 *
1011597   +        GRP_Recency9  +    -0.32397819257324 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03764558557298 * GRP_AcceptedCmp52 + -0.17896552838288 *
GRP_AcceptedCmpTotal3 + -0.05721038687206 * GRP_Frq2 + 0.14420365801953 * GRP_Frq3 +
0.13453368328851 * GRP_Frq4 + 0.07489184687255 * GRP_Frq5 + 0.02273664866469 * GRP_Frq6 +
0.06936531343811 * GRP_Frq7 + 0.14287908984383 * GRP_Frq8 + -0.09562935941718 * GRP_Frq9 +
-0.06439332824922 * GRP_Frq10 + -0.08726367328499 * GRP_Income2 + 0.02816796558456 *
GRP_Income3 + -0.0207313464275 * GRP_Income4 + 0.13866821912401 * GRP_Income5 +
0.15211814101672 * GRP_Income6 + 0.07620761723112 * GRP_Income7 + -0.05925421936851 *
GRP_Income8 + 0.00989143831981 * GRP_Income9 + 0.16776717024284 * GRP_Income10 +
0.10023544927245 * GRP_Mnt2 + 0.08000793837961 * GRP_Mnt3 + -0.03767992174465 * GRP_Mnt4 +
-0.0788228470774 * GRP_Mnt5 + -0.07765017993323 * GRP_Mnt6 + -0.05965223355738 * GRP_Mnt7 +
-0.02483544420982 * GRP_Mnt8 + -0.02399968660167 * GRP_Mnt9 + 0.03648534066717 * GRP_Mnt10 +
0.11104910276205 * GRP_MntFishProducts3 + 0.00799524987781 * GRP_MntFishProducts4 +
-0.06457653362516 * GRP_MntFishProducts5 + -0.07071491433289 * GRP_MntFishProducts6 +
-0.0297812227606 * GRP_MntFishProducts7 + 0.1196891870928 * GRP_MntFishProducts8 +
-0.14027713851715 * GRP_MntFishProducts9 + -0.00752775384465 * GRP_MntFishProducts10 +
-0.08850740451643 * GRP_MntGoldProds2 + 0.07481260304092 * GRP_MntGoldProds3 +
0.01197323904138 * GRP_MntGoldProds4 + 0.08785121348968 * GRP_MntGoldProds5 + 0.05751686056011
* GRP_MntGoldProds6 + 0.00465104917946 * GRP_MntGoldProds7 + 0.09887537416794 *
GRP_MntGoldProds8 + -0.00612835497608 * GRP_MntGoldProds9 + -0.00827610171723 *
GRP_MntGoldProds10 + -0.50377721374944 * GRP_MntMeatProducts2 + -0.37745990165748 *
GRP_MntMeatProducts3 + -0.29951878376561 * GRP_MntMeatProducts4 + -0.18065562816733 *
GRP_MntMeatProducts5 + 0.04961241511311 * GRP_MntMeatProducts6 + -0.01243107921859 *
GRP_MntMeatProducts7 + 0.17144282495789 * GRP_MntMeatProducts8 + 0.14947179247383 *
GRP_MntMeatProducts9 + 0.29454336254711 * GRP_MntMeatProducts10 + 0.0325450976222 *
GRP_MntSweetProducts3 + 0.00280241083152 * GRP_MntSweetProducts4 + 0.05505775727165 *
GRP_MntSweetProducts5 + -0.02141161662537 * GRP_MntSweetProducts6 + 0.14268872032365 *
GRP_MntSweetProducts7 + -0.07954317740737 * GRP_MntSweetProducts8 + -0.00103134587271 *
GRP_MntSweetProducts9 + -0.03429967866088 * GRP_MntSweetProducts10 + 0.41436775660832 *
GRP_MntWines2 + 0.29646703075161 * GRP_MntWines3 + 0.33836407373023 * GRP_MntWines4 +
0.21039899243759 * GRP_MntWines5 + 0.07529018465171 * GRP_MntWines6 + -0.00050794764301 *
GRP_MntWines7 + -0.13139238091467 * GRP_MntWines8 + -0.17565936222023 * GRP_MntWines9 +
-0.3630236345865 * GRP_MntWines10 + -0.63590927739857 * GRP_NumCatalogPurchases3 +
-0.22552370784051 * GRP_NumCatalogPurchases4 + 0.02273288758795 * GRP_NumCatalogPurchases5 +
0.23079203529225 * GRP_NumCatalogPurchases6 + 0.30725851913205 * GRP_NumCatalogPurchases7 +
-0.09867989528726 * GRP_NumDistPurchases2 + -0.11241303549017 * GRP_NumDistPurchases3 +
-0.11528474272857 * GRP_NumDistPurchases4 + -0.03357182591423 * GRP_NumDistPurchases5 +
0.08825455645935 * GRP_NumDistPurchases6 + -0.0608759537195 * GRP_NumDistPurchases7 +
-0.14923146321169 * GRP_NumDistPurchases8 + 0.10973172379981 * GRP_NumDistPurchases9 +
0.10246969778622 * GRP_NumDistPurchases10 + 0.09815254528418 * GRP_NumWebPurchases2 +
0.03875957144527 * GRP_NumWebPurchases3 + 0.13952022642084 * GRP_NumWebPurchases4 +
0.05210339855186 * GRP_NumWebPurchases5 + 0.03651981156732 * GRP_NumWebPurchases6 +
-0.03615687498427 * GRP_NumWebPurchases7 + -0.23360859426074 * GRP_NumWebPurchases8 +
-0.62238234045176 * GRP_NumWebVisitsMonth2 + -0.3625955042061 * GRP_NumWebVisitsMonth3 +
-0.22567740218052 * GRP_NumWebVisitsMonth4 + -0.08070988848743 * GRP_NumWebVisitsMonth5 +
0.12302027379317 * GRP_NumWebVisitsMonth6 + 0.18991261492457 * GRP_NumWebVisitsMonth7 +
0.14150646636539 * GRP_NumWebVisitsMonth8 + -0.03178806506185 * GRP_RFMstat2 +
-0.20094777838046 * GRP_RFMstat3 + 0.07808214585024 * GRP_RFMstat4 + -0.01546326977621 *
GRP_RFMstat5 + 0.00666033747634 * GRP_RFMstat6 + 0.06290810949775 * GRP_RFMstat7 +
-0.09940864151705 * GRP_RFMstat8 + -0.03226772053643 * GRP_RFMstat9 + 0.11448249247924 *
GRP_RFMstat10 + 0.1225398665263 * GRP_RMntFrq2 + 0.10126972366878 * GRP_RMntFrq3 +
0.1145431192407 * GRP_RMntFrq4 + -0.18520427743014 * GRP_RMntFrq5 + 0.00047167841324 *
GRP_RMntFrq6 + -0.11223000101198 * GRP_RMntFrq7 + -0.18586998152107 * GRP_RMntFrq8 +
-0.0179456336917 * GRP_RMntFrq9 + -0.11237241396458 * GRP_RMntFrq10 + 0.3853209073848 *
GRP_Recency2 + 0.29294953726827 * GRP_Recency3 + 0.28926654920191 * GRP_Recency4 +
0.11462720739507 * GRP_Recency5 + -0.1051639195799 * GRP_Recency6 + 0.04327737722129 *
GRP_Recency7 + -0.11813942587684 * GRP_Recency8 + -0.29587148545844 * GRP_Recency9 +
-0.32397819257324 * GRP_Recency10 ;
1011598   +   H14  = H14  +     0.15079812629134 * GRP_AcceptedCmp52
1011599   +          +     0.22962844975229 * GRP_AcceptedCmpTotal3
1011600   +          +    -0.05554827748543 * GRP_Frq2  +    -0.08417768642905 * GRP_Frq3
1011601   +          +     0.01076244235421 * GRP_Frq4  +     0.01753394626169 * GRP_Frq5
1011602   +          +    -0.15834802329472 * GRP_Frq6  +    -0.06085337703386 * GRP_Frq7
1011603   +          +    -0.04075525665959 * GRP_Frq8  +    -0.09506739541592 * GRP_Frq9
1011604   +          +    -0.04203961921167 * GRP_Frq10  +      0.1198891926252 *
1011605   +        GRP_Income2  +     0.16315196590211 * GRP_Income3
1011606   +          +     0.18493404221827 * GRP_Income4  +     0.08098358950134 *
1011607   +        GRP_Income5  +    -0.02153158263363 * GRP_Income6
1011608   +          +     0.15391794393904 * GRP_Income7  +     0.17463803180283 *
1011609   +        GRP_Income8  +     0.03158286458013 * GRP_Income9
1011610   +          +     0.24596218762028 * GRP_Income10  +     0.07847966486745 *
1011611   +        GRP_Mnt2  +    -0.10766377152121 * GRP_Mnt3  +    -0.02322298419621 *
1011612   +        GRP_Mnt4  +     0.02436572747627 * GRP_Mnt5  +     0.07340030767568 *
1011613   +        GRP_Mnt6  +     0.02787743356763 * GRP_Mnt7  +     0.06579539785299 *
1011614   +        GRP_Mnt8  +    -0.07931107893394 * GRP_Mnt9  +    -0.00259718802072 *
1011615   +        GRP_Mnt10  +    -0.04638486329226 * GRP_MntFishProducts3
1011616   +          +      0.0275109980019 * GRP_MntFishProducts4
1011617   +          +     0.00457152762382 * GRP_MntFishProducts5
1011618   +          +     -0.0256427796426 * GRP_MntFishProducts6
1011619   +          +     -0.0025601056055 * GRP_MntFishProducts7
1011620   +          +     0.15477917154458 * GRP_MntFishProducts8
1011621   +          +    -0.02700327590482 * GRP_MntFishProducts9
1011622   +          +    -0.01004837932109 * GRP_MntFishProducts10
1011623   +          +     0.01099545881963 * GRP_MntGoldProds2
1011624   +          +     0.04693157233551 * GRP_MntGoldProds3
1011625   +          +    -0.04266329172621 * GRP_MntGoldProds4
1011626   +          +    -0.02679901647799 * GRP_MntGoldProds5
1011627   +          +      0.1281459189864 * GRP_MntGoldProds6
1011628   +          +    -0.06153062103842 * GRP_MntGoldProds7
1011629   +          +    -0.08088807075079 * GRP_MntGoldProds8
1011630   +          +     0.05265016419697 * GRP_MntGoldProds9
1011631   +          +     0.00595108646688 * GRP_MntGoldProds10
1011632   +          +     0.15482516463083 * GRP_MntMeatProducts2
1011633   +          +     0.05984633118335 * GRP_MntMeatProducts3
1011634   +          +     0.13261187884411 * GRP_MntMeatProducts4
1011635   +          +    -0.00777328161788 * GRP_MntMeatProducts5
1011636   +          +     0.03377357859895 * GRP_MntMeatProducts6
1011637   +          +    -0.15782913038235 * GRP_MntMeatProducts7
1011638   +          +    -0.05089204866776 * GRP_MntMeatProducts8
1011639   +          +     -0.0971110594902 * GRP_MntMeatProducts9
1011640   +          +    -0.02558850723317 * GRP_MntMeatProducts10
1011641   +          +     0.04299817363015 * GRP_MntSweetProducts3
1011642   +          +    -0.09902465141858 * GRP_MntSweetProducts4
1011643   +          +    -0.01697537339121 * GRP_MntSweetProducts5
1011644   +          +     0.06486145596476 * GRP_MntSweetProducts6
1011645   +          +     0.10943300547797 * GRP_MntSweetProducts7
1011646   +          +    -0.02182162160296 * GRP_MntSweetProducts8
1011647   +          +     0.11675594479324 * GRP_MntSweetProducts9
1011648   +          +     0.09535653780691 * GRP_MntSweetProducts10
1011649   +          +     -0.1998530200338 * GRP_MntWines2  +     -0.0715511226473 *
1011650   +        GRP_MntWines3  +    -0.00197101208288 * GRP_MntWines4
1011651   +          +    -0.05293421174154 * GRP_MntWines5  +    -0.13384442049071 *
1011652   +        GRP_MntWines6  +    -0.20859731662163 * GRP_MntWines7
1011653   +          +    -0.04979006341398 * GRP_MntWines8  +     0.14737079189331 *
1011654   +        GRP_MntWines9  +    -0.11301496992606 * GRP_MntWines10
1011655   +          +     0.18740768444624 * GRP_NumCatalogPurchases3
1011656   +          +     0.14555197245715 * GRP_NumCatalogPurchases4
1011657   +          +    -0.07465109593753 * GRP_NumCatalogPurchases5
1011658   +          +     0.01725179078473 * GRP_NumCatalogPurchases6
1011659   +          +    -0.01121762754976 * GRP_NumCatalogPurchases7
1011660   +          +    -0.15559892251658 * GRP_NumDistPurchases2
1011661   +          +     0.16551127757982 * GRP_NumDistPurchases3
1011662   +          +     0.02161946400684 * GRP_NumDistPurchases4
1011663   +          +    -0.23848222918486 * GRP_NumDistPurchases5
1011664   +          +     0.10440245784846 * GRP_NumDistPurchases6
1011665   +          +    -0.04195417570658 * GRP_NumDistPurchases7
1011666   +          +    -0.08492153051235 * GRP_NumDistPurchases8
1011667   +          +    -0.18809289244816 * GRP_NumDistPurchases9
1011668   +          +    -0.15195085859989 * GRP_NumDistPurchases10
1011669   +          +    -0.09201105550543 * GRP_NumWebPurchases2
1011670   +          +    -0.06310838957444 * GRP_NumWebPurchases3
1011671   +          +    -0.01496423304375 * GRP_NumWebPurchases4
1011672   +          +    -0.17644533807901 * GRP_NumWebPurchases5
1011673   +          +      -0.110113628078 * GRP_NumWebPurchases6
1011674   +          +     0.00785303531109 * GRP_NumWebPurchases7
1011675   +          +     0.05743831457064 * GRP_NumWebPurchases8
1011676   +          +    -0.05168919326829 * GRP_NumWebVisitsMonth2
1011677   +          +     0.11290696986069 * GRP_NumWebVisitsMonth3
1011678   +          +     0.09360100549901 * GRP_NumWebVisitsMonth4
1011679   +          +    -0.09806451567816 * GRP_NumWebVisitsMonth5
1011680   +          +     0.12495533860565 * GRP_NumWebVisitsMonth6
1011681   +          +    -0.02760271368889 * GRP_NumWebVisitsMonth7
1011682   +          +    -0.11225070952088 * GRP_NumWebVisitsMonth8
1011683   +          +     0.07121295296305 * GRP_RFMstat2  +     0.06278808825827 *
1011684   +        GRP_RFMstat3  +     0.22407976217279 * GRP_RFMstat4
1011685   +          +    -0.01391199439347 * GRP_RFMstat5  +     0.00524986855743 *
1011686   +        GRP_RFMstat6  +     0.04647229627683 * GRP_RFMstat7
1011687   +          +    -0.08262115059091 * GRP_RFMstat8  +     0.05568633367355 *
1011688   +        GRP_RFMstat9  +      0.1619135717285 * GRP_RFMstat10
1011689   +          +    -0.12663266250917 * GRP_RMntFrq2  +    -0.02019823950141 *
1011690   +        GRP_RMntFrq3  +     0.06814938923598 * GRP_RMntFrq4
1011691   +          +     0.01123045702133 * GRP_RMntFrq5  +     0.11389829423469 *
1011692   +        GRP_RMntFrq6  +    -0.13952956112852 * GRP_RMntFrq7
1011693   +          +    -0.02257133244216 * GRP_RMntFrq8  +    -0.04067820247483 *
1011694   +        GRP_RMntFrq9  +     0.17149660062988 * GRP_RMntFrq10
1011695   +          +    -0.08181666846159 * GRP_Recency2  +      -0.110152228582 *
1011696   +        GRP_Recency3  +    -0.04515191712692 * GRP_Recency4
1011697   +          +    -0.07021934274856 * GRP_Recency5  +     0.05576042452735 *
1011698   +        GRP_Recency6  +     0.01898884275662 * GRP_Recency7
1011699   +          +     0.37127414267517 * GRP_Recency8  +     0.02568583903077 *
1011700   +        GRP_Recency9  +     0.06729768371352 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.15079812629134 * GRP_AcceptedCmp52 + 0.22962844975229 *
GRP_AcceptedCmpTotal3 + -0.05554827748543 * GRP_Frq2 + -0.08417768642905 * GRP_Frq3 +
0.01076244235421 * GRP_Frq4 + 0.01753394626169 * GRP_Frq5 + -0.15834802329472 * GRP_Frq6 +
-0.06085337703386 * GRP_Frq7 + -0.04075525665959 * GRP_Frq8 + -0.09506739541592 * GRP_Frq9 +
-0.04203961921167 * GRP_Frq10 + 0.1198891926252 * GRP_Income2 + 0.16315196590211 * GRP_Income3
+ 0.18493404221827 * GRP_Income4 + 0.08098358950134 * GRP_Income5 + -0.02153158263363 *
GRP_Income6 + 0.15391794393904 * GRP_Income7 + 0.17463803180283 * GRP_Income8 +
0.03158286458013 * GRP_Income9 + 0.24596218762028 * GRP_Income10 + 0.07847966486745 * GRP_Mnt2
+ -0.10766377152121 * GRP_Mnt3 + -0.02322298419621 * GRP_Mnt4 + 0.02436572747627 * GRP_Mnt5 +
0.07340030767568 * GRP_Mnt6 + 0.02787743356763 * GRP_Mnt7 + 0.06579539785299 * GRP_Mnt8 +
-0.07931107893394 * GRP_Mnt9 + -0.00259718802072 * GRP_Mnt10 + -0.04638486329226 *
GRP_MntFishProducts3 + 0.0275109980019 * GRP_MntFishProducts4 + 0.00457152762382 *
GRP_MntFishProducts5 + -0.0256427796426 * GRP_MntFishProducts6 + -0.0025601056055 *
GRP_MntFishProducts7 + 0.15477917154458 * GRP_MntFishProducts8 + -0.02700327590482 *
GRP_MntFishProducts9 + -0.01004837932109 * GRP_MntFishProducts10 + 0.01099545881963 *
GRP_MntGoldProds2 + 0.04693157233551 * GRP_MntGoldProds3 + -0.04266329172621 *
GRP_MntGoldProds4 + -0.02679901647799 * GRP_MntGoldProds5 + 0.1281459189864 *
GRP_MntGoldProds6 + -0.06153062103842 * GRP_MntGoldProds7 + -0.08088807075079 *
GRP_MntGoldProds8 + 0.05265016419697 * GRP_MntGoldProds9 + 0.00595108646688 *
GRP_MntGoldProds10 + 0.15482516463083 * GRP_MntMeatProducts2 + 0.05984633118335 *
GRP_MntMeatProducts3 + 0.13261187884411 * GRP_MntMeatProducts4 + -0.00777328161788 *
GRP_MntMeatProducts5 + 0.03377357859895 * GRP_MntMeatProducts6 + -0.15782913038235 *
GRP_MntMeatProducts7 + -0.05089204866776 * GRP_MntMeatProducts8 + -0.0971110594902 *
GRP_MntMeatProducts9 + -0.02558850723317 * GRP_MntMeatProducts10 + 0.04299817363015 *
GRP_MntSweetProducts3 + -0.09902465141858 * GRP_MntSweetProducts4 + -0.01697537339121 *
GRP_MntSweetProducts5 + 0.06486145596476 * GRP_MntSweetProducts6 + 0.10943300547797 *
GRP_MntSweetProducts7 + -0.02182162160296 * GRP_MntSweetProducts8 + 0.11675594479324 *
GRP_MntSweetProducts9 + 0.09535653780691 * GRP_MntSweetProducts10 + -0.1998530200338 *
GRP_MntWines2 + -0.0715511226473 * GRP_MntWines3 + -0.00197101208288 * GRP_MntWines4 +
-0.05293421174154 * GRP_MntWines5 + -0.13384442049071 * GRP_MntWines6 + -0.20859731662163 *
GRP_MntWines7 + -0.04979006341398 * GRP_MntWines8 + 0.14737079189331 * GRP_MntWines9 +
-0.11301496992606 * GRP_MntWines10 + 0.18740768444624 * GRP_NumCatalogPurchases3 +
0.14555197245715 * GRP_NumCatalogPurchases4 + -0.07465109593753 * GRP_NumCatalogPurchases5 +
0.01725179078473 * GRP_NumCatalogPurchases6 + -0.01121762754976 * GRP_NumCatalogPurchases7 +
-0.15559892251658 * GRP_NumDistPurchases2 + 0.16551127757982 * GRP_NumDistPurchases3 +
0.02161946400684 * GRP_NumDistPurchases4 + -0.23848222918486 * GRP_NumDistPurchases5 +
0.10440245784846 * GRP_NumDistPurchases6 + -0.04195417570658 * GRP_NumDistPurchases7 +
-0.08492153051235 * GRP_NumDistPurchases8 + -0.18809289244816 * GRP_NumDistPurchases9 +
-0.15195085859989 * GRP_NumDistPurchases10 + -0.09201105550543 * GRP_NumWebPurchases2 +
-0.06310838957444 * GRP_NumWebPurchases3 + -0.01496423304375 * GRP_NumWebPurchases4 +
-0.17644533807901 * GRP_NumWebPurchases5 + -0.110113628078 * GRP_NumWebPurchases6 +
0.00785303531109 * GRP_NumWebPurchases7 + 0.05743831457064 * GRP_NumWebPurchases8 +
-0.05168919326829 * GRP_NumWebVisitsMonth2 + 0.11290696986069 * GRP_NumWebVisitsMonth3 +
0.09360100549901 * GRP_NumWebVisitsMonth4 + -0.09806451567816 * GRP_NumWebVisitsMonth5 +
0.12495533860565 * GRP_NumWebVisitsMonth6 + -0.02760271368889 * GRP_NumWebVisitsMonth7 +
-0.11225070952088 * GRP_NumWebVisitsMonth8 + 0.07121295296305 * GRP_RFMstat2 +
0.06278808825827 * GRP_RFMstat3 + 0.22407976217279 * GRP_RFMstat4 + -0.01391199439347 *
GRP_RFMstat5 + 0.00524986855743 * GRP_RFMstat6 + 0.04647229627683 * GRP_RFMstat7 +
-0.08262115059091 * GRP_RFMstat8 + 0.05568633367355 * GRP_RFMstat9 + 0.1619135717285 *
GRP_RFMstat10 + -0.12663266250917 * GRP_RMntFrq2 + -0.02019823950141 * GRP_RMntFrq3 +
0.06814938923598 * GRP_RMntFrq4 + 0.01123045702133 * GRP_RMntFrq5 + 0.11389829423469 *
GRP_RMntFrq6 + -0.13952956112852 * GRP_RMntFrq7 + -0.02257133244216 * GRP_RMntFrq8 +
-0.04067820247483 * GRP_RMntFrq9 + 0.17149660062988 * GRP_RMntFrq10 + -0.08181666846159 *
GRP_Recency2 + -0.110152228582 * GRP_Recency3 + -0.04515191712692 * GRP_Recency4 +
-0.07021934274856 * GRP_Recency5 + 0.05576042452735 * GRP_Recency6 + 0.01898884275662 *
GRP_Recency7 + 0.37127414267517 * GRP_Recency8 + 0.02568583903077 * GRP_Recency9 +
0.06729768371352 * GRP_Recency10 ;
1011701   +   H15  = H15  +    -0.07474486177584 * GRP_AcceptedCmp52
1011702   +          +     -0.0813425565032 * GRP_AcceptedCmpTotal3
1011703   +          +     0.08373011910886 * GRP_Frq2  +     0.15590004679893 * GRP_Frq3
1011704   +          +    -0.01423869859621 * GRP_Frq4  +     0.23853893377052 * GRP_Frq5
1011705   +          +     0.00582814648708 * GRP_Frq6  +     0.10745574495653 * GRP_Frq7
1011706   +          +     0.12283228526609 * GRP_Frq8  +    -0.00260744850823 * GRP_Frq9
1011707   +          +     0.20713186190941 * GRP_Frq10  +     0.14418190802709 *
1011708   +        GRP_Income2  +     0.07441582776964 * GRP_Income3
1011709   +          +    -0.09944544424018 * GRP_Income4  +     -0.1993160747563 *
1011710   +        GRP_Income5  +     0.15366229436808 * GRP_Income6
1011711   +          +      0.0104741985443 * GRP_Income7  +     0.03372790306706 *
1011712   +        GRP_Income8  +     0.07288522457723 * GRP_Income9
1011713   +          +     0.17752104349269 * GRP_Income10  +    -0.15217900206484 *
1011714   +        GRP_Mnt2  +     0.03849759187766 * GRP_Mnt3  +    -0.05010164314865 *
1011715   +        GRP_Mnt4  +     0.02680721226924 * GRP_Mnt5  +    -0.10687670604825 *
1011716   +        GRP_Mnt6  +    -0.15176693979348 * GRP_Mnt7  +    -0.08667079494869 *
1011717   +        GRP_Mnt8  +    -0.12429806525962 * GRP_Mnt9  +    -0.17943078316657 *
1011718   +        GRP_Mnt10  +     0.00950842084882 * GRP_MntFishProducts3
1011719   +          +     0.06089106976321 * GRP_MntFishProducts4
1011720   +          +    -0.04055435018644 * GRP_MntFishProducts5
1011721   +          +    -0.04072533262198 * GRP_MntFishProducts6
1011722   +          +     0.00316491296302 * GRP_MntFishProducts7
1011723   +          +     0.14360439865573 * GRP_MntFishProducts8
1011724   +          +    -0.10561487610195 * GRP_MntFishProducts9
1011725   +          +      0.0808522264132 * GRP_MntFishProducts10
1011726   +          +    -0.02372066113373 * GRP_MntGoldProds2
1011727   +          +     0.05245232490647 * GRP_MntGoldProds3
1011728   +          +     0.05678231883017 * GRP_MntGoldProds4
1011729   +          +     0.01560521212362 * GRP_MntGoldProds5
1011730   +          +     0.09731296556114 * GRP_MntGoldProds6
1011731   +          +      0.0727075243521 * GRP_MntGoldProds7
1011732   +          +     0.03845221174429 * GRP_MntGoldProds8
1011733   +          +    -0.17307450395634 * GRP_MntGoldProds9
1011734   +          +     0.16609295927199 * GRP_MntGoldProds10
1011735   +          +     0.24378730593177 * GRP_MntMeatProducts2
1011736   +          +    -0.01232528635462 * GRP_MntMeatProducts3
1011737   +          +     0.08632771193059 * GRP_MntMeatProducts4
1011738   +          +     0.03837956076595 * GRP_MntMeatProducts5
1011739   +          +     0.01038398564102 * GRP_MntMeatProducts6
1011740   +          +     -0.1272142230896 * GRP_MntMeatProducts7
1011741   +          +    -0.06074459624503 * GRP_MntMeatProducts8
1011742   +          +    -0.15871755763595 * GRP_MntMeatProducts9
1011743   +          +    -0.12457188762767 * GRP_MntMeatProducts10
1011744   +          +     0.02566417423056 * GRP_MntSweetProducts3
1011745   +          +    -0.08945240533844 * GRP_MntSweetProducts4
1011746   +          +    -0.14155778851078 * GRP_MntSweetProducts5
1011747   +          +    -0.11568464973367 * GRP_MntSweetProducts6
1011748   +          +     -0.0060913881508 * GRP_MntSweetProducts7
1011749   +          +     -0.0784310738091 * GRP_MntSweetProducts8
1011750   +          +    -0.05760607191513 * GRP_MntSweetProducts9
1011751   +          +    -0.08178704732211 * GRP_MntSweetProducts10
1011752   +          +     -0.0051906568099 * GRP_MntWines2  +      0.0630388639453 *
1011753   +        GRP_MntWines3  +    -0.22313810388763 * GRP_MntWines4
1011754   +          +      -0.180882719351 * GRP_MntWines5  +     0.02141382546184 *
1011755   +        GRP_MntWines6  +    -0.05971406502791 * GRP_MntWines7
1011756   +          +     0.09956935130741 * GRP_MntWines8  +     0.01632287744434 *
1011757   +        GRP_MntWines9  +     0.10949768587748 * GRP_MntWines10
1011758   +          +     0.09783291088049 * GRP_NumCatalogPurchases3
1011759   +          +    -0.02261013277752 * GRP_NumCatalogPurchases4
1011760   +          +    -0.11492625279985 * GRP_NumCatalogPurchases5
1011761   +          +    -0.08434829186857 * GRP_NumCatalogPurchases6
1011762   +          +     -0.0371926608551 * GRP_NumCatalogPurchases7
1011763   +          +     0.06202987788564 * GRP_NumDistPurchases2
1011764   +          +     0.22177708973962 * GRP_NumDistPurchases3
1011765   +          +    -0.13703790658963 * GRP_NumDistPurchases4
1011766   +          +     0.21149014324079 * GRP_NumDistPurchases5
1011767   +          +     0.04612264586718 * GRP_NumDistPurchases6
1011768   +          +      0.1388613782278 * GRP_NumDistPurchases7
1011769   +          +     0.25380989759373 * GRP_NumDistPurchases8
1011770   +          +     0.05092017340612 * GRP_NumDistPurchases9
1011771   +          +    -0.10043094372979 * GRP_NumDistPurchases10
1011772   +          +    -0.14530592708524 * GRP_NumWebPurchases2
1011773   +          +     0.08222242220022 * GRP_NumWebPurchases3
1011774   +          +     0.11023840669649 * GRP_NumWebPurchases4
1011775   +          +     0.02201767721545 * GRP_NumWebPurchases5
1011776   +          +      0.0325965365767 * GRP_NumWebPurchases6
1011777   +          +     0.01387738316429 * GRP_NumWebPurchases7
1011778   +          +      0.0668944294435 * GRP_NumWebPurchases8
1011779   +          +    -0.03013978189881 * GRP_NumWebVisitsMonth2
1011780   +          +    -0.02332621711341 * GRP_NumWebVisitsMonth3
1011781   +          +    -0.05034424202375 * GRP_NumWebVisitsMonth4
1011782   +          +    -0.17412564074584 * GRP_NumWebVisitsMonth5
1011783   +          +    -0.02681384968802 * GRP_NumWebVisitsMonth6
1011784   +          +    -0.03690686741093 * GRP_NumWebVisitsMonth7
1011785   +          +    -0.18044101662424 * GRP_NumWebVisitsMonth8
1011786   +          +     0.18351793268065 * GRP_RFMstat2  +     0.08302753882463 *
1011787   +        GRP_RFMstat3  +      0.2140782505942 * GRP_RFMstat4
1011788   +          +     0.08904517954741 * GRP_RFMstat5  +     0.00618619005802 *
1011789   +        GRP_RFMstat6  +     0.07381352166701 * GRP_RFMstat7
1011790   +          +    -0.07112387189768 * GRP_RFMstat8  +     0.18177537388268 *
1011791   +        GRP_RFMstat9  +     0.01993781166098 * GRP_RFMstat10
1011792   +          +    -0.13633030693385 * GRP_RMntFrq2  +    -0.03091098931044 *
1011793   +        GRP_RMntFrq3  +     0.01424378851129 * GRP_RMntFrq4
1011794   +          +    -0.10457271155167 * GRP_RMntFrq5  +    -0.04065636538378 *
1011795   +        GRP_RMntFrq6  +    -0.21000053348912 * GRP_RMntFrq7
1011796   +          +      0.1195703554692 * GRP_RMntFrq8  +     0.06433917724909 *
1011797   +        GRP_RMntFrq9  +     0.03523308730139 * GRP_RMntFrq10
1011798   +          +    -0.45748566872646 * GRP_Recency2  +     0.00890062656102 *
1011799   +        GRP_Recency3  +    -0.12573498091966 * GRP_Recency4
1011800   +          +    -0.11355010854787 * GRP_Recency5  +    -0.06285469349039 *
1011801   +        GRP_Recency6  +    -0.01372977465721 * GRP_Recency7
1011802   +          +    -0.00431009782377 * GRP_Recency8  +     0.14264750449817 *
1011803   +        GRP_Recency9  +     0.06322236291435 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.07474486177584 * GRP_AcceptedCmp52 + -0.0813425565032 *
GRP_AcceptedCmpTotal3 + 0.08373011910886 * GRP_Frq2 + 0.15590004679893 * GRP_Frq3 +
-0.01423869859621 * GRP_Frq4 + 0.23853893377052 * GRP_Frq5 + 0.00582814648708 * GRP_Frq6 +
0.10745574495653 * GRP_Frq7 + 0.12283228526609 * GRP_Frq8 + -0.00260744850823 * GRP_Frq9 +
0.20713186190941 * GRP_Frq10 + 0.14418190802709 * GRP_Income2 + 0.07441582776964 * GRP_Income3
+ -0.09944544424018 * GRP_Income4 + -0.1993160747563 * GRP_Income5 + 0.15366229436808 *
GRP_Income6 + 0.0104741985443 * GRP_Income7 + 0.03372790306706 * GRP_Income8 +
0.07288522457723 * GRP_Income9 + 0.17752104349269 * GRP_Income10 + -0.15217900206484 *
GRP_Mnt2 + 0.03849759187766 * GRP_Mnt3 + -0.05010164314865 * GRP_Mnt4 + 0.02680721226924 *
GRP_Mnt5 + -0.10687670604825 * GRP_Mnt6 + -0.15176693979348 * GRP_Mnt7 + -0.08667079494869 *
GRP_Mnt8 + -0.12429806525962 * GRP_Mnt9 + -0.17943078316657 * GRP_Mnt10 + 0.00950842084882 *
GRP_MntFishProducts3 + 0.06089106976321 * GRP_MntFishProducts4 + -0.04055435018644 *
GRP_MntFishProducts5 + -0.04072533262198 * GRP_MntFishProducts6 + 0.00316491296302 *
GRP_MntFishProducts7 + 0.14360439865573 * GRP_MntFishProducts8 + -0.10561487610195 *
GRP_MntFishProducts9 + 0.0808522264132 * GRP_MntFishProducts10 + -0.02372066113373 *
GRP_MntGoldProds2 + 0.05245232490647 * GRP_MntGoldProds3 + 0.05678231883017 *
GRP_MntGoldProds4 + 0.01560521212362 * GRP_MntGoldProds5 + 0.09731296556114 *
GRP_MntGoldProds6 + 0.0727075243521 * GRP_MntGoldProds7 + 0.03845221174429 * GRP_MntGoldProds8
+ -0.17307450395634 * GRP_MntGoldProds9 + 0.16609295927199 * GRP_MntGoldProds10 +
0.24378730593177 * GRP_MntMeatProducts2 + -0.01232528635462 * GRP_MntMeatProducts3 +
0.08632771193059 * GRP_MntMeatProducts4 + 0.03837956076595 * GRP_MntMeatProducts5 +
0.01038398564102 * GRP_MntMeatProducts6 + -0.1272142230896 * GRP_MntMeatProducts7 +
-0.06074459624503 * GRP_MntMeatProducts8 + -0.15871755763595 * GRP_MntMeatProducts9 +
-0.12457188762767 * GRP_MntMeatProducts10 + 0.02566417423056 * GRP_MntSweetProducts3 +
-0.08945240533844 * GRP_MntSweetProducts4 + -0.14155778851078 * GRP_MntSweetProducts5 +
-0.11568464973367 * GRP_MntSweetProducts6 + -0.0060913881508 * GRP_MntSweetProducts7 +
-0.0784310738091 * GRP_MntSweetProducts8 + -0.05760607191513 * GRP_MntSweetProducts9 +
-0.08178704732211 * GRP_MntSweetProducts10 + -0.0051906568099 * GRP_MntWines2 +
0.0630388639453 * GRP_MntWines3 + -0.22313810388763 * GRP_MntWines4 + -0.180882719351 *
GRP_MntWines5 + 0.02141382546184 * GRP_MntWines6 + -0.05971406502791 * GRP_MntWines7 +
0.09956935130741 * GRP_MntWines8 + 0.01632287744434 * GRP_MntWines9 + 0.10949768587748 *
GRP_MntWines10 + 0.09783291088049 * GRP_NumCatalogPurchases3 + -0.02261013277752 *
GRP_NumCatalogPurchases4 + -0.11492625279985 * GRP_NumCatalogPurchases5 + -0.08434829186857 *
GRP_NumCatalogPurchases6 + -0.0371926608551 * GRP_NumCatalogPurchases7 + 0.06202987788564 *
GRP_NumDistPurchases2 + 0.22177708973962 * GRP_NumDistPurchases3 + -0.13703790658963 *
GRP_NumDistPurchases4 + 0.21149014324079 * GRP_NumDistPurchases5 + 0.04612264586718 *
GRP_NumDistPurchases6 + 0.1388613782278 * GRP_NumDistPurchases7 + 0.25380989759373 *
GRP_NumDistPurchases8 + 0.05092017340612 * GRP_NumDistPurchases9 + -0.10043094372979 *
GRP_NumDistPurchases10 + -0.14530592708524 * GRP_NumWebPurchases2 + 0.08222242220022 *
GRP_NumWebPurchases3 + 0.11023840669649 * GRP_NumWebPurchases4 + 0.02201767721545 *
GRP_NumWebPurchases5 + 0.0325965365767 * GRP_NumWebPurchases6 + 0.01387738316429 *
GRP_NumWebPurchases7 + 0.0668944294435 * GRP_NumWebPurchases8 + -0.03013978189881 *
GRP_NumWebVisitsMonth2 + -0.02332621711341 * GRP_NumWebVisitsMonth3 + -0.05034424202375 *
GRP_NumWebVisitsMonth4 + -0.17412564074584 * GRP_NumWebVisitsMonth5 + -0.02681384968802 *
GRP_NumWebVisitsMonth6 + -0.03690686741093 * GRP_NumWebVisitsMonth7 + -0.18044101662424 *
GRP_NumWebVisitsMonth8 + 0.18351793268065 * GRP_RFMstat2 + 0.08302753882463 * GRP_RFMstat3 +
0.2140782505942 * GRP_RFMstat4 + 0.08904517954741 * GRP_RFMstat5 + 0.00618619005802 *
GRP_RFMstat6 + 0.07381352166701 * GRP_RFMstat7 + -0.07112387189768 * GRP_RFMstat8 +
0.18177537388268 * GRP_RFMstat9 + 0.01993781166098 * GRP_RFMstat10 + -0.13633030693385 *
GRP_RMntFrq2 + -0.03091098931044 * GRP_RMntFrq3 + 0.01424378851129 * GRP_RMntFrq4 +
-0.10457271155167 * GRP_RMntFrq5 + -0.04065636538378 * GRP_RMntFrq6 + -0.21000053348912 *
GRP_RMntFrq7 + 0.1195703554692 * GRP_RMntFrq8 + 0.06433917724909 * GRP_RMntFrq9 +
0.03523308730139 * GRP_RMntFrq10 + -0.45748566872646 * GRP_Recency2 + 0.00890062656102 *
GRP_Recency3 + -0.12573498091966 * GRP_Recency4 + -0.11355010854787 * GRP_Recency5 +
-0.06285469349039 * GRP_Recency6 + -0.01372977465721 * GRP_Recency7 + -0.00431009782377 *
GRP_Recency8 + 0.14264750449817 * GRP_Recency9 + 0.06322236291435 * GRP_Recency10 ;
1011804   +   H16  = H16  +    -0.02857321351589 * GRP_AcceptedCmp52
1011805   +          +     0.08686492082938 * GRP_AcceptedCmpTotal3
1011806   +          +    -0.02529651954499 * GRP_Frq2  +    -0.11708686915113 * GRP_Frq3
1011807   +          +    -0.00271389964637 * GRP_Frq4  +      0.0031520579469 * GRP_Frq5
1011808   +          +     0.02250592473469 * GRP_Frq6  +    -0.07430823955704 * GRP_Frq7
1011809   +          +    -0.05511293730159 * GRP_Frq8  +    -0.15083576220167 * GRP_Frq9
1011810   +          +     0.08624045289076 * GRP_Frq10  +    -0.11336098795831 *
1011811   +        GRP_Income2  +    -0.01135849326744 * GRP_Income3
1011812   +          +    -0.01038803441996 * GRP_Income4  +     0.01063081779526 *
1011813   +        GRP_Income5  +      0.0195138967196 * GRP_Income6
1011814   +          +    -0.12428695983315 * GRP_Income7  +      0.1762603662968 *
1011815   +        GRP_Income8  +    -0.04284544297425 * GRP_Income9
1011816   +          +     0.13548745294575 * GRP_Income10  +      0.1461906889163 *
1011817   +        GRP_Mnt2  +     0.00789497535067 * GRP_Mnt3  +    -0.10828259948309 *
1011818   +        GRP_Mnt4  +    -0.09852484093552 * GRP_Mnt5  +     0.12328283591039 *
1011819   +        GRP_Mnt6  +     0.02645884251294 * GRP_Mnt7  +    -0.06418515760324 *
1011820   +        GRP_Mnt8  +     0.05033297828056 * GRP_Mnt9  +     0.02319608065987 *
1011821   +        GRP_Mnt10  +    -0.06409512817059 * GRP_MntFishProducts3
1011822   +          +    -0.07347763124599 * GRP_MntFishProducts4
1011823   +          +     0.09606295777047 * GRP_MntFishProducts5
1011824   +          +     0.04849186843695 * GRP_MntFishProducts6
1011825   +          +    -0.09816590672897 * GRP_MntFishProducts7
1011826   +          +    -0.06716198318522 * GRP_MntFishProducts8
1011827   +          +     0.02729112309666 * GRP_MntFishProducts9
1011828   +          +     0.15530589859286 * GRP_MntFishProducts10
1011829   +          +    -0.26850482232692 * GRP_MntGoldProds2
1011830   +          +      0.0177945850339 * GRP_MntGoldProds3
1011831   +          +     0.07330868157069 * GRP_MntGoldProds4
1011832   +          +    -0.07888253464223 * GRP_MntGoldProds5
1011833   +          +    -0.05383351391678 * GRP_MntGoldProds6
1011834   +          +     0.06902011208006 * GRP_MntGoldProds7
1011835   +          +     0.01659381751676 * GRP_MntGoldProds8
1011836   +          +     0.05511006705343 * GRP_MntGoldProds9
1011837   +          +    -0.12233490278298 * GRP_MntGoldProds10
1011838   +          +    -0.06372567187434 * GRP_MntMeatProducts2
1011839   +          +     0.04258696255136 * GRP_MntMeatProducts3
1011840   +          +     0.07756827842945 * GRP_MntMeatProducts4
1011841   +          +    -0.08102882952712 * GRP_MntMeatProducts5
1011842   +          +    -0.18168349526814 * GRP_MntMeatProducts6
1011843   +          +    -0.09289639689933 * GRP_MntMeatProducts7
1011844   +          +    -0.12483836376085 * GRP_MntMeatProducts8
1011845   +          +    -0.00476358575434 * GRP_MntMeatProducts9
1011846   +          +    -0.05003834735617 * GRP_MntMeatProducts10
1011847   +          +     0.08995329370692 * GRP_MntSweetProducts3
1011848   +          +     0.14420536072862 * GRP_MntSweetProducts4
1011849   +          +    -0.12656735985005 * GRP_MntSweetProducts5
1011850   +          +    -0.03927173602614 * GRP_MntSweetProducts6
1011851   +          +     0.11985794354261 * GRP_MntSweetProducts7
1011852   +          +    -0.03511406177491 * GRP_MntSweetProducts8
1011853   +          +     0.00072578123331 * GRP_MntSweetProducts9
1011854   +          +    -0.10392403461293 * GRP_MntSweetProducts10
1011855   +          +    -0.05182683414566 * GRP_MntWines2  +    -0.12225589796854 *
1011856   +        GRP_MntWines3  +    -0.00836365672389 * GRP_MntWines4
1011857   +          +     0.01817080496827 * GRP_MntWines5  +     0.00139854456371 *
1011858   +        GRP_MntWines6  +     0.11415329329768 * GRP_MntWines7
1011859   +          +    -0.07157344425572 * GRP_MntWines8  +    -0.10015424425022 *
1011860   +        GRP_MntWines9  +     0.01183545951543 * GRP_MntWines10
1011861   +          +     0.01371669307975 * GRP_NumCatalogPurchases3
1011862   +          +     0.07907358248279 * GRP_NumCatalogPurchases4
1011863   +          +     0.01239764907034 * GRP_NumCatalogPurchases5
1011864   +          +    -0.04021922540013 * GRP_NumCatalogPurchases6
1011865   +          +     0.09459541866911 * GRP_NumCatalogPurchases7
1011866   +          +    -0.16967374745579 * GRP_NumDistPurchases2
1011867   +          +     0.09200080502499 * GRP_NumDistPurchases3
1011868   +          +    -0.10021352797437 * GRP_NumDistPurchases4
1011869   +          +    -0.10066040841661 * GRP_NumDistPurchases5
1011870   +          +     0.00752147985238 * GRP_NumDistPurchases6
1011871   +          +     0.06652031886304 * GRP_NumDistPurchases7
1011872   +          +    -0.02043214836484 * GRP_NumDistPurchases8
1011873   +          +     0.02148909954497 * GRP_NumDistPurchases9
1011874   +          +    -0.08750148475271 * GRP_NumDistPurchases10
1011875   +          +    -0.11100944378418 * GRP_NumWebPurchases2
1011876   +          +     0.15913249284009 * GRP_NumWebPurchases3
1011877   +          +     0.01344719363688 * GRP_NumWebPurchases4
1011878   +          +     0.05964097356376 * GRP_NumWebPurchases5
1011879   +          +    -0.02443578971107 * GRP_NumWebPurchases6
1011880   +          +    -0.08746113819167 * GRP_NumWebPurchases7
1011881   +          +    -0.05128856330268 * GRP_NumWebPurchases8
1011882   +          +    -0.05875299359354 * GRP_NumWebVisitsMonth2
1011883   +          +     0.07755855794482 * GRP_NumWebVisitsMonth3
1011884   +          +    -0.07517161675954 * GRP_NumWebVisitsMonth4
1011885   +          +     0.05144332977229 * GRP_NumWebVisitsMonth5
1011886   +          +     0.18297745072296 * GRP_NumWebVisitsMonth6
1011887   +          +     0.06164490867457 * GRP_NumWebVisitsMonth7
1011888   +          +     0.04580284323085 * GRP_NumWebVisitsMonth8
1011889   +          +    -0.06378765632552 * GRP_RFMstat2  +     0.02170099547671 *
1011890   +        GRP_RFMstat3  +     0.05641050433358 * GRP_RFMstat4
1011891   +          +    -0.01875867792846 * GRP_RFMstat5  +    -0.02966367663118 *
1011892   +        GRP_RFMstat6  +     0.06778581692325 * GRP_RFMstat7
1011893   +          +     0.08472702734665 * GRP_RFMstat8  +    -0.07513817936554 *
1011894   +        GRP_RFMstat9  +    -0.09054195031681 * GRP_RFMstat10
1011895   +          +     0.09962266457073 * GRP_RMntFrq2  +      0.0269861046733 *
1011896   +        GRP_RMntFrq3  +    -0.03854288653601 * GRP_RMntFrq4
1011897   +          +    -0.19936014666985 * GRP_RMntFrq5  +    -0.02515671079355 *
1011898   +        GRP_RMntFrq6  +     0.04869097060418 * GRP_RMntFrq7
1011899   +          +    -0.10622821231311 * GRP_RMntFrq8  +    -0.16450480022836 *
1011900   +        GRP_RMntFrq9  +     0.08581508554974 * GRP_RMntFrq10
1011901   +          +      0.0101644001149 * GRP_Recency2  +     0.04563803568067 *
1011902   +        GRP_Recency3  +    -0.12616695833869 * GRP_Recency4
1011903   +          +    -0.12673939537116 * GRP_Recency5  +    -0.09667218383464 *
1011904   +        GRP_Recency6  +     0.18574081401557 * GRP_Recency7
1011905   +          +    -0.06904154623978 * GRP_Recency8  +     0.14085181924583 *
1011906   +        GRP_Recency9  +     0.09795171549035 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.02857321351589 * GRP_AcceptedCmp52 + 0.08686492082938 *
GRP_AcceptedCmpTotal3 + -0.02529651954499 * GRP_Frq2 + -0.11708686915113 * GRP_Frq3 +
-0.00271389964637 * GRP_Frq4 + 0.0031520579469 * GRP_Frq5 + 0.02250592473469 * GRP_Frq6 +
-0.07430823955704 * GRP_Frq7 + -0.05511293730159 * GRP_Frq8 + -0.15083576220167 * GRP_Frq9 +
0.08624045289076 * GRP_Frq10 + -0.11336098795831 * GRP_Income2 + -0.01135849326744 *
GRP_Income3 + -0.01038803441996 * GRP_Income4 + 0.01063081779526 * GRP_Income5 +
0.0195138967196 * GRP_Income6 + -0.12428695983315 * GRP_Income7 + 0.1762603662968 *
GRP_Income8 + -0.04284544297425 * GRP_Income9 + 0.13548745294575 * GRP_Income10 +
0.1461906889163 * GRP_Mnt2 + 0.00789497535067 * GRP_Mnt3 + -0.10828259948309 * GRP_Mnt4 +
-0.09852484093552 * GRP_Mnt5 + 0.12328283591039 * GRP_Mnt6 + 0.02645884251294 * GRP_Mnt7 +
-0.06418515760324 * GRP_Mnt8 + 0.05033297828056 * GRP_Mnt9 + 0.02319608065987 * GRP_Mnt10 +
-0.06409512817059 * GRP_MntFishProducts3 + -0.07347763124599 * GRP_MntFishProducts4 +
0.09606295777047 * GRP_MntFishProducts5 + 0.04849186843695 * GRP_MntFishProducts6 +
-0.09816590672897 * GRP_MntFishProducts7 + -0.06716198318522 * GRP_MntFishProducts8 +
0.02729112309666 * GRP_MntFishProducts9 + 0.15530589859286 * GRP_MntFishProducts10 +
-0.26850482232692 * GRP_MntGoldProds2 + 0.0177945850339 * GRP_MntGoldProds3 + 0.07330868157069
* GRP_MntGoldProds4 + -0.07888253464223 * GRP_MntGoldProds5 + -0.05383351391678 *
GRP_MntGoldProds6 + 0.06902011208006 * GRP_MntGoldProds7 + 0.01659381751676 *
GRP_MntGoldProds8 + 0.05511006705343 * GRP_MntGoldProds9 + -0.12233490278298 *
GRP_MntGoldProds10 + -0.06372567187434 * GRP_MntMeatProducts2 + 0.04258696255136 *
GRP_MntMeatProducts3 + 0.07756827842945 * GRP_MntMeatProducts4 + -0.08102882952712 *
GRP_MntMeatProducts5 + -0.18168349526814 * GRP_MntMeatProducts6 + -0.09289639689933 *
GRP_MntMeatProducts7 + -0.12483836376085 * GRP_MntMeatProducts8 + -0.00476358575434 *
GRP_MntMeatProducts9 + -0.05003834735617 * GRP_MntMeatProducts10 + 0.08995329370692 *
GRP_MntSweetProducts3 + 0.14420536072862 * GRP_MntSweetProducts4 + -0.12656735985005 *
GRP_MntSweetProducts5 + -0.03927173602614 * GRP_MntSweetProducts6 + 0.11985794354261 *
GRP_MntSweetProducts7 + -0.03511406177491 * GRP_MntSweetProducts8 + 0.00072578123331 *
GRP_MntSweetProducts9 + -0.10392403461293 * GRP_MntSweetProducts10 + -0.05182683414566 *
GRP_MntWines2 + -0.12225589796854 * GRP_MntWines3 + -0.00836365672389 * GRP_MntWines4 +
0.01817080496827 * GRP_MntWines5 + 0.00139854456371 * GRP_MntWines6 + 0.11415329329768 *
GRP_MntWines7 + -0.07157344425572 * GRP_MntWines8 + -0.10015424425022 * GRP_MntWines9 +
0.01183545951543 * GRP_MntWines10 + 0.01371669307975 * GRP_NumCatalogPurchases3 +
0.07907358248279 * GRP_NumCatalogPurchases4 + 0.01239764907034 * GRP_NumCatalogPurchases5 +
-0.04021922540013 * GRP_NumCatalogPurchases6 + 0.09459541866911 * GRP_NumCatalogPurchases7 +
-0.16967374745579 * GRP_NumDistPurchases2 + 0.09200080502499 * GRP_NumDistPurchases3 +
-0.10021352797437 * GRP_NumDistPurchases4 + -0.10066040841661 * GRP_NumDistPurchases5 +
0.00752147985238 * GRP_NumDistPurchases6 + 0.06652031886304 * GRP_NumDistPurchases7 +
-0.02043214836484 * GRP_NumDistPurchases8 + 0.02148909954497 * GRP_NumDistPurchases9 +
-0.08750148475271 * GRP_NumDistPurchases10 + -0.11100944378418 * GRP_NumWebPurchases2 +
0.15913249284009 * GRP_NumWebPurchases3 + 0.01344719363688 * GRP_NumWebPurchases4 +
0.05964097356376 * GRP_NumWebPurchases5 + -0.02443578971107 * GRP_NumWebPurchases6 +
-0.08746113819167 * GRP_NumWebPurchases7 + -0.05128856330268 * GRP_NumWebPurchases8 +
-0.05875299359354 * GRP_NumWebVisitsMonth2 + 0.07755855794482 * GRP_NumWebVisitsMonth3 +
-0.07517161675954 * GRP_NumWebVisitsMonth4 + 0.05144332977229 * GRP_NumWebVisitsMonth5 +
0.18297745072296 * GRP_NumWebVisitsMonth6 + 0.06164490867457 * GRP_NumWebVisitsMonth7 +
0.04580284323085 * GRP_NumWebVisitsMonth8 + -0.06378765632552 * GRP_RFMstat2 +
0.02170099547671 * GRP_RFMstat3 + 0.05641050433358 * GRP_RFMstat4 + -0.01875867792846 *
GRP_RFMstat5 + -0.02966367663118 * GRP_RFMstat6 + 0.06778581692325 * GRP_RFMstat7 +
0.08472702734665 * GRP_RFMstat8 + -0.07513817936554 * GRP_RFMstat9 + -0.09054195031681 *
GRP_RFMstat10 + 0.09962266457073 * GRP_RMntFrq2 + 0.0269861046733 * GRP_RMntFrq3 +
-0.03854288653601 * GRP_RMntFrq4 + -0.19936014666985 * GRP_RMntFrq5 + -0.02515671079355 *
GRP_RMntFrq6 + 0.04869097060418 * GRP_RMntFrq7 + -0.10622821231311 * GRP_RMntFrq8 +
-0.16450480022836 * GRP_RMntFrq9 + 0.08581508554974 * GRP_RMntFrq10 + 0.0101644001149 *
GRP_Recency2 + 0.04563803568067 * GRP_Recency3 + -0.12616695833869 * GRP_Recency4 +
-0.12673939537116 * GRP_Recency5 + -0.09667218383464 * GRP_Recency6 + 0.18574081401557 *
GRP_Recency7 + -0.06904154623978 * GRP_Recency8 + 0.14085181924583 * GRP_Recency9 +
0.09795171549035 * GRP_Recency10 ;
1011907   +   H11  =    -0.42454680093166 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.42454680093166 + H11 ;
1011908   +   H12  =    -0.24175207531939 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.24175207531939 + H12 ;
1011909   +   H13  =     -0.3275857158264 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.3275857158264 + H13 ;
1011910   +   H14  =     -0.8506199830485 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.8506199830485 + H14 ;
1011911   +   H15  =    -0.51670887519827 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.51670887519827 + H15 ;
1011912   +   H16  =     1.12226016334851 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 1.12226016334851 + H16 ;
1011913   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1011914   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1011915   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1011916   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1011917   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1011918   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1011919   +END;
MPRINT(EM_DIAGRAM):   END;
1011920   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1011921   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1011922   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1011923   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1011924   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1011925   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1011926   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1011927   +END;
MPRINT(EM_DIAGRAM):   END;
1011928   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1011929   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1011930   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1011931   +
1011932   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1011933   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1011934   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1011935   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1011936   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1011937   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1011938   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1011939   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1011940   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1011941   +end;
MPRINT(EM_DIAGRAM):   end;
1011942   +else do;
MPRINT(EM_DIAGRAM):   else do;
1011943   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1011944   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1011945   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1011946   +   end;
MPRINT(EM_DIAGRAM):   end;
1011947   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1011948   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1011949   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1011950   +   end;
MPRINT(EM_DIAGRAM):   end;
1011951   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1011952   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1011953   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1011954   +   end;
MPRINT(EM_DIAGRAM):   end;
1011955   +end;
MPRINT(EM_DIAGRAM):   end;
1011956   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1011957   +   P_DepVar1  =     3.47433172236781 * H11  +     3.54768053440586 * H12
1011958   +          +      7.2593084534657 * H13  +    -2.22651417004259 * H14
1011959   +          +    -1.72657232208442 * H15  +     0.20378362763414 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.47433172236781 * H11 + 3.54768053440586 * H12 +
7.2593084534657 * H13 + -2.22651417004259 * H14 + -1.72657232208442 * H15 + 0.20378362763414 *
H16 ;
1011960   +   P_DepVar1  =     -1.6184674510088 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.6184674510088 + P_DepVar1 ;
1011961   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1011962   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1011963   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1011964   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1011965   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1011966   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1011967   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1011968   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1011969   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1011970   +END;
MPRINT(EM_DIAGRAM):   END;
1011971   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1011972   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1011973   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1011974   +END;
MPRINT(EM_DIAGRAM):   END;
1011975   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1011976   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1011977   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1011978   +END;
MPRINT(EM_DIAGRAM):   END;
1011979   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1011980   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1011981   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1011982   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1011983   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1011984   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1011985   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1011986   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1011987   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1011988   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1011989   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1011990   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1011991   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1011992   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1011993   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1011994   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1011995   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1011996   +END;
MPRINT(EM_DIAGRAM):   END;
1011997   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1011998   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1011999   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1012000   +drop
1012001   +H11
1012002   +H12
1012003   +H13
1012004   +H14
1012005   +H15
The SAS System
 
1012006   +H16
1012007   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1012008   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1012009    run;
 
NOTE: DATA STEP view saved on file EMWS8.NEURAL23_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1012010    quit;
1012011    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1012012    filename emflow
1012012  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural23: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1012013    *------------------------------------------------------------*;
1012014    * Neural23: Scoring VALIDATE data;
1012015    *------------------------------------------------------------*;
1012016    data EMWS8.Neural23_VALIDATE
1012017    / view=EMWS8.Neural23_VALIDATE
1012018    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_VALIDATE / view=EMWS8.Neural23_VALIDATE ;
1012019    set EMWS8.BINNING_VALIDATE
1012020    ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE ;
1012021    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas.
1012022   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1012023   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1012024   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1012025   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1012026   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1012027   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1012028   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1012029   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1012030   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1012031   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1012032   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1012033   +LENGTH _WARN_ $4
1012034   +      F_DepVar  $ 12
1012035   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1012036   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1012037   +
1012038   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1012039   +
1012040   +      label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
1012041   +
1012042   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1012043   +
1012044   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1012045   +
1012046   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1012047   +
1012048   +      label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
1012049   +
1012050   +      label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
1012051   +
1012052   +      label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
1012053   +
1012054   +      label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
1012055   +
1012056   +      label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
1012057   +
1012058   +      label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
1012059   +
1012060   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1012061   +
1012062   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1012063   +
1012064   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1012065   +
1012066   +      label GRP_Income5 = 'Dummy: GRP_Income=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Income5 = 'Dummy: GRP_Income=5' ;
1012067   +
1012068   +      label GRP_Income6 = 'Dummy: GRP_Income=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Income6 = 'Dummy: GRP_Income=6' ;
1012069   +
1012070   +      label GRP_Income7 = 'Dummy: GRP_Income=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Income7 = 'Dummy: GRP_Income=7' ;
1012071   +
1012072   +      label GRP_Income8 = 'Dummy: GRP_Income=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Income8 = 'Dummy: GRP_Income=8' ;
1012073   +
1012074   +      label GRP_Income9 = 'Dummy: GRP_Income=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Income9 = 'Dummy: GRP_Income=9' ;
1012075   +
1012076   +      label GRP_Income10 = 'Dummy: GRP_Income=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Income10 = 'Dummy: GRP_Income=10' ;
1012077   +
1012078   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1012079   +
1012080   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1012081   +
1012082   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1012083   +
1012084   +      label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
1012085   +
1012086   +      label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
1012087   +
1012088   +      label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
1012089   +
1012090   +      label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
1012091   +
1012092   +      label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
1012093   +
1012094   +      label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
1012095   +
1012096   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1012097   +
1012098   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1012099   +
1012100   +      label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
1012101   +
1012102   +      label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
1012103   +
1012104   +      label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
1012105   +
1012106   +      label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
1012107   +
1012108   +      label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
1012109   +
1012110   +      label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
1012111   +
1012112   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1012113   +
1012114   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1012115   +
1012116   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1012117   +
1012118   +      label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
1012119   +
1012120   +      label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
1012121   +
1012122   +      label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
1012123   +
1012124   +      label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
1012125   +
1012126   +      label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
1012127   +
1012128   +      label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
1012129   +
1012130   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1012131   +
1012132   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1012133   +
1012134   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1012135   +
1012136   +      label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
1012137   +
1012138   +      label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
1012139   +
1012140   +      label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
1012141   +
1012142   +      label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
1012143   +
1012144   +      label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
1012145   +
1012146   +      label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
1012147   +
1012148   +      label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
1012149   +
1012150   +      label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
1012151   +
1012152   +      label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
1012153   +
1012154   +      label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
1012155   +
1012156   +      label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
1012157   +
1012158   +      label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
1012159   +
1012160   +      label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
1012161   +
1012162   +      label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
1012163   +
1012164   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1012165   +
1012166   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1012167   +
1012168   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1012169   +
1012170   +      label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
1012171   +
1012172   +      label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
1012173   +
1012174   +      label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
1012175   +
1012176   +      label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
1012177   +
1012178   +      label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
1012179   +
1012180   +      label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
1012181   +
1012182   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1012183   +
1012184   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1012185   +
1012186   +      label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
1012187   +
1012188   +      label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
1012189   +
1012190   +      label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
1012191   +
1012192   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1012193   +
1012194   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1012195   +
1012196   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1012197   +
1012198   +      label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
1012199   +
1012200   +      label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
1012201   +
1012202   +      label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
1012203   +
1012204   +      label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
1012205   +
1012206   +      label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
1012207   +
1012208   +      label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
1012209   +
1012210   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1012211   +
1012212   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1012213   +
1012214   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1012215   +
1012216   +      label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
1012217   +
1012218   +      label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
1012219   +
1012220   +      label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
1012221   +
1012222   +      label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
1012223   +
1012224   +      label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
1012225   +
1012226   +      label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
1012227   +
1012228   +      label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
1012229   +
1012230   +      label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
1012231   +
1012232   +      label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
1012233   +
1012234   +      label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
1012235   +
1012236   +      label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
1012237   +
1012238   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1012239   +
1012240   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1012241   +
1012242   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1012243   +
1012244   +      label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
1012245   +
1012246   +      label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
1012247   +
1012248   +      label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
1012249   +
1012250   +      label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
1012251   +
1012252   +      label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
1012253   +
1012254   +      label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
1012255   +
1012256   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1012257   +
1012258   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1012259   +
1012260   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1012261   +
1012262   +      label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
1012263   +
1012264   +      label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
1012265   +
1012266   +      label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
1012267   +
1012268   +      label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
1012269   +
1012270   +      label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
1012271   +
1012272   +      label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
1012273   +
1012274   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1012275   +
1012276   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1012277   +
1012278   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1012279   +
1012280   +      label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
1012281   +
1012282   +      label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
1012283   +
1012284   +      label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
1012285   +
1012286   +      label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
1012287   +
1012288   +      label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
1012289   +
1012290   +      label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
1012291   +
1012292   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1012293   +
1012294   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1012295   +
1012296   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1012297   +
1012298   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1012299   +
1012300   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1012301   +
1012302   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1012303   +
1012304   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1012305   +
1012306   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1012307   +
1012308   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1012309   +
1012310   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1012311   +
1012312   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1012313   +
1012314   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1012315   +
1012316   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1012317   +
1012318   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1012319   +
1012320   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1012321   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1012322   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1012323   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1012324   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1012325   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1012326   +end;
MPRINT(EM_DIAGRAM):   end;
1012327   +else do;
MPRINT(EM_DIAGRAM):   else do;
1012328   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1012329   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1012330   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1012331   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1012332   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1012333   +   end;
MPRINT(EM_DIAGRAM):   end;
1012334   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1012335   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1012336   +   end;
MPRINT(EM_DIAGRAM):   end;
1012337   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1012338   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1012339   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1012340   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1012341   +   end;
MPRINT(EM_DIAGRAM):   end;
1012342   +end;
MPRINT(EM_DIAGRAM):   end;
1012343   +
1012344   +*** Generate dummy variables for GRP_AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmpTotal ;
1012345   +drop GRP_AcceptedCmpTotal3 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmpTotal3 ;
1012346   +if missing( GRP_AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmpTotal ) then do;
1012347   +   GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
1012348   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1012349   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1012350   +end;
MPRINT(EM_DIAGRAM):   end;
1012351   +else do;
MPRINT(EM_DIAGRAM):   else do;
1012352   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1012353   +   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
1012354   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1012355   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1012356   +      GRP_AcceptedCmpTotal3 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = 1;
1012357   +   end;
MPRINT(EM_DIAGRAM):   end;
1012358   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1012359   +      GRP_AcceptedCmpTotal3 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = -1;
1012360   +   end;
MPRINT(EM_DIAGRAM):   end;
1012361   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1012362   +      GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
1012363   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1012364   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1012365   +   end;
MPRINT(EM_DIAGRAM):   end;
1012366   +end;
MPRINT(EM_DIAGRAM):   end;
1012367   +
1012368   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1012369   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8 GRP_Frq9
1012370   +        GRP_Frq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8
GRP_Frq9 GRP_Frq10 ;
1012371   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1012372   +GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1012373   +GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1012374   +GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1012375   +GRP_Frq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 0;
1012376   +GRP_Frq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 0;
1012377   +GRP_Frq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 0;
1012378   +GRP_Frq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 0;
1012379   +GRP_Frq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 0;
1012380   +GRP_Frq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 0;
1012381   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1012382   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1012383   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1012384   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1012385   +   GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
1012386   +   GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
1012387   +   GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
1012388   +   GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
1012389   +   GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
1012390   +   GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
1012391   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1012392   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1012393   +end;
MPRINT(EM_DIAGRAM):   end;
1012394   +else do;
MPRINT(EM_DIAGRAM):   else do;
1012395   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1012396   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1012397   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1012398   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1012399   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1012400   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1012401   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1012402   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1012403   +               GRP_Frq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 1;
1012404   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012405   +            end;
MPRINT(EM_DIAGRAM):   end;
1012406   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1012407   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1012408   +                  GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1012409   +                  GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1012410   +                  GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1012411   +                  GRP_Frq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = -1;
1012412   +                  GRP_Frq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = -1;
1012413   +                  GRP_Frq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = -1;
1012414   +                  GRP_Frq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = -1;
1012415   +                  GRP_Frq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = -1;
1012416   +                  GRP_Frq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = -1;
1012417   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012418   +               end;
MPRINT(EM_DIAGRAM):   end;
1012419   +            end;
MPRINT(EM_DIAGRAM):   end;
1012420   +         end;
MPRINT(EM_DIAGRAM):   end;
1012421   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1012422   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1012423   +               GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1012424   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012425   +            end;
MPRINT(EM_DIAGRAM):   end;
1012426   +         end;
MPRINT(EM_DIAGRAM):   end;
1012427   +      end;
MPRINT(EM_DIAGRAM):   end;
1012428   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1012429   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1012430   +            GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1012431   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012432   +         end;
MPRINT(EM_DIAGRAM):   end;
1012433   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1012434   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1012435   +               GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1012436   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012437   +            end;
MPRINT(EM_DIAGRAM):   end;
1012438   +         end;
MPRINT(EM_DIAGRAM):   end;
1012439   +      end;
MPRINT(EM_DIAGRAM):   end;
1012440   +   end;
MPRINT(EM_DIAGRAM):   end;
1012441   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1012442   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1012443   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1012444   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1012445   +               GRP_Frq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 1;
1012446   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012447   +            end;
MPRINT(EM_DIAGRAM):   end;
1012448   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1012449   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1012450   +                  GRP_Frq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 1;
1012451   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012452   +               end;
MPRINT(EM_DIAGRAM):   end;
1012453   +            end;
MPRINT(EM_DIAGRAM):   end;
1012454   +         end;
MPRINT(EM_DIAGRAM):   end;
1012455   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1012456   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1012457   +               GRP_Frq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 1;
1012458   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012459   +            end;
MPRINT(EM_DIAGRAM):   end;
1012460   +         end;
MPRINT(EM_DIAGRAM):   end;
1012461   +      end;
MPRINT(EM_DIAGRAM):   end;
1012462   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1012463   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1012464   +            GRP_Frq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 1;
1012465   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012466   +         end;
MPRINT(EM_DIAGRAM):   end;
1012467   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1012468   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1012469   +               GRP_Frq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 1;
1012470   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012471   +            end;
MPRINT(EM_DIAGRAM):   end;
1012472   +         end;
MPRINT(EM_DIAGRAM):   end;
1012473   +      end;
MPRINT(EM_DIAGRAM):   end;
1012474   +   end;
MPRINT(EM_DIAGRAM):   end;
1012475   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1012476   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1012477   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1012478   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1012479   +      GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
1012480   +      GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
1012481   +      GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
1012482   +      GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
1012483   +      GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
1012484   +      GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
1012485   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1012486   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1012487   +   end;
MPRINT(EM_DIAGRAM):   end;
1012488   +end;
MPRINT(EM_DIAGRAM):   end;
1012489   +
1012490   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1012491   +drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6 GRP_Income7
1012492   +        GRP_Income8 GRP_Income9 GRP_Income10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6
GRP_Income7 GRP_Income8 GRP_Income9 GRP_Income10 ;
1012493   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1012494   +GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1012495   +GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1012496   +GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1012497   +GRP_Income5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 0;
1012498   +GRP_Income6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 0;
1012499   +GRP_Income7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 0;
1012500   +GRP_Income8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 0;
1012501   +GRP_Income9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 0;
1012502   +GRP_Income10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 0;
1012503   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1012504   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1012505   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1012506   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1012507   +   GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
1012508   +   GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
1012509   +   GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
1012510   +   GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
1012511   +   GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
1012512   +   GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
1012513   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1012514   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1012515   +end;
MPRINT(EM_DIAGRAM):   end;
1012516   +else do;
MPRINT(EM_DIAGRAM):   else do;
1012517   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1012518   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1012519   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1012520   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1012521   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1012522   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1012523   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1012524   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1012525   +               GRP_Income10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 1;
1012526   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012527   +            end;
MPRINT(EM_DIAGRAM):   end;
1012528   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1012529   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1012530   +                  GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1012531   +                  GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1012532   +                  GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1012533   +                  GRP_Income5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = -1;
1012534   +                  GRP_Income6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = -1;
1012535   +                  GRP_Income7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = -1;
1012536   +                  GRP_Income8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = -1;
1012537   +                  GRP_Income9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = -1;
1012538   +                  GRP_Income10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = -1;
1012539   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012540   +               end;
MPRINT(EM_DIAGRAM):   end;
1012541   +            end;
MPRINT(EM_DIAGRAM):   end;
1012542   +         end;
MPRINT(EM_DIAGRAM):   end;
1012543   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1012544   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1012545   +               GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1012546   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012547   +            end;
MPRINT(EM_DIAGRAM):   end;
1012548   +         end;
MPRINT(EM_DIAGRAM):   end;
1012549   +      end;
MPRINT(EM_DIAGRAM):   end;
1012550   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1012551   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1012552   +            GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1012553   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012554   +         end;
MPRINT(EM_DIAGRAM):   end;
1012555   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1012556   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1012557   +               GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1012558   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012559   +            end;
MPRINT(EM_DIAGRAM):   end;
1012560   +         end;
MPRINT(EM_DIAGRAM):   end;
1012561   +      end;
MPRINT(EM_DIAGRAM):   end;
1012562   +   end;
MPRINT(EM_DIAGRAM):   end;
1012563   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1012564   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1012565   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1012566   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1012567   +               GRP_Income5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 1;
1012568   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012569   +            end;
MPRINT(EM_DIAGRAM):   end;
1012570   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1012571   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1012572   +                  GRP_Income6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 1;
1012573   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012574   +               end;
MPRINT(EM_DIAGRAM):   end;
1012575   +            end;
MPRINT(EM_DIAGRAM):   end;
1012576   +         end;
MPRINT(EM_DIAGRAM):   end;
1012577   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1012578   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1012579   +               GRP_Income7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 1;
1012580   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012581   +            end;
MPRINT(EM_DIAGRAM):   end;
1012582   +         end;
MPRINT(EM_DIAGRAM):   end;
1012583   +      end;
MPRINT(EM_DIAGRAM):   end;
1012584   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1012585   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1012586   +            GRP_Income8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 1;
1012587   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012588   +         end;
MPRINT(EM_DIAGRAM):   end;
1012589   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1012590   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1012591   +               GRP_Income9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 1;
1012592   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012593   +            end;
MPRINT(EM_DIAGRAM):   end;
1012594   +         end;
MPRINT(EM_DIAGRAM):   end;
1012595   +      end;
MPRINT(EM_DIAGRAM):   end;
1012596   +   end;
MPRINT(EM_DIAGRAM):   end;
1012597   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1012598   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1012599   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1012600   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1012601   +      GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
1012602   +      GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
1012603   +      GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
1012604   +      GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
1012605   +      GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
1012606   +      GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
1012607   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1012608   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1012609   +   end;
MPRINT(EM_DIAGRAM):   end;
1012610   +end;
MPRINT(EM_DIAGRAM):   end;
1012611   +
1012612   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1012613   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8 GRP_Mnt9
1012614   +        GRP_Mnt10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8
GRP_Mnt9 GRP_Mnt10 ;
1012615   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1012616   +GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1012617   +GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1012618   +GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1012619   +GRP_Mnt5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 0;
1012620   +GRP_Mnt6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 0;
1012621   +GRP_Mnt7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 0;
1012622   +GRP_Mnt8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 0;
1012623   +GRP_Mnt9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 0;
1012624   +GRP_Mnt10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 0;
1012625   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1012626   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1012627   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1012628   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1012629   +   GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
1012630   +   GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
1012631   +   GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
1012632   +   GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
1012633   +   GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
1012634   +   GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
1012635   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1012636   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1012637   +end;
MPRINT(EM_DIAGRAM):   end;
1012638   +else do;
MPRINT(EM_DIAGRAM):   else do;
1012639   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1012640   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1012641   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1012642   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1012643   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1012644   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1012645   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1012646   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1012647   +               GRP_Mnt10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 1;
1012648   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012649   +            end;
MPRINT(EM_DIAGRAM):   end;
1012650   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1012651   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1012652   +                  GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1012653   +                  GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1012654   +                  GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1012655   +                  GRP_Mnt5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = -1;
1012656   +                  GRP_Mnt6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = -1;
1012657   +                  GRP_Mnt7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = -1;
1012658   +                  GRP_Mnt8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = -1;
1012659   +                  GRP_Mnt9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = -1;
1012660   +                  GRP_Mnt10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = -1;
1012661   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012662   +               end;
MPRINT(EM_DIAGRAM):   end;
1012663   +            end;
MPRINT(EM_DIAGRAM):   end;
1012664   +         end;
MPRINT(EM_DIAGRAM):   end;
1012665   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1012666   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1012667   +               GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1012668   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012669   +            end;
MPRINT(EM_DIAGRAM):   end;
1012670   +         end;
MPRINT(EM_DIAGRAM):   end;
1012671   +      end;
MPRINT(EM_DIAGRAM):   end;
1012672   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1012673   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1012674   +            GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1012675   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012676   +         end;
MPRINT(EM_DIAGRAM):   end;
1012677   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1012678   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1012679   +               GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1012680   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012681   +            end;
MPRINT(EM_DIAGRAM):   end;
1012682   +         end;
MPRINT(EM_DIAGRAM):   end;
1012683   +      end;
MPRINT(EM_DIAGRAM):   end;
1012684   +   end;
MPRINT(EM_DIAGRAM):   end;
1012685   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1012686   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1012687   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1012688   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1012689   +               GRP_Mnt5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 1;
1012690   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012691   +            end;
MPRINT(EM_DIAGRAM):   end;
1012692   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1012693   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1012694   +                  GRP_Mnt6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 1;
1012695   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012696   +               end;
MPRINT(EM_DIAGRAM):   end;
1012697   +            end;
MPRINT(EM_DIAGRAM):   end;
1012698   +         end;
MPRINT(EM_DIAGRAM):   end;
1012699   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1012700   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1012701   +               GRP_Mnt7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 1;
1012702   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012703   +            end;
MPRINT(EM_DIAGRAM):   end;
1012704   +         end;
MPRINT(EM_DIAGRAM):   end;
1012705   +      end;
MPRINT(EM_DIAGRAM):   end;
1012706   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1012707   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1012708   +            GRP_Mnt8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 1;
1012709   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012710   +         end;
MPRINT(EM_DIAGRAM):   end;
1012711   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1012712   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1012713   +               GRP_Mnt9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 1;
1012714   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012715   +            end;
MPRINT(EM_DIAGRAM):   end;
1012716   +         end;
MPRINT(EM_DIAGRAM):   end;
1012717   +      end;
MPRINT(EM_DIAGRAM):   end;
1012718   +   end;
MPRINT(EM_DIAGRAM):   end;
1012719   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1012720   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1012721   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1012722   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1012723   +      GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
1012724   +      GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
1012725   +      GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
1012726   +      GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
1012727   +      GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
1012728   +      GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
1012729   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1012730   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1012731   +   end;
MPRINT(EM_DIAGRAM):   end;
1012732   +end;
MPRINT(EM_DIAGRAM):   end;
1012733   +
1012734   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1012735   +drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
1012736   +        GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8
1012737   +        GRP_MntFishProducts9 GRP_MntFishProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8 GRP_MntFishProducts9
GRP_MntFishProducts10 ;
1012738   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1012739   +GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1012740   +GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1012741   +GRP_MntFishProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 0;
1012742   +GRP_MntFishProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 0;
1012743   +GRP_MntFishProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 0;
1012744   +GRP_MntFishProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 0;
1012745   +GRP_MntFishProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 0;
1012746   +GRP_MntFishProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 0;
1012747   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1012748   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1012749   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1012750   +   GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
1012751   +   GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
1012752   +   GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
1012753   +   GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
1012754   +   GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
1012755   +   GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
1012756   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1012757   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1012758   +end;
MPRINT(EM_DIAGRAM):   end;
1012759   +else do;
MPRINT(EM_DIAGRAM):   else do;
1012760   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1012761   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1012762   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1012763   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1012764   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1012765   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1012766   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1012767   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1012768   +               GRP_MntFishProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 1;
1012769   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012770   +            end;
MPRINT(EM_DIAGRAM):   end;
1012771   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1012772   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1012773   +                  GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1012774   +                  GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1012775   +                  GRP_MntFishProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = -1;
1012776   +                  GRP_MntFishProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = -1;
1012777   +                  GRP_MntFishProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = -1;
1012778   +                  GRP_MntFishProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = -1;
1012779   +                  GRP_MntFishProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = -1;
1012780   +                  GRP_MntFishProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = -1;
1012781   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012782   +               end;
MPRINT(EM_DIAGRAM):   end;
1012783   +            end;
MPRINT(EM_DIAGRAM):   end;
1012784   +         end;
MPRINT(EM_DIAGRAM):   end;
1012785   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1012786   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1012787   +               GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1012788   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012789   +            end;
MPRINT(EM_DIAGRAM):   end;
1012790   +         end;
MPRINT(EM_DIAGRAM):   end;
1012791   +      end;
MPRINT(EM_DIAGRAM):   end;
1012792   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1012793   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1012794   +            GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1012795   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012796   +         end;
MPRINT(EM_DIAGRAM):   end;
1012797   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1012798   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1012799   +               GRP_MntFishProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 1;
1012800   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012801   +            end;
MPRINT(EM_DIAGRAM):   end;
1012802   +         end;
MPRINT(EM_DIAGRAM):   end;
1012803   +      end;
MPRINT(EM_DIAGRAM):   end;
1012804   +   end;
MPRINT(EM_DIAGRAM):   end;
1012805   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1012806   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1012807   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1012808   +            GRP_MntFishProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 1;
1012809   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012810   +         end;
MPRINT(EM_DIAGRAM):   end;
1012811   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1012812   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1012813   +               GRP_MntFishProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 1;
1012814   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012815   +            end;
MPRINT(EM_DIAGRAM):   end;
1012816   +         end;
MPRINT(EM_DIAGRAM):   end;
1012817   +      end;
MPRINT(EM_DIAGRAM):   end;
1012818   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1012819   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1012820   +            GRP_MntFishProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 1;
1012821   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012822   +         end;
MPRINT(EM_DIAGRAM):   end;
1012823   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1012824   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1012825   +               GRP_MntFishProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 1;
1012826   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012827   +            end;
MPRINT(EM_DIAGRAM):   end;
1012828   +         end;
MPRINT(EM_DIAGRAM):   end;
1012829   +      end;
MPRINT(EM_DIAGRAM):   end;
1012830   +   end;
MPRINT(EM_DIAGRAM):   end;
1012831   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1012832   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1012833   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1012834   +      GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
1012835   +      GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
1012836   +      GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
1012837   +      GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
1012838   +      GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
1012839   +      GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
1012840   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1012841   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1012842   +   end;
MPRINT(EM_DIAGRAM):   end;
1012843   +end;
MPRINT(EM_DIAGRAM):   end;
1012844   +
1012845   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1012846   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 GRP_MntGoldProds5
1012847   +        GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8
1012848   +        GRP_MntGoldProds9 GRP_MntGoldProds10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4
GRP_MntGoldProds5 GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8 GRP_MntGoldProds9
GRP_MntGoldProds10 ;
1012849   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1012850   +GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1012851   +GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1012852   +GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1012853   +GRP_MntGoldProds5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 0;
1012854   +GRP_MntGoldProds6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 0;
1012855   +GRP_MntGoldProds7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 0;
1012856   +GRP_MntGoldProds8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 0;
1012857   +GRP_MntGoldProds9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 0;
1012858   +GRP_MntGoldProds10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 0;
1012859   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1012860   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1012861   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1012862   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1012863   +   GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
1012864   +   GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
1012865   +   GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
1012866   +   GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
1012867   +   GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
1012868   +   GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
1012869   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1012870   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1012871   +end;
MPRINT(EM_DIAGRAM):   end;
1012872   +else do;
MPRINT(EM_DIAGRAM):   else do;
1012873   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1012874   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1012875   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1012876   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1012877   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1012878   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1012879   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1012880   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1012881   +               GRP_MntGoldProds10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 1;
1012882   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012883   +            end;
MPRINT(EM_DIAGRAM):   end;
1012884   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1012885   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1012886   +                  GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1012887   +                  GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1012888   +                  GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1012889   +                  GRP_MntGoldProds5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = -1;
1012890   +                  GRP_MntGoldProds6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = -1;
1012891   +                  GRP_MntGoldProds7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = -1;
1012892   +                  GRP_MntGoldProds8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = -1;
1012893   +                  GRP_MntGoldProds9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = -1;
1012894   +                  GRP_MntGoldProds10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = -1;
1012895   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012896   +               end;
MPRINT(EM_DIAGRAM):   end;
1012897   +            end;
MPRINT(EM_DIAGRAM):   end;
1012898   +         end;
MPRINT(EM_DIAGRAM):   end;
1012899   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1012900   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1012901   +               GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1012902   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012903   +            end;
MPRINT(EM_DIAGRAM):   end;
1012904   +         end;
MPRINT(EM_DIAGRAM):   end;
1012905   +      end;
MPRINT(EM_DIAGRAM):   end;
1012906   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1012907   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1012908   +            GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1012909   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012910   +         end;
MPRINT(EM_DIAGRAM):   end;
1012911   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1012912   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1012913   +               GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1012914   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012915   +            end;
MPRINT(EM_DIAGRAM):   end;
1012916   +         end;
MPRINT(EM_DIAGRAM):   end;
1012917   +      end;
MPRINT(EM_DIAGRAM):   end;
1012918   +   end;
MPRINT(EM_DIAGRAM):   end;
1012919   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1012920   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1012921   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1012922   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1012923   +               GRP_MntGoldProds5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 1;
1012924   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012925   +            end;
MPRINT(EM_DIAGRAM):   end;
1012926   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1012927   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1012928   +                  GRP_MntGoldProds6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 1;
1012929   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012930   +               end;
MPRINT(EM_DIAGRAM):   end;
1012931   +            end;
MPRINT(EM_DIAGRAM):   end;
1012932   +         end;
MPRINT(EM_DIAGRAM):   end;
1012933   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1012934   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1012935   +               GRP_MntGoldProds7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 1;
1012936   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012937   +            end;
MPRINT(EM_DIAGRAM):   end;
1012938   +         end;
MPRINT(EM_DIAGRAM):   end;
1012939   +      end;
MPRINT(EM_DIAGRAM):   end;
1012940   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1012941   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1012942   +            GRP_MntGoldProds8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 1;
1012943   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012944   +         end;
MPRINT(EM_DIAGRAM):   end;
1012945   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1012946   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1012947   +               GRP_MntGoldProds9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 1;
1012948   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1012949   +            end;
MPRINT(EM_DIAGRAM):   end;
1012950   +         end;
MPRINT(EM_DIAGRAM):   end;
1012951   +      end;
MPRINT(EM_DIAGRAM):   end;
1012952   +   end;
MPRINT(EM_DIAGRAM):   end;
1012953   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1012954   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1012955   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1012956   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1012957   +      GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
1012958   +      GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
1012959   +      GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
1012960   +      GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
1012961   +      GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
1012962   +      GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
1012963   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1012964   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1012965   +   end;
MPRINT(EM_DIAGRAM):   end;
1012966   +end;
MPRINT(EM_DIAGRAM):   end;
1012967   +
1012968   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1012969   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
1012970   +        GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7
1012971   +        GRP_MntMeatProducts8 GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7 GRP_MntMeatProducts8
GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
1012972   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1012973   +GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1012974   +GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1012975   +GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1012976   +GRP_MntMeatProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 0;
1012977   +GRP_MntMeatProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 0;
1012978   +GRP_MntMeatProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 0;
1012979   +GRP_MntMeatProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 0;
1012980   +GRP_MntMeatProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 0;
1012981   +GRP_MntMeatProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 0;
1012982   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1012983   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1012984   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1012985   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1012986   +   GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
1012987   +   GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
1012988   +   GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
1012989   +   GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
1012990   +   GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
1012991   +   GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
1012992   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1012993   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1012994   +end;
MPRINT(EM_DIAGRAM):   end;
1012995   +else do;
MPRINT(EM_DIAGRAM):   else do;
1012996   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1012997   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1012998   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1012999   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1013000   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1013001   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1013002   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1013003   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1013004   +               GRP_MntMeatProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 1;
1013005   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013006   +            end;
MPRINT(EM_DIAGRAM):   end;
1013007   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1013008   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1013009   +                  GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1013010   +                  GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1013011   +                  GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1013012   +                  GRP_MntMeatProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = -1;
1013013   +                  GRP_MntMeatProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = -1;
1013014   +                  GRP_MntMeatProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = -1;
1013015   +                  GRP_MntMeatProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = -1;
1013016   +                  GRP_MntMeatProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = -1;
1013017   +                  GRP_MntMeatProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = -1;
1013018   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013019   +               end;
MPRINT(EM_DIAGRAM):   end;
1013020   +            end;
MPRINT(EM_DIAGRAM):   end;
1013021   +         end;
MPRINT(EM_DIAGRAM):   end;
1013022   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013023   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1013024   +               GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1013025   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013026   +            end;
MPRINT(EM_DIAGRAM):   end;
1013027   +         end;
MPRINT(EM_DIAGRAM):   end;
1013028   +      end;
MPRINT(EM_DIAGRAM):   end;
1013029   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1013030   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1013031   +            GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1013032   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013033   +         end;
MPRINT(EM_DIAGRAM):   end;
1013034   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013035   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1013036   +               GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1013037   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013038   +            end;
MPRINT(EM_DIAGRAM):   end;
1013039   +         end;
MPRINT(EM_DIAGRAM):   end;
1013040   +      end;
MPRINT(EM_DIAGRAM):   end;
1013041   +   end;
MPRINT(EM_DIAGRAM):   end;
1013042   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1013043   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1013044   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1013045   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1013046   +               GRP_MntMeatProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 1;
1013047   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013048   +            end;
MPRINT(EM_DIAGRAM):   end;
1013049   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1013050   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1013051   +                  GRP_MntMeatProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 1;
1013052   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013053   +               end;
MPRINT(EM_DIAGRAM):   end;
1013054   +            end;
MPRINT(EM_DIAGRAM):   end;
1013055   +         end;
MPRINT(EM_DIAGRAM):   end;
1013056   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013057   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1013058   +               GRP_MntMeatProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 1;
1013059   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013060   +            end;
MPRINT(EM_DIAGRAM):   end;
1013061   +         end;
MPRINT(EM_DIAGRAM):   end;
1013062   +      end;
MPRINT(EM_DIAGRAM):   end;
1013063   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1013064   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1013065   +            GRP_MntMeatProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 1;
1013066   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013067   +         end;
MPRINT(EM_DIAGRAM):   end;
1013068   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013069   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1013070   +               GRP_MntMeatProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 1;
1013071   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013072   +            end;
MPRINT(EM_DIAGRAM):   end;
1013073   +         end;
MPRINT(EM_DIAGRAM):   end;
1013074   +      end;
MPRINT(EM_DIAGRAM):   end;
1013075   +   end;
MPRINT(EM_DIAGRAM):   end;
1013076   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1013077   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1013078   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1013079   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1013080   +      GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
1013081   +      GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
1013082   +      GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
1013083   +      GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
1013084   +      GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
1013085   +      GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
1013086   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1013087   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1013088   +   end;
MPRINT(EM_DIAGRAM):   end;
1013089   +end;
MPRINT(EM_DIAGRAM):   end;
1013090   +
1013091   +*** Generate dummy variables for GRP_MntSweetProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntSweetProducts ;
1013092   +drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
1013093   +        GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8
1013094   +        GRP_MntSweetProducts9 GRP_MntSweetProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8 GRP_MntSweetProducts9
GRP_MntSweetProducts10 ;
1013095   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1013096   +GRP_MntSweetProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 0;
1013097   +GRP_MntSweetProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 0;
1013098   +GRP_MntSweetProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 0;
1013099   +GRP_MntSweetProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 0;
1013100   +GRP_MntSweetProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 0;
1013101   +GRP_MntSweetProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 0;
1013102   +GRP_MntSweetProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 0;
1013103   +GRP_MntSweetProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 0;
1013104   +if missing( GRP_MntSweetProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntSweetProducts ) then do;
1013105   +   GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
1013106   +   GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
1013107   +   GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
1013108   +   GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
1013109   +   GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
1013110   +   GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
1013111   +   GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
1013112   +   GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
1013113   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1013114   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1013115   +end;
MPRINT(EM_DIAGRAM):   end;
1013116   +else do;
MPRINT(EM_DIAGRAM):   else do;
1013117   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1013118   +   _dm12 = put( GRP_MntSweetProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntSweetProducts , BEST12. );
1013119   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1013120   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1013121   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1013122   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1013123   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1013124   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1013125   +               GRP_MntSweetProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 1;
1013126   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013127   +            end;
MPRINT(EM_DIAGRAM):   end;
1013128   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1013129   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1013130   +                  GRP_MntSweetProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = -1;
1013131   +                  GRP_MntSweetProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = -1;
1013132   +                  GRP_MntSweetProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = -1;
1013133   +                  GRP_MntSweetProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = -1;
1013134   +                  GRP_MntSweetProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = -1;
1013135   +                  GRP_MntSweetProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = -1;
1013136   +                  GRP_MntSweetProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = -1;
1013137   +                  GRP_MntSweetProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = -1;
1013138   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013139   +               end;
MPRINT(EM_DIAGRAM):   end;
1013140   +            end;
MPRINT(EM_DIAGRAM):   end;
1013141   +         end;
MPRINT(EM_DIAGRAM):   end;
1013142   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013143   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1013144   +               GRP_MntSweetProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 1;
1013145   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013146   +            end;
MPRINT(EM_DIAGRAM):   end;
1013147   +         end;
MPRINT(EM_DIAGRAM):   end;
1013148   +      end;
MPRINT(EM_DIAGRAM):   end;
1013149   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1013150   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1013151   +            GRP_MntSweetProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 1;
1013152   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013153   +         end;
MPRINT(EM_DIAGRAM):   end;
1013154   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013155   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1013156   +               GRP_MntSweetProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 1;
1013157   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013158   +            end;
MPRINT(EM_DIAGRAM):   end;
1013159   +         end;
MPRINT(EM_DIAGRAM):   end;
1013160   +      end;
MPRINT(EM_DIAGRAM):   end;
1013161   +   end;
MPRINT(EM_DIAGRAM):   end;
1013162   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1013163   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1013164   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1013165   +            GRP_MntSweetProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 1;
1013166   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013167   +         end;
MPRINT(EM_DIAGRAM):   end;
1013168   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013169   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1013170   +               GRP_MntSweetProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 1;
1013171   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013172   +            end;
MPRINT(EM_DIAGRAM):   end;
1013173   +         end;
MPRINT(EM_DIAGRAM):   end;
1013174   +      end;
MPRINT(EM_DIAGRAM):   end;
1013175   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1013176   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1013177   +            GRP_MntSweetProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 1;
1013178   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013179   +         end;
MPRINT(EM_DIAGRAM):   end;
1013180   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013181   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1013182   +               GRP_MntSweetProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 1;
1013183   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013184   +            end;
MPRINT(EM_DIAGRAM):   end;
1013185   +         end;
MPRINT(EM_DIAGRAM):   end;
1013186   +      end;
MPRINT(EM_DIAGRAM):   end;
1013187   +   end;
MPRINT(EM_DIAGRAM):   end;
1013188   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1013189   +      GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
1013190   +      GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
1013191   +      GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
1013192   +      GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
1013193   +      GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
1013194   +      GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
1013195   +      GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
1013196   +      GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
1013197   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1013198   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1013199   +   end;
MPRINT(EM_DIAGRAM):   end;
1013200   +end;
MPRINT(EM_DIAGRAM):   end;
1013201   +
1013202   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1013203   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5 GRP_MntWines6
1013204   +        GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5
GRP_MntWines6 GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
1013205   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1013206   +GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1013207   +GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1013208   +GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1013209   +GRP_MntWines5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 0;
1013210   +GRP_MntWines6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 0;
1013211   +GRP_MntWines7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 0;
1013212   +GRP_MntWines8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 0;
1013213   +GRP_MntWines9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 0;
1013214   +GRP_MntWines10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 0;
1013215   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1013216   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1013217   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1013218   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1013219   +   GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
1013220   +   GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
1013221   +   GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
1013222   +   GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
1013223   +   GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
1013224   +   GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
1013225   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1013226   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1013227   +end;
MPRINT(EM_DIAGRAM):   end;
1013228   +else do;
MPRINT(EM_DIAGRAM):   else do;
1013229   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1013230   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1013231   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1013232   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1013233   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1013234   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1013235   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1013236   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1013237   +               GRP_MntWines10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 1;
1013238   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013239   +            end;
MPRINT(EM_DIAGRAM):   end;
1013240   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1013241   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1013242   +                  GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1013243   +                  GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1013244   +                  GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1013245   +                  GRP_MntWines5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = -1;
1013246   +                  GRP_MntWines6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = -1;
1013247   +                  GRP_MntWines7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = -1;
1013248   +                  GRP_MntWines8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = -1;
1013249   +                  GRP_MntWines9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = -1;
1013250   +                  GRP_MntWines10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = -1;
1013251   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013252   +               end;
MPRINT(EM_DIAGRAM):   end;
1013253   +            end;
MPRINT(EM_DIAGRAM):   end;
1013254   +         end;
MPRINT(EM_DIAGRAM):   end;
1013255   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013256   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1013257   +               GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1013258   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013259   +            end;
MPRINT(EM_DIAGRAM):   end;
1013260   +         end;
MPRINT(EM_DIAGRAM):   end;
1013261   +      end;
MPRINT(EM_DIAGRAM):   end;
1013262   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1013263   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1013264   +            GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1013265   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013266   +         end;
MPRINT(EM_DIAGRAM):   end;
1013267   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013268   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1013269   +               GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1013270   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013271   +            end;
MPRINT(EM_DIAGRAM):   end;
1013272   +         end;
MPRINT(EM_DIAGRAM):   end;
1013273   +      end;
MPRINT(EM_DIAGRAM):   end;
1013274   +   end;
MPRINT(EM_DIAGRAM):   end;
1013275   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1013276   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1013277   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1013278   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1013279   +               GRP_MntWines5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 1;
1013280   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013281   +            end;
MPRINT(EM_DIAGRAM):   end;
1013282   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1013283   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1013284   +                  GRP_MntWines6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 1;
1013285   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013286   +               end;
MPRINT(EM_DIAGRAM):   end;
1013287   +            end;
MPRINT(EM_DIAGRAM):   end;
1013288   +         end;
MPRINT(EM_DIAGRAM):   end;
1013289   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013290   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1013291   +               GRP_MntWines7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 1;
1013292   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013293   +            end;
MPRINT(EM_DIAGRAM):   end;
1013294   +         end;
MPRINT(EM_DIAGRAM):   end;
1013295   +      end;
MPRINT(EM_DIAGRAM):   end;
1013296   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1013297   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1013298   +            GRP_MntWines8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 1;
1013299   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013300   +         end;
MPRINT(EM_DIAGRAM):   end;
1013301   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013302   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1013303   +               GRP_MntWines9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 1;
1013304   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013305   +            end;
MPRINT(EM_DIAGRAM):   end;
1013306   +         end;
MPRINT(EM_DIAGRAM):   end;
1013307   +      end;
MPRINT(EM_DIAGRAM):   end;
1013308   +   end;
MPRINT(EM_DIAGRAM):   end;
1013309   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1013310   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1013311   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1013312   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1013313   +      GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
1013314   +      GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
1013315   +      GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
1013316   +      GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
1013317   +      GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
1013318   +      GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
1013319   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1013320   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1013321   +   end;
MPRINT(EM_DIAGRAM):   end;
1013322   +end;
MPRINT(EM_DIAGRAM):   end;
1013323   +
1013324   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1013325   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
1013326   +        GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6
1013327   +        GRP_NumCatalogPurchases7 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6 GRP_NumCatalogPurchases7 ;
1013328   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1013329   +GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1013330   +GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1013331   +GRP_NumCatalogPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 0;
1013332   +GRP_NumCatalogPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 0;
1013333   +GRP_NumCatalogPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 0;
1013334   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1013335   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1013336   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1013337   +   GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
1013338   +   GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
1013339   +   GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
1013340   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1013341   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1013342   +end;
MPRINT(EM_DIAGRAM):   end;
1013343   +else do;
MPRINT(EM_DIAGRAM):   else do;
1013344   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1013345   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1013346   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1013347   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1013348   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1013349   +      if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1013350   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1013351   +            GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1013352   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013353   +         end;
MPRINT(EM_DIAGRAM):   end;
1013354   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013355   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1013356   +               GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1013357   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013358   +            end;
MPRINT(EM_DIAGRAM):   end;
1013359   +         end;
MPRINT(EM_DIAGRAM):   end;
1013360   +      end;
MPRINT(EM_DIAGRAM):   end;
1013361   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1013362   +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1013363   +            GRP_NumCatalogPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 1;
1013364   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013365   +         end;
MPRINT(EM_DIAGRAM):   end;
1013366   +      end;
MPRINT(EM_DIAGRAM):   end;
1013367   +   end;
MPRINT(EM_DIAGRAM):   end;
1013368   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1013369   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1013370   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1013371   +            GRP_NumCatalogPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 1;
1013372   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013373   +         end;
MPRINT(EM_DIAGRAM):   end;
1013374   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013375   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1013376   +               GRP_NumCatalogPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 1;
1013377   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013378   +            end;
MPRINT(EM_DIAGRAM):   end;
1013379   +         end;
MPRINT(EM_DIAGRAM):   end;
1013380   +      end;
MPRINT(EM_DIAGRAM):   end;
1013381   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1013382   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1013383   +            GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1013384   +            GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1013385   +            GRP_NumCatalogPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = -1;
1013386   +            GRP_NumCatalogPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = -1;
1013387   +            GRP_NumCatalogPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = -1;
1013388   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013389   +         end;
MPRINT(EM_DIAGRAM):   end;
1013390   +      end;
MPRINT(EM_DIAGRAM):   end;
1013391   +   end;
MPRINT(EM_DIAGRAM):   end;
1013392   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1013393   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1013394   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1013395   +      GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
1013396   +      GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
1013397   +      GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
1013398   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1013399   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1013400   +   end;
MPRINT(EM_DIAGRAM):   end;
1013401   +end;
MPRINT(EM_DIAGRAM):   end;
1013402   +
1013403   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1013404   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
1013405   +        GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7
1013406   +        GRP_NumDistPurchases8 GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7 GRP_NumDistPurchases8
GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
1013407   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1013408   +GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1013409   +GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1013410   +GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1013411   +GRP_NumDistPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 0;
1013412   +GRP_NumDistPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 0;
1013413   +GRP_NumDistPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 0;
1013414   +GRP_NumDistPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 0;
1013415   +GRP_NumDistPurchases9 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 0;
1013416   +GRP_NumDistPurchases10 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 0;
1013417   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1013418   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1013419   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1013420   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1013421   +   GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
1013422   +   GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
1013423   +   GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
1013424   +   GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
1013425   +   GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
1013426   +   GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
1013427   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1013428   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1013429   +end;
MPRINT(EM_DIAGRAM):   end;
1013430   +else do;
MPRINT(EM_DIAGRAM):   else do;
1013431   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1013432   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1013433   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1013434   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1013435   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1013436   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1013437   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1013438   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1013439   +               GRP_NumDistPurchases10 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 1;
1013440   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013441   +            end;
MPRINT(EM_DIAGRAM):   end;
1013442   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1013443   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1013444   +                  GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1013445   +                  GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1013446   +                  GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1013447   +                  GRP_NumDistPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = -1;
1013448   +                  GRP_NumDistPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = -1;
1013449   +                  GRP_NumDistPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = -1;
1013450   +                  GRP_NumDistPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = -1;
1013451   +                  GRP_NumDistPurchases9 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = -1;
1013452   +                  GRP_NumDistPurchases10 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = -1;
1013453   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013454   +               end;
MPRINT(EM_DIAGRAM):   end;
1013455   +            end;
MPRINT(EM_DIAGRAM):   end;
1013456   +         end;
MPRINT(EM_DIAGRAM):   end;
1013457   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013458   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1013459   +               GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1013460   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013461   +            end;
MPRINT(EM_DIAGRAM):   end;
1013462   +         end;
MPRINT(EM_DIAGRAM):   end;
1013463   +      end;
MPRINT(EM_DIAGRAM):   end;
1013464   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1013465   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1013466   +            GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1013467   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013468   +         end;
MPRINT(EM_DIAGRAM):   end;
1013469   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013470   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1013471   +               GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1013472   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013473   +            end;
MPRINT(EM_DIAGRAM):   end;
1013474   +         end;
MPRINT(EM_DIAGRAM):   end;
1013475   +      end;
MPRINT(EM_DIAGRAM):   end;
1013476   +   end;
MPRINT(EM_DIAGRAM):   end;
1013477   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1013478   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1013479   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1013480   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1013481   +               GRP_NumDistPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 1;
1013482   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013483   +            end;
MPRINT(EM_DIAGRAM):   end;
1013484   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1013485   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1013486   +                  GRP_NumDistPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 1;
1013487   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013488   +               end;
MPRINT(EM_DIAGRAM):   end;
1013489   +            end;
MPRINT(EM_DIAGRAM):   end;
1013490   +         end;
MPRINT(EM_DIAGRAM):   end;
1013491   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013492   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1013493   +               GRP_NumDistPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 1;
1013494   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013495   +            end;
MPRINT(EM_DIAGRAM):   end;
1013496   +         end;
MPRINT(EM_DIAGRAM):   end;
1013497   +      end;
MPRINT(EM_DIAGRAM):   end;
1013498   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1013499   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1013500   +            GRP_NumDistPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 1;
1013501   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013502   +         end;
MPRINT(EM_DIAGRAM):   end;
1013503   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013504   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1013505   +               GRP_NumDistPurchases9 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 1;
1013506   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013507   +            end;
MPRINT(EM_DIAGRAM):   end;
1013508   +         end;
MPRINT(EM_DIAGRAM):   end;
1013509   +      end;
MPRINT(EM_DIAGRAM):   end;
1013510   +   end;
MPRINT(EM_DIAGRAM):   end;
1013511   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1013512   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1013513   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1013514   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1013515   +      GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
1013516   +      GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
1013517   +      GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
1013518   +      GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
1013519   +      GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
1013520   +      GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
1013521   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1013522   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1013523   +   end;
MPRINT(EM_DIAGRAM):   end;
1013524   +end;
MPRINT(EM_DIAGRAM):   end;
1013525   +
1013526   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1013527   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
1013528   +        GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7
1013529   +        GRP_NumWebPurchases8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7 GRP_NumWebPurchases8 ;
1013530   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1013531   +GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1013532   +GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1013533   +GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1013534   +GRP_NumWebPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 0;
1013535   +GRP_NumWebPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 0;
1013536   +GRP_NumWebPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 0;
1013537   +GRP_NumWebPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 0;
1013538   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1013539   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1013540   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1013541   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1013542   +   GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
1013543   +   GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
1013544   +   GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
1013545   +   GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
1013546   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1013547   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1013548   +end;
MPRINT(EM_DIAGRAM):   end;
1013549   +else do;
MPRINT(EM_DIAGRAM):   else do;
1013550   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1013551   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1013552   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1013553   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1013554   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1013555   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1013556   +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1013557   +            GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1013558   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013559   +         end;
MPRINT(EM_DIAGRAM):   end;
1013560   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013561   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1013562   +               GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1013563   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013564   +            end;
MPRINT(EM_DIAGRAM):   end;
1013565   +         end;
MPRINT(EM_DIAGRAM):   end;
1013566   +      end;
MPRINT(EM_DIAGRAM):   end;
1013567   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1013568   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1013569   +            GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1013570   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013571   +         end;
MPRINT(EM_DIAGRAM):   end;
1013572   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013573   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1013574   +               GRP_NumWebPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 1;
1013575   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013576   +            end;
MPRINT(EM_DIAGRAM):   end;
1013577   +         end;
MPRINT(EM_DIAGRAM):   end;
1013578   +      end;
MPRINT(EM_DIAGRAM):   end;
1013579   +   end;
MPRINT(EM_DIAGRAM):   end;
1013580   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1013581   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1013582   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1013583   +            GRP_NumWebPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 1;
1013584   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013585   +         end;
MPRINT(EM_DIAGRAM):   end;
1013586   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013587   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1013588   +               GRP_NumWebPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 1;
1013589   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013590   +            end;
MPRINT(EM_DIAGRAM):   end;
1013591   +         end;
MPRINT(EM_DIAGRAM):   end;
1013592   +      end;
MPRINT(EM_DIAGRAM):   end;
1013593   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1013594   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1013595   +            GRP_NumWebPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 1;
1013596   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013597   +         end;
MPRINT(EM_DIAGRAM):   end;
1013598   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013599   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1013600   +               GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1013601   +               GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1013602   +               GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1013603   +               GRP_NumWebPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = -1;
1013604   +               GRP_NumWebPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = -1;
1013605   +               GRP_NumWebPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = -1;
1013606   +               GRP_NumWebPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = -1;
1013607   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013608   +            end;
MPRINT(EM_DIAGRAM):   end;
1013609   +         end;
MPRINT(EM_DIAGRAM):   end;
1013610   +      end;
MPRINT(EM_DIAGRAM):   end;
1013611   +   end;
MPRINT(EM_DIAGRAM):   end;
1013612   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1013613   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1013614   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1013615   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1013616   +      GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
1013617   +      GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
1013618   +      GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
1013619   +      GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
1013620   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1013621   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1013622   +   end;
MPRINT(EM_DIAGRAM):   end;
1013623   +end;
MPRINT(EM_DIAGRAM):   end;
1013624   +
1013625   +*** Generate dummy variables for GRP_NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebVisitsMonth ;
1013626   +drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3 GRP_NumWebVisitsMonth4
1013627   +        GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
1013628   +        GRP_NumWebVisitsMonth8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3
GRP_NumWebVisitsMonth4 GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
GRP_NumWebVisitsMonth8 ;
1013629   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1013630   +GRP_NumWebVisitsMonth2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 0;
1013631   +GRP_NumWebVisitsMonth3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 0;
1013632   +GRP_NumWebVisitsMonth4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 0;
1013633   +GRP_NumWebVisitsMonth5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 0;
1013634   +GRP_NumWebVisitsMonth6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 0;
1013635   +GRP_NumWebVisitsMonth7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 0;
1013636   +GRP_NumWebVisitsMonth8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 0;
1013637   +if missing( GRP_NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebVisitsMonth ) then do;
1013638   +   GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
1013639   +   GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
1013640   +   GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
1013641   +   GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
1013642   +   GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
1013643   +   GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
1013644   +   GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
1013645   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1013646   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1013647   +end;
MPRINT(EM_DIAGRAM):   end;
1013648   +else do;
MPRINT(EM_DIAGRAM):   else do;
1013649   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1013650   +   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
1013651   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1013652   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1013653   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1013654   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1013655   +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1013656   +            GRP_NumWebVisitsMonth2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 1;
1013657   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013658   +         end;
MPRINT(EM_DIAGRAM):   end;
1013659   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013660   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1013661   +               GRP_NumWebVisitsMonth3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 1;
1013662   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013663   +            end;
MPRINT(EM_DIAGRAM):   end;
1013664   +         end;
MPRINT(EM_DIAGRAM):   end;
1013665   +      end;
MPRINT(EM_DIAGRAM):   end;
1013666   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1013667   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1013668   +            GRP_NumWebVisitsMonth4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 1;
1013669   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013670   +         end;
MPRINT(EM_DIAGRAM):   end;
1013671   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013672   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1013673   +               GRP_NumWebVisitsMonth5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 1;
1013674   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013675   +            end;
MPRINT(EM_DIAGRAM):   end;
1013676   +         end;
MPRINT(EM_DIAGRAM):   end;
1013677   +      end;
MPRINT(EM_DIAGRAM):   end;
1013678   +   end;
MPRINT(EM_DIAGRAM):   end;
1013679   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1013680   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1013681   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1013682   +            GRP_NumWebVisitsMonth6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 1;
1013683   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013684   +         end;
MPRINT(EM_DIAGRAM):   end;
1013685   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013686   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1013687   +               GRP_NumWebVisitsMonth7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 1;
1013688   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013689   +            end;
MPRINT(EM_DIAGRAM):   end;
1013690   +         end;
MPRINT(EM_DIAGRAM):   end;
1013691   +      end;
MPRINT(EM_DIAGRAM):   end;
1013692   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1013693   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1013694   +            GRP_NumWebVisitsMonth8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 1;
1013695   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013696   +         end;
MPRINT(EM_DIAGRAM):   end;
1013697   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013698   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1013699   +               GRP_NumWebVisitsMonth2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = -1;
1013700   +               GRP_NumWebVisitsMonth3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = -1;
1013701   +               GRP_NumWebVisitsMonth4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = -1;
1013702   +               GRP_NumWebVisitsMonth5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = -1;
1013703   +               GRP_NumWebVisitsMonth6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = -1;
1013704   +               GRP_NumWebVisitsMonth7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = -1;
1013705   +               GRP_NumWebVisitsMonth8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = -1;
1013706   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013707   +            end;
MPRINT(EM_DIAGRAM):   end;
1013708   +         end;
MPRINT(EM_DIAGRAM):   end;
1013709   +      end;
MPRINT(EM_DIAGRAM):   end;
1013710   +   end;
MPRINT(EM_DIAGRAM):   end;
1013711   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1013712   +      GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
1013713   +      GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
1013714   +      GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
1013715   +      GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
1013716   +      GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
1013717   +      GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
1013718   +      GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
1013719   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1013720   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1013721   +   end;
MPRINT(EM_DIAGRAM):   end;
1013722   +end;
MPRINT(EM_DIAGRAM):   end;
1013723   +
1013724   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1013725   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
1013726   +        GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
1013727   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1013728   +GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1013729   +GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1013730   +GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1013731   +GRP_RFMstat5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 0;
1013732   +GRP_RFMstat6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 0;
1013733   +GRP_RFMstat7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 0;
1013734   +GRP_RFMstat8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 0;
1013735   +GRP_RFMstat9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 0;
1013736   +GRP_RFMstat10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 0;
1013737   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1013738   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1013739   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1013740   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1013741   +   GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
1013742   +   GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
1013743   +   GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
1013744   +   GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
1013745   +   GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
1013746   +   GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
1013747   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1013748   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1013749   +end;
MPRINT(EM_DIAGRAM):   end;
1013750   +else do;
MPRINT(EM_DIAGRAM):   else do;
1013751   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1013752   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1013753   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1013754   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1013755   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1013756   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1013757   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1013758   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1013759   +               GRP_RFMstat10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 1;
1013760   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013761   +            end;
MPRINT(EM_DIAGRAM):   end;
1013762   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1013763   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1013764   +                  GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1013765   +                  GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1013766   +                  GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1013767   +                  GRP_RFMstat5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = -1;
1013768   +                  GRP_RFMstat6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = -1;
1013769   +                  GRP_RFMstat7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = -1;
1013770   +                  GRP_RFMstat8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = -1;
1013771   +                  GRP_RFMstat9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = -1;
1013772   +                  GRP_RFMstat10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = -1;
1013773   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013774   +               end;
MPRINT(EM_DIAGRAM):   end;
1013775   +            end;
MPRINT(EM_DIAGRAM):   end;
1013776   +         end;
MPRINT(EM_DIAGRAM):   end;
1013777   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013778   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1013779   +               GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1013780   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013781   +            end;
MPRINT(EM_DIAGRAM):   end;
1013782   +         end;
MPRINT(EM_DIAGRAM):   end;
1013783   +      end;
MPRINT(EM_DIAGRAM):   end;
1013784   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1013785   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1013786   +            GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1013787   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013788   +         end;
MPRINT(EM_DIAGRAM):   end;
1013789   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013790   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1013791   +               GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1013792   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013793   +            end;
MPRINT(EM_DIAGRAM):   end;
1013794   +         end;
MPRINT(EM_DIAGRAM):   end;
1013795   +      end;
MPRINT(EM_DIAGRAM):   end;
1013796   +   end;
MPRINT(EM_DIAGRAM):   end;
1013797   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1013798   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1013799   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1013800   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1013801   +               GRP_RFMstat5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 1;
1013802   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013803   +            end;
MPRINT(EM_DIAGRAM):   end;
1013804   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1013805   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1013806   +                  GRP_RFMstat6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 1;
1013807   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013808   +               end;
MPRINT(EM_DIAGRAM):   end;
1013809   +            end;
MPRINT(EM_DIAGRAM):   end;
1013810   +         end;
MPRINT(EM_DIAGRAM):   end;
1013811   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013812   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1013813   +               GRP_RFMstat7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 1;
1013814   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013815   +            end;
MPRINT(EM_DIAGRAM):   end;
1013816   +         end;
MPRINT(EM_DIAGRAM):   end;
1013817   +      end;
MPRINT(EM_DIAGRAM):   end;
1013818   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1013819   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1013820   +            GRP_RFMstat8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 1;
1013821   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013822   +         end;
MPRINT(EM_DIAGRAM):   end;
1013823   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013824   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1013825   +               GRP_RFMstat9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 1;
1013826   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013827   +            end;
MPRINT(EM_DIAGRAM):   end;
1013828   +         end;
MPRINT(EM_DIAGRAM):   end;
1013829   +      end;
MPRINT(EM_DIAGRAM):   end;
1013830   +   end;
MPRINT(EM_DIAGRAM):   end;
1013831   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1013832   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1013833   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1013834   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1013835   +      GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
1013836   +      GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
1013837   +      GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
1013838   +      GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
1013839   +      GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
1013840   +      GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
1013841   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1013842   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1013843   +   end;
MPRINT(EM_DIAGRAM):   end;
1013844   +end;
MPRINT(EM_DIAGRAM):   end;
1013845   +
1013846   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1013847   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
1013848   +        GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
1013849   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1013850   +GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1013851   +GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1013852   +GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1013853   +GRP_RMntFrq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 0;
1013854   +GRP_RMntFrq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 0;
1013855   +GRP_RMntFrq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 0;
1013856   +GRP_RMntFrq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 0;
1013857   +GRP_RMntFrq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 0;
1013858   +GRP_RMntFrq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 0;
1013859   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1013860   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1013861   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1013862   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1013863   +   GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
1013864   +   GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
1013865   +   GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
1013866   +   GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
1013867   +   GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
1013868   +   GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
1013869   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1013870   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1013871   +end;
MPRINT(EM_DIAGRAM):   end;
1013872   +else do;
MPRINT(EM_DIAGRAM):   else do;
1013873   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1013874   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1013875   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1013876   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1013877   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1013878   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1013879   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1013880   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1013881   +               GRP_RMntFrq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 1;
1013882   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013883   +            end;
MPRINT(EM_DIAGRAM):   end;
1013884   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1013885   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1013886   +                  GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1013887   +                  GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1013888   +                  GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1013889   +                  GRP_RMntFrq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = -1;
1013890   +                  GRP_RMntFrq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = -1;
1013891   +                  GRP_RMntFrq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = -1;
1013892   +                  GRP_RMntFrq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = -1;
1013893   +                  GRP_RMntFrq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = -1;
1013894   +                  GRP_RMntFrq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = -1;
1013895   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013896   +               end;
MPRINT(EM_DIAGRAM):   end;
1013897   +            end;
MPRINT(EM_DIAGRAM):   end;
1013898   +         end;
MPRINT(EM_DIAGRAM):   end;
1013899   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013900   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1013901   +               GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1013902   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013903   +            end;
MPRINT(EM_DIAGRAM):   end;
1013904   +         end;
MPRINT(EM_DIAGRAM):   end;
1013905   +      end;
MPRINT(EM_DIAGRAM):   end;
1013906   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1013907   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1013908   +            GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1013909   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013910   +         end;
MPRINT(EM_DIAGRAM):   end;
1013911   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013912   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1013913   +               GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1013914   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013915   +            end;
MPRINT(EM_DIAGRAM):   end;
1013916   +         end;
MPRINT(EM_DIAGRAM):   end;
1013917   +      end;
MPRINT(EM_DIAGRAM):   end;
1013918   +   end;
MPRINT(EM_DIAGRAM):   end;
1013919   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1013920   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1013921   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1013922   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1013923   +               GRP_RMntFrq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 1;
1013924   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013925   +            end;
MPRINT(EM_DIAGRAM):   end;
1013926   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1013927   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1013928   +                  GRP_RMntFrq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 1;
1013929   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013930   +               end;
MPRINT(EM_DIAGRAM):   end;
1013931   +            end;
MPRINT(EM_DIAGRAM):   end;
1013932   +         end;
MPRINT(EM_DIAGRAM):   end;
1013933   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013934   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1013935   +               GRP_RMntFrq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 1;
1013936   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013937   +            end;
MPRINT(EM_DIAGRAM):   end;
1013938   +         end;
MPRINT(EM_DIAGRAM):   end;
1013939   +      end;
MPRINT(EM_DIAGRAM):   end;
1013940   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1013941   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1013942   +            GRP_RMntFrq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 1;
1013943   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013944   +         end;
MPRINT(EM_DIAGRAM):   end;
1013945   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1013946   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1013947   +               GRP_RMntFrq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 1;
1013948   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1013949   +            end;
MPRINT(EM_DIAGRAM):   end;
1013950   +         end;
MPRINT(EM_DIAGRAM):   end;
1013951   +      end;
MPRINT(EM_DIAGRAM):   end;
1013952   +   end;
MPRINT(EM_DIAGRAM):   end;
1013953   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1013954   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1013955   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1013956   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1013957   +      GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
1013958   +      GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
1013959   +      GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
1013960   +      GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
1013961   +      GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
1013962   +      GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
1013963   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1013964   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1013965   +   end;
MPRINT(EM_DIAGRAM):   end;
1013966   +end;
MPRINT(EM_DIAGRAM):   end;
1013967   +
1013968   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1013969   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
1013970   +        GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
1013971   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1013972   +GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1013973   +GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1013974   +GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1013975   +GRP_Recency5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 0;
1013976   +GRP_Recency6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 0;
1013977   +GRP_Recency7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 0;
1013978   +GRP_Recency8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 0;
1013979   +GRP_Recency9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 0;
1013980   +GRP_Recency10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 0;
1013981   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1013982   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1013983   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1013984   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1013985   +   GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
1013986   +   GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
1013987   +   GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
1013988   +   GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
1013989   +   GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
1013990   +   GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
1013991   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1013992   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1013993   +end;
MPRINT(EM_DIAGRAM):   end;
1013994   +else do;
MPRINT(EM_DIAGRAM):   else do;
1013995   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1013996   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1013997   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1013998   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1013999   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1014000   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1014001   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1014002   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1014003   +               GRP_Recency10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 1;
1014004   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1014005   +            end;
MPRINT(EM_DIAGRAM):   end;
1014006   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1014007   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1014008   +                  GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1014009   +                  GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1014010   +                  GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1014011   +                  GRP_Recency5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = -1;
1014012   +                  GRP_Recency6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = -1;
1014013   +                  GRP_Recency7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = -1;
1014014   +                  GRP_Recency8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = -1;
1014015   +                  GRP_Recency9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = -1;
1014016   +                  GRP_Recency10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = -1;
1014017   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1014018   +               end;
MPRINT(EM_DIAGRAM):   end;
1014019   +            end;
MPRINT(EM_DIAGRAM):   end;
1014020   +         end;
MPRINT(EM_DIAGRAM):   end;
1014021   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1014022   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1014023   +               GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1014024   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1014025   +            end;
MPRINT(EM_DIAGRAM):   end;
1014026   +         end;
MPRINT(EM_DIAGRAM):   end;
1014027   +      end;
MPRINT(EM_DIAGRAM):   end;
1014028   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1014029   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1014030   +            GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1014031   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1014032   +         end;
MPRINT(EM_DIAGRAM):   end;
1014033   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1014034   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1014035   +               GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1014036   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1014037   +            end;
MPRINT(EM_DIAGRAM):   end;
1014038   +         end;
MPRINT(EM_DIAGRAM):   end;
1014039   +      end;
MPRINT(EM_DIAGRAM):   end;
1014040   +   end;
MPRINT(EM_DIAGRAM):   end;
1014041   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1014042   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1014043   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1014044   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1014045   +               GRP_Recency5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 1;
1014046   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1014047   +            end;
MPRINT(EM_DIAGRAM):   end;
1014048   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1014049   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1014050   +                  GRP_Recency6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 1;
1014051   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1014052   +               end;
MPRINT(EM_DIAGRAM):   end;
1014053   +            end;
MPRINT(EM_DIAGRAM):   end;
1014054   +         end;
MPRINT(EM_DIAGRAM):   end;
1014055   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1014056   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1014057   +               GRP_Recency7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 1;
1014058   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1014059   +            end;
MPRINT(EM_DIAGRAM):   end;
1014060   +         end;
MPRINT(EM_DIAGRAM):   end;
1014061   +      end;
MPRINT(EM_DIAGRAM):   end;
1014062   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1014063   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1014064   +            GRP_Recency8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 1;
1014065   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1014066   +         end;
MPRINT(EM_DIAGRAM):   end;
1014067   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1014068   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1014069   +               GRP_Recency9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 1;
1014070   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1014071   +            end;
MPRINT(EM_DIAGRAM):   end;
1014072   +         end;
MPRINT(EM_DIAGRAM):   end;
1014073   +      end;
MPRINT(EM_DIAGRAM):   end;
1014074   +   end;
MPRINT(EM_DIAGRAM):   end;
1014075   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1014076   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1014077   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1014078   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1014079   +      GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
1014080   +      GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
1014081   +      GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
1014082   +      GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
1014083   +      GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
1014084   +      GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
1014085   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1014086   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1014087   +   end;
MPRINT(EM_DIAGRAM):   end;
1014088   +end;
MPRINT(EM_DIAGRAM):   end;
1014089   +
1014090   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1014091   +*** Checking missing input Interval
1014092   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1014093   +
1014094   +IF NMISS(
1014095   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1014096   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1014097   +
1014098   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1014099   +END;
MPRINT(EM_DIAGRAM):   END;
1014100   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1014101   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1014102   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1014103   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1014104   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1014105   +END;
MPRINT(EM_DIAGRAM):   END;
1014106   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1014107   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1014108   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1014109   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1014110   +END;
MPRINT(EM_DIAGRAM):   END;
1014111   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1014112   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1014113   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1014114   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1014115   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1014116   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1014117   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1014118   +   H11  =    -0.04164287978559 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = -0.04164287978559 * S_Year_Birth ;
1014119   +   H12  =    -0.02490264183444 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = -0.02490264183444 * S_Year_Birth ;
1014120   +   H13  =     0.04507798460994 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.04507798460994 * S_Year_Birth ;
1014121   +   H14  =      0.1183690193773 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.1183690193773 * S_Year_Birth ;
1014122   +   H15  =    -0.21394698598762 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = -0.21394698598762 * S_Year_Birth ;
1014123   +   H16  =     0.03665586831897 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = 0.03665586831897 * S_Year_Birth ;
1014124   +   H11  = H11  +    -0.41114343375393 * GRP_AcceptedCmp52
1014125   +          +    -0.14428053886192 * GRP_AcceptedCmpTotal3
1014126   +          +     0.02494899822458 * GRP_Frq2  +      0.0755437728787 * GRP_Frq3
1014127   +          +    -0.11590634033502 * GRP_Frq4  +     0.00798603100667 * GRP_Frq5
1014128   +          +    -0.15439129854138 * GRP_Frq6  +     0.03772268032836 * GRP_Frq7
1014129   +          +    -0.01518216152977 * GRP_Frq8  +    -0.00058235066611 * GRP_Frq9
1014130   +          +    -0.03373106828213 * GRP_Frq10  +     0.08259003699244 *
1014131   +        GRP_Income2  +     0.05322186464327 * GRP_Income3
1014132   +          +     0.02970652269421 * GRP_Income4  +    -0.03522946367528 *
1014133   +        GRP_Income5  +     0.01621699696165 * GRP_Income6
1014134   +          +    -0.07093297239275 * GRP_Income7  +     -0.0122745789347 *
1014135   +        GRP_Income8  +     0.20668262349288 * GRP_Income9
1014136   +          +     0.17321621879494 * GRP_Income10  +     0.04203078613277 *
1014137   +        GRP_Mnt2  +     0.03302522237746 * GRP_Mnt3  +    -0.06604968615825 *
1014138   +        GRP_Mnt4  +     -0.0338011225884 * GRP_Mnt5  +    -0.06018351711892 *
1014139   +        GRP_Mnt6  +     0.05369737169858 * GRP_Mnt7  +     0.15193171494077 *
1014140   +        GRP_Mnt8  +    -0.01001992932469 * GRP_Mnt9  +     0.15132478263306 *
1014141   +        GRP_Mnt10  +      0.0834891458205 * GRP_MntFishProducts3
1014142   +          +    -0.01195735120186 * GRP_MntFishProducts4
1014143   +          +    -0.06708453587041 * GRP_MntFishProducts5
1014144   +          +    -0.02680253338094 * GRP_MntFishProducts6
1014145   +          +     0.07892124193799 * GRP_MntFishProducts7
1014146   +          +     0.12808064695802 * GRP_MntFishProducts8
1014147   +          +     0.14943450902453 * GRP_MntFishProducts9
1014148   +          +    -0.03915291343309 * GRP_MntFishProducts10
1014149   +          +     0.12622003311103 * GRP_MntGoldProds2
1014150   +          +     0.04845903153601 * GRP_MntGoldProds3
1014151   +          +    -0.08370679196604 * GRP_MntGoldProds4
1014152   +          +    -0.05651145689444 * GRP_MntGoldProds5
1014153   +          +     0.08465653011715 * GRP_MntGoldProds6
1014154   +          +    -0.04548010470735 * GRP_MntGoldProds7
1014155   +          +    -0.29950770690943 * GRP_MntGoldProds8
1014156   +          +    -0.16078656397499 * GRP_MntGoldProds9
1014157   +          +    -0.12650170215916 * GRP_MntGoldProds10
1014158   +          +    -0.20582413521459 * GRP_MntMeatProducts2
1014159   +          +    -0.19301669866874 * GRP_MntMeatProducts3
1014160   +          +    -0.10052903349136 * GRP_MntMeatProducts4
1014161   +          +    -0.02673606650631 * GRP_MntMeatProducts5
1014162   +          +    -0.05608459630015 * GRP_MntMeatProducts6
1014163   +          +    -0.24453752978062 * GRP_MntMeatProducts7
1014164   +          +     0.02869831662267 * GRP_MntMeatProducts8
1014165   +          +     0.01206766737407 * GRP_MntMeatProducts9
1014166   +          +     0.22489561550264 * GRP_MntMeatProducts10
1014167   +          +    -0.02209567942784 * GRP_MntSweetProducts3
1014168   +          +     0.16105454590149 * GRP_MntSweetProducts4
1014169   +          +    -0.01229323162486 * GRP_MntSweetProducts5
1014170   +          +    -0.09424409723888 * GRP_MntSweetProducts6
1014171   +          +     0.12107663427317 * GRP_MntSweetProducts7
1014172   +          +     0.09962269280971 * GRP_MntSweetProducts8
1014173   +          +     0.05361406364518 * GRP_MntSweetProducts9
1014174   +          +    -0.00395783275124 * GRP_MntSweetProducts10
1014175   +          +     0.08949226622664 * GRP_MntWines2  +     0.04075126649658 *
1014176   +        GRP_MntWines3  +    -0.11091151930043 * GRP_MntWines4
1014177   +          +     0.01814630958287 * GRP_MntWines5  +     0.18880264577509 *
1014178   +        GRP_MntWines6  +     -0.0373067553175 * GRP_MntWines7
1014179   +          +    -0.00287969317399 * GRP_MntWines8  +     -0.3523382993572 *
1014180   +        GRP_MntWines9  +    -0.34266498513706 * GRP_MntWines10
1014181   +          +    -0.14803737137331 * GRP_NumCatalogPurchases3
1014182   +          +    -0.08265008862549 * GRP_NumCatalogPurchases4
1014183   +          +    -0.12511088178753 * GRP_NumCatalogPurchases5
1014184   +          +     0.00474968987534 * GRP_NumCatalogPurchases6
1014185   +          +     0.14609799849823 * GRP_NumCatalogPurchases7
1014186   +          +    -0.05389661542955 * GRP_NumDistPurchases2
1014187   +          +    -0.11738842840653 * GRP_NumDistPurchases3
1014188   +          +    -0.15421759544192 * GRP_NumDistPurchases4
1014189   +          +    -0.10089958443443 * GRP_NumDistPurchases5
1014190   +          +    -0.04876379400743 * GRP_NumDistPurchases6
1014191   +          +    -0.18872427849232 * GRP_NumDistPurchases7
1014192   +          +    -0.02839661025435 * GRP_NumDistPurchases8
1014193   +          +     0.09712629880452 * GRP_NumDistPurchases9
1014194   +          +     0.12000394616091 * GRP_NumDistPurchases10
1014195   +          +    -0.13603297525579 * GRP_NumWebPurchases2
1014196   +          +     0.10268732487313 * GRP_NumWebPurchases3
1014197   +          +    -0.01771398558841 * GRP_NumWebPurchases4
1014198   +          +     0.00479481463651 * GRP_NumWebPurchases5
1014199   +          +    -0.08807024568619 * GRP_NumWebPurchases6
1014200   +          +    -0.08333649974504 * GRP_NumWebPurchases7
1014201   +          +     0.28590568471848 * GRP_NumWebPurchases8
1014202   +          +    -0.06598504122009 * GRP_NumWebVisitsMonth2
1014203   +          +    -0.02372166000515 * GRP_NumWebVisitsMonth3
1014204   +          +     -0.1032796286982 * GRP_NumWebVisitsMonth4
1014205   +          +    -0.10680258273696 * GRP_NumWebVisitsMonth5
1014206   +          +      0.1065086124019 * GRP_NumWebVisitsMonth6
1014207   +          +     0.04050154033216 * GRP_NumWebVisitsMonth7
1014208   +          +     0.32964695288769 * GRP_NumWebVisitsMonth8
1014209   +          +     0.14827099846784 * GRP_RFMstat2  +    -0.07995093014675 *
1014210   +        GRP_RFMstat3  +    -0.01585578103823 * GRP_RFMstat4
1014211   +          +     0.08565308252298 * GRP_RFMstat5  +    -0.09304024805558 *
1014212   +        GRP_RFMstat6  +    -0.07290227780167 * GRP_RFMstat7
1014213   +          +    -0.07617585964696 * GRP_RFMstat8  +     -0.0587968344928 *
1014214   +        GRP_RFMstat9  +    -0.01551420153256 * GRP_RFMstat10
1014215   +          +     0.21226282821781 * GRP_RMntFrq2  +     0.04770705042442 *
1014216   +        GRP_RMntFrq3  +     0.22006470165495 * GRP_RMntFrq4
1014217   +          +     0.13763540637433 * GRP_RMntFrq5  +    -0.10972526934296 *
1014218   +        GRP_RMntFrq6  +     0.08304532044699 * GRP_RMntFrq7
1014219   +          +     0.15788377163489 * GRP_RMntFrq8  +      0.1460293835649 *
1014220   +        GRP_RMntFrq9  +     0.00491352943087 * GRP_RMntFrq10
1014221   +          +     0.17421887439111 * GRP_Recency2  +     0.20197432720718 *
1014222   +        GRP_Recency3  +    -0.01610485949606 * GRP_Recency4
1014223   +          +     0.07705394334947 * GRP_Recency5  +     0.03059327385395 *
1014224   +        GRP_Recency6  +    -0.13952963263034 * GRP_Recency7
1014225   +          +    -0.12436739033264 * GRP_Recency8  +     0.03881295285714 *
1014226   +        GRP_Recency9  +     -0.2017924917039 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41114343375393 * GRP_AcceptedCmp52 + -0.14428053886192 *
GRP_AcceptedCmpTotal3 + 0.02494899822458 * GRP_Frq2 + 0.0755437728787 * GRP_Frq3 +
-0.11590634033502 * GRP_Frq4 + 0.00798603100667 * GRP_Frq5 + -0.15439129854138 * GRP_Frq6 +
0.03772268032836 * GRP_Frq7 + -0.01518216152977 * GRP_Frq8 + -0.00058235066611 * GRP_Frq9 +
-0.03373106828213 * GRP_Frq10 + 0.08259003699244 * GRP_Income2 + 0.05322186464327 *
GRP_Income3 + 0.02970652269421 * GRP_Income4 + -0.03522946367528 * GRP_Income5 +
0.01621699696165 * GRP_Income6 + -0.07093297239275 * GRP_Income7 + -0.0122745789347 *
GRP_Income8 + 0.20668262349288 * GRP_Income9 + 0.17321621879494 * GRP_Income10 +
0.04203078613277 * GRP_Mnt2 + 0.03302522237746 * GRP_Mnt3 + -0.06604968615825 * GRP_Mnt4 +
-0.0338011225884 * GRP_Mnt5 + -0.06018351711892 * GRP_Mnt6 + 0.05369737169858 * GRP_Mnt7 +
0.15193171494077 * GRP_Mnt8 + -0.01001992932469 * GRP_Mnt9 + 0.15132478263306 * GRP_Mnt10 +
0.0834891458205 * GRP_MntFishProducts3 + -0.01195735120186 * GRP_MntFishProducts4 +
-0.06708453587041 * GRP_MntFishProducts5 + -0.02680253338094 * GRP_MntFishProducts6 +
0.07892124193799 * GRP_MntFishProducts7 + 0.12808064695802 * GRP_MntFishProducts8 +
0.14943450902453 * GRP_MntFishProducts9 + -0.03915291343309 * GRP_MntFishProducts10 +
0.12622003311103 * GRP_MntGoldProds2 + 0.04845903153601 * GRP_MntGoldProds3 +
-0.08370679196604 * GRP_MntGoldProds4 + -0.05651145689444 * GRP_MntGoldProds5 +
0.08465653011715 * GRP_MntGoldProds6 + -0.04548010470735 * GRP_MntGoldProds7 +
-0.29950770690943 * GRP_MntGoldProds8 + -0.16078656397499 * GRP_MntGoldProds9 +
-0.12650170215916 * GRP_MntGoldProds10 + -0.20582413521459 * GRP_MntMeatProducts2 +
-0.19301669866874 * GRP_MntMeatProducts3 + -0.10052903349136 * GRP_MntMeatProducts4 +
-0.02673606650631 * GRP_MntMeatProducts5 + -0.05608459630015 * GRP_MntMeatProducts6 +
-0.24453752978062 * GRP_MntMeatProducts7 + 0.02869831662267 * GRP_MntMeatProducts8 +
0.01206766737407 * GRP_MntMeatProducts9 + 0.22489561550264 * GRP_MntMeatProducts10 +
-0.02209567942784 * GRP_MntSweetProducts3 + 0.16105454590149 * GRP_MntSweetProducts4 +
-0.01229323162486 * GRP_MntSweetProducts5 + -0.09424409723888 * GRP_MntSweetProducts6 +
0.12107663427317 * GRP_MntSweetProducts7 + 0.09962269280971 * GRP_MntSweetProducts8 +
0.05361406364518 * GRP_MntSweetProducts9 + -0.00395783275124 * GRP_MntSweetProducts10 +
0.08949226622664 * GRP_MntWines2 + 0.04075126649658 * GRP_MntWines3 + -0.11091151930043 *
GRP_MntWines4 + 0.01814630958287 * GRP_MntWines5 + 0.18880264577509 * GRP_MntWines6 +
-0.0373067553175 * GRP_MntWines7 + -0.00287969317399 * GRP_MntWines8 + -0.3523382993572 *
GRP_MntWines9 + -0.34266498513706 * GRP_MntWines10 + -0.14803737137331 *
GRP_NumCatalogPurchases3 + -0.08265008862549 * GRP_NumCatalogPurchases4 + -0.12511088178753 *
GRP_NumCatalogPurchases5 + 0.00474968987534 * GRP_NumCatalogPurchases6 + 0.14609799849823 *
GRP_NumCatalogPurchases7 + -0.05389661542955 * GRP_NumDistPurchases2 + -0.11738842840653 *
GRP_NumDistPurchases3 + -0.15421759544192 * GRP_NumDistPurchases4 + -0.10089958443443 *
GRP_NumDistPurchases5 + -0.04876379400743 * GRP_NumDistPurchases6 + -0.18872427849232 *
GRP_NumDistPurchases7 + -0.02839661025435 * GRP_NumDistPurchases8 + 0.09712629880452 *
GRP_NumDistPurchases9 + 0.12000394616091 * GRP_NumDistPurchases10 + -0.13603297525579 *
GRP_NumWebPurchases2 + 0.10268732487313 * GRP_NumWebPurchases3 + -0.01771398558841 *
GRP_NumWebPurchases4 + 0.00479481463651 * GRP_NumWebPurchases5 + -0.08807024568619 *
GRP_NumWebPurchases6 + -0.08333649974504 * GRP_NumWebPurchases7 + 0.28590568471848 *
GRP_NumWebPurchases8 + -0.06598504122009 * GRP_NumWebVisitsMonth2 + -0.02372166000515 *
GRP_NumWebVisitsMonth3 + -0.1032796286982 * GRP_NumWebVisitsMonth4 + -0.10680258273696 *
GRP_NumWebVisitsMonth5 + 0.1065086124019 * GRP_NumWebVisitsMonth6 + 0.04050154033216 *
GRP_NumWebVisitsMonth7 + 0.32964695288769 * GRP_NumWebVisitsMonth8 + 0.14827099846784 *
GRP_RFMstat2 + -0.07995093014675 * GRP_RFMstat3 + -0.01585578103823 * GRP_RFMstat4 +
0.08565308252298 * GRP_RFMstat5 + -0.09304024805558 * GRP_RFMstat6 + -0.07290227780167 *
GRP_RFMstat7 + -0.07617585964696 * GRP_RFMstat8 + -0.0587968344928 * GRP_RFMstat9 +
-0.01551420153256 * GRP_RFMstat10 + 0.21226282821781 * GRP_RMntFrq2 + 0.04770705042442 *
GRP_RMntFrq3 + 0.22006470165495 * GRP_RMntFrq4 + 0.13763540637433 * GRP_RMntFrq5 +
-0.10972526934296 * GRP_RMntFrq6 + 0.08304532044699 * GRP_RMntFrq7 + 0.15788377163489 *
GRP_RMntFrq8 + 0.1460293835649 * GRP_RMntFrq9 + 0.00491352943087 * GRP_RMntFrq10 +
0.17421887439111 * GRP_Recency2 + 0.20197432720718 * GRP_Recency3 + -0.01610485949606 *
GRP_Recency4 + 0.07705394334947 * GRP_Recency5 + 0.03059327385395 * GRP_Recency6 +
-0.13952963263034 * GRP_Recency7 + -0.12436739033264 * GRP_Recency8 + 0.03881295285714 *
GRP_Recency9 + -0.2017924917039 * GRP_Recency10 ;
1014227   +   H12  = H12  +     -0.1274374305515 * GRP_AcceptedCmp52
1014228   +          +    -0.03296718660529 * GRP_AcceptedCmpTotal3
1014229   +          +    -0.00158749941279 * GRP_Frq2  +     0.13135632234122 * GRP_Frq3
1014230   +          +     0.11174599066781 * GRP_Frq4  +     0.08293204522419 * GRP_Frq5
1014231   +          +     0.07891839019015 * GRP_Frq6  +     0.10689447665509 * GRP_Frq7
1014232   +          +      -0.058875592211 * GRP_Frq8  +    -0.08506909936634 * GRP_Frq9
1014233   +          +    -0.03761019712811 * GRP_Frq10  +    -0.11942683577675 *
1014234   +        GRP_Income2  +    -0.08647698006174 * GRP_Income3
1014235   +          +     0.02000126969083 * GRP_Income4  +    -0.07666270612285 *
1014236   +        GRP_Income5  +    -0.17332133422853 * GRP_Income6
1014237   +          +    -0.28328894338184 * GRP_Income7  +    -0.17823712265233 *
1014238   +        GRP_Income8  +    -0.39080487229489 * GRP_Income9
1014239   +          +    -0.22583689896606 * GRP_Income10  +     0.14951111119544 *
1014240   +        GRP_Mnt2  +     0.12789103442776 * GRP_Mnt3  +     0.04989580545705 *
1014241   +        GRP_Mnt4  +    -0.02181320104822 * GRP_Mnt5  +     0.02850530148713 *
1014242   +        GRP_Mnt6  +    -0.19810993494342 * GRP_Mnt7  +    -0.12534704012491 *
1014243   +        GRP_Mnt8  +    -0.01655492905982 * GRP_Mnt9  +     -0.1506358789311 *
1014244   +        GRP_Mnt10  +    -0.07698731445217 * GRP_MntFishProducts3
1014245   +          +    -0.02453518527533 * GRP_MntFishProducts4
1014246   +          +     0.21154268764191 * GRP_MntFishProducts5
1014247   +          +     0.09340929157714 * GRP_MntFishProducts6
1014248   +          +     0.05339923043457 * GRP_MntFishProducts7
1014249   +          +    -0.04852527469447 * GRP_MntFishProducts8
1014250   +          +     0.02676605860166 * GRP_MntFishProducts9
1014251   +          +    -0.10646179978188 * GRP_MntFishProducts10
1014252   +          +    -0.03613972637561 * GRP_MntGoldProds2
1014253   +          +     0.05734455860002 * GRP_MntGoldProds3
1014254   +          +     0.09333847144138 * GRP_MntGoldProds4
1014255   +          +     0.00328029112662 * GRP_MntGoldProds5
1014256   +          +    -0.14936992509725 * GRP_MntGoldProds6
1014257   +          +     0.00353880682303 * GRP_MntGoldProds7
1014258   +          +    -0.10043815369757 * GRP_MntGoldProds8
1014259   +          +     0.11391765401656 * GRP_MntGoldProds9
1014260   +          +    -0.01948391001613 * GRP_MntGoldProds10
1014261   +          +    -0.29139546734074 * GRP_MntMeatProducts2
1014262   +          +     0.02864747519138 * GRP_MntMeatProducts3
1014263   +          +     0.04302048132569 * GRP_MntMeatProducts4
1014264   +          +     0.03633864388021 * GRP_MntMeatProducts5
1014265   +          +      0.1706364226499 * GRP_MntMeatProducts6
1014266   +          +     0.10460399820586 * GRP_MntMeatProducts7
1014267   +          +     0.10544722036212 * GRP_MntMeatProducts8
1014268   +          +     0.10484997890558 * GRP_MntMeatProducts9
1014269   +          +     0.22072992127969 * GRP_MntMeatProducts10
1014270   +          +    -0.04945151391792 * GRP_MntSweetProducts3
1014271   +          +     0.02524689663103 * GRP_MntSweetProducts4
1014272   +          +    -0.06481626270428 * GRP_MntSweetProducts5
1014273   +          +     0.07470460608072 * GRP_MntSweetProducts6
1014274   +          +    -0.12486393118739 * GRP_MntSweetProducts7
1014275   +          +     0.01724242943758 * GRP_MntSweetProducts8
1014276   +          +    -0.17151056991478 * GRP_MntSweetProducts9
1014277   +          +     0.04475028863027 * GRP_MntSweetProducts10
1014278   +          +     0.16414039774526 * GRP_MntWines2  +     0.19473803749356 *
1014279   +        GRP_MntWines3  +     0.03895895414479 * GRP_MntWines4
1014280   +          +     0.08699407109954 * GRP_MntWines5  +    -0.11234364218935 *
1014281   +        GRP_MntWines6  +    -0.07501363722112 * GRP_MntWines7
1014282   +          +    -0.15191945102549 * GRP_MntWines8  +    -0.06897180141209 *
1014283   +        GRP_MntWines9  +    -0.19206651149079 * GRP_MntWines10
1014284   +          +    -0.37441473994379 * GRP_NumCatalogPurchases3
1014285   +          +    -0.15997043005634 * GRP_NumCatalogPurchases4
1014286   +          +     0.10594548446512 * GRP_NumCatalogPurchases5
1014287   +          +     0.00263802970324 * GRP_NumCatalogPurchases6
1014288   +          +    -0.22377381496889 * GRP_NumCatalogPurchases7
1014289   +          +    -0.04745111038168 * GRP_NumDistPurchases2
1014290   +          +     0.10357137269812 * GRP_NumDistPurchases3
1014291   +          +     0.12960605230645 * GRP_NumDistPurchases4
1014292   +          +     0.07101910011623 * GRP_NumDistPurchases5
1014293   +          +    -0.12325886494443 * GRP_NumDistPurchases6
1014294   +          +     0.15246170069312 * GRP_NumDistPurchases7
1014295   +          +    -0.01297232508723 * GRP_NumDistPurchases8
1014296   +          +     0.05212728826428 * GRP_NumDistPurchases9
1014297   +          +     0.12928116467276 * GRP_NumDistPurchases10
1014298   +          +    -0.01478753974493 * GRP_NumWebPurchases2
1014299   +          +     0.10209235795139 * GRP_NumWebPurchases3
1014300   +          +    -0.04108375994117 * GRP_NumWebPurchases4
1014301   +          +     0.16688325926802 * GRP_NumWebPurchases5
1014302   +          +    -0.04770670560132 * GRP_NumWebPurchases6
1014303   +          +     0.10715024172101 * GRP_NumWebPurchases7
1014304   +          +    -0.03973051658463 * GRP_NumWebPurchases8
1014305   +          +     -0.0744383975263 * GRP_NumWebVisitsMonth2
1014306   +          +    -0.10259522429063 * GRP_NumWebVisitsMonth3
1014307   +          +    -0.15279517866677 * GRP_NumWebVisitsMonth4
1014308   +          +    -0.10205600897555 * GRP_NumWebVisitsMonth5
1014309   +          +     0.06264274082103 * GRP_NumWebVisitsMonth6
1014310   +          +    -0.03339146693683 * GRP_NumWebVisitsMonth7
1014311   +          +     0.22895413102223 * GRP_NumWebVisitsMonth8
1014312   +          +     0.14076263555727 * GRP_RFMstat2  +    -0.02707737973045 *
1014313   +        GRP_RFMstat3  +    -0.08657405680392 * GRP_RFMstat4
1014314   +          +    -0.10217777279752 * GRP_RFMstat5  +    -0.03537362399141 *
1014315   +        GRP_RFMstat6  +     0.17860873982293 * GRP_RFMstat7
1014316   +          +     0.01522782586228 * GRP_RFMstat8  +     0.21139338376926 *
1014317   +        GRP_RFMstat9  +     0.01471368638362 * GRP_RFMstat10
1014318   +          +     0.15567346376316 * GRP_RMntFrq2  +     0.01018946161049 *
1014319   +        GRP_RMntFrq3  +    -0.02038890066544 * GRP_RMntFrq4
1014320   +          +     0.13621640956781 * GRP_RMntFrq5  +    -0.08857989439102 *
1014321   +        GRP_RMntFrq6  +    -0.40748794135826 * GRP_RMntFrq7
1014322   +          +    -0.17056788457056 * GRP_RMntFrq8  +    -0.03167778272421 *
1014323   +        GRP_RMntFrq9  +    -0.01206824029221 * GRP_RMntFrq10
1014324   +          +     0.10278059961514 * GRP_Recency2  +      0.1092786681841 *
1014325   +        GRP_Recency3  +     0.23239315221248 * GRP_Recency4
1014326   +          +     0.09720642085712 * GRP_Recency5  +     0.05887576799353 *
1014327   +        GRP_Recency6  +     0.01188389185661 * GRP_Recency7
1014328   +          +     0.00397153322648 * GRP_Recency8  +     0.06461134827829 *
1014329   +        GRP_Recency9  +     -0.2652137223798 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1274374305515 * GRP_AcceptedCmp52 + -0.03296718660529 *
GRP_AcceptedCmpTotal3 + -0.00158749941279 * GRP_Frq2 + 0.13135632234122 * GRP_Frq3 +
0.11174599066781 * GRP_Frq4 + 0.08293204522419 * GRP_Frq5 + 0.07891839019015 * GRP_Frq6 +
0.10689447665509 * GRP_Frq7 + -0.058875592211 * GRP_Frq8 + -0.08506909936634 * GRP_Frq9 +
-0.03761019712811 * GRP_Frq10 + -0.11942683577675 * GRP_Income2 + -0.08647698006174 *
GRP_Income3 + 0.02000126969083 * GRP_Income4 + -0.07666270612285 * GRP_Income5 +
-0.17332133422853 * GRP_Income6 + -0.28328894338184 * GRP_Income7 + -0.17823712265233 *
GRP_Income8 + -0.39080487229489 * GRP_Income9 + -0.22583689896606 * GRP_Income10 +
0.14951111119544 * GRP_Mnt2 + 0.12789103442776 * GRP_Mnt3 + 0.04989580545705 * GRP_Mnt4 +
-0.02181320104822 * GRP_Mnt5 + 0.02850530148713 * GRP_Mnt6 + -0.19810993494342 * GRP_Mnt7 +
-0.12534704012491 * GRP_Mnt8 + -0.01655492905982 * GRP_Mnt9 + -0.1506358789311 * GRP_Mnt10 +
-0.07698731445217 * GRP_MntFishProducts3 + -0.02453518527533 * GRP_MntFishProducts4 +
0.21154268764191 * GRP_MntFishProducts5 + 0.09340929157714 * GRP_MntFishProducts6 +
0.05339923043457 * GRP_MntFishProducts7 + -0.04852527469447 * GRP_MntFishProducts8 +
0.02676605860166 * GRP_MntFishProducts9 + -0.10646179978188 * GRP_MntFishProducts10 +
-0.03613972637561 * GRP_MntGoldProds2 + 0.05734455860002 * GRP_MntGoldProds3 +
0.09333847144138 * GRP_MntGoldProds4 + 0.00328029112662 * GRP_MntGoldProds5 +
-0.14936992509725 * GRP_MntGoldProds6 + 0.00353880682303 * GRP_MntGoldProds7 +
-0.10043815369757 * GRP_MntGoldProds8 + 0.11391765401656 * GRP_MntGoldProds9 +
-0.01948391001613 * GRP_MntGoldProds10 + -0.29139546734074 * GRP_MntMeatProducts2 +
0.02864747519138 * GRP_MntMeatProducts3 + 0.04302048132569 * GRP_MntMeatProducts4 +
0.03633864388021 * GRP_MntMeatProducts5 + 0.1706364226499 * GRP_MntMeatProducts6 +
0.10460399820586 * GRP_MntMeatProducts7 + 0.10544722036212 * GRP_MntMeatProducts8 +
0.10484997890558 * GRP_MntMeatProducts9 + 0.22072992127969 * GRP_MntMeatProducts10 +
-0.04945151391792 * GRP_MntSweetProducts3 + 0.02524689663103 * GRP_MntSweetProducts4 +
-0.06481626270428 * GRP_MntSweetProducts5 + 0.07470460608072 * GRP_MntSweetProducts6 +
-0.12486393118739 * GRP_MntSweetProducts7 + 0.01724242943758 * GRP_MntSweetProducts8 +
-0.17151056991478 * GRP_MntSweetProducts9 + 0.04475028863027 * GRP_MntSweetProducts10 +
0.16414039774526 * GRP_MntWines2 + 0.19473803749356 * GRP_MntWines3 + 0.03895895414479 *
GRP_MntWines4 + 0.08699407109954 * GRP_MntWines5 + -0.11234364218935 * GRP_MntWines6 +
-0.07501363722112 * GRP_MntWines7 + -0.15191945102549 * GRP_MntWines8 + -0.06897180141209 *
GRP_MntWines9 + -0.19206651149079 * GRP_MntWines10 + -0.37441473994379 *
GRP_NumCatalogPurchases3 + -0.15997043005634 * GRP_NumCatalogPurchases4 + 0.10594548446512 *
GRP_NumCatalogPurchases5 + 0.00263802970324 * GRP_NumCatalogPurchases6 + -0.22377381496889 *
GRP_NumCatalogPurchases7 + -0.04745111038168 * GRP_NumDistPurchases2 + 0.10357137269812 *
GRP_NumDistPurchases3 + 0.12960605230645 * GRP_NumDistPurchases4 + 0.07101910011623 *
GRP_NumDistPurchases5 + -0.12325886494443 * GRP_NumDistPurchases6 + 0.15246170069312 *
GRP_NumDistPurchases7 + -0.01297232508723 * GRP_NumDistPurchases8 + 0.05212728826428 *
GRP_NumDistPurchases9 + 0.12928116467276 * GRP_NumDistPurchases10 + -0.01478753974493 *
GRP_NumWebPurchases2 + 0.10209235795139 * GRP_NumWebPurchases3 + -0.04108375994117 *
GRP_NumWebPurchases4 + 0.16688325926802 * GRP_NumWebPurchases5 + -0.04770670560132 *
GRP_NumWebPurchases6 + 0.10715024172101 * GRP_NumWebPurchases7 + -0.03973051658463 *
GRP_NumWebPurchases8 + -0.0744383975263 * GRP_NumWebVisitsMonth2 + -0.10259522429063 *
GRP_NumWebVisitsMonth3 + -0.15279517866677 * GRP_NumWebVisitsMonth4 + -0.10205600897555 *
GRP_NumWebVisitsMonth5 + 0.06264274082103 * GRP_NumWebVisitsMonth6 + -0.03339146693683 *
GRP_NumWebVisitsMonth7 + 0.22895413102223 * GRP_NumWebVisitsMonth8 + 0.14076263555727 *
GRP_RFMstat2 + -0.02707737973045 * GRP_RFMstat3 + -0.08657405680392 * GRP_RFMstat4 +
-0.10217777279752 * GRP_RFMstat5 + -0.03537362399141 * GRP_RFMstat6 + 0.17860873982293 *
GRP_RFMstat7 + 0.01522782586228 * GRP_RFMstat8 + 0.21139338376926 * GRP_RFMstat9 +
0.01471368638362 * GRP_RFMstat10 + 0.15567346376316 * GRP_RMntFrq2 + 0.01018946161049 *
GRP_RMntFrq3 + -0.02038890066544 * GRP_RMntFrq4 + 0.13621640956781 * GRP_RMntFrq5 +
-0.08857989439102 * GRP_RMntFrq6 + -0.40748794135826 * GRP_RMntFrq7 + -0.17056788457056 *
GRP_RMntFrq8 + -0.03167778272421 * GRP_RMntFrq9 + -0.01206824029221 * GRP_RMntFrq10 +
0.10278059961514 * GRP_Recency2 + 0.1092786681841 * GRP_Recency3 + 0.23239315221248 *
GRP_Recency4 + 0.09720642085712 * GRP_Recency5 + 0.05887576799353 * GRP_Recency6 +
0.01188389185661 * GRP_Recency7 + 0.00397153322648 * GRP_Recency8 + 0.06461134827829 *
GRP_Recency9 + -0.2652137223798 * GRP_Recency10 ;
1014330   +   H13  = H13  +     0.03764558557298 * GRP_AcceptedCmp52
1014331   +          +    -0.17896552838288 * GRP_AcceptedCmpTotal3
1014332   +          +    -0.05721038687206 * GRP_Frq2  +     0.14420365801953 * GRP_Frq3
1014333   +          +     0.13453368328851 * GRP_Frq4  +     0.07489184687255 * GRP_Frq5
1014334   +          +     0.02273664866469 * GRP_Frq6  +     0.06936531343811 * GRP_Frq7
1014335   +          +     0.14287908984383 * GRP_Frq8  +    -0.09562935941718 * GRP_Frq9
1014336   +          +    -0.06439332824922 * GRP_Frq10  +    -0.08726367328499 *
1014337   +        GRP_Income2  +     0.02816796558456 * GRP_Income3
1014338   +          +     -0.0207313464275 * GRP_Income4  +     0.13866821912401 *
1014339   +        GRP_Income5  +     0.15211814101672 * GRP_Income6
1014340   +          +     0.07620761723112 * GRP_Income7  +    -0.05925421936851 *
1014341   +        GRP_Income8  +     0.00989143831981 * GRP_Income9
1014342   +          +     0.16776717024284 * GRP_Income10  +     0.10023544927245 *
1014343   +        GRP_Mnt2  +     0.08000793837961 * GRP_Mnt3  +    -0.03767992174465 *
1014344   +        GRP_Mnt4  +     -0.0788228470774 * GRP_Mnt5  +    -0.07765017993323 *
1014345   +        GRP_Mnt6  +    -0.05965223355738 * GRP_Mnt7  +    -0.02483544420982 *
1014346   +        GRP_Mnt8  +    -0.02399968660167 * GRP_Mnt9  +     0.03648534066717 *
1014347   +        GRP_Mnt10  +     0.11104910276205 * GRP_MntFishProducts3
1014348   +          +     0.00799524987781 * GRP_MntFishProducts4
1014349   +          +    -0.06457653362516 * GRP_MntFishProducts5
1014350   +          +    -0.07071491433289 * GRP_MntFishProducts6
1014351   +          +     -0.0297812227606 * GRP_MntFishProducts7
1014352   +          +      0.1196891870928 * GRP_MntFishProducts8
1014353   +          +    -0.14027713851715 * GRP_MntFishProducts9
1014354   +          +    -0.00752775384465 * GRP_MntFishProducts10
1014355   +          +    -0.08850740451643 * GRP_MntGoldProds2
1014356   +          +     0.07481260304092 * GRP_MntGoldProds3
1014357   +          +     0.01197323904138 * GRP_MntGoldProds4
1014358   +          +     0.08785121348968 * GRP_MntGoldProds5
1014359   +          +     0.05751686056011 * GRP_MntGoldProds6
1014360   +          +     0.00465104917946 * GRP_MntGoldProds7
1014361   +          +     0.09887537416794 * GRP_MntGoldProds8
1014362   +          +    -0.00612835497608 * GRP_MntGoldProds9
1014363   +          +    -0.00827610171723 * GRP_MntGoldProds10
1014364   +          +    -0.50377721374944 * GRP_MntMeatProducts2
1014365   +          +    -0.37745990165748 * GRP_MntMeatProducts3
1014366   +          +    -0.29951878376561 * GRP_MntMeatProducts4
1014367   +          +    -0.18065562816733 * GRP_MntMeatProducts5
1014368   +          +     0.04961241511311 * GRP_MntMeatProducts6
1014369   +          +    -0.01243107921859 * GRP_MntMeatProducts7
1014370   +          +     0.17144282495789 * GRP_MntMeatProducts8
1014371   +          +     0.14947179247383 * GRP_MntMeatProducts9
1014372   +          +     0.29454336254711 * GRP_MntMeatProducts10
1014373   +          +      0.0325450976222 * GRP_MntSweetProducts3
1014374   +          +     0.00280241083152 * GRP_MntSweetProducts4
1014375   +          +     0.05505775727165 * GRP_MntSweetProducts5
1014376   +          +    -0.02141161662537 * GRP_MntSweetProducts6
1014377   +          +     0.14268872032365 * GRP_MntSweetProducts7
1014378   +          +    -0.07954317740737 * GRP_MntSweetProducts8
1014379   +          +    -0.00103134587271 * GRP_MntSweetProducts9
1014380   +          +    -0.03429967866088 * GRP_MntSweetProducts10
1014381   +          +     0.41436775660832 * GRP_MntWines2  +     0.29646703075161 *
1014382   +        GRP_MntWines3  +     0.33836407373023 * GRP_MntWines4
1014383   +          +     0.21039899243759 * GRP_MntWines5  +     0.07529018465171 *
1014384   +        GRP_MntWines6  +    -0.00050794764301 * GRP_MntWines7
1014385   +          +    -0.13139238091467 * GRP_MntWines8  +    -0.17565936222023 *
1014386   +        GRP_MntWines9  +     -0.3630236345865 * GRP_MntWines10
1014387   +          +    -0.63590927739857 * GRP_NumCatalogPurchases3
1014388   +          +    -0.22552370784051 * GRP_NumCatalogPurchases4
1014389   +          +     0.02273288758795 * GRP_NumCatalogPurchases5
1014390   +          +     0.23079203529225 * GRP_NumCatalogPurchases6
1014391   +          +     0.30725851913205 * GRP_NumCatalogPurchases7
1014392   +          +    -0.09867989528726 * GRP_NumDistPurchases2
1014393   +          +    -0.11241303549017 * GRP_NumDistPurchases3
1014394   +          +    -0.11528474272857 * GRP_NumDistPurchases4
1014395   +          +    -0.03357182591423 * GRP_NumDistPurchases5
1014396   +          +     0.08825455645935 * GRP_NumDistPurchases6
1014397   +          +     -0.0608759537195 * GRP_NumDistPurchases7
1014398   +          +    -0.14923146321169 * GRP_NumDistPurchases8
1014399   +          +     0.10973172379981 * GRP_NumDistPurchases9
1014400   +          +     0.10246969778622 * GRP_NumDistPurchases10
1014401   +          +     0.09815254528418 * GRP_NumWebPurchases2
1014402   +          +     0.03875957144527 * GRP_NumWebPurchases3
1014403   +          +     0.13952022642084 * GRP_NumWebPurchases4
1014404   +          +     0.05210339855186 * GRP_NumWebPurchases5
1014405   +          +     0.03651981156732 * GRP_NumWebPurchases6
1014406   +          +    -0.03615687498427 * GRP_NumWebPurchases7
1014407   +          +    -0.23360859426074 * GRP_NumWebPurchases8
1014408   +          +    -0.62238234045176 * GRP_NumWebVisitsMonth2
1014409   +          +     -0.3625955042061 * GRP_NumWebVisitsMonth3
1014410   +          +    -0.22567740218052 * GRP_NumWebVisitsMonth4
1014411   +          +    -0.08070988848743 * GRP_NumWebVisitsMonth5
1014412   +          +     0.12302027379317 * GRP_NumWebVisitsMonth6
1014413   +          +     0.18991261492457 * GRP_NumWebVisitsMonth7
1014414   +          +     0.14150646636539 * GRP_NumWebVisitsMonth8
1014415   +          +    -0.03178806506185 * GRP_RFMstat2  +    -0.20094777838046 *
1014416   +        GRP_RFMstat3  +     0.07808214585024 * GRP_RFMstat4
1014417   +          +    -0.01546326977621 * GRP_RFMstat5  +     0.00666033747634 *
1014418   +        GRP_RFMstat6  +     0.06290810949775 * GRP_RFMstat7
1014419   +          +    -0.09940864151705 * GRP_RFMstat8  +    -0.03226772053643 *
1014420   +        GRP_RFMstat9  +     0.11448249247924 * GRP_RFMstat10
1014421   +          +      0.1225398665263 * GRP_RMntFrq2  +     0.10126972366878 *
1014422   +        GRP_RMntFrq3  +      0.1145431192407 * GRP_RMntFrq4
1014423   +          +    -0.18520427743014 * GRP_RMntFrq5  +     0.00047167841324 *
1014424   +        GRP_RMntFrq6  +    -0.11223000101198 * GRP_RMntFrq7
1014425   +          +    -0.18586998152107 * GRP_RMntFrq8  +     -0.0179456336917 *
1014426   +        GRP_RMntFrq9  +    -0.11237241396458 * GRP_RMntFrq10
1014427   +          +      0.3853209073848 * GRP_Recency2  +     0.29294953726827 *
1014428   +        GRP_Recency3  +     0.28926654920191 * GRP_Recency4
1014429   +          +     0.11462720739507 * GRP_Recency5  +     -0.1051639195799 *
1014430   +        GRP_Recency6  +     0.04327737722129 * GRP_Recency7
1014431   +          +    -0.11813942587684 * GRP_Recency8  +    -0.29587148545844 *
1014432   +        GRP_Recency9  +    -0.32397819257324 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03764558557298 * GRP_AcceptedCmp52 + -0.17896552838288 *
GRP_AcceptedCmpTotal3 + -0.05721038687206 * GRP_Frq2 + 0.14420365801953 * GRP_Frq3 +
0.13453368328851 * GRP_Frq4 + 0.07489184687255 * GRP_Frq5 + 0.02273664866469 * GRP_Frq6 +
0.06936531343811 * GRP_Frq7 + 0.14287908984383 * GRP_Frq8 + -0.09562935941718 * GRP_Frq9 +
-0.06439332824922 * GRP_Frq10 + -0.08726367328499 * GRP_Income2 + 0.02816796558456 *
GRP_Income3 + -0.0207313464275 * GRP_Income4 + 0.13866821912401 * GRP_Income5 +
0.15211814101672 * GRP_Income6 + 0.07620761723112 * GRP_Income7 + -0.05925421936851 *
GRP_Income8 + 0.00989143831981 * GRP_Income9 + 0.16776717024284 * GRP_Income10 +
0.10023544927245 * GRP_Mnt2 + 0.08000793837961 * GRP_Mnt3 + -0.03767992174465 * GRP_Mnt4 +
-0.0788228470774 * GRP_Mnt5 + -0.07765017993323 * GRP_Mnt6 + -0.05965223355738 * GRP_Mnt7 +
-0.02483544420982 * GRP_Mnt8 + -0.02399968660167 * GRP_Mnt9 + 0.03648534066717 * GRP_Mnt10 +
0.11104910276205 * GRP_MntFishProducts3 + 0.00799524987781 * GRP_MntFishProducts4 +
-0.06457653362516 * GRP_MntFishProducts5 + -0.07071491433289 * GRP_MntFishProducts6 +
-0.0297812227606 * GRP_MntFishProducts7 + 0.1196891870928 * GRP_MntFishProducts8 +
-0.14027713851715 * GRP_MntFishProducts9 + -0.00752775384465 * GRP_MntFishProducts10 +
-0.08850740451643 * GRP_MntGoldProds2 + 0.07481260304092 * GRP_MntGoldProds3 +
0.01197323904138 * GRP_MntGoldProds4 + 0.08785121348968 * GRP_MntGoldProds5 + 0.05751686056011
* GRP_MntGoldProds6 + 0.00465104917946 * GRP_MntGoldProds7 + 0.09887537416794 *
GRP_MntGoldProds8 + -0.00612835497608 * GRP_MntGoldProds9 + -0.00827610171723 *
GRP_MntGoldProds10 + -0.50377721374944 * GRP_MntMeatProducts2 + -0.37745990165748 *
GRP_MntMeatProducts3 + -0.29951878376561 * GRP_MntMeatProducts4 + -0.18065562816733 *
GRP_MntMeatProducts5 + 0.04961241511311 * GRP_MntMeatProducts6 + -0.01243107921859 *
GRP_MntMeatProducts7 + 0.17144282495789 * GRP_MntMeatProducts8 + 0.14947179247383 *
GRP_MntMeatProducts9 + 0.29454336254711 * GRP_MntMeatProducts10 + 0.0325450976222 *
GRP_MntSweetProducts3 + 0.00280241083152 * GRP_MntSweetProducts4 + 0.05505775727165 *
GRP_MntSweetProducts5 + -0.02141161662537 * GRP_MntSweetProducts6 + 0.14268872032365 *
GRP_MntSweetProducts7 + -0.07954317740737 * GRP_MntSweetProducts8 + -0.00103134587271 *
GRP_MntSweetProducts9 + -0.03429967866088 * GRP_MntSweetProducts10 + 0.41436775660832 *
GRP_MntWines2 + 0.29646703075161 * GRP_MntWines3 + 0.33836407373023 * GRP_MntWines4 +
0.21039899243759 * GRP_MntWines5 + 0.07529018465171 * GRP_MntWines6 + -0.00050794764301 *
GRP_MntWines7 + -0.13139238091467 * GRP_MntWines8 + -0.17565936222023 * GRP_MntWines9 +
-0.3630236345865 * GRP_MntWines10 + -0.63590927739857 * GRP_NumCatalogPurchases3 +
-0.22552370784051 * GRP_NumCatalogPurchases4 + 0.02273288758795 * GRP_NumCatalogPurchases5 +
0.23079203529225 * GRP_NumCatalogPurchases6 + 0.30725851913205 * GRP_NumCatalogPurchases7 +
-0.09867989528726 * GRP_NumDistPurchases2 + -0.11241303549017 * GRP_NumDistPurchases3 +
-0.11528474272857 * GRP_NumDistPurchases4 + -0.03357182591423 * GRP_NumDistPurchases5 +
0.08825455645935 * GRP_NumDistPurchases6 + -0.0608759537195 * GRP_NumDistPurchases7 +
-0.14923146321169 * GRP_NumDistPurchases8 + 0.10973172379981 * GRP_NumDistPurchases9 +
0.10246969778622 * GRP_NumDistPurchases10 + 0.09815254528418 * GRP_NumWebPurchases2 +
0.03875957144527 * GRP_NumWebPurchases3 + 0.13952022642084 * GRP_NumWebPurchases4 +
0.05210339855186 * GRP_NumWebPurchases5 + 0.03651981156732 * GRP_NumWebPurchases6 +
-0.03615687498427 * GRP_NumWebPurchases7 + -0.23360859426074 * GRP_NumWebPurchases8 +
-0.62238234045176 * GRP_NumWebVisitsMonth2 + -0.3625955042061 * GRP_NumWebVisitsMonth3 +
-0.22567740218052 * GRP_NumWebVisitsMonth4 + -0.08070988848743 * GRP_NumWebVisitsMonth5 +
0.12302027379317 * GRP_NumWebVisitsMonth6 + 0.18991261492457 * GRP_NumWebVisitsMonth7 +
0.14150646636539 * GRP_NumWebVisitsMonth8 + -0.03178806506185 * GRP_RFMstat2 +
-0.20094777838046 * GRP_RFMstat3 + 0.07808214585024 * GRP_RFMstat4 + -0.01546326977621 *
GRP_RFMstat5 + 0.00666033747634 * GRP_RFMstat6 + 0.06290810949775 * GRP_RFMstat7 +
-0.09940864151705 * GRP_RFMstat8 + -0.03226772053643 * GRP_RFMstat9 + 0.11448249247924 *
GRP_RFMstat10 + 0.1225398665263 * GRP_RMntFrq2 + 0.10126972366878 * GRP_RMntFrq3 +
0.1145431192407 * GRP_RMntFrq4 + -0.18520427743014 * GRP_RMntFrq5 + 0.00047167841324 *
GRP_RMntFrq6 + -0.11223000101198 * GRP_RMntFrq7 + -0.18586998152107 * GRP_RMntFrq8 +
-0.0179456336917 * GRP_RMntFrq9 + -0.11237241396458 * GRP_RMntFrq10 + 0.3853209073848 *
GRP_Recency2 + 0.29294953726827 * GRP_Recency3 + 0.28926654920191 * GRP_Recency4 +
0.11462720739507 * GRP_Recency5 + -0.1051639195799 * GRP_Recency6 + 0.04327737722129 *
GRP_Recency7 + -0.11813942587684 * GRP_Recency8 + -0.29587148545844 * GRP_Recency9 +
-0.32397819257324 * GRP_Recency10 ;
1014433   +   H14  = H14  +     0.15079812629134 * GRP_AcceptedCmp52
1014434   +          +     0.22962844975229 * GRP_AcceptedCmpTotal3
1014435   +          +    -0.05554827748543 * GRP_Frq2  +    -0.08417768642905 * GRP_Frq3
1014436   +          +     0.01076244235421 * GRP_Frq4  +     0.01753394626169 * GRP_Frq5
1014437   +          +    -0.15834802329472 * GRP_Frq6  +    -0.06085337703386 * GRP_Frq7
1014438   +          +    -0.04075525665959 * GRP_Frq8  +    -0.09506739541592 * GRP_Frq9
1014439   +          +    -0.04203961921167 * GRP_Frq10  +      0.1198891926252 *
1014440   +        GRP_Income2  +     0.16315196590211 * GRP_Income3
1014441   +          +     0.18493404221827 * GRP_Income4  +     0.08098358950134 *
1014442   +        GRP_Income5  +    -0.02153158263363 * GRP_Income6
1014443   +          +     0.15391794393904 * GRP_Income7  +     0.17463803180283 *
1014444   +        GRP_Income8  +     0.03158286458013 * GRP_Income9
1014445   +          +     0.24596218762028 * GRP_Income10  +     0.07847966486745 *
1014446   +        GRP_Mnt2  +    -0.10766377152121 * GRP_Mnt3  +    -0.02322298419621 *
1014447   +        GRP_Mnt4  +     0.02436572747627 * GRP_Mnt5  +     0.07340030767568 *
1014448   +        GRP_Mnt6  +     0.02787743356763 * GRP_Mnt7  +     0.06579539785299 *
1014449   +        GRP_Mnt8  +    -0.07931107893394 * GRP_Mnt9  +    -0.00259718802072 *
1014450   +        GRP_Mnt10  +    -0.04638486329226 * GRP_MntFishProducts3
1014451   +          +      0.0275109980019 * GRP_MntFishProducts4
1014452   +          +     0.00457152762382 * GRP_MntFishProducts5
1014453   +          +     -0.0256427796426 * GRP_MntFishProducts6
1014454   +          +     -0.0025601056055 * GRP_MntFishProducts7
1014455   +          +     0.15477917154458 * GRP_MntFishProducts8
1014456   +          +    -0.02700327590482 * GRP_MntFishProducts9
1014457   +          +    -0.01004837932109 * GRP_MntFishProducts10
1014458   +          +     0.01099545881963 * GRP_MntGoldProds2
1014459   +          +     0.04693157233551 * GRP_MntGoldProds3
1014460   +          +    -0.04266329172621 * GRP_MntGoldProds4
1014461   +          +    -0.02679901647799 * GRP_MntGoldProds5
1014462   +          +      0.1281459189864 * GRP_MntGoldProds6
1014463   +          +    -0.06153062103842 * GRP_MntGoldProds7
1014464   +          +    -0.08088807075079 * GRP_MntGoldProds8
1014465   +          +     0.05265016419697 * GRP_MntGoldProds9
1014466   +          +     0.00595108646688 * GRP_MntGoldProds10
1014467   +          +     0.15482516463083 * GRP_MntMeatProducts2
1014468   +          +     0.05984633118335 * GRP_MntMeatProducts3
1014469   +          +     0.13261187884411 * GRP_MntMeatProducts4
1014470   +          +    -0.00777328161788 * GRP_MntMeatProducts5
1014471   +          +     0.03377357859895 * GRP_MntMeatProducts6
1014472   +          +    -0.15782913038235 * GRP_MntMeatProducts7
1014473   +          +    -0.05089204866776 * GRP_MntMeatProducts8
1014474   +          +     -0.0971110594902 * GRP_MntMeatProducts9
1014475   +          +    -0.02558850723317 * GRP_MntMeatProducts10
1014476   +          +     0.04299817363015 * GRP_MntSweetProducts3
1014477   +          +    -0.09902465141858 * GRP_MntSweetProducts4
1014478   +          +    -0.01697537339121 * GRP_MntSweetProducts5
1014479   +          +     0.06486145596476 * GRP_MntSweetProducts6
1014480   +          +     0.10943300547797 * GRP_MntSweetProducts7
1014481   +          +    -0.02182162160296 * GRP_MntSweetProducts8
1014482   +          +     0.11675594479324 * GRP_MntSweetProducts9
1014483   +          +     0.09535653780691 * GRP_MntSweetProducts10
1014484   +          +     -0.1998530200338 * GRP_MntWines2  +     -0.0715511226473 *
1014485   +        GRP_MntWines3  +    -0.00197101208288 * GRP_MntWines4
1014486   +          +    -0.05293421174154 * GRP_MntWines5  +    -0.13384442049071 *
1014487   +        GRP_MntWines6  +    -0.20859731662163 * GRP_MntWines7
1014488   +          +    -0.04979006341398 * GRP_MntWines8  +     0.14737079189331 *
1014489   +        GRP_MntWines9  +    -0.11301496992606 * GRP_MntWines10
1014490   +          +     0.18740768444624 * GRP_NumCatalogPurchases3
1014491   +          +     0.14555197245715 * GRP_NumCatalogPurchases4
1014492   +          +    -0.07465109593753 * GRP_NumCatalogPurchases5
1014493   +          +     0.01725179078473 * GRP_NumCatalogPurchases6
1014494   +          +    -0.01121762754976 * GRP_NumCatalogPurchases7
1014495   +          +    -0.15559892251658 * GRP_NumDistPurchases2
1014496   +          +     0.16551127757982 * GRP_NumDistPurchases3
1014497   +          +     0.02161946400684 * GRP_NumDistPurchases4
1014498   +          +    -0.23848222918486 * GRP_NumDistPurchases5
1014499   +          +     0.10440245784846 * GRP_NumDistPurchases6
1014500   +          +    -0.04195417570658 * GRP_NumDistPurchases7
1014501   +          +    -0.08492153051235 * GRP_NumDistPurchases8
1014502   +          +    -0.18809289244816 * GRP_NumDistPurchases9
1014503   +          +    -0.15195085859989 * GRP_NumDistPurchases10
1014504   +          +    -0.09201105550543 * GRP_NumWebPurchases2
1014505   +          +    -0.06310838957444 * GRP_NumWebPurchases3
1014506   +          +    -0.01496423304375 * GRP_NumWebPurchases4
1014507   +          +    -0.17644533807901 * GRP_NumWebPurchases5
1014508   +          +      -0.110113628078 * GRP_NumWebPurchases6
1014509   +          +     0.00785303531109 * GRP_NumWebPurchases7
1014510   +          +     0.05743831457064 * GRP_NumWebPurchases8
1014511   +          +    -0.05168919326829 * GRP_NumWebVisitsMonth2
1014512   +          +     0.11290696986069 * GRP_NumWebVisitsMonth3
1014513   +          +     0.09360100549901 * GRP_NumWebVisitsMonth4
1014514   +          +    -0.09806451567816 * GRP_NumWebVisitsMonth5
1014515   +          +     0.12495533860565 * GRP_NumWebVisitsMonth6
1014516   +          +    -0.02760271368889 * GRP_NumWebVisitsMonth7
1014517   +          +    -0.11225070952088 * GRP_NumWebVisitsMonth8
1014518   +          +     0.07121295296305 * GRP_RFMstat2  +     0.06278808825827 *
1014519   +        GRP_RFMstat3  +     0.22407976217279 * GRP_RFMstat4
1014520   +          +    -0.01391199439347 * GRP_RFMstat5  +     0.00524986855743 *
1014521   +        GRP_RFMstat6  +     0.04647229627683 * GRP_RFMstat7
1014522   +          +    -0.08262115059091 * GRP_RFMstat8  +     0.05568633367355 *
1014523   +        GRP_RFMstat9  +      0.1619135717285 * GRP_RFMstat10
1014524   +          +    -0.12663266250917 * GRP_RMntFrq2  +    -0.02019823950141 *
1014525   +        GRP_RMntFrq3  +     0.06814938923598 * GRP_RMntFrq4
1014526   +          +     0.01123045702133 * GRP_RMntFrq5  +     0.11389829423469 *
1014527   +        GRP_RMntFrq6  +    -0.13952956112852 * GRP_RMntFrq7
1014528   +          +    -0.02257133244216 * GRP_RMntFrq8  +    -0.04067820247483 *
1014529   +        GRP_RMntFrq9  +     0.17149660062988 * GRP_RMntFrq10
1014530   +          +    -0.08181666846159 * GRP_Recency2  +      -0.110152228582 *
1014531   +        GRP_Recency3  +    -0.04515191712692 * GRP_Recency4
1014532   +          +    -0.07021934274856 * GRP_Recency5  +     0.05576042452735 *
1014533   +        GRP_Recency6  +     0.01898884275662 * GRP_Recency7
1014534   +          +     0.37127414267517 * GRP_Recency8  +     0.02568583903077 *
1014535   +        GRP_Recency9  +     0.06729768371352 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.15079812629134 * GRP_AcceptedCmp52 + 0.22962844975229 *
GRP_AcceptedCmpTotal3 + -0.05554827748543 * GRP_Frq2 + -0.08417768642905 * GRP_Frq3 +
0.01076244235421 * GRP_Frq4 + 0.01753394626169 * GRP_Frq5 + -0.15834802329472 * GRP_Frq6 +
-0.06085337703386 * GRP_Frq7 + -0.04075525665959 * GRP_Frq8 + -0.09506739541592 * GRP_Frq9 +
-0.04203961921167 * GRP_Frq10 + 0.1198891926252 * GRP_Income2 + 0.16315196590211 * GRP_Income3
+ 0.18493404221827 * GRP_Income4 + 0.08098358950134 * GRP_Income5 + -0.02153158263363 *
GRP_Income6 + 0.15391794393904 * GRP_Income7 + 0.17463803180283 * GRP_Income8 +
0.03158286458013 * GRP_Income9 + 0.24596218762028 * GRP_Income10 + 0.07847966486745 * GRP_Mnt2
+ -0.10766377152121 * GRP_Mnt3 + -0.02322298419621 * GRP_Mnt4 + 0.02436572747627 * GRP_Mnt5 +
0.07340030767568 * GRP_Mnt6 + 0.02787743356763 * GRP_Mnt7 + 0.06579539785299 * GRP_Mnt8 +
-0.07931107893394 * GRP_Mnt9 + -0.00259718802072 * GRP_Mnt10 + -0.04638486329226 *
GRP_MntFishProducts3 + 0.0275109980019 * GRP_MntFishProducts4 + 0.00457152762382 *
GRP_MntFishProducts5 + -0.0256427796426 * GRP_MntFishProducts6 + -0.0025601056055 *
GRP_MntFishProducts7 + 0.15477917154458 * GRP_MntFishProducts8 + -0.02700327590482 *
GRP_MntFishProducts9 + -0.01004837932109 * GRP_MntFishProducts10 + 0.01099545881963 *
GRP_MntGoldProds2 + 0.04693157233551 * GRP_MntGoldProds3 + -0.04266329172621 *
GRP_MntGoldProds4 + -0.02679901647799 * GRP_MntGoldProds5 + 0.1281459189864 *
GRP_MntGoldProds6 + -0.06153062103842 * GRP_MntGoldProds7 + -0.08088807075079 *
GRP_MntGoldProds8 + 0.05265016419697 * GRP_MntGoldProds9 + 0.00595108646688 *
GRP_MntGoldProds10 + 0.15482516463083 * GRP_MntMeatProducts2 + 0.05984633118335 *
GRP_MntMeatProducts3 + 0.13261187884411 * GRP_MntMeatProducts4 + -0.00777328161788 *
GRP_MntMeatProducts5 + 0.03377357859895 * GRP_MntMeatProducts6 + -0.15782913038235 *
GRP_MntMeatProducts7 + -0.05089204866776 * GRP_MntMeatProducts8 + -0.0971110594902 *
GRP_MntMeatProducts9 + -0.02558850723317 * GRP_MntMeatProducts10 + 0.04299817363015 *
GRP_MntSweetProducts3 + -0.09902465141858 * GRP_MntSweetProducts4 + -0.01697537339121 *
GRP_MntSweetProducts5 + 0.06486145596476 * GRP_MntSweetProducts6 + 0.10943300547797 *
GRP_MntSweetProducts7 + -0.02182162160296 * GRP_MntSweetProducts8 + 0.11675594479324 *
GRP_MntSweetProducts9 + 0.09535653780691 * GRP_MntSweetProducts10 + -0.1998530200338 *
GRP_MntWines2 + -0.0715511226473 * GRP_MntWines3 + -0.00197101208288 * GRP_MntWines4 +
-0.05293421174154 * GRP_MntWines5 + -0.13384442049071 * GRP_MntWines6 + -0.20859731662163 *
GRP_MntWines7 + -0.04979006341398 * GRP_MntWines8 + 0.14737079189331 * GRP_MntWines9 +
-0.11301496992606 * GRP_MntWines10 + 0.18740768444624 * GRP_NumCatalogPurchases3 +
0.14555197245715 * GRP_NumCatalogPurchases4 + -0.07465109593753 * GRP_NumCatalogPurchases5 +
0.01725179078473 * GRP_NumCatalogPurchases6 + -0.01121762754976 * GRP_NumCatalogPurchases7 +
-0.15559892251658 * GRP_NumDistPurchases2 + 0.16551127757982 * GRP_NumDistPurchases3 +
0.02161946400684 * GRP_NumDistPurchases4 + -0.23848222918486 * GRP_NumDistPurchases5 +
0.10440245784846 * GRP_NumDistPurchases6 + -0.04195417570658 * GRP_NumDistPurchases7 +
-0.08492153051235 * GRP_NumDistPurchases8 + -0.18809289244816 * GRP_NumDistPurchases9 +
-0.15195085859989 * GRP_NumDistPurchases10 + -0.09201105550543 * GRP_NumWebPurchases2 +
-0.06310838957444 * GRP_NumWebPurchases3 + -0.01496423304375 * GRP_NumWebPurchases4 +
-0.17644533807901 * GRP_NumWebPurchases5 + -0.110113628078 * GRP_NumWebPurchases6 +
0.00785303531109 * GRP_NumWebPurchases7 + 0.05743831457064 * GRP_NumWebPurchases8 +
-0.05168919326829 * GRP_NumWebVisitsMonth2 + 0.11290696986069 * GRP_NumWebVisitsMonth3 +
0.09360100549901 * GRP_NumWebVisitsMonth4 + -0.09806451567816 * GRP_NumWebVisitsMonth5 +
0.12495533860565 * GRP_NumWebVisitsMonth6 + -0.02760271368889 * GRP_NumWebVisitsMonth7 +
-0.11225070952088 * GRP_NumWebVisitsMonth8 + 0.07121295296305 * GRP_RFMstat2 +
0.06278808825827 * GRP_RFMstat3 + 0.22407976217279 * GRP_RFMstat4 + -0.01391199439347 *
GRP_RFMstat5 + 0.00524986855743 * GRP_RFMstat6 + 0.04647229627683 * GRP_RFMstat7 +
-0.08262115059091 * GRP_RFMstat8 + 0.05568633367355 * GRP_RFMstat9 + 0.1619135717285 *
GRP_RFMstat10 + -0.12663266250917 * GRP_RMntFrq2 + -0.02019823950141 * GRP_RMntFrq3 +
0.06814938923598 * GRP_RMntFrq4 + 0.01123045702133 * GRP_RMntFrq5 + 0.11389829423469 *
GRP_RMntFrq6 + -0.13952956112852 * GRP_RMntFrq7 + -0.02257133244216 * GRP_RMntFrq8 +
-0.04067820247483 * GRP_RMntFrq9 + 0.17149660062988 * GRP_RMntFrq10 + -0.08181666846159 *
GRP_Recency2 + -0.110152228582 * GRP_Recency3 + -0.04515191712692 * GRP_Recency4 +
-0.07021934274856 * GRP_Recency5 + 0.05576042452735 * GRP_Recency6 + 0.01898884275662 *
GRP_Recency7 + 0.37127414267517 * GRP_Recency8 + 0.02568583903077 * GRP_Recency9 +
0.06729768371352 * GRP_Recency10 ;
1014536   +   H15  = H15  +    -0.07474486177584 * GRP_AcceptedCmp52
1014537   +          +     -0.0813425565032 * GRP_AcceptedCmpTotal3
1014538   +          +     0.08373011910886 * GRP_Frq2  +     0.15590004679893 * GRP_Frq3
1014539   +          +    -0.01423869859621 * GRP_Frq4  +     0.23853893377052 * GRP_Frq5
1014540   +          +     0.00582814648708 * GRP_Frq6  +     0.10745574495653 * GRP_Frq7
1014541   +          +     0.12283228526609 * GRP_Frq8  +    -0.00260744850823 * GRP_Frq9
1014542   +          +     0.20713186190941 * GRP_Frq10  +     0.14418190802709 *
1014543   +        GRP_Income2  +     0.07441582776964 * GRP_Income3
1014544   +          +    -0.09944544424018 * GRP_Income4  +     -0.1993160747563 *
1014545   +        GRP_Income5  +     0.15366229436808 * GRP_Income6
1014546   +          +      0.0104741985443 * GRP_Income7  +     0.03372790306706 *
1014547   +        GRP_Income8  +     0.07288522457723 * GRP_Income9
1014548   +          +     0.17752104349269 * GRP_Income10  +    -0.15217900206484 *
1014549   +        GRP_Mnt2  +     0.03849759187766 * GRP_Mnt3  +    -0.05010164314865 *
1014550   +        GRP_Mnt4  +     0.02680721226924 * GRP_Mnt5  +    -0.10687670604825 *
1014551   +        GRP_Mnt6  +    -0.15176693979348 * GRP_Mnt7  +    -0.08667079494869 *
1014552   +        GRP_Mnt8  +    -0.12429806525962 * GRP_Mnt9  +    -0.17943078316657 *
1014553   +        GRP_Mnt10  +     0.00950842084882 * GRP_MntFishProducts3
1014554   +          +     0.06089106976321 * GRP_MntFishProducts4
1014555   +          +    -0.04055435018644 * GRP_MntFishProducts5
1014556   +          +    -0.04072533262198 * GRP_MntFishProducts6
1014557   +          +     0.00316491296302 * GRP_MntFishProducts7
1014558   +          +     0.14360439865573 * GRP_MntFishProducts8
1014559   +          +    -0.10561487610195 * GRP_MntFishProducts9
1014560   +          +      0.0808522264132 * GRP_MntFishProducts10
1014561   +          +    -0.02372066113373 * GRP_MntGoldProds2
1014562   +          +     0.05245232490647 * GRP_MntGoldProds3
1014563   +          +     0.05678231883017 * GRP_MntGoldProds4
1014564   +          +     0.01560521212362 * GRP_MntGoldProds5
1014565   +          +     0.09731296556114 * GRP_MntGoldProds6
1014566   +          +      0.0727075243521 * GRP_MntGoldProds7
1014567   +          +     0.03845221174429 * GRP_MntGoldProds8
1014568   +          +    -0.17307450395634 * GRP_MntGoldProds9
1014569   +          +     0.16609295927199 * GRP_MntGoldProds10
1014570   +          +     0.24378730593177 * GRP_MntMeatProducts2
1014571   +          +    -0.01232528635462 * GRP_MntMeatProducts3
1014572   +          +     0.08632771193059 * GRP_MntMeatProducts4
1014573   +          +     0.03837956076595 * GRP_MntMeatProducts5
1014574   +          +     0.01038398564102 * GRP_MntMeatProducts6
1014575   +          +     -0.1272142230896 * GRP_MntMeatProducts7
1014576   +          +    -0.06074459624503 * GRP_MntMeatProducts8
1014577   +          +    -0.15871755763595 * GRP_MntMeatProducts9
1014578   +          +    -0.12457188762767 * GRP_MntMeatProducts10
1014579   +          +     0.02566417423056 * GRP_MntSweetProducts3
1014580   +          +    -0.08945240533844 * GRP_MntSweetProducts4
1014581   +          +    -0.14155778851078 * GRP_MntSweetProducts5
1014582   +          +    -0.11568464973367 * GRP_MntSweetProducts6
1014583   +          +     -0.0060913881508 * GRP_MntSweetProducts7
1014584   +          +     -0.0784310738091 * GRP_MntSweetProducts8
1014585   +          +    -0.05760607191513 * GRP_MntSweetProducts9
1014586   +          +    -0.08178704732211 * GRP_MntSweetProducts10
1014587   +          +     -0.0051906568099 * GRP_MntWines2  +      0.0630388639453 *
1014588   +        GRP_MntWines3  +    -0.22313810388763 * GRP_MntWines4
1014589   +          +      -0.180882719351 * GRP_MntWines5  +     0.02141382546184 *
1014590   +        GRP_MntWines6  +    -0.05971406502791 * GRP_MntWines7
1014591   +          +     0.09956935130741 * GRP_MntWines8  +     0.01632287744434 *
1014592   +        GRP_MntWines9  +     0.10949768587748 * GRP_MntWines10
1014593   +          +     0.09783291088049 * GRP_NumCatalogPurchases3
1014594   +          +    -0.02261013277752 * GRP_NumCatalogPurchases4
1014595   +          +    -0.11492625279985 * GRP_NumCatalogPurchases5
1014596   +          +    -0.08434829186857 * GRP_NumCatalogPurchases6
1014597   +          +     -0.0371926608551 * GRP_NumCatalogPurchases7
1014598   +          +     0.06202987788564 * GRP_NumDistPurchases2
1014599   +          +     0.22177708973962 * GRP_NumDistPurchases3
1014600   +          +    -0.13703790658963 * GRP_NumDistPurchases4
1014601   +          +     0.21149014324079 * GRP_NumDistPurchases5
1014602   +          +     0.04612264586718 * GRP_NumDistPurchases6
1014603   +          +      0.1388613782278 * GRP_NumDistPurchases7
1014604   +          +     0.25380989759373 * GRP_NumDistPurchases8
1014605   +          +     0.05092017340612 * GRP_NumDistPurchases9
1014606   +          +    -0.10043094372979 * GRP_NumDistPurchases10
1014607   +          +    -0.14530592708524 * GRP_NumWebPurchases2
1014608   +          +     0.08222242220022 * GRP_NumWebPurchases3
1014609   +          +     0.11023840669649 * GRP_NumWebPurchases4
1014610   +          +     0.02201767721545 * GRP_NumWebPurchases5
1014611   +          +      0.0325965365767 * GRP_NumWebPurchases6
1014612   +          +     0.01387738316429 * GRP_NumWebPurchases7
1014613   +          +      0.0668944294435 * GRP_NumWebPurchases8
1014614   +          +    -0.03013978189881 * GRP_NumWebVisitsMonth2
1014615   +          +    -0.02332621711341 * GRP_NumWebVisitsMonth3
1014616   +          +    -0.05034424202375 * GRP_NumWebVisitsMonth4
1014617   +          +    -0.17412564074584 * GRP_NumWebVisitsMonth5
1014618   +          +    -0.02681384968802 * GRP_NumWebVisitsMonth6
1014619   +          +    -0.03690686741093 * GRP_NumWebVisitsMonth7
1014620   +          +    -0.18044101662424 * GRP_NumWebVisitsMonth8
1014621   +          +     0.18351793268065 * GRP_RFMstat2  +     0.08302753882463 *
1014622   +        GRP_RFMstat3  +      0.2140782505942 * GRP_RFMstat4
1014623   +          +     0.08904517954741 * GRP_RFMstat5  +     0.00618619005802 *
1014624   +        GRP_RFMstat6  +     0.07381352166701 * GRP_RFMstat7
1014625   +          +    -0.07112387189768 * GRP_RFMstat8  +     0.18177537388268 *
1014626   +        GRP_RFMstat9  +     0.01993781166098 * GRP_RFMstat10
1014627   +          +    -0.13633030693385 * GRP_RMntFrq2  +    -0.03091098931044 *
1014628   +        GRP_RMntFrq3  +     0.01424378851129 * GRP_RMntFrq4
1014629   +          +    -0.10457271155167 * GRP_RMntFrq5  +    -0.04065636538378 *
1014630   +        GRP_RMntFrq6  +    -0.21000053348912 * GRP_RMntFrq7
1014631   +          +      0.1195703554692 * GRP_RMntFrq8  +     0.06433917724909 *
1014632   +        GRP_RMntFrq9  +     0.03523308730139 * GRP_RMntFrq10
1014633   +          +    -0.45748566872646 * GRP_Recency2  +     0.00890062656102 *
1014634   +        GRP_Recency3  +    -0.12573498091966 * GRP_Recency4
1014635   +          +    -0.11355010854787 * GRP_Recency5  +    -0.06285469349039 *
1014636   +        GRP_Recency6  +    -0.01372977465721 * GRP_Recency7
1014637   +          +    -0.00431009782377 * GRP_Recency8  +     0.14264750449817 *
1014638   +        GRP_Recency9  +     0.06322236291435 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.07474486177584 * GRP_AcceptedCmp52 + -0.0813425565032 *
GRP_AcceptedCmpTotal3 + 0.08373011910886 * GRP_Frq2 + 0.15590004679893 * GRP_Frq3 +
-0.01423869859621 * GRP_Frq4 + 0.23853893377052 * GRP_Frq5 + 0.00582814648708 * GRP_Frq6 +
0.10745574495653 * GRP_Frq7 + 0.12283228526609 * GRP_Frq8 + -0.00260744850823 * GRP_Frq9 +
0.20713186190941 * GRP_Frq10 + 0.14418190802709 * GRP_Income2 + 0.07441582776964 * GRP_Income3
+ -0.09944544424018 * GRP_Income4 + -0.1993160747563 * GRP_Income5 + 0.15366229436808 *
GRP_Income6 + 0.0104741985443 * GRP_Income7 + 0.03372790306706 * GRP_Income8 +
0.07288522457723 * GRP_Income9 + 0.17752104349269 * GRP_Income10 + -0.15217900206484 *
GRP_Mnt2 + 0.03849759187766 * GRP_Mnt3 + -0.05010164314865 * GRP_Mnt4 + 0.02680721226924 *
GRP_Mnt5 + -0.10687670604825 * GRP_Mnt6 + -0.15176693979348 * GRP_Mnt7 + -0.08667079494869 *
GRP_Mnt8 + -0.12429806525962 * GRP_Mnt9 + -0.17943078316657 * GRP_Mnt10 + 0.00950842084882 *
GRP_MntFishProducts3 + 0.06089106976321 * GRP_MntFishProducts4 + -0.04055435018644 *
GRP_MntFishProducts5 + -0.04072533262198 * GRP_MntFishProducts6 + 0.00316491296302 *
GRP_MntFishProducts7 + 0.14360439865573 * GRP_MntFishProducts8 + -0.10561487610195 *
GRP_MntFishProducts9 + 0.0808522264132 * GRP_MntFishProducts10 + -0.02372066113373 *
GRP_MntGoldProds2 + 0.05245232490647 * GRP_MntGoldProds3 + 0.05678231883017 *
GRP_MntGoldProds4 + 0.01560521212362 * GRP_MntGoldProds5 + 0.09731296556114 *
GRP_MntGoldProds6 + 0.0727075243521 * GRP_MntGoldProds7 + 0.03845221174429 * GRP_MntGoldProds8
+ -0.17307450395634 * GRP_MntGoldProds9 + 0.16609295927199 * GRP_MntGoldProds10 +
0.24378730593177 * GRP_MntMeatProducts2 + -0.01232528635462 * GRP_MntMeatProducts3 +
0.08632771193059 * GRP_MntMeatProducts4 + 0.03837956076595 * GRP_MntMeatProducts5 +
0.01038398564102 * GRP_MntMeatProducts6 + -0.1272142230896 * GRP_MntMeatProducts7 +
-0.06074459624503 * GRP_MntMeatProducts8 + -0.15871755763595 * GRP_MntMeatProducts9 +
-0.12457188762767 * GRP_MntMeatProducts10 + 0.02566417423056 * GRP_MntSweetProducts3 +
-0.08945240533844 * GRP_MntSweetProducts4 + -0.14155778851078 * GRP_MntSweetProducts5 +
-0.11568464973367 * GRP_MntSweetProducts6 + -0.0060913881508 * GRP_MntSweetProducts7 +
-0.0784310738091 * GRP_MntSweetProducts8 + -0.05760607191513 * GRP_MntSweetProducts9 +
-0.08178704732211 * GRP_MntSweetProducts10 + -0.0051906568099 * GRP_MntWines2 +
0.0630388639453 * GRP_MntWines3 + -0.22313810388763 * GRP_MntWines4 + -0.180882719351 *
GRP_MntWines5 + 0.02141382546184 * GRP_MntWines6 + -0.05971406502791 * GRP_MntWines7 +
0.09956935130741 * GRP_MntWines8 + 0.01632287744434 * GRP_MntWines9 + 0.10949768587748 *
GRP_MntWines10 + 0.09783291088049 * GRP_NumCatalogPurchases3 + -0.02261013277752 *
GRP_NumCatalogPurchases4 + -0.11492625279985 * GRP_NumCatalogPurchases5 + -0.08434829186857 *
GRP_NumCatalogPurchases6 + -0.0371926608551 * GRP_NumCatalogPurchases7 + 0.06202987788564 *
GRP_NumDistPurchases2 + 0.22177708973962 * GRP_NumDistPurchases3 + -0.13703790658963 *
GRP_NumDistPurchases4 + 0.21149014324079 * GRP_NumDistPurchases5 + 0.04612264586718 *
GRP_NumDistPurchases6 + 0.1388613782278 * GRP_NumDistPurchases7 + 0.25380989759373 *
GRP_NumDistPurchases8 + 0.05092017340612 * GRP_NumDistPurchases9 + -0.10043094372979 *
GRP_NumDistPurchases10 + -0.14530592708524 * GRP_NumWebPurchases2 + 0.08222242220022 *
GRP_NumWebPurchases3 + 0.11023840669649 * GRP_NumWebPurchases4 + 0.02201767721545 *
GRP_NumWebPurchases5 + 0.0325965365767 * GRP_NumWebPurchases6 + 0.01387738316429 *
GRP_NumWebPurchases7 + 0.0668944294435 * GRP_NumWebPurchases8 + -0.03013978189881 *
GRP_NumWebVisitsMonth2 + -0.02332621711341 * GRP_NumWebVisitsMonth3 + -0.05034424202375 *
GRP_NumWebVisitsMonth4 + -0.17412564074584 * GRP_NumWebVisitsMonth5 + -0.02681384968802 *
GRP_NumWebVisitsMonth6 + -0.03690686741093 * GRP_NumWebVisitsMonth7 + -0.18044101662424 *
GRP_NumWebVisitsMonth8 + 0.18351793268065 * GRP_RFMstat2 + 0.08302753882463 * GRP_RFMstat3 +
0.2140782505942 * GRP_RFMstat4 + 0.08904517954741 * GRP_RFMstat5 + 0.00618619005802 *
GRP_RFMstat6 + 0.07381352166701 * GRP_RFMstat7 + -0.07112387189768 * GRP_RFMstat8 +
0.18177537388268 * GRP_RFMstat9 + 0.01993781166098 * GRP_RFMstat10 + -0.13633030693385 *
GRP_RMntFrq2 + -0.03091098931044 * GRP_RMntFrq3 + 0.01424378851129 * GRP_RMntFrq4 +
-0.10457271155167 * GRP_RMntFrq5 + -0.04065636538378 * GRP_RMntFrq6 + -0.21000053348912 *
GRP_RMntFrq7 + 0.1195703554692 * GRP_RMntFrq8 + 0.06433917724909 * GRP_RMntFrq9 +
0.03523308730139 * GRP_RMntFrq10 + -0.45748566872646 * GRP_Recency2 + 0.00890062656102 *
GRP_Recency3 + -0.12573498091966 * GRP_Recency4 + -0.11355010854787 * GRP_Recency5 +
-0.06285469349039 * GRP_Recency6 + -0.01372977465721 * GRP_Recency7 + -0.00431009782377 *
GRP_Recency8 + 0.14264750449817 * GRP_Recency9 + 0.06322236291435 * GRP_Recency10 ;
1014639   +   H16  = H16  +    -0.02857321351589 * GRP_AcceptedCmp52
1014640   +          +     0.08686492082938 * GRP_AcceptedCmpTotal3
1014641   +          +    -0.02529651954499 * GRP_Frq2  +    -0.11708686915113 * GRP_Frq3
1014642   +          +    -0.00271389964637 * GRP_Frq4  +      0.0031520579469 * GRP_Frq5
1014643   +          +     0.02250592473469 * GRP_Frq6  +    -0.07430823955704 * GRP_Frq7
1014644   +          +    -0.05511293730159 * GRP_Frq8  +    -0.15083576220167 * GRP_Frq9
1014645   +          +     0.08624045289076 * GRP_Frq10  +    -0.11336098795831 *
1014646   +        GRP_Income2  +    -0.01135849326744 * GRP_Income3
1014647   +          +    -0.01038803441996 * GRP_Income4  +     0.01063081779526 *
1014648   +        GRP_Income5  +      0.0195138967196 * GRP_Income6
1014649   +          +    -0.12428695983315 * GRP_Income7  +      0.1762603662968 *
1014650   +        GRP_Income8  +    -0.04284544297425 * GRP_Income9
1014651   +          +     0.13548745294575 * GRP_Income10  +      0.1461906889163 *
1014652   +        GRP_Mnt2  +     0.00789497535067 * GRP_Mnt3  +    -0.10828259948309 *
1014653   +        GRP_Mnt4  +    -0.09852484093552 * GRP_Mnt5  +     0.12328283591039 *
1014654   +        GRP_Mnt6  +     0.02645884251294 * GRP_Mnt7  +    -0.06418515760324 *
1014655   +        GRP_Mnt8  +     0.05033297828056 * GRP_Mnt9  +     0.02319608065987 *
1014656   +        GRP_Mnt10  +    -0.06409512817059 * GRP_MntFishProducts3
1014657   +          +    -0.07347763124599 * GRP_MntFishProducts4
1014658   +          +     0.09606295777047 * GRP_MntFishProducts5
1014659   +          +     0.04849186843695 * GRP_MntFishProducts6
1014660   +          +    -0.09816590672897 * GRP_MntFishProducts7
1014661   +          +    -0.06716198318522 * GRP_MntFishProducts8
1014662   +          +     0.02729112309666 * GRP_MntFishProducts9
1014663   +          +     0.15530589859286 * GRP_MntFishProducts10
1014664   +          +    -0.26850482232692 * GRP_MntGoldProds2
1014665   +          +      0.0177945850339 * GRP_MntGoldProds3
1014666   +          +     0.07330868157069 * GRP_MntGoldProds4
1014667   +          +    -0.07888253464223 * GRP_MntGoldProds5
1014668   +          +    -0.05383351391678 * GRP_MntGoldProds6
1014669   +          +     0.06902011208006 * GRP_MntGoldProds7
1014670   +          +     0.01659381751676 * GRP_MntGoldProds8
1014671   +          +     0.05511006705343 * GRP_MntGoldProds9
1014672   +          +    -0.12233490278298 * GRP_MntGoldProds10
1014673   +          +    -0.06372567187434 * GRP_MntMeatProducts2
1014674   +          +     0.04258696255136 * GRP_MntMeatProducts3
1014675   +          +     0.07756827842945 * GRP_MntMeatProducts4
1014676   +          +    -0.08102882952712 * GRP_MntMeatProducts5
1014677   +          +    -0.18168349526814 * GRP_MntMeatProducts6
1014678   +          +    -0.09289639689933 * GRP_MntMeatProducts7
1014679   +          +    -0.12483836376085 * GRP_MntMeatProducts8
1014680   +          +    -0.00476358575434 * GRP_MntMeatProducts9
1014681   +          +    -0.05003834735617 * GRP_MntMeatProducts10
1014682   +          +     0.08995329370692 * GRP_MntSweetProducts3
1014683   +          +     0.14420536072862 * GRP_MntSweetProducts4
1014684   +          +    -0.12656735985005 * GRP_MntSweetProducts5
1014685   +          +    -0.03927173602614 * GRP_MntSweetProducts6
1014686   +          +     0.11985794354261 * GRP_MntSweetProducts7
1014687   +          +    -0.03511406177491 * GRP_MntSweetProducts8
1014688   +          +     0.00072578123331 * GRP_MntSweetProducts9
1014689   +          +    -0.10392403461293 * GRP_MntSweetProducts10
1014690   +          +    -0.05182683414566 * GRP_MntWines2  +    -0.12225589796854 *
1014691   +        GRP_MntWines3  +    -0.00836365672389 * GRP_MntWines4
1014692   +          +     0.01817080496827 * GRP_MntWines5  +     0.00139854456371 *
1014693   +        GRP_MntWines6  +     0.11415329329768 * GRP_MntWines7
1014694   +          +    -0.07157344425572 * GRP_MntWines8  +    -0.10015424425022 *
1014695   +        GRP_MntWines9  +     0.01183545951543 * GRP_MntWines10
1014696   +          +     0.01371669307975 * GRP_NumCatalogPurchases3
1014697   +          +     0.07907358248279 * GRP_NumCatalogPurchases4
1014698   +          +     0.01239764907034 * GRP_NumCatalogPurchases5
1014699   +          +    -0.04021922540013 * GRP_NumCatalogPurchases6
1014700   +          +     0.09459541866911 * GRP_NumCatalogPurchases7
1014701   +          +    -0.16967374745579 * GRP_NumDistPurchases2
1014702   +          +     0.09200080502499 * GRP_NumDistPurchases3
1014703   +          +    -0.10021352797437 * GRP_NumDistPurchases4
1014704   +          +    -0.10066040841661 * GRP_NumDistPurchases5
1014705   +          +     0.00752147985238 * GRP_NumDistPurchases6
1014706   +          +     0.06652031886304 * GRP_NumDistPurchases7
1014707   +          +    -0.02043214836484 * GRP_NumDistPurchases8
1014708   +          +     0.02148909954497 * GRP_NumDistPurchases9
1014709   +          +    -0.08750148475271 * GRP_NumDistPurchases10
1014710   +          +    -0.11100944378418 * GRP_NumWebPurchases2
1014711   +          +     0.15913249284009 * GRP_NumWebPurchases3
1014712   +          +     0.01344719363688 * GRP_NumWebPurchases4
1014713   +          +     0.05964097356376 * GRP_NumWebPurchases5
1014714   +          +    -0.02443578971107 * GRP_NumWebPurchases6
1014715   +          +    -0.08746113819167 * GRP_NumWebPurchases7
1014716   +          +    -0.05128856330268 * GRP_NumWebPurchases8
1014717   +          +    -0.05875299359354 * GRP_NumWebVisitsMonth2
1014718   +          +     0.07755855794482 * GRP_NumWebVisitsMonth3
1014719   +          +    -0.07517161675954 * GRP_NumWebVisitsMonth4
1014720   +          +     0.05144332977229 * GRP_NumWebVisitsMonth5
1014721   +          +     0.18297745072296 * GRP_NumWebVisitsMonth6
1014722   +          +     0.06164490867457 * GRP_NumWebVisitsMonth7
1014723   +          +     0.04580284323085 * GRP_NumWebVisitsMonth8
1014724   +          +    -0.06378765632552 * GRP_RFMstat2  +     0.02170099547671 *
1014725   +        GRP_RFMstat3  +     0.05641050433358 * GRP_RFMstat4
1014726   +          +    -0.01875867792846 * GRP_RFMstat5  +    -0.02966367663118 *
1014727   +        GRP_RFMstat6  +     0.06778581692325 * GRP_RFMstat7
1014728   +          +     0.08472702734665 * GRP_RFMstat8  +    -0.07513817936554 *
1014729   +        GRP_RFMstat9  +    -0.09054195031681 * GRP_RFMstat10
1014730   +          +     0.09962266457073 * GRP_RMntFrq2  +      0.0269861046733 *
1014731   +        GRP_RMntFrq3  +    -0.03854288653601 * GRP_RMntFrq4
1014732   +          +    -0.19936014666985 * GRP_RMntFrq5  +    -0.02515671079355 *
1014733   +        GRP_RMntFrq6  +     0.04869097060418 * GRP_RMntFrq7
1014734   +          +    -0.10622821231311 * GRP_RMntFrq8  +    -0.16450480022836 *
1014735   +        GRP_RMntFrq9  +     0.08581508554974 * GRP_RMntFrq10
1014736   +          +      0.0101644001149 * GRP_Recency2  +     0.04563803568067 *
1014737   +        GRP_Recency3  +    -0.12616695833869 * GRP_Recency4
1014738   +          +    -0.12673939537116 * GRP_Recency5  +    -0.09667218383464 *
1014739   +        GRP_Recency6  +     0.18574081401557 * GRP_Recency7
1014740   +          +    -0.06904154623978 * GRP_Recency8  +     0.14085181924583 *
1014741   +        GRP_Recency9  +     0.09795171549035 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.02857321351589 * GRP_AcceptedCmp52 + 0.08686492082938 *
GRP_AcceptedCmpTotal3 + -0.02529651954499 * GRP_Frq2 + -0.11708686915113 * GRP_Frq3 +
-0.00271389964637 * GRP_Frq4 + 0.0031520579469 * GRP_Frq5 + 0.02250592473469 * GRP_Frq6 +
-0.07430823955704 * GRP_Frq7 + -0.05511293730159 * GRP_Frq8 + -0.15083576220167 * GRP_Frq9 +
0.08624045289076 * GRP_Frq10 + -0.11336098795831 * GRP_Income2 + -0.01135849326744 *
GRP_Income3 + -0.01038803441996 * GRP_Income4 + 0.01063081779526 * GRP_Income5 +
0.0195138967196 * GRP_Income6 + -0.12428695983315 * GRP_Income7 + 0.1762603662968 *
GRP_Income8 + -0.04284544297425 * GRP_Income9 + 0.13548745294575 * GRP_Income10 +
0.1461906889163 * GRP_Mnt2 + 0.00789497535067 * GRP_Mnt3 + -0.10828259948309 * GRP_Mnt4 +
-0.09852484093552 * GRP_Mnt5 + 0.12328283591039 * GRP_Mnt6 + 0.02645884251294 * GRP_Mnt7 +
-0.06418515760324 * GRP_Mnt8 + 0.05033297828056 * GRP_Mnt9 + 0.02319608065987 * GRP_Mnt10 +
-0.06409512817059 * GRP_MntFishProducts3 + -0.07347763124599 * GRP_MntFishProducts4 +
0.09606295777047 * GRP_MntFishProducts5 + 0.04849186843695 * GRP_MntFishProducts6 +
-0.09816590672897 * GRP_MntFishProducts7 + -0.06716198318522 * GRP_MntFishProducts8 +
0.02729112309666 * GRP_MntFishProducts9 + 0.15530589859286 * GRP_MntFishProducts10 +
-0.26850482232692 * GRP_MntGoldProds2 + 0.0177945850339 * GRP_MntGoldProds3 + 0.07330868157069
* GRP_MntGoldProds4 + -0.07888253464223 * GRP_MntGoldProds5 + -0.05383351391678 *
GRP_MntGoldProds6 + 0.06902011208006 * GRP_MntGoldProds7 + 0.01659381751676 *
GRP_MntGoldProds8 + 0.05511006705343 * GRP_MntGoldProds9 + -0.12233490278298 *
GRP_MntGoldProds10 + -0.06372567187434 * GRP_MntMeatProducts2 + 0.04258696255136 *
GRP_MntMeatProducts3 + 0.07756827842945 * GRP_MntMeatProducts4 + -0.08102882952712 *
GRP_MntMeatProducts5 + -0.18168349526814 * GRP_MntMeatProducts6 + -0.09289639689933 *
GRP_MntMeatProducts7 + -0.12483836376085 * GRP_MntMeatProducts8 + -0.00476358575434 *
GRP_MntMeatProducts9 + -0.05003834735617 * GRP_MntMeatProducts10 + 0.08995329370692 *
GRP_MntSweetProducts3 + 0.14420536072862 * GRP_MntSweetProducts4 + -0.12656735985005 *
GRP_MntSweetProducts5 + -0.03927173602614 * GRP_MntSweetProducts6 + 0.11985794354261 *
GRP_MntSweetProducts7 + -0.03511406177491 * GRP_MntSweetProducts8 + 0.00072578123331 *
GRP_MntSweetProducts9 + -0.10392403461293 * GRP_MntSweetProducts10 + -0.05182683414566 *
GRP_MntWines2 + -0.12225589796854 * GRP_MntWines3 + -0.00836365672389 * GRP_MntWines4 +
0.01817080496827 * GRP_MntWines5 + 0.00139854456371 * GRP_MntWines6 + 0.11415329329768 *
GRP_MntWines7 + -0.07157344425572 * GRP_MntWines8 + -0.10015424425022 * GRP_MntWines9 +
0.01183545951543 * GRP_MntWines10 + 0.01371669307975 * GRP_NumCatalogPurchases3 +
0.07907358248279 * GRP_NumCatalogPurchases4 + 0.01239764907034 * GRP_NumCatalogPurchases5 +
-0.04021922540013 * GRP_NumCatalogPurchases6 + 0.09459541866911 * GRP_NumCatalogPurchases7 +
-0.16967374745579 * GRP_NumDistPurchases2 + 0.09200080502499 * GRP_NumDistPurchases3 +
-0.10021352797437 * GRP_NumDistPurchases4 + -0.10066040841661 * GRP_NumDistPurchases5 +
0.00752147985238 * GRP_NumDistPurchases6 + 0.06652031886304 * GRP_NumDistPurchases7 +
-0.02043214836484 * GRP_NumDistPurchases8 + 0.02148909954497 * GRP_NumDistPurchases9 +
-0.08750148475271 * GRP_NumDistPurchases10 + -0.11100944378418 * GRP_NumWebPurchases2 +
0.15913249284009 * GRP_NumWebPurchases3 + 0.01344719363688 * GRP_NumWebPurchases4 +
0.05964097356376 * GRP_NumWebPurchases5 + -0.02443578971107 * GRP_NumWebPurchases6 +
-0.08746113819167 * GRP_NumWebPurchases7 + -0.05128856330268 * GRP_NumWebPurchases8 +
-0.05875299359354 * GRP_NumWebVisitsMonth2 + 0.07755855794482 * GRP_NumWebVisitsMonth3 +
-0.07517161675954 * GRP_NumWebVisitsMonth4 + 0.05144332977229 * GRP_NumWebVisitsMonth5 +
0.18297745072296 * GRP_NumWebVisitsMonth6 + 0.06164490867457 * GRP_NumWebVisitsMonth7 +
0.04580284323085 * GRP_NumWebVisitsMonth8 + -0.06378765632552 * GRP_RFMstat2 +
0.02170099547671 * GRP_RFMstat3 + 0.05641050433358 * GRP_RFMstat4 + -0.01875867792846 *
GRP_RFMstat5 + -0.02966367663118 * GRP_RFMstat6 + 0.06778581692325 * GRP_RFMstat7 +
0.08472702734665 * GRP_RFMstat8 + -0.07513817936554 * GRP_RFMstat9 + -0.09054195031681 *
GRP_RFMstat10 + 0.09962266457073 * GRP_RMntFrq2 + 0.0269861046733 * GRP_RMntFrq3 +
-0.03854288653601 * GRP_RMntFrq4 + -0.19936014666985 * GRP_RMntFrq5 + -0.02515671079355 *
GRP_RMntFrq6 + 0.04869097060418 * GRP_RMntFrq7 + -0.10622821231311 * GRP_RMntFrq8 +
-0.16450480022836 * GRP_RMntFrq9 + 0.08581508554974 * GRP_RMntFrq10 + 0.0101644001149 *
GRP_Recency2 + 0.04563803568067 * GRP_Recency3 + -0.12616695833869 * GRP_Recency4 +
-0.12673939537116 * GRP_Recency5 + -0.09667218383464 * GRP_Recency6 + 0.18574081401557 *
GRP_Recency7 + -0.06904154623978 * GRP_Recency8 + 0.14085181924583 * GRP_Recency9 +
0.09795171549035 * GRP_Recency10 ;
1014742   +   H11  =    -0.42454680093166 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.42454680093166 + H11 ;
1014743   +   H12  =    -0.24175207531939 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.24175207531939 + H12 ;
1014744   +   H13  =     -0.3275857158264 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.3275857158264 + H13 ;
1014745   +   H14  =     -0.8506199830485 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.8506199830485 + H14 ;
1014746   +   H15  =    -0.51670887519827 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.51670887519827 + H15 ;
1014747   +   H16  =     1.12226016334851 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 1.12226016334851 + H16 ;
1014748   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1014749   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1014750   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1014751   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1014752   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1014753   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1014754   +END;
MPRINT(EM_DIAGRAM):   END;
1014755   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1014756   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1014757   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1014758   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1014759   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1014760   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1014761   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1014762   +END;
MPRINT(EM_DIAGRAM):   END;
1014763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1014764   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1014765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1014766   +
1014767   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1014768   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1014769   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1014770   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1014771   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1014772   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1014773   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1014774   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1014775   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1014776   +end;
MPRINT(EM_DIAGRAM):   end;
1014777   +else do;
MPRINT(EM_DIAGRAM):   else do;
1014778   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1014779   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1014780   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1014781   +   end;
MPRINT(EM_DIAGRAM):   end;
1014782   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1014783   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1014784   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1014785   +   end;
MPRINT(EM_DIAGRAM):   end;
1014786   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1014787   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1014788   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1014789   +   end;
MPRINT(EM_DIAGRAM):   end;
1014790   +end;
MPRINT(EM_DIAGRAM):   end;
1014791   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1014792   +   P_DepVar1  =     3.47433172236781 * H11  +     3.54768053440586 * H12
1014793   +          +      7.2593084534657 * H13  +    -2.22651417004259 * H14
1014794   +          +    -1.72657232208442 * H15  +     0.20378362763414 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.47433172236781 * H11 + 3.54768053440586 * H12 +
7.2593084534657 * H13 + -2.22651417004259 * H14 + -1.72657232208442 * H15 + 0.20378362763414 *
H16 ;
1014795   +   P_DepVar1  =     -1.6184674510088 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.6184674510088 + P_DepVar1 ;
1014796   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1014797   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1014798   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1014799   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1014800   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1014801   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1014802   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1014803   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1014804   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1014805   +END;
MPRINT(EM_DIAGRAM):   END;
1014806   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1014807   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1014808   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1014809   +END;
MPRINT(EM_DIAGRAM):   END;
1014810   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1014811   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1014812   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1014813   +END;
MPRINT(EM_DIAGRAM):   END;
1014814   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1014815   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1014816   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1014817   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1014818   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1014819   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1014820   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1014821   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1014822   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1014823   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1014824   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1014825   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1014826   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1014827   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1014828   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1014829   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1014830   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1014831   +END;
MPRINT(EM_DIAGRAM):   END;
1014832   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1014833   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1014834   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1014835   +drop
1014836   +H11
1014837   +H12
1014838   +H13
1014839   +H14
1014840   +H15
1014841   +H16
1014842   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1014843   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1014844    run;
 
NOTE: DATA STEP view saved on file EMWS8.NEURAL23_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.11 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.11 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1014845    quit;
1014846    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1014847    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1014848    * Neural23: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural23: Computing metadata for TRAIN data;
1014849    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.NEURAL23_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural23_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural23_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural23_TRAIN out=WORK.M2A6YX9V noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2A6YX9V;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2A6YX9V(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2A6YX9V;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2A6YX9V;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0RSMB48 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0RSMB48;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0RSMB48;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M20QEAM3(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0RSMB48;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0RSMB48;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0RSMB48;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0RSMB48;
MPRINT(EMADVISECOLUMNS):   set WORK.M0RSMB48;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural23";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural23";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural23: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1015161    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1015162    set EMWS8.Neural23_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_EMINFO;
1015163    where DATA='Neural23' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural23' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
1015164    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL23_EMINFO.
      WHERE (DATA='Neural23') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1015165    data EMWS8.Neural23_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural23_EMINFO;
1015166    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1015167    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1015168    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.NEURAL23_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1015172    run;
1015173    data EMWS8.Neural23_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_EMINFO;
1015174    set EMWS8.Neural23_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_EMINFO WORK.MODELTEMP_INFO;
1015175    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.NEURAL23_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL23_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1015176    proc sort data = EMWS8.Neural23_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural23_EMINFO NOTHREADS;
1015177    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1015178    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.NEURAL23_EMINFO.
NOTE: The data set EMWS8.NEURAL23_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1015179    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1015180    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1015181    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1015182    proc sort data = EMWS8.Neural23_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural23_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1015183    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1015184    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL23_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1015185    data EMWS8.Neural23_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_EMINFO;
1015186    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1015187    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1015188    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL23_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1015189    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1015190    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1015191    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1015192    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS8.NEURAL23_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS8.NEURAL23_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.42 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                16.42 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1D7Y3YY
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1D7Y3YY new;
MPRINT(EM_DIAGRAM):   run;
1015216    data EMWS8.Neural23_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):    data EMWS8.Neural23_EMOUTFIT(rename=(_NAME_=TARGET));
1015217    set EMWS8.Neural23_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_OUTFIT(where=(_NAME_ eq 'OVERALL'));
1015218    label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
1015219    if _NAME_='OVERALL' then _NAME_='DepVar';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='DepVar';
1015220    drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
1015221    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL23_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS8.NEURAL23_EMOUTFIT has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1015222    proc sort data=EMWS8.Neural23_EMOUTFIT nodupkey;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural23_EMOUTFIT nodupkey;
1015223    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1015224    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL23_EMOUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS8.NEURAL23_EMOUTFIT has 1 observations and 35 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1015225    data EMWS8.Neural23_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural23_EMOUTFIT;
1015226    set EMWS8.Neural23_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_EMOUTFIT;
1015227    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1015228    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
1015228  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1015229    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1015230    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL23_EMOUTFIT.
NOTE: The data set EMWS8.NEURAL23_EMOUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1015231    proc sort data=EMWS8.Neural23_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural23_EMREPORTFIT nothreads;
1015232    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1015233    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.NEURAL23_EMREPORTFIT.
NOTE: The data set EMWS8.NEURAL23_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1015234    %let _EMwarndup = 0;
1015235    %let _EMtargetdup =;
1015236    %let _EMASEtargetdup =;
1015237    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1015238    set EMWS8.Neural23_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_EMOUTFIT;
1015239    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1015240    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1015241    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1015242    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1015243    end;
MPRINT(EM_DIAGRAM):   end;
1015244    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL23_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1015245    proc sort data=EMWS8.BINNING_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.BINNING_CMeta_TRAIN out=WORK.SUBSETINMETA;
1015246    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1015247    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set EMWS8.BINNING_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 53 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1015248    proc sort data=EMWS8.Neural23_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural23_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
1015249    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1015250    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 51 observations read from the data set EMWS8.NEURAL23_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 51 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1015251    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1015252    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1015253    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1015254    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 51 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 53 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1015255    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1015256    set EMWS8.Neural23_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_CMeta_TRAIN;
1015257    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1015257  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1015258    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.NEURAL23_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1015259    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1015260    set EMWS8.Neural23_TRAIN(keep=
1015261    F_DepVar
1015262    I_DepVar
1015263    P_DepVar0
1015264    P_DepVar1
1015265    R_DepVar0
1015266    R_DepVar1
1015267    U_DepVar
1015268    _WARN_
1015269    DepVar
1015270    );
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1015271    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.NEURAL23_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL23_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Neural23_0YR4069 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Neural23_0YR4069;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Neural23_0YR4069(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural23_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Neural23_0YR4069;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Neural23_0YR4069;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural23_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 2.605819E-7 OVLMAX 0.9999755765 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1019537    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1019538    set EMWS8.Neural23_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_CMeta_TRAIN;
1019539    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1019539  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1019540    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.NEURAL23_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1019541    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1019542    set EMWS8.Neural23_VALIDATE(keep=
1019543    F_DepVar
1019544    I_DepVar
1019545    P_DepVar0
1019546    P_DepVar1
1019547    R_DepVar0
1019548    R_DepVar1
1019549    U_DepVar
1019550    _WARN_
1019551    DepVar
1019552    );
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1019553    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: View EMWS8.NEURAL23_VALIDATE.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.BINNING_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.NEURAL23_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Neural23_0NBJTZJ nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Neural23_0NBJTZJ;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Neural23_0NBJTZJ(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural23_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_EMCLASSIFICATION WORK.Neural23_0NBJTZJ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Neural23_0NBJTZJ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural23_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 3.4204813E-7 OVLMAX 0.9996655869 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1023828    %let _cn = %sysfunc(getoption(CENTER));
1023829    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1023830    proc print data=EMWS8.Neural23_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Neural23_EMREPORTFIT noobs label;
1023831    var STAT LABEL TRAIN
1023832    VALIDATE
1023833    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1023834    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1023835    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1023836    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1023837    run;
 
NOTE: There were 21 observations read from the data set EMWS8.NEURAL23_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 717.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1023838    title10;
MPRINT(EM_DIAGRAM):   title10;
1023839    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1023840    proc sort data=EMWS8.Neural23_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural23_EMCLASSIFICATION nothreads;
1023841    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1023842    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.NEURAL23_EMCLASSIFICATION.
NOTE: The data set EMWS8.NEURAL23_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1023843    %let _cn = %sysfunc(getoption(CENTER));
1023844    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1023845    proc print data=EMWS8.Neural23_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Neural23_EMCLASSIFICATION noobs label;
1023846    var from into pct_row pct_col count percent
1023847    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1023848    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1023849    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1023850    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1023851    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1023852    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1023853    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1023854    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1023855    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1023856    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1023857    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1023858    run;
 
NOTE: There were 8 observations read from the data set EMWS8.NEURAL23_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 718.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1023859    title9;
MPRINT(EM_DIAGRAM):   title9;
1023860    title10;
MPRINT(EM_DIAGRAM):   title10;
1023861    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1023862    %let _cn = %sysfunc(getoption(CENTER));
1023863    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1023864    data EMWS8.Neural23_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_EMEVENTREPORT;
1023865    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1023865  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1023866    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1023866  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1023866  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1023866  ! FALSEEVENT
1023867    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1023867  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1023867  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1023868       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1023869    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1023870    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1023871    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1023872    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1023873    set EMWS8.Neural23_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_EMEVENTREPORT;
1023874    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.NEURAL23_EMEVENTREPORT.
NOTE: The data set EMWS8.NEURAL23_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1023875    proc print data=EMWS8.Neural23_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Neural23_EMEVENTREPORT noobs label;
1023876    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1023877    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1023878    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1023879    run;
 
NOTE: There were 2 observations read from the data set EMWS8.NEURAL23_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 719.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1023880    title10;
MPRINT(EM_DIAGRAM):   title10;
1023881    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1023882    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1023883    modify Neural23_EMRANK;
MPRINT(EM_DIAGRAM):   modify Neural23_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1023884    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1023885    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1023885  ! ;
MPRINT(EM_DIAGRAM):   run;
1023886    run;
 
NOTE: MODIFY was successful for EMWS8.NEURAL23_EMRANK.DATA.
1023887    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.18 seconds
      cpu time            0.17 seconds
 
 
1023888    %let _cn = %sysfunc(getoption(CENTER));
1023889    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1023890    proc print data=EMWS8.Neural23_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Neural23_EMRANK label noobs;
1023891    var
1023892    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1023893    by
1023894    notsorted DATAROLE
1023895    notsorted TARGET
1023896    notsorted TARGETLABEL
1023897    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1023898    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1023899    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1023900    run;
 
NOTE: There were 40 observations read from the data set EMWS8.NEURAL23_EMRANK.
NOTE: The PROCEDURE PRINT printed page 720.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1023901    title10;
MPRINT(EM_DIAGRAM):   title10;
1023902    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1023903    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1023904    modify Neural23_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Neural23_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1023905    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1023905  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1023906    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1023906  ! ;
MPRINT(EM_DIAGRAM):   run;
1023907    run;
 
NOTE: MODIFY was successful for EMWS8.NEURAL23_EMSCOREDIST.DATA.
1023908    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.19 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Neural23_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
