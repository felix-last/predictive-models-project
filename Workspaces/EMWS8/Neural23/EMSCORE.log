MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "16. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.14 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                16. April 2016
Time:                20.14 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2O23IPG 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2O23IPG new;
MPRINT(EM_DIAGRAM):   run;
591061     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
591062     set EMWS8.Neural23_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_OUTKEY;
591063     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
591064     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set EMWS8.NEURAL23_OUTKEY.
NOTE: The data set WORK.OUTKEY has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

591065     filename emflow
591065   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural23: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
591066     *------------------------------------------------------------*;
591067     * Neural23: Scoring DATA data;
591068     *------------------------------------------------------------*;
591069     data EMWS8.Neural23_TRAIN
591070     / view=EMWS8.Neural23_TRAIN
591071     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_TRAIN / view=EMWS8.Neural23_TRAIN ;
591072     set EMWS8.BINNING_TRAIN
591073     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN ;
591074     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas.
591075    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
591076    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
591077    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
591078    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
591079    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
591080    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
591081    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
591082    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
591083    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
591084    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
591085    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
591086    +LENGTH _WARN_ $4
591087    +      F_DepVar  $ 12
591088    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
591089    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
591090    +
591091    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
591092    +
591093    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
591094    +
591095    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
591096    +
591097    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
591098    +
591099    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
591100    +
591101    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
591102    +
591103    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
591104    +
591105    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
591106    +
591107    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
591108    +
591109    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
591110    +
591111    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
591112    +
591113    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
591114    +
591115    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
591116    +
591117    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
591118    +
591119    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
591120    +
591121    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
591122    +
591123    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
591124    +
591125    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
591126    +
591127    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
591128    +
591129    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
591130    +
591131    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
591132    +
591133    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
591134    +
591135    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
591136    +
591137    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
591138    +
591139    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
591140    +
591141    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
591142    +
591143    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
591144    +
591145    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
591146    +
591147    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
591148    +
591149    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
591150    +
591151    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
591152    +
591153    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
591154    +
591155    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
591156    +
591157    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
591158    +
591159    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
591160    +
591161    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
591162    +
591163    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
591164    +
591165    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
591166    +
591167    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
591168    +
591169    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
591170    +
591171    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
591172    +
591173    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
591174    +
591175    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
591176    +
591177    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
591178    +
591179    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
591180    +
591181    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
591182    +
591183    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
591184    +
591185    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
591186    +
591187    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
591188    +
591189    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
591190    +
591191    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
591192    +
591193    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
591194    +
591195    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
591196    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
591197    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
591198    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
591199    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
591200    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591201    +end;
MPRINT(EM_DIAGRAM):   end;
591202    +else do;
MPRINT(EM_DIAGRAM):   else do;
591203    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
591204    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
591205    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
591206    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
591207    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
591208    +   end;
MPRINT(EM_DIAGRAM):   end;
591209    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
591210    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
591211    +   end;
MPRINT(EM_DIAGRAM):   end;
591212    +   else do;
MPRINT(EM_DIAGRAM):   else do;
591213    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
591214    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
591215    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591216    +   end;
MPRINT(EM_DIAGRAM):   end;
591217    +end;
MPRINT(EM_DIAGRAM):   end;
591218    +
591219    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
591220    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
591221    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
591222    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
591223    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
591224    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
591225    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
591226    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591227    +end;
MPRINT(EM_DIAGRAM):   end;
591228    +else do;
MPRINT(EM_DIAGRAM):   else do;
591229    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
591230    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
591231    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
591232    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
591233    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
591234    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
591235    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
591236    +   end;
MPRINT(EM_DIAGRAM):   end;
591237    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
591238    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
591239    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
591240    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
591241    +   end;
MPRINT(EM_DIAGRAM):   end;
591242    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
591243    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
591244    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
591245    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
591246    +   end;
MPRINT(EM_DIAGRAM):   end;
591247    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
591248    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
591249    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
591250    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
591251    +   end;
MPRINT(EM_DIAGRAM):   end;
591252    +   else do;
MPRINT(EM_DIAGRAM):   else do;
591253    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
591254    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
591255    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
591256    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
591257    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591258    +   end;
MPRINT(EM_DIAGRAM):   end;
591259    +end;
MPRINT(EM_DIAGRAM):   end;
591260    +
591261    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
591262    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
591263    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
591264    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
591265    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
591266    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
591267    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
591268    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591269    +end;
MPRINT(EM_DIAGRAM):   end;
591270    +else do;
MPRINT(EM_DIAGRAM):   else do;
591271    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
591272    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
591273    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
591274    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
591275    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
591276    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
591277    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
591278    +   end;
MPRINT(EM_DIAGRAM):   end;
591279    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
591280    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
591281    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
591282    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
591283    +   end;
MPRINT(EM_DIAGRAM):   end;
591284    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
591285    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
591286    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
591287    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
591288    +   end;
MPRINT(EM_DIAGRAM):   end;
591289    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
591290    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
591291    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
591292    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
591293    +   end;
MPRINT(EM_DIAGRAM):   end;
591294    +   else do;
MPRINT(EM_DIAGRAM):   else do;
591295    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
591296    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
591297    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
591298    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
591299    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591300    +   end;
MPRINT(EM_DIAGRAM):   end;
591301    +end;
MPRINT(EM_DIAGRAM):   end;
591302    +
591303    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
591304    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
591305    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
591306    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
591307    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
591308    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
591309    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
591310    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591311    +end;
MPRINT(EM_DIAGRAM):   end;
591312    +else do;
MPRINT(EM_DIAGRAM):   else do;
591313    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
591314    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
591315    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
591316    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
591317    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
591318    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
591319    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
591320    +   end;
MPRINT(EM_DIAGRAM):   end;
591321    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
591322    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
591323    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
591324    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
591325    +   end;
MPRINT(EM_DIAGRAM):   end;
591326    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
591327    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
591328    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
591329    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
591330    +   end;
MPRINT(EM_DIAGRAM):   end;
591331    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
591332    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
591333    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
591334    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
591335    +   end;
MPRINT(EM_DIAGRAM):   end;
591336    +   else do;
MPRINT(EM_DIAGRAM):   else do;
591337    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
591338    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
591339    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
591340    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
591341    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591342    +   end;
MPRINT(EM_DIAGRAM):   end;
591343    +end;
MPRINT(EM_DIAGRAM):   end;
591344    +
591345    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
591346    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
591347    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
591348    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
591349    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
591350    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
591351    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
591352    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591353    +end;
MPRINT(EM_DIAGRAM):   end;
591354    +else do;
MPRINT(EM_DIAGRAM):   else do;
591355    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
591356    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
591357    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
591358    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
591359    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
591360    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
591361    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
591362    +   end;
MPRINT(EM_DIAGRAM):   end;
591363    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
591364    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
591365    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
591366    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
591367    +   end;
MPRINT(EM_DIAGRAM):   end;
591368    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
591369    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
591370    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
591371    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
591372    +   end;
MPRINT(EM_DIAGRAM):   end;
591373    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
591374    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
591375    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
591376    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
591377    +   end;
MPRINT(EM_DIAGRAM):   end;
591378    +   else do;
MPRINT(EM_DIAGRAM):   else do;
591379    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
591380    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
591381    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
591382    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
591383    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591384    +   end;
MPRINT(EM_DIAGRAM):   end;
591385    +end;
MPRINT(EM_DIAGRAM):   end;
591386    +
591387    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
591388    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
591389    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
591390    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
591391    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
591392    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
591393    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
591394    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591395    +end;
MPRINT(EM_DIAGRAM):   end;
591396    +else do;
MPRINT(EM_DIAGRAM):   else do;
591397    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
591398    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
591399    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
591400    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
591401    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
591402    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
591403    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
591404    +   end;
MPRINT(EM_DIAGRAM):   end;
591405    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
591406    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
591407    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
591408    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
591409    +   end;
MPRINT(EM_DIAGRAM):   end;
591410    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
591411    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
591412    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
591413    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
591414    +   end;
MPRINT(EM_DIAGRAM):   end;
591415    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
591416    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
591417    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
591418    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
591419    +   end;
MPRINT(EM_DIAGRAM):   end;
591420    +   else do;
MPRINT(EM_DIAGRAM):   else do;
591421    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
591422    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
591423    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
591424    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
591425    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591426    +   end;
MPRINT(EM_DIAGRAM):   end;
591427    +end;
MPRINT(EM_DIAGRAM):   end;
591428    +
591429    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
591430    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
591431    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
591432    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
591433    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
591434    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
591435    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
591436    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591437    +end;
MPRINT(EM_DIAGRAM):   end;
591438    +else do;
MPRINT(EM_DIAGRAM):   else do;
591439    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
591440    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
591441    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
591442    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
591443    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
591444    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
591445    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
591446    +   end;
MPRINT(EM_DIAGRAM):   end;
591447    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
591448    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
591449    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
591450    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
591451    +   end;
MPRINT(EM_DIAGRAM):   end;
591452    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
591453    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
591454    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
591455    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
591456    +   end;
MPRINT(EM_DIAGRAM):   end;
591457    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
591458    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
591459    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
591460    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
591461    +   end;
MPRINT(EM_DIAGRAM):   end;
591462    +   else do;
MPRINT(EM_DIAGRAM):   else do;
591463    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
591464    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
591465    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
591466    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
591467    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591468    +   end;
MPRINT(EM_DIAGRAM):   end;
591469    +end;
MPRINT(EM_DIAGRAM):   end;
591470    +
591471    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
591472    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
591473    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
591474    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
591475    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
591476    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
591477    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
591478    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591479    +end;
MPRINT(EM_DIAGRAM):   end;
591480    +else do;
MPRINT(EM_DIAGRAM):   else do;
591481    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
591482    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
591483    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
591484    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
591485    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
591486    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
591487    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
591488    +   end;
MPRINT(EM_DIAGRAM):   end;
591489    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
591490    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
591491    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
591492    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
591493    +   end;
MPRINT(EM_DIAGRAM):   end;
591494    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
591495    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
591496    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
591497    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
591498    +   end;
MPRINT(EM_DIAGRAM):   end;
591499    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
591500    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
591501    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
591502    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
591503    +   end;
MPRINT(EM_DIAGRAM):   end;
591504    +   else do;
MPRINT(EM_DIAGRAM):   else do;
591505    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
591506    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
591507    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
591508    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
591509    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591510    +   end;
MPRINT(EM_DIAGRAM):   end;
591511    +end;
MPRINT(EM_DIAGRAM):   end;
591512    +
591513    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
591514    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
591515    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
591516    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
591517    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
591518    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
591519    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591520    +end;
MPRINT(EM_DIAGRAM):   end;
591521    +else do;
MPRINT(EM_DIAGRAM):   else do;
591522    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
591523    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
591524    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
591525    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
591526    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
591527    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
591528    +   end;
MPRINT(EM_DIAGRAM):   end;
591529    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
591530    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
591531    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
591532    +   end;
MPRINT(EM_DIAGRAM):   end;
591533    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
591534    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
591535    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
591536    +   end;
MPRINT(EM_DIAGRAM):   end;
591537    +   else do;
MPRINT(EM_DIAGRAM):   else do;
591538    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
591539    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
591540    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
591541    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591542    +   end;
MPRINT(EM_DIAGRAM):   end;
591543    +end;
MPRINT(EM_DIAGRAM):   end;
591544    +
591545    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
591546    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
591547    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
591548    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
591549    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
591550    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
591551    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
591552    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591553    +end;
MPRINT(EM_DIAGRAM):   end;
591554    +else do;
MPRINT(EM_DIAGRAM):   else do;
591555    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
591556    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
591557    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
591558    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
591559    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
591560    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
591561    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
591562    +   end;
MPRINT(EM_DIAGRAM):   end;
591563    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
591564    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
591565    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
591566    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
591567    +   end;
MPRINT(EM_DIAGRAM):   end;
591568    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
591569    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
591570    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
591571    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
591572    +   end;
MPRINT(EM_DIAGRAM):   end;
591573    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
591574    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
591575    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
591576    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
591577    +   end;
MPRINT(EM_DIAGRAM):   end;
591578    +   else do;
MPRINT(EM_DIAGRAM):   else do;
591579    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
591580    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
591581    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
591582    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
591583    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591584    +   end;
MPRINT(EM_DIAGRAM):   end;
591585    +end;
MPRINT(EM_DIAGRAM):   end;
591586    +
591587    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
591588    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
591589    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
591590    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
591591    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
591592    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
591593    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
591594    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591595    +end;
MPRINT(EM_DIAGRAM):   end;
591596    +else do;
MPRINT(EM_DIAGRAM):   else do;
591597    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
591598    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
591599    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
591600    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
591601    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
591602    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
591603    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
591604    +   end;
MPRINT(EM_DIAGRAM):   end;
591605    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
591606    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
591607    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
591608    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
591609    +   end;
MPRINT(EM_DIAGRAM):   end;
591610    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
591611    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
591612    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
591613    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
591614    +   end;
MPRINT(EM_DIAGRAM):   end;
591615    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
591616    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
591617    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
591618    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
591619    +   end;
MPRINT(EM_DIAGRAM):   end;
591620    +   else do;
MPRINT(EM_DIAGRAM):   else do;
591621    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
591622    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
591623    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
591624    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
591625    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591626    +   end;
MPRINT(EM_DIAGRAM):   end;
591627    +end;
MPRINT(EM_DIAGRAM):   end;
591628    +
591629    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
591630    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
591631    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
591632    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
591633    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
591634    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
591635    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
591636    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591637    +end;
MPRINT(EM_DIAGRAM):   end;
591638    +else do;
MPRINT(EM_DIAGRAM):   else do;
591639    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
591640    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
591641    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
591642    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
591643    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
591644    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
591645    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
591646    +   end;
MPRINT(EM_DIAGRAM):   end;
591647    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
591648    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
591649    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
591650    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
591651    +   end;
MPRINT(EM_DIAGRAM):   end;
591652    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
591653    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
591654    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
591655    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
591656    +   end;
MPRINT(EM_DIAGRAM):   end;
591657    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
591658    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
591659    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
591660    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
591661    +   end;
MPRINT(EM_DIAGRAM):   end;
591662    +   else do;
MPRINT(EM_DIAGRAM):   else do;
591663    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
591664    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
591665    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
591666    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
591667    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591668    +   end;
MPRINT(EM_DIAGRAM):   end;
591669    +end;
MPRINT(EM_DIAGRAM):   end;
591670    +
591671    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
591672    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
591673    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
591674    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
591675    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
591676    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
591677    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
591678    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591679    +end;
MPRINT(EM_DIAGRAM):   end;
591680    +else do;
MPRINT(EM_DIAGRAM):   else do;
591681    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
591682    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
591683    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
591684    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
591685    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
591686    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
591687    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
591688    +   end;
MPRINT(EM_DIAGRAM):   end;
591689    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
591690    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
591691    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
591692    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
591693    +   end;
MPRINT(EM_DIAGRAM):   end;
591694    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
591695    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
591696    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
591697    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
591698    +   end;
MPRINT(EM_DIAGRAM):   end;
591699    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
591700    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
591701    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
591702    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
591703    +   end;
MPRINT(EM_DIAGRAM):   end;
591704    +   else do;
MPRINT(EM_DIAGRAM):   else do;
591705    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
591706    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
591707    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
591708    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
591709    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591710    +   end;
MPRINT(EM_DIAGRAM):   end;
591711    +end;
MPRINT(EM_DIAGRAM):   end;
591712    +
591713    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
591714    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
591715    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
591716    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
591717    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
591718    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
591719    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
591720    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591721    +end;
MPRINT(EM_DIAGRAM):   end;
591722    +else do;
MPRINT(EM_DIAGRAM):   else do;
591723    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
591724    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
591725    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
591726    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
591727    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
591728    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
591729    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
591730    +   end;
MPRINT(EM_DIAGRAM):   end;
591731    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
591732    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
591733    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
591734    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
591735    +   end;
MPRINT(EM_DIAGRAM):   end;
591736    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
591737    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
591738    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
591739    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
591740    +   end;
MPRINT(EM_DIAGRAM):   end;
591741    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
591742    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
591743    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
591744    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
591745    +   end;
MPRINT(EM_DIAGRAM):   end;
591746    +   else do;
MPRINT(EM_DIAGRAM):   else do;
591747    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
591748    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
591749    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
591750    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
591751    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
591752    +   end;
MPRINT(EM_DIAGRAM):   end;
591753    +end;
MPRINT(EM_DIAGRAM):   end;
591754    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
591755    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
591756    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
591757    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
591758    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
591759    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
591760    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
591761    +   H11  =     0.33640101965956 * GRP_AcceptedCmp52  +    -0.09458866011332 *
591762    +        GRP_Frq2  +     0.08165112288668 * GRP_Frq3  +      0.0098569396377 *
591763    +        GRP_Frq4  +    -0.10718097600137 * GRP_Income2
591764    +          +     0.24913133317457 * GRP_Income3  +     0.08606607454597 *
591765    +        GRP_Income4  +    -0.43083911296417 * GRP_Mnt2
591766    +          +    -0.35952383025836 * GRP_Mnt3  +     0.15746774085254 * GRP_Mnt4
591767    +          +     0.03496490321939 * GRP_MntFishProducts2
591768    +          +     -0.1386775704024 * GRP_MntFishProducts3
591769    +          +     0.08185130088727 * GRP_MntFishProducts4
591770    +          +     0.20666000615395 * GRP_MntGoldProds2
591771    +          +     0.02513603537885 * GRP_MntGoldProds3
591772    +          +     0.04518515377846 * GRP_MntGoldProds4
591773    +          +     0.14564741446952 * GRP_MntMeatProducts2
591774    +          +      0.0921407018606 * GRP_MntMeatProducts3
591775    +          +     0.03964574584898 * GRP_MntMeatProducts4
591776    +          +    -0.10395279216819 * GRP_MntWines2  +     0.12929231428625 *
591777    +        GRP_MntWines3  +     0.00045903854959 * GRP_MntWines4
591778    +          +    -0.03496333349231 * GRP_NumCatalogPurchases3
591779    +          +    -0.18329339773791 * GRP_NumCatalogPurchases4
591780    +          +     0.25535533392017 * GRP_NumDistPurchases2
591781    +          +     0.03881117716273 * GRP_NumDistPurchases3
591782    +          +    -0.02565551941415 * GRP_NumDistPurchases4
591783    +          +     0.31760052513768 * GRP_NumWebPurchases2
591784    +          +     0.09995149350563 * GRP_NumWebPurchases3
591785    +          +    -0.03267834031943 * GRP_NumWebPurchases4
591786    +          +     0.20523977712748 * GRP_RFMstat2  +    -0.05606160362426 *
591787    +        GRP_RFMstat3  +     0.08166835774422 * GRP_RFMstat4
591788    +          +    -0.02802261136507 * GRP_RMntFrq2  +     0.04530681268814 *
591789    +        GRP_RMntFrq3  +     0.17075869124019 * GRP_RMntFrq4
591790    +          +    -0.07437386313878 * GRP_Recency2  +    -0.03620176560114 *
591791    +        GRP_Recency3  +     -0.1829690397052 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = 0.33640101965956 * GRP_AcceptedCmp52 + -0.09458866011332 * 
GRP_Frq2 + 0.08165112288668 * GRP_Frq3 + 0.0098569396377 * GRP_Frq4 + -0.10718097600137 * 
GRP_Income2 + 0.24913133317457 * GRP_Income3 + 0.08606607454597 * GRP_Income4 + 
-0.43083911296417 * GRP_Mnt2 + -0.35952383025836 * GRP_Mnt3 + 0.15746774085254 * GRP_Mnt4 + 
0.03496490321939 * GRP_MntFishProducts2 + -0.1386775704024 * GRP_MntFishProducts3 + 
0.08185130088727 * GRP_MntFishProducts4 + 0.20666000615395 * GRP_MntGoldProds2 + 
0.02513603537885 * GRP_MntGoldProds3 + 0.04518515377846 * GRP_MntGoldProds4 + 0.14564741446952 
* GRP_MntMeatProducts2 + 0.0921407018606 * GRP_MntMeatProducts3 + 0.03964574584898 * 
GRP_MntMeatProducts4 + -0.10395279216819 * GRP_MntWines2 + 0.12929231428625 * GRP_MntWines3 + 
0.00045903854959 * GRP_MntWines4 + -0.03496333349231 * GRP_NumCatalogPurchases3 + 
-0.18329339773791 * GRP_NumCatalogPurchases4 + 0.25535533392017 * GRP_NumDistPurchases2 + 
0.03881117716273 * GRP_NumDistPurchases3 + -0.02565551941415 * GRP_NumDistPurchases4 + 
0.31760052513768 * GRP_NumWebPurchases2 + 0.09995149350563 * GRP_NumWebPurchases3 + 
-0.03267834031943 * GRP_NumWebPurchases4 + 0.20523977712748 * GRP_RFMstat2 + -0.05606160362426 
* GRP_RFMstat3 + 0.08166835774422 * GRP_RFMstat4 + -0.02802261136507 * GRP_RMntFrq2 + 
0.04530681268814 * GRP_RMntFrq3 + 0.17075869124019 * GRP_RMntFrq4 + -0.07437386313878 * 
GRP_Recency2 + -0.03620176560114 * GRP_Recency3 + -0.1829690397052 * GRP_Recency4 ;
591792    +   H12  =    -0.44053040668419 * GRP_AcceptedCmp52  +     0.39130488780547 *
591793    +        GRP_Frq2  +    -0.05339083882864 * GRP_Frq3  +     0.00231451089906 *
591794    +        GRP_Frq4  +      0.5831587240061 * GRP_Income2
591795    +          +     0.54852848249408 * GRP_Income3  +     -0.4598479622494 *
591796    +        GRP_Income4  +     0.04804779326921 * GRP_Mnt2
591797    +          +    -0.18484356222731 * GRP_Mnt3  +     0.03549703658034 * GRP_Mnt4
591798    +          +     0.39885742453554 * GRP_MntFishProducts2
591799    +          +     0.15761355687754 * GRP_MntFishProducts3
591800    +          +    -0.21271471925571 * GRP_MntFishProducts4
591801    +          +     -0.1972927903123 * GRP_MntGoldProds2
591802    +          +     0.03399122417272 * GRP_MntGoldProds3
591803    +          +    -0.02558670857298 * GRP_MntGoldProds4
591804    +          +    -0.41984327217018 * GRP_MntMeatProducts2
591805    +          +     0.05051071020912 * GRP_MntMeatProducts3
591806    +          +     0.02213191751142 * GRP_MntMeatProducts4
591807    +          +     0.27725513562646 * GRP_MntWines2  +    -0.13825638111274 *
591808    +        GRP_MntWines3  +     0.10174302336793 * GRP_MntWines4
591809    +          +    -0.13050806508623 * GRP_NumCatalogPurchases3
591810    +          +     0.18000903281461 * GRP_NumCatalogPurchases4
591811    +          +     -0.5134802042985 * GRP_NumDistPurchases2
591812    +          +     -0.0517830924312 * GRP_NumDistPurchases3
591813    +          +    -0.16980153882394 * GRP_NumDistPurchases4
591814    +          +     0.03868274112159 * GRP_NumWebPurchases2
591815    +          +     0.16193614709489 * GRP_NumWebPurchases3
591816    +          +      0.0269423998237 * GRP_NumWebPurchases4
591817    +          +    -0.32452106975443 * GRP_RFMstat2  +    -0.21611965835421 *
591818    +        GRP_RFMstat3  +    -0.11926055719327 * GRP_RFMstat4
591819    +          +     0.21187682021828 * GRP_RMntFrq2  +     0.08976835265364 *
591820    +        GRP_RMntFrq3  +    -0.20787348857522 * GRP_RMntFrq4
591821    +          +     0.68804853934306 * GRP_Recency2  +     0.17422440486451 *
591822    +        GRP_Recency3  +    -0.18452599729833 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = -0.44053040668419 * GRP_AcceptedCmp52 + 0.39130488780547 * 
GRP_Frq2 + -0.05339083882864 * GRP_Frq3 + 0.00231451089906 * GRP_Frq4 + 0.5831587240061 * 
GRP_Income2 + 0.54852848249408 * GRP_Income3 + -0.4598479622494 * GRP_Income4 + 
0.04804779326921 * GRP_Mnt2 + -0.18484356222731 * GRP_Mnt3 + 0.03549703658034 * GRP_Mnt4 + 
0.39885742453554 * GRP_MntFishProducts2 + 0.15761355687754 * GRP_MntFishProducts3 + 
-0.21271471925571 * GRP_MntFishProducts4 + -0.1972927903123 * GRP_MntGoldProds2 + 
0.03399122417272 * GRP_MntGoldProds3 + -0.02558670857298 * GRP_MntGoldProds4 + 
-0.41984327217018 * GRP_MntMeatProducts2 + 0.05051071020912 * GRP_MntMeatProducts3 + 
0.02213191751142 * GRP_MntMeatProducts4 + 0.27725513562646 * GRP_MntWines2 + -0.13825638111274 
* GRP_MntWines3 + 0.10174302336793 * GRP_MntWines4 + -0.13050806508623 * 
GRP_NumCatalogPurchases3 + 0.18000903281461 * GRP_NumCatalogPurchases4 + -0.5134802042985 * 
GRP_NumDistPurchases2 + -0.0517830924312 * GRP_NumDistPurchases3 + -0.16980153882394 * 
GRP_NumDistPurchases4 + 0.03868274112159 * GRP_NumWebPurchases2 + 0.16193614709489 * 
GRP_NumWebPurchases3 + 0.0269423998237 * GRP_NumWebPurchases4 + -0.32452106975443 * 
GRP_RFMstat2 + -0.21611965835421 * GRP_RFMstat3 + -0.11926055719327 * GRP_RFMstat4 + 
0.21187682021828 * GRP_RMntFrq2 + 0.08976835265364 * GRP_RMntFrq3 + -0.20787348857522 * 
GRP_RMntFrq4 + 0.68804853934306 * GRP_Recency2 + 0.17422440486451 * GRP_Recency3 + 
-0.18452599729833 * GRP_Recency4 ;
591823    +   H13  =      0.0874014291812 * GRP_AcceptedCmp52  +     0.17304198694157 *
591824    +        GRP_Frq2  +    -0.11491629051719 * GRP_Frq3  +      0.2483225021197 *
591825    +        GRP_Frq4  +    -0.05989120739582 * GRP_Income2
591826    +          +    -0.02732012571019 * GRP_Income3  +     0.20807069048689 *
591827    +        GRP_Income4  +     0.33666649935924 * GRP_Mnt2
591828    +          +      0.0642358727731 * GRP_Mnt3  +    -0.22568229208697 * GRP_Mnt4
591829    +          +    -0.12147573127033 * GRP_MntFishProducts2
591830    +          +    -0.19323607018295 * GRP_MntFishProducts3
591831    +          +     0.25863847748437 * GRP_MntFishProducts4
591832    +          +     -0.0126645668436 * GRP_MntGoldProds2
591833    +          +    -0.11323357258997 * GRP_MntGoldProds3
591834    +          +    -0.11250689806163 * GRP_MntGoldProds4
591835    +          +    -0.12545641044895 * GRP_MntMeatProducts2
591836    +          +    -0.04305442792903 * GRP_MntMeatProducts3
591837    +          +    -0.32146302728834 * GRP_MntMeatProducts4
591838    +          +    -0.00148263872712 * GRP_MntWines2  +     0.11028478479749 *
591839    +        GRP_MntWines3  +    -0.02542826671873 * GRP_MntWines4
591840    +          +    -0.03468933342665 * GRP_NumCatalogPurchases3
591841    +          +     0.06081255664838 * GRP_NumCatalogPurchases4
591842    +          +     0.09115957554684 * GRP_NumDistPurchases2
591843    +          +    -0.19448624046951 * GRP_NumDistPurchases3
591844    +          +     0.18401866660579 * GRP_NumDistPurchases4
591845    +          +    -0.30934548179162 * GRP_NumWebPurchases2
591846    +          +    -0.15569430268918 * GRP_NumWebPurchases3
591847    +          +    -0.15912290396059 * GRP_NumWebPurchases4
591848    +          +      0.3307600563141 * GRP_RFMstat2  +    -0.22709032656384 *
591849    +        GRP_RFMstat3  +      0.0673885738463 * GRP_RFMstat4
591850    +          +    -0.34782658221729 * GRP_RMntFrq2  +    -0.37292996378384 *
591851    +        GRP_RMntFrq3  +    -0.19656647007955 * GRP_RMntFrq4
591852    +          +    -0.48292133112766 * GRP_Recency2  +    -0.19998163272412 *
591853    +        GRP_Recency3  +     0.04020306752703 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = 0.0874014291812 * GRP_AcceptedCmp52 + 0.17304198694157 * GRP_Frq2 
+ -0.11491629051719 * GRP_Frq3 + 0.2483225021197 * GRP_Frq4 + -0.05989120739582 * GRP_Income2 
+ -0.02732012571019 * GRP_Income3 + 0.20807069048689 * GRP_Income4 + 0.33666649935924 * 
GRP_Mnt2 + 0.0642358727731 * GRP_Mnt3 + -0.22568229208697 * GRP_Mnt4 + -0.12147573127033 * 
GRP_MntFishProducts2 + -0.19323607018295 * GRP_MntFishProducts3 + 0.25863847748437 * 
GRP_MntFishProducts4 + -0.0126645668436 * GRP_MntGoldProds2 + -0.11323357258997 * 
GRP_MntGoldProds3 + -0.11250689806163 * GRP_MntGoldProds4 + -0.12545641044895 * 
GRP_MntMeatProducts2 + -0.04305442792903 * GRP_MntMeatProducts3 + -0.32146302728834 * 
GRP_MntMeatProducts4 + -0.00148263872712 * GRP_MntWines2 + 0.11028478479749 * GRP_MntWines3 + 
-0.02542826671873 * GRP_MntWines4 + -0.03468933342665 * GRP_NumCatalogPurchases3 + 
0.06081255664838 * GRP_NumCatalogPurchases4 + 0.09115957554684 * GRP_NumDistPurchases2 + 
-0.19448624046951 * GRP_NumDistPurchases3 + 0.18401866660579 * GRP_NumDistPurchases4 + 
-0.30934548179162 * GRP_NumWebPurchases2 + -0.15569430268918 * GRP_NumWebPurchases3 + 
-0.15912290396059 * GRP_NumWebPurchases4 + 0.3307600563141 * GRP_RFMstat2 + -0.22709032656384 
* GRP_RFMstat3 + 0.0673885738463 * GRP_RFMstat4 + -0.34782658221729 * GRP_RMntFrq2 + 
-0.37292996378384 * GRP_RMntFrq3 + -0.19656647007955 * GRP_RMntFrq4 + -0.48292133112766 * 
GRP_Recency2 + -0.19998163272412 * GRP_Recency3 + 0.04020306752703 * GRP_Recency4 ;
591854    +   H14  =    -0.06535462604618 * GRP_AcceptedCmp52  +    -0.02538966501603 *
591855    +        GRP_Frq2  +    -0.37465930862485 * GRP_Frq3  +    -0.09115714895281 *
591856    +        GRP_Frq4  +    -0.19377207233976 * GRP_Income2
591857    +          +     0.19699955617479 * GRP_Income3  +     0.18620312701109 *
591858    +        GRP_Income4  +    -0.07918752617024 * GRP_Mnt2
591859    +          +    -0.15791729955854 * GRP_Mnt3  +     0.05785915035978 * GRP_Mnt4
591860    +          +    -0.15621920593365 * GRP_MntFishProducts2
591861    +          +     0.18156570239129 * GRP_MntFishProducts3
591862    +          +    -0.19268366331472 * GRP_MntFishProducts4
591863    +          +     0.17003324763884 * GRP_MntGoldProds2
591864    +          +    -0.24315925332299 * GRP_MntGoldProds3
591865    +          +    -0.19433542142509 * GRP_MntGoldProds4
591866    +          +     0.48300099715349 * GRP_MntMeatProducts2
591867    +          +     0.04287374992788 * GRP_MntMeatProducts3
591868    +          +    -0.14772483570864 * GRP_MntMeatProducts4
591869    +          +    -0.35939710533055 * GRP_MntWines2  +      0.0814263252657 *
591870    +        GRP_MntWines3  +     0.11455106831693 * GRP_MntWines4
591871    +          +     0.28909689894797 * GRP_NumCatalogPurchases3
591872    +          +     0.35798075318799 * GRP_NumCatalogPurchases4
591873    +          +     0.26175622277157 * GRP_NumDistPurchases2
591874    +          +    -0.28134203235556 * GRP_NumDistPurchases3
591875    +          +     -0.0849885153607 * GRP_NumDistPurchases4
591876    +          +    -0.00363026409862 * GRP_NumWebPurchases2
591877    +          +    -0.18458881565534 * GRP_NumWebPurchases3
591878    +          +    -0.00054495066636 * GRP_NumWebPurchases4
591879    +          +     0.02464665365087 * GRP_RFMstat2  +    -0.04709787167688 *
591880    +        GRP_RFMstat3  +    -0.21485621631981 * GRP_RFMstat4
591881    +          +      0.0421527075159 * GRP_RMntFrq2  +     0.12266531817421 *
591882    +        GRP_RMntFrq3  +     0.34319246452663 * GRP_RMntFrq4
591883    +          +    -0.42128751178743 * GRP_Recency2  +    -0.03341002800803 *
591884    +        GRP_Recency3  +    -0.00550102888585 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = -0.06535462604618 * GRP_AcceptedCmp52 + -0.02538966501603 * 
GRP_Frq2 + -0.37465930862485 * GRP_Frq3 + -0.09115714895281 * GRP_Frq4 + -0.19377207233976 * 
GRP_Income2 + 0.19699955617479 * GRP_Income3 + 0.18620312701109 * GRP_Income4 + 
-0.07918752617024 * GRP_Mnt2 + -0.15791729955854 * GRP_Mnt3 + 0.05785915035978 * GRP_Mnt4 + 
-0.15621920593365 * GRP_MntFishProducts2 + 0.18156570239129 * GRP_MntFishProducts3 + 
-0.19268366331472 * GRP_MntFishProducts4 + 0.17003324763884 * GRP_MntGoldProds2 + 
-0.24315925332299 * GRP_MntGoldProds3 + -0.19433542142509 * GRP_MntGoldProds4 + 
0.48300099715349 * GRP_MntMeatProducts2 + 0.04287374992788 * GRP_MntMeatProducts3 + 
-0.14772483570864 * GRP_MntMeatProducts4 + -0.35939710533055 * GRP_MntWines2 + 0.0814263252657 
* GRP_MntWines3 + 0.11455106831693 * GRP_MntWines4 + 0.28909689894797 * 
GRP_NumCatalogPurchases3 + 0.35798075318799 * GRP_NumCatalogPurchases4 + 0.26175622277157 * 
GRP_NumDistPurchases2 + -0.28134203235556 * GRP_NumDistPurchases3 + -0.0849885153607 * 
GRP_NumDistPurchases4 + -0.00363026409862 * GRP_NumWebPurchases2 + -0.18458881565534 * 
GRP_NumWebPurchases3 + -0.00054495066636 * GRP_NumWebPurchases4 + 0.02464665365087 * 
GRP_RFMstat2 + -0.04709787167688 * GRP_RFMstat3 + -0.21485621631981 * GRP_RFMstat4 + 
0.0421527075159 * GRP_RMntFrq2 + 0.12266531817421 * GRP_RMntFrq3 + 0.34319246452663 * 
GRP_RMntFrq4 + -0.42128751178743 * GRP_Recency2 + -0.03341002800803 * GRP_Recency3 + 
-0.00550102888585 * GRP_Recency4 ;
591885    +   H15  =     0.20080324976316 * GRP_AcceptedCmp52  +     0.03346464595946 *
591886    +        GRP_Frq2  +    -0.46550936235158 * GRP_Frq3  +     0.11038114045006 *
591887    +        GRP_Frq4  +     0.10073875117437 * GRP_Income2
591888    +          +    -0.22683871345668 * GRP_Income3  +    -0.09384548786395 *
591889    +        GRP_Income4  +     0.43323607707701 * GRP_Mnt2
591890    +          +     0.27829480348267 * GRP_Mnt3  +     0.12638599389415 * GRP_Mnt4
591891    +          +     0.02417129110075 * GRP_MntFishProducts2
591892    +          +      0.2545897829616 * GRP_MntFishProducts3
591893    +          +    -0.29458064807823 * GRP_MntFishProducts4
591894    +          +    -0.15364697476117 * GRP_MntGoldProds2
591895    +          +      0.3170384910511 * GRP_MntGoldProds3
591896    +          +     0.43731794737697 * GRP_MntGoldProds4
591897    +          +     0.51501086483907 * GRP_MntMeatProducts2
591898    +          +     0.15231215210229 * GRP_MntMeatProducts3
591899    +          +    -0.05381144096743 * GRP_MntMeatProducts4
591900    +          +     0.13508510112509 * GRP_MntWines2  +    -0.33096430220175 *
591901    +        GRP_MntWines3  +     0.49248642584759 * GRP_MntWines4
591902    +          +     0.25386528096127 * GRP_NumCatalogPurchases3
591903    +          +     0.31775128798882 * GRP_NumCatalogPurchases4
591904    +          +     0.26152832976302 * GRP_NumDistPurchases2
591905    +          +     0.00160473771196 * GRP_NumDistPurchases3
591906    +          +      0.0013330753294 * GRP_NumDistPurchases4
591907    +          +     0.23697025371136 * GRP_NumWebPurchases2
591908    +          +     0.12394312604839 * GRP_NumWebPurchases3
591909    +          +     0.29358944454399 * GRP_NumWebPurchases4
591910    +          +      0.2711027918467 * GRP_RFMstat2  +    -0.07642391618094 *
591911    +        GRP_RFMstat3  +     0.14712184054126 * GRP_RFMstat4
591912    +          +     0.11431001806439 * GRP_RMntFrq2  +     0.06273949214332 *
591913    +        GRP_RMntFrq3  +     0.44954334169592 * GRP_RMntFrq4
591914    +          +    -0.10299484961132 * GRP_Recency2  +    -0.00660050077332 *
591915    +        GRP_Recency3  +     0.10477819043432 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = 0.20080324976316 * GRP_AcceptedCmp52 + 0.03346464595946 * GRP_Frq2 
+ -0.46550936235158 * GRP_Frq3 + 0.11038114045006 * GRP_Frq4 + 0.10073875117437 * GRP_Income2 
+ -0.22683871345668 * GRP_Income3 + -0.09384548786395 * GRP_Income4 + 0.43323607707701 * 
GRP_Mnt2 + 0.27829480348267 * GRP_Mnt3 + 0.12638599389415 * GRP_Mnt4 + 0.02417129110075 * 
GRP_MntFishProducts2 + 0.2545897829616 * GRP_MntFishProducts3 + -0.29458064807823 * 
GRP_MntFishProducts4 + -0.15364697476117 * GRP_MntGoldProds2 + 0.3170384910511 * 
GRP_MntGoldProds3 + 0.43731794737697 * GRP_MntGoldProds4 + 0.51501086483907 * 
GRP_MntMeatProducts2 + 0.15231215210229 * GRP_MntMeatProducts3 + -0.05381144096743 * 
GRP_MntMeatProducts4 + 0.13508510112509 * GRP_MntWines2 + -0.33096430220175 * GRP_MntWines3 + 
0.49248642584759 * GRP_MntWines4 + 0.25386528096127 * GRP_NumCatalogPurchases3 + 
0.31775128798882 * GRP_NumCatalogPurchases4 + 0.26152832976302 * GRP_NumDistPurchases2 + 
0.00160473771196 * GRP_NumDistPurchases3 + 0.0013330753294 * GRP_NumDistPurchases4 + 
0.23697025371136 * GRP_NumWebPurchases2 + 0.12394312604839 * GRP_NumWebPurchases3 + 
0.29358944454399 * GRP_NumWebPurchases4 + 0.2711027918467 * GRP_RFMstat2 + -0.07642391618094 * 
GRP_RFMstat3 + 0.14712184054126 * GRP_RFMstat4 + 0.11431001806439 * GRP_RMntFrq2 + 
0.06273949214332 * GRP_RMntFrq3 + 0.44954334169592 * GRP_RMntFrq4 + -0.10299484961132 * 
GRP_Recency2 + -0.00660050077332 * GRP_Recency3 + 0.10477819043432 * GRP_Recency4 ;
591916    +   H16  =      0.7597594494859 * GRP_AcceptedCmp52  +    -0.32376689593056 *
591917    +        GRP_Frq2  +    -0.07779183366163 * GRP_Frq3  +     0.11273534310895 *
591918    +        GRP_Frq4  +    -0.36089895624306 * GRP_Income2
591919    +          +    -0.38271011363759 * GRP_Income3  +     0.33282176047548 *
591920    +        GRP_Income4  +    -0.13854310872224 * GRP_Mnt2
591921    +          +    -0.31005746238746 * GRP_Mnt3  +     0.02082673800287 * GRP_Mnt4
591922    +          +     0.01224737349632 * GRP_MntFishProducts2
591923    +          +    -0.19458526368147 * GRP_MntFishProducts3
591924    +          +    -0.25187479317784 * GRP_MntFishProducts4
591925    +          +     0.01924229245332 * GRP_MntGoldProds2
591926    +          +     0.01852658027428 * GRP_MntGoldProds3
591927    +          +    -0.23305256947549 * GRP_MntGoldProds4
591928    +          +     0.13401051842966 * GRP_MntMeatProducts2
591929    +          +     0.27193108385041 * GRP_MntMeatProducts3
591930    +          +     0.01379422261623 * GRP_MntMeatProducts4
591931    +          +    -0.57181882470311 * GRP_MntWines2  +    -0.57187059852098 *
591932    +        GRP_MntWines3  +     0.30882985081217 * GRP_MntWines4
591933    +          +     0.49912000555763 * GRP_NumCatalogPurchases3
591934    +          +    -0.04354876738665 * GRP_NumCatalogPurchases4
591935    +          +     0.34941540707612 * GRP_NumDistPurchases2
591936    +          +     0.32691169055841 * GRP_NumDistPurchases3
591937    +          +    -0.09211947503636 * GRP_NumDistPurchases4
591938    +          +     0.23482266977456 * GRP_NumWebPurchases2
591939    +          +     0.33507315521476 * GRP_NumWebPurchases3
591940    +          +    -0.08817191120299 * GRP_NumWebPurchases4
591941    +          +     0.02374098589478 * GRP_RFMstat2  +    -0.23629328969151 *
591942    +        GRP_RFMstat3  +    -0.52724215414655 * GRP_RFMstat4
591943    +          +    -0.11172774703142 * GRP_RMntFrq2  +    -0.23930023577086 *
591944    +        GRP_RMntFrq3  +    -0.17783974029566 * GRP_RMntFrq4
591945    +          +    -0.09948595230391 * GRP_Recency2  +    -0.15957779348689 *
591946    +        GRP_Recency3  +     0.12430840578537 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = 0.7597594494859 * GRP_AcceptedCmp52 + -0.32376689593056 * GRP_Frq2 
+ -0.07779183366163 * GRP_Frq3 + 0.11273534310895 * GRP_Frq4 + -0.36089895624306 * GRP_Income2 
+ -0.38271011363759 * GRP_Income3 + 0.33282176047548 * GRP_Income4 + -0.13854310872224 * 
GRP_Mnt2 + -0.31005746238746 * GRP_Mnt3 + 0.02082673800287 * GRP_Mnt4 + 0.01224737349632 * 
GRP_MntFishProducts2 + -0.19458526368147 * GRP_MntFishProducts3 + -0.25187479317784 * 
GRP_MntFishProducts4 + 0.01924229245332 * GRP_MntGoldProds2 + 0.01852658027428 * 
GRP_MntGoldProds3 + -0.23305256947549 * GRP_MntGoldProds4 + 0.13401051842966 * 
GRP_MntMeatProducts2 + 0.27193108385041 * GRP_MntMeatProducts3 + 0.01379422261623 * 
GRP_MntMeatProducts4 + -0.57181882470311 * GRP_MntWines2 + -0.57187059852098 * GRP_MntWines3 + 
0.30882985081217 * GRP_MntWines4 + 0.49912000555763 * GRP_NumCatalogPurchases3 + 
-0.04354876738665 * GRP_NumCatalogPurchases4 + 0.34941540707612 * GRP_NumDistPurchases2 + 
0.32691169055841 * GRP_NumDistPurchases3 + -0.09211947503636 * GRP_NumDistPurchases4 + 
0.23482266977456 * GRP_NumWebPurchases2 + 0.33507315521476 * GRP_NumWebPurchases3 + 
-0.08817191120299 * GRP_NumWebPurchases4 + 0.02374098589478 * GRP_RFMstat2 + -0.23629328969151 
* GRP_RFMstat3 + -0.52724215414655 * GRP_RFMstat4 + -0.11172774703142 * GRP_RMntFrq2 + 
-0.23930023577086 * GRP_RMntFrq3 + -0.17783974029566 * GRP_RMntFrq4 + -0.09948595230391 * 
GRP_Recency2 + -0.15957779348689 * GRP_Recency3 + 0.12430840578537 * GRP_Recency4 ;
591947    +   H11  =    -0.83610777610194 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.83610777610194 + H11 ;
591948    +   H12  =     0.10079183797017 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.10079183797017 + H12 ;
591949    +   H13  =    -1.02827583788856 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.02827583788856 + H13 ;
591950    +   H14  =    -0.61336153955727 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.61336153955727 + H14 ;
591951    +   H15  =      0.2253118259528 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.2253118259528 + H15 ;
591952    +   H16  =     0.92538506927963 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.92538506927963 + H16 ;
591953    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
591954    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
591955    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
591956    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
591957    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
591958    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
591959    +END;
MPRINT(EM_DIAGRAM):   END;
591960    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
591961    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
591962    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
591963    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
591964    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
591965    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
591966    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
591967    +END;
MPRINT(EM_DIAGRAM):   END;
591968    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
591969    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
591970    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
591971    +
591972    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
591973    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
591974    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
591975    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
591976    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
591977    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
591978    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
591979    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
591980    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
591981    +end;
MPRINT(EM_DIAGRAM):   end;
591982    +else do;
MPRINT(EM_DIAGRAM):   else do;
591983    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
591984    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
591985    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
591986    +   end;
MPRINT(EM_DIAGRAM):   end;
591987    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
591988    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
591989    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
591990    +   end;
MPRINT(EM_DIAGRAM):   end;
591991    +   else do;
MPRINT(EM_DIAGRAM):   else do;
591992    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
591993    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
591994    +   end;
MPRINT(EM_DIAGRAM):   end;
591995    +end;
MPRINT(EM_DIAGRAM):   end;
591996    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
591997    +   P_DepVar1  =    -0.23603747173409 * H11  +     2.21167504352097 * H12
591998    +          +    -0.73919409105284 * H13  +     -1.1148994433356 * H14
591999    +          +    -1.58525957527132 * H15  +    -1.77364534531332 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.23603747173409 * H11 + 2.21167504352097 * H12 + 
-0.73919409105284 * H13 + -1.1148994433356 * H14 + -1.58525957527132 * H15 + -1.77364534531332 
* H16 ;
592000    +   P_DepVar1  =    -1.69291771072924 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.69291771072924 + P_DepVar1 ;
592001    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
592002    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
592003    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
592004    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
592005    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
592006    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
592007    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
592008    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
592009    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
592010    +END;
MPRINT(EM_DIAGRAM):   END;
592011    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
592012    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
592013    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
592014    +END;
MPRINT(EM_DIAGRAM):   END;
592015    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
592016    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
592017    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
592018    +END;
MPRINT(EM_DIAGRAM):   END;
592019    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
592020    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
592021    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
592022    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
592023    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
592024    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
592025    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
592026    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
592027    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
592028    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
592029    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
592030    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
592031    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
592032    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
592033    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
592034    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
592035    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
592036    +END;
MPRINT(EM_DIAGRAM):   END;
592037    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
592038    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
592039    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
592040    +drop
592041    +H11
592042    +H12
592043    +H13
592044    +H14
592045    +H15
592046    +H16
592047    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
592048     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL23_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
592049     quit;
592050     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
592051     filename emflow
592051   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural23: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
592052     *------------------------------------------------------------*;
592053     * Neural23: Scoring VALIDATE data;
592054     *------------------------------------------------------------*;
592055     data EMWS8.Neural23_VALIDATE
592056     / view=EMWS8.Neural23_VALIDATE
592057     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_VALIDATE / view=EMWS8.Neural23_VALIDATE ;
592058     set EMWS8.BINNING_VALIDATE
592059     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE ;
592060     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas.
592061    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
592062    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
592063    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
592064    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
592065    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
592066    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
592067    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
592068    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
592069    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
592070    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
592071    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
592072    +LENGTH _WARN_ $4
592073    +      F_DepVar  $ 12
592074    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
592075    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
592076    +
592077    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
592078    +
592079    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
592080    +
592081    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
592082    +
592083    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
592084    +
592085    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
592086    +
592087    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
592088    +
592089    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
592090    +
592091    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
592092    +
592093    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
592094    +
592095    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
592096    +
592097    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
592098    +
592099    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
592100    +
592101    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
592102    +
592103    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
592104    +
592105    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
592106    +
592107    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
592108    +
592109    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
592110    +
592111    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
592112    +
592113    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
592114    +
592115    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
592116    +
592117    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
592118    +
592119    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
592120    +
592121    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
592122    +
592123    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
592124    +
592125    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
592126    +
592127    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
592128    +
592129    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
592130    +
592131    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
592132    +
592133    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
592134    +
592135    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
592136    +
592137    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
592138    +
592139    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
592140    +
592141    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
592142    +
592143    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
592144    +
592145    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
592146    +
592147    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
592148    +
592149    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
592150    +
592151    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
592152    +
592153    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
592154    +
592155    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
592156    +
592157    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
592158    +
592159    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
592160    +
592161    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
592162    +
592163    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
592164    +
592165    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
592166    +
592167    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
592168    +
592169    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
592170    +
592171    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
592172    +
592173    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
592174    +
592175    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
592176    +
592177    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
592178    +
592179    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
592180    +
592181    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
592182    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
592183    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
592184    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
592185    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
592186    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592187    +end;
MPRINT(EM_DIAGRAM):   end;
592188    +else do;
MPRINT(EM_DIAGRAM):   else do;
592189    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
592190    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
592191    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
592192    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
592193    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
592194    +   end;
MPRINT(EM_DIAGRAM):   end;
592195    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
592196    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
592197    +   end;
MPRINT(EM_DIAGRAM):   end;
592198    +   else do;
MPRINT(EM_DIAGRAM):   else do;
592199    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
592200    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
592201    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592202    +   end;
MPRINT(EM_DIAGRAM):   end;
592203    +end;
MPRINT(EM_DIAGRAM):   end;
592204    +
592205    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
592206    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
592207    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
592208    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
592209    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
592210    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
592211    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
592212    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592213    +end;
MPRINT(EM_DIAGRAM):   end;
592214    +else do;
MPRINT(EM_DIAGRAM):   else do;
592215    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
592216    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
592217    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
592218    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
592219    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
592220    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
592221    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
592222    +   end;
MPRINT(EM_DIAGRAM):   end;
592223    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
592224    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
592225    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
592226    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
592227    +   end;
MPRINT(EM_DIAGRAM):   end;
592228    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
592229    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
592230    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
592231    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
592232    +   end;
MPRINT(EM_DIAGRAM):   end;
592233    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
592234    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
592235    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
592236    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
592237    +   end;
MPRINT(EM_DIAGRAM):   end;
592238    +   else do;
MPRINT(EM_DIAGRAM):   else do;
592239    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
592240    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
592241    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
592242    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
592243    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592244    +   end;
MPRINT(EM_DIAGRAM):   end;
592245    +end;
MPRINT(EM_DIAGRAM):   end;
592246    +
592247    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
592248    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
592249    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
592250    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
592251    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
592252    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
592253    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
592254    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592255    +end;
MPRINT(EM_DIAGRAM):   end;
592256    +else do;
MPRINT(EM_DIAGRAM):   else do;
592257    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
592258    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
592259    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
592260    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
592261    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
592262    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
592263    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
592264    +   end;
MPRINT(EM_DIAGRAM):   end;
592265    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
592266    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
592267    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
592268    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
592269    +   end;
MPRINT(EM_DIAGRAM):   end;
592270    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
592271    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
592272    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
592273    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
592274    +   end;
MPRINT(EM_DIAGRAM):   end;
592275    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
592276    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
592277    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
592278    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
592279    +   end;
MPRINT(EM_DIAGRAM):   end;
592280    +   else do;
MPRINT(EM_DIAGRAM):   else do;
592281    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
592282    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
592283    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
592284    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
592285    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592286    +   end;
MPRINT(EM_DIAGRAM):   end;
592287    +end;
MPRINT(EM_DIAGRAM):   end;
592288    +
592289    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
592290    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
592291    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
592292    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
592293    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
592294    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
592295    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
592296    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592297    +end;
MPRINT(EM_DIAGRAM):   end;
592298    +else do;
MPRINT(EM_DIAGRAM):   else do;
592299    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
592300    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
592301    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
592302    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
592303    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
592304    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
592305    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
592306    +   end;
MPRINT(EM_DIAGRAM):   end;
592307    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
592308    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
592309    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
592310    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
592311    +   end;
MPRINT(EM_DIAGRAM):   end;
592312    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
592313    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
592314    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
592315    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
592316    +   end;
MPRINT(EM_DIAGRAM):   end;
592317    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
592318    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
592319    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
592320    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
592321    +   end;
MPRINT(EM_DIAGRAM):   end;
592322    +   else do;
MPRINT(EM_DIAGRAM):   else do;
592323    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
592324    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
592325    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
592326    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
592327    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592328    +   end;
MPRINT(EM_DIAGRAM):   end;
592329    +end;
MPRINT(EM_DIAGRAM):   end;
592330    +
592331    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
592332    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
592333    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
592334    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
592335    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
592336    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
592337    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
592338    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592339    +end;
MPRINT(EM_DIAGRAM):   end;
592340    +else do;
MPRINT(EM_DIAGRAM):   else do;
592341    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
592342    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
592343    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
592344    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
592345    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
592346    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
592347    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
592348    +   end;
MPRINT(EM_DIAGRAM):   end;
592349    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
592350    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
592351    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
592352    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
592353    +   end;
MPRINT(EM_DIAGRAM):   end;
592354    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
592355    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
592356    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
592357    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
592358    +   end;
MPRINT(EM_DIAGRAM):   end;
592359    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
592360    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
592361    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
592362    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
592363    +   end;
MPRINT(EM_DIAGRAM):   end;
592364    +   else do;
MPRINT(EM_DIAGRAM):   else do;
592365    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
592366    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
592367    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
592368    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
592369    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592370    +   end;
MPRINT(EM_DIAGRAM):   end;
592371    +end;
MPRINT(EM_DIAGRAM):   end;
592372    +
592373    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
592374    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
592375    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
592376    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
592377    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
592378    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
592379    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
592380    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592381    +end;
MPRINT(EM_DIAGRAM):   end;
592382    +else do;
MPRINT(EM_DIAGRAM):   else do;
592383    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
592384    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
592385    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
592386    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
592387    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
592388    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
592389    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
592390    +   end;
MPRINT(EM_DIAGRAM):   end;
592391    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
592392    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
592393    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
592394    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
592395    +   end;
MPRINT(EM_DIAGRAM):   end;
592396    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
592397    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
592398    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
592399    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
592400    +   end;
MPRINT(EM_DIAGRAM):   end;
592401    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
592402    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
592403    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
592404    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
592405    +   end;
MPRINT(EM_DIAGRAM):   end;
592406    +   else do;
MPRINT(EM_DIAGRAM):   else do;
592407    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
592408    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
592409    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
592410    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
592411    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592412    +   end;
MPRINT(EM_DIAGRAM):   end;
592413    +end;
MPRINT(EM_DIAGRAM):   end;
592414    +
592415    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
592416    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
592417    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
592418    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
592419    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
592420    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
592421    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
592422    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592423    +end;
MPRINT(EM_DIAGRAM):   end;
592424    +else do;
MPRINT(EM_DIAGRAM):   else do;
592425    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
592426    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
592427    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
592428    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
592429    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
592430    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
592431    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
592432    +   end;
MPRINT(EM_DIAGRAM):   end;
592433    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
592434    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
592435    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
592436    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
592437    +   end;
MPRINT(EM_DIAGRAM):   end;
592438    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
592439    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
592440    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
592441    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
592442    +   end;
MPRINT(EM_DIAGRAM):   end;
592443    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
592444    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
592445    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
592446    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
592447    +   end;
MPRINT(EM_DIAGRAM):   end;
592448    +   else do;
MPRINT(EM_DIAGRAM):   else do;
592449    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
592450    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
592451    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
592452    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
592453    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592454    +   end;
MPRINT(EM_DIAGRAM):   end;
592455    +end;
MPRINT(EM_DIAGRAM):   end;
592456    +
592457    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
592458    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
592459    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
592460    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
592461    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
592462    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
592463    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
592464    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592465    +end;
MPRINT(EM_DIAGRAM):   end;
592466    +else do;
MPRINT(EM_DIAGRAM):   else do;
592467    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
592468    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
592469    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
592470    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
592471    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
592472    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
592473    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
592474    +   end;
MPRINT(EM_DIAGRAM):   end;
592475    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
592476    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
592477    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
592478    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
592479    +   end;
MPRINT(EM_DIAGRAM):   end;
592480    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
592481    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
592482    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
592483    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
592484    +   end;
MPRINT(EM_DIAGRAM):   end;
592485    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
592486    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
592487    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
592488    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
592489    +   end;
MPRINT(EM_DIAGRAM):   end;
592490    +   else do;
MPRINT(EM_DIAGRAM):   else do;
592491    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
592492    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
592493    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
592494    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
592495    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592496    +   end;
MPRINT(EM_DIAGRAM):   end;
592497    +end;
MPRINT(EM_DIAGRAM):   end;
592498    +
592499    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
592500    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
592501    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
592502    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
592503    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
592504    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
592505    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592506    +end;
MPRINT(EM_DIAGRAM):   end;
592507    +else do;
MPRINT(EM_DIAGRAM):   else do;
592508    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
592509    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
592510    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
592511    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
592512    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
592513    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
592514    +   end;
MPRINT(EM_DIAGRAM):   end;
592515    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
592516    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
592517    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
592518    +   end;
MPRINT(EM_DIAGRAM):   end;
592519    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
592520    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
592521    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
592522    +   end;
MPRINT(EM_DIAGRAM):   end;
592523    +   else do;
MPRINT(EM_DIAGRAM):   else do;
592524    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
592525    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
592526    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
592527    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592528    +   end;
MPRINT(EM_DIAGRAM):   end;
592529    +end;
MPRINT(EM_DIAGRAM):   end;
592530    +
592531    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
592532    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
592533    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
592534    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
592535    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
592536    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
592537    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
592538    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592539    +end;
MPRINT(EM_DIAGRAM):   end;
592540    +else do;
MPRINT(EM_DIAGRAM):   else do;
592541    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
592542    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
592543    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
592544    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
592545    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
592546    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
592547    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
592548    +   end;
MPRINT(EM_DIAGRAM):   end;
592549    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
592550    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
592551    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
592552    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
592553    +   end;
MPRINT(EM_DIAGRAM):   end;
592554    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
592555    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
592556    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
592557    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
592558    +   end;
MPRINT(EM_DIAGRAM):   end;
592559    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
592560    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
592561    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
592562    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
592563    +   end;
MPRINT(EM_DIAGRAM):   end;
592564    +   else do;
MPRINT(EM_DIAGRAM):   else do;
592565    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
592566    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
592567    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
592568    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
592569    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592570    +   end;
MPRINT(EM_DIAGRAM):   end;
592571    +end;
MPRINT(EM_DIAGRAM):   end;
592572    +
592573    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
592574    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
592575    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
592576    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
592577    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
592578    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
592579    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
592580    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592581    +end;
MPRINT(EM_DIAGRAM):   end;
592582    +else do;
MPRINT(EM_DIAGRAM):   else do;
592583    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
592584    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
592585    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
592586    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
592587    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
592588    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
592589    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
592590    +   end;
MPRINT(EM_DIAGRAM):   end;
592591    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
592592    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
592593    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
592594    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
592595    +   end;
MPRINT(EM_DIAGRAM):   end;
592596    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
592597    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
592598    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
592599    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
592600    +   end;
MPRINT(EM_DIAGRAM):   end;
592601    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
592602    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
592603    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
592604    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
592605    +   end;
MPRINT(EM_DIAGRAM):   end;
592606    +   else do;
MPRINT(EM_DIAGRAM):   else do;
592607    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
592608    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
592609    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
592610    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
592611    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592612    +   end;
MPRINT(EM_DIAGRAM):   end;
592613    +end;
MPRINT(EM_DIAGRAM):   end;
592614    +
592615    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
592616    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
592617    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
592618    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
592619    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
592620    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
592621    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
592622    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592623    +end;
MPRINT(EM_DIAGRAM):   end;
592624    +else do;
MPRINT(EM_DIAGRAM):   else do;
592625    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
592626    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
592627    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
592628    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
592629    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
592630    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
592631    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
592632    +   end;
MPRINT(EM_DIAGRAM):   end;
592633    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
592634    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
592635    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
592636    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
592637    +   end;
MPRINT(EM_DIAGRAM):   end;
592638    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
592639    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
592640    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
592641    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
592642    +   end;
MPRINT(EM_DIAGRAM):   end;
592643    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
592644    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
592645    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
592646    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
592647    +   end;
MPRINT(EM_DIAGRAM):   end;
592648    +   else do;
MPRINT(EM_DIAGRAM):   else do;
592649    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
592650    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
592651    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
592652    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
592653    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592654    +   end;
MPRINT(EM_DIAGRAM):   end;
592655    +end;
MPRINT(EM_DIAGRAM):   end;
592656    +
592657    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
592658    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
592659    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
592660    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
592661    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
592662    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
592663    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
592664    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592665    +end;
MPRINT(EM_DIAGRAM):   end;
592666    +else do;
MPRINT(EM_DIAGRAM):   else do;
592667    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
592668    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
592669    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
592670    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
592671    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
592672    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
592673    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
592674    +   end;
MPRINT(EM_DIAGRAM):   end;
592675    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
592676    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
592677    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
592678    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
592679    +   end;
MPRINT(EM_DIAGRAM):   end;
592680    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
592681    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
592682    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
592683    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
592684    +   end;
MPRINT(EM_DIAGRAM):   end;
592685    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
592686    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
592687    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
592688    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
592689    +   end;
MPRINT(EM_DIAGRAM):   end;
592690    +   else do;
MPRINT(EM_DIAGRAM):   else do;
592691    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
592692    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
592693    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
592694    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
592695    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592696    +   end;
MPRINT(EM_DIAGRAM):   end;
592697    +end;
MPRINT(EM_DIAGRAM):   end;
592698    +
592699    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
592700    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
592701    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
592702    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
592703    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
592704    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
592705    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
592706    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592707    +end;
MPRINT(EM_DIAGRAM):   end;
592708    +else do;
MPRINT(EM_DIAGRAM):   else do;
592709    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
592710    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
592711    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
592712    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
592713    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
592714    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
592715    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
592716    +   end;
MPRINT(EM_DIAGRAM):   end;
592717    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
592718    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
592719    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
592720    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
592721    +   end;
MPRINT(EM_DIAGRAM):   end;
592722    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
592723    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
592724    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
592725    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
592726    +   end;
MPRINT(EM_DIAGRAM):   end;
592727    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
592728    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
592729    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
592730    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
592731    +   end;
MPRINT(EM_DIAGRAM):   end;
592732    +   else do;
MPRINT(EM_DIAGRAM):   else do;
592733    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
592734    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
592735    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
592736    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
592737    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
592738    +   end;
MPRINT(EM_DIAGRAM):   end;
592739    +end;
MPRINT(EM_DIAGRAM):   end;
592740    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
592741    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
592742    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
592743    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
592744    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
592745    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
592746    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
592747    +   H11  =     0.33640101965956 * GRP_AcceptedCmp52  +    -0.09458866011332 *
592748    +        GRP_Frq2  +     0.08165112288668 * GRP_Frq3  +      0.0098569396377 *
592749    +        GRP_Frq4  +    -0.10718097600137 * GRP_Income2
592750    +          +     0.24913133317457 * GRP_Income3  +     0.08606607454597 *
592751    +        GRP_Income4  +    -0.43083911296417 * GRP_Mnt2
592752    +          +    -0.35952383025836 * GRP_Mnt3  +     0.15746774085254 * GRP_Mnt4
592753    +          +     0.03496490321939 * GRP_MntFishProducts2
592754    +          +     -0.1386775704024 * GRP_MntFishProducts3
592755    +          +     0.08185130088727 * GRP_MntFishProducts4
592756    +          +     0.20666000615395 * GRP_MntGoldProds2
592757    +          +     0.02513603537885 * GRP_MntGoldProds3
592758    +          +     0.04518515377846 * GRP_MntGoldProds4
592759    +          +     0.14564741446952 * GRP_MntMeatProducts2
592760    +          +      0.0921407018606 * GRP_MntMeatProducts3
592761    +          +     0.03964574584898 * GRP_MntMeatProducts4
592762    +          +    -0.10395279216819 * GRP_MntWines2  +     0.12929231428625 *
592763    +        GRP_MntWines3  +     0.00045903854959 * GRP_MntWines4
592764    +          +    -0.03496333349231 * GRP_NumCatalogPurchases3
592765    +          +    -0.18329339773791 * GRP_NumCatalogPurchases4
592766    +          +     0.25535533392017 * GRP_NumDistPurchases2
592767    +          +     0.03881117716273 * GRP_NumDistPurchases3
592768    +          +    -0.02565551941415 * GRP_NumDistPurchases4
592769    +          +     0.31760052513768 * GRP_NumWebPurchases2
592770    +          +     0.09995149350563 * GRP_NumWebPurchases3
592771    +          +    -0.03267834031943 * GRP_NumWebPurchases4
592772    +          +     0.20523977712748 * GRP_RFMstat2  +    -0.05606160362426 *
592773    +        GRP_RFMstat3  +     0.08166835774422 * GRP_RFMstat4
592774    +          +    -0.02802261136507 * GRP_RMntFrq2  +     0.04530681268814 *
592775    +        GRP_RMntFrq3  +     0.17075869124019 * GRP_RMntFrq4
592776    +          +    -0.07437386313878 * GRP_Recency2  +    -0.03620176560114 *
592777    +        GRP_Recency3  +     -0.1829690397052 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = 0.33640101965956 * GRP_AcceptedCmp52 + -0.09458866011332 * 
GRP_Frq2 + 0.08165112288668 * GRP_Frq3 + 0.0098569396377 * GRP_Frq4 + -0.10718097600137 * 
GRP_Income2 + 0.24913133317457 * GRP_Income3 + 0.08606607454597 * GRP_Income4 + 
-0.43083911296417 * GRP_Mnt2 + -0.35952383025836 * GRP_Mnt3 + 0.15746774085254 * GRP_Mnt4 + 
0.03496490321939 * GRP_MntFishProducts2 + -0.1386775704024 * GRP_MntFishProducts3 + 
0.08185130088727 * GRP_MntFishProducts4 + 0.20666000615395 * GRP_MntGoldProds2 + 
0.02513603537885 * GRP_MntGoldProds3 + 0.04518515377846 * GRP_MntGoldProds4 + 0.14564741446952 
* GRP_MntMeatProducts2 + 0.0921407018606 * GRP_MntMeatProducts3 + 0.03964574584898 * 
GRP_MntMeatProducts4 + -0.10395279216819 * GRP_MntWines2 + 0.12929231428625 * GRP_MntWines3 + 
0.00045903854959 * GRP_MntWines4 + -0.03496333349231 * GRP_NumCatalogPurchases3 + 
-0.18329339773791 * GRP_NumCatalogPurchases4 + 0.25535533392017 * GRP_NumDistPurchases2 + 
0.03881117716273 * GRP_NumDistPurchases3 + -0.02565551941415 * GRP_NumDistPurchases4 + 
0.31760052513768 * GRP_NumWebPurchases2 + 0.09995149350563 * GRP_NumWebPurchases3 + 
-0.03267834031943 * GRP_NumWebPurchases4 + 0.20523977712748 * GRP_RFMstat2 + -0.05606160362426 
* GRP_RFMstat3 + 0.08166835774422 * GRP_RFMstat4 + -0.02802261136507 * GRP_RMntFrq2 + 
0.04530681268814 * GRP_RMntFrq3 + 0.17075869124019 * GRP_RMntFrq4 + -0.07437386313878 * 
GRP_Recency2 + -0.03620176560114 * GRP_Recency3 + -0.1829690397052 * GRP_Recency4 ;
592778    +   H12  =    -0.44053040668419 * GRP_AcceptedCmp52  +     0.39130488780547 *
592779    +        GRP_Frq2  +    -0.05339083882864 * GRP_Frq3  +     0.00231451089906 *
592780    +        GRP_Frq4  +      0.5831587240061 * GRP_Income2
592781    +          +     0.54852848249408 * GRP_Income3  +     -0.4598479622494 *
592782    +        GRP_Income4  +     0.04804779326921 * GRP_Mnt2
592783    +          +    -0.18484356222731 * GRP_Mnt3  +     0.03549703658034 * GRP_Mnt4
592784    +          +     0.39885742453554 * GRP_MntFishProducts2
592785    +          +     0.15761355687754 * GRP_MntFishProducts3
592786    +          +    -0.21271471925571 * GRP_MntFishProducts4
592787    +          +     -0.1972927903123 * GRP_MntGoldProds2
592788    +          +     0.03399122417272 * GRP_MntGoldProds3
592789    +          +    -0.02558670857298 * GRP_MntGoldProds4
592790    +          +    -0.41984327217018 * GRP_MntMeatProducts2
592791    +          +     0.05051071020912 * GRP_MntMeatProducts3
592792    +          +     0.02213191751142 * GRP_MntMeatProducts4
592793    +          +     0.27725513562646 * GRP_MntWines2  +    -0.13825638111274 *
592794    +        GRP_MntWines3  +     0.10174302336793 * GRP_MntWines4
592795    +          +    -0.13050806508623 * GRP_NumCatalogPurchases3
592796    +          +     0.18000903281461 * GRP_NumCatalogPurchases4
592797    +          +     -0.5134802042985 * GRP_NumDistPurchases2
592798    +          +     -0.0517830924312 * GRP_NumDistPurchases3
592799    +          +    -0.16980153882394 * GRP_NumDistPurchases4
592800    +          +     0.03868274112159 * GRP_NumWebPurchases2
592801    +          +     0.16193614709489 * GRP_NumWebPurchases3
592802    +          +      0.0269423998237 * GRP_NumWebPurchases4
592803    +          +    -0.32452106975443 * GRP_RFMstat2  +    -0.21611965835421 *
592804    +        GRP_RFMstat3  +    -0.11926055719327 * GRP_RFMstat4
592805    +          +     0.21187682021828 * GRP_RMntFrq2  +     0.08976835265364 *
592806    +        GRP_RMntFrq3  +    -0.20787348857522 * GRP_RMntFrq4
592807    +          +     0.68804853934306 * GRP_Recency2  +     0.17422440486451 *
592808    +        GRP_Recency3  +    -0.18452599729833 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = -0.44053040668419 * GRP_AcceptedCmp52 + 0.39130488780547 * 
GRP_Frq2 + -0.05339083882864 * GRP_Frq3 + 0.00231451089906 * GRP_Frq4 + 0.5831587240061 * 
GRP_Income2 + 0.54852848249408 * GRP_Income3 + -0.4598479622494 * GRP_Income4 + 
0.04804779326921 * GRP_Mnt2 + -0.18484356222731 * GRP_Mnt3 + 0.03549703658034 * GRP_Mnt4 + 
0.39885742453554 * GRP_MntFishProducts2 + 0.15761355687754 * GRP_MntFishProducts3 + 
-0.21271471925571 * GRP_MntFishProducts4 + -0.1972927903123 * GRP_MntGoldProds2 + 
0.03399122417272 * GRP_MntGoldProds3 + -0.02558670857298 * GRP_MntGoldProds4 + 
-0.41984327217018 * GRP_MntMeatProducts2 + 0.05051071020912 * GRP_MntMeatProducts3 + 
0.02213191751142 * GRP_MntMeatProducts4 + 0.27725513562646 * GRP_MntWines2 + -0.13825638111274 
* GRP_MntWines3 + 0.10174302336793 * GRP_MntWines4 + -0.13050806508623 * 
GRP_NumCatalogPurchases3 + 0.18000903281461 * GRP_NumCatalogPurchases4 + -0.5134802042985 * 
GRP_NumDistPurchases2 + -0.0517830924312 * GRP_NumDistPurchases3 + -0.16980153882394 * 
GRP_NumDistPurchases4 + 0.03868274112159 * GRP_NumWebPurchases2 + 0.16193614709489 * 
GRP_NumWebPurchases3 + 0.0269423998237 * GRP_NumWebPurchases4 + -0.32452106975443 * 
GRP_RFMstat2 + -0.21611965835421 * GRP_RFMstat3 + -0.11926055719327 * GRP_RFMstat4 + 
0.21187682021828 * GRP_RMntFrq2 + 0.08976835265364 * GRP_RMntFrq3 + -0.20787348857522 * 
GRP_RMntFrq4 + 0.68804853934306 * GRP_Recency2 + 0.17422440486451 * GRP_Recency3 + 
-0.18452599729833 * GRP_Recency4 ;
592809    +   H13  =      0.0874014291812 * GRP_AcceptedCmp52  +     0.17304198694157 *
592810    +        GRP_Frq2  +    -0.11491629051719 * GRP_Frq3  +      0.2483225021197 *
592811    +        GRP_Frq4  +    -0.05989120739582 * GRP_Income2
592812    +          +    -0.02732012571019 * GRP_Income3  +     0.20807069048689 *
592813    +        GRP_Income4  +     0.33666649935924 * GRP_Mnt2
592814    +          +      0.0642358727731 * GRP_Mnt3  +    -0.22568229208697 * GRP_Mnt4
592815    +          +    -0.12147573127033 * GRP_MntFishProducts2
592816    +          +    -0.19323607018295 * GRP_MntFishProducts3
592817    +          +     0.25863847748437 * GRP_MntFishProducts4
592818    +          +     -0.0126645668436 * GRP_MntGoldProds2
592819    +          +    -0.11323357258997 * GRP_MntGoldProds3
592820    +          +    -0.11250689806163 * GRP_MntGoldProds4
592821    +          +    -0.12545641044895 * GRP_MntMeatProducts2
592822    +          +    -0.04305442792903 * GRP_MntMeatProducts3
592823    +          +    -0.32146302728834 * GRP_MntMeatProducts4
592824    +          +    -0.00148263872712 * GRP_MntWines2  +     0.11028478479749 *
592825    +        GRP_MntWines3  +    -0.02542826671873 * GRP_MntWines4
592826    +          +    -0.03468933342665 * GRP_NumCatalogPurchases3
592827    +          +     0.06081255664838 * GRP_NumCatalogPurchases4
592828    +          +     0.09115957554684 * GRP_NumDistPurchases2
592829    +          +    -0.19448624046951 * GRP_NumDistPurchases3
592830    +          +     0.18401866660579 * GRP_NumDistPurchases4
592831    +          +    -0.30934548179162 * GRP_NumWebPurchases2
592832    +          +    -0.15569430268918 * GRP_NumWebPurchases3
592833    +          +    -0.15912290396059 * GRP_NumWebPurchases4
592834    +          +      0.3307600563141 * GRP_RFMstat2  +    -0.22709032656384 *
592835    +        GRP_RFMstat3  +      0.0673885738463 * GRP_RFMstat4
592836    +          +    -0.34782658221729 * GRP_RMntFrq2  +    -0.37292996378384 *
592837    +        GRP_RMntFrq3  +    -0.19656647007955 * GRP_RMntFrq4
592838    +          +    -0.48292133112766 * GRP_Recency2  +    -0.19998163272412 *
592839    +        GRP_Recency3  +     0.04020306752703 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = 0.0874014291812 * GRP_AcceptedCmp52 + 0.17304198694157 * GRP_Frq2 
+ -0.11491629051719 * GRP_Frq3 + 0.2483225021197 * GRP_Frq4 + -0.05989120739582 * GRP_Income2 
+ -0.02732012571019 * GRP_Income3 + 0.20807069048689 * GRP_Income4 + 0.33666649935924 * 
GRP_Mnt2 + 0.0642358727731 * GRP_Mnt3 + -0.22568229208697 * GRP_Mnt4 + -0.12147573127033 * 
GRP_MntFishProducts2 + -0.19323607018295 * GRP_MntFishProducts3 + 0.25863847748437 * 
GRP_MntFishProducts4 + -0.0126645668436 * GRP_MntGoldProds2 + -0.11323357258997 * 
GRP_MntGoldProds3 + -0.11250689806163 * GRP_MntGoldProds4 + -0.12545641044895 * 
GRP_MntMeatProducts2 + -0.04305442792903 * GRP_MntMeatProducts3 + -0.32146302728834 * 
GRP_MntMeatProducts4 + -0.00148263872712 * GRP_MntWines2 + 0.11028478479749 * GRP_MntWines3 + 
-0.02542826671873 * GRP_MntWines4 + -0.03468933342665 * GRP_NumCatalogPurchases3 + 
0.06081255664838 * GRP_NumCatalogPurchases4 + 0.09115957554684 * GRP_NumDistPurchases2 + 
-0.19448624046951 * GRP_NumDistPurchases3 + 0.18401866660579 * GRP_NumDistPurchases4 + 
-0.30934548179162 * GRP_NumWebPurchases2 + -0.15569430268918 * GRP_NumWebPurchases3 + 
-0.15912290396059 * GRP_NumWebPurchases4 + 0.3307600563141 * GRP_RFMstat2 + -0.22709032656384 
* GRP_RFMstat3 + 0.0673885738463 * GRP_RFMstat4 + -0.34782658221729 * GRP_RMntFrq2 + 
-0.37292996378384 * GRP_RMntFrq3 + -0.19656647007955 * GRP_RMntFrq4 + -0.48292133112766 * 
GRP_Recency2 + -0.19998163272412 * GRP_Recency3 + 0.04020306752703 * GRP_Recency4 ;
592840    +   H14  =    -0.06535462604618 * GRP_AcceptedCmp52  +    -0.02538966501603 *
592841    +        GRP_Frq2  +    -0.37465930862485 * GRP_Frq3  +    -0.09115714895281 *
592842    +        GRP_Frq4  +    -0.19377207233976 * GRP_Income2
592843    +          +     0.19699955617479 * GRP_Income3  +     0.18620312701109 *
592844    +        GRP_Income4  +    -0.07918752617024 * GRP_Mnt2
592845    +          +    -0.15791729955854 * GRP_Mnt3  +     0.05785915035978 * GRP_Mnt4
592846    +          +    -0.15621920593365 * GRP_MntFishProducts2
592847    +          +     0.18156570239129 * GRP_MntFishProducts3
592848    +          +    -0.19268366331472 * GRP_MntFishProducts4
592849    +          +     0.17003324763884 * GRP_MntGoldProds2
592850    +          +    -0.24315925332299 * GRP_MntGoldProds3
592851    +          +    -0.19433542142509 * GRP_MntGoldProds4
592852    +          +     0.48300099715349 * GRP_MntMeatProducts2
592853    +          +     0.04287374992788 * GRP_MntMeatProducts3
592854    +          +    -0.14772483570864 * GRP_MntMeatProducts4
592855    +          +    -0.35939710533055 * GRP_MntWines2  +      0.0814263252657 *
592856    +        GRP_MntWines3  +     0.11455106831693 * GRP_MntWines4
592857    +          +     0.28909689894797 * GRP_NumCatalogPurchases3
592858    +          +     0.35798075318799 * GRP_NumCatalogPurchases4
592859    +          +     0.26175622277157 * GRP_NumDistPurchases2
592860    +          +    -0.28134203235556 * GRP_NumDistPurchases3
592861    +          +     -0.0849885153607 * GRP_NumDistPurchases4
592862    +          +    -0.00363026409862 * GRP_NumWebPurchases2
592863    +          +    -0.18458881565534 * GRP_NumWebPurchases3
592864    +          +    -0.00054495066636 * GRP_NumWebPurchases4
592865    +          +     0.02464665365087 * GRP_RFMstat2  +    -0.04709787167688 *
592866    +        GRP_RFMstat3  +    -0.21485621631981 * GRP_RFMstat4
592867    +          +      0.0421527075159 * GRP_RMntFrq2  +     0.12266531817421 *
592868    +        GRP_RMntFrq3  +     0.34319246452663 * GRP_RMntFrq4
592869    +          +    -0.42128751178743 * GRP_Recency2  +    -0.03341002800803 *
592870    +        GRP_Recency3  +    -0.00550102888585 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = -0.06535462604618 * GRP_AcceptedCmp52 + -0.02538966501603 * 
GRP_Frq2 + -0.37465930862485 * GRP_Frq3 + -0.09115714895281 * GRP_Frq4 + -0.19377207233976 * 
GRP_Income2 + 0.19699955617479 * GRP_Income3 + 0.18620312701109 * GRP_Income4 + 
-0.07918752617024 * GRP_Mnt2 + -0.15791729955854 * GRP_Mnt3 + 0.05785915035978 * GRP_Mnt4 + 
-0.15621920593365 * GRP_MntFishProducts2 + 0.18156570239129 * GRP_MntFishProducts3 + 
-0.19268366331472 * GRP_MntFishProducts4 + 0.17003324763884 * GRP_MntGoldProds2 + 
-0.24315925332299 * GRP_MntGoldProds3 + -0.19433542142509 * GRP_MntGoldProds4 + 
0.48300099715349 * GRP_MntMeatProducts2 + 0.04287374992788 * GRP_MntMeatProducts3 + 
-0.14772483570864 * GRP_MntMeatProducts4 + -0.35939710533055 * GRP_MntWines2 + 0.0814263252657 
* GRP_MntWines3 + 0.11455106831693 * GRP_MntWines4 + 0.28909689894797 * 
GRP_NumCatalogPurchases3 + 0.35798075318799 * GRP_NumCatalogPurchases4 + 0.26175622277157 * 
GRP_NumDistPurchases2 + -0.28134203235556 * GRP_NumDistPurchases3 + -0.0849885153607 * 
GRP_NumDistPurchases4 + -0.00363026409862 * GRP_NumWebPurchases2 + -0.18458881565534 * 
GRP_NumWebPurchases3 + -0.00054495066636 * GRP_NumWebPurchases4 + 0.02464665365087 * 
GRP_RFMstat2 + -0.04709787167688 * GRP_RFMstat3 + -0.21485621631981 * GRP_RFMstat4 + 
0.0421527075159 * GRP_RMntFrq2 + 0.12266531817421 * GRP_RMntFrq3 + 0.34319246452663 * 
GRP_RMntFrq4 + -0.42128751178743 * GRP_Recency2 + -0.03341002800803 * GRP_Recency3 + 
-0.00550102888585 * GRP_Recency4 ;
592871    +   H15  =     0.20080324976316 * GRP_AcceptedCmp52  +     0.03346464595946 *
592872    +        GRP_Frq2  +    -0.46550936235158 * GRP_Frq3  +     0.11038114045006 *
592873    +        GRP_Frq4  +     0.10073875117437 * GRP_Income2
592874    +          +    -0.22683871345668 * GRP_Income3  +    -0.09384548786395 *
592875    +        GRP_Income4  +     0.43323607707701 * GRP_Mnt2
592876    +          +     0.27829480348267 * GRP_Mnt3  +     0.12638599389415 * GRP_Mnt4
592877    +          +     0.02417129110075 * GRP_MntFishProducts2
592878    +          +      0.2545897829616 * GRP_MntFishProducts3
592879    +          +    -0.29458064807823 * GRP_MntFishProducts4
592880    +          +    -0.15364697476117 * GRP_MntGoldProds2
592881    +          +      0.3170384910511 * GRP_MntGoldProds3
592882    +          +     0.43731794737697 * GRP_MntGoldProds4
592883    +          +     0.51501086483907 * GRP_MntMeatProducts2
592884    +          +     0.15231215210229 * GRP_MntMeatProducts3
592885    +          +    -0.05381144096743 * GRP_MntMeatProducts4
592886    +          +     0.13508510112509 * GRP_MntWines2  +    -0.33096430220175 *
592887    +        GRP_MntWines3  +     0.49248642584759 * GRP_MntWines4
592888    +          +     0.25386528096127 * GRP_NumCatalogPurchases3
592889    +          +     0.31775128798882 * GRP_NumCatalogPurchases4
592890    +          +     0.26152832976302 * GRP_NumDistPurchases2
592891    +          +     0.00160473771196 * GRP_NumDistPurchases3
592892    +          +      0.0013330753294 * GRP_NumDistPurchases4
592893    +          +     0.23697025371136 * GRP_NumWebPurchases2
592894    +          +     0.12394312604839 * GRP_NumWebPurchases3
592895    +          +     0.29358944454399 * GRP_NumWebPurchases4
592896    +          +      0.2711027918467 * GRP_RFMstat2  +    -0.07642391618094 *
592897    +        GRP_RFMstat3  +     0.14712184054126 * GRP_RFMstat4
592898    +          +     0.11431001806439 * GRP_RMntFrq2  +     0.06273949214332 *
592899    +        GRP_RMntFrq3  +     0.44954334169592 * GRP_RMntFrq4
592900    +          +    -0.10299484961132 * GRP_Recency2  +    -0.00660050077332 *
592901    +        GRP_Recency3  +     0.10477819043432 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = 0.20080324976316 * GRP_AcceptedCmp52 + 0.03346464595946 * GRP_Frq2 
+ -0.46550936235158 * GRP_Frq3 + 0.11038114045006 * GRP_Frq4 + 0.10073875117437 * GRP_Income2 
+ -0.22683871345668 * GRP_Income3 + -0.09384548786395 * GRP_Income4 + 0.43323607707701 * 
GRP_Mnt2 + 0.27829480348267 * GRP_Mnt3 + 0.12638599389415 * GRP_Mnt4 + 0.02417129110075 * 
GRP_MntFishProducts2 + 0.2545897829616 * GRP_MntFishProducts3 + -0.29458064807823 * 
GRP_MntFishProducts4 + -0.15364697476117 * GRP_MntGoldProds2 + 0.3170384910511 * 
GRP_MntGoldProds3 + 0.43731794737697 * GRP_MntGoldProds4 + 0.51501086483907 * 
GRP_MntMeatProducts2 + 0.15231215210229 * GRP_MntMeatProducts3 + -0.05381144096743 * 
GRP_MntMeatProducts4 + 0.13508510112509 * GRP_MntWines2 + -0.33096430220175 * GRP_MntWines3 + 
0.49248642584759 * GRP_MntWines4 + 0.25386528096127 * GRP_NumCatalogPurchases3 + 
0.31775128798882 * GRP_NumCatalogPurchases4 + 0.26152832976302 * GRP_NumDistPurchases2 + 
0.00160473771196 * GRP_NumDistPurchases3 + 0.0013330753294 * GRP_NumDistPurchases4 + 
0.23697025371136 * GRP_NumWebPurchases2 + 0.12394312604839 * GRP_NumWebPurchases3 + 
0.29358944454399 * GRP_NumWebPurchases4 + 0.2711027918467 * GRP_RFMstat2 + -0.07642391618094 * 
GRP_RFMstat3 + 0.14712184054126 * GRP_RFMstat4 + 0.11431001806439 * GRP_RMntFrq2 + 
0.06273949214332 * GRP_RMntFrq3 + 0.44954334169592 * GRP_RMntFrq4 + -0.10299484961132 * 
GRP_Recency2 + -0.00660050077332 * GRP_Recency3 + 0.10477819043432 * GRP_Recency4 ;
592902    +   H16  =      0.7597594494859 * GRP_AcceptedCmp52  +    -0.32376689593056 *
592903    +        GRP_Frq2  +    -0.07779183366163 * GRP_Frq3  +     0.11273534310895 *
592904    +        GRP_Frq4  +    -0.36089895624306 * GRP_Income2
592905    +          +    -0.38271011363759 * GRP_Income3  +     0.33282176047548 *
592906    +        GRP_Income4  +    -0.13854310872224 * GRP_Mnt2
592907    +          +    -0.31005746238746 * GRP_Mnt3  +     0.02082673800287 * GRP_Mnt4
592908    +          +     0.01224737349632 * GRP_MntFishProducts2
592909    +          +    -0.19458526368147 * GRP_MntFishProducts3
592910    +          +    -0.25187479317784 * GRP_MntFishProducts4
592911    +          +     0.01924229245332 * GRP_MntGoldProds2
592912    +          +     0.01852658027428 * GRP_MntGoldProds3
592913    +          +    -0.23305256947549 * GRP_MntGoldProds4
592914    +          +     0.13401051842966 * GRP_MntMeatProducts2
592915    +          +     0.27193108385041 * GRP_MntMeatProducts3
592916    +          +     0.01379422261623 * GRP_MntMeatProducts4
592917    +          +    -0.57181882470311 * GRP_MntWines2  +    -0.57187059852098 *
592918    +        GRP_MntWines3  +     0.30882985081217 * GRP_MntWines4
592919    +          +     0.49912000555763 * GRP_NumCatalogPurchases3
592920    +          +    -0.04354876738665 * GRP_NumCatalogPurchases4
592921    +          +     0.34941540707612 * GRP_NumDistPurchases2
592922    +          +     0.32691169055841 * GRP_NumDistPurchases3
592923    +          +    -0.09211947503636 * GRP_NumDistPurchases4
592924    +          +     0.23482266977456 * GRP_NumWebPurchases2
592925    +          +     0.33507315521476 * GRP_NumWebPurchases3
592926    +          +    -0.08817191120299 * GRP_NumWebPurchases4
592927    +          +     0.02374098589478 * GRP_RFMstat2  +    -0.23629328969151 *
592928    +        GRP_RFMstat3  +    -0.52724215414655 * GRP_RFMstat4
592929    +          +    -0.11172774703142 * GRP_RMntFrq2  +    -0.23930023577086 *
592930    +        GRP_RMntFrq3  +    -0.17783974029566 * GRP_RMntFrq4
592931    +          +    -0.09948595230391 * GRP_Recency2  +    -0.15957779348689 *
592932    +        GRP_Recency3  +     0.12430840578537 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = 0.7597594494859 * GRP_AcceptedCmp52 + -0.32376689593056 * GRP_Frq2 
+ -0.07779183366163 * GRP_Frq3 + 0.11273534310895 * GRP_Frq4 + -0.36089895624306 * GRP_Income2 
+ -0.38271011363759 * GRP_Income3 + 0.33282176047548 * GRP_Income4 + -0.13854310872224 * 
GRP_Mnt2 + -0.31005746238746 * GRP_Mnt3 + 0.02082673800287 * GRP_Mnt4 + 0.01224737349632 * 
GRP_MntFishProducts2 + -0.19458526368147 * GRP_MntFishProducts3 + -0.25187479317784 * 
GRP_MntFishProducts4 + 0.01924229245332 * GRP_MntGoldProds2 + 0.01852658027428 * 
GRP_MntGoldProds3 + -0.23305256947549 * GRP_MntGoldProds4 + 0.13401051842966 * 
GRP_MntMeatProducts2 + 0.27193108385041 * GRP_MntMeatProducts3 + 0.01379422261623 * 
GRP_MntMeatProducts4 + -0.57181882470311 * GRP_MntWines2 + -0.57187059852098 * GRP_MntWines3 + 
0.30882985081217 * GRP_MntWines4 + 0.49912000555763 * GRP_NumCatalogPurchases3 + 
-0.04354876738665 * GRP_NumCatalogPurchases4 + 0.34941540707612 * GRP_NumDistPurchases2 + 
0.32691169055841 * GRP_NumDistPurchases3 + -0.09211947503636 * GRP_NumDistPurchases4 + 
0.23482266977456 * GRP_NumWebPurchases2 + 0.33507315521476 * GRP_NumWebPurchases3 + 
-0.08817191120299 * GRP_NumWebPurchases4 + 0.02374098589478 * GRP_RFMstat2 + -0.23629328969151 
* GRP_RFMstat3 + -0.52724215414655 * GRP_RFMstat4 + -0.11172774703142 * GRP_RMntFrq2 + 
-0.23930023577086 * GRP_RMntFrq3 + -0.17783974029566 * GRP_RMntFrq4 + -0.09948595230391 * 
GRP_Recency2 + -0.15957779348689 * GRP_Recency3 + 0.12430840578537 * GRP_Recency4 ;
592933    +   H11  =    -0.83610777610194 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.83610777610194 + H11 ;
592934    +   H12  =     0.10079183797017 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.10079183797017 + H12 ;
592935    +   H13  =    -1.02827583788856 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.02827583788856 + H13 ;
592936    +   H14  =    -0.61336153955727 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.61336153955727 + H14 ;
592937    +   H15  =      0.2253118259528 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.2253118259528 + H15 ;
592938    +   H16  =     0.92538506927963 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 0.92538506927963 + H16 ;
592939    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
592940    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
592941    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
592942    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
592943    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
592944    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
592945    +END;
MPRINT(EM_DIAGRAM):   END;
592946    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
592947    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
592948    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
592949    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
592950    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
592951    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
592952    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
592953    +END;
MPRINT(EM_DIAGRAM):   END;
592954    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
592955    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
592956    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
592957    +
592958    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
592959    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
592960    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
592961    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
592962    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
592963    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
592964    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
592965    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
592966    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
592967    +end;
MPRINT(EM_DIAGRAM):   end;
592968    +else do;
MPRINT(EM_DIAGRAM):   else do;
592969    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
592970    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
592971    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
592972    +   end;
MPRINT(EM_DIAGRAM):   end;
592973    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
592974    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
592975    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
592976    +   end;
MPRINT(EM_DIAGRAM):   end;
592977    +   else do;
MPRINT(EM_DIAGRAM):   else do;
592978    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
592979    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
592980    +   end;
MPRINT(EM_DIAGRAM):   end;
592981    +end;
MPRINT(EM_DIAGRAM):   end;
592982    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
592983    +   P_DepVar1  =    -0.23603747173409 * H11  +     2.21167504352097 * H12
592984    +          +    -0.73919409105284 * H13  +     -1.1148994433356 * H14
592985    +          +    -1.58525957527132 * H15  +    -1.77364534531332 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.23603747173409 * H11 + 2.21167504352097 * H12 + 
-0.73919409105284 * H13 + -1.1148994433356 * H14 + -1.58525957527132 * H15 + -1.77364534531332 
* H16 ;
592986    +   P_DepVar1  =    -1.69291771072924 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.69291771072924 + P_DepVar1 ;
592987    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
592988    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
592989    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
592990    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
592991    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
592992    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
592993    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
592994    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
592995    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
592996    +END;
MPRINT(EM_DIAGRAM):   END;
592997    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
592998    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
592999    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
593000    +END;
MPRINT(EM_DIAGRAM):   END;
593001    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
593002    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
593003    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
593004    +END;
MPRINT(EM_DIAGRAM):   END;
593005    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
593006    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
593007    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
593008    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
593009    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
593010    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
593011    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
593012    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
593013    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
593014    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
593015    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
593016    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
593017    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
593018    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
593019    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
593020    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
593021    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
593022    +END;
MPRINT(EM_DIAGRAM):   END;
593023    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
593024    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
593025    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
593026    +drop
593027    +H11
593028    +H12
593029    +H13
593030    +H14
593031    +H15
593032    +H16
593033    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
593034     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL23_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
593035     quit;
593036     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
593037     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
593038     * Neural23: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural23: Computing metadata for TRAIN data;
593039     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL23_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural23_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural23_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural23_TRAIN out=WORK.M151OVQH noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M151OVQH;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M151OVQH(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M151OVQH;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M151OVQH;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3HLVEP0 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3HLVEP0;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3HLVEP0;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0SU0B0U(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3HLVEP0;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3HLVEP0;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3HLVEP0;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3HLVEP0;
MPRINT(EMADVISECOLUMNS):   set WORK.M3HLVEP0;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural23";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural23";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural23: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
593351     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
593352     set EMWS8.Neural23_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_EMINFO;
The SAS System

593353     where DATA='Neural23' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural23' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
593354     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL23_EMINFO.
      WHERE (DATA='Neural23') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

593355     data EMWS8.Neural23_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural23_EMINFO;
593356     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
593357     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
593358     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL23_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
593362     run;
593363     data EMWS8.Neural23_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_EMINFO;
593364     set EMWS8.Neural23_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_EMINFO WORK.MODELTEMP_INFO;
593365     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL23_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL23_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

593366     proc sort data = EMWS8.Neural23_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural23_EMINFO NOTHREADS;
593367     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
593368     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL23_EMINFO.
NOTE: The data set EMWS8.NEURAL23_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

593369     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
593370     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
593371     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

593372     proc sort data = EMWS8.Neural23_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural23_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
593373     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
593374     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL23_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

593375     data EMWS8.Neural23_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_EMINFO;
593376     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
593377     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
593378     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL23_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

593379     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
593380     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
593381     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
593382     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL23_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL23_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
