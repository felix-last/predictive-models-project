MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.27 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.27 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3KD0MYV 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3KD0MYV new;
MPRINT(EM_DIAGRAM):   run;
875647     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
875648     set EMWS8.Neural23_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_OUTKEY;
875649     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
875650     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set EMWS8.NEURAL23_OUTKEY.
NOTE: The data set WORK.OUTKEY has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

875651     filename emflow
875651   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural23: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
875652     *------------------------------------------------------------*;
875653     * Neural23: Scoring DATA data;
875654     *------------------------------------------------------------*;
875655     data EMWS8.Neural23_TRAIN
875656     / view=EMWS8.Neural23_TRAIN
875657     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_TRAIN / view=EMWS8.Neural23_TRAIN ;
875658     set EMWS8.BINNING_TRAIN
875659     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN ;
875660     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas.
875661    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
875662    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
875663    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
875664    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
875665    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
875666    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
875667    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
875668    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
875669    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
875670    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
875671    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
875672    +LENGTH _WARN_ $4
875673    +      F_DepVar  $ 12
875674    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
875675    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
875676    +
875677    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
875678    +
875679    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
875680    +
875681    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
875682    +
875683    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
875684    +
875685    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
875686    +
875687    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
875688    +
875689    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
875690    +
875691    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
875692    +
875693    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
875694    +
875695    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
875696    +
875697    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
875698    +
875699    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
875700    +
875701    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
875702    +
875703    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
875704    +
875705    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
875706    +
875707    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
875708    +
875709    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
875710    +
875711    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
875712    +
875713    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
875714    +
875715    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
875716    +
875717    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
875718    +
875719    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
875720    +
875721    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
875722    +
875723    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
875724    +
875725    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
875726    +
875727    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
875728    +
875729    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
875730    +
875731    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
875732    +
875733    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
875734    +
875735    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
875736    +
875737    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
875738    +
875739    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
875740    +
875741    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
875742    +
875743    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
875744    +
875745    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
875746    +
875747    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
875748    +
875749    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
875750    +
875751    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
875752    +
875753    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
875754    +
875755    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
875756    +
875757    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
875758    +
875759    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
875760    +
875761    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
875762    +
875763    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
875764    +
875765    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
875766    +
875767    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
875768    +
875769    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
875770    +
875771    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
875772    +
875773    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
875774    +
875775    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
875776    +
875777    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
875778    +
875779    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
875780    +
875781    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
875782    +
875783    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
875784    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
875785    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
875786    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
875787    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
875788    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
875789    +end;
MPRINT(EM_DIAGRAM):   end;
875790    +else do;
MPRINT(EM_DIAGRAM):   else do;
875791    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
875792    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
875793    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
875794    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
875795    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
875796    +   end;
MPRINT(EM_DIAGRAM):   end;
875797    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
875798    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
875799    +   end;
MPRINT(EM_DIAGRAM):   end;
875800    +   else do;
MPRINT(EM_DIAGRAM):   else do;
875801    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
875802    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
875803    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
875804    +   end;
MPRINT(EM_DIAGRAM):   end;
875805    +end;
MPRINT(EM_DIAGRAM):   end;
875806    +
875807    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
875808    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
875809    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
875810    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
875811    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
875812    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
875813    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
875814    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
875815    +end;
MPRINT(EM_DIAGRAM):   end;
875816    +else do;
MPRINT(EM_DIAGRAM):   else do;
875817    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
875818    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
875819    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
875820    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
875821    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
875822    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
875823    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
875824    +   end;
MPRINT(EM_DIAGRAM):   end;
875825    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
875826    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
875827    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
875828    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
875829    +   end;
MPRINT(EM_DIAGRAM):   end;
875830    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
875831    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
875832    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
875833    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
875834    +   end;
MPRINT(EM_DIAGRAM):   end;
875835    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
875836    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
875837    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
875838    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
875839    +   end;
MPRINT(EM_DIAGRAM):   end;
875840    +   else do;
MPRINT(EM_DIAGRAM):   else do;
875841    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
875842    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
875843    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
875844    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
875845    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
875846    +   end;
MPRINT(EM_DIAGRAM):   end;
875847    +end;
MPRINT(EM_DIAGRAM):   end;
875848    +
875849    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
875850    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
875851    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
875852    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
875853    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
875854    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
875855    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
875856    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
875857    +end;
MPRINT(EM_DIAGRAM):   end;
875858    +else do;
MPRINT(EM_DIAGRAM):   else do;
875859    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
875860    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
875861    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
875862    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
875863    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
875864    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
875865    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
875866    +   end;
MPRINT(EM_DIAGRAM):   end;
875867    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
875868    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
875869    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
875870    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
875871    +   end;
MPRINT(EM_DIAGRAM):   end;
875872    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
875873    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
875874    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
875875    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
875876    +   end;
MPRINT(EM_DIAGRAM):   end;
875877    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
875878    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
875879    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
875880    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
875881    +   end;
MPRINT(EM_DIAGRAM):   end;
875882    +   else do;
MPRINT(EM_DIAGRAM):   else do;
875883    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
875884    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
875885    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
875886    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
875887    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
875888    +   end;
MPRINT(EM_DIAGRAM):   end;
875889    +end;
MPRINT(EM_DIAGRAM):   end;
875890    +
875891    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
875892    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
875893    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
875894    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
875895    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
875896    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
875897    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
875898    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
875899    +end;
MPRINT(EM_DIAGRAM):   end;
875900    +else do;
MPRINT(EM_DIAGRAM):   else do;
875901    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
875902    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
875903    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
875904    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
875905    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
875906    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
875907    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
875908    +   end;
MPRINT(EM_DIAGRAM):   end;
875909    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
875910    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
875911    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
875912    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
875913    +   end;
MPRINT(EM_DIAGRAM):   end;
875914    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
875915    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
875916    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
875917    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
875918    +   end;
MPRINT(EM_DIAGRAM):   end;
875919    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
875920    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
875921    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
875922    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
875923    +   end;
MPRINT(EM_DIAGRAM):   end;
875924    +   else do;
MPRINT(EM_DIAGRAM):   else do;
875925    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
875926    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
875927    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
875928    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
875929    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
875930    +   end;
MPRINT(EM_DIAGRAM):   end;
875931    +end;
MPRINT(EM_DIAGRAM):   end;
875932    +
875933    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
875934    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
875935    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
875936    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
875937    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
875938    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
875939    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
875940    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
875941    +end;
MPRINT(EM_DIAGRAM):   end;
875942    +else do;
MPRINT(EM_DIAGRAM):   else do;
875943    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
875944    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
875945    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
875946    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
875947    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
875948    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
875949    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
875950    +   end;
MPRINT(EM_DIAGRAM):   end;
875951    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
875952    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
875953    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
875954    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
875955    +   end;
MPRINT(EM_DIAGRAM):   end;
875956    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
875957    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
875958    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
875959    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
875960    +   end;
MPRINT(EM_DIAGRAM):   end;
875961    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
875962    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
875963    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
875964    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
875965    +   end;
MPRINT(EM_DIAGRAM):   end;
875966    +   else do;
MPRINT(EM_DIAGRAM):   else do;
875967    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
875968    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
875969    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
875970    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
875971    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
875972    +   end;
MPRINT(EM_DIAGRAM):   end;
875973    +end;
MPRINT(EM_DIAGRAM):   end;
875974    +
875975    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
875976    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
875977    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
875978    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
875979    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
875980    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
875981    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
875982    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
875983    +end;
MPRINT(EM_DIAGRAM):   end;
875984    +else do;
MPRINT(EM_DIAGRAM):   else do;
875985    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
875986    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
875987    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
875988    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
875989    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
875990    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
875991    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
875992    +   end;
MPRINT(EM_DIAGRAM):   end;
875993    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
875994    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
875995    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
875996    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
875997    +   end;
MPRINT(EM_DIAGRAM):   end;
875998    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
875999    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
876000    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
876001    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
876002    +   end;
MPRINT(EM_DIAGRAM):   end;
876003    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
876004    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
876005    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
876006    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
876007    +   end;
MPRINT(EM_DIAGRAM):   end;
876008    +   else do;
MPRINT(EM_DIAGRAM):   else do;
876009    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
876010    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
876011    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
876012    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
876013    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876014    +   end;
MPRINT(EM_DIAGRAM):   end;
876015    +end;
MPRINT(EM_DIAGRAM):   end;
876016    +
876017    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
876018    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
876019    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
876020    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
876021    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
876022    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
876023    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
876024    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876025    +end;
MPRINT(EM_DIAGRAM):   end;
876026    +else do;
MPRINT(EM_DIAGRAM):   else do;
876027    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
876028    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
876029    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
876030    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
876031    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
876032    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
876033    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
876034    +   end;
MPRINT(EM_DIAGRAM):   end;
876035    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
876036    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
876037    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
876038    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
876039    +   end;
MPRINT(EM_DIAGRAM):   end;
876040    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
876041    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
876042    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
876043    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
876044    +   end;
MPRINT(EM_DIAGRAM):   end;
876045    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
876046    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
876047    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
876048    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
876049    +   end;
MPRINT(EM_DIAGRAM):   end;
876050    +   else do;
MPRINT(EM_DIAGRAM):   else do;
876051    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
876052    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
876053    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
876054    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
876055    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876056    +   end;
MPRINT(EM_DIAGRAM):   end;
876057    +end;
MPRINT(EM_DIAGRAM):   end;
876058    +
876059    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
876060    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
876061    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
876062    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
876063    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
876064    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
876065    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
876066    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876067    +end;
MPRINT(EM_DIAGRAM):   end;
876068    +else do;
MPRINT(EM_DIAGRAM):   else do;
876069    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
876070    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
876071    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
876072    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
876073    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
876074    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
876075    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
876076    +   end;
MPRINT(EM_DIAGRAM):   end;
876077    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
876078    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
876079    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
876080    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
876081    +   end;
MPRINT(EM_DIAGRAM):   end;
876082    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
876083    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
876084    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
876085    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
876086    +   end;
MPRINT(EM_DIAGRAM):   end;
876087    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
876088    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
876089    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
876090    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
876091    +   end;
MPRINT(EM_DIAGRAM):   end;
876092    +   else do;
MPRINT(EM_DIAGRAM):   else do;
876093    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
876094    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
876095    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
876096    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
876097    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876098    +   end;
MPRINT(EM_DIAGRAM):   end;
876099    +end;
MPRINT(EM_DIAGRAM):   end;
876100    +
876101    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
876102    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
876103    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
876104    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
876105    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
876106    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
876107    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876108    +end;
MPRINT(EM_DIAGRAM):   end;
876109    +else do;
MPRINT(EM_DIAGRAM):   else do;
876110    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
876111    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
876112    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
876113    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
876114    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
876115    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
876116    +   end;
MPRINT(EM_DIAGRAM):   end;
876117    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
876118    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
876119    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
876120    +   end;
MPRINT(EM_DIAGRAM):   end;
876121    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
876122    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
876123    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
876124    +   end;
MPRINT(EM_DIAGRAM):   end;
876125    +   else do;
MPRINT(EM_DIAGRAM):   else do;
876126    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
876127    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
876128    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
876129    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876130    +   end;
MPRINT(EM_DIAGRAM):   end;
876131    +end;
MPRINT(EM_DIAGRAM):   end;
876132    +
876133    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
876134    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
876135    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
876136    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
876137    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
876138    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
876139    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
876140    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876141    +end;
MPRINT(EM_DIAGRAM):   end;
876142    +else do;
MPRINT(EM_DIAGRAM):   else do;
876143    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
876144    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
876145    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
876146    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
876147    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
876148    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
876149    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
876150    +   end;
MPRINT(EM_DIAGRAM):   end;
876151    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
876152    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
876153    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
876154    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
876155    +   end;
MPRINT(EM_DIAGRAM):   end;
876156    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
876157    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
876158    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
876159    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
876160    +   end;
MPRINT(EM_DIAGRAM):   end;
876161    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
876162    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
876163    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
876164    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
876165    +   end;
MPRINT(EM_DIAGRAM):   end;
876166    +   else do;
MPRINT(EM_DIAGRAM):   else do;
876167    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
876168    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
876169    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
876170    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
876171    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876172    +   end;
MPRINT(EM_DIAGRAM):   end;
876173    +end;
MPRINT(EM_DIAGRAM):   end;
876174    +
876175    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
876176    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
876177    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
876178    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
876179    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
876180    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
876181    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
876182    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876183    +end;
MPRINT(EM_DIAGRAM):   end;
876184    +else do;
MPRINT(EM_DIAGRAM):   else do;
876185    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
876186    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
876187    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
876188    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
876189    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
876190    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
876191    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
876192    +   end;
MPRINT(EM_DIAGRAM):   end;
876193    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
876194    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
876195    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
876196    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
876197    +   end;
MPRINT(EM_DIAGRAM):   end;
876198    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
876199    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
876200    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
876201    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
876202    +   end;
MPRINT(EM_DIAGRAM):   end;
876203    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
876204    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
876205    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
876206    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
876207    +   end;
MPRINT(EM_DIAGRAM):   end;
876208    +   else do;
MPRINT(EM_DIAGRAM):   else do;
876209    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
876210    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
876211    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
876212    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
876213    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876214    +   end;
MPRINT(EM_DIAGRAM):   end;
876215    +end;
MPRINT(EM_DIAGRAM):   end;
876216    +
876217    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
876218    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
876219    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
876220    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
876221    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
876222    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
876223    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
876224    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876225    +end;
MPRINT(EM_DIAGRAM):   end;
876226    +else do;
MPRINT(EM_DIAGRAM):   else do;
876227    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
876228    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
876229    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
876230    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
876231    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
876232    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
876233    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
876234    +   end;
MPRINT(EM_DIAGRAM):   end;
876235    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
876236    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
876237    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
876238    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
876239    +   end;
MPRINT(EM_DIAGRAM):   end;
876240    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
876241    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
876242    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
876243    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
876244    +   end;
MPRINT(EM_DIAGRAM):   end;
876245    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
876246    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
876247    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
876248    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
876249    +   end;
MPRINT(EM_DIAGRAM):   end;
876250    +   else do;
MPRINT(EM_DIAGRAM):   else do;
876251    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
876252    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
876253    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
876254    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
876255    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876256    +   end;
MPRINT(EM_DIAGRAM):   end;
876257    +end;
MPRINT(EM_DIAGRAM):   end;
876258    +
876259    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
876260    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
876261    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
876262    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
876263    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
876264    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
876265    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
876266    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876267    +end;
MPRINT(EM_DIAGRAM):   end;
876268    +else do;
MPRINT(EM_DIAGRAM):   else do;
876269    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
876270    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
876271    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
876272    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
876273    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
876274    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
876275    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
876276    +   end;
MPRINT(EM_DIAGRAM):   end;
876277    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
876278    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
876279    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
876280    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
876281    +   end;
MPRINT(EM_DIAGRAM):   end;
876282    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
876283    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
876284    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
876285    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
876286    +   end;
MPRINT(EM_DIAGRAM):   end;
876287    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
876288    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
876289    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
876290    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
876291    +   end;
MPRINT(EM_DIAGRAM):   end;
876292    +   else do;
MPRINT(EM_DIAGRAM):   else do;
876293    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
876294    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
876295    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
876296    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
876297    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876298    +   end;
MPRINT(EM_DIAGRAM):   end;
876299    +end;
MPRINT(EM_DIAGRAM):   end;
876300    +
876301    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
876302    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
876303    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
876304    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
876305    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
876306    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
876307    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
876308    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876309    +end;
MPRINT(EM_DIAGRAM):   end;
876310    +else do;
MPRINT(EM_DIAGRAM):   else do;
876311    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
876312    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
876313    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
876314    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
876315    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
876316    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
876317    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
876318    +   end;
MPRINT(EM_DIAGRAM):   end;
876319    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
876320    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
876321    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
876322    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
876323    +   end;
MPRINT(EM_DIAGRAM):   end;
876324    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
876325    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
876326    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
876327    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
876328    +   end;
MPRINT(EM_DIAGRAM):   end;
876329    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
876330    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
876331    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
876332    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
876333    +   end;
MPRINT(EM_DIAGRAM):   end;
876334    +   else do;
MPRINT(EM_DIAGRAM):   else do;
876335    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
876336    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
876337    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
876338    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
876339    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876340    +   end;
MPRINT(EM_DIAGRAM):   end;
876341    +end;
MPRINT(EM_DIAGRAM):   end;
876342    +
876343    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
876344    +*** Checking missing input Interval
876345    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
876346    +
876347    +IF NMISS(
876348    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
876349    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
876350    +
876351    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876352    +END;
MPRINT(EM_DIAGRAM):   END;
876353    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
876354    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
876355    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
876356    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
876357    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
876358    +END;
MPRINT(EM_DIAGRAM):   END;
876359    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
876360    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
876361    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
876362    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
876363    +END;
MPRINT(EM_DIAGRAM):   END;
876364    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
876365    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
876366    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
876367    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
876368    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
876369    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
876370    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
876371    +   H11  =     0.25397263809886 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.25397263809886 * S_Year_Birth ;
876372    +   H12  =     0.05075762370892 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.05075762370892 * S_Year_Birth ;
876373    +   H13  =     0.04360472272597 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.04360472272597 * S_Year_Birth ;
876374    +   H14  =     0.01387196819865 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.01387196819865 * S_Year_Birth ;
876375    +   H15  =     0.05734148733166 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 0.05734148733166 * S_Year_Birth ;
876376    +   H16  =     0.07449261080848 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = 0.07449261080848 * S_Year_Birth ;
876377    +   H11  = H11  +    -0.13483168537737 * GRP_AcceptedCmp52
876378    +          +     0.02321007103238 * GRP_Frq2  +      0.2993754491201 * GRP_Frq3
876379    +          +     0.03188619345426 * GRP_Frq4  +     0.23837524440518 *
876380    +        GRP_Income2  +    -0.02988101686846 * GRP_Income3
876381    +          +    -0.04314945794282 * GRP_Income4  +      0.0797760707666 *
876382    +        GRP_Mnt2  +    -0.02272798443967 * GRP_Mnt3  +    -0.37386810467628 *
876383    +        GRP_Mnt4  +      0.0916244532169 * GRP_MntFishProducts2
876384    +          +    -0.08991361976323 * GRP_MntFishProducts3
876385    +          +    -0.12439533124432 * GRP_MntFishProducts4
876386    +          +    -0.38906628986229 * GRP_MntGoldProds2
876387    +          +     0.02112411721097 * GRP_MntGoldProds3
876388    +          +     0.05560214439156 * GRP_MntGoldProds4
876389    +          +     0.07558086835487 * GRP_MntMeatProducts2
876390    +          +    -0.24998452825562 * GRP_MntMeatProducts3
876391    +          +    -0.11030888417179 * GRP_MntMeatProducts4
876392    +          +     0.13229832861513 * GRP_MntWines2  +     0.50793143142609 *
876393    +        GRP_MntWines3  +    -0.26273353961061 * GRP_MntWines4
876394    +          +    -0.02587175944603 * GRP_NumCatalogPurchases3
876395    +          +    -0.07172373139956 * GRP_NumCatalogPurchases4
876396    +          +    -0.26905740590447 * GRP_NumDistPurchases2
876397    +          +     0.06889154687101 * GRP_NumDistPurchases3
876398    +          +    -0.31591167055503 * GRP_NumDistPurchases4
876399    +          +    -0.26862765566252 * GRP_NumWebPurchases2
876400    +          +     0.01579611280005 * GRP_NumWebPurchases3
876401    +          +    -0.06884702149074 * GRP_NumWebPurchases4
876402    +          +     0.19400469320488 * GRP_RFMstat2  +     0.32533875784776 *
876403    +        GRP_RFMstat3  +    -0.13730222015702 * GRP_RFMstat4
876404    +          +    -0.21360134050893 * GRP_RMntFrq2  +     0.10280382689873 *
876405    +        GRP_RMntFrq3  +    -0.16238020658392 * GRP_RMntFrq4
876406    +          +     0.38795494894841 * GRP_Recency2  +    -0.18447788823185 *
876407    +        GRP_Recency3  +    -0.44523742460939 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.13483168537737 * GRP_AcceptedCmp52 + 0.02321007103238 * 
GRP_Frq2 + 0.2993754491201 * GRP_Frq3 + 0.03188619345426 * GRP_Frq4 + 0.23837524440518 * 
GRP_Income2 + -0.02988101686846 * GRP_Income3 + -0.04314945794282 * GRP_Income4 + 
0.0797760707666 * GRP_Mnt2 + -0.02272798443967 * GRP_Mnt3 + -0.37386810467628 * GRP_Mnt4 + 
0.0916244532169 * GRP_MntFishProducts2 + -0.08991361976323 * GRP_MntFishProducts3 + 
-0.12439533124432 * GRP_MntFishProducts4 + -0.38906628986229 * GRP_MntGoldProds2 + 
0.02112411721097 * GRP_MntGoldProds3 + 0.05560214439156 * GRP_MntGoldProds4 + 0.07558086835487 
* GRP_MntMeatProducts2 + -0.24998452825562 * GRP_MntMeatProducts3 + -0.11030888417179 * 
GRP_MntMeatProducts4 + 0.13229832861513 * GRP_MntWines2 + 0.50793143142609 * GRP_MntWines3 + 
-0.26273353961061 * GRP_MntWines4 + -0.02587175944603 * GRP_NumCatalogPurchases3 + 
-0.07172373139956 * GRP_NumCatalogPurchases4 + -0.26905740590447 * GRP_NumDistPurchases2 + 
0.06889154687101 * GRP_NumDistPurchases3 + -0.31591167055503 * GRP_NumDistPurchases4 + 
-0.26862765566252 * GRP_NumWebPurchases2 + 0.01579611280005 * GRP_NumWebPurchases3 + 
-0.06884702149074 * GRP_NumWebPurchases4 + 0.19400469320488 * GRP_RFMstat2 + 0.32533875784776 
* GRP_RFMstat3 + -0.13730222015702 * GRP_RFMstat4 + -0.21360134050893 * GRP_RMntFrq2 + 
0.10280382689873 * GRP_RMntFrq3 + -0.16238020658392 * GRP_RMntFrq4 + 0.38795494894841 * 
GRP_Recency2 + -0.18447788823185 * GRP_Recency3 + -0.44523742460939 * GRP_Recency4 ;
876408    +   H12  = H12  +    -0.44240901099215 * GRP_AcceptedCmp52
876409    +          +     0.35451936529374 * GRP_Frq2  +     0.01466130191686 * GRP_Frq3
876410    +          +     0.21356077566978 * GRP_Frq4  +     0.22887565933637 *
876411    +        GRP_Income2  +     0.28123841156129 * GRP_Income3
876412    +          +    -0.30634832652689 * GRP_Income4  +     0.06733141985754 *
876413    +        GRP_Mnt2  +     0.24901181590062 * GRP_Mnt3  +     0.23926240883217 *
876414    +        GRP_Mnt4  +     0.36878256431394 * GRP_MntFishProducts2
876415    +          +    -0.03033118293022 * GRP_MntFishProducts3
876416    +          +     0.12939247483371 * GRP_MntFishProducts4
876417    +          +     -0.1948739109476 * GRP_MntGoldProds2
876418    +          +    -0.02487689041808 * GRP_MntGoldProds3
876419    +          +      0.0424854445517 * GRP_MntGoldProds4
876420    +          +    -0.77110165164491 * GRP_MntMeatProducts2
876421    +          +    -0.04188692453988 * GRP_MntMeatProducts3
876422    +          +     0.16117883521584 * GRP_MntMeatProducts4
876423    +          +     0.26607076588839 * GRP_MntWines2  +     0.08155165225431 *
876424    +        GRP_MntWines3  +     0.05320347913397 * GRP_MntWines4
876425    +          +    -0.60136669330804 * GRP_NumCatalogPurchases3
876426    +          +    -0.32571087796929 * GRP_NumCatalogPurchases4
876427    +          +    -0.82361130213661 * GRP_NumDistPurchases2
876428    +          +     0.18332361990877 * GRP_NumDistPurchases3
876429    +          +    -0.10228504756385 * GRP_NumDistPurchases4
876430    +          +     0.21492204339132 * GRP_NumWebPurchases2
876431    +          +     0.22752835090931 * GRP_NumWebPurchases3
876432    +          +    -0.04291366517536 * GRP_NumWebPurchases4
876433    +          +     -0.1860476520082 * GRP_RFMstat2  +      0.2676074141222 *
876434    +        GRP_RFMstat3  +     0.25111332591837 * GRP_RFMstat4
876435    +          +    -0.16694407619317 * GRP_RMntFrq2  +     0.21748370383635 *
876436    +        GRP_RMntFrq3  +    -0.33247097178921 * GRP_RMntFrq4
876437    +          +     0.96302825639489 * GRP_Recency2  +     0.29783943122668 *
876438    +        GRP_Recency3  +    -0.18073280365547 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.44240901099215 * GRP_AcceptedCmp52 + 0.35451936529374 * 
GRP_Frq2 + 0.01466130191686 * GRP_Frq3 + 0.21356077566978 * GRP_Frq4 + 0.22887565933637 * 
GRP_Income2 + 0.28123841156129 * GRP_Income3 + -0.30634832652689 * GRP_Income4 + 
0.06733141985754 * GRP_Mnt2 + 0.24901181590062 * GRP_Mnt3 + 0.23926240883217 * GRP_Mnt4 + 
0.36878256431394 * GRP_MntFishProducts2 + -0.03033118293022 * GRP_MntFishProducts3 + 
0.12939247483371 * GRP_MntFishProducts4 + -0.1948739109476 * GRP_MntGoldProds2 + 
-0.02487689041808 * GRP_MntGoldProds3 + 0.0424854445517 * GRP_MntGoldProds4 + 
-0.77110165164491 * GRP_MntMeatProducts2 + -0.04188692453988 * GRP_MntMeatProducts3 + 
0.16117883521584 * GRP_MntMeatProducts4 + 0.26607076588839 * GRP_MntWines2 + 0.08155165225431 
* GRP_MntWines3 + 0.05320347913397 * GRP_MntWines4 + -0.60136669330804 * 
GRP_NumCatalogPurchases3 + -0.32571087796929 * GRP_NumCatalogPurchases4 + -0.82361130213661 * 
GRP_NumDistPurchases2 + 0.18332361990877 * GRP_NumDistPurchases3 + -0.10228504756385 * 
GRP_NumDistPurchases4 + 0.21492204339132 * GRP_NumWebPurchases2 + 0.22752835090931 * 
GRP_NumWebPurchases3 + -0.04291366517536 * GRP_NumWebPurchases4 + -0.1860476520082 * 
GRP_RFMstat2 + 0.2676074141222 * GRP_RFMstat3 + 0.25111332591837 * GRP_RFMstat4 + 
-0.16694407619317 * GRP_RMntFrq2 + 0.21748370383635 * GRP_RMntFrq3 + -0.33247097178921 * 
GRP_RMntFrq4 + 0.96302825639489 * GRP_Recency2 + 0.29783943122668 * GRP_Recency3 + 
-0.18073280365547 * GRP_Recency4 ;
876439    +   H13  = H13  +     0.02391312263521 * GRP_AcceptedCmp52
876440    +          +    -0.01218158666492 * GRP_Frq2  +     0.03493150543946 * GRP_Frq3
876441    +          +    -0.19640223643897 * GRP_Frq4  +    -0.02394476100786 *
876442    +        GRP_Income2  +     0.05107107029363 * GRP_Income3
876443    +          +    -0.26596751360911 * GRP_Income4  +    -0.02628350983207 *
876444    +        GRP_Mnt2  +    -0.08273234777804 * GRP_Mnt3  +      0.2039544161917 *
876445    +        GRP_Mnt4  +     0.19888587009926 * GRP_MntFishProducts2
876446    +          +    -0.12190385526661 * GRP_MntFishProducts3
876447    +          +     0.11161376295027 * GRP_MntFishProducts4
876448    +          +     0.09536549249994 * GRP_MntGoldProds2
876449    +          +    -0.39027188388377 * GRP_MntGoldProds3
876450    +          +    -0.26960120596574 * GRP_MntGoldProds4
876451    +          +    -0.29704810464482 * GRP_MntMeatProducts2
876452    +          +    -0.17523279359181 * GRP_MntMeatProducts3
876453    +          +     0.01169006509688 * GRP_MntMeatProducts4
876454    +          +    -0.03150424899485 * GRP_MntWines2  +    -0.18135684744581 *
876455    +        GRP_MntWines3  +    -0.22282316044351 * GRP_MntWines4
876456    +          +    -0.06575154068738 * GRP_NumCatalogPurchases3
876457    +          +     0.12535793167638 * GRP_NumCatalogPurchases4
876458    +          +     0.10187760390092 * GRP_NumDistPurchases2
876459    +          +    -0.25409837313865 * GRP_NumDistPurchases3
876460    +          +    -0.28689980992526 * GRP_NumDistPurchases4
876461    +          +     0.00005909057861 * GRP_NumWebPurchases2
876462    +          +    -0.14419000341563 * GRP_NumWebPurchases3
876463    +          +     0.09095003593529 * GRP_NumWebPurchases4
876464    +          +    -0.02794941494222 * GRP_RFMstat2  +    -0.08735126371613 *
876465    +        GRP_RFMstat3  +      0.0136997814979 * GRP_RFMstat4
876466    +          +    -0.02686274413645 * GRP_RMntFrq2  +    -0.13529202759766 *
876467    +        GRP_RMntFrq3  +     0.22088337575055 * GRP_RMntFrq4
876468    +          +      0.2635440865684 * GRP_Recency2  +     0.12547691494271 *
876469    +        GRP_Recency3  +    -0.10311689817468 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02391312263521 * GRP_AcceptedCmp52 + -0.01218158666492 * 
GRP_Frq2 + 0.03493150543946 * GRP_Frq3 + -0.19640223643897 * GRP_Frq4 + -0.02394476100786 * 
GRP_Income2 + 0.05107107029363 * GRP_Income3 + -0.26596751360911 * GRP_Income4 + 
-0.02628350983207 * GRP_Mnt2 + -0.08273234777804 * GRP_Mnt3 + 0.2039544161917 * GRP_Mnt4 + 
0.19888587009926 * GRP_MntFishProducts2 + -0.12190385526661 * GRP_MntFishProducts3 + 
0.11161376295027 * GRP_MntFishProducts4 + 0.09536549249994 * GRP_MntGoldProds2 + 
-0.39027188388377 * GRP_MntGoldProds3 + -0.26960120596574 * GRP_MntGoldProds4 + 
-0.29704810464482 * GRP_MntMeatProducts2 + -0.17523279359181 * GRP_MntMeatProducts3 + 
0.01169006509688 * GRP_MntMeatProducts4 + -0.03150424899485 * GRP_MntWines2 + 
-0.18135684744581 * GRP_MntWines3 + -0.22282316044351 * GRP_MntWines4 + -0.06575154068738 * 
GRP_NumCatalogPurchases3 + 0.12535793167638 * GRP_NumCatalogPurchases4 + 0.10187760390092 * 
GRP_NumDistPurchases2 + -0.25409837313865 * GRP_NumDistPurchases3 + -0.28689980992526 * 
GRP_NumDistPurchases4 + 0.00005909057861 * GRP_NumWebPurchases2 + -0.14419000341563 * 
GRP_NumWebPurchases3 + 0.09095003593529 * GRP_NumWebPurchases4 + -0.02794941494222 * 
GRP_RFMstat2 + -0.08735126371613 * GRP_RFMstat3 + 0.0136997814979 * GRP_RFMstat4 + 
-0.02686274413645 * GRP_RMntFrq2 + -0.13529202759766 * GRP_RMntFrq3 + 0.22088337575055 * 
GRP_RMntFrq4 + 0.2635440865684 * GRP_Recency2 + 0.12547691494271 * GRP_Recency3 + 
-0.10311689817468 * GRP_Recency4 ;
876470    +   H14  = H14  +     0.41081496203789 * GRP_AcceptedCmp52
876471    +          +    -0.47313297382337 * GRP_Frq2  +     0.19313816686029 * GRP_Frq3
876472    +          +     0.41736322582944 * GRP_Frq4  +    -0.28916219130566 *
876473    +        GRP_Income2  +     0.14505600514674 * GRP_Income3
876474    +          +    -0.04580645427966 * GRP_Income4  +    -0.19949742172257 *
876475    +        GRP_Mnt2  +     0.27329529634974 * GRP_Mnt3  +     0.33404292971179 *
876476    +        GRP_Mnt4  +    -0.37521460360102 * GRP_MntFishProducts2
876477    +          +    -0.14631724639492 * GRP_MntFishProducts3
876478    +          +     0.10002979979527 * GRP_MntFishProducts4
876479    +          +    -0.09816985850711 * GRP_MntGoldProds2
876480    +          +    -0.12203012318985 * GRP_MntGoldProds3
876481    +          +    -0.01815311012777 * GRP_MntGoldProds4
876482    +          +    -0.06619591895459 * GRP_MntMeatProducts2
876483    +          +    -0.09072077897467 * GRP_MntMeatProducts3
876484    +          +      0.1726695423557 * GRP_MntMeatProducts4
876485    +          +    -0.28636541965058 * GRP_MntWines2  +    -0.02631953768864 *
876486    +        GRP_MntWines3  +     0.06980122973657 * GRP_MntWines4
876487    +          +     0.09645375616786 * GRP_NumCatalogPurchases3
876488    +          +    -0.41914184592159 * GRP_NumCatalogPurchases4
876489    +          +      0.1854692255158 * GRP_NumDistPurchases2
876490    +          +    -0.22330441571095 * GRP_NumDistPurchases3
876491    +          +     0.13028835056864 * GRP_NumDistPurchases4
876492    +          +    -0.16915625127212 * GRP_NumWebPurchases2
876493    +          +    -0.29991156671478 * GRP_NumWebPurchases3
876494    +          +     0.01989579721354 * GRP_NumWebPurchases4
876495    +          +    -0.12351517510664 * GRP_RFMstat2  +     0.41722412115996 *
876496    +        GRP_RFMstat3  +    -0.02210360437313 * GRP_RFMstat4
876497    +          +    -0.04201080178576 * GRP_RMntFrq2  +     0.21775390796319 *
876498    +        GRP_RMntFrq3  +     0.31823734284083 * GRP_RMntFrq4
876499    +          +    -0.53168026601605 * GRP_Recency2  +     -0.3287664545088 *
876500    +        GRP_Recency3  +     0.04505851470752 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.41081496203789 * GRP_AcceptedCmp52 + -0.47313297382337 * 
GRP_Frq2 + 0.19313816686029 * GRP_Frq3 + 0.41736322582944 * GRP_Frq4 + -0.28916219130566 * 
GRP_Income2 + 0.14505600514674 * GRP_Income3 + -0.04580645427966 * GRP_Income4 + 
-0.19949742172257 * GRP_Mnt2 + 0.27329529634974 * GRP_Mnt3 + 0.33404292971179 * GRP_Mnt4 + 
-0.37521460360102 * GRP_MntFishProducts2 + -0.14631724639492 * GRP_MntFishProducts3 + 
0.10002979979527 * GRP_MntFishProducts4 + -0.09816985850711 * GRP_MntGoldProds2 + 
-0.12203012318985 * GRP_MntGoldProds3 + -0.01815311012777 * GRP_MntGoldProds4 + 
-0.06619591895459 * GRP_MntMeatProducts2 + -0.09072077897467 * GRP_MntMeatProducts3 + 
0.1726695423557 * GRP_MntMeatProducts4 + -0.28636541965058 * GRP_MntWines2 + -0.02631953768864 
* GRP_MntWines3 + 0.06980122973657 * GRP_MntWines4 + 0.09645375616786 * 
GRP_NumCatalogPurchases3 + -0.41914184592159 * GRP_NumCatalogPurchases4 + 0.1854692255158 * 
GRP_NumDistPurchases2 + -0.22330441571095 * GRP_NumDistPurchases3 + 0.13028835056864 * 
GRP_NumDistPurchases4 + -0.16915625127212 * GRP_NumWebPurchases2 + -0.29991156671478 * 
GRP_NumWebPurchases3 + 0.01989579721354 * GRP_NumWebPurchases4 + -0.12351517510664 * 
GRP_RFMstat2 + 0.41722412115996 * GRP_RFMstat3 + -0.02210360437313 * GRP_RFMstat4 + 
-0.04201080178576 * GRP_RMntFrq2 + 0.21775390796319 * GRP_RMntFrq3 + 0.31823734284083 * 
GRP_RMntFrq4 + -0.53168026601605 * GRP_Recency2 + -0.3287664545088 * GRP_Recency3 + 
0.04505851470752 * GRP_Recency4 ;
876501    +   H15  = H15  +     0.13088214496598 * GRP_AcceptedCmp52
876502    +          +    -0.08389895441588 * GRP_Frq2  +     0.05379617788531 * GRP_Frq3
876503    +          +     0.05704464608157 * GRP_Frq4  +    -0.33954574127328 *
876504    +        GRP_Income2  +    -0.19537868529992 * GRP_Income3
876505    +          +     0.16339422960337 * GRP_Income4  +    -0.15103080606917 *
876506    +        GRP_Mnt2  +    -0.10359763066736 * GRP_Mnt3  +    -0.15169095818331 *
876507    +        GRP_Mnt4  +    -0.00757439653534 * GRP_MntFishProducts2
876508    +          +     0.03013301742801 * GRP_MntFishProducts3
876509    +          +     -0.0753778180106 * GRP_MntFishProducts4
876510    +          +     0.22882421007211 * GRP_MntGoldProds2
876511    +          +    -0.06369987000315 * GRP_MntGoldProds3
876512    +          +     0.09890582278559 * GRP_MntGoldProds4
876513    +          +    -0.21052640581149 * GRP_MntMeatProducts2
876514    +          +    -0.00867214697179 * GRP_MntMeatProducts3
876515    +          +     0.11929485476343 * GRP_MntMeatProducts4
876516    +          +    -0.18943631653077 * GRP_MntWines2  +     0.03539441492325 *
876517    +        GRP_MntWines3  +     0.30650819876628 * GRP_MntWines4
876518    +          +     0.06292612305453 * GRP_NumCatalogPurchases3
876519    +          +      0.2309036660938 * GRP_NumCatalogPurchases4
876520    +          +    -0.10062151440617 * GRP_NumDistPurchases2
876521    +          +       0.229091410456 * GRP_NumDistPurchases3
876522    +          +    -0.19729313017904 * GRP_NumDistPurchases4
876523    +          +    -0.04101710595215 * GRP_NumWebPurchases2
876524    +          +     0.13926341050039 * GRP_NumWebPurchases3
876525    +          +    -0.04443067825367 * GRP_NumWebPurchases4
876526    +          +     0.12014961650367 * GRP_RFMstat2  +     0.01617790323448 *
876527    +        GRP_RFMstat3  +     -0.1552934903319 * GRP_RFMstat4
876528    +          +    -0.04595909907677 * GRP_RMntFrq2  +    -0.44798863026137 *
876529    +        GRP_RMntFrq3  +     -0.0483895955721 * GRP_RMntFrq4
876530    +          +    -0.03768706422132 * GRP_Recency2  +    -0.02473503115913 *
876531    +        GRP_Recency3  +    -0.07674131244122 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.13088214496598 * GRP_AcceptedCmp52 + -0.08389895441588 * 
GRP_Frq2 + 0.05379617788531 * GRP_Frq3 + 0.05704464608157 * GRP_Frq4 + -0.33954574127328 * 
GRP_Income2 + -0.19537868529992 * GRP_Income3 + 0.16339422960337 * GRP_Income4 + 
-0.15103080606917 * GRP_Mnt2 + -0.10359763066736 * GRP_Mnt3 + -0.15169095818331 * GRP_Mnt4 + 
-0.00757439653534 * GRP_MntFishProducts2 + 0.03013301742801 * GRP_MntFishProducts3 + 
-0.0753778180106 * GRP_MntFishProducts4 + 0.22882421007211 * GRP_MntGoldProds2 + 
-0.06369987000315 * GRP_MntGoldProds3 + 0.09890582278559 * GRP_MntGoldProds4 + 
-0.21052640581149 * GRP_MntMeatProducts2 + -0.00867214697179 * GRP_MntMeatProducts3 + 
0.11929485476343 * GRP_MntMeatProducts4 + -0.18943631653077 * GRP_MntWines2 + 0.03539441492325 
* GRP_MntWines3 + 0.30650819876628 * GRP_MntWines4 + 0.06292612305453 * 
GRP_NumCatalogPurchases3 + 0.2309036660938 * GRP_NumCatalogPurchases4 + -0.10062151440617 * 
GRP_NumDistPurchases2 + 0.229091410456 * GRP_NumDistPurchases3 + -0.19729313017904 * 
GRP_NumDistPurchases4 + -0.04101710595215 * GRP_NumWebPurchases2 + 0.13926341050039 * 
GRP_NumWebPurchases3 + -0.04443067825367 * GRP_NumWebPurchases4 + 0.12014961650367 * 
GRP_RFMstat2 + 0.01617790323448 * GRP_RFMstat3 + -0.1552934903319 * GRP_RFMstat4 + 
-0.04595909907677 * GRP_RMntFrq2 + -0.44798863026137 * GRP_RMntFrq3 + -0.0483895955721 * 
GRP_RMntFrq4 + -0.03768706422132 * GRP_Recency2 + -0.02473503115913 * GRP_Recency3 + 
-0.07674131244122 * GRP_Recency4 ;
876532    +   H16  = H16  +     0.46251048250873 * GRP_AcceptedCmp52
876533    +          +    -0.00268856292377 * GRP_Frq2  +    -0.25660455566834 * GRP_Frq3
876534    +          +     0.00867022501651 * GRP_Frq4  +    -0.19509148919986 *
876535    +        GRP_Income2  +    -0.39761314772605 * GRP_Income3
876536    +          +     0.62767489359884 * GRP_Income4  +     0.12500076687539 *
876537    +        GRP_Mnt2  +    -0.21739986249936 * GRP_Mnt3  +     0.17941174570957 *
876538    +        GRP_Mnt4  +    -0.05655316560222 * GRP_MntFishProducts2
876539    +          +    -0.03224941225278 * GRP_MntFishProducts3
876540    +          +     0.12546380835809 * GRP_MntFishProducts4
876541    +          +     0.21690521778421 * GRP_MntGoldProds2
876542    +          +     0.09035550488812 * GRP_MntGoldProds3
876543    +          +    -0.03133919720822 * GRP_MntGoldProds4
876544    +          +     0.05188619692889 * GRP_MntMeatProducts2
876545    +          +    -0.04899714585321 * GRP_MntMeatProducts3
876546    +          +    -0.35752492237905 * GRP_MntMeatProducts4
876547    +          +    -0.08947041349478 * GRP_MntWines2  +      0.0265961489442 *
876548    +        GRP_MntWines3  +     0.09890393808772 * GRP_MntWines4
876549    +          +     0.45534320348836 * GRP_NumCatalogPurchases3
876550    +          +    -0.31950647452009 * GRP_NumCatalogPurchases4
876551    +          +     0.21080174299166 * GRP_NumDistPurchases2
876552    +          +     0.24874731231732 * GRP_NumDistPurchases3
876553    +          +    -0.01320035732018 * GRP_NumDistPurchases4
876554    +          +     0.17773116301115 * GRP_NumWebPurchases2
876555    +          +     0.13686106729498 * GRP_NumWebPurchases3
876556    +          +     -0.0690876840257 * GRP_NumWebPurchases4
876557    +          +     0.46273916902968 * GRP_RFMstat2  +     0.51267279380421 *
876558    +        GRP_RFMstat3  +     0.27205036954754 * GRP_RFMstat4
876559    +          +    -0.41192018310368 * GRP_RMntFrq2  +    -0.01025987166968 *
876560    +        GRP_RMntFrq3  +     0.08432669626242 * GRP_RMntFrq4
876561    +          +    -0.37569076006412 * GRP_Recency2  +    -0.09560087881071 *
876562    +        GRP_Recency3  +     0.15619501698904 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.46251048250873 * GRP_AcceptedCmp52 + -0.00268856292377 * 
GRP_Frq2 + -0.25660455566834 * GRP_Frq3 + 0.00867022501651 * GRP_Frq4 + -0.19509148919986 * 
GRP_Income2 + -0.39761314772605 * GRP_Income3 + 0.62767489359884 * GRP_Income4 + 
0.12500076687539 * GRP_Mnt2 + -0.21739986249936 * GRP_Mnt3 + 0.17941174570957 * GRP_Mnt4 + 
-0.05655316560222 * GRP_MntFishProducts2 + -0.03224941225278 * GRP_MntFishProducts3 + 
0.12546380835809 * GRP_MntFishProducts4 + 0.21690521778421 * GRP_MntGoldProds2 + 
0.09035550488812 * GRP_MntGoldProds3 + -0.03133919720822 * GRP_MntGoldProds4 + 
0.05188619692889 * GRP_MntMeatProducts2 + -0.04899714585321 * GRP_MntMeatProducts3 + 
-0.35752492237905 * GRP_MntMeatProducts4 + -0.08947041349478 * GRP_MntWines2 + 0.0265961489442 
* GRP_MntWines3 + 0.09890393808772 * GRP_MntWines4 + 0.45534320348836 * 
GRP_NumCatalogPurchases3 + -0.31950647452009 * GRP_NumCatalogPurchases4 + 0.21080174299166 * 
GRP_NumDistPurchases2 + 0.24874731231732 * GRP_NumDistPurchases3 + -0.01320035732018 * 
GRP_NumDistPurchases4 + 0.17773116301115 * GRP_NumWebPurchases2 + 0.13686106729498 * 
GRP_NumWebPurchases3 + -0.0690876840257 * GRP_NumWebPurchases4 + 0.46273916902968 * 
GRP_RFMstat2 + 0.51267279380421 * GRP_RFMstat3 + 0.27205036954754 * GRP_RFMstat4 + 
-0.41192018310368 * GRP_RMntFrq2 + -0.01025987166968 * GRP_RMntFrq3 + 0.08432669626242 * 
GRP_RMntFrq4 + -0.37569076006412 * GRP_Recency2 + -0.09560087881071 * GRP_Recency3 + 
0.15619501698904 * GRP_Recency4 ;
876563    +   H11  =     1.02277651695375 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.02277651695375 + H11 ;
876564    +   H12  =     0.30687404845149 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.30687404845149 + H12 ;
876565    +   H13  =     0.38396141006686 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.38396141006686 + H13 ;
876566    +   H14  =     0.66961227315774 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.66961227315774 + H14 ;
876567    +   H15  =     0.55149278706288 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.55149278706288 + H15 ;
876568    +   H16  =    -0.54938689657398 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.54938689657398 + H16 ;
876569    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
876570    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
876571    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
876572    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
876573    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
876574    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
876575    +END;
MPRINT(EM_DIAGRAM):   END;
876576    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
876577    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
876578    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
876579    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
876580    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
876581    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
876582    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
876583    +END;
MPRINT(EM_DIAGRAM):   END;
876584    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
876585    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
876586    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
876587    +
876588    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
876589    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
876590    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
876591    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
876592    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
876593    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
876594    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
876595    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
876596    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
876597    +end;
MPRINT(EM_DIAGRAM):   end;
876598    +else do;
MPRINT(EM_DIAGRAM):   else do;
876599    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
876600    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
876601    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
876602    +   end;
MPRINT(EM_DIAGRAM):   end;
876603    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
876604    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
876605    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
876606    +   end;
MPRINT(EM_DIAGRAM):   end;
876607    +   else do;
MPRINT(EM_DIAGRAM):   else do;
876608    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
876609    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
876610    +   end;
MPRINT(EM_DIAGRAM):   end;
876611    +end;
MPRINT(EM_DIAGRAM):   end;
876612    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
876613    +   P_DepVar1  =     1.19791571177519 * H11  +     1.91589058327051 * H12
876614    +          +     0.44556788800887 * H13  +    -1.25798187083564 * H14
876615    +          +    -0.40058942527791 * H15  +    -1.41542812613902 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.19791571177519 * H11 + 1.91589058327051 * H12 + 
0.44556788800887 * H13 + -1.25798187083564 * H14 + -0.40058942527791 * H15 + -1.41542812613902 
* H16 ;
876616    +   P_DepVar1  =    -2.68041503413101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.68041503413101 + P_DepVar1 ;
876617    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
876618    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
876619    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
876620    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
876621    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
876622    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
876623    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
876624    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
876625    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
876626    +END;
MPRINT(EM_DIAGRAM):   END;
876627    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
876628    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
876629    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
876630    +END;
MPRINT(EM_DIAGRAM):   END;
876631    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
876632    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
876633    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
876634    +END;
MPRINT(EM_DIAGRAM):   END;
876635    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
876636    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
876637    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
876638    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
876639    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
876640    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
876641    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
876642    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
876643    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
876644    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
876645    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
876646    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
876647    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
876648    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
876649    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
876650    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
876651    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
876652    +END;
MPRINT(EM_DIAGRAM):   END;
876653    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
876654    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
876655    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
876656    +drop
876657    +H11
876658    +H12
876659    +H13
876660    +H14
876661    +H15
876662    +H16
876663    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
876664    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
876665     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL23_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
876666     quit;
876667     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
876668     filename emflow
876668   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural23: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
876669     *------------------------------------------------------------*;
876670     * Neural23: Scoring VALIDATE data;
876671     *------------------------------------------------------------*;
876672     data EMWS8.Neural23_VALIDATE
876673     / view=EMWS8.Neural23_VALIDATE
876674     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_VALIDATE / view=EMWS8.Neural23_VALIDATE ;
876675     set EMWS8.BINNING_VALIDATE
876676     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE ;
876677     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas.
876678    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
876679    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
876680    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
876681    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
876682    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
876683    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
876684    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
876685    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
876686    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
876687    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
876688    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
876689    +LENGTH _WARN_ $4
876690    +      F_DepVar  $ 12
876691    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
876692    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
876693    +
876694    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
876695    +
876696    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
876697    +
876698    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
876699    +
876700    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
876701    +
876702    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
876703    +
876704    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
876705    +
876706    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
876707    +
876708    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
876709    +
876710    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
876711    +
876712    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
876713    +
876714    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
876715    +
876716    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
876717    +
876718    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
876719    +
876720    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
876721    +
876722    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
876723    +
876724    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
876725    +
876726    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
876727    +
876728    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
876729    +
876730    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
876731    +
876732    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
876733    +
876734    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
876735    +
876736    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
876737    +
876738    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
876739    +
876740    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
876741    +
876742    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
876743    +
876744    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
876745    +
876746    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
876747    +
876748    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
876749    +
876750    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
876751    +
876752    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
876753    +
876754    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
876755    +
876756    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
876757    +
876758    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
876759    +
876760    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
876761    +
876762    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
876763    +
876764    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
876765    +
876766    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
876767    +
876768    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
876769    +
876770    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
876771    +
876772    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
876773    +
876774    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
876775    +
876776    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
876777    +
876778    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
876779    +
876780    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
876781    +
876782    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
876783    +
876784    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
876785    +
876786    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
876787    +
876788    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
876789    +
876790    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
876791    +
876792    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
876793    +
876794    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
876795    +
876796    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
876797    +
876798    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
876799    +
876800    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
876801    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
876802    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
876803    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
876804    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
876805    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876806    +end;
MPRINT(EM_DIAGRAM):   end;
876807    +else do;
MPRINT(EM_DIAGRAM):   else do;
876808    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
876809    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
876810    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
876811    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
876812    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
876813    +   end;
MPRINT(EM_DIAGRAM):   end;
876814    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
876815    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
876816    +   end;
MPRINT(EM_DIAGRAM):   end;
876817    +   else do;
MPRINT(EM_DIAGRAM):   else do;
876818    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
876819    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
876820    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876821    +   end;
MPRINT(EM_DIAGRAM):   end;
876822    +end;
MPRINT(EM_DIAGRAM):   end;
876823    +
876824    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
876825    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
876826    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
876827    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
876828    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
876829    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
876830    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
876831    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876832    +end;
MPRINT(EM_DIAGRAM):   end;
876833    +else do;
MPRINT(EM_DIAGRAM):   else do;
876834    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
876835    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
876836    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
876837    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
876838    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
876839    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
876840    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
876841    +   end;
MPRINT(EM_DIAGRAM):   end;
876842    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
876843    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
876844    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
876845    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
876846    +   end;
MPRINT(EM_DIAGRAM):   end;
876847    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
876848    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
876849    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
876850    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
876851    +   end;
MPRINT(EM_DIAGRAM):   end;
876852    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
876853    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
876854    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
876855    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
876856    +   end;
MPRINT(EM_DIAGRAM):   end;
876857    +   else do;
MPRINT(EM_DIAGRAM):   else do;
876858    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
876859    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
876860    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
876861    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
876862    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876863    +   end;
MPRINT(EM_DIAGRAM):   end;
876864    +end;
MPRINT(EM_DIAGRAM):   end;
876865    +
876866    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
876867    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
876868    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
876869    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
876870    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
876871    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
876872    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
876873    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876874    +end;
MPRINT(EM_DIAGRAM):   end;
876875    +else do;
MPRINT(EM_DIAGRAM):   else do;
876876    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
876877    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
876878    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
876879    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
876880    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
876881    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
876882    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
876883    +   end;
MPRINT(EM_DIAGRAM):   end;
876884    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
876885    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
876886    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
876887    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
876888    +   end;
MPRINT(EM_DIAGRAM):   end;
876889    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
876890    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
876891    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
876892    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
876893    +   end;
MPRINT(EM_DIAGRAM):   end;
876894    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
876895    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
876896    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
876897    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
876898    +   end;
MPRINT(EM_DIAGRAM):   end;
876899    +   else do;
MPRINT(EM_DIAGRAM):   else do;
876900    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
876901    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
876902    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
876903    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
876904    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876905    +   end;
MPRINT(EM_DIAGRAM):   end;
876906    +end;
MPRINT(EM_DIAGRAM):   end;
876907    +
876908    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
876909    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
876910    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
876911    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
876912    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
876913    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
876914    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
876915    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876916    +end;
MPRINT(EM_DIAGRAM):   end;
876917    +else do;
MPRINT(EM_DIAGRAM):   else do;
876918    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
876919    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
876920    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
876921    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
876922    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
876923    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
876924    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
876925    +   end;
MPRINT(EM_DIAGRAM):   end;
876926    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
876927    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
876928    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
876929    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
876930    +   end;
MPRINT(EM_DIAGRAM):   end;
876931    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
876932    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
876933    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
876934    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
876935    +   end;
MPRINT(EM_DIAGRAM):   end;
876936    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
876937    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
876938    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
876939    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
876940    +   end;
MPRINT(EM_DIAGRAM):   end;
876941    +   else do;
MPRINT(EM_DIAGRAM):   else do;
876942    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
876943    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
876944    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
876945    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
876946    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876947    +   end;
MPRINT(EM_DIAGRAM):   end;
876948    +end;
MPRINT(EM_DIAGRAM):   end;
876949    +
876950    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
876951    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
876952    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
876953    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
876954    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
876955    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
876956    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
876957    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876958    +end;
MPRINT(EM_DIAGRAM):   end;
876959    +else do;
MPRINT(EM_DIAGRAM):   else do;
876960    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
876961    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
876962    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
876963    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
876964    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
876965    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
876966    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
876967    +   end;
MPRINT(EM_DIAGRAM):   end;
876968    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
876969    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
876970    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
876971    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
876972    +   end;
MPRINT(EM_DIAGRAM):   end;
876973    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
876974    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
876975    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
876976    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
876977    +   end;
MPRINT(EM_DIAGRAM):   end;
876978    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
876979    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
876980    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
876981    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
876982    +   end;
MPRINT(EM_DIAGRAM):   end;
876983    +   else do;
MPRINT(EM_DIAGRAM):   else do;
876984    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
876985    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
876986    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
876987    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
876988    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
876989    +   end;
MPRINT(EM_DIAGRAM):   end;
876990    +end;
MPRINT(EM_DIAGRAM):   end;
876991    +
876992    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
876993    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
876994    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
876995    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
876996    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
876997    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
876998    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
876999    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
877000    +end;
MPRINT(EM_DIAGRAM):   end;
877001    +else do;
MPRINT(EM_DIAGRAM):   else do;
877002    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
877003    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
877004    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
877005    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
877006    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
877007    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
877008    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
877009    +   end;
MPRINT(EM_DIAGRAM):   end;
877010    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
877011    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
877012    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
877013    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
877014    +   end;
MPRINT(EM_DIAGRAM):   end;
877015    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
877016    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
877017    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
877018    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
877019    +   end;
MPRINT(EM_DIAGRAM):   end;
877020    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
877021    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
877022    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
877023    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
877024    +   end;
MPRINT(EM_DIAGRAM):   end;
877025    +   else do;
MPRINT(EM_DIAGRAM):   else do;
877026    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
877027    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
877028    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
877029    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
877030    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
877031    +   end;
MPRINT(EM_DIAGRAM):   end;
877032    +end;
MPRINT(EM_DIAGRAM):   end;
877033    +
877034    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
877035    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
877036    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
877037    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
877038    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
877039    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
877040    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
877041    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
877042    +end;
MPRINT(EM_DIAGRAM):   end;
877043    +else do;
MPRINT(EM_DIAGRAM):   else do;
877044    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
877045    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
877046    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
877047    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
877048    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
877049    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
877050    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
877051    +   end;
MPRINT(EM_DIAGRAM):   end;
877052    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
877053    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
877054    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
877055    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
877056    +   end;
MPRINT(EM_DIAGRAM):   end;
877057    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
877058    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
877059    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
877060    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
877061    +   end;
MPRINT(EM_DIAGRAM):   end;
877062    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
877063    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
877064    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
877065    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
877066    +   end;
MPRINT(EM_DIAGRAM):   end;
877067    +   else do;
MPRINT(EM_DIAGRAM):   else do;
877068    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
877069    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
877070    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
877071    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
877072    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
877073    +   end;
MPRINT(EM_DIAGRAM):   end;
877074    +end;
MPRINT(EM_DIAGRAM):   end;
877075    +
877076    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
877077    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
877078    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
877079    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
877080    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
877081    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
877082    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
877083    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
877084    +end;
MPRINT(EM_DIAGRAM):   end;
877085    +else do;
MPRINT(EM_DIAGRAM):   else do;
877086    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
877087    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
877088    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
877089    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
877090    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
877091    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
877092    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
877093    +   end;
MPRINT(EM_DIAGRAM):   end;
877094    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
877095    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
877096    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
877097    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
877098    +   end;
MPRINT(EM_DIAGRAM):   end;
877099    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
877100    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
877101    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
877102    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
877103    +   end;
MPRINT(EM_DIAGRAM):   end;
877104    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
877105    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
877106    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
877107    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
877108    +   end;
MPRINT(EM_DIAGRAM):   end;
877109    +   else do;
MPRINT(EM_DIAGRAM):   else do;
877110    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
877111    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
877112    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
877113    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
877114    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
877115    +   end;
MPRINT(EM_DIAGRAM):   end;
877116    +end;
MPRINT(EM_DIAGRAM):   end;
877117    +
877118    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
877119    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
877120    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
877121    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
877122    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
877123    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
877124    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
877125    +end;
MPRINT(EM_DIAGRAM):   end;
877126    +else do;
MPRINT(EM_DIAGRAM):   else do;
877127    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
877128    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
877129    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
877130    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
877131    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
877132    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
877133    +   end;
MPRINT(EM_DIAGRAM):   end;
877134    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
877135    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
877136    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
877137    +   end;
MPRINT(EM_DIAGRAM):   end;
877138    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
877139    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
877140    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
877141    +   end;
MPRINT(EM_DIAGRAM):   end;
877142    +   else do;
MPRINT(EM_DIAGRAM):   else do;
877143    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
877144    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
877145    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
877146    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
877147    +   end;
MPRINT(EM_DIAGRAM):   end;
877148    +end;
MPRINT(EM_DIAGRAM):   end;
877149    +
877150    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
877151    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
877152    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
877153    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
877154    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
877155    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
877156    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
877157    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
877158    +end;
MPRINT(EM_DIAGRAM):   end;
877159    +else do;
MPRINT(EM_DIAGRAM):   else do;
877160    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
877161    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
877162    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
877163    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
877164    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
877165    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
877166    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
877167    +   end;
MPRINT(EM_DIAGRAM):   end;
877168    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
877169    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
877170    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
877171    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
877172    +   end;
MPRINT(EM_DIAGRAM):   end;
877173    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
877174    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
877175    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
877176    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
877177    +   end;
MPRINT(EM_DIAGRAM):   end;
877178    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
877179    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
877180    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
877181    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
877182    +   end;
MPRINT(EM_DIAGRAM):   end;
877183    +   else do;
MPRINT(EM_DIAGRAM):   else do;
877184    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
877185    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
877186    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
877187    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
877188    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
877189    +   end;
MPRINT(EM_DIAGRAM):   end;
877190    +end;
MPRINT(EM_DIAGRAM):   end;
877191    +
877192    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
877193    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
877194    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
877195    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
877196    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
877197    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
877198    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
877199    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
877200    +end;
MPRINT(EM_DIAGRAM):   end;
877201    +else do;
MPRINT(EM_DIAGRAM):   else do;
877202    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
877203    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
877204    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
877205    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
877206    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
877207    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
877208    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
877209    +   end;
MPRINT(EM_DIAGRAM):   end;
877210    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
877211    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
877212    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
877213    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
877214    +   end;
MPRINT(EM_DIAGRAM):   end;
877215    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
877216    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
877217    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
877218    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
877219    +   end;
MPRINT(EM_DIAGRAM):   end;
877220    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
877221    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
877222    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
877223    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
877224    +   end;
MPRINT(EM_DIAGRAM):   end;
877225    +   else do;
MPRINT(EM_DIAGRAM):   else do;
877226    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
877227    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
877228    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
877229    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
877230    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
877231    +   end;
MPRINT(EM_DIAGRAM):   end;
877232    +end;
MPRINT(EM_DIAGRAM):   end;
877233    +
877234    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
877235    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
877236    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
877237    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
877238    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
877239    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
877240    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
877241    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
877242    +end;
MPRINT(EM_DIAGRAM):   end;
877243    +else do;
MPRINT(EM_DIAGRAM):   else do;
877244    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
877245    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
877246    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
877247    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
877248    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
877249    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
877250    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
877251    +   end;
MPRINT(EM_DIAGRAM):   end;
877252    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
877253    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
877254    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
877255    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
877256    +   end;
MPRINT(EM_DIAGRAM):   end;
877257    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
877258    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
877259    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
877260    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
877261    +   end;
MPRINT(EM_DIAGRAM):   end;
877262    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
877263    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
877264    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
877265    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
877266    +   end;
MPRINT(EM_DIAGRAM):   end;
877267    +   else do;
MPRINT(EM_DIAGRAM):   else do;
877268    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
877269    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
877270    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
877271    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
877272    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
877273    +   end;
MPRINT(EM_DIAGRAM):   end;
877274    +end;
MPRINT(EM_DIAGRAM):   end;
877275    +
877276    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
877277    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
877278    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
877279    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
877280    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
877281    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
877282    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
877283    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
877284    +end;
MPRINT(EM_DIAGRAM):   end;
877285    +else do;
MPRINT(EM_DIAGRAM):   else do;
877286    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
877287    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
877288    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
877289    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
877290    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
877291    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
877292    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
877293    +   end;
MPRINT(EM_DIAGRAM):   end;
877294    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
877295    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
877296    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
877297    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
877298    +   end;
MPRINT(EM_DIAGRAM):   end;
877299    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
877300    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
877301    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
877302    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
877303    +   end;
MPRINT(EM_DIAGRAM):   end;
877304    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
877305    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
877306    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
877307    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
877308    +   end;
MPRINT(EM_DIAGRAM):   end;
877309    +   else do;
MPRINT(EM_DIAGRAM):   else do;
877310    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
877311    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
877312    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
877313    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
877314    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
877315    +   end;
MPRINT(EM_DIAGRAM):   end;
877316    +end;
MPRINT(EM_DIAGRAM):   end;
877317    +
877318    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
877319    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
877320    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
877321    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
877322    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
877323    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
877324    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
877325    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
877326    +end;
MPRINT(EM_DIAGRAM):   end;
877327    +else do;
MPRINT(EM_DIAGRAM):   else do;
877328    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
877329    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
877330    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
877331    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
877332    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
877333    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
877334    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
877335    +   end;
MPRINT(EM_DIAGRAM):   end;
877336    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
877337    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
877338    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
877339    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
877340    +   end;
MPRINT(EM_DIAGRAM):   end;
877341    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
877342    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
877343    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
877344    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
877345    +   end;
MPRINT(EM_DIAGRAM):   end;
877346    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
877347    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
877348    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
877349    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
877350    +   end;
MPRINT(EM_DIAGRAM):   end;
877351    +   else do;
MPRINT(EM_DIAGRAM):   else do;
877352    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
877353    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
877354    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
877355    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
877356    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
877357    +   end;
MPRINT(EM_DIAGRAM):   end;
877358    +end;
MPRINT(EM_DIAGRAM):   end;
877359    +
877360    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
877361    +*** Checking missing input Interval
877362    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
877363    +
877364    +IF NMISS(
877365    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
877366    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
877367    +
877368    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
877369    +END;
MPRINT(EM_DIAGRAM):   END;
877370    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
877371    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
877372    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
877373    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
877374    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
877375    +END;
MPRINT(EM_DIAGRAM):   END;
877376    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
877377    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
877378    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
877379    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
877380    +END;
MPRINT(EM_DIAGRAM):   END;
877381    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
877382    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
877383    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
877384    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
877385    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
877386    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
877387    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
877388    +   H11  =     0.25397263809886 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.25397263809886 * S_Year_Birth ;
877389    +   H12  =     0.05075762370892 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.05075762370892 * S_Year_Birth ;
877390    +   H13  =     0.04360472272597 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.04360472272597 * S_Year_Birth ;
877391    +   H14  =     0.01387196819865 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.01387196819865 * S_Year_Birth ;
877392    +   H15  =     0.05734148733166 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 0.05734148733166 * S_Year_Birth ;
877393    +   H16  =     0.07449261080848 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = 0.07449261080848 * S_Year_Birth ;
877394    +   H11  = H11  +    -0.13483168537737 * GRP_AcceptedCmp52
877395    +          +     0.02321007103238 * GRP_Frq2  +      0.2993754491201 * GRP_Frq3
877396    +          +     0.03188619345426 * GRP_Frq4  +     0.23837524440518 *
877397    +        GRP_Income2  +    -0.02988101686846 * GRP_Income3
877398    +          +    -0.04314945794282 * GRP_Income4  +      0.0797760707666 *
877399    +        GRP_Mnt2  +    -0.02272798443967 * GRP_Mnt3  +    -0.37386810467628 *
877400    +        GRP_Mnt4  +      0.0916244532169 * GRP_MntFishProducts2
877401    +          +    -0.08991361976323 * GRP_MntFishProducts3
877402    +          +    -0.12439533124432 * GRP_MntFishProducts4
877403    +          +    -0.38906628986229 * GRP_MntGoldProds2
877404    +          +     0.02112411721097 * GRP_MntGoldProds3
877405    +          +     0.05560214439156 * GRP_MntGoldProds4
877406    +          +     0.07558086835487 * GRP_MntMeatProducts2
877407    +          +    -0.24998452825562 * GRP_MntMeatProducts3
877408    +          +    -0.11030888417179 * GRP_MntMeatProducts4
877409    +          +     0.13229832861513 * GRP_MntWines2  +     0.50793143142609 *
877410    +        GRP_MntWines3  +    -0.26273353961061 * GRP_MntWines4
877411    +          +    -0.02587175944603 * GRP_NumCatalogPurchases3
877412    +          +    -0.07172373139956 * GRP_NumCatalogPurchases4
877413    +          +    -0.26905740590447 * GRP_NumDistPurchases2
877414    +          +     0.06889154687101 * GRP_NumDistPurchases3
877415    +          +    -0.31591167055503 * GRP_NumDistPurchases4
877416    +          +    -0.26862765566252 * GRP_NumWebPurchases2
877417    +          +     0.01579611280005 * GRP_NumWebPurchases3
877418    +          +    -0.06884702149074 * GRP_NumWebPurchases4
877419    +          +     0.19400469320488 * GRP_RFMstat2  +     0.32533875784776 *
877420    +        GRP_RFMstat3  +    -0.13730222015702 * GRP_RFMstat4
877421    +          +    -0.21360134050893 * GRP_RMntFrq2  +     0.10280382689873 *
877422    +        GRP_RMntFrq3  +    -0.16238020658392 * GRP_RMntFrq4
877423    +          +     0.38795494894841 * GRP_Recency2  +    -0.18447788823185 *
877424    +        GRP_Recency3  +    -0.44523742460939 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.13483168537737 * GRP_AcceptedCmp52 + 0.02321007103238 * 
GRP_Frq2 + 0.2993754491201 * GRP_Frq3 + 0.03188619345426 * GRP_Frq4 + 0.23837524440518 * 
GRP_Income2 + -0.02988101686846 * GRP_Income3 + -0.04314945794282 * GRP_Income4 + 
0.0797760707666 * GRP_Mnt2 + -0.02272798443967 * GRP_Mnt3 + -0.37386810467628 * GRP_Mnt4 + 
0.0916244532169 * GRP_MntFishProducts2 + -0.08991361976323 * GRP_MntFishProducts3 + 
-0.12439533124432 * GRP_MntFishProducts4 + -0.38906628986229 * GRP_MntGoldProds2 + 
0.02112411721097 * GRP_MntGoldProds3 + 0.05560214439156 * GRP_MntGoldProds4 + 0.07558086835487 
* GRP_MntMeatProducts2 + -0.24998452825562 * GRP_MntMeatProducts3 + -0.11030888417179 * 
GRP_MntMeatProducts4 + 0.13229832861513 * GRP_MntWines2 + 0.50793143142609 * GRP_MntWines3 + 
-0.26273353961061 * GRP_MntWines4 + -0.02587175944603 * GRP_NumCatalogPurchases3 + 
-0.07172373139956 * GRP_NumCatalogPurchases4 + -0.26905740590447 * GRP_NumDistPurchases2 + 
0.06889154687101 * GRP_NumDistPurchases3 + -0.31591167055503 * GRP_NumDistPurchases4 + 
-0.26862765566252 * GRP_NumWebPurchases2 + 0.01579611280005 * GRP_NumWebPurchases3 + 
-0.06884702149074 * GRP_NumWebPurchases4 + 0.19400469320488 * GRP_RFMstat2 + 0.32533875784776 
* GRP_RFMstat3 + -0.13730222015702 * GRP_RFMstat4 + -0.21360134050893 * GRP_RMntFrq2 + 
0.10280382689873 * GRP_RMntFrq3 + -0.16238020658392 * GRP_RMntFrq4 + 0.38795494894841 * 
GRP_Recency2 + -0.18447788823185 * GRP_Recency3 + -0.44523742460939 * GRP_Recency4 ;
877425    +   H12  = H12  +    -0.44240901099215 * GRP_AcceptedCmp52
877426    +          +     0.35451936529374 * GRP_Frq2  +     0.01466130191686 * GRP_Frq3
877427    +          +     0.21356077566978 * GRP_Frq4  +     0.22887565933637 *
877428    +        GRP_Income2  +     0.28123841156129 * GRP_Income3
877429    +          +    -0.30634832652689 * GRP_Income4  +     0.06733141985754 *
877430    +        GRP_Mnt2  +     0.24901181590062 * GRP_Mnt3  +     0.23926240883217 *
877431    +        GRP_Mnt4  +     0.36878256431394 * GRP_MntFishProducts2
877432    +          +    -0.03033118293022 * GRP_MntFishProducts3
877433    +          +     0.12939247483371 * GRP_MntFishProducts4
877434    +          +     -0.1948739109476 * GRP_MntGoldProds2
877435    +          +    -0.02487689041808 * GRP_MntGoldProds3
877436    +          +      0.0424854445517 * GRP_MntGoldProds4
877437    +          +    -0.77110165164491 * GRP_MntMeatProducts2
877438    +          +    -0.04188692453988 * GRP_MntMeatProducts3
877439    +          +     0.16117883521584 * GRP_MntMeatProducts4
877440    +          +     0.26607076588839 * GRP_MntWines2  +     0.08155165225431 *
877441    +        GRP_MntWines3  +     0.05320347913397 * GRP_MntWines4
877442    +          +    -0.60136669330804 * GRP_NumCatalogPurchases3
877443    +          +    -0.32571087796929 * GRP_NumCatalogPurchases4
877444    +          +    -0.82361130213661 * GRP_NumDistPurchases2
877445    +          +     0.18332361990877 * GRP_NumDistPurchases3
877446    +          +    -0.10228504756385 * GRP_NumDistPurchases4
877447    +          +     0.21492204339132 * GRP_NumWebPurchases2
877448    +          +     0.22752835090931 * GRP_NumWebPurchases3
877449    +          +    -0.04291366517536 * GRP_NumWebPurchases4
877450    +          +     -0.1860476520082 * GRP_RFMstat2  +      0.2676074141222 *
877451    +        GRP_RFMstat3  +     0.25111332591837 * GRP_RFMstat4
877452    +          +    -0.16694407619317 * GRP_RMntFrq2  +     0.21748370383635 *
877453    +        GRP_RMntFrq3  +    -0.33247097178921 * GRP_RMntFrq4
877454    +          +     0.96302825639489 * GRP_Recency2  +     0.29783943122668 *
877455    +        GRP_Recency3  +    -0.18073280365547 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.44240901099215 * GRP_AcceptedCmp52 + 0.35451936529374 * 
GRP_Frq2 + 0.01466130191686 * GRP_Frq3 + 0.21356077566978 * GRP_Frq4 + 0.22887565933637 * 
GRP_Income2 + 0.28123841156129 * GRP_Income3 + -0.30634832652689 * GRP_Income4 + 
0.06733141985754 * GRP_Mnt2 + 0.24901181590062 * GRP_Mnt3 + 0.23926240883217 * GRP_Mnt4 + 
0.36878256431394 * GRP_MntFishProducts2 + -0.03033118293022 * GRP_MntFishProducts3 + 
0.12939247483371 * GRP_MntFishProducts4 + -0.1948739109476 * GRP_MntGoldProds2 + 
-0.02487689041808 * GRP_MntGoldProds3 + 0.0424854445517 * GRP_MntGoldProds4 + 
-0.77110165164491 * GRP_MntMeatProducts2 + -0.04188692453988 * GRP_MntMeatProducts3 + 
0.16117883521584 * GRP_MntMeatProducts4 + 0.26607076588839 * GRP_MntWines2 + 0.08155165225431 
* GRP_MntWines3 + 0.05320347913397 * GRP_MntWines4 + -0.60136669330804 * 
GRP_NumCatalogPurchases3 + -0.32571087796929 * GRP_NumCatalogPurchases4 + -0.82361130213661 * 
GRP_NumDistPurchases2 + 0.18332361990877 * GRP_NumDistPurchases3 + -0.10228504756385 * 
GRP_NumDistPurchases4 + 0.21492204339132 * GRP_NumWebPurchases2 + 0.22752835090931 * 
GRP_NumWebPurchases3 + -0.04291366517536 * GRP_NumWebPurchases4 + -0.1860476520082 * 
GRP_RFMstat2 + 0.2676074141222 * GRP_RFMstat3 + 0.25111332591837 * GRP_RFMstat4 + 
-0.16694407619317 * GRP_RMntFrq2 + 0.21748370383635 * GRP_RMntFrq3 + -0.33247097178921 * 
GRP_RMntFrq4 + 0.96302825639489 * GRP_Recency2 + 0.29783943122668 * GRP_Recency3 + 
-0.18073280365547 * GRP_Recency4 ;
877456    +   H13  = H13  +     0.02391312263521 * GRP_AcceptedCmp52
877457    +          +    -0.01218158666492 * GRP_Frq2  +     0.03493150543946 * GRP_Frq3
877458    +          +    -0.19640223643897 * GRP_Frq4  +    -0.02394476100786 *
877459    +        GRP_Income2  +     0.05107107029363 * GRP_Income3
877460    +          +    -0.26596751360911 * GRP_Income4  +    -0.02628350983207 *
877461    +        GRP_Mnt2  +    -0.08273234777804 * GRP_Mnt3  +      0.2039544161917 *
877462    +        GRP_Mnt4  +     0.19888587009926 * GRP_MntFishProducts2
877463    +          +    -0.12190385526661 * GRP_MntFishProducts3
877464    +          +     0.11161376295027 * GRP_MntFishProducts4
877465    +          +     0.09536549249994 * GRP_MntGoldProds2
877466    +          +    -0.39027188388377 * GRP_MntGoldProds3
877467    +          +    -0.26960120596574 * GRP_MntGoldProds4
877468    +          +    -0.29704810464482 * GRP_MntMeatProducts2
877469    +          +    -0.17523279359181 * GRP_MntMeatProducts3
877470    +          +     0.01169006509688 * GRP_MntMeatProducts4
877471    +          +    -0.03150424899485 * GRP_MntWines2  +    -0.18135684744581 *
877472    +        GRP_MntWines3  +    -0.22282316044351 * GRP_MntWines4
877473    +          +    -0.06575154068738 * GRP_NumCatalogPurchases3
877474    +          +     0.12535793167638 * GRP_NumCatalogPurchases4
877475    +          +     0.10187760390092 * GRP_NumDistPurchases2
877476    +          +    -0.25409837313865 * GRP_NumDistPurchases3
877477    +          +    -0.28689980992526 * GRP_NumDistPurchases4
877478    +          +     0.00005909057861 * GRP_NumWebPurchases2
877479    +          +    -0.14419000341563 * GRP_NumWebPurchases3
877480    +          +     0.09095003593529 * GRP_NumWebPurchases4
877481    +          +    -0.02794941494222 * GRP_RFMstat2  +    -0.08735126371613 *
877482    +        GRP_RFMstat3  +      0.0136997814979 * GRP_RFMstat4
877483    +          +    -0.02686274413645 * GRP_RMntFrq2  +    -0.13529202759766 *
877484    +        GRP_RMntFrq3  +     0.22088337575055 * GRP_RMntFrq4
877485    +          +      0.2635440865684 * GRP_Recency2  +     0.12547691494271 *
877486    +        GRP_Recency3  +    -0.10311689817468 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02391312263521 * GRP_AcceptedCmp52 + -0.01218158666492 * 
GRP_Frq2 + 0.03493150543946 * GRP_Frq3 + -0.19640223643897 * GRP_Frq4 + -0.02394476100786 * 
GRP_Income2 + 0.05107107029363 * GRP_Income3 + -0.26596751360911 * GRP_Income4 + 
-0.02628350983207 * GRP_Mnt2 + -0.08273234777804 * GRP_Mnt3 + 0.2039544161917 * GRP_Mnt4 + 
0.19888587009926 * GRP_MntFishProducts2 + -0.12190385526661 * GRP_MntFishProducts3 + 
0.11161376295027 * GRP_MntFishProducts4 + 0.09536549249994 * GRP_MntGoldProds2 + 
-0.39027188388377 * GRP_MntGoldProds3 + -0.26960120596574 * GRP_MntGoldProds4 + 
-0.29704810464482 * GRP_MntMeatProducts2 + -0.17523279359181 * GRP_MntMeatProducts3 + 
0.01169006509688 * GRP_MntMeatProducts4 + -0.03150424899485 * GRP_MntWines2 + 
-0.18135684744581 * GRP_MntWines3 + -0.22282316044351 * GRP_MntWines4 + -0.06575154068738 * 
GRP_NumCatalogPurchases3 + 0.12535793167638 * GRP_NumCatalogPurchases4 + 0.10187760390092 * 
GRP_NumDistPurchases2 + -0.25409837313865 * GRP_NumDistPurchases3 + -0.28689980992526 * 
GRP_NumDistPurchases4 + 0.00005909057861 * GRP_NumWebPurchases2 + -0.14419000341563 * 
GRP_NumWebPurchases3 + 0.09095003593529 * GRP_NumWebPurchases4 + -0.02794941494222 * 
GRP_RFMstat2 + -0.08735126371613 * GRP_RFMstat3 + 0.0136997814979 * GRP_RFMstat4 + 
-0.02686274413645 * GRP_RMntFrq2 + -0.13529202759766 * GRP_RMntFrq3 + 0.22088337575055 * 
GRP_RMntFrq4 + 0.2635440865684 * GRP_Recency2 + 0.12547691494271 * GRP_Recency3 + 
-0.10311689817468 * GRP_Recency4 ;
877487    +   H14  = H14  +     0.41081496203789 * GRP_AcceptedCmp52
877488    +          +    -0.47313297382337 * GRP_Frq2  +     0.19313816686029 * GRP_Frq3
877489    +          +     0.41736322582944 * GRP_Frq4  +    -0.28916219130566 *
877490    +        GRP_Income2  +     0.14505600514674 * GRP_Income3
877491    +          +    -0.04580645427966 * GRP_Income4  +    -0.19949742172257 *
877492    +        GRP_Mnt2  +     0.27329529634974 * GRP_Mnt3  +     0.33404292971179 *
877493    +        GRP_Mnt4  +    -0.37521460360102 * GRP_MntFishProducts2
877494    +          +    -0.14631724639492 * GRP_MntFishProducts3
877495    +          +     0.10002979979527 * GRP_MntFishProducts4
877496    +          +    -0.09816985850711 * GRP_MntGoldProds2
877497    +          +    -0.12203012318985 * GRP_MntGoldProds3
877498    +          +    -0.01815311012777 * GRP_MntGoldProds4
877499    +          +    -0.06619591895459 * GRP_MntMeatProducts2
877500    +          +    -0.09072077897467 * GRP_MntMeatProducts3
877501    +          +      0.1726695423557 * GRP_MntMeatProducts4
877502    +          +    -0.28636541965058 * GRP_MntWines2  +    -0.02631953768864 *
877503    +        GRP_MntWines3  +     0.06980122973657 * GRP_MntWines4
877504    +          +     0.09645375616786 * GRP_NumCatalogPurchases3
877505    +          +    -0.41914184592159 * GRP_NumCatalogPurchases4
877506    +          +      0.1854692255158 * GRP_NumDistPurchases2
877507    +          +    -0.22330441571095 * GRP_NumDistPurchases3
877508    +          +     0.13028835056864 * GRP_NumDistPurchases4
877509    +          +    -0.16915625127212 * GRP_NumWebPurchases2
877510    +          +    -0.29991156671478 * GRP_NumWebPurchases3
877511    +          +     0.01989579721354 * GRP_NumWebPurchases4
877512    +          +    -0.12351517510664 * GRP_RFMstat2  +     0.41722412115996 *
877513    +        GRP_RFMstat3  +    -0.02210360437313 * GRP_RFMstat4
877514    +          +    -0.04201080178576 * GRP_RMntFrq2  +     0.21775390796319 *
877515    +        GRP_RMntFrq3  +     0.31823734284083 * GRP_RMntFrq4
877516    +          +    -0.53168026601605 * GRP_Recency2  +     -0.3287664545088 *
877517    +        GRP_Recency3  +     0.04505851470752 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.41081496203789 * GRP_AcceptedCmp52 + -0.47313297382337 * 
GRP_Frq2 + 0.19313816686029 * GRP_Frq3 + 0.41736322582944 * GRP_Frq4 + -0.28916219130566 * 
GRP_Income2 + 0.14505600514674 * GRP_Income3 + -0.04580645427966 * GRP_Income4 + 
-0.19949742172257 * GRP_Mnt2 + 0.27329529634974 * GRP_Mnt3 + 0.33404292971179 * GRP_Mnt4 + 
-0.37521460360102 * GRP_MntFishProducts2 + -0.14631724639492 * GRP_MntFishProducts3 + 
0.10002979979527 * GRP_MntFishProducts4 + -0.09816985850711 * GRP_MntGoldProds2 + 
-0.12203012318985 * GRP_MntGoldProds3 + -0.01815311012777 * GRP_MntGoldProds4 + 
-0.06619591895459 * GRP_MntMeatProducts2 + -0.09072077897467 * GRP_MntMeatProducts3 + 
0.1726695423557 * GRP_MntMeatProducts4 + -0.28636541965058 * GRP_MntWines2 + -0.02631953768864 
* GRP_MntWines3 + 0.06980122973657 * GRP_MntWines4 + 0.09645375616786 * 
GRP_NumCatalogPurchases3 + -0.41914184592159 * GRP_NumCatalogPurchases4 + 0.1854692255158 * 
GRP_NumDistPurchases2 + -0.22330441571095 * GRP_NumDistPurchases3 + 0.13028835056864 * 
GRP_NumDistPurchases4 + -0.16915625127212 * GRP_NumWebPurchases2 + -0.29991156671478 * 
GRP_NumWebPurchases3 + 0.01989579721354 * GRP_NumWebPurchases4 + -0.12351517510664 * 
GRP_RFMstat2 + 0.41722412115996 * GRP_RFMstat3 + -0.02210360437313 * GRP_RFMstat4 + 
-0.04201080178576 * GRP_RMntFrq2 + 0.21775390796319 * GRP_RMntFrq3 + 0.31823734284083 * 
GRP_RMntFrq4 + -0.53168026601605 * GRP_Recency2 + -0.3287664545088 * GRP_Recency3 + 
0.04505851470752 * GRP_Recency4 ;
877518    +   H15  = H15  +     0.13088214496598 * GRP_AcceptedCmp52
877519    +          +    -0.08389895441588 * GRP_Frq2  +     0.05379617788531 * GRP_Frq3
877520    +          +     0.05704464608157 * GRP_Frq4  +    -0.33954574127328 *
877521    +        GRP_Income2  +    -0.19537868529992 * GRP_Income3
877522    +          +     0.16339422960337 * GRP_Income4  +    -0.15103080606917 *
877523    +        GRP_Mnt2  +    -0.10359763066736 * GRP_Mnt3  +    -0.15169095818331 *
877524    +        GRP_Mnt4  +    -0.00757439653534 * GRP_MntFishProducts2
877525    +          +     0.03013301742801 * GRP_MntFishProducts3
877526    +          +     -0.0753778180106 * GRP_MntFishProducts4
877527    +          +     0.22882421007211 * GRP_MntGoldProds2
877528    +          +    -0.06369987000315 * GRP_MntGoldProds3
877529    +          +     0.09890582278559 * GRP_MntGoldProds4
877530    +          +    -0.21052640581149 * GRP_MntMeatProducts2
877531    +          +    -0.00867214697179 * GRP_MntMeatProducts3
877532    +          +     0.11929485476343 * GRP_MntMeatProducts4
877533    +          +    -0.18943631653077 * GRP_MntWines2  +     0.03539441492325 *
877534    +        GRP_MntWines3  +     0.30650819876628 * GRP_MntWines4
877535    +          +     0.06292612305453 * GRP_NumCatalogPurchases3
877536    +          +      0.2309036660938 * GRP_NumCatalogPurchases4
877537    +          +    -0.10062151440617 * GRP_NumDistPurchases2
877538    +          +       0.229091410456 * GRP_NumDistPurchases3
877539    +          +    -0.19729313017904 * GRP_NumDistPurchases4
877540    +          +    -0.04101710595215 * GRP_NumWebPurchases2
877541    +          +     0.13926341050039 * GRP_NumWebPurchases3
877542    +          +    -0.04443067825367 * GRP_NumWebPurchases4
877543    +          +     0.12014961650367 * GRP_RFMstat2  +     0.01617790323448 *
877544    +        GRP_RFMstat3  +     -0.1552934903319 * GRP_RFMstat4
877545    +          +    -0.04595909907677 * GRP_RMntFrq2  +    -0.44798863026137 *
877546    +        GRP_RMntFrq3  +     -0.0483895955721 * GRP_RMntFrq4
877547    +          +    -0.03768706422132 * GRP_Recency2  +    -0.02473503115913 *
877548    +        GRP_Recency3  +    -0.07674131244122 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.13088214496598 * GRP_AcceptedCmp52 + -0.08389895441588 * 
GRP_Frq2 + 0.05379617788531 * GRP_Frq3 + 0.05704464608157 * GRP_Frq4 + -0.33954574127328 * 
GRP_Income2 + -0.19537868529992 * GRP_Income3 + 0.16339422960337 * GRP_Income4 + 
-0.15103080606917 * GRP_Mnt2 + -0.10359763066736 * GRP_Mnt3 + -0.15169095818331 * GRP_Mnt4 + 
-0.00757439653534 * GRP_MntFishProducts2 + 0.03013301742801 * GRP_MntFishProducts3 + 
-0.0753778180106 * GRP_MntFishProducts4 + 0.22882421007211 * GRP_MntGoldProds2 + 
-0.06369987000315 * GRP_MntGoldProds3 + 0.09890582278559 * GRP_MntGoldProds4 + 
-0.21052640581149 * GRP_MntMeatProducts2 + -0.00867214697179 * GRP_MntMeatProducts3 + 
0.11929485476343 * GRP_MntMeatProducts4 + -0.18943631653077 * GRP_MntWines2 + 0.03539441492325 
* GRP_MntWines3 + 0.30650819876628 * GRP_MntWines4 + 0.06292612305453 * 
GRP_NumCatalogPurchases3 + 0.2309036660938 * GRP_NumCatalogPurchases4 + -0.10062151440617 * 
GRP_NumDistPurchases2 + 0.229091410456 * GRP_NumDistPurchases3 + -0.19729313017904 * 
GRP_NumDistPurchases4 + -0.04101710595215 * GRP_NumWebPurchases2 + 0.13926341050039 * 
GRP_NumWebPurchases3 + -0.04443067825367 * GRP_NumWebPurchases4 + 0.12014961650367 * 
GRP_RFMstat2 + 0.01617790323448 * GRP_RFMstat3 + -0.1552934903319 * GRP_RFMstat4 + 
-0.04595909907677 * GRP_RMntFrq2 + -0.44798863026137 * GRP_RMntFrq3 + -0.0483895955721 * 
GRP_RMntFrq4 + -0.03768706422132 * GRP_Recency2 + -0.02473503115913 * GRP_Recency3 + 
-0.07674131244122 * GRP_Recency4 ;
877549    +   H16  = H16  +     0.46251048250873 * GRP_AcceptedCmp52
877550    +          +    -0.00268856292377 * GRP_Frq2  +    -0.25660455566834 * GRP_Frq3
877551    +          +     0.00867022501651 * GRP_Frq4  +    -0.19509148919986 *
877552    +        GRP_Income2  +    -0.39761314772605 * GRP_Income3
877553    +          +     0.62767489359884 * GRP_Income4  +     0.12500076687539 *
877554    +        GRP_Mnt2  +    -0.21739986249936 * GRP_Mnt3  +     0.17941174570957 *
877555    +        GRP_Mnt4  +    -0.05655316560222 * GRP_MntFishProducts2
877556    +          +    -0.03224941225278 * GRP_MntFishProducts3
877557    +          +     0.12546380835809 * GRP_MntFishProducts4
877558    +          +     0.21690521778421 * GRP_MntGoldProds2
877559    +          +     0.09035550488812 * GRP_MntGoldProds3
877560    +          +    -0.03133919720822 * GRP_MntGoldProds4
877561    +          +     0.05188619692889 * GRP_MntMeatProducts2
877562    +          +    -0.04899714585321 * GRP_MntMeatProducts3
877563    +          +    -0.35752492237905 * GRP_MntMeatProducts4
877564    +          +    -0.08947041349478 * GRP_MntWines2  +      0.0265961489442 *
877565    +        GRP_MntWines3  +     0.09890393808772 * GRP_MntWines4
877566    +          +     0.45534320348836 * GRP_NumCatalogPurchases3
877567    +          +    -0.31950647452009 * GRP_NumCatalogPurchases4
877568    +          +     0.21080174299166 * GRP_NumDistPurchases2
877569    +          +     0.24874731231732 * GRP_NumDistPurchases3
877570    +          +    -0.01320035732018 * GRP_NumDistPurchases4
877571    +          +     0.17773116301115 * GRP_NumWebPurchases2
877572    +          +     0.13686106729498 * GRP_NumWebPurchases3
877573    +          +     -0.0690876840257 * GRP_NumWebPurchases4
877574    +          +     0.46273916902968 * GRP_RFMstat2  +     0.51267279380421 *
877575    +        GRP_RFMstat3  +     0.27205036954754 * GRP_RFMstat4
877576    +          +    -0.41192018310368 * GRP_RMntFrq2  +    -0.01025987166968 *
877577    +        GRP_RMntFrq3  +     0.08432669626242 * GRP_RMntFrq4
877578    +          +    -0.37569076006412 * GRP_Recency2  +    -0.09560087881071 *
877579    +        GRP_Recency3  +     0.15619501698904 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.46251048250873 * GRP_AcceptedCmp52 + -0.00268856292377 * 
GRP_Frq2 + -0.25660455566834 * GRP_Frq3 + 0.00867022501651 * GRP_Frq4 + -0.19509148919986 * 
GRP_Income2 + -0.39761314772605 * GRP_Income3 + 0.62767489359884 * GRP_Income4 + 
0.12500076687539 * GRP_Mnt2 + -0.21739986249936 * GRP_Mnt3 + 0.17941174570957 * GRP_Mnt4 + 
-0.05655316560222 * GRP_MntFishProducts2 + -0.03224941225278 * GRP_MntFishProducts3 + 
0.12546380835809 * GRP_MntFishProducts4 + 0.21690521778421 * GRP_MntGoldProds2 + 
0.09035550488812 * GRP_MntGoldProds3 + -0.03133919720822 * GRP_MntGoldProds4 + 
0.05188619692889 * GRP_MntMeatProducts2 + -0.04899714585321 * GRP_MntMeatProducts3 + 
-0.35752492237905 * GRP_MntMeatProducts4 + -0.08947041349478 * GRP_MntWines2 + 0.0265961489442 
* GRP_MntWines3 + 0.09890393808772 * GRP_MntWines4 + 0.45534320348836 * 
GRP_NumCatalogPurchases3 + -0.31950647452009 * GRP_NumCatalogPurchases4 + 0.21080174299166 * 
GRP_NumDistPurchases2 + 0.24874731231732 * GRP_NumDistPurchases3 + -0.01320035732018 * 
GRP_NumDistPurchases4 + 0.17773116301115 * GRP_NumWebPurchases2 + 0.13686106729498 * 
GRP_NumWebPurchases3 + -0.0690876840257 * GRP_NumWebPurchases4 + 0.46273916902968 * 
GRP_RFMstat2 + 0.51267279380421 * GRP_RFMstat3 + 0.27205036954754 * GRP_RFMstat4 + 
-0.41192018310368 * GRP_RMntFrq2 + -0.01025987166968 * GRP_RMntFrq3 + 0.08432669626242 * 
GRP_RMntFrq4 + -0.37569076006412 * GRP_Recency2 + -0.09560087881071 * GRP_Recency3 + 
0.15619501698904 * GRP_Recency4 ;
877580    +   H11  =     1.02277651695375 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.02277651695375 + H11 ;
877581    +   H12  =     0.30687404845149 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.30687404845149 + H12 ;
877582    +   H13  =     0.38396141006686 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.38396141006686 + H13 ;
877583    +   H14  =     0.66961227315774 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.66961227315774 + H14 ;
877584    +   H15  =     0.55149278706288 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.55149278706288 + H15 ;
877585    +   H16  =    -0.54938689657398 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.54938689657398 + H16 ;
877586    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
877587    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
877588    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
877589    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
877590    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
877591    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
877592    +END;
MPRINT(EM_DIAGRAM):   END;
877593    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
877594    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
877595    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
877596    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
877597    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
877598    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
877599    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
877600    +END;
MPRINT(EM_DIAGRAM):   END;
877601    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
877602    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
877603    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
877604    +
877605    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
877606    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
877607    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
877608    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
877609    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
877610    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
877611    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
877612    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
877613    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
877614    +end;
MPRINT(EM_DIAGRAM):   end;
877615    +else do;
MPRINT(EM_DIAGRAM):   else do;
877616    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
877617    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
877618    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
877619    +   end;
MPRINT(EM_DIAGRAM):   end;
877620    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
877621    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
877622    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
877623    +   end;
MPRINT(EM_DIAGRAM):   end;
877624    +   else do;
MPRINT(EM_DIAGRAM):   else do;
877625    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
877626    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
877627    +   end;
MPRINT(EM_DIAGRAM):   end;
877628    +end;
MPRINT(EM_DIAGRAM):   end;
877629    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
877630    +   P_DepVar1  =     1.19791571177519 * H11  +     1.91589058327051 * H12
877631    +          +     0.44556788800887 * H13  +    -1.25798187083564 * H14
877632    +          +    -0.40058942527791 * H15  +    -1.41542812613902 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.19791571177519 * H11 + 1.91589058327051 * H12 + 
0.44556788800887 * H13 + -1.25798187083564 * H14 + -0.40058942527791 * H15 + -1.41542812613902 
* H16 ;
877633    +   P_DepVar1  =    -2.68041503413101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.68041503413101 + P_DepVar1 ;
877634    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
877635    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
877636    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
877637    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
877638    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
877639    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
877640    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
877641    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
877642    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
877643    +END;
MPRINT(EM_DIAGRAM):   END;
877644    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
877645    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
877646    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
877647    +END;
MPRINT(EM_DIAGRAM):   END;
877648    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
877649    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
877650    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
877651    +END;
MPRINT(EM_DIAGRAM):   END;
877652    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
877653    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
877654    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
877655    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
877656    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
877657    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
877658    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
877659    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
877660    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
877661    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
877662    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
877663    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
877664    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
877665    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
877666    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
877667    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
877668    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
877669    +END;
MPRINT(EM_DIAGRAM):   END;
877670    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
877671    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
877672    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
877673    +drop
877674    +H11
877675    +H12
877676    +H13
877677    +H14
877678    +H15
877679    +H16
877680    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
877681    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
877682     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL23_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_DIAGRAM):   quit;
877683     quit;
877684     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
877685     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
877686     * Neural23: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural23: Computing metadata for TRAIN data;
877687     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL23_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural23_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural23_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural23_TRAIN out=WORK.M0SJ573U noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0SJ573U;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0SJ573U(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0SJ573U;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0SJ573U;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M36C_EE6 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M36C_EE6;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M36C_EE6;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M27G39C3(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M36C_EE6;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M36C_EE6;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M36C_EE6;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M36C_EE6;
MPRINT(EMADVISECOLUMNS):   set WORK.M36C_EE6;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural23";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural23";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural23: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
877999     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
878000     set EMWS8.Neural23_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_EMINFO;
878001     where DATA='Neural23' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural23' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
878002     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL23_EMINFO.
      WHERE (DATA='Neural23') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

878003     data EMWS8.Neural23_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural23_EMINFO;
878004     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
878005     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
878006     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL23_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
878010     run;
878011     data EMWS8.Neural23_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_EMINFO;
878012     set EMWS8.Neural23_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_EMINFO WORK.MODELTEMP_INFO;
878013     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL23_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL23_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

878014     proc sort data = EMWS8.Neural23_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural23_EMINFO NOTHREADS;
878015     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
878016     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL23_EMINFO.
NOTE: The data set EMWS8.NEURAL23_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

878017     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
878018     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
878019     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

878020     proc sort data = EMWS8.Neural23_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural23_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
878021     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
878022     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL23_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

878023     data EMWS8.Neural23_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_EMINFO;
878024     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
878025     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
878026     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL23_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

878027     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
878028     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
878029     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
878030     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL23_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL23_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
