MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "18.53 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                18.53 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0GHIW6W 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0GHIW6W new;
MPRINT(EM_DIAGRAM):   run;
860143     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
860144     set EMWS8.Neural23_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_OUTKEY;
860145     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
860146     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set EMWS8.NEURAL23_OUTKEY.
NOTE: The data set WORK.OUTKEY has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

860147     filename emflow
860147   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural23: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
860148     *------------------------------------------------------------*;
860149     * Neural23: Scoring DATA data;
860150     *------------------------------------------------------------*;
860151     data EMWS8.Neural23_TRAIN
860152     / view=EMWS8.Neural23_TRAIN
860153     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_TRAIN / view=EMWS8.Neural23_TRAIN ;
860154     set EMWS8.BINNING_TRAIN
860155     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN ;
860156     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas.
860157    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
860158    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
860159    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
860160    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
860161    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
860162    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
860163    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
860164    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
860165    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
860166    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
860167    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
860168    +LENGTH _WARN_ $4
860169    +      F_DepVar  $ 12
860170    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
860171    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
860172    +
860173    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
860174    +
860175    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
860176    +
860177    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
860178    +
860179    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
860180    +
860181    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
860182    +
860183    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
860184    +
860185    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
860186    +
860187    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
860188    +
860189    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
860190    +
860191    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
860192    +
860193    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
860194    +
860195    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
860196    +
860197    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
860198    +
860199    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
860200    +
860201    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
860202    +
860203    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
860204    +
860205    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
860206    +
860207    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
860208    +
860209    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
860210    +
860211    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
860212    +
860213    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
860214    +
860215    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
860216    +
860217    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
860218    +
860219    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
860220    +
860221    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
860222    +
860223    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
860224    +
860225    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
860226    +
860227    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
860228    +
860229    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
860230    +
860231    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
860232    +
860233    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
860234    +
860235    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
860236    +
860237    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
860238    +
860239    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
860240    +
860241    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
860242    +
860243    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
860244    +
860245    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
860246    +
860247    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
860248    +
860249    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
860250    +
860251    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
860252    +
860253    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
860254    +
860255    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
860256    +
860257    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
860258    +
860259    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
860260    +
860261    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
860262    +
860263    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
860264    +
860265    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
860266    +
860267    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
860268    +
860269    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
860270    +
860271    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
860272    +
860273    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
860274    +
860275    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
860276    +
860277    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
860278    +
860279    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
860280    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
860281    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
860282    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
860283    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
860284    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860285    +end;
MPRINT(EM_DIAGRAM):   end;
860286    +else do;
MPRINT(EM_DIAGRAM):   else do;
860287    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
860288    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
860289    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
860290    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
860291    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
860292    +   end;
MPRINT(EM_DIAGRAM):   end;
860293    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
860294    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
860295    +   end;
MPRINT(EM_DIAGRAM):   end;
860296    +   else do;
MPRINT(EM_DIAGRAM):   else do;
860297    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
860298    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
860299    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860300    +   end;
MPRINT(EM_DIAGRAM):   end;
860301    +end;
MPRINT(EM_DIAGRAM):   end;
860302    +
860303    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
860304    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
860305    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
860306    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
860307    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
860308    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
860309    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
860310    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860311    +end;
MPRINT(EM_DIAGRAM):   end;
860312    +else do;
MPRINT(EM_DIAGRAM):   else do;
860313    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
860314    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
860315    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
860316    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
860317    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
860318    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
860319    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
860320    +   end;
MPRINT(EM_DIAGRAM):   end;
860321    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
860322    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
860323    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
860324    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
860325    +   end;
MPRINT(EM_DIAGRAM):   end;
860326    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
860327    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
860328    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
860329    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
860330    +   end;
MPRINT(EM_DIAGRAM):   end;
860331    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
860332    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
860333    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
860334    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
860335    +   end;
MPRINT(EM_DIAGRAM):   end;
860336    +   else do;
MPRINT(EM_DIAGRAM):   else do;
860337    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
860338    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
860339    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
860340    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
860341    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860342    +   end;
MPRINT(EM_DIAGRAM):   end;
860343    +end;
MPRINT(EM_DIAGRAM):   end;
860344    +
860345    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
860346    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
860347    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
860348    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
860349    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
860350    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
860351    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
860352    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860353    +end;
MPRINT(EM_DIAGRAM):   end;
860354    +else do;
MPRINT(EM_DIAGRAM):   else do;
860355    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
860356    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
860357    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
860358    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
860359    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
860360    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
860361    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
860362    +   end;
MPRINT(EM_DIAGRAM):   end;
860363    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
860364    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
860365    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
860366    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
860367    +   end;
MPRINT(EM_DIAGRAM):   end;
860368    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
860369    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
860370    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
860371    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
860372    +   end;
MPRINT(EM_DIAGRAM):   end;
860373    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
860374    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
860375    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
860376    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
860377    +   end;
MPRINT(EM_DIAGRAM):   end;
860378    +   else do;
MPRINT(EM_DIAGRAM):   else do;
860379    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
860380    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
860381    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
860382    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
860383    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860384    +   end;
MPRINT(EM_DIAGRAM):   end;
860385    +end;
MPRINT(EM_DIAGRAM):   end;
860386    +
860387    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
860388    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
860389    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
860390    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
860391    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
860392    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
860393    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
860394    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860395    +end;
MPRINT(EM_DIAGRAM):   end;
860396    +else do;
MPRINT(EM_DIAGRAM):   else do;
860397    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
860398    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
860399    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
860400    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
860401    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
860402    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
860403    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
860404    +   end;
MPRINT(EM_DIAGRAM):   end;
860405    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
860406    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
860407    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
860408    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
860409    +   end;
MPRINT(EM_DIAGRAM):   end;
860410    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
860411    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
860412    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
860413    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
860414    +   end;
MPRINT(EM_DIAGRAM):   end;
860415    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
860416    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
860417    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
860418    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
860419    +   end;
MPRINT(EM_DIAGRAM):   end;
860420    +   else do;
MPRINT(EM_DIAGRAM):   else do;
860421    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
860422    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
860423    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
860424    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
860425    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860426    +   end;
MPRINT(EM_DIAGRAM):   end;
860427    +end;
MPRINT(EM_DIAGRAM):   end;
860428    +
860429    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
860430    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
860431    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
860432    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
860433    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
860434    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
860435    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
860436    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860437    +end;
MPRINT(EM_DIAGRAM):   end;
860438    +else do;
MPRINT(EM_DIAGRAM):   else do;
860439    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
860440    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
860441    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
860442    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
860443    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
860444    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
860445    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
860446    +   end;
MPRINT(EM_DIAGRAM):   end;
860447    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
860448    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
860449    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
860450    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
860451    +   end;
MPRINT(EM_DIAGRAM):   end;
860452    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
860453    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
860454    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
860455    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
860456    +   end;
MPRINT(EM_DIAGRAM):   end;
860457    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
860458    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
860459    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
860460    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
860461    +   end;
MPRINT(EM_DIAGRAM):   end;
860462    +   else do;
MPRINT(EM_DIAGRAM):   else do;
860463    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
860464    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
860465    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
860466    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
860467    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860468    +   end;
MPRINT(EM_DIAGRAM):   end;
860469    +end;
MPRINT(EM_DIAGRAM):   end;
860470    +
860471    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
860472    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
860473    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
860474    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
860475    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
860476    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
860477    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
860478    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860479    +end;
MPRINT(EM_DIAGRAM):   end;
860480    +else do;
MPRINT(EM_DIAGRAM):   else do;
860481    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
860482    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
860483    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
860484    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
860485    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
860486    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
860487    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
860488    +   end;
MPRINT(EM_DIAGRAM):   end;
860489    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
860490    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
860491    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
860492    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
860493    +   end;
MPRINT(EM_DIAGRAM):   end;
860494    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
860495    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
860496    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
860497    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
860498    +   end;
MPRINT(EM_DIAGRAM):   end;
860499    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
860500    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
860501    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
860502    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
860503    +   end;
MPRINT(EM_DIAGRAM):   end;
860504    +   else do;
MPRINT(EM_DIAGRAM):   else do;
860505    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
860506    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
860507    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
860508    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
860509    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860510    +   end;
MPRINT(EM_DIAGRAM):   end;
860511    +end;
MPRINT(EM_DIAGRAM):   end;
860512    +
860513    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
860514    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
860515    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
860516    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
860517    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
860518    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
860519    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
860520    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860521    +end;
MPRINT(EM_DIAGRAM):   end;
860522    +else do;
MPRINT(EM_DIAGRAM):   else do;
860523    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
860524    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
860525    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
860526    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
860527    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
860528    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
860529    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
860530    +   end;
MPRINT(EM_DIAGRAM):   end;
860531    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
860532    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
860533    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
860534    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
860535    +   end;
MPRINT(EM_DIAGRAM):   end;
860536    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
860537    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
860538    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
860539    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
860540    +   end;
MPRINT(EM_DIAGRAM):   end;
860541    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
860542    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
860543    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
860544    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
860545    +   end;
MPRINT(EM_DIAGRAM):   end;
860546    +   else do;
MPRINT(EM_DIAGRAM):   else do;
860547    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
860548    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
860549    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
860550    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
860551    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860552    +   end;
MPRINT(EM_DIAGRAM):   end;
860553    +end;
MPRINT(EM_DIAGRAM):   end;
860554    +
860555    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
860556    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
860557    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
860558    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
860559    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
860560    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
860561    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
860562    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860563    +end;
MPRINT(EM_DIAGRAM):   end;
860564    +else do;
MPRINT(EM_DIAGRAM):   else do;
860565    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
860566    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
860567    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
860568    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
860569    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
860570    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
860571    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
860572    +   end;
MPRINT(EM_DIAGRAM):   end;
860573    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
860574    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
860575    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
860576    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
860577    +   end;
MPRINT(EM_DIAGRAM):   end;
860578    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
860579    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
860580    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
860581    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
860582    +   end;
MPRINT(EM_DIAGRAM):   end;
860583    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
860584    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
860585    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
860586    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
860587    +   end;
MPRINT(EM_DIAGRAM):   end;
860588    +   else do;
MPRINT(EM_DIAGRAM):   else do;
860589    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
860590    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
860591    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
860592    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
860593    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860594    +   end;
MPRINT(EM_DIAGRAM):   end;
860595    +end;
MPRINT(EM_DIAGRAM):   end;
860596    +
860597    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
860598    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
860599    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
860600    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
860601    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
860602    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
860603    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860604    +end;
MPRINT(EM_DIAGRAM):   end;
860605    +else do;
MPRINT(EM_DIAGRAM):   else do;
860606    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
860607    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
860608    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
860609    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
860610    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
860611    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
860612    +   end;
MPRINT(EM_DIAGRAM):   end;
860613    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
860614    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
860615    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
860616    +   end;
MPRINT(EM_DIAGRAM):   end;
860617    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
860618    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
860619    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
860620    +   end;
MPRINT(EM_DIAGRAM):   end;
860621    +   else do;
MPRINT(EM_DIAGRAM):   else do;
860622    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
860623    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
860624    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
860625    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860626    +   end;
MPRINT(EM_DIAGRAM):   end;
860627    +end;
MPRINT(EM_DIAGRAM):   end;
860628    +
860629    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
860630    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
860631    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
860632    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
860633    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
860634    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
860635    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
860636    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860637    +end;
MPRINT(EM_DIAGRAM):   end;
860638    +else do;
MPRINT(EM_DIAGRAM):   else do;
860639    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
860640    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
860641    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
860642    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
860643    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
860644    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
860645    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
860646    +   end;
MPRINT(EM_DIAGRAM):   end;
860647    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
860648    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
860649    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
860650    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
860651    +   end;
MPRINT(EM_DIAGRAM):   end;
860652    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
860653    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
860654    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
860655    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
860656    +   end;
MPRINT(EM_DIAGRAM):   end;
860657    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
860658    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
860659    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
860660    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
860661    +   end;
MPRINT(EM_DIAGRAM):   end;
860662    +   else do;
MPRINT(EM_DIAGRAM):   else do;
860663    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
860664    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
860665    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
860666    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
860667    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860668    +   end;
MPRINT(EM_DIAGRAM):   end;
860669    +end;
MPRINT(EM_DIAGRAM):   end;
860670    +
860671    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
860672    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
860673    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
860674    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
860675    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
860676    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
860677    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
860678    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860679    +end;
MPRINT(EM_DIAGRAM):   end;
860680    +else do;
MPRINT(EM_DIAGRAM):   else do;
860681    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
860682    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
860683    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
860684    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
860685    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
860686    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
860687    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
860688    +   end;
MPRINT(EM_DIAGRAM):   end;
860689    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
860690    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
860691    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
860692    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
860693    +   end;
MPRINT(EM_DIAGRAM):   end;
860694    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
860695    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
860696    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
860697    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
860698    +   end;
MPRINT(EM_DIAGRAM):   end;
860699    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
860700    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
860701    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
860702    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
860703    +   end;
MPRINT(EM_DIAGRAM):   end;
860704    +   else do;
MPRINT(EM_DIAGRAM):   else do;
860705    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
860706    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
860707    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
860708    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
860709    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860710    +   end;
MPRINT(EM_DIAGRAM):   end;
860711    +end;
MPRINT(EM_DIAGRAM):   end;
860712    +
860713    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
860714    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
860715    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
860716    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
860717    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
860718    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
860719    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
860720    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860721    +end;
MPRINT(EM_DIAGRAM):   end;
860722    +else do;
MPRINT(EM_DIAGRAM):   else do;
860723    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
860724    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
860725    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
860726    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
860727    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
860728    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
860729    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
860730    +   end;
MPRINT(EM_DIAGRAM):   end;
860731    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
860732    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
860733    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
860734    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
860735    +   end;
MPRINT(EM_DIAGRAM):   end;
860736    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
860737    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
860738    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
860739    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
860740    +   end;
MPRINT(EM_DIAGRAM):   end;
860741    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
860742    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
860743    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
860744    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
860745    +   end;
MPRINT(EM_DIAGRAM):   end;
860746    +   else do;
MPRINT(EM_DIAGRAM):   else do;
860747    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
860748    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
860749    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
860750    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
860751    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860752    +   end;
MPRINT(EM_DIAGRAM):   end;
860753    +end;
MPRINT(EM_DIAGRAM):   end;
860754    +
860755    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
860756    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
860757    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
860758    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
860759    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
860760    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
860761    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
860762    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860763    +end;
MPRINT(EM_DIAGRAM):   end;
860764    +else do;
MPRINT(EM_DIAGRAM):   else do;
860765    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
860766    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
860767    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
860768    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
860769    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
860770    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
860771    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
860772    +   end;
MPRINT(EM_DIAGRAM):   end;
860773    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
860774    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
860775    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
860776    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
860777    +   end;
MPRINT(EM_DIAGRAM):   end;
860778    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
860779    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
860780    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
860781    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
860782    +   end;
MPRINT(EM_DIAGRAM):   end;
860783    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
860784    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
860785    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
860786    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
860787    +   end;
MPRINT(EM_DIAGRAM):   end;
860788    +   else do;
MPRINT(EM_DIAGRAM):   else do;
860789    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
860790    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
860791    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
860792    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
860793    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860794    +   end;
MPRINT(EM_DIAGRAM):   end;
860795    +end;
MPRINT(EM_DIAGRAM):   end;
860796    +
860797    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
860798    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
860799    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
860800    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
860801    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
860802    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
860803    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
860804    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860805    +end;
MPRINT(EM_DIAGRAM):   end;
860806    +else do;
MPRINT(EM_DIAGRAM):   else do;
860807    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
860808    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
860809    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
860810    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
860811    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
860812    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
860813    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
860814    +   end;
MPRINT(EM_DIAGRAM):   end;
860815    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
860816    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
860817    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
860818    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
860819    +   end;
MPRINT(EM_DIAGRAM):   end;
860820    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
860821    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
860822    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
860823    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
860824    +   end;
MPRINT(EM_DIAGRAM):   end;
860825    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
860826    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
860827    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
860828    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
860829    +   end;
MPRINT(EM_DIAGRAM):   end;
860830    +   else do;
MPRINT(EM_DIAGRAM):   else do;
860831    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
860832    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
860833    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
860834    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
860835    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860836    +   end;
MPRINT(EM_DIAGRAM):   end;
860837    +end;
MPRINT(EM_DIAGRAM):   end;
860838    +
860839    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
860840    +*** Checking missing input Interval
860841    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
860842    +
860843    +IF NMISS(
860844    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
860845    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
860846    +
860847    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
860848    +END;
MPRINT(EM_DIAGRAM):   END;
860849    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
860850    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
860851    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
860852    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
860853    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
860854    +END;
MPRINT(EM_DIAGRAM):   END;
860855    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
860856    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
860857    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
860858    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
860859    +END;
MPRINT(EM_DIAGRAM):   END;
860860    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
860861    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
860862    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
860863    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
860864    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
860865    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
860866    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
860867    +   H11  =     0.25397263809886 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.25397263809886 * S_Year_Birth ;
860868    +   H12  =     0.05075762370892 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.05075762370892 * S_Year_Birth ;
860869    +   H13  =     0.04360472272597 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.04360472272597 * S_Year_Birth ;
860870    +   H14  =     0.01387196819865 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.01387196819865 * S_Year_Birth ;
860871    +   H15  =     0.05734148733166 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 0.05734148733166 * S_Year_Birth ;
860872    +   H16  =     0.07449261080848 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = 0.07449261080848 * S_Year_Birth ;
860873    +   H11  = H11  +    -0.13483168537737 * GRP_AcceptedCmp52
860874    +          +     0.02321007103238 * GRP_Frq2  +      0.2993754491201 * GRP_Frq3
860875    +          +     0.03188619345426 * GRP_Frq4  +     0.23837524440518 *
860876    +        GRP_Income2  +    -0.02988101686846 * GRP_Income3
860877    +          +    -0.04314945794282 * GRP_Income4  +      0.0797760707666 *
860878    +        GRP_Mnt2  +    -0.02272798443967 * GRP_Mnt3  +    -0.37386810467628 *
860879    +        GRP_Mnt4  +      0.0916244532169 * GRP_MntFishProducts2
860880    +          +    -0.08991361976323 * GRP_MntFishProducts3
860881    +          +    -0.12439533124432 * GRP_MntFishProducts4
860882    +          +    -0.38906628986229 * GRP_MntGoldProds2
860883    +          +     0.02112411721097 * GRP_MntGoldProds3
860884    +          +     0.05560214439156 * GRP_MntGoldProds4
860885    +          +     0.07558086835487 * GRP_MntMeatProducts2
860886    +          +    -0.24998452825562 * GRP_MntMeatProducts3
860887    +          +    -0.11030888417179 * GRP_MntMeatProducts4
860888    +          +     0.13229832861513 * GRP_MntWines2  +     0.50793143142609 *
860889    +        GRP_MntWines3  +    -0.26273353961061 * GRP_MntWines4
860890    +          +    -0.02587175944603 * GRP_NumCatalogPurchases3
860891    +          +    -0.07172373139956 * GRP_NumCatalogPurchases4
860892    +          +    -0.26905740590447 * GRP_NumDistPurchases2
860893    +          +     0.06889154687101 * GRP_NumDistPurchases3
860894    +          +    -0.31591167055503 * GRP_NumDistPurchases4
860895    +          +    -0.26862765566252 * GRP_NumWebPurchases2
860896    +          +     0.01579611280005 * GRP_NumWebPurchases3
860897    +          +    -0.06884702149074 * GRP_NumWebPurchases4
860898    +          +     0.19400469320488 * GRP_RFMstat2  +     0.32533875784776 *
860899    +        GRP_RFMstat3  +    -0.13730222015702 * GRP_RFMstat4
860900    +          +    -0.21360134050893 * GRP_RMntFrq2  +     0.10280382689873 *
860901    +        GRP_RMntFrq3  +    -0.16238020658392 * GRP_RMntFrq4
860902    +          +     0.38795494894841 * GRP_Recency2  +    -0.18447788823185 *
860903    +        GRP_Recency3  +    -0.44523742460939 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.13483168537737 * GRP_AcceptedCmp52 + 0.02321007103238 * 
GRP_Frq2 + 0.2993754491201 * GRP_Frq3 + 0.03188619345426 * GRP_Frq4 + 0.23837524440518 * 
GRP_Income2 + -0.02988101686846 * GRP_Income3 + -0.04314945794282 * GRP_Income4 + 
0.0797760707666 * GRP_Mnt2 + -0.02272798443967 * GRP_Mnt3 + -0.37386810467628 * GRP_Mnt4 + 
0.0916244532169 * GRP_MntFishProducts2 + -0.08991361976323 * GRP_MntFishProducts3 + 
-0.12439533124432 * GRP_MntFishProducts4 + -0.38906628986229 * GRP_MntGoldProds2 + 
0.02112411721097 * GRP_MntGoldProds3 + 0.05560214439156 * GRP_MntGoldProds4 + 0.07558086835487 
* GRP_MntMeatProducts2 + -0.24998452825562 * GRP_MntMeatProducts3 + -0.11030888417179 * 
GRP_MntMeatProducts4 + 0.13229832861513 * GRP_MntWines2 + 0.50793143142609 * GRP_MntWines3 + 
-0.26273353961061 * GRP_MntWines4 + -0.02587175944603 * GRP_NumCatalogPurchases3 + 
-0.07172373139956 * GRP_NumCatalogPurchases4 + -0.26905740590447 * GRP_NumDistPurchases2 + 
0.06889154687101 * GRP_NumDistPurchases3 + -0.31591167055503 * GRP_NumDistPurchases4 + 
-0.26862765566252 * GRP_NumWebPurchases2 + 0.01579611280005 * GRP_NumWebPurchases3 + 
-0.06884702149074 * GRP_NumWebPurchases4 + 0.19400469320488 * GRP_RFMstat2 + 0.32533875784776 
* GRP_RFMstat3 + -0.13730222015702 * GRP_RFMstat4 + -0.21360134050893 * GRP_RMntFrq2 + 
0.10280382689873 * GRP_RMntFrq3 + -0.16238020658392 * GRP_RMntFrq4 + 0.38795494894841 * 
GRP_Recency2 + -0.18447788823185 * GRP_Recency3 + -0.44523742460939 * GRP_Recency4 ;
860904    +   H12  = H12  +    -0.44240901099215 * GRP_AcceptedCmp52
860905    +          +     0.35451936529374 * GRP_Frq2  +     0.01466130191686 * GRP_Frq3
860906    +          +     0.21356077566978 * GRP_Frq4  +     0.22887565933637 *
860907    +        GRP_Income2  +     0.28123841156129 * GRP_Income3
860908    +          +    -0.30634832652689 * GRP_Income4  +     0.06733141985754 *
860909    +        GRP_Mnt2  +     0.24901181590062 * GRP_Mnt3  +     0.23926240883217 *
860910    +        GRP_Mnt4  +     0.36878256431394 * GRP_MntFishProducts2
860911    +          +    -0.03033118293022 * GRP_MntFishProducts3
860912    +          +     0.12939247483371 * GRP_MntFishProducts4
860913    +          +     -0.1948739109476 * GRP_MntGoldProds2
860914    +          +    -0.02487689041808 * GRP_MntGoldProds3
860915    +          +      0.0424854445517 * GRP_MntGoldProds4
860916    +          +    -0.77110165164491 * GRP_MntMeatProducts2
860917    +          +    -0.04188692453988 * GRP_MntMeatProducts3
860918    +          +     0.16117883521584 * GRP_MntMeatProducts4
860919    +          +     0.26607076588839 * GRP_MntWines2  +     0.08155165225431 *
860920    +        GRP_MntWines3  +     0.05320347913397 * GRP_MntWines4
860921    +          +    -0.60136669330804 * GRP_NumCatalogPurchases3
860922    +          +    -0.32571087796929 * GRP_NumCatalogPurchases4
860923    +          +    -0.82361130213661 * GRP_NumDistPurchases2
860924    +          +     0.18332361990877 * GRP_NumDistPurchases3
860925    +          +    -0.10228504756385 * GRP_NumDistPurchases4
860926    +          +     0.21492204339132 * GRP_NumWebPurchases2
860927    +          +     0.22752835090931 * GRP_NumWebPurchases3
860928    +          +    -0.04291366517536 * GRP_NumWebPurchases4
860929    +          +     -0.1860476520082 * GRP_RFMstat2  +      0.2676074141222 *
860930    +        GRP_RFMstat3  +     0.25111332591837 * GRP_RFMstat4
860931    +          +    -0.16694407619317 * GRP_RMntFrq2  +     0.21748370383635 *
860932    +        GRP_RMntFrq3  +    -0.33247097178921 * GRP_RMntFrq4
860933    +          +     0.96302825639489 * GRP_Recency2  +     0.29783943122668 *
860934    +        GRP_Recency3  +    -0.18073280365547 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.44240901099215 * GRP_AcceptedCmp52 + 0.35451936529374 * 
GRP_Frq2 + 0.01466130191686 * GRP_Frq3 + 0.21356077566978 * GRP_Frq4 + 0.22887565933637 * 
GRP_Income2 + 0.28123841156129 * GRP_Income3 + -0.30634832652689 * GRP_Income4 + 
0.06733141985754 * GRP_Mnt2 + 0.24901181590062 * GRP_Mnt3 + 0.23926240883217 * GRP_Mnt4 + 
0.36878256431394 * GRP_MntFishProducts2 + -0.03033118293022 * GRP_MntFishProducts3 + 
0.12939247483371 * GRP_MntFishProducts4 + -0.1948739109476 * GRP_MntGoldProds2 + 
-0.02487689041808 * GRP_MntGoldProds3 + 0.0424854445517 * GRP_MntGoldProds4 + 
-0.77110165164491 * GRP_MntMeatProducts2 + -0.04188692453988 * GRP_MntMeatProducts3 + 
0.16117883521584 * GRP_MntMeatProducts4 + 0.26607076588839 * GRP_MntWines2 + 0.08155165225431 
* GRP_MntWines3 + 0.05320347913397 * GRP_MntWines4 + -0.60136669330804 * 
GRP_NumCatalogPurchases3 + -0.32571087796929 * GRP_NumCatalogPurchases4 + -0.82361130213661 * 
GRP_NumDistPurchases2 + 0.18332361990877 * GRP_NumDistPurchases3 + -0.10228504756385 * 
GRP_NumDistPurchases4 + 0.21492204339132 * GRP_NumWebPurchases2 + 0.22752835090931 * 
GRP_NumWebPurchases3 + -0.04291366517536 * GRP_NumWebPurchases4 + -0.1860476520082 * 
GRP_RFMstat2 + 0.2676074141222 * GRP_RFMstat3 + 0.25111332591837 * GRP_RFMstat4 + 
-0.16694407619317 * GRP_RMntFrq2 + 0.21748370383635 * GRP_RMntFrq3 + -0.33247097178921 * 
GRP_RMntFrq4 + 0.96302825639489 * GRP_Recency2 + 0.29783943122668 * GRP_Recency3 + 
-0.18073280365547 * GRP_Recency4 ;
860935    +   H13  = H13  +     0.02391312263521 * GRP_AcceptedCmp52
860936    +          +    -0.01218158666492 * GRP_Frq2  +     0.03493150543946 * GRP_Frq3
860937    +          +    -0.19640223643897 * GRP_Frq4  +    -0.02394476100786 *
860938    +        GRP_Income2  +     0.05107107029363 * GRP_Income3
860939    +          +    -0.26596751360911 * GRP_Income4  +    -0.02628350983207 *
860940    +        GRP_Mnt2  +    -0.08273234777804 * GRP_Mnt3  +      0.2039544161917 *
860941    +        GRP_Mnt4  +     0.19888587009926 * GRP_MntFishProducts2
860942    +          +    -0.12190385526661 * GRP_MntFishProducts3
860943    +          +     0.11161376295027 * GRP_MntFishProducts4
860944    +          +     0.09536549249994 * GRP_MntGoldProds2
860945    +          +    -0.39027188388377 * GRP_MntGoldProds3
860946    +          +    -0.26960120596574 * GRP_MntGoldProds4
860947    +          +    -0.29704810464482 * GRP_MntMeatProducts2
860948    +          +    -0.17523279359181 * GRP_MntMeatProducts3
860949    +          +     0.01169006509688 * GRP_MntMeatProducts4
860950    +          +    -0.03150424899485 * GRP_MntWines2  +    -0.18135684744581 *
860951    +        GRP_MntWines3  +    -0.22282316044351 * GRP_MntWines4
860952    +          +    -0.06575154068738 * GRP_NumCatalogPurchases3
860953    +          +     0.12535793167638 * GRP_NumCatalogPurchases4
860954    +          +     0.10187760390092 * GRP_NumDistPurchases2
860955    +          +    -0.25409837313865 * GRP_NumDistPurchases3
860956    +          +    -0.28689980992526 * GRP_NumDistPurchases4
860957    +          +     0.00005909057861 * GRP_NumWebPurchases2
860958    +          +    -0.14419000341563 * GRP_NumWebPurchases3
860959    +          +     0.09095003593529 * GRP_NumWebPurchases4
860960    +          +    -0.02794941494222 * GRP_RFMstat2  +    -0.08735126371613 *
860961    +        GRP_RFMstat3  +      0.0136997814979 * GRP_RFMstat4
860962    +          +    -0.02686274413645 * GRP_RMntFrq2  +    -0.13529202759766 *
860963    +        GRP_RMntFrq3  +     0.22088337575055 * GRP_RMntFrq4
860964    +          +      0.2635440865684 * GRP_Recency2  +     0.12547691494271 *
860965    +        GRP_Recency3  +    -0.10311689817468 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02391312263521 * GRP_AcceptedCmp52 + -0.01218158666492 * 
GRP_Frq2 + 0.03493150543946 * GRP_Frq3 + -0.19640223643897 * GRP_Frq4 + -0.02394476100786 * 
GRP_Income2 + 0.05107107029363 * GRP_Income3 + -0.26596751360911 * GRP_Income4 + 
-0.02628350983207 * GRP_Mnt2 + -0.08273234777804 * GRP_Mnt3 + 0.2039544161917 * GRP_Mnt4 + 
0.19888587009926 * GRP_MntFishProducts2 + -0.12190385526661 * GRP_MntFishProducts3 + 
0.11161376295027 * GRP_MntFishProducts4 + 0.09536549249994 * GRP_MntGoldProds2 + 
-0.39027188388377 * GRP_MntGoldProds3 + -0.26960120596574 * GRP_MntGoldProds4 + 
-0.29704810464482 * GRP_MntMeatProducts2 + -0.17523279359181 * GRP_MntMeatProducts3 + 
0.01169006509688 * GRP_MntMeatProducts4 + -0.03150424899485 * GRP_MntWines2 + 
-0.18135684744581 * GRP_MntWines3 + -0.22282316044351 * GRP_MntWines4 + -0.06575154068738 * 
GRP_NumCatalogPurchases3 + 0.12535793167638 * GRP_NumCatalogPurchases4 + 0.10187760390092 * 
GRP_NumDistPurchases2 + -0.25409837313865 * GRP_NumDistPurchases3 + -0.28689980992526 * 
GRP_NumDistPurchases4 + 0.00005909057861 * GRP_NumWebPurchases2 + -0.14419000341563 * 
GRP_NumWebPurchases3 + 0.09095003593529 * GRP_NumWebPurchases4 + -0.02794941494222 * 
GRP_RFMstat2 + -0.08735126371613 * GRP_RFMstat3 + 0.0136997814979 * GRP_RFMstat4 + 
-0.02686274413645 * GRP_RMntFrq2 + -0.13529202759766 * GRP_RMntFrq3 + 0.22088337575055 * 
GRP_RMntFrq4 + 0.2635440865684 * GRP_Recency2 + 0.12547691494271 * GRP_Recency3 + 
-0.10311689817468 * GRP_Recency4 ;
860966    +   H14  = H14  +     0.41081496203789 * GRP_AcceptedCmp52
860967    +          +    -0.47313297382337 * GRP_Frq2  +     0.19313816686029 * GRP_Frq3
860968    +          +     0.41736322582944 * GRP_Frq4  +    -0.28916219130566 *
860969    +        GRP_Income2  +     0.14505600514674 * GRP_Income3
860970    +          +    -0.04580645427966 * GRP_Income4  +    -0.19949742172257 *
860971    +        GRP_Mnt2  +     0.27329529634974 * GRP_Mnt3  +     0.33404292971179 *
860972    +        GRP_Mnt4  +    -0.37521460360102 * GRP_MntFishProducts2
860973    +          +    -0.14631724639492 * GRP_MntFishProducts3
860974    +          +     0.10002979979527 * GRP_MntFishProducts4
860975    +          +    -0.09816985850711 * GRP_MntGoldProds2
860976    +          +    -0.12203012318985 * GRP_MntGoldProds3
860977    +          +    -0.01815311012777 * GRP_MntGoldProds4
860978    +          +    -0.06619591895459 * GRP_MntMeatProducts2
860979    +          +    -0.09072077897467 * GRP_MntMeatProducts3
860980    +          +      0.1726695423557 * GRP_MntMeatProducts4
860981    +          +    -0.28636541965058 * GRP_MntWines2  +    -0.02631953768864 *
860982    +        GRP_MntWines3  +     0.06980122973657 * GRP_MntWines4
860983    +          +     0.09645375616786 * GRP_NumCatalogPurchases3
860984    +          +    -0.41914184592159 * GRP_NumCatalogPurchases4
860985    +          +      0.1854692255158 * GRP_NumDistPurchases2
860986    +          +    -0.22330441571095 * GRP_NumDistPurchases3
860987    +          +     0.13028835056864 * GRP_NumDistPurchases4
860988    +          +    -0.16915625127212 * GRP_NumWebPurchases2
860989    +          +    -0.29991156671478 * GRP_NumWebPurchases3
860990    +          +     0.01989579721354 * GRP_NumWebPurchases4
860991    +          +    -0.12351517510664 * GRP_RFMstat2  +     0.41722412115996 *
860992    +        GRP_RFMstat3  +    -0.02210360437313 * GRP_RFMstat4
860993    +          +    -0.04201080178576 * GRP_RMntFrq2  +     0.21775390796319 *
860994    +        GRP_RMntFrq3  +     0.31823734284083 * GRP_RMntFrq4
860995    +          +    -0.53168026601605 * GRP_Recency2  +     -0.3287664545088 *
860996    +        GRP_Recency3  +     0.04505851470752 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.41081496203789 * GRP_AcceptedCmp52 + -0.47313297382337 * 
GRP_Frq2 + 0.19313816686029 * GRP_Frq3 + 0.41736322582944 * GRP_Frq4 + -0.28916219130566 * 
GRP_Income2 + 0.14505600514674 * GRP_Income3 + -0.04580645427966 * GRP_Income4 + 
-0.19949742172257 * GRP_Mnt2 + 0.27329529634974 * GRP_Mnt3 + 0.33404292971179 * GRP_Mnt4 + 
-0.37521460360102 * GRP_MntFishProducts2 + -0.14631724639492 * GRP_MntFishProducts3 + 
0.10002979979527 * GRP_MntFishProducts4 + -0.09816985850711 * GRP_MntGoldProds2 + 
-0.12203012318985 * GRP_MntGoldProds3 + -0.01815311012777 * GRP_MntGoldProds4 + 
-0.06619591895459 * GRP_MntMeatProducts2 + -0.09072077897467 * GRP_MntMeatProducts3 + 
0.1726695423557 * GRP_MntMeatProducts4 + -0.28636541965058 * GRP_MntWines2 + -0.02631953768864 
* GRP_MntWines3 + 0.06980122973657 * GRP_MntWines4 + 0.09645375616786 * 
GRP_NumCatalogPurchases3 + -0.41914184592159 * GRP_NumCatalogPurchases4 + 0.1854692255158 * 
GRP_NumDistPurchases2 + -0.22330441571095 * GRP_NumDistPurchases3 + 0.13028835056864 * 
GRP_NumDistPurchases4 + -0.16915625127212 * GRP_NumWebPurchases2 + -0.29991156671478 * 
GRP_NumWebPurchases3 + 0.01989579721354 * GRP_NumWebPurchases4 + -0.12351517510664 * 
GRP_RFMstat2 + 0.41722412115996 * GRP_RFMstat3 + -0.02210360437313 * GRP_RFMstat4 + 
-0.04201080178576 * GRP_RMntFrq2 + 0.21775390796319 * GRP_RMntFrq3 + 0.31823734284083 * 
GRP_RMntFrq4 + -0.53168026601605 * GRP_Recency2 + -0.3287664545088 * GRP_Recency3 + 
0.04505851470752 * GRP_Recency4 ;
860997    +   H15  = H15  +     0.13088214496598 * GRP_AcceptedCmp52
860998    +          +    -0.08389895441588 * GRP_Frq2  +     0.05379617788531 * GRP_Frq3
860999    +          +     0.05704464608157 * GRP_Frq4  +    -0.33954574127328 *
861000    +        GRP_Income2  +    -0.19537868529992 * GRP_Income3
861001    +          +     0.16339422960337 * GRP_Income4  +    -0.15103080606917 *
861002    +        GRP_Mnt2  +    -0.10359763066736 * GRP_Mnt3  +    -0.15169095818331 *
861003    +        GRP_Mnt4  +    -0.00757439653534 * GRP_MntFishProducts2
861004    +          +     0.03013301742801 * GRP_MntFishProducts3
861005    +          +     -0.0753778180106 * GRP_MntFishProducts4
861006    +          +     0.22882421007211 * GRP_MntGoldProds2
861007    +          +    -0.06369987000315 * GRP_MntGoldProds3
861008    +          +     0.09890582278559 * GRP_MntGoldProds4
861009    +          +    -0.21052640581149 * GRP_MntMeatProducts2
861010    +          +    -0.00867214697179 * GRP_MntMeatProducts3
861011    +          +     0.11929485476343 * GRP_MntMeatProducts4
861012    +          +    -0.18943631653077 * GRP_MntWines2  +     0.03539441492325 *
861013    +        GRP_MntWines3  +     0.30650819876628 * GRP_MntWines4
861014    +          +     0.06292612305453 * GRP_NumCatalogPurchases3
861015    +          +      0.2309036660938 * GRP_NumCatalogPurchases4
861016    +          +    -0.10062151440617 * GRP_NumDistPurchases2
861017    +          +       0.229091410456 * GRP_NumDistPurchases3
861018    +          +    -0.19729313017904 * GRP_NumDistPurchases4
861019    +          +    -0.04101710595215 * GRP_NumWebPurchases2
861020    +          +     0.13926341050039 * GRP_NumWebPurchases3
861021    +          +    -0.04443067825367 * GRP_NumWebPurchases4
861022    +          +     0.12014961650367 * GRP_RFMstat2  +     0.01617790323448 *
861023    +        GRP_RFMstat3  +     -0.1552934903319 * GRP_RFMstat4
861024    +          +    -0.04595909907677 * GRP_RMntFrq2  +    -0.44798863026137 *
861025    +        GRP_RMntFrq3  +     -0.0483895955721 * GRP_RMntFrq4
861026    +          +    -0.03768706422132 * GRP_Recency2  +    -0.02473503115913 *
861027    +        GRP_Recency3  +    -0.07674131244122 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.13088214496598 * GRP_AcceptedCmp52 + -0.08389895441588 * 
GRP_Frq2 + 0.05379617788531 * GRP_Frq3 + 0.05704464608157 * GRP_Frq4 + -0.33954574127328 * 
GRP_Income2 + -0.19537868529992 * GRP_Income3 + 0.16339422960337 * GRP_Income4 + 
-0.15103080606917 * GRP_Mnt2 + -0.10359763066736 * GRP_Mnt3 + -0.15169095818331 * GRP_Mnt4 + 
-0.00757439653534 * GRP_MntFishProducts2 + 0.03013301742801 * GRP_MntFishProducts3 + 
-0.0753778180106 * GRP_MntFishProducts4 + 0.22882421007211 * GRP_MntGoldProds2 + 
-0.06369987000315 * GRP_MntGoldProds3 + 0.09890582278559 * GRP_MntGoldProds4 + 
-0.21052640581149 * GRP_MntMeatProducts2 + -0.00867214697179 * GRP_MntMeatProducts3 + 
0.11929485476343 * GRP_MntMeatProducts4 + -0.18943631653077 * GRP_MntWines2 + 0.03539441492325 
* GRP_MntWines3 + 0.30650819876628 * GRP_MntWines4 + 0.06292612305453 * 
GRP_NumCatalogPurchases3 + 0.2309036660938 * GRP_NumCatalogPurchases4 + -0.10062151440617 * 
GRP_NumDistPurchases2 + 0.229091410456 * GRP_NumDistPurchases3 + -0.19729313017904 * 
GRP_NumDistPurchases4 + -0.04101710595215 * GRP_NumWebPurchases2 + 0.13926341050039 * 
GRP_NumWebPurchases3 + -0.04443067825367 * GRP_NumWebPurchases4 + 0.12014961650367 * 
GRP_RFMstat2 + 0.01617790323448 * GRP_RFMstat3 + -0.1552934903319 * GRP_RFMstat4 + 
-0.04595909907677 * GRP_RMntFrq2 + -0.44798863026137 * GRP_RMntFrq3 + -0.0483895955721 * 
GRP_RMntFrq4 + -0.03768706422132 * GRP_Recency2 + -0.02473503115913 * GRP_Recency3 + 
-0.07674131244122 * GRP_Recency4 ;
861028    +   H16  = H16  +     0.46251048250873 * GRP_AcceptedCmp52
861029    +          +    -0.00268856292377 * GRP_Frq2  +    -0.25660455566834 * GRP_Frq3
861030    +          +     0.00867022501651 * GRP_Frq4  +    -0.19509148919986 *
861031    +        GRP_Income2  +    -0.39761314772605 * GRP_Income3
861032    +          +     0.62767489359884 * GRP_Income4  +     0.12500076687539 *
861033    +        GRP_Mnt2  +    -0.21739986249936 * GRP_Mnt3  +     0.17941174570957 *
861034    +        GRP_Mnt4  +    -0.05655316560222 * GRP_MntFishProducts2
861035    +          +    -0.03224941225278 * GRP_MntFishProducts3
861036    +          +     0.12546380835809 * GRP_MntFishProducts4
861037    +          +     0.21690521778421 * GRP_MntGoldProds2
861038    +          +     0.09035550488812 * GRP_MntGoldProds3
861039    +          +    -0.03133919720822 * GRP_MntGoldProds4
861040    +          +     0.05188619692889 * GRP_MntMeatProducts2
861041    +          +    -0.04899714585321 * GRP_MntMeatProducts3
861042    +          +    -0.35752492237905 * GRP_MntMeatProducts4
861043    +          +    -0.08947041349478 * GRP_MntWines2  +      0.0265961489442 *
861044    +        GRP_MntWines3  +     0.09890393808772 * GRP_MntWines4
861045    +          +     0.45534320348836 * GRP_NumCatalogPurchases3
861046    +          +    -0.31950647452009 * GRP_NumCatalogPurchases4
861047    +          +     0.21080174299166 * GRP_NumDistPurchases2
861048    +          +     0.24874731231732 * GRP_NumDistPurchases3
861049    +          +    -0.01320035732018 * GRP_NumDistPurchases4
861050    +          +     0.17773116301115 * GRP_NumWebPurchases2
861051    +          +     0.13686106729498 * GRP_NumWebPurchases3
861052    +          +     -0.0690876840257 * GRP_NumWebPurchases4
861053    +          +     0.46273916902968 * GRP_RFMstat2  +     0.51267279380421 *
861054    +        GRP_RFMstat3  +     0.27205036954754 * GRP_RFMstat4
861055    +          +    -0.41192018310368 * GRP_RMntFrq2  +    -0.01025987166968 *
861056    +        GRP_RMntFrq3  +     0.08432669626242 * GRP_RMntFrq4
861057    +          +    -0.37569076006412 * GRP_Recency2  +    -0.09560087881071 *
861058    +        GRP_Recency3  +     0.15619501698904 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.46251048250873 * GRP_AcceptedCmp52 + -0.00268856292377 * 
GRP_Frq2 + -0.25660455566834 * GRP_Frq3 + 0.00867022501651 * GRP_Frq4 + -0.19509148919986 * 
GRP_Income2 + -0.39761314772605 * GRP_Income3 + 0.62767489359884 * GRP_Income4 + 
0.12500076687539 * GRP_Mnt2 + -0.21739986249936 * GRP_Mnt3 + 0.17941174570957 * GRP_Mnt4 + 
-0.05655316560222 * GRP_MntFishProducts2 + -0.03224941225278 * GRP_MntFishProducts3 + 
0.12546380835809 * GRP_MntFishProducts4 + 0.21690521778421 * GRP_MntGoldProds2 + 
0.09035550488812 * GRP_MntGoldProds3 + -0.03133919720822 * GRP_MntGoldProds4 + 
0.05188619692889 * GRP_MntMeatProducts2 + -0.04899714585321 * GRP_MntMeatProducts3 + 
-0.35752492237905 * GRP_MntMeatProducts4 + -0.08947041349478 * GRP_MntWines2 + 0.0265961489442 
* GRP_MntWines3 + 0.09890393808772 * GRP_MntWines4 + 0.45534320348836 * 
GRP_NumCatalogPurchases3 + -0.31950647452009 * GRP_NumCatalogPurchases4 + 0.21080174299166 * 
GRP_NumDistPurchases2 + 0.24874731231732 * GRP_NumDistPurchases3 + -0.01320035732018 * 
GRP_NumDistPurchases4 + 0.17773116301115 * GRP_NumWebPurchases2 + 0.13686106729498 * 
GRP_NumWebPurchases3 + -0.0690876840257 * GRP_NumWebPurchases4 + 0.46273916902968 * 
GRP_RFMstat2 + 0.51267279380421 * GRP_RFMstat3 + 0.27205036954754 * GRP_RFMstat4 + 
-0.41192018310368 * GRP_RMntFrq2 + -0.01025987166968 * GRP_RMntFrq3 + 0.08432669626242 * 
GRP_RMntFrq4 + -0.37569076006412 * GRP_Recency2 + -0.09560087881071 * GRP_Recency3 + 
0.15619501698904 * GRP_Recency4 ;
861059    +   H11  =     1.02277651695375 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.02277651695375 + H11 ;
861060    +   H12  =     0.30687404845149 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.30687404845149 + H12 ;
861061    +   H13  =     0.38396141006686 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.38396141006686 + H13 ;
861062    +   H14  =     0.66961227315774 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.66961227315774 + H14 ;
861063    +   H15  =     0.55149278706288 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.55149278706288 + H15 ;
861064    +   H16  =    -0.54938689657398 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.54938689657398 + H16 ;
861065    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
861066    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
861067    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
861068    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
861069    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
861070    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
861071    +END;
MPRINT(EM_DIAGRAM):   END;
861072    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
861073    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
861074    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
861075    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
861076    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
861077    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
861078    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
861079    +END;
MPRINT(EM_DIAGRAM):   END;
861080    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
861081    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
861082    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
861083    +
861084    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
861085    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
861086    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
861087    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
861088    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
861089    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
861090    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
861091    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
861092    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
861093    +end;
MPRINT(EM_DIAGRAM):   end;
861094    +else do;
MPRINT(EM_DIAGRAM):   else do;
861095    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
861096    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
861097    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
861098    +   end;
MPRINT(EM_DIAGRAM):   end;
861099    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
861100    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
861101    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
861102    +   end;
MPRINT(EM_DIAGRAM):   end;
861103    +   else do;
MPRINT(EM_DIAGRAM):   else do;
861104    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
861105    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
861106    +   end;
MPRINT(EM_DIAGRAM):   end;
861107    +end;
MPRINT(EM_DIAGRAM):   end;
861108    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
861109    +   P_DepVar1  =     1.19791571177519 * H11  +     1.91589058327051 * H12
861110    +          +     0.44556788800887 * H13  +    -1.25798187083564 * H14
861111    +          +    -0.40058942527791 * H15  +    -1.41542812613902 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.19791571177519 * H11 + 1.91589058327051 * H12 + 
0.44556788800887 * H13 + -1.25798187083564 * H14 + -0.40058942527791 * H15 + -1.41542812613902 
* H16 ;
861112    +   P_DepVar1  =    -2.68041503413101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.68041503413101 + P_DepVar1 ;
861113    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
861114    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
861115    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
861116    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
861117    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
861118    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
861119    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
861120    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
861121    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
861122    +END;
MPRINT(EM_DIAGRAM):   END;
861123    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
861124    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
861125    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
861126    +END;
MPRINT(EM_DIAGRAM):   END;
861127    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
861128    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
861129    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
861130    +END;
MPRINT(EM_DIAGRAM):   END;
861131    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
861132    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
861133    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
861134    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
861135    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
861136    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
861137    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
861138    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
861139    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
861140    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
861141    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
861142    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
861143    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
861144    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
861145    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
861146    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
861147    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
861148    +END;
MPRINT(EM_DIAGRAM):   END;
861149    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
861150    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
861151    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
861152    +drop
861153    +H11
861154    +H12
861155    +H13
861156    +H14
861157    +H15
861158    +H16
861159    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
861160    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
861161     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL23_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
861162     quit;
861163     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
861164     filename emflow
861164   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural23: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
861165     *------------------------------------------------------------*;
861166     * Neural23: Scoring VALIDATE data;
861167     *------------------------------------------------------------*;
861168     data EMWS8.Neural23_VALIDATE
861169     / view=EMWS8.Neural23_VALIDATE
861170     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_VALIDATE / view=EMWS8.Neural23_VALIDATE ;
861171     set EMWS8.BINNING_VALIDATE
861172     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE ;
861173     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas.
861174    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
861175    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
861176    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
861177    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
861178    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
861179    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
861180    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
861181    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
861182    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
861183    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
861184    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
861185    +LENGTH _WARN_ $4
861186    +      F_DepVar  $ 12
861187    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
861188    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
861189    +
861190    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
861191    +
861192    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
861193    +
861194    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
861195    +
861196    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
861197    +
861198    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
861199    +
861200    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
861201    +
861202    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
861203    +
861204    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
861205    +
861206    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
861207    +
861208    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
861209    +
861210    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
861211    +
861212    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
861213    +
861214    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
861215    +
861216    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
861217    +
861218    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
861219    +
861220    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
861221    +
861222    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
861223    +
861224    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
861225    +
861226    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
861227    +
861228    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
861229    +
861230    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
861231    +
861232    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
861233    +
861234    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
861235    +
861236    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
861237    +
861238    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
861239    +
861240    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
861241    +
861242    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
861243    +
861244    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
861245    +
861246    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
861247    +
861248    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
861249    +
861250    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
861251    +
861252    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
861253    +
861254    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
861255    +
861256    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
861257    +
861258    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
861259    +
861260    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
861261    +
861262    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
861263    +
861264    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
861265    +
861266    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
861267    +
861268    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
861269    +
861270    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
861271    +
861272    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
861273    +
861274    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
861275    +
861276    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
861277    +
861278    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
861279    +
861280    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
861281    +
861282    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
861283    +
861284    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
861285    +
861286    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
861287    +
861288    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
861289    +
861290    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
861291    +
861292    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
861293    +
861294    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
861295    +
861296    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
861297    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
861298    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
861299    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
861300    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
861301    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861302    +end;
MPRINT(EM_DIAGRAM):   end;
861303    +else do;
MPRINT(EM_DIAGRAM):   else do;
861304    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
861305    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
861306    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
861307    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
861308    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
861309    +   end;
MPRINT(EM_DIAGRAM):   end;
861310    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
861311    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
861312    +   end;
MPRINT(EM_DIAGRAM):   end;
861313    +   else do;
MPRINT(EM_DIAGRAM):   else do;
861314    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
861315    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
861316    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861317    +   end;
MPRINT(EM_DIAGRAM):   end;
861318    +end;
MPRINT(EM_DIAGRAM):   end;
861319    +
861320    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
861321    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
861322    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
861323    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
861324    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
861325    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
861326    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
861327    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861328    +end;
MPRINT(EM_DIAGRAM):   end;
861329    +else do;
MPRINT(EM_DIAGRAM):   else do;
861330    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
861331    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
861332    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
861333    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
861334    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
861335    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
861336    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
861337    +   end;
MPRINT(EM_DIAGRAM):   end;
861338    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
861339    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
861340    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
861341    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
861342    +   end;
MPRINT(EM_DIAGRAM):   end;
861343    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
861344    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
861345    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
861346    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
861347    +   end;
MPRINT(EM_DIAGRAM):   end;
861348    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
861349    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
861350    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
861351    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
861352    +   end;
MPRINT(EM_DIAGRAM):   end;
861353    +   else do;
MPRINT(EM_DIAGRAM):   else do;
861354    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
861355    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
861356    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
861357    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
861358    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861359    +   end;
MPRINT(EM_DIAGRAM):   end;
861360    +end;
MPRINT(EM_DIAGRAM):   end;
861361    +
861362    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
861363    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
861364    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
861365    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
861366    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
861367    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
861368    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
861369    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861370    +end;
MPRINT(EM_DIAGRAM):   end;
861371    +else do;
MPRINT(EM_DIAGRAM):   else do;
861372    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
861373    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
861374    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
861375    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
861376    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
861377    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
861378    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
861379    +   end;
MPRINT(EM_DIAGRAM):   end;
861380    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
861381    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
861382    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
861383    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
861384    +   end;
MPRINT(EM_DIAGRAM):   end;
861385    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
861386    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
861387    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
861388    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
861389    +   end;
MPRINT(EM_DIAGRAM):   end;
861390    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
861391    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
861392    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
861393    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
861394    +   end;
MPRINT(EM_DIAGRAM):   end;
861395    +   else do;
MPRINT(EM_DIAGRAM):   else do;
861396    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
861397    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
861398    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
861399    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
861400    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861401    +   end;
MPRINT(EM_DIAGRAM):   end;
861402    +end;
MPRINT(EM_DIAGRAM):   end;
861403    +
861404    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
861405    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
861406    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
861407    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
861408    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
861409    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
861410    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
861411    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861412    +end;
MPRINT(EM_DIAGRAM):   end;
861413    +else do;
MPRINT(EM_DIAGRAM):   else do;
861414    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
861415    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
861416    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
861417    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
861418    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
861419    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
861420    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
861421    +   end;
MPRINT(EM_DIAGRAM):   end;
861422    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
861423    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
861424    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
861425    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
861426    +   end;
MPRINT(EM_DIAGRAM):   end;
861427    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
861428    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
861429    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
861430    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
861431    +   end;
MPRINT(EM_DIAGRAM):   end;
861432    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
861433    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
861434    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
861435    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
861436    +   end;
MPRINT(EM_DIAGRAM):   end;
861437    +   else do;
MPRINT(EM_DIAGRAM):   else do;
861438    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
861439    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
861440    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
861441    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
861442    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861443    +   end;
MPRINT(EM_DIAGRAM):   end;
861444    +end;
MPRINT(EM_DIAGRAM):   end;
861445    +
861446    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
861447    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
861448    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
861449    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
861450    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
861451    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
861452    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
861453    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861454    +end;
MPRINT(EM_DIAGRAM):   end;
861455    +else do;
MPRINT(EM_DIAGRAM):   else do;
861456    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
861457    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
861458    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
861459    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
861460    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
861461    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
861462    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
861463    +   end;
MPRINT(EM_DIAGRAM):   end;
861464    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
861465    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
861466    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
861467    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
861468    +   end;
MPRINT(EM_DIAGRAM):   end;
861469    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
861470    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
861471    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
861472    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
861473    +   end;
MPRINT(EM_DIAGRAM):   end;
861474    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
861475    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
861476    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
861477    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
861478    +   end;
MPRINT(EM_DIAGRAM):   end;
861479    +   else do;
MPRINT(EM_DIAGRAM):   else do;
861480    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
861481    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
861482    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
861483    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
861484    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861485    +   end;
MPRINT(EM_DIAGRAM):   end;
861486    +end;
MPRINT(EM_DIAGRAM):   end;
861487    +
861488    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
861489    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
861490    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
861491    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
861492    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
861493    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
861494    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
861495    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861496    +end;
MPRINT(EM_DIAGRAM):   end;
861497    +else do;
MPRINT(EM_DIAGRAM):   else do;
861498    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
861499    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
861500    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
861501    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
861502    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
861503    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
861504    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
861505    +   end;
MPRINT(EM_DIAGRAM):   end;
861506    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
861507    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
861508    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
861509    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
861510    +   end;
MPRINT(EM_DIAGRAM):   end;
861511    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
861512    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
861513    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
861514    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
861515    +   end;
MPRINT(EM_DIAGRAM):   end;
861516    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
861517    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
861518    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
861519    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
861520    +   end;
MPRINT(EM_DIAGRAM):   end;
861521    +   else do;
MPRINT(EM_DIAGRAM):   else do;
861522    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
861523    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
861524    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
861525    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
861526    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861527    +   end;
MPRINT(EM_DIAGRAM):   end;
861528    +end;
MPRINT(EM_DIAGRAM):   end;
861529    +
861530    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
861531    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
861532    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
861533    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
861534    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
861535    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
861536    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
861537    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861538    +end;
MPRINT(EM_DIAGRAM):   end;
861539    +else do;
MPRINT(EM_DIAGRAM):   else do;
861540    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
861541    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
861542    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
861543    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
861544    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
861545    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
861546    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
861547    +   end;
MPRINT(EM_DIAGRAM):   end;
861548    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
861549    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
861550    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
861551    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
861552    +   end;
MPRINT(EM_DIAGRAM):   end;
861553    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
861554    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
861555    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
861556    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
861557    +   end;
MPRINT(EM_DIAGRAM):   end;
861558    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
861559    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
861560    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
861561    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
861562    +   end;
MPRINT(EM_DIAGRAM):   end;
861563    +   else do;
MPRINT(EM_DIAGRAM):   else do;
861564    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
861565    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
861566    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
861567    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
861568    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861569    +   end;
MPRINT(EM_DIAGRAM):   end;
861570    +end;
MPRINT(EM_DIAGRAM):   end;
861571    +
861572    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
861573    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
861574    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
861575    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
861576    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
861577    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
861578    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
861579    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861580    +end;
MPRINT(EM_DIAGRAM):   end;
861581    +else do;
MPRINT(EM_DIAGRAM):   else do;
861582    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
861583    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
861584    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
861585    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
861586    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
861587    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
861588    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
861589    +   end;
MPRINT(EM_DIAGRAM):   end;
861590    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
861591    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
861592    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
861593    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
861594    +   end;
MPRINT(EM_DIAGRAM):   end;
861595    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
861596    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
861597    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
861598    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
861599    +   end;
MPRINT(EM_DIAGRAM):   end;
861600    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
861601    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
861602    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
861603    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
861604    +   end;
MPRINT(EM_DIAGRAM):   end;
861605    +   else do;
MPRINT(EM_DIAGRAM):   else do;
861606    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
861607    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
861608    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
861609    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
861610    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861611    +   end;
MPRINT(EM_DIAGRAM):   end;
861612    +end;
MPRINT(EM_DIAGRAM):   end;
861613    +
861614    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
861615    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
861616    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
861617    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
861618    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
861619    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
861620    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861621    +end;
MPRINT(EM_DIAGRAM):   end;
861622    +else do;
MPRINT(EM_DIAGRAM):   else do;
861623    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
861624    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
861625    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
861626    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
861627    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
861628    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
861629    +   end;
MPRINT(EM_DIAGRAM):   end;
861630    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
861631    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
861632    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
861633    +   end;
MPRINT(EM_DIAGRAM):   end;
861634    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
861635    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
861636    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
861637    +   end;
MPRINT(EM_DIAGRAM):   end;
861638    +   else do;
MPRINT(EM_DIAGRAM):   else do;
861639    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
861640    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
861641    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
861642    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861643    +   end;
MPRINT(EM_DIAGRAM):   end;
861644    +end;
MPRINT(EM_DIAGRAM):   end;
861645    +
861646    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
861647    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
861648    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
861649    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
861650    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
861651    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
861652    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
861653    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861654    +end;
MPRINT(EM_DIAGRAM):   end;
861655    +else do;
MPRINT(EM_DIAGRAM):   else do;
861656    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
861657    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
861658    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
861659    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
861660    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
861661    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
861662    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
861663    +   end;
MPRINT(EM_DIAGRAM):   end;
861664    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
861665    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
861666    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
861667    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
861668    +   end;
MPRINT(EM_DIAGRAM):   end;
861669    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
861670    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
861671    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
861672    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
861673    +   end;
MPRINT(EM_DIAGRAM):   end;
861674    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
861675    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
861676    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
861677    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
861678    +   end;
MPRINT(EM_DIAGRAM):   end;
861679    +   else do;
MPRINT(EM_DIAGRAM):   else do;
861680    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
861681    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
861682    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
861683    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
861684    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861685    +   end;
MPRINT(EM_DIAGRAM):   end;
861686    +end;
MPRINT(EM_DIAGRAM):   end;
861687    +
861688    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
861689    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
861690    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
861691    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
861692    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
861693    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
861694    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
861695    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861696    +end;
MPRINT(EM_DIAGRAM):   end;
861697    +else do;
MPRINT(EM_DIAGRAM):   else do;
861698    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
861699    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
861700    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
861701    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
861702    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
861703    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
861704    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
861705    +   end;
MPRINT(EM_DIAGRAM):   end;
861706    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
861707    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
861708    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
861709    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
861710    +   end;
MPRINT(EM_DIAGRAM):   end;
861711    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
861712    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
861713    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
861714    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
861715    +   end;
MPRINT(EM_DIAGRAM):   end;
861716    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
861717    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
861718    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
861719    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
861720    +   end;
MPRINT(EM_DIAGRAM):   end;
861721    +   else do;
MPRINT(EM_DIAGRAM):   else do;
861722    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
861723    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
861724    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
861725    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
861726    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861727    +   end;
MPRINT(EM_DIAGRAM):   end;
861728    +end;
MPRINT(EM_DIAGRAM):   end;
861729    +
861730    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
861731    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
861732    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
861733    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
861734    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
861735    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
861736    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
861737    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861738    +end;
MPRINT(EM_DIAGRAM):   end;
861739    +else do;
MPRINT(EM_DIAGRAM):   else do;
861740    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
861741    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
861742    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
861743    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
861744    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
861745    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
861746    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
861747    +   end;
MPRINT(EM_DIAGRAM):   end;
861748    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
861749    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
861750    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
861751    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
861752    +   end;
MPRINT(EM_DIAGRAM):   end;
861753    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
861754    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
861755    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
861756    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
861757    +   end;
MPRINT(EM_DIAGRAM):   end;
861758    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
861759    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
861760    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
861761    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
861762    +   end;
MPRINT(EM_DIAGRAM):   end;
861763    +   else do;
MPRINT(EM_DIAGRAM):   else do;
861764    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
861765    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
861766    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
861767    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
861768    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861769    +   end;
MPRINT(EM_DIAGRAM):   end;
861770    +end;
MPRINT(EM_DIAGRAM):   end;
861771    +
861772    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
861773    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
861774    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
861775    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
861776    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
861777    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
861778    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
861779    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861780    +end;
MPRINT(EM_DIAGRAM):   end;
861781    +else do;
MPRINT(EM_DIAGRAM):   else do;
861782    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
861783    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
861784    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
861785    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
861786    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
861787    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
861788    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
861789    +   end;
MPRINT(EM_DIAGRAM):   end;
861790    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
861791    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
861792    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
861793    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
861794    +   end;
MPRINT(EM_DIAGRAM):   end;
861795    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
861796    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
861797    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
861798    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
861799    +   end;
MPRINT(EM_DIAGRAM):   end;
861800    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
861801    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
861802    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
861803    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
861804    +   end;
MPRINT(EM_DIAGRAM):   end;
861805    +   else do;
MPRINT(EM_DIAGRAM):   else do;
861806    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
861807    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
861808    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
861809    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
861810    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861811    +   end;
MPRINT(EM_DIAGRAM):   end;
861812    +end;
MPRINT(EM_DIAGRAM):   end;
861813    +
861814    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
861815    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
861816    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
861817    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
861818    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
861819    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
861820    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
861821    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861822    +end;
MPRINT(EM_DIAGRAM):   end;
861823    +else do;
MPRINT(EM_DIAGRAM):   else do;
861824    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
861825    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
861826    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
861827    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
861828    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
861829    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
861830    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
861831    +   end;
MPRINT(EM_DIAGRAM):   end;
861832    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
861833    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
861834    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
861835    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
861836    +   end;
MPRINT(EM_DIAGRAM):   end;
861837    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
861838    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
861839    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
861840    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
861841    +   end;
MPRINT(EM_DIAGRAM):   end;
861842    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
861843    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
861844    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
861845    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
861846    +   end;
MPRINT(EM_DIAGRAM):   end;
861847    +   else do;
MPRINT(EM_DIAGRAM):   else do;
861848    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
861849    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
861850    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
861851    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
861852    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861853    +   end;
MPRINT(EM_DIAGRAM):   end;
861854    +end;
MPRINT(EM_DIAGRAM):   end;
861855    +
861856    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
861857    +*** Checking missing input Interval
861858    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
861859    +
861860    +IF NMISS(
861861    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
861862    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
861863    +
861864    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
861865    +END;
MPRINT(EM_DIAGRAM):   END;
861866    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
861867    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
861868    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
861869    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
861870    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
861871    +END;
MPRINT(EM_DIAGRAM):   END;
861872    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
861873    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
861874    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
861875    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
861876    +END;
MPRINT(EM_DIAGRAM):   END;
861877    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
861878    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
861879    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
861880    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
861881    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
861882    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
861883    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
861884    +   H11  =     0.25397263809886 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.25397263809886 * S_Year_Birth ;
861885    +   H12  =     0.05075762370892 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.05075762370892 * S_Year_Birth ;
861886    +   H13  =     0.04360472272597 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.04360472272597 * S_Year_Birth ;
861887    +   H14  =     0.01387196819865 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.01387196819865 * S_Year_Birth ;
861888    +   H15  =     0.05734148733166 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 0.05734148733166 * S_Year_Birth ;
861889    +   H16  =     0.07449261080848 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = 0.07449261080848 * S_Year_Birth ;
861890    +   H11  = H11  +    -0.13483168537737 * GRP_AcceptedCmp52
861891    +          +     0.02321007103238 * GRP_Frq2  +      0.2993754491201 * GRP_Frq3
861892    +          +     0.03188619345426 * GRP_Frq4  +     0.23837524440518 *
861893    +        GRP_Income2  +    -0.02988101686846 * GRP_Income3
861894    +          +    -0.04314945794282 * GRP_Income4  +      0.0797760707666 *
861895    +        GRP_Mnt2  +    -0.02272798443967 * GRP_Mnt3  +    -0.37386810467628 *
861896    +        GRP_Mnt4  +      0.0916244532169 * GRP_MntFishProducts2
861897    +          +    -0.08991361976323 * GRP_MntFishProducts3
861898    +          +    -0.12439533124432 * GRP_MntFishProducts4
861899    +          +    -0.38906628986229 * GRP_MntGoldProds2
861900    +          +     0.02112411721097 * GRP_MntGoldProds3
861901    +          +     0.05560214439156 * GRP_MntGoldProds4
861902    +          +     0.07558086835487 * GRP_MntMeatProducts2
861903    +          +    -0.24998452825562 * GRP_MntMeatProducts3
861904    +          +    -0.11030888417179 * GRP_MntMeatProducts4
861905    +          +     0.13229832861513 * GRP_MntWines2  +     0.50793143142609 *
861906    +        GRP_MntWines3  +    -0.26273353961061 * GRP_MntWines4
861907    +          +    -0.02587175944603 * GRP_NumCatalogPurchases3
861908    +          +    -0.07172373139956 * GRP_NumCatalogPurchases4
861909    +          +    -0.26905740590447 * GRP_NumDistPurchases2
861910    +          +     0.06889154687101 * GRP_NumDistPurchases3
861911    +          +    -0.31591167055503 * GRP_NumDistPurchases4
861912    +          +    -0.26862765566252 * GRP_NumWebPurchases2
861913    +          +     0.01579611280005 * GRP_NumWebPurchases3
861914    +          +    -0.06884702149074 * GRP_NumWebPurchases4
861915    +          +     0.19400469320488 * GRP_RFMstat2  +     0.32533875784776 *
861916    +        GRP_RFMstat3  +    -0.13730222015702 * GRP_RFMstat4
861917    +          +    -0.21360134050893 * GRP_RMntFrq2  +     0.10280382689873 *
861918    +        GRP_RMntFrq3  +    -0.16238020658392 * GRP_RMntFrq4
861919    +          +     0.38795494894841 * GRP_Recency2  +    -0.18447788823185 *
861920    +        GRP_Recency3  +    -0.44523742460939 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.13483168537737 * GRP_AcceptedCmp52 + 0.02321007103238 * 
GRP_Frq2 + 0.2993754491201 * GRP_Frq3 + 0.03188619345426 * GRP_Frq4 + 0.23837524440518 * 
GRP_Income2 + -0.02988101686846 * GRP_Income3 + -0.04314945794282 * GRP_Income4 + 
0.0797760707666 * GRP_Mnt2 + -0.02272798443967 * GRP_Mnt3 + -0.37386810467628 * GRP_Mnt4 + 
0.0916244532169 * GRP_MntFishProducts2 + -0.08991361976323 * GRP_MntFishProducts3 + 
-0.12439533124432 * GRP_MntFishProducts4 + -0.38906628986229 * GRP_MntGoldProds2 + 
0.02112411721097 * GRP_MntGoldProds3 + 0.05560214439156 * GRP_MntGoldProds4 + 0.07558086835487 
* GRP_MntMeatProducts2 + -0.24998452825562 * GRP_MntMeatProducts3 + -0.11030888417179 * 
GRP_MntMeatProducts4 + 0.13229832861513 * GRP_MntWines2 + 0.50793143142609 * GRP_MntWines3 + 
-0.26273353961061 * GRP_MntWines4 + -0.02587175944603 * GRP_NumCatalogPurchases3 + 
-0.07172373139956 * GRP_NumCatalogPurchases4 + -0.26905740590447 * GRP_NumDistPurchases2 + 
0.06889154687101 * GRP_NumDistPurchases3 + -0.31591167055503 * GRP_NumDistPurchases4 + 
-0.26862765566252 * GRP_NumWebPurchases2 + 0.01579611280005 * GRP_NumWebPurchases3 + 
-0.06884702149074 * GRP_NumWebPurchases4 + 0.19400469320488 * GRP_RFMstat2 + 0.32533875784776 
* GRP_RFMstat3 + -0.13730222015702 * GRP_RFMstat4 + -0.21360134050893 * GRP_RMntFrq2 + 
0.10280382689873 * GRP_RMntFrq3 + -0.16238020658392 * GRP_RMntFrq4 + 0.38795494894841 * 
GRP_Recency2 + -0.18447788823185 * GRP_Recency3 + -0.44523742460939 * GRP_Recency4 ;
861921    +   H12  = H12  +    -0.44240901099215 * GRP_AcceptedCmp52
861922    +          +     0.35451936529374 * GRP_Frq2  +     0.01466130191686 * GRP_Frq3
861923    +          +     0.21356077566978 * GRP_Frq4  +     0.22887565933637 *
861924    +        GRP_Income2  +     0.28123841156129 * GRP_Income3
861925    +          +    -0.30634832652689 * GRP_Income4  +     0.06733141985754 *
861926    +        GRP_Mnt2  +     0.24901181590062 * GRP_Mnt3  +     0.23926240883217 *
861927    +        GRP_Mnt4  +     0.36878256431394 * GRP_MntFishProducts2
861928    +          +    -0.03033118293022 * GRP_MntFishProducts3
861929    +          +     0.12939247483371 * GRP_MntFishProducts4
861930    +          +     -0.1948739109476 * GRP_MntGoldProds2
861931    +          +    -0.02487689041808 * GRP_MntGoldProds3
861932    +          +      0.0424854445517 * GRP_MntGoldProds4
861933    +          +    -0.77110165164491 * GRP_MntMeatProducts2
861934    +          +    -0.04188692453988 * GRP_MntMeatProducts3
861935    +          +     0.16117883521584 * GRP_MntMeatProducts4
861936    +          +     0.26607076588839 * GRP_MntWines2  +     0.08155165225431 *
861937    +        GRP_MntWines3  +     0.05320347913397 * GRP_MntWines4
861938    +          +    -0.60136669330804 * GRP_NumCatalogPurchases3
861939    +          +    -0.32571087796929 * GRP_NumCatalogPurchases4
861940    +          +    -0.82361130213661 * GRP_NumDistPurchases2
861941    +          +     0.18332361990877 * GRP_NumDistPurchases3
861942    +          +    -0.10228504756385 * GRP_NumDistPurchases4
861943    +          +     0.21492204339132 * GRP_NumWebPurchases2
861944    +          +     0.22752835090931 * GRP_NumWebPurchases3
861945    +          +    -0.04291366517536 * GRP_NumWebPurchases4
861946    +          +     -0.1860476520082 * GRP_RFMstat2  +      0.2676074141222 *
861947    +        GRP_RFMstat3  +     0.25111332591837 * GRP_RFMstat4
861948    +          +    -0.16694407619317 * GRP_RMntFrq2  +     0.21748370383635 *
861949    +        GRP_RMntFrq3  +    -0.33247097178921 * GRP_RMntFrq4
861950    +          +     0.96302825639489 * GRP_Recency2  +     0.29783943122668 *
861951    +        GRP_Recency3  +    -0.18073280365547 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.44240901099215 * GRP_AcceptedCmp52 + 0.35451936529374 * 
GRP_Frq2 + 0.01466130191686 * GRP_Frq3 + 0.21356077566978 * GRP_Frq4 + 0.22887565933637 * 
GRP_Income2 + 0.28123841156129 * GRP_Income3 + -0.30634832652689 * GRP_Income4 + 
0.06733141985754 * GRP_Mnt2 + 0.24901181590062 * GRP_Mnt3 + 0.23926240883217 * GRP_Mnt4 + 
0.36878256431394 * GRP_MntFishProducts2 + -0.03033118293022 * GRP_MntFishProducts3 + 
0.12939247483371 * GRP_MntFishProducts4 + -0.1948739109476 * GRP_MntGoldProds2 + 
-0.02487689041808 * GRP_MntGoldProds3 + 0.0424854445517 * GRP_MntGoldProds4 + 
-0.77110165164491 * GRP_MntMeatProducts2 + -0.04188692453988 * GRP_MntMeatProducts3 + 
0.16117883521584 * GRP_MntMeatProducts4 + 0.26607076588839 * GRP_MntWines2 + 0.08155165225431 
* GRP_MntWines3 + 0.05320347913397 * GRP_MntWines4 + -0.60136669330804 * 
GRP_NumCatalogPurchases3 + -0.32571087796929 * GRP_NumCatalogPurchases4 + -0.82361130213661 * 
GRP_NumDistPurchases2 + 0.18332361990877 * GRP_NumDistPurchases3 + -0.10228504756385 * 
GRP_NumDistPurchases4 + 0.21492204339132 * GRP_NumWebPurchases2 + 0.22752835090931 * 
GRP_NumWebPurchases3 + -0.04291366517536 * GRP_NumWebPurchases4 + -0.1860476520082 * 
GRP_RFMstat2 + 0.2676074141222 * GRP_RFMstat3 + 0.25111332591837 * GRP_RFMstat4 + 
-0.16694407619317 * GRP_RMntFrq2 + 0.21748370383635 * GRP_RMntFrq3 + -0.33247097178921 * 
GRP_RMntFrq4 + 0.96302825639489 * GRP_Recency2 + 0.29783943122668 * GRP_Recency3 + 
-0.18073280365547 * GRP_Recency4 ;
861952    +   H13  = H13  +     0.02391312263521 * GRP_AcceptedCmp52
861953    +          +    -0.01218158666492 * GRP_Frq2  +     0.03493150543946 * GRP_Frq3
861954    +          +    -0.19640223643897 * GRP_Frq4  +    -0.02394476100786 *
861955    +        GRP_Income2  +     0.05107107029363 * GRP_Income3
861956    +          +    -0.26596751360911 * GRP_Income4  +    -0.02628350983207 *
861957    +        GRP_Mnt2  +    -0.08273234777804 * GRP_Mnt3  +      0.2039544161917 *
861958    +        GRP_Mnt4  +     0.19888587009926 * GRP_MntFishProducts2
861959    +          +    -0.12190385526661 * GRP_MntFishProducts3
861960    +          +     0.11161376295027 * GRP_MntFishProducts4
861961    +          +     0.09536549249994 * GRP_MntGoldProds2
861962    +          +    -0.39027188388377 * GRP_MntGoldProds3
861963    +          +    -0.26960120596574 * GRP_MntGoldProds4
861964    +          +    -0.29704810464482 * GRP_MntMeatProducts2
861965    +          +    -0.17523279359181 * GRP_MntMeatProducts3
861966    +          +     0.01169006509688 * GRP_MntMeatProducts4
861967    +          +    -0.03150424899485 * GRP_MntWines2  +    -0.18135684744581 *
861968    +        GRP_MntWines3  +    -0.22282316044351 * GRP_MntWines4
861969    +          +    -0.06575154068738 * GRP_NumCatalogPurchases3
861970    +          +     0.12535793167638 * GRP_NumCatalogPurchases4
861971    +          +     0.10187760390092 * GRP_NumDistPurchases2
861972    +          +    -0.25409837313865 * GRP_NumDistPurchases3
861973    +          +    -0.28689980992526 * GRP_NumDistPurchases4
861974    +          +     0.00005909057861 * GRP_NumWebPurchases2
861975    +          +    -0.14419000341563 * GRP_NumWebPurchases3
861976    +          +     0.09095003593529 * GRP_NumWebPurchases4
861977    +          +    -0.02794941494222 * GRP_RFMstat2  +    -0.08735126371613 *
861978    +        GRP_RFMstat3  +      0.0136997814979 * GRP_RFMstat4
861979    +          +    -0.02686274413645 * GRP_RMntFrq2  +    -0.13529202759766 *
861980    +        GRP_RMntFrq3  +     0.22088337575055 * GRP_RMntFrq4
861981    +          +      0.2635440865684 * GRP_Recency2  +     0.12547691494271 *
861982    +        GRP_Recency3  +    -0.10311689817468 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02391312263521 * GRP_AcceptedCmp52 + -0.01218158666492 * 
GRP_Frq2 + 0.03493150543946 * GRP_Frq3 + -0.19640223643897 * GRP_Frq4 + -0.02394476100786 * 
GRP_Income2 + 0.05107107029363 * GRP_Income3 + -0.26596751360911 * GRP_Income4 + 
-0.02628350983207 * GRP_Mnt2 + -0.08273234777804 * GRP_Mnt3 + 0.2039544161917 * GRP_Mnt4 + 
0.19888587009926 * GRP_MntFishProducts2 + -0.12190385526661 * GRP_MntFishProducts3 + 
0.11161376295027 * GRP_MntFishProducts4 + 0.09536549249994 * GRP_MntGoldProds2 + 
-0.39027188388377 * GRP_MntGoldProds3 + -0.26960120596574 * GRP_MntGoldProds4 + 
-0.29704810464482 * GRP_MntMeatProducts2 + -0.17523279359181 * GRP_MntMeatProducts3 + 
0.01169006509688 * GRP_MntMeatProducts4 + -0.03150424899485 * GRP_MntWines2 + 
-0.18135684744581 * GRP_MntWines3 + -0.22282316044351 * GRP_MntWines4 + -0.06575154068738 * 
GRP_NumCatalogPurchases3 + 0.12535793167638 * GRP_NumCatalogPurchases4 + 0.10187760390092 * 
GRP_NumDistPurchases2 + -0.25409837313865 * GRP_NumDistPurchases3 + -0.28689980992526 * 
GRP_NumDistPurchases4 + 0.00005909057861 * GRP_NumWebPurchases2 + -0.14419000341563 * 
GRP_NumWebPurchases3 + 0.09095003593529 * GRP_NumWebPurchases4 + -0.02794941494222 * 
GRP_RFMstat2 + -0.08735126371613 * GRP_RFMstat3 + 0.0136997814979 * GRP_RFMstat4 + 
-0.02686274413645 * GRP_RMntFrq2 + -0.13529202759766 * GRP_RMntFrq3 + 0.22088337575055 * 
GRP_RMntFrq4 + 0.2635440865684 * GRP_Recency2 + 0.12547691494271 * GRP_Recency3 + 
-0.10311689817468 * GRP_Recency4 ;
861983    +   H14  = H14  +     0.41081496203789 * GRP_AcceptedCmp52
861984    +          +    -0.47313297382337 * GRP_Frq2  +     0.19313816686029 * GRP_Frq3
861985    +          +     0.41736322582944 * GRP_Frq4  +    -0.28916219130566 *
861986    +        GRP_Income2  +     0.14505600514674 * GRP_Income3
861987    +          +    -0.04580645427966 * GRP_Income4  +    -0.19949742172257 *
861988    +        GRP_Mnt2  +     0.27329529634974 * GRP_Mnt3  +     0.33404292971179 *
861989    +        GRP_Mnt4  +    -0.37521460360102 * GRP_MntFishProducts2
861990    +          +    -0.14631724639492 * GRP_MntFishProducts3
861991    +          +     0.10002979979527 * GRP_MntFishProducts4
861992    +          +    -0.09816985850711 * GRP_MntGoldProds2
861993    +          +    -0.12203012318985 * GRP_MntGoldProds3
861994    +          +    -0.01815311012777 * GRP_MntGoldProds4
861995    +          +    -0.06619591895459 * GRP_MntMeatProducts2
861996    +          +    -0.09072077897467 * GRP_MntMeatProducts3
861997    +          +      0.1726695423557 * GRP_MntMeatProducts4
861998    +          +    -0.28636541965058 * GRP_MntWines2  +    -0.02631953768864 *
861999    +        GRP_MntWines3  +     0.06980122973657 * GRP_MntWines4
862000    +          +     0.09645375616786 * GRP_NumCatalogPurchases3
862001    +          +    -0.41914184592159 * GRP_NumCatalogPurchases4
862002    +          +      0.1854692255158 * GRP_NumDistPurchases2
862003    +          +    -0.22330441571095 * GRP_NumDistPurchases3
862004    +          +     0.13028835056864 * GRP_NumDistPurchases4
862005    +          +    -0.16915625127212 * GRP_NumWebPurchases2
862006    +          +    -0.29991156671478 * GRP_NumWebPurchases3
862007    +          +     0.01989579721354 * GRP_NumWebPurchases4
862008    +          +    -0.12351517510664 * GRP_RFMstat2  +     0.41722412115996 *
862009    +        GRP_RFMstat3  +    -0.02210360437313 * GRP_RFMstat4
862010    +          +    -0.04201080178576 * GRP_RMntFrq2  +     0.21775390796319 *
862011    +        GRP_RMntFrq3  +     0.31823734284083 * GRP_RMntFrq4
862012    +          +    -0.53168026601605 * GRP_Recency2  +     -0.3287664545088 *
862013    +        GRP_Recency3  +     0.04505851470752 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.41081496203789 * GRP_AcceptedCmp52 + -0.47313297382337 * 
GRP_Frq2 + 0.19313816686029 * GRP_Frq3 + 0.41736322582944 * GRP_Frq4 + -0.28916219130566 * 
GRP_Income2 + 0.14505600514674 * GRP_Income3 + -0.04580645427966 * GRP_Income4 + 
-0.19949742172257 * GRP_Mnt2 + 0.27329529634974 * GRP_Mnt3 + 0.33404292971179 * GRP_Mnt4 + 
-0.37521460360102 * GRP_MntFishProducts2 + -0.14631724639492 * GRP_MntFishProducts3 + 
0.10002979979527 * GRP_MntFishProducts4 + -0.09816985850711 * GRP_MntGoldProds2 + 
-0.12203012318985 * GRP_MntGoldProds3 + -0.01815311012777 * GRP_MntGoldProds4 + 
-0.06619591895459 * GRP_MntMeatProducts2 + -0.09072077897467 * GRP_MntMeatProducts3 + 
0.1726695423557 * GRP_MntMeatProducts4 + -0.28636541965058 * GRP_MntWines2 + -0.02631953768864 
* GRP_MntWines3 + 0.06980122973657 * GRP_MntWines4 + 0.09645375616786 * 
GRP_NumCatalogPurchases3 + -0.41914184592159 * GRP_NumCatalogPurchases4 + 0.1854692255158 * 
GRP_NumDistPurchases2 + -0.22330441571095 * GRP_NumDistPurchases3 + 0.13028835056864 * 
GRP_NumDistPurchases4 + -0.16915625127212 * GRP_NumWebPurchases2 + -0.29991156671478 * 
GRP_NumWebPurchases3 + 0.01989579721354 * GRP_NumWebPurchases4 + -0.12351517510664 * 
GRP_RFMstat2 + 0.41722412115996 * GRP_RFMstat3 + -0.02210360437313 * GRP_RFMstat4 + 
-0.04201080178576 * GRP_RMntFrq2 + 0.21775390796319 * GRP_RMntFrq3 + 0.31823734284083 * 
GRP_RMntFrq4 + -0.53168026601605 * GRP_Recency2 + -0.3287664545088 * GRP_Recency3 + 
0.04505851470752 * GRP_Recency4 ;
862014    +   H15  = H15  +     0.13088214496598 * GRP_AcceptedCmp52
862015    +          +    -0.08389895441588 * GRP_Frq2  +     0.05379617788531 * GRP_Frq3
862016    +          +     0.05704464608157 * GRP_Frq4  +    -0.33954574127328 *
862017    +        GRP_Income2  +    -0.19537868529992 * GRP_Income3
862018    +          +     0.16339422960337 * GRP_Income4  +    -0.15103080606917 *
862019    +        GRP_Mnt2  +    -0.10359763066736 * GRP_Mnt3  +    -0.15169095818331 *
862020    +        GRP_Mnt4  +    -0.00757439653534 * GRP_MntFishProducts2
862021    +          +     0.03013301742801 * GRP_MntFishProducts3
862022    +          +     -0.0753778180106 * GRP_MntFishProducts4
862023    +          +     0.22882421007211 * GRP_MntGoldProds2
862024    +          +    -0.06369987000315 * GRP_MntGoldProds3
862025    +          +     0.09890582278559 * GRP_MntGoldProds4
862026    +          +    -0.21052640581149 * GRP_MntMeatProducts2
862027    +          +    -0.00867214697179 * GRP_MntMeatProducts3
862028    +          +     0.11929485476343 * GRP_MntMeatProducts4
862029    +          +    -0.18943631653077 * GRP_MntWines2  +     0.03539441492325 *
862030    +        GRP_MntWines3  +     0.30650819876628 * GRP_MntWines4
862031    +          +     0.06292612305453 * GRP_NumCatalogPurchases3
862032    +          +      0.2309036660938 * GRP_NumCatalogPurchases4
862033    +          +    -0.10062151440617 * GRP_NumDistPurchases2
862034    +          +       0.229091410456 * GRP_NumDistPurchases3
862035    +          +    -0.19729313017904 * GRP_NumDistPurchases4
862036    +          +    -0.04101710595215 * GRP_NumWebPurchases2
862037    +          +     0.13926341050039 * GRP_NumWebPurchases3
862038    +          +    -0.04443067825367 * GRP_NumWebPurchases4
862039    +          +     0.12014961650367 * GRP_RFMstat2  +     0.01617790323448 *
862040    +        GRP_RFMstat3  +     -0.1552934903319 * GRP_RFMstat4
862041    +          +    -0.04595909907677 * GRP_RMntFrq2  +    -0.44798863026137 *
862042    +        GRP_RMntFrq3  +     -0.0483895955721 * GRP_RMntFrq4
862043    +          +    -0.03768706422132 * GRP_Recency2  +    -0.02473503115913 *
862044    +        GRP_Recency3  +    -0.07674131244122 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.13088214496598 * GRP_AcceptedCmp52 + -0.08389895441588 * 
GRP_Frq2 + 0.05379617788531 * GRP_Frq3 + 0.05704464608157 * GRP_Frq4 + -0.33954574127328 * 
GRP_Income2 + -0.19537868529992 * GRP_Income3 + 0.16339422960337 * GRP_Income4 + 
-0.15103080606917 * GRP_Mnt2 + -0.10359763066736 * GRP_Mnt3 + -0.15169095818331 * GRP_Mnt4 + 
-0.00757439653534 * GRP_MntFishProducts2 + 0.03013301742801 * GRP_MntFishProducts3 + 
-0.0753778180106 * GRP_MntFishProducts4 + 0.22882421007211 * GRP_MntGoldProds2 + 
-0.06369987000315 * GRP_MntGoldProds3 + 0.09890582278559 * GRP_MntGoldProds4 + 
-0.21052640581149 * GRP_MntMeatProducts2 + -0.00867214697179 * GRP_MntMeatProducts3 + 
0.11929485476343 * GRP_MntMeatProducts4 + -0.18943631653077 * GRP_MntWines2 + 0.03539441492325 
* GRP_MntWines3 + 0.30650819876628 * GRP_MntWines4 + 0.06292612305453 * 
GRP_NumCatalogPurchases3 + 0.2309036660938 * GRP_NumCatalogPurchases4 + -0.10062151440617 * 
GRP_NumDistPurchases2 + 0.229091410456 * GRP_NumDistPurchases3 + -0.19729313017904 * 
GRP_NumDistPurchases4 + -0.04101710595215 * GRP_NumWebPurchases2 + 0.13926341050039 * 
GRP_NumWebPurchases3 + -0.04443067825367 * GRP_NumWebPurchases4 + 0.12014961650367 * 
GRP_RFMstat2 + 0.01617790323448 * GRP_RFMstat3 + -0.1552934903319 * GRP_RFMstat4 + 
-0.04595909907677 * GRP_RMntFrq2 + -0.44798863026137 * GRP_RMntFrq3 + -0.0483895955721 * 
GRP_RMntFrq4 + -0.03768706422132 * GRP_Recency2 + -0.02473503115913 * GRP_Recency3 + 
-0.07674131244122 * GRP_Recency4 ;
862045    +   H16  = H16  +     0.46251048250873 * GRP_AcceptedCmp52
862046    +          +    -0.00268856292377 * GRP_Frq2  +    -0.25660455566834 * GRP_Frq3
862047    +          +     0.00867022501651 * GRP_Frq4  +    -0.19509148919986 *
862048    +        GRP_Income2  +    -0.39761314772605 * GRP_Income3
862049    +          +     0.62767489359884 * GRP_Income4  +     0.12500076687539 *
862050    +        GRP_Mnt2  +    -0.21739986249936 * GRP_Mnt3  +     0.17941174570957 *
862051    +        GRP_Mnt4  +    -0.05655316560222 * GRP_MntFishProducts2
862052    +          +    -0.03224941225278 * GRP_MntFishProducts3
862053    +          +     0.12546380835809 * GRP_MntFishProducts4
862054    +          +     0.21690521778421 * GRP_MntGoldProds2
862055    +          +     0.09035550488812 * GRP_MntGoldProds3
862056    +          +    -0.03133919720822 * GRP_MntGoldProds4
862057    +          +     0.05188619692889 * GRP_MntMeatProducts2
862058    +          +    -0.04899714585321 * GRP_MntMeatProducts3
862059    +          +    -0.35752492237905 * GRP_MntMeatProducts4
862060    +          +    -0.08947041349478 * GRP_MntWines2  +      0.0265961489442 *
862061    +        GRP_MntWines3  +     0.09890393808772 * GRP_MntWines4
862062    +          +     0.45534320348836 * GRP_NumCatalogPurchases3
862063    +          +    -0.31950647452009 * GRP_NumCatalogPurchases4
862064    +          +     0.21080174299166 * GRP_NumDistPurchases2
862065    +          +     0.24874731231732 * GRP_NumDistPurchases3
862066    +          +    -0.01320035732018 * GRP_NumDistPurchases4
862067    +          +     0.17773116301115 * GRP_NumWebPurchases2
862068    +          +     0.13686106729498 * GRP_NumWebPurchases3
862069    +          +     -0.0690876840257 * GRP_NumWebPurchases4
862070    +          +     0.46273916902968 * GRP_RFMstat2  +     0.51267279380421 *
862071    +        GRP_RFMstat3  +     0.27205036954754 * GRP_RFMstat4
862072    +          +    -0.41192018310368 * GRP_RMntFrq2  +    -0.01025987166968 *
862073    +        GRP_RMntFrq3  +     0.08432669626242 * GRP_RMntFrq4
862074    +          +    -0.37569076006412 * GRP_Recency2  +    -0.09560087881071 *
862075    +        GRP_Recency3  +     0.15619501698904 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.46251048250873 * GRP_AcceptedCmp52 + -0.00268856292377 * 
GRP_Frq2 + -0.25660455566834 * GRP_Frq3 + 0.00867022501651 * GRP_Frq4 + -0.19509148919986 * 
GRP_Income2 + -0.39761314772605 * GRP_Income3 + 0.62767489359884 * GRP_Income4 + 
0.12500076687539 * GRP_Mnt2 + -0.21739986249936 * GRP_Mnt3 + 0.17941174570957 * GRP_Mnt4 + 
-0.05655316560222 * GRP_MntFishProducts2 + -0.03224941225278 * GRP_MntFishProducts3 + 
0.12546380835809 * GRP_MntFishProducts4 + 0.21690521778421 * GRP_MntGoldProds2 + 
0.09035550488812 * GRP_MntGoldProds3 + -0.03133919720822 * GRP_MntGoldProds4 + 
0.05188619692889 * GRP_MntMeatProducts2 + -0.04899714585321 * GRP_MntMeatProducts3 + 
-0.35752492237905 * GRP_MntMeatProducts4 + -0.08947041349478 * GRP_MntWines2 + 0.0265961489442 
* GRP_MntWines3 + 0.09890393808772 * GRP_MntWines4 + 0.45534320348836 * 
GRP_NumCatalogPurchases3 + -0.31950647452009 * GRP_NumCatalogPurchases4 + 0.21080174299166 * 
GRP_NumDistPurchases2 + 0.24874731231732 * GRP_NumDistPurchases3 + -0.01320035732018 * 
GRP_NumDistPurchases4 + 0.17773116301115 * GRP_NumWebPurchases2 + 0.13686106729498 * 
GRP_NumWebPurchases3 + -0.0690876840257 * GRP_NumWebPurchases4 + 0.46273916902968 * 
GRP_RFMstat2 + 0.51267279380421 * GRP_RFMstat3 + 0.27205036954754 * GRP_RFMstat4 + 
-0.41192018310368 * GRP_RMntFrq2 + -0.01025987166968 * GRP_RMntFrq3 + 0.08432669626242 * 
GRP_RMntFrq4 + -0.37569076006412 * GRP_Recency2 + -0.09560087881071 * GRP_Recency3 + 
0.15619501698904 * GRP_Recency4 ;
862076    +   H11  =     1.02277651695375 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.02277651695375 + H11 ;
862077    +   H12  =     0.30687404845149 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.30687404845149 + H12 ;
862078    +   H13  =     0.38396141006686 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.38396141006686 + H13 ;
862079    +   H14  =     0.66961227315774 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.66961227315774 + H14 ;
862080    +   H15  =     0.55149278706288 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.55149278706288 + H15 ;
862081    +   H16  =    -0.54938689657398 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.54938689657398 + H16 ;
862082    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
862083    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
862084    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
862085    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
862086    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
862087    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
862088    +END;
MPRINT(EM_DIAGRAM):   END;
862089    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
862090    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
862091    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
862092    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
862093    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
862094    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
862095    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
862096    +END;
MPRINT(EM_DIAGRAM):   END;
862097    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
862098    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
862099    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
862100    +
862101    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
862102    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
862103    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
862104    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
862105    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
862106    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
862107    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
862108    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
862109    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
862110    +end;
MPRINT(EM_DIAGRAM):   end;
862111    +else do;
MPRINT(EM_DIAGRAM):   else do;
862112    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
862113    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
862114    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
862115    +   end;
MPRINT(EM_DIAGRAM):   end;
862116    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
862117    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
862118    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
862119    +   end;
MPRINT(EM_DIAGRAM):   end;
862120    +   else do;
MPRINT(EM_DIAGRAM):   else do;
862121    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
862122    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
862123    +   end;
MPRINT(EM_DIAGRAM):   end;
862124    +end;
MPRINT(EM_DIAGRAM):   end;
862125    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
862126    +   P_DepVar1  =     1.19791571177519 * H11  +     1.91589058327051 * H12
862127    +          +     0.44556788800887 * H13  +    -1.25798187083564 * H14
862128    +          +    -0.40058942527791 * H15  +    -1.41542812613902 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.19791571177519 * H11 + 1.91589058327051 * H12 + 
0.44556788800887 * H13 + -1.25798187083564 * H14 + -0.40058942527791 * H15 + -1.41542812613902 
* H16 ;
862129    +   P_DepVar1  =    -2.68041503413101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.68041503413101 + P_DepVar1 ;
862130    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
862131    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
862132    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
862133    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
862134    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
862135    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
862136    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
862137    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
862138    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
862139    +END;
MPRINT(EM_DIAGRAM):   END;
862140    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
862141    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
862142    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
862143    +END;
MPRINT(EM_DIAGRAM):   END;
862144    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
862145    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
862146    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
862147    +END;
MPRINT(EM_DIAGRAM):   END;
862148    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
862149    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
862150    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
862151    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
862152    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
862153    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
862154    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
862155    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
862156    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
862157    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
862158    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
862159    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
862160    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
862161    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
862162    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
862163    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
862164    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
862165    +END;
MPRINT(EM_DIAGRAM):   END;
862166    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
862167    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
862168    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
862169    +drop
862170    +H11
862171    +H12
862172    +H13
862173    +H14
862174    +H15
862175    +H16
862176    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
862177    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
862178     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL23_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
862179     quit;
862180     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
862181     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
862182     * Neural23: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural23: Computing metadata for TRAIN data;
862183     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL23_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural23_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural23_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural23_TRAIN out=WORK.M0UKF2OF noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0UKF2OF;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0UKF2OF(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0UKF2OF;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0UKF2OF;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M34RPHEJ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M34RPHEJ;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M34RPHEJ;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2RL6HM5(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M34RPHEJ;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M34RPHEJ;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M34RPHEJ;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M34RPHEJ;
MPRINT(EMADVISECOLUMNS):   set WORK.M34RPHEJ;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural23";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural23";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural23: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
862495     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
862496     set EMWS8.Neural23_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_EMINFO;
862497     where DATA='Neural23' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural23' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
862498     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL23_EMINFO.
      WHERE (DATA='Neural23') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

862499     data EMWS8.Neural23_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural23_EMINFO;
862500     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
862501     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
862502     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL23_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
862506     run;
862507     data EMWS8.Neural23_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_EMINFO;
862508     set EMWS8.Neural23_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_EMINFO WORK.MODELTEMP_INFO;
862509     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL23_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL23_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

862510     proc sort data = EMWS8.Neural23_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural23_EMINFO NOTHREADS;
862511     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
862512     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL23_EMINFO.
NOTE: The data set EMWS8.NEURAL23_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

862513     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
862514     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
862515     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

862516     proc sort data = EMWS8.Neural23_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural23_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
862517     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
862518     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL23_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

862519     data EMWS8.Neural23_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_EMINFO;
862520     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
862521     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
862522     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL23_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

862523     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
862524     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
862525     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
862526     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL23_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.NEURAL23_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
