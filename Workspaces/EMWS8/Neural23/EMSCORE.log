MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "12.29 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                12.29 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0EPQKGH 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0EPQKGH new;
MPRINT(EM_DIAGRAM):   run;
463328     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
463329     set EMWS8.Neural23_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_OUTKEY;
463330     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
463331     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 58 observations read from the data set EMWS8.NEURAL23_OUTKEY.
NOTE: The data set WORK.OUTKEY has 6 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

463332     filename emflow
463332   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural23: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
463333     *------------------------------------------------------------*;
463334     * Neural23: Scoring DATA data;
463335     *------------------------------------------------------------*;
463336     data EMWS8.Neural23_TRAIN
463337     / view=EMWS8.Neural23_TRAIN
463338     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_TRAIN / view=EMWS8.Neural23_TRAIN ;
463339     set EMWS8.BINNING_TRAIN
463340     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN ;
463341     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas.
463342    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
463343    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
463344    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
463345    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
463346    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
463347    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
463348    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
463349    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
463350    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
463351    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
463352    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
463353    +LENGTH _WARN_ $4
463354    +      F_DepVar  $ 12
463355    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
463356    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
463357    +
463358    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
463359    +
463360    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
463361    +
463362    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
463363    +
463364    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
463365    +
463366    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
463367    +
463368    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
463369    +
463370    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
463371    +
463372    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
463373    +
463374    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
463375    +
463376    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
463377    +
463378    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
463379    +
463380    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
463381    +
463382    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
463383    +
463384    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
463385    +
463386    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
463387    +
463388    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
463389    +
463390    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
463391    +
463392    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
463393    +
463394    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
463395    +
463396    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
463397    +
463398    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
463399    +
463400    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
463401    +
463402    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
463403    +
463404    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
463405    +
463406    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
463407    +
463408    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
463409    +
463410    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
463411    +
463412    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
463413    +
463414    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
463415    +
463416    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
463417    +
463418    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
463419    +
463420    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
463421    +
463422    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
463423    +
463424    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
463425    +
463426    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
463427    +
463428    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
463429    +
463430    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
463431    +
463432    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
463433    +
463434    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
463435    +
463436    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
463437    +
463438    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
463439    +
463440    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
463441    +
463442    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
463443    +
463444    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
463445    +
463446    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
463447    +
463448    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
463449    +
463450    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
463451    +
463452    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
463453    +
463454    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
463455    +
463456    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
463457    +
463458    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
463459    +
463460    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
463461    +
463462    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
463463    +
463464    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
463465    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
463466    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
463467    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
463468    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
463469    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463470    +end;
MPRINT(EM_DIAGRAM):   end;
463471    +else do;
MPRINT(EM_DIAGRAM):   else do;
463472    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
463473    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
463474    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
463475    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
463476    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
463477    +   end;
MPRINT(EM_DIAGRAM):   end;
463478    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
463479    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
463480    +   end;
MPRINT(EM_DIAGRAM):   end;
463481    +   else do;
MPRINT(EM_DIAGRAM):   else do;
463482    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
463483    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
463484    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463485    +   end;
MPRINT(EM_DIAGRAM):   end;
463486    +end;
MPRINT(EM_DIAGRAM):   end;
463487    +
463488    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
463489    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
463490    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
463491    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
463492    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
463493    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
463494    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
463495    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463496    +end;
MPRINT(EM_DIAGRAM):   end;
463497    +else do;
MPRINT(EM_DIAGRAM):   else do;
463498    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
463499    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
463500    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
463501    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
463502    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
463503    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
463504    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
463505    +   end;
MPRINT(EM_DIAGRAM):   end;
463506    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
463507    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
463508    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
463509    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
463510    +   end;
MPRINT(EM_DIAGRAM):   end;
463511    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
463512    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
463513    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
463514    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
463515    +   end;
MPRINT(EM_DIAGRAM):   end;
463516    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
463517    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
463518    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
463519    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
463520    +   end;
MPRINT(EM_DIAGRAM):   end;
463521    +   else do;
MPRINT(EM_DIAGRAM):   else do;
463522    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
463523    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
463524    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
463525    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
463526    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463527    +   end;
MPRINT(EM_DIAGRAM):   end;
463528    +end;
MPRINT(EM_DIAGRAM):   end;
463529    +
463530    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
463531    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
463532    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
463533    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
463534    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
463535    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
463536    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
463537    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463538    +end;
MPRINT(EM_DIAGRAM):   end;
463539    +else do;
MPRINT(EM_DIAGRAM):   else do;
463540    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
463541    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
463542    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
463543    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
463544    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
463545    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
463546    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
463547    +   end;
MPRINT(EM_DIAGRAM):   end;
463548    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
463549    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
463550    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
463551    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
463552    +   end;
MPRINT(EM_DIAGRAM):   end;
463553    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
463554    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
463555    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
463556    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
463557    +   end;
MPRINT(EM_DIAGRAM):   end;
463558    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
463559    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
463560    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
463561    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
463562    +   end;
MPRINT(EM_DIAGRAM):   end;
463563    +   else do;
MPRINT(EM_DIAGRAM):   else do;
463564    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
463565    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
463566    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
463567    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
463568    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463569    +   end;
MPRINT(EM_DIAGRAM):   end;
463570    +end;
MPRINT(EM_DIAGRAM):   end;
463571    +
463572    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
463573    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
463574    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
463575    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
463576    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
463577    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
463578    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
463579    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463580    +end;
MPRINT(EM_DIAGRAM):   end;
463581    +else do;
MPRINT(EM_DIAGRAM):   else do;
463582    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
463583    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
463584    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
463585    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
463586    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
463587    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
463588    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
463589    +   end;
MPRINT(EM_DIAGRAM):   end;
463590    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
463591    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
463592    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
463593    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
463594    +   end;
MPRINT(EM_DIAGRAM):   end;
463595    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
463596    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
463597    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
463598    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
463599    +   end;
MPRINT(EM_DIAGRAM):   end;
463600    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
463601    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
463602    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
463603    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
463604    +   end;
MPRINT(EM_DIAGRAM):   end;
463605    +   else do;
MPRINT(EM_DIAGRAM):   else do;
463606    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
463607    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
463608    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
463609    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
463610    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463611    +   end;
MPRINT(EM_DIAGRAM):   end;
463612    +end;
MPRINT(EM_DIAGRAM):   end;
463613    +
463614    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
463615    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
463616    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
463617    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
463618    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
463619    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
463620    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
463621    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463622    +end;
MPRINT(EM_DIAGRAM):   end;
463623    +else do;
MPRINT(EM_DIAGRAM):   else do;
463624    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
463625    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
463626    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
463627    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
463628    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
463629    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
463630    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
463631    +   end;
MPRINT(EM_DIAGRAM):   end;
463632    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
463633    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
463634    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
463635    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
463636    +   end;
MPRINT(EM_DIAGRAM):   end;
463637    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
463638    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
463639    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
463640    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
463641    +   end;
MPRINT(EM_DIAGRAM):   end;
463642    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
463643    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
463644    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
463645    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
463646    +   end;
MPRINT(EM_DIAGRAM):   end;
463647    +   else do;
MPRINT(EM_DIAGRAM):   else do;
463648    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
463649    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
463650    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
463651    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
463652    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463653    +   end;
MPRINT(EM_DIAGRAM):   end;
463654    +end;
MPRINT(EM_DIAGRAM):   end;
463655    +
463656    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
463657    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
463658    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
463659    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
463660    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
463661    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
463662    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
463663    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463664    +end;
MPRINT(EM_DIAGRAM):   end;
463665    +else do;
MPRINT(EM_DIAGRAM):   else do;
463666    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
463667    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
463668    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
463669    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
463670    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
463671    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
463672    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
463673    +   end;
MPRINT(EM_DIAGRAM):   end;
463674    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
463675    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
463676    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
463677    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
463678    +   end;
MPRINT(EM_DIAGRAM):   end;
463679    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
463680    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
463681    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
463682    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
463683    +   end;
MPRINT(EM_DIAGRAM):   end;
463684    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
463685    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
463686    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
463687    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
463688    +   end;
MPRINT(EM_DIAGRAM):   end;
463689    +   else do;
MPRINT(EM_DIAGRAM):   else do;
463690    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
463691    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
463692    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
463693    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
463694    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463695    +   end;
MPRINT(EM_DIAGRAM):   end;
463696    +end;
MPRINT(EM_DIAGRAM):   end;
463697    +
463698    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
463699    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
463700    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
463701    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
463702    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
463703    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
463704    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
463705    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463706    +end;
MPRINT(EM_DIAGRAM):   end;
463707    +else do;
MPRINT(EM_DIAGRAM):   else do;
463708    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
463709    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
463710    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
463711    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
463712    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
463713    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
463714    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
463715    +   end;
MPRINT(EM_DIAGRAM):   end;
463716    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
463717    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
463718    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
463719    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
463720    +   end;
MPRINT(EM_DIAGRAM):   end;
463721    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
463722    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
463723    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
463724    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
463725    +   end;
MPRINT(EM_DIAGRAM):   end;
463726    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
463727    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
463728    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
463729    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
463730    +   end;
MPRINT(EM_DIAGRAM):   end;
463731    +   else do;
MPRINT(EM_DIAGRAM):   else do;
463732    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
463733    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
463734    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
463735    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
463736    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463737    +   end;
MPRINT(EM_DIAGRAM):   end;
463738    +end;
MPRINT(EM_DIAGRAM):   end;
463739    +
463740    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
463741    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
463742    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
463743    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
463744    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
463745    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
463746    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
463747    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463748    +end;
MPRINT(EM_DIAGRAM):   end;
463749    +else do;
MPRINT(EM_DIAGRAM):   else do;
463750    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
463751    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
463752    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
463753    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
463754    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
463755    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
463756    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
463757    +   end;
MPRINT(EM_DIAGRAM):   end;
463758    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
463759    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
463760    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
463761    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
463762    +   end;
MPRINT(EM_DIAGRAM):   end;
463763    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
463764    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
463765    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
463766    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
463767    +   end;
MPRINT(EM_DIAGRAM):   end;
463768    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
463769    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
463770    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
463771    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
463772    +   end;
MPRINT(EM_DIAGRAM):   end;
463773    +   else do;
MPRINT(EM_DIAGRAM):   else do;
463774    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
463775    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
463776    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
463777    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
463778    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463779    +   end;
MPRINT(EM_DIAGRAM):   end;
463780    +end;
MPRINT(EM_DIAGRAM):   end;
463781    +
463782    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
463783    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
463784    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
463785    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
463786    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
463787    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
463788    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463789    +end;
MPRINT(EM_DIAGRAM):   end;
463790    +else do;
MPRINT(EM_DIAGRAM):   else do;
463791    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
463792    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
463793    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
463794    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
463795    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
463796    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
463797    +   end;
MPRINT(EM_DIAGRAM):   end;
463798    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
463799    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
463800    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
463801    +   end;
MPRINT(EM_DIAGRAM):   end;
463802    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
463803    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
463804    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
463805    +   end;
MPRINT(EM_DIAGRAM):   end;
463806    +   else do;
MPRINT(EM_DIAGRAM):   else do;
463807    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
463808    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
463809    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
463810    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463811    +   end;
MPRINT(EM_DIAGRAM):   end;
463812    +end;
MPRINT(EM_DIAGRAM):   end;
463813    +
463814    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
463815    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
463816    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
463817    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
463818    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
463819    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
463820    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
463821    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463822    +end;
MPRINT(EM_DIAGRAM):   end;
463823    +else do;
MPRINT(EM_DIAGRAM):   else do;
463824    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
463825    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
463826    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
463827    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
463828    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
463829    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
463830    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
463831    +   end;
MPRINT(EM_DIAGRAM):   end;
463832    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
463833    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
463834    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
463835    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
463836    +   end;
MPRINT(EM_DIAGRAM):   end;
463837    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
463838    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
463839    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
463840    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
463841    +   end;
MPRINT(EM_DIAGRAM):   end;
463842    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
463843    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
463844    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
463845    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
463846    +   end;
MPRINT(EM_DIAGRAM):   end;
463847    +   else do;
MPRINT(EM_DIAGRAM):   else do;
463848    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
463849    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
463850    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
463851    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
463852    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463853    +   end;
MPRINT(EM_DIAGRAM):   end;
463854    +end;
MPRINT(EM_DIAGRAM):   end;
463855    +
463856    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
463857    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
463858    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
463859    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
463860    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
463861    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
463862    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
463863    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463864    +end;
MPRINT(EM_DIAGRAM):   end;
463865    +else do;
MPRINT(EM_DIAGRAM):   else do;
463866    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
463867    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
463868    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
463869    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
463870    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
463871    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
463872    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
463873    +   end;
MPRINT(EM_DIAGRAM):   end;
463874    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
463875    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
463876    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
463877    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
463878    +   end;
MPRINT(EM_DIAGRAM):   end;
463879    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
463880    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
463881    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
463882    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
463883    +   end;
MPRINT(EM_DIAGRAM):   end;
463884    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
463885    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
463886    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
463887    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
463888    +   end;
MPRINT(EM_DIAGRAM):   end;
463889    +   else do;
MPRINT(EM_DIAGRAM):   else do;
463890    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
463891    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
463892    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
463893    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
463894    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463895    +   end;
MPRINT(EM_DIAGRAM):   end;
463896    +end;
MPRINT(EM_DIAGRAM):   end;
463897    +
463898    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
463899    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
463900    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
463901    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
463902    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
463903    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
463904    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
463905    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463906    +end;
MPRINT(EM_DIAGRAM):   end;
463907    +else do;
MPRINT(EM_DIAGRAM):   else do;
463908    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
463909    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
463910    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
463911    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
463912    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
463913    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
463914    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
463915    +   end;
MPRINT(EM_DIAGRAM):   end;
463916    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
463917    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
463918    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
463919    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
463920    +   end;
MPRINT(EM_DIAGRAM):   end;
463921    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
463922    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
463923    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
463924    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
463925    +   end;
MPRINT(EM_DIAGRAM):   end;
463926    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
463927    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
463928    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
463929    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
463930    +   end;
MPRINT(EM_DIAGRAM):   end;
463931    +   else do;
MPRINT(EM_DIAGRAM):   else do;
463932    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
463933    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
463934    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
463935    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
463936    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463937    +   end;
MPRINT(EM_DIAGRAM):   end;
463938    +end;
MPRINT(EM_DIAGRAM):   end;
463939    +
463940    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
463941    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
463942    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
463943    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
463944    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
463945    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
463946    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
463947    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463948    +end;
MPRINT(EM_DIAGRAM):   end;
463949    +else do;
MPRINT(EM_DIAGRAM):   else do;
463950    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
463951    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
463952    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
463953    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
463954    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
463955    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
463956    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
463957    +   end;
MPRINT(EM_DIAGRAM):   end;
463958    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
463959    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
463960    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
463961    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
463962    +   end;
MPRINT(EM_DIAGRAM):   end;
463963    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
463964    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
463965    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
463966    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
463967    +   end;
MPRINT(EM_DIAGRAM):   end;
463968    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
463969    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
463970    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
463971    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
463972    +   end;
MPRINT(EM_DIAGRAM):   end;
463973    +   else do;
MPRINT(EM_DIAGRAM):   else do;
463974    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
463975    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
463976    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
463977    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
463978    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463979    +   end;
MPRINT(EM_DIAGRAM):   end;
463980    +end;
MPRINT(EM_DIAGRAM):   end;
463981    +
463982    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
463983    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
463984    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
463985    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
463986    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
463987    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
463988    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
463989    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
463990    +end;
MPRINT(EM_DIAGRAM):   end;
463991    +else do;
MPRINT(EM_DIAGRAM):   else do;
463992    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
463993    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
463994    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
463995    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
463996    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
463997    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
463998    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
463999    +   end;
MPRINT(EM_DIAGRAM):   end;
464000    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
464001    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
464002    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
464003    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
464004    +   end;
MPRINT(EM_DIAGRAM):   end;
464005    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
464006    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
464007    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
464008    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
464009    +   end;
MPRINT(EM_DIAGRAM):   end;
464010    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
464011    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
464012    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
464013    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
464014    +   end;
MPRINT(EM_DIAGRAM):   end;
464015    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464016    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
464017    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
464018    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
464019    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464020    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464021    +   end;
MPRINT(EM_DIAGRAM):   end;
464022    +end;
MPRINT(EM_DIAGRAM):   end;
464023    +
464024    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464025    +*** Checking missing input Interval
464026    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
464027    +
464028    +IF NMISS(
464029    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
464030    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
464031    +
464032    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464033    +END;
MPRINT(EM_DIAGRAM):   END;
464034    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464035    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
464036    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464037    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
464038    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
464039    +END;
MPRINT(EM_DIAGRAM):   END;
464040    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
464041    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
464042    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
464043    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
464044    +END;
MPRINT(EM_DIAGRAM):   END;
464045    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464046    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
464047    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464048    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464049    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
464050    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464051    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
464052    +   H11  =     0.25397263809886 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.25397263809886 * S_Year_Birth ;
464053    +   H12  =     0.05075762370892 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.05075762370892 * S_Year_Birth ;
464054    +   H13  =     0.04360472272597 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.04360472272597 * S_Year_Birth ;
464055    +   H14  =     0.01387196819865 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.01387196819865 * S_Year_Birth ;
464056    +   H15  =     0.05734148733166 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 0.05734148733166 * S_Year_Birth ;
464057    +   H16  =     0.07449261080848 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = 0.07449261080848 * S_Year_Birth ;
464058    +   H11  = H11  +    -0.13483168537737 * GRP_AcceptedCmp52
464059    +          +     0.02321007103238 * GRP_Frq2  +      0.2993754491201 * GRP_Frq3
464060    +          +     0.03188619345426 * GRP_Frq4  +     0.23837524440518 *
464061    +        GRP_Income2  +    -0.02988101686846 * GRP_Income3
464062    +          +    -0.04314945794282 * GRP_Income4  +      0.0797760707666 *
464063    +        GRP_Mnt2  +    -0.02272798443967 * GRP_Mnt3  +    -0.37386810467628 *
464064    +        GRP_Mnt4  +      0.0916244532169 * GRP_MntFishProducts2
464065    +          +    -0.08991361976323 * GRP_MntFishProducts3
464066    +          +    -0.12439533124432 * GRP_MntFishProducts4
464067    +          +    -0.38906628986229 * GRP_MntGoldProds2
464068    +          +     0.02112411721097 * GRP_MntGoldProds3
464069    +          +     0.05560214439156 * GRP_MntGoldProds4
464070    +          +     0.07558086835487 * GRP_MntMeatProducts2
464071    +          +    -0.24998452825562 * GRP_MntMeatProducts3
464072    +          +    -0.11030888417179 * GRP_MntMeatProducts4
464073    +          +     0.13229832861513 * GRP_MntWines2  +     0.50793143142609 *
464074    +        GRP_MntWines3  +    -0.26273353961061 * GRP_MntWines4
464075    +          +    -0.02587175944603 * GRP_NumCatalogPurchases3
464076    +          +    -0.07172373139956 * GRP_NumCatalogPurchases4
464077    +          +    -0.26905740590447 * GRP_NumDistPurchases2
464078    +          +     0.06889154687101 * GRP_NumDistPurchases3
464079    +          +    -0.31591167055503 * GRP_NumDistPurchases4
464080    +          +    -0.26862765566252 * GRP_NumWebPurchases2
464081    +          +     0.01579611280005 * GRP_NumWebPurchases3
464082    +          +    -0.06884702149074 * GRP_NumWebPurchases4
464083    +          +     0.19400469320488 * GRP_RFMstat2  +     0.32533875784776 *
464084    +        GRP_RFMstat3  +    -0.13730222015702 * GRP_RFMstat4
464085    +          +    -0.21360134050893 * GRP_RMntFrq2  +     0.10280382689873 *
464086    +        GRP_RMntFrq3  +    -0.16238020658392 * GRP_RMntFrq4
464087    +          +     0.38795494894841 * GRP_Recency2  +    -0.18447788823185 *
464088    +        GRP_Recency3  +    -0.44523742460939 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.13483168537737 * GRP_AcceptedCmp52 + 0.02321007103238 * 
GRP_Frq2 + 0.2993754491201 * GRP_Frq3 + 0.03188619345426 * GRP_Frq4 + 0.23837524440518 * 
GRP_Income2 + -0.02988101686846 * GRP_Income3 + -0.04314945794282 * GRP_Income4 + 
0.0797760707666 * GRP_Mnt2 + -0.02272798443967 * GRP_Mnt3 + -0.37386810467628 * GRP_Mnt4 + 
0.0916244532169 * GRP_MntFishProducts2 + -0.08991361976323 * GRP_MntFishProducts3 + 
-0.12439533124432 * GRP_MntFishProducts4 + -0.38906628986229 * GRP_MntGoldProds2 + 
0.02112411721097 * GRP_MntGoldProds3 + 0.05560214439156 * GRP_MntGoldProds4 + 0.07558086835487 
* GRP_MntMeatProducts2 + -0.24998452825562 * GRP_MntMeatProducts3 + -0.11030888417179 * 
GRP_MntMeatProducts4 + 0.13229832861513 * GRP_MntWines2 + 0.50793143142609 * GRP_MntWines3 + 
-0.26273353961061 * GRP_MntWines4 + -0.02587175944603 * GRP_NumCatalogPurchases3 + 
-0.07172373139956 * GRP_NumCatalogPurchases4 + -0.26905740590447 * GRP_NumDistPurchases2 + 
0.06889154687101 * GRP_NumDistPurchases3 + -0.31591167055503 * GRP_NumDistPurchases4 + 
-0.26862765566252 * GRP_NumWebPurchases2 + 0.01579611280005 * GRP_NumWebPurchases3 + 
-0.06884702149074 * GRP_NumWebPurchases4 + 0.19400469320488 * GRP_RFMstat2 + 0.32533875784776 
* GRP_RFMstat3 + -0.13730222015702 * GRP_RFMstat4 + -0.21360134050893 * GRP_RMntFrq2 + 
0.10280382689873 * GRP_RMntFrq3 + -0.16238020658392 * GRP_RMntFrq4 + 0.38795494894841 * 
GRP_Recency2 + -0.18447788823185 * GRP_Recency3 + -0.44523742460939 * GRP_Recency4 ;
464089    +   H12  = H12  +    -0.44240901099215 * GRP_AcceptedCmp52
464090    +          +     0.35451936529374 * GRP_Frq2  +     0.01466130191686 * GRP_Frq3
464091    +          +     0.21356077566978 * GRP_Frq4  +     0.22887565933637 *
464092    +        GRP_Income2  +     0.28123841156129 * GRP_Income3
464093    +          +    -0.30634832652689 * GRP_Income4  +     0.06733141985754 *
464094    +        GRP_Mnt2  +     0.24901181590062 * GRP_Mnt3  +     0.23926240883217 *
464095    +        GRP_Mnt4  +     0.36878256431394 * GRP_MntFishProducts2
464096    +          +    -0.03033118293022 * GRP_MntFishProducts3
464097    +          +     0.12939247483371 * GRP_MntFishProducts4
464098    +          +     -0.1948739109476 * GRP_MntGoldProds2
464099    +          +    -0.02487689041808 * GRP_MntGoldProds3
464100    +          +      0.0424854445517 * GRP_MntGoldProds4
464101    +          +    -0.77110165164491 * GRP_MntMeatProducts2
464102    +          +    -0.04188692453988 * GRP_MntMeatProducts3
464103    +          +     0.16117883521584 * GRP_MntMeatProducts4
464104    +          +     0.26607076588839 * GRP_MntWines2  +     0.08155165225431 *
464105    +        GRP_MntWines3  +     0.05320347913397 * GRP_MntWines4
464106    +          +    -0.60136669330804 * GRP_NumCatalogPurchases3
464107    +          +    -0.32571087796929 * GRP_NumCatalogPurchases4
464108    +          +    -0.82361130213661 * GRP_NumDistPurchases2
464109    +          +     0.18332361990877 * GRP_NumDistPurchases3
464110    +          +    -0.10228504756385 * GRP_NumDistPurchases4
464111    +          +     0.21492204339132 * GRP_NumWebPurchases2
464112    +          +     0.22752835090931 * GRP_NumWebPurchases3
464113    +          +    -0.04291366517536 * GRP_NumWebPurchases4
464114    +          +     -0.1860476520082 * GRP_RFMstat2  +      0.2676074141222 *
464115    +        GRP_RFMstat3  +     0.25111332591837 * GRP_RFMstat4
464116    +          +    -0.16694407619317 * GRP_RMntFrq2  +     0.21748370383635 *
464117    +        GRP_RMntFrq3  +    -0.33247097178921 * GRP_RMntFrq4
464118    +          +     0.96302825639489 * GRP_Recency2  +     0.29783943122668 *
464119    +        GRP_Recency3  +    -0.18073280365547 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.44240901099215 * GRP_AcceptedCmp52 + 0.35451936529374 * 
GRP_Frq2 + 0.01466130191686 * GRP_Frq3 + 0.21356077566978 * GRP_Frq4 + 0.22887565933637 * 
GRP_Income2 + 0.28123841156129 * GRP_Income3 + -0.30634832652689 * GRP_Income4 + 
0.06733141985754 * GRP_Mnt2 + 0.24901181590062 * GRP_Mnt3 + 0.23926240883217 * GRP_Mnt4 + 
0.36878256431394 * GRP_MntFishProducts2 + -0.03033118293022 * GRP_MntFishProducts3 + 
0.12939247483371 * GRP_MntFishProducts4 + -0.1948739109476 * GRP_MntGoldProds2 + 
-0.02487689041808 * GRP_MntGoldProds3 + 0.0424854445517 * GRP_MntGoldProds4 + 
-0.77110165164491 * GRP_MntMeatProducts2 + -0.04188692453988 * GRP_MntMeatProducts3 + 
0.16117883521584 * GRP_MntMeatProducts4 + 0.26607076588839 * GRP_MntWines2 + 0.08155165225431 
* GRP_MntWines3 + 0.05320347913397 * GRP_MntWines4 + -0.60136669330804 * 
GRP_NumCatalogPurchases3 + -0.32571087796929 * GRP_NumCatalogPurchases4 + -0.82361130213661 * 
GRP_NumDistPurchases2 + 0.18332361990877 * GRP_NumDistPurchases3 + -0.10228504756385 * 
GRP_NumDistPurchases4 + 0.21492204339132 * GRP_NumWebPurchases2 + 0.22752835090931 * 
GRP_NumWebPurchases3 + -0.04291366517536 * GRP_NumWebPurchases4 + -0.1860476520082 * 
GRP_RFMstat2 + 0.2676074141222 * GRP_RFMstat3 + 0.25111332591837 * GRP_RFMstat4 + 
-0.16694407619317 * GRP_RMntFrq2 + 0.21748370383635 * GRP_RMntFrq3 + -0.33247097178921 * 
GRP_RMntFrq4 + 0.96302825639489 * GRP_Recency2 + 0.29783943122668 * GRP_Recency3 + 
-0.18073280365547 * GRP_Recency4 ;
464120    +   H13  = H13  +     0.02391312263521 * GRP_AcceptedCmp52
464121    +          +    -0.01218158666492 * GRP_Frq2  +     0.03493150543946 * GRP_Frq3
464122    +          +    -0.19640223643897 * GRP_Frq4  +    -0.02394476100786 *
464123    +        GRP_Income2  +     0.05107107029363 * GRP_Income3
464124    +          +    -0.26596751360911 * GRP_Income4  +    -0.02628350983207 *
464125    +        GRP_Mnt2  +    -0.08273234777804 * GRP_Mnt3  +      0.2039544161917 *
464126    +        GRP_Mnt4  +     0.19888587009926 * GRP_MntFishProducts2
464127    +          +    -0.12190385526661 * GRP_MntFishProducts3
464128    +          +     0.11161376295027 * GRP_MntFishProducts4
464129    +          +     0.09536549249994 * GRP_MntGoldProds2
464130    +          +    -0.39027188388377 * GRP_MntGoldProds3
464131    +          +    -0.26960120596574 * GRP_MntGoldProds4
464132    +          +    -0.29704810464482 * GRP_MntMeatProducts2
464133    +          +    -0.17523279359181 * GRP_MntMeatProducts3
464134    +          +     0.01169006509688 * GRP_MntMeatProducts4
464135    +          +    -0.03150424899485 * GRP_MntWines2  +    -0.18135684744581 *
464136    +        GRP_MntWines3  +    -0.22282316044351 * GRP_MntWines4
464137    +          +    -0.06575154068738 * GRP_NumCatalogPurchases3
464138    +          +     0.12535793167638 * GRP_NumCatalogPurchases4
464139    +          +     0.10187760390092 * GRP_NumDistPurchases2
464140    +          +    -0.25409837313865 * GRP_NumDistPurchases3
464141    +          +    -0.28689980992526 * GRP_NumDistPurchases4
464142    +          +     0.00005909057861 * GRP_NumWebPurchases2
464143    +          +    -0.14419000341563 * GRP_NumWebPurchases3
464144    +          +     0.09095003593529 * GRP_NumWebPurchases4
464145    +          +    -0.02794941494222 * GRP_RFMstat2  +    -0.08735126371613 *
464146    +        GRP_RFMstat3  +      0.0136997814979 * GRP_RFMstat4
464147    +          +    -0.02686274413645 * GRP_RMntFrq2  +    -0.13529202759766 *
464148    +        GRP_RMntFrq3  +     0.22088337575055 * GRP_RMntFrq4
464149    +          +      0.2635440865684 * GRP_Recency2  +     0.12547691494271 *
464150    +        GRP_Recency3  +    -0.10311689817468 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02391312263521 * GRP_AcceptedCmp52 + -0.01218158666492 * 
GRP_Frq2 + 0.03493150543946 * GRP_Frq3 + -0.19640223643897 * GRP_Frq4 + -0.02394476100786 * 
GRP_Income2 + 0.05107107029363 * GRP_Income3 + -0.26596751360911 * GRP_Income4 + 
-0.02628350983207 * GRP_Mnt2 + -0.08273234777804 * GRP_Mnt3 + 0.2039544161917 * GRP_Mnt4 + 
0.19888587009926 * GRP_MntFishProducts2 + -0.12190385526661 * GRP_MntFishProducts3 + 
0.11161376295027 * GRP_MntFishProducts4 + 0.09536549249994 * GRP_MntGoldProds2 + 
-0.39027188388377 * GRP_MntGoldProds3 + -0.26960120596574 * GRP_MntGoldProds4 + 
-0.29704810464482 * GRP_MntMeatProducts2 + -0.17523279359181 * GRP_MntMeatProducts3 + 
0.01169006509688 * GRP_MntMeatProducts4 + -0.03150424899485 * GRP_MntWines2 + 
-0.18135684744581 * GRP_MntWines3 + -0.22282316044351 * GRP_MntWines4 + -0.06575154068738 * 
GRP_NumCatalogPurchases3 + 0.12535793167638 * GRP_NumCatalogPurchases4 + 0.10187760390092 * 
GRP_NumDistPurchases2 + -0.25409837313865 * GRP_NumDistPurchases3 + -0.28689980992526 * 
GRP_NumDistPurchases4 + 0.00005909057861 * GRP_NumWebPurchases2 + -0.14419000341563 * 
GRP_NumWebPurchases3 + 0.09095003593529 * GRP_NumWebPurchases4 + -0.02794941494222 * 
GRP_RFMstat2 + -0.08735126371613 * GRP_RFMstat3 + 0.0136997814979 * GRP_RFMstat4 + 
-0.02686274413645 * GRP_RMntFrq2 + -0.13529202759766 * GRP_RMntFrq3 + 0.22088337575055 * 
GRP_RMntFrq4 + 0.2635440865684 * GRP_Recency2 + 0.12547691494271 * GRP_Recency3 + 
-0.10311689817468 * GRP_Recency4 ;
464151    +   H14  = H14  +     0.41081496203789 * GRP_AcceptedCmp52
464152    +          +    -0.47313297382337 * GRP_Frq2  +     0.19313816686029 * GRP_Frq3
464153    +          +     0.41736322582944 * GRP_Frq4  +    -0.28916219130566 *
464154    +        GRP_Income2  +     0.14505600514674 * GRP_Income3
464155    +          +    -0.04580645427966 * GRP_Income4  +    -0.19949742172257 *
464156    +        GRP_Mnt2  +     0.27329529634974 * GRP_Mnt3  +     0.33404292971179 *
464157    +        GRP_Mnt4  +    -0.37521460360102 * GRP_MntFishProducts2
464158    +          +    -0.14631724639492 * GRP_MntFishProducts3
464159    +          +     0.10002979979527 * GRP_MntFishProducts4
464160    +          +    -0.09816985850711 * GRP_MntGoldProds2
464161    +          +    -0.12203012318985 * GRP_MntGoldProds3
464162    +          +    -0.01815311012777 * GRP_MntGoldProds4
464163    +          +    -0.06619591895459 * GRP_MntMeatProducts2
464164    +          +    -0.09072077897467 * GRP_MntMeatProducts3
464165    +          +      0.1726695423557 * GRP_MntMeatProducts4
464166    +          +    -0.28636541965058 * GRP_MntWines2  +    -0.02631953768864 *
464167    +        GRP_MntWines3  +     0.06980122973657 * GRP_MntWines4
464168    +          +     0.09645375616786 * GRP_NumCatalogPurchases3
464169    +          +    -0.41914184592159 * GRP_NumCatalogPurchases4
464170    +          +      0.1854692255158 * GRP_NumDistPurchases2
464171    +          +    -0.22330441571095 * GRP_NumDistPurchases3
464172    +          +     0.13028835056864 * GRP_NumDistPurchases4
464173    +          +    -0.16915625127212 * GRP_NumWebPurchases2
464174    +          +    -0.29991156671478 * GRP_NumWebPurchases3
464175    +          +     0.01989579721354 * GRP_NumWebPurchases4
464176    +          +    -0.12351517510664 * GRP_RFMstat2  +     0.41722412115996 *
464177    +        GRP_RFMstat3  +    -0.02210360437313 * GRP_RFMstat4
464178    +          +    -0.04201080178576 * GRP_RMntFrq2  +     0.21775390796319 *
464179    +        GRP_RMntFrq3  +     0.31823734284083 * GRP_RMntFrq4
464180    +          +    -0.53168026601605 * GRP_Recency2  +     -0.3287664545088 *
464181    +        GRP_Recency3  +     0.04505851470752 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.41081496203789 * GRP_AcceptedCmp52 + -0.47313297382337 * 
GRP_Frq2 + 0.19313816686029 * GRP_Frq3 + 0.41736322582944 * GRP_Frq4 + -0.28916219130566 * 
GRP_Income2 + 0.14505600514674 * GRP_Income3 + -0.04580645427966 * GRP_Income4 + 
-0.19949742172257 * GRP_Mnt2 + 0.27329529634974 * GRP_Mnt3 + 0.33404292971179 * GRP_Mnt4 + 
-0.37521460360102 * GRP_MntFishProducts2 + -0.14631724639492 * GRP_MntFishProducts3 + 
0.10002979979527 * GRP_MntFishProducts4 + -0.09816985850711 * GRP_MntGoldProds2 + 
-0.12203012318985 * GRP_MntGoldProds3 + -0.01815311012777 * GRP_MntGoldProds4 + 
-0.06619591895459 * GRP_MntMeatProducts2 + -0.09072077897467 * GRP_MntMeatProducts3 + 
0.1726695423557 * GRP_MntMeatProducts4 + -0.28636541965058 * GRP_MntWines2 + -0.02631953768864 
* GRP_MntWines3 + 0.06980122973657 * GRP_MntWines4 + 0.09645375616786 * 
GRP_NumCatalogPurchases3 + -0.41914184592159 * GRP_NumCatalogPurchases4 + 0.1854692255158 * 
GRP_NumDistPurchases2 + -0.22330441571095 * GRP_NumDistPurchases3 + 0.13028835056864 * 
GRP_NumDistPurchases4 + -0.16915625127212 * GRP_NumWebPurchases2 + -0.29991156671478 * 
GRP_NumWebPurchases3 + 0.01989579721354 * GRP_NumWebPurchases4 + -0.12351517510664 * 
GRP_RFMstat2 + 0.41722412115996 * GRP_RFMstat3 + -0.02210360437313 * GRP_RFMstat4 + 
-0.04201080178576 * GRP_RMntFrq2 + 0.21775390796319 * GRP_RMntFrq3 + 0.31823734284083 * 
GRP_RMntFrq4 + -0.53168026601605 * GRP_Recency2 + -0.3287664545088 * GRP_Recency3 + 
0.04505851470752 * GRP_Recency4 ;
464182    +   H15  = H15  +     0.13088214496598 * GRP_AcceptedCmp52
464183    +          +    -0.08389895441588 * GRP_Frq2  +     0.05379617788531 * GRP_Frq3
464184    +          +     0.05704464608157 * GRP_Frq4  +    -0.33954574127328 *
464185    +        GRP_Income2  +    -0.19537868529992 * GRP_Income3
464186    +          +     0.16339422960337 * GRP_Income4  +    -0.15103080606917 *
464187    +        GRP_Mnt2  +    -0.10359763066736 * GRP_Mnt3  +    -0.15169095818331 *
464188    +        GRP_Mnt4  +    -0.00757439653534 * GRP_MntFishProducts2
464189    +          +     0.03013301742801 * GRP_MntFishProducts3
464190    +          +     -0.0753778180106 * GRP_MntFishProducts4
464191    +          +     0.22882421007211 * GRP_MntGoldProds2
464192    +          +    -0.06369987000315 * GRP_MntGoldProds3
464193    +          +     0.09890582278559 * GRP_MntGoldProds4
464194    +          +    -0.21052640581149 * GRP_MntMeatProducts2
464195    +          +    -0.00867214697179 * GRP_MntMeatProducts3
464196    +          +     0.11929485476343 * GRP_MntMeatProducts4
464197    +          +    -0.18943631653077 * GRP_MntWines2  +     0.03539441492325 *
464198    +        GRP_MntWines3  +     0.30650819876628 * GRP_MntWines4
464199    +          +     0.06292612305453 * GRP_NumCatalogPurchases3
464200    +          +      0.2309036660938 * GRP_NumCatalogPurchases4
464201    +          +    -0.10062151440617 * GRP_NumDistPurchases2
464202    +          +       0.229091410456 * GRP_NumDistPurchases3
464203    +          +    -0.19729313017904 * GRP_NumDistPurchases4
464204    +          +    -0.04101710595215 * GRP_NumWebPurchases2
464205    +          +     0.13926341050039 * GRP_NumWebPurchases3
464206    +          +    -0.04443067825367 * GRP_NumWebPurchases4
464207    +          +     0.12014961650367 * GRP_RFMstat2  +     0.01617790323448 *
464208    +        GRP_RFMstat3  +     -0.1552934903319 * GRP_RFMstat4
464209    +          +    -0.04595909907677 * GRP_RMntFrq2  +    -0.44798863026137 *
464210    +        GRP_RMntFrq3  +     -0.0483895955721 * GRP_RMntFrq4
464211    +          +    -0.03768706422132 * GRP_Recency2  +    -0.02473503115913 *
464212    +        GRP_Recency3  +    -0.07674131244122 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.13088214496598 * GRP_AcceptedCmp52 + -0.08389895441588 * 
GRP_Frq2 + 0.05379617788531 * GRP_Frq3 + 0.05704464608157 * GRP_Frq4 + -0.33954574127328 * 
GRP_Income2 + -0.19537868529992 * GRP_Income3 + 0.16339422960337 * GRP_Income4 + 
-0.15103080606917 * GRP_Mnt2 + -0.10359763066736 * GRP_Mnt3 + -0.15169095818331 * GRP_Mnt4 + 
-0.00757439653534 * GRP_MntFishProducts2 + 0.03013301742801 * GRP_MntFishProducts3 + 
-0.0753778180106 * GRP_MntFishProducts4 + 0.22882421007211 * GRP_MntGoldProds2 + 
-0.06369987000315 * GRP_MntGoldProds3 + 0.09890582278559 * GRP_MntGoldProds4 + 
-0.21052640581149 * GRP_MntMeatProducts2 + -0.00867214697179 * GRP_MntMeatProducts3 + 
0.11929485476343 * GRP_MntMeatProducts4 + -0.18943631653077 * GRP_MntWines2 + 0.03539441492325 
* GRP_MntWines3 + 0.30650819876628 * GRP_MntWines4 + 0.06292612305453 * 
GRP_NumCatalogPurchases3 + 0.2309036660938 * GRP_NumCatalogPurchases4 + -0.10062151440617 * 
GRP_NumDistPurchases2 + 0.229091410456 * GRP_NumDistPurchases3 + -0.19729313017904 * 
GRP_NumDistPurchases4 + -0.04101710595215 * GRP_NumWebPurchases2 + 0.13926341050039 * 
GRP_NumWebPurchases3 + -0.04443067825367 * GRP_NumWebPurchases4 + 0.12014961650367 * 
GRP_RFMstat2 + 0.01617790323448 * GRP_RFMstat3 + -0.1552934903319 * GRP_RFMstat4 + 
-0.04595909907677 * GRP_RMntFrq2 + -0.44798863026137 * GRP_RMntFrq3 + -0.0483895955721 * 
GRP_RMntFrq4 + -0.03768706422132 * GRP_Recency2 + -0.02473503115913 * GRP_Recency3 + 
-0.07674131244122 * GRP_Recency4 ;
464213    +   H16  = H16  +     0.46251048250873 * GRP_AcceptedCmp52
464214    +          +    -0.00268856292377 * GRP_Frq2  +    -0.25660455566834 * GRP_Frq3
464215    +          +     0.00867022501651 * GRP_Frq4  +    -0.19509148919986 *
464216    +        GRP_Income2  +    -0.39761314772605 * GRP_Income3
464217    +          +     0.62767489359884 * GRP_Income4  +     0.12500076687539 *
464218    +        GRP_Mnt2  +    -0.21739986249936 * GRP_Mnt3  +     0.17941174570957 *
464219    +        GRP_Mnt4  +    -0.05655316560222 * GRP_MntFishProducts2
464220    +          +    -0.03224941225278 * GRP_MntFishProducts3
464221    +          +     0.12546380835809 * GRP_MntFishProducts4
464222    +          +     0.21690521778421 * GRP_MntGoldProds2
464223    +          +     0.09035550488812 * GRP_MntGoldProds3
464224    +          +    -0.03133919720822 * GRP_MntGoldProds4
464225    +          +     0.05188619692889 * GRP_MntMeatProducts2
464226    +          +    -0.04899714585321 * GRP_MntMeatProducts3
464227    +          +    -0.35752492237905 * GRP_MntMeatProducts4
464228    +          +    -0.08947041349478 * GRP_MntWines2  +      0.0265961489442 *
464229    +        GRP_MntWines3  +     0.09890393808772 * GRP_MntWines4
464230    +          +     0.45534320348836 * GRP_NumCatalogPurchases3
464231    +          +    -0.31950647452009 * GRP_NumCatalogPurchases4
464232    +          +     0.21080174299166 * GRP_NumDistPurchases2
464233    +          +     0.24874731231732 * GRP_NumDistPurchases3
464234    +          +    -0.01320035732018 * GRP_NumDistPurchases4
464235    +          +     0.17773116301115 * GRP_NumWebPurchases2
464236    +          +     0.13686106729498 * GRP_NumWebPurchases3
464237    +          +     -0.0690876840257 * GRP_NumWebPurchases4
464238    +          +     0.46273916902968 * GRP_RFMstat2  +     0.51267279380421 *
464239    +        GRP_RFMstat3  +     0.27205036954754 * GRP_RFMstat4
464240    +          +    -0.41192018310368 * GRP_RMntFrq2  +    -0.01025987166968 *
464241    +        GRP_RMntFrq3  +     0.08432669626242 * GRP_RMntFrq4
464242    +          +    -0.37569076006412 * GRP_Recency2  +    -0.09560087881071 *
464243    +        GRP_Recency3  +     0.15619501698904 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.46251048250873 * GRP_AcceptedCmp52 + -0.00268856292377 * 
GRP_Frq2 + -0.25660455566834 * GRP_Frq3 + 0.00867022501651 * GRP_Frq4 + -0.19509148919986 * 
GRP_Income2 + -0.39761314772605 * GRP_Income3 + 0.62767489359884 * GRP_Income4 + 
0.12500076687539 * GRP_Mnt2 + -0.21739986249936 * GRP_Mnt3 + 0.17941174570957 * GRP_Mnt4 + 
-0.05655316560222 * GRP_MntFishProducts2 + -0.03224941225278 * GRP_MntFishProducts3 + 
0.12546380835809 * GRP_MntFishProducts4 + 0.21690521778421 * GRP_MntGoldProds2 + 
0.09035550488812 * GRP_MntGoldProds3 + -0.03133919720822 * GRP_MntGoldProds4 + 
0.05188619692889 * GRP_MntMeatProducts2 + -0.04899714585321 * GRP_MntMeatProducts3 + 
-0.35752492237905 * GRP_MntMeatProducts4 + -0.08947041349478 * GRP_MntWines2 + 0.0265961489442 
* GRP_MntWines3 + 0.09890393808772 * GRP_MntWines4 + 0.45534320348836 * 
GRP_NumCatalogPurchases3 + -0.31950647452009 * GRP_NumCatalogPurchases4 + 0.21080174299166 * 
GRP_NumDistPurchases2 + 0.24874731231732 * GRP_NumDistPurchases3 + -0.01320035732018 * 
GRP_NumDistPurchases4 + 0.17773116301115 * GRP_NumWebPurchases2 + 0.13686106729498 * 
GRP_NumWebPurchases3 + -0.0690876840257 * GRP_NumWebPurchases4 + 0.46273916902968 * 
GRP_RFMstat2 + 0.51267279380421 * GRP_RFMstat3 + 0.27205036954754 * GRP_RFMstat4 + 
-0.41192018310368 * GRP_RMntFrq2 + -0.01025987166968 * GRP_RMntFrq3 + 0.08432669626242 * 
GRP_RMntFrq4 + -0.37569076006412 * GRP_Recency2 + -0.09560087881071 * GRP_Recency3 + 
0.15619501698904 * GRP_Recency4 ;
464244    +   H11  =     1.02277651695375 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.02277651695375 + H11 ;
464245    +   H12  =     0.30687404845149 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.30687404845149 + H12 ;
464246    +   H13  =     0.38396141006686 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.38396141006686 + H13 ;
464247    +   H14  =     0.66961227315774 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.66961227315774 + H14 ;
464248    +   H15  =     0.55149278706288 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.55149278706288 + H15 ;
464249    +   H16  =    -0.54938689657398 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.54938689657398 + H16 ;
464250    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
464251    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
464252    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
464253    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
464254    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
464255    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
464256    +END;
MPRINT(EM_DIAGRAM):   END;
464257    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
464258    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
464259    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
464260    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
464261    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
464262    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
464263    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
464264    +END;
MPRINT(EM_DIAGRAM):   END;
464265    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464266    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
464267    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464268    +
464269    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
464270    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
464271    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
464272    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
464273    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
464274    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464275    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
464276    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
464277    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
464278    +end;
MPRINT(EM_DIAGRAM):   end;
464279    +else do;
MPRINT(EM_DIAGRAM):   else do;
464280    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
464281    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
464282    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
464283    +   end;
MPRINT(EM_DIAGRAM):   end;
464284    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
464285    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
464286    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
464287    +   end;
MPRINT(EM_DIAGRAM):   end;
464288    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464289    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
464290    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
464291    +   end;
MPRINT(EM_DIAGRAM):   end;
464292    +end;
MPRINT(EM_DIAGRAM):   end;
464293    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
464294    +   P_DepVar1  =     1.19791571177519 * H11  +     1.91589058327051 * H12
464295    +          +     0.44556788800887 * H13  +    -1.25798187083564 * H14
464296    +          +    -0.40058942527791 * H15  +    -1.41542812613902 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.19791571177519 * H11 + 1.91589058327051 * H12 + 
0.44556788800887 * H13 + -1.25798187083564 * H14 + -0.40058942527791 * H15 + -1.41542812613902 
* H16 ;
464297    +   P_DepVar1  =    -2.68041503413101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.68041503413101 + P_DepVar1 ;
464298    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
464299    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
464300    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
464301    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
464302    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
464303    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
464304    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
464305    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
464306    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
464307    +END;
MPRINT(EM_DIAGRAM):   END;
464308    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
464309    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
464310    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
464311    +END;
MPRINT(EM_DIAGRAM):   END;
464312    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
464313    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
464314    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
464315    +END;
MPRINT(EM_DIAGRAM):   END;
464316    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
464317    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
464318    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
464319    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
464320    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
464321    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
464322    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
464323    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464324    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
464325    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
464326    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
464327    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
464328    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
464329    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
464330    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
464331    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
464332    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
464333    +END;
MPRINT(EM_DIAGRAM):   END;
464334    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
464335    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
464336    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
464337    +drop
464338    +H11
464339    +H12
464340    +H13
464341    +H14
464342    +H15
464343    +H16
464344    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
464345    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
464346     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL23_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
464347     quit;
464348     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
464349     filename emflow
464349   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural23: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
464350     *------------------------------------------------------------*;
464351     * Neural23: Scoring VALIDATE data;
464352     *------------------------------------------------------------*;
464353     data EMWS8.Neural23_VALIDATE
464354     / view=EMWS8.Neural23_VALIDATE
464355     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_VALIDATE / view=EMWS8.Neural23_VALIDATE ;
464356     set EMWS8.BINNING_VALIDATE
464357     ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE ;
464358     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural23\EMFLOWSCORE.sas.
464359    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
464360    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
464361    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
464362    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
464363    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
464364    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
464365    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
464366    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
464367    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
464368    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
464369    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
464370    +LENGTH _WARN_ $4
464371    +      F_DepVar  $ 12
464372    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
464373    +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
464374    +
464375    +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
464376    +
464377    +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
464378    +
464379    +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
464380    +
464381    +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
464382    +
464383    +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
464384    +
464385    +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
464386    +
464387    +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
464388    +
464389    +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
464390    +
464391    +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
464392    +
464393    +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
464394    +
464395    +      label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts2 = 'Dummy: GRP_MntFishProducts=2' ;
464396    +
464397    +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
464398    +
464399    +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
464400    +
464401    +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
464402    +
464403    +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
464404    +
464405    +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
464406    +
464407    +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
464408    +
464409    +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
464410    +
464411    +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
464412    +
464413    +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
464414    +
464415    +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
464416    +
464417    +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
464418    +
464419    +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
464420    +
464421    +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
464422    +
464423    +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
464424    +
464425    +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
464426    +
464427    +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
464428    +
464429    +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
464430    +
464431    +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
464432    +
464433    +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
464434    +
464435    +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
464436    +
464437    +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
464438    +
464439    +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
464440    +
464441    +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
464442    +
464443    +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
464444    +
464445    +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
464446    +
464447    +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
464448    +
464449    +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
464450    +
464451    +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
464452    +
464453    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
464454    +
464455    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
464456    +
464457    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
464458    +
464459    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
464460    +
464461    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
464462    +
464463    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
464464    +
464465    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
464466    +
464467    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
464468    +
464469    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
464470    +
464471    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
464472    +
464473    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
464474    +
464475    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
464476    +
464477    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
464478    +
464479    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
464480    +
464481    +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
464482    +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
464483    +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
464484    +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
464485    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464486    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464487    +end;
MPRINT(EM_DIAGRAM):   end;
464488    +else do;
MPRINT(EM_DIAGRAM):   else do;
464489    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
464490    +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
464491    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464492    +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
464493    +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
464494    +   end;
MPRINT(EM_DIAGRAM):   end;
464495    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
464496    +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
464497    +   end;
MPRINT(EM_DIAGRAM):   end;
464498    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464499    +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
464500    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464501    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464502    +   end;
MPRINT(EM_DIAGRAM):   end;
464503    +end;
MPRINT(EM_DIAGRAM):   end;
464504    +
464505    +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
464506    +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 ;
464507    +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
464508    +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
464509    +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
464510    +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
464511    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464512    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464513    +end;
MPRINT(EM_DIAGRAM):   end;
464514    +else do;
MPRINT(EM_DIAGRAM):   else do;
464515    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
464516    +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
464517    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464518    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
464519    +      GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
464520    +      GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
464521    +      GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
464522    +   end;
MPRINT(EM_DIAGRAM):   end;
464523    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
464524    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
464525    +      GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
464526    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
464527    +   end;
MPRINT(EM_DIAGRAM):   end;
464528    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
464529    +      GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
464530    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
464531    +      GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
464532    +   end;
MPRINT(EM_DIAGRAM):   end;
464533    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
464534    +      GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
464535    +      GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
464536    +      GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
464537    +   end;
MPRINT(EM_DIAGRAM):   end;
464538    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464539    +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
464540    +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
464541    +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
464542    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464543    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464544    +   end;
MPRINT(EM_DIAGRAM):   end;
464545    +end;
MPRINT(EM_DIAGRAM):   end;
464546    +
464547    +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
464548    +drop GRP_Income2 GRP_Income3 GRP_Income4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 ;
464549    +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
464550    +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
464551    +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
464552    +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
464553    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464554    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464555    +end;
MPRINT(EM_DIAGRAM):   end;
464556    +else do;
MPRINT(EM_DIAGRAM):   else do;
464557    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
464558    +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
464559    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464560    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
464561    +      GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
464562    +      GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
464563    +      GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
464564    +   end;
MPRINT(EM_DIAGRAM):   end;
464565    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
464566    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
464567    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
464568    +      GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
464569    +   end;
MPRINT(EM_DIAGRAM):   end;
464570    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
464571    +      GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
464572    +      GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
464573    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
464574    +   end;
MPRINT(EM_DIAGRAM):   end;
464575    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
464576    +      GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
464577    +      GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
464578    +      GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
464579    +   end;
MPRINT(EM_DIAGRAM):   end;
464580    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464581    +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
464582    +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
464583    +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
464584    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464585    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464586    +   end;
MPRINT(EM_DIAGRAM):   end;
464587    +end;
MPRINT(EM_DIAGRAM):   end;
464588    +
464589    +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
464590    +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 ;
464591    +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
464592    +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
464593    +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
464594    +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
464595    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464596    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464597    +end;
MPRINT(EM_DIAGRAM):   end;
464598    +else do;
MPRINT(EM_DIAGRAM):   else do;
464599    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
464600    +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
464601    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464602    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
464603    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
464604    +      GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
464605    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
464606    +   end;
MPRINT(EM_DIAGRAM):   end;
464607    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
464608    +      GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
464609    +      GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
464610    +      GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
464611    +   end;
MPRINT(EM_DIAGRAM):   end;
464612    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
464613    +      GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
464614    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
464615    +      GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
464616    +   end;
MPRINT(EM_DIAGRAM):   end;
464617    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
464618    +      GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
464619    +      GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
464620    +      GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
464621    +   end;
MPRINT(EM_DIAGRAM):   end;
464622    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464623    +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
464624    +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
464625    +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
464626    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464627    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464628    +   end;
MPRINT(EM_DIAGRAM):   end;
464629    +end;
MPRINT(EM_DIAGRAM):   end;
464630    +
464631    +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
464632    +drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts2 GRP_MntFishProducts3 GRP_MntFishProducts4 ;
464633    +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
464634    +   GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
464635    +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
464636    +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
464637    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464638    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464639    +end;
MPRINT(EM_DIAGRAM):   end;
464640    +else do;
MPRINT(EM_DIAGRAM):   else do;
464641    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
464642    +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
464643    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464644    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
464645    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
464646    +      GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
464647    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
464648    +   end;
MPRINT(EM_DIAGRAM):   end;
464649    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
464650    +      GRP_MntFishProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = -1;
464651    +      GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
464652    +      GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
464653    +   end;
MPRINT(EM_DIAGRAM):   end;
464654    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
464655    +      GRP_MntFishProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 0;
464656    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
464657    +      GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
464658    +   end;
MPRINT(EM_DIAGRAM):   end;
464659    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
464660    +      GRP_MntFishProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = 1;
464661    +      GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
464662    +      GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
464663    +   end;
MPRINT(EM_DIAGRAM):   end;
464664    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464665    +      GRP_MntFishProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts2 = .;
464666    +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
464667    +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
464668    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464669    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464670    +   end;
MPRINT(EM_DIAGRAM):   end;
464671    +end;
MPRINT(EM_DIAGRAM):   end;
464672    +
464673    +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
464674    +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 ;
464675    +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
464676    +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
464677    +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
464678    +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
464679    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464680    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464681    +end;
MPRINT(EM_DIAGRAM):   end;
464682    +else do;
MPRINT(EM_DIAGRAM):   else do;
464683    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
464684    +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
464685    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464686    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
464687    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
464688    +      GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
464689    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
464690    +   end;
MPRINT(EM_DIAGRAM):   end;
464691    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
464692    +      GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
464693    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
464694    +      GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
464695    +   end;
MPRINT(EM_DIAGRAM):   end;
464696    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
464697    +      GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
464698    +      GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
464699    +      GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
464700    +   end;
MPRINT(EM_DIAGRAM):   end;
464701    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
464702    +      GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
464703    +      GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
464704    +      GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
464705    +   end;
MPRINT(EM_DIAGRAM):   end;
464706    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464707    +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
464708    +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
464709    +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
464710    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464711    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464712    +   end;
MPRINT(EM_DIAGRAM):   end;
464713    +end;
MPRINT(EM_DIAGRAM):   end;
464714    +
464715    +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
464716    +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4 ;
464717    +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
464718    +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
464719    +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
464720    +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
464721    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464722    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464723    +end;
MPRINT(EM_DIAGRAM):   end;
464724    +else do;
MPRINT(EM_DIAGRAM):   else do;
464725    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
464726    +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
464727    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464728    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
464729    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
464730    +      GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
464731    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
464732    +   end;
MPRINT(EM_DIAGRAM):   end;
464733    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
464734    +      GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
464735    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
464736    +      GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
464737    +   end;
MPRINT(EM_DIAGRAM):   end;
464738    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
464739    +      GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
464740    +      GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
464741    +      GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
464742    +   end;
MPRINT(EM_DIAGRAM):   end;
464743    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
464744    +      GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
464745    +      GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
464746    +      GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
464747    +   end;
MPRINT(EM_DIAGRAM):   end;
464748    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464749    +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
464750    +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
464751    +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
464752    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464753    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464754    +   end;
MPRINT(EM_DIAGRAM):   end;
464755    +end;
MPRINT(EM_DIAGRAM):   end;
464756    +
464757    +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
464758    +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 ;
464759    +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
464760    +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
464761    +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
464762    +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
464763    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464764    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464765    +end;
MPRINT(EM_DIAGRAM):   end;
464766    +else do;
MPRINT(EM_DIAGRAM):   else do;
464767    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
464768    +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
464769    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464770    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
464771    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
464772    +      GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
464773    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
464774    +   end;
MPRINT(EM_DIAGRAM):   end;
464775    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
464776    +      GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
464777    +      GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
464778    +      GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
464779    +   end;
MPRINT(EM_DIAGRAM):   end;
464780    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
464781    +      GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
464782    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
464783    +      GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
464784    +   end;
MPRINT(EM_DIAGRAM):   end;
464785    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
464786    +      GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
464787    +      GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
464788    +      GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
464789    +   end;
MPRINT(EM_DIAGRAM):   end;
464790    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464791    +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
464792    +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
464793    +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
464794    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464795    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464796    +   end;
MPRINT(EM_DIAGRAM):   end;
464797    +end;
MPRINT(EM_DIAGRAM):   end;
464798    +
464799    +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
464800    +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4 ;
464801    +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
464802    +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
464803    +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
464804    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464805    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464806    +end;
MPRINT(EM_DIAGRAM):   end;
464807    +else do;
MPRINT(EM_DIAGRAM):   else do;
464808    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
464809    +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
464810    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464811    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
464812    +      GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
464813    +      GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
464814    +   end;
MPRINT(EM_DIAGRAM):   end;
464815    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
464816    +      GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
464817    +      GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
464818    +   end;
MPRINT(EM_DIAGRAM):   end;
464819    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
464820    +      GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
464821    +      GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
464822    +   end;
MPRINT(EM_DIAGRAM):   end;
464823    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464824    +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
464825    +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
464826    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464827    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464828    +   end;
MPRINT(EM_DIAGRAM):   end;
464829    +end;
MPRINT(EM_DIAGRAM):   end;
464830    +
464831    +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
464832    +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4 ;
464833    +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
464834    +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
464835    +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
464836    +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
464837    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464838    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464839    +end;
MPRINT(EM_DIAGRAM):   end;
464840    +else do;
MPRINT(EM_DIAGRAM):   else do;
464841    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
464842    +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
464843    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464844    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
464845    +      GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
464846    +      GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
464847    +      GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
464848    +   end;
MPRINT(EM_DIAGRAM):   end;
464849    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
464850    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
464851    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
464852    +      GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
464853    +   end;
MPRINT(EM_DIAGRAM):   end;
464854    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
464855    +      GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
464856    +      GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
464857    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
464858    +   end;
MPRINT(EM_DIAGRAM):   end;
464859    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
464860    +      GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
464861    +      GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
464862    +      GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
464863    +   end;
MPRINT(EM_DIAGRAM):   end;
464864    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464865    +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
464866    +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
464867    +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
464868    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464869    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464870    +   end;
MPRINT(EM_DIAGRAM):   end;
464871    +end;
MPRINT(EM_DIAGRAM):   end;
464872    +
464873    +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
464874    +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4 ;
464875    +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
464876    +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
464877    +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
464878    +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
464879    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464880    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464881    +end;
MPRINT(EM_DIAGRAM):   end;
464882    +else do;
MPRINT(EM_DIAGRAM):   else do;
464883    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
464884    +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
464885    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464886    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
464887    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
464888    +      GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
464889    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
464890    +   end;
MPRINT(EM_DIAGRAM):   end;
464891    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
464892    +      GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
464893    +      GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
464894    +      GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
464895    +   end;
MPRINT(EM_DIAGRAM):   end;
464896    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
464897    +      GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
464898    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
464899    +      GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
464900    +   end;
MPRINT(EM_DIAGRAM):   end;
464901    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
464902    +      GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
464903    +      GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
464904    +      GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
464905    +   end;
MPRINT(EM_DIAGRAM):   end;
464906    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464907    +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
464908    +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
464909    +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
464910    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464911    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464912    +   end;
MPRINT(EM_DIAGRAM):   end;
464913    +end;
MPRINT(EM_DIAGRAM):   end;
464914    +
464915    +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
464916    +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 ;
464917    +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
464918    +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
464919    +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
464920    +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
464921    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464922    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464923    +end;
MPRINT(EM_DIAGRAM):   end;
464924    +else do;
MPRINT(EM_DIAGRAM):   else do;
464925    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
464926    +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
464927    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464928    +   if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
464929    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
464930    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
464931    +      GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
464932    +   end;
MPRINT(EM_DIAGRAM):   end;
464933    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
464934    +      GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
464935    +      GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
464936    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
464937    +   end;
MPRINT(EM_DIAGRAM):   end;
464938    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
464939    +      GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
464940    +      GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
464941    +      GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
464942    +   end;
MPRINT(EM_DIAGRAM):   end;
464943    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
464944    +      GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
464945    +      GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
464946    +      GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
464947    +   end;
MPRINT(EM_DIAGRAM):   end;
464948    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464949    +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
464950    +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
464951    +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
464952    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464953    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464954    +   end;
MPRINT(EM_DIAGRAM):   end;
464955    +end;
MPRINT(EM_DIAGRAM):   end;
464956    +
464957    +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
464958    +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 ;
464959    +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
464960    +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
464961    +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
464962    +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
464963    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
464964    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464965    +end;
MPRINT(EM_DIAGRAM):   end;
464966    +else do;
MPRINT(EM_DIAGRAM):   else do;
464967    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
464968    +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
464969    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
464970    +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
464971    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
464972    +      GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
464973    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
464974    +   end;
MPRINT(EM_DIAGRAM):   end;
464975    +   else if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '5' then do;
464976    +      GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
464977    +      GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
464978    +      GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
464979    +   end;
MPRINT(EM_DIAGRAM):   end;
464980    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
464981    +      GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
464982    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
464983    +      GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
464984    +   end;
MPRINT(EM_DIAGRAM):   end;
464985    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
464986    +      GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
464987    +      GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
464988    +      GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
464989    +   end;
MPRINT(EM_DIAGRAM):   end;
464990    +   else do;
MPRINT(EM_DIAGRAM):   else do;
464991    +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
464992    +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
464993    +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
464994    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
464995    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
464996    +   end;
MPRINT(EM_DIAGRAM):   end;
464997    +end;
MPRINT(EM_DIAGRAM):   end;
464998    +
464999    +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
465000    +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 ;
465001    +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
465002    +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
465003    +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
465004    +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
465005    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
465006    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465007    +end;
MPRINT(EM_DIAGRAM):   end;
465008    +else do;
MPRINT(EM_DIAGRAM):   else do;
465009    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
465010    +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
465011    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
465012    +   if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
465013    +      GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
465014    +      GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
465015    +      GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
465016    +   end;
MPRINT(EM_DIAGRAM):   end;
465017    +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
465018    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
465019    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
465020    +      GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
465021    +   end;
MPRINT(EM_DIAGRAM):   end;
465022    +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
465023    +      GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
465024    +      GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
465025    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
465026    +   end;
MPRINT(EM_DIAGRAM):   end;
465027    +   else if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '2' then do;
465028    +      GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
465029    +      GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
465030    +      GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
465031    +   end;
MPRINT(EM_DIAGRAM):   end;
465032    +   else do;
MPRINT(EM_DIAGRAM):   else do;
465033    +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
465034    +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
465035    +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
465036    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
465037    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465038    +   end;
MPRINT(EM_DIAGRAM):   end;
465039    +end;
MPRINT(EM_DIAGRAM):   end;
465040    +
465041    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465042    +*** Checking missing input Interval
465043    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
465044    +
465045    +IF NMISS(
465046    +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
465047    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
465048    +
465049    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
465050    +END;
MPRINT(EM_DIAGRAM):   END;
465051    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465052    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
465053    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465054    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
465055    +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
465056    +END;
MPRINT(EM_DIAGRAM):   END;
465057    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
465058    +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
465059    +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
465060    +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
465061    +END;
MPRINT(EM_DIAGRAM):   END;
465062    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465063    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
465064    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465065    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465066    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
465067    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465068    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
465069    +   H11  =     0.25397263809886 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H11 = 0.25397263809886 * S_Year_Birth ;
465070    +   H12  =     0.05075762370892 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H12 = 0.05075762370892 * S_Year_Birth ;
465071    +   H13  =     0.04360472272597 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H13 = 0.04360472272597 * S_Year_Birth ;
465072    +   H14  =     0.01387196819865 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H14 = 0.01387196819865 * S_Year_Birth ;
465073    +   H15  =     0.05734148733166 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H15 = 0.05734148733166 * S_Year_Birth ;
465074    +   H16  =     0.07449261080848 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   H16 = 0.07449261080848 * S_Year_Birth ;
465075    +   H11  = H11  +    -0.13483168537737 * GRP_AcceptedCmp52
465076    +          +     0.02321007103238 * GRP_Frq2  +      0.2993754491201 * GRP_Frq3
465077    +          +     0.03188619345426 * GRP_Frq4  +     0.23837524440518 *
465078    +        GRP_Income2  +    -0.02988101686846 * GRP_Income3
465079    +          +    -0.04314945794282 * GRP_Income4  +      0.0797760707666 *
465080    +        GRP_Mnt2  +    -0.02272798443967 * GRP_Mnt3  +    -0.37386810467628 *
465081    +        GRP_Mnt4  +      0.0916244532169 * GRP_MntFishProducts2
465082    +          +    -0.08991361976323 * GRP_MntFishProducts3
465083    +          +    -0.12439533124432 * GRP_MntFishProducts4
465084    +          +    -0.38906628986229 * GRP_MntGoldProds2
465085    +          +     0.02112411721097 * GRP_MntGoldProds3
465086    +          +     0.05560214439156 * GRP_MntGoldProds4
465087    +          +     0.07558086835487 * GRP_MntMeatProducts2
465088    +          +    -0.24998452825562 * GRP_MntMeatProducts3
465089    +          +    -0.11030888417179 * GRP_MntMeatProducts4
465090    +          +     0.13229832861513 * GRP_MntWines2  +     0.50793143142609 *
465091    +        GRP_MntWines3  +    -0.26273353961061 * GRP_MntWines4
465092    +          +    -0.02587175944603 * GRP_NumCatalogPurchases3
465093    +          +    -0.07172373139956 * GRP_NumCatalogPurchases4
465094    +          +    -0.26905740590447 * GRP_NumDistPurchases2
465095    +          +     0.06889154687101 * GRP_NumDistPurchases3
465096    +          +    -0.31591167055503 * GRP_NumDistPurchases4
465097    +          +    -0.26862765566252 * GRP_NumWebPurchases2
465098    +          +     0.01579611280005 * GRP_NumWebPurchases3
465099    +          +    -0.06884702149074 * GRP_NumWebPurchases4
465100    +          +     0.19400469320488 * GRP_RFMstat2  +     0.32533875784776 *
465101    +        GRP_RFMstat3  +    -0.13730222015702 * GRP_RFMstat4
465102    +          +    -0.21360134050893 * GRP_RMntFrq2  +     0.10280382689873 *
465103    +        GRP_RMntFrq3  +    -0.16238020658392 * GRP_RMntFrq4
465104    +          +     0.38795494894841 * GRP_Recency2  +    -0.18447788823185 *
465105    +        GRP_Recency3  +    -0.44523742460939 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.13483168537737 * GRP_AcceptedCmp52 + 0.02321007103238 * 
GRP_Frq2 + 0.2993754491201 * GRP_Frq3 + 0.03188619345426 * GRP_Frq4 + 0.23837524440518 * 
GRP_Income2 + -0.02988101686846 * GRP_Income3 + -0.04314945794282 * GRP_Income4 + 
0.0797760707666 * GRP_Mnt2 + -0.02272798443967 * GRP_Mnt3 + -0.37386810467628 * GRP_Mnt4 + 
0.0916244532169 * GRP_MntFishProducts2 + -0.08991361976323 * GRP_MntFishProducts3 + 
-0.12439533124432 * GRP_MntFishProducts4 + -0.38906628986229 * GRP_MntGoldProds2 + 
0.02112411721097 * GRP_MntGoldProds3 + 0.05560214439156 * GRP_MntGoldProds4 + 0.07558086835487 
* GRP_MntMeatProducts2 + -0.24998452825562 * GRP_MntMeatProducts3 + -0.11030888417179 * 
GRP_MntMeatProducts4 + 0.13229832861513 * GRP_MntWines2 + 0.50793143142609 * GRP_MntWines3 + 
-0.26273353961061 * GRP_MntWines4 + -0.02587175944603 * GRP_NumCatalogPurchases3 + 
-0.07172373139956 * GRP_NumCatalogPurchases4 + -0.26905740590447 * GRP_NumDistPurchases2 + 
0.06889154687101 * GRP_NumDistPurchases3 + -0.31591167055503 * GRP_NumDistPurchases4 + 
-0.26862765566252 * GRP_NumWebPurchases2 + 0.01579611280005 * GRP_NumWebPurchases3 + 
-0.06884702149074 * GRP_NumWebPurchases4 + 0.19400469320488 * GRP_RFMstat2 + 0.32533875784776 
* GRP_RFMstat3 + -0.13730222015702 * GRP_RFMstat4 + -0.21360134050893 * GRP_RMntFrq2 + 
0.10280382689873 * GRP_RMntFrq3 + -0.16238020658392 * GRP_RMntFrq4 + 0.38795494894841 * 
GRP_Recency2 + -0.18447788823185 * GRP_Recency3 + -0.44523742460939 * GRP_Recency4 ;
465106    +   H12  = H12  +    -0.44240901099215 * GRP_AcceptedCmp52
465107    +          +     0.35451936529374 * GRP_Frq2  +     0.01466130191686 * GRP_Frq3
465108    +          +     0.21356077566978 * GRP_Frq4  +     0.22887565933637 *
465109    +        GRP_Income2  +     0.28123841156129 * GRP_Income3
465110    +          +    -0.30634832652689 * GRP_Income4  +     0.06733141985754 *
465111    +        GRP_Mnt2  +     0.24901181590062 * GRP_Mnt3  +     0.23926240883217 *
465112    +        GRP_Mnt4  +     0.36878256431394 * GRP_MntFishProducts2
465113    +          +    -0.03033118293022 * GRP_MntFishProducts3
465114    +          +     0.12939247483371 * GRP_MntFishProducts4
465115    +          +     -0.1948739109476 * GRP_MntGoldProds2
465116    +          +    -0.02487689041808 * GRP_MntGoldProds3
465117    +          +      0.0424854445517 * GRP_MntGoldProds4
465118    +          +    -0.77110165164491 * GRP_MntMeatProducts2
465119    +          +    -0.04188692453988 * GRP_MntMeatProducts3
465120    +          +     0.16117883521584 * GRP_MntMeatProducts4
465121    +          +     0.26607076588839 * GRP_MntWines2  +     0.08155165225431 *
465122    +        GRP_MntWines3  +     0.05320347913397 * GRP_MntWines4
465123    +          +    -0.60136669330804 * GRP_NumCatalogPurchases3
465124    +          +    -0.32571087796929 * GRP_NumCatalogPurchases4
465125    +          +    -0.82361130213661 * GRP_NumDistPurchases2
465126    +          +     0.18332361990877 * GRP_NumDistPurchases3
465127    +          +    -0.10228504756385 * GRP_NumDistPurchases4
465128    +          +     0.21492204339132 * GRP_NumWebPurchases2
465129    +          +     0.22752835090931 * GRP_NumWebPurchases3
465130    +          +    -0.04291366517536 * GRP_NumWebPurchases4
465131    +          +     -0.1860476520082 * GRP_RFMstat2  +      0.2676074141222 *
465132    +        GRP_RFMstat3  +     0.25111332591837 * GRP_RFMstat4
465133    +          +    -0.16694407619317 * GRP_RMntFrq2  +     0.21748370383635 *
465134    +        GRP_RMntFrq3  +    -0.33247097178921 * GRP_RMntFrq4
465135    +          +     0.96302825639489 * GRP_Recency2  +     0.29783943122668 *
465136    +        GRP_Recency3  +    -0.18073280365547 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.44240901099215 * GRP_AcceptedCmp52 + 0.35451936529374 * 
GRP_Frq2 + 0.01466130191686 * GRP_Frq3 + 0.21356077566978 * GRP_Frq4 + 0.22887565933637 * 
GRP_Income2 + 0.28123841156129 * GRP_Income3 + -0.30634832652689 * GRP_Income4 + 
0.06733141985754 * GRP_Mnt2 + 0.24901181590062 * GRP_Mnt3 + 0.23926240883217 * GRP_Mnt4 + 
0.36878256431394 * GRP_MntFishProducts2 + -0.03033118293022 * GRP_MntFishProducts3 + 
0.12939247483371 * GRP_MntFishProducts4 + -0.1948739109476 * GRP_MntGoldProds2 + 
-0.02487689041808 * GRP_MntGoldProds3 + 0.0424854445517 * GRP_MntGoldProds4 + 
-0.77110165164491 * GRP_MntMeatProducts2 + -0.04188692453988 * GRP_MntMeatProducts3 + 
0.16117883521584 * GRP_MntMeatProducts4 + 0.26607076588839 * GRP_MntWines2 + 0.08155165225431 
* GRP_MntWines3 + 0.05320347913397 * GRP_MntWines4 + -0.60136669330804 * 
GRP_NumCatalogPurchases3 + -0.32571087796929 * GRP_NumCatalogPurchases4 + -0.82361130213661 * 
GRP_NumDistPurchases2 + 0.18332361990877 * GRP_NumDistPurchases3 + -0.10228504756385 * 
GRP_NumDistPurchases4 + 0.21492204339132 * GRP_NumWebPurchases2 + 0.22752835090931 * 
GRP_NumWebPurchases3 + -0.04291366517536 * GRP_NumWebPurchases4 + -0.1860476520082 * 
GRP_RFMstat2 + 0.2676074141222 * GRP_RFMstat3 + 0.25111332591837 * GRP_RFMstat4 + 
-0.16694407619317 * GRP_RMntFrq2 + 0.21748370383635 * GRP_RMntFrq3 + -0.33247097178921 * 
GRP_RMntFrq4 + 0.96302825639489 * GRP_Recency2 + 0.29783943122668 * GRP_Recency3 + 
-0.18073280365547 * GRP_Recency4 ;
465137    +   H13  = H13  +     0.02391312263521 * GRP_AcceptedCmp52
465138    +          +    -0.01218158666492 * GRP_Frq2  +     0.03493150543946 * GRP_Frq3
465139    +          +    -0.19640223643897 * GRP_Frq4  +    -0.02394476100786 *
465140    +        GRP_Income2  +     0.05107107029363 * GRP_Income3
465141    +          +    -0.26596751360911 * GRP_Income4  +    -0.02628350983207 *
465142    +        GRP_Mnt2  +    -0.08273234777804 * GRP_Mnt3  +      0.2039544161917 *
465143    +        GRP_Mnt4  +     0.19888587009926 * GRP_MntFishProducts2
465144    +          +    -0.12190385526661 * GRP_MntFishProducts3
465145    +          +     0.11161376295027 * GRP_MntFishProducts4
465146    +          +     0.09536549249994 * GRP_MntGoldProds2
465147    +          +    -0.39027188388377 * GRP_MntGoldProds3
465148    +          +    -0.26960120596574 * GRP_MntGoldProds4
465149    +          +    -0.29704810464482 * GRP_MntMeatProducts2
465150    +          +    -0.17523279359181 * GRP_MntMeatProducts3
465151    +          +     0.01169006509688 * GRP_MntMeatProducts4
465152    +          +    -0.03150424899485 * GRP_MntWines2  +    -0.18135684744581 *
465153    +        GRP_MntWines3  +    -0.22282316044351 * GRP_MntWines4
465154    +          +    -0.06575154068738 * GRP_NumCatalogPurchases3
465155    +          +     0.12535793167638 * GRP_NumCatalogPurchases4
465156    +          +     0.10187760390092 * GRP_NumDistPurchases2
465157    +          +    -0.25409837313865 * GRP_NumDistPurchases3
465158    +          +    -0.28689980992526 * GRP_NumDistPurchases4
465159    +          +     0.00005909057861 * GRP_NumWebPurchases2
465160    +          +    -0.14419000341563 * GRP_NumWebPurchases3
465161    +          +     0.09095003593529 * GRP_NumWebPurchases4
465162    +          +    -0.02794941494222 * GRP_RFMstat2  +    -0.08735126371613 *
465163    +        GRP_RFMstat3  +      0.0136997814979 * GRP_RFMstat4
465164    +          +    -0.02686274413645 * GRP_RMntFrq2  +    -0.13529202759766 *
465165    +        GRP_RMntFrq3  +     0.22088337575055 * GRP_RMntFrq4
465166    +          +      0.2635440865684 * GRP_Recency2  +     0.12547691494271 *
465167    +        GRP_Recency3  +    -0.10311689817468 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02391312263521 * GRP_AcceptedCmp52 + -0.01218158666492 * 
GRP_Frq2 + 0.03493150543946 * GRP_Frq3 + -0.19640223643897 * GRP_Frq4 + -0.02394476100786 * 
GRP_Income2 + 0.05107107029363 * GRP_Income3 + -0.26596751360911 * GRP_Income4 + 
-0.02628350983207 * GRP_Mnt2 + -0.08273234777804 * GRP_Mnt3 + 0.2039544161917 * GRP_Mnt4 + 
0.19888587009926 * GRP_MntFishProducts2 + -0.12190385526661 * GRP_MntFishProducts3 + 
0.11161376295027 * GRP_MntFishProducts4 + 0.09536549249994 * GRP_MntGoldProds2 + 
-0.39027188388377 * GRP_MntGoldProds3 + -0.26960120596574 * GRP_MntGoldProds4 + 
-0.29704810464482 * GRP_MntMeatProducts2 + -0.17523279359181 * GRP_MntMeatProducts3 + 
0.01169006509688 * GRP_MntMeatProducts4 + -0.03150424899485 * GRP_MntWines2 + 
-0.18135684744581 * GRP_MntWines3 + -0.22282316044351 * GRP_MntWines4 + -0.06575154068738 * 
GRP_NumCatalogPurchases3 + 0.12535793167638 * GRP_NumCatalogPurchases4 + 0.10187760390092 * 
GRP_NumDistPurchases2 + -0.25409837313865 * GRP_NumDistPurchases3 + -0.28689980992526 * 
GRP_NumDistPurchases4 + 0.00005909057861 * GRP_NumWebPurchases2 + -0.14419000341563 * 
GRP_NumWebPurchases3 + 0.09095003593529 * GRP_NumWebPurchases4 + -0.02794941494222 * 
GRP_RFMstat2 + -0.08735126371613 * GRP_RFMstat3 + 0.0136997814979 * GRP_RFMstat4 + 
-0.02686274413645 * GRP_RMntFrq2 + -0.13529202759766 * GRP_RMntFrq3 + 0.22088337575055 * 
GRP_RMntFrq4 + 0.2635440865684 * GRP_Recency2 + 0.12547691494271 * GRP_Recency3 + 
-0.10311689817468 * GRP_Recency4 ;
465168    +   H14  = H14  +     0.41081496203789 * GRP_AcceptedCmp52
465169    +          +    -0.47313297382337 * GRP_Frq2  +     0.19313816686029 * GRP_Frq3
465170    +          +     0.41736322582944 * GRP_Frq4  +    -0.28916219130566 *
465171    +        GRP_Income2  +     0.14505600514674 * GRP_Income3
465172    +          +    -0.04580645427966 * GRP_Income4  +    -0.19949742172257 *
465173    +        GRP_Mnt2  +     0.27329529634974 * GRP_Mnt3  +     0.33404292971179 *
465174    +        GRP_Mnt4  +    -0.37521460360102 * GRP_MntFishProducts2
465175    +          +    -0.14631724639492 * GRP_MntFishProducts3
465176    +          +     0.10002979979527 * GRP_MntFishProducts4
465177    +          +    -0.09816985850711 * GRP_MntGoldProds2
465178    +          +    -0.12203012318985 * GRP_MntGoldProds3
465179    +          +    -0.01815311012777 * GRP_MntGoldProds4
465180    +          +    -0.06619591895459 * GRP_MntMeatProducts2
465181    +          +    -0.09072077897467 * GRP_MntMeatProducts3
465182    +          +      0.1726695423557 * GRP_MntMeatProducts4
465183    +          +    -0.28636541965058 * GRP_MntWines2  +    -0.02631953768864 *
465184    +        GRP_MntWines3  +     0.06980122973657 * GRP_MntWines4
465185    +          +     0.09645375616786 * GRP_NumCatalogPurchases3
465186    +          +    -0.41914184592159 * GRP_NumCatalogPurchases4
465187    +          +      0.1854692255158 * GRP_NumDistPurchases2
465188    +          +    -0.22330441571095 * GRP_NumDistPurchases3
465189    +          +     0.13028835056864 * GRP_NumDistPurchases4
465190    +          +    -0.16915625127212 * GRP_NumWebPurchases2
465191    +          +    -0.29991156671478 * GRP_NumWebPurchases3
465192    +          +     0.01989579721354 * GRP_NumWebPurchases4
465193    +          +    -0.12351517510664 * GRP_RFMstat2  +     0.41722412115996 *
465194    +        GRP_RFMstat3  +    -0.02210360437313 * GRP_RFMstat4
465195    +          +    -0.04201080178576 * GRP_RMntFrq2  +     0.21775390796319 *
465196    +        GRP_RMntFrq3  +     0.31823734284083 * GRP_RMntFrq4
465197    +          +    -0.53168026601605 * GRP_Recency2  +     -0.3287664545088 *
465198    +        GRP_Recency3  +     0.04505851470752 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.41081496203789 * GRP_AcceptedCmp52 + -0.47313297382337 * 
GRP_Frq2 + 0.19313816686029 * GRP_Frq3 + 0.41736322582944 * GRP_Frq4 + -0.28916219130566 * 
GRP_Income2 + 0.14505600514674 * GRP_Income3 + -0.04580645427966 * GRP_Income4 + 
-0.19949742172257 * GRP_Mnt2 + 0.27329529634974 * GRP_Mnt3 + 0.33404292971179 * GRP_Mnt4 + 
-0.37521460360102 * GRP_MntFishProducts2 + -0.14631724639492 * GRP_MntFishProducts3 + 
0.10002979979527 * GRP_MntFishProducts4 + -0.09816985850711 * GRP_MntGoldProds2 + 
-0.12203012318985 * GRP_MntGoldProds3 + -0.01815311012777 * GRP_MntGoldProds4 + 
-0.06619591895459 * GRP_MntMeatProducts2 + -0.09072077897467 * GRP_MntMeatProducts3 + 
0.1726695423557 * GRP_MntMeatProducts4 + -0.28636541965058 * GRP_MntWines2 + -0.02631953768864 
* GRP_MntWines3 + 0.06980122973657 * GRP_MntWines4 + 0.09645375616786 * 
GRP_NumCatalogPurchases3 + -0.41914184592159 * GRP_NumCatalogPurchases4 + 0.1854692255158 * 
GRP_NumDistPurchases2 + -0.22330441571095 * GRP_NumDistPurchases3 + 0.13028835056864 * 
GRP_NumDistPurchases4 + -0.16915625127212 * GRP_NumWebPurchases2 + -0.29991156671478 * 
GRP_NumWebPurchases3 + 0.01989579721354 * GRP_NumWebPurchases4 + -0.12351517510664 * 
GRP_RFMstat2 + 0.41722412115996 * GRP_RFMstat3 + -0.02210360437313 * GRP_RFMstat4 + 
-0.04201080178576 * GRP_RMntFrq2 + 0.21775390796319 * GRP_RMntFrq3 + 0.31823734284083 * 
GRP_RMntFrq4 + -0.53168026601605 * GRP_Recency2 + -0.3287664545088 * GRP_Recency3 + 
0.04505851470752 * GRP_Recency4 ;
465199    +   H15  = H15  +     0.13088214496598 * GRP_AcceptedCmp52
465200    +          +    -0.08389895441588 * GRP_Frq2  +     0.05379617788531 * GRP_Frq3
465201    +          +     0.05704464608157 * GRP_Frq4  +    -0.33954574127328 *
465202    +        GRP_Income2  +    -0.19537868529992 * GRP_Income3
465203    +          +     0.16339422960337 * GRP_Income4  +    -0.15103080606917 *
465204    +        GRP_Mnt2  +    -0.10359763066736 * GRP_Mnt3  +    -0.15169095818331 *
465205    +        GRP_Mnt4  +    -0.00757439653534 * GRP_MntFishProducts2
465206    +          +     0.03013301742801 * GRP_MntFishProducts3
465207    +          +     -0.0753778180106 * GRP_MntFishProducts4
465208    +          +     0.22882421007211 * GRP_MntGoldProds2
465209    +          +    -0.06369987000315 * GRP_MntGoldProds3
465210    +          +     0.09890582278559 * GRP_MntGoldProds4
465211    +          +    -0.21052640581149 * GRP_MntMeatProducts2
465212    +          +    -0.00867214697179 * GRP_MntMeatProducts3
465213    +          +     0.11929485476343 * GRP_MntMeatProducts4
465214    +          +    -0.18943631653077 * GRP_MntWines2  +     0.03539441492325 *
465215    +        GRP_MntWines3  +     0.30650819876628 * GRP_MntWines4
465216    +          +     0.06292612305453 * GRP_NumCatalogPurchases3
465217    +          +      0.2309036660938 * GRP_NumCatalogPurchases4
465218    +          +    -0.10062151440617 * GRP_NumDistPurchases2
465219    +          +       0.229091410456 * GRP_NumDistPurchases3
465220    +          +    -0.19729313017904 * GRP_NumDistPurchases4
465221    +          +    -0.04101710595215 * GRP_NumWebPurchases2
465222    +          +     0.13926341050039 * GRP_NumWebPurchases3
465223    +          +    -0.04443067825367 * GRP_NumWebPurchases4
465224    +          +     0.12014961650367 * GRP_RFMstat2  +     0.01617790323448 *
465225    +        GRP_RFMstat3  +     -0.1552934903319 * GRP_RFMstat4
465226    +          +    -0.04595909907677 * GRP_RMntFrq2  +    -0.44798863026137 *
465227    +        GRP_RMntFrq3  +     -0.0483895955721 * GRP_RMntFrq4
465228    +          +    -0.03768706422132 * GRP_Recency2  +    -0.02473503115913 *
465229    +        GRP_Recency3  +    -0.07674131244122 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.13088214496598 * GRP_AcceptedCmp52 + -0.08389895441588 * 
GRP_Frq2 + 0.05379617788531 * GRP_Frq3 + 0.05704464608157 * GRP_Frq4 + -0.33954574127328 * 
GRP_Income2 + -0.19537868529992 * GRP_Income3 + 0.16339422960337 * GRP_Income4 + 
-0.15103080606917 * GRP_Mnt2 + -0.10359763066736 * GRP_Mnt3 + -0.15169095818331 * GRP_Mnt4 + 
-0.00757439653534 * GRP_MntFishProducts2 + 0.03013301742801 * GRP_MntFishProducts3 + 
-0.0753778180106 * GRP_MntFishProducts4 + 0.22882421007211 * GRP_MntGoldProds2 + 
-0.06369987000315 * GRP_MntGoldProds3 + 0.09890582278559 * GRP_MntGoldProds4 + 
-0.21052640581149 * GRP_MntMeatProducts2 + -0.00867214697179 * GRP_MntMeatProducts3 + 
0.11929485476343 * GRP_MntMeatProducts4 + -0.18943631653077 * GRP_MntWines2 + 0.03539441492325 
* GRP_MntWines3 + 0.30650819876628 * GRP_MntWines4 + 0.06292612305453 * 
GRP_NumCatalogPurchases3 + 0.2309036660938 * GRP_NumCatalogPurchases4 + -0.10062151440617 * 
GRP_NumDistPurchases2 + 0.229091410456 * GRP_NumDistPurchases3 + -0.19729313017904 * 
GRP_NumDistPurchases4 + -0.04101710595215 * GRP_NumWebPurchases2 + 0.13926341050039 * 
GRP_NumWebPurchases3 + -0.04443067825367 * GRP_NumWebPurchases4 + 0.12014961650367 * 
GRP_RFMstat2 + 0.01617790323448 * GRP_RFMstat3 + -0.1552934903319 * GRP_RFMstat4 + 
-0.04595909907677 * GRP_RMntFrq2 + -0.44798863026137 * GRP_RMntFrq3 + -0.0483895955721 * 
GRP_RMntFrq4 + -0.03768706422132 * GRP_Recency2 + -0.02473503115913 * GRP_Recency3 + 
-0.07674131244122 * GRP_Recency4 ;
465230    +   H16  = H16  +     0.46251048250873 * GRP_AcceptedCmp52
465231    +          +    -0.00268856292377 * GRP_Frq2  +    -0.25660455566834 * GRP_Frq3
465232    +          +     0.00867022501651 * GRP_Frq4  +    -0.19509148919986 *
465233    +        GRP_Income2  +    -0.39761314772605 * GRP_Income3
465234    +          +     0.62767489359884 * GRP_Income4  +     0.12500076687539 *
465235    +        GRP_Mnt2  +    -0.21739986249936 * GRP_Mnt3  +     0.17941174570957 *
465236    +        GRP_Mnt4  +    -0.05655316560222 * GRP_MntFishProducts2
465237    +          +    -0.03224941225278 * GRP_MntFishProducts3
465238    +          +     0.12546380835809 * GRP_MntFishProducts4
465239    +          +     0.21690521778421 * GRP_MntGoldProds2
465240    +          +     0.09035550488812 * GRP_MntGoldProds3
465241    +          +    -0.03133919720822 * GRP_MntGoldProds4
465242    +          +     0.05188619692889 * GRP_MntMeatProducts2
465243    +          +    -0.04899714585321 * GRP_MntMeatProducts3
465244    +          +    -0.35752492237905 * GRP_MntMeatProducts4
465245    +          +    -0.08947041349478 * GRP_MntWines2  +      0.0265961489442 *
465246    +        GRP_MntWines3  +     0.09890393808772 * GRP_MntWines4
465247    +          +     0.45534320348836 * GRP_NumCatalogPurchases3
465248    +          +    -0.31950647452009 * GRP_NumCatalogPurchases4
465249    +          +     0.21080174299166 * GRP_NumDistPurchases2
465250    +          +     0.24874731231732 * GRP_NumDistPurchases3
465251    +          +    -0.01320035732018 * GRP_NumDistPurchases4
465252    +          +     0.17773116301115 * GRP_NumWebPurchases2
465253    +          +     0.13686106729498 * GRP_NumWebPurchases3
465254    +          +     -0.0690876840257 * GRP_NumWebPurchases4
465255    +          +     0.46273916902968 * GRP_RFMstat2  +     0.51267279380421 *
465256    +        GRP_RFMstat3  +     0.27205036954754 * GRP_RFMstat4
465257    +          +    -0.41192018310368 * GRP_RMntFrq2  +    -0.01025987166968 *
465258    +        GRP_RMntFrq3  +     0.08432669626242 * GRP_RMntFrq4
465259    +          +    -0.37569076006412 * GRP_Recency2  +    -0.09560087881071 *
465260    +        GRP_Recency3  +     0.15619501698904 * GRP_Recency4 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.46251048250873 * GRP_AcceptedCmp52 + -0.00268856292377 * 
GRP_Frq2 + -0.25660455566834 * GRP_Frq3 + 0.00867022501651 * GRP_Frq4 + -0.19509148919986 * 
GRP_Income2 + -0.39761314772605 * GRP_Income3 + 0.62767489359884 * GRP_Income4 + 
0.12500076687539 * GRP_Mnt2 + -0.21739986249936 * GRP_Mnt3 + 0.17941174570957 * GRP_Mnt4 + 
-0.05655316560222 * GRP_MntFishProducts2 + -0.03224941225278 * GRP_MntFishProducts3 + 
0.12546380835809 * GRP_MntFishProducts4 + 0.21690521778421 * GRP_MntGoldProds2 + 
0.09035550488812 * GRP_MntGoldProds3 + -0.03133919720822 * GRP_MntGoldProds4 + 
0.05188619692889 * GRP_MntMeatProducts2 + -0.04899714585321 * GRP_MntMeatProducts3 + 
-0.35752492237905 * GRP_MntMeatProducts4 + -0.08947041349478 * GRP_MntWines2 + 0.0265961489442 
* GRP_MntWines3 + 0.09890393808772 * GRP_MntWines4 + 0.45534320348836 * 
GRP_NumCatalogPurchases3 + -0.31950647452009 * GRP_NumCatalogPurchases4 + 0.21080174299166 * 
GRP_NumDistPurchases2 + 0.24874731231732 * GRP_NumDistPurchases3 + -0.01320035732018 * 
GRP_NumDistPurchases4 + 0.17773116301115 * GRP_NumWebPurchases2 + 0.13686106729498 * 
GRP_NumWebPurchases3 + -0.0690876840257 * GRP_NumWebPurchases4 + 0.46273916902968 * 
GRP_RFMstat2 + 0.51267279380421 * GRP_RFMstat3 + 0.27205036954754 * GRP_RFMstat4 + 
-0.41192018310368 * GRP_RMntFrq2 + -0.01025987166968 * GRP_RMntFrq3 + 0.08432669626242 * 
GRP_RMntFrq4 + -0.37569076006412 * GRP_Recency2 + -0.09560087881071 * GRP_Recency3 + 
0.15619501698904 * GRP_Recency4 ;
465261    +   H11  =     1.02277651695375 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.02277651695375 + H11 ;
465262    +   H12  =     0.30687404845149 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.30687404845149 + H12 ;
465263    +   H13  =     0.38396141006686 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.38396141006686 + H13 ;
465264    +   H14  =     0.66961227315774 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.66961227315774 + H14 ;
465265    +   H15  =     0.55149278706288 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.55149278706288 + H15 ;
465266    +   H16  =    -0.54938689657398 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.54938689657398 + H16 ;
465267    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
465268    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
465269    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
465270    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
465271    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
465272    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
465273    +END;
MPRINT(EM_DIAGRAM):   END;
465274    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
465275    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
465276    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
465277    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
465278    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
465279    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
465280    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
465281    +END;
MPRINT(EM_DIAGRAM):   END;
465282    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465283    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
465284    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465285    +
465286    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
465287    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
465288    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
465289    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
465290    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
465291    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
465292    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
465293    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
465294    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
465295    +end;
MPRINT(EM_DIAGRAM):   end;
465296    +else do;
MPRINT(EM_DIAGRAM):   else do;
465297    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
465298    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
465299    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
465300    +   end;
MPRINT(EM_DIAGRAM):   end;
465301    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
465302    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
465303    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
465304    +   end;
MPRINT(EM_DIAGRAM):   end;
465305    +   else do;
MPRINT(EM_DIAGRAM):   else do;
465306    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
465307    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
465308    +   end;
MPRINT(EM_DIAGRAM):   end;
465309    +end;
MPRINT(EM_DIAGRAM):   end;
465310    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
465311    +   P_DepVar1  =     1.19791571177519 * H11  +     1.91589058327051 * H12
465312    +          +     0.44556788800887 * H13  +    -1.25798187083564 * H14
465313    +          +    -0.40058942527791 * H15  +    -1.41542812613902 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.19791571177519 * H11 + 1.91589058327051 * H12 + 
0.44556788800887 * H13 + -1.25798187083564 * H14 + -0.40058942527791 * H15 + -1.41542812613902 
* H16 ;
465314    +   P_DepVar1  =    -2.68041503413101 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.68041503413101 + P_DepVar1 ;
465315    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
465316    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
465317    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
465318    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
465319    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
465320    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
465321    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
465322    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
465323    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
465324    +END;
MPRINT(EM_DIAGRAM):   END;
465325    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
465326    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
465327    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
The SAS System

465328    +END;
MPRINT(EM_DIAGRAM):   END;
465329    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
465330    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
465331    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
465332    +END;
MPRINT(EM_DIAGRAM):   END;
465333    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
465334    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
465335    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
465336    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
465337    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
465338    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
465339    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
465340    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465341    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
465342    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
465343    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
465344    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
465345    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
465346    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
465347    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
465348    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
465349    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
465350    +END;
MPRINT(EM_DIAGRAM):   END;
465351    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
465352    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
465353    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
465354    +drop
465355    +H11
465356    +H12
465357    +H13
465358    +H14
465359    +H15
465360    +H16
465361    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
465362    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
465363     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL23_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
465364     quit;
465365     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
465366     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
465367     * Neural23: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural23: Computing metadata for TRAIN data;
465368     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL23_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural23\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural23_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural23_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural23_TRAIN out=WORK.M11KPQEL noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M11KPQEL;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M11KPQEL(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M11KPQEL;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M11KPQEL;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M11W5VC6 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M11W5VC6;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M11W5VC6;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2_7_PN2(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M11W5VC6;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M11W5VC6;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M11W5VC6;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M11W5VC6;
MPRINT(EMADVISECOLUMNS):   set WORK.M11W5VC6;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural23";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural23";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural23";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural23: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
465680     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
465681     set EMWS8.Neural23_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_EMINFO;
465682     where DATA='Neural23' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural23' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
465683     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL23_EMINFO.
      WHERE (DATA='Neural23') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

465684     data EMWS8.Neural23_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural23_EMINFO;
465685     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
465686     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
465687     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL23_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
465691     run;
465692     data EMWS8.Neural23_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_EMINFO;
465693     set EMWS8.Neural23_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural23_EMINFO WORK.MODELTEMP_INFO;
465694     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL23_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL23_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

465695     proc sort data = EMWS8.Neural23_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural23_EMINFO NOTHREADS;
465696     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
465697     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL23_EMINFO.
NOTE: The data set EMWS8.NEURAL23_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

465698     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
465699     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
465700     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

465701     proc sort data = EMWS8.Neural23_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural23_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
465702     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
465703     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL23_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

465704     data EMWS8.Neural23_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural23_EMINFO;
465705     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
465706     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
465707     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL23_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

465708     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
465709     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
465710     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
465711     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL23_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL23_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
